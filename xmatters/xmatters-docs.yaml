resources:
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: links
- name: form_reference
  endpoint:
    path: /forms
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: myBooleanProperty
- name: recipient_trigger
  endpoint:
    path: /recipients
    method: GET
    data_selector: id
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: specific_form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: create_group
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: modify_group
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formId}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: records
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: records
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /api/xm/1/scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: ''
    params: {}
- name: attachment
  endpoint:
    path: /api/xm/1/scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: get_service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /api/xm/1/sites
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: get_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: upload_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: audits
  endpoint:
    path: /api/xm/1/audits
    method: GET
    data_selector: data
    params:
      eventId: a7ab8012-0583-4e5b-a5dd-36f67ec016f3
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
    params: {}
- name: event_suppressions
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: update_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: count
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: ''
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: response
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params:
      id: string
      name: string
      country: string
      language: string
      timezone: string
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: type
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: id
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: records
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: get_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_by_id
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: changes
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: response
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: response
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: create_event
  endpoint:
    path: /triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointers
    method: GET
    data_selector: bridgeId
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipientTriggers
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=recipients
    method: GET
    data_selector: recipients.data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: Conference Bridge object
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: Conference Bridge object
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: Form objects
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: Form objects
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: sections
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: message_templates
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: incident_details
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: POST
    data_selector: id
- name: delete_person
  endpoint:
    path: /api/xm/1/people/{personID}
    method: DELETE
    data_selector: id
- name: get_devices
  endpoint:
    path: /api/xm/1/people/{personId}/devices
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: offset
      limit: limit
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_shift
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: id
    params: {}
- name: update_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: response
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
- name: Conference
  endpoint:
    path: /api/xm/1/conferences/{bridgeId}
    method: GET
    data_selector: type
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: count
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: access_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: null
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: null
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /api/xm/1/devices/{deviceID}
    method: GET
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: ''
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotation
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: event
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myBooleanProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responses
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: property_values
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: obtain_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library_detail
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: POST
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: plans_subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: ''
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
    params: {}
- name: active_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
    params:
      deviceStatus: ACTIVE
- name: email_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
    params:
      deviceType: EMAIL
- name: specific_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
    params:
      deviceNames: Work Phone, Home Email
- name: devices_with_timeframes
  endpoint:
    path: /devices
    method: GET
    data_selector: records
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conferences
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: body
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: body
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: targetName
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: targetName
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
      offset: '0'
      limit: '2'
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params:
      id: scenarioId
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: get_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared-library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrence
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: deleted_shift_occurrence
  endpoint:
    path: /api/xm/1/deleted_shifts
    method: GET
    data_selector: deleted_shifts
    params: {}
- name: shift_metrics
  endpoint:
    path: /api/xm/1/shift_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: repeat_escalation
  endpoint:
    path: /api/xm/1/repeat_escalation
    method: GET
    data_selector: repeatEscalation
    params: {}
- name: notify_end_of_escalation
  endpoint:
    path: /api/xm/1/notify_end_of_escalation
    method: GET
    data_selector: notifyEndOfEscalation
    params: {}
- name: site
  endpoint:
    path: /api/xm/1/sites/{site_id}
    method: GET
    data_selector: site
    params: {}
- name: all_sites
  endpoint:
    path: /api/xm/1/sites
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      offset: 0
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices
    method: POST
    data_selector: Success
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: device
  endpoint:
    path: /devices
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planID}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSections
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response_options
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_templates
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: response
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: id
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: id
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
      embed: deviceNames,propertyDefinitions,roles
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: POST
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: records
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: null
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: null
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: modify_form_section
  endpoint:
    path: /forms/89a37590-83b7-4839-aa0d-fd3550d63ab7/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{targetName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: self
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: self
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoints
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: modify_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: records
    params: {}
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: records
    params: {}
- name: set_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: records
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: response
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/shifts
    method: GET
    data_selector: shifts
- name: shift_members
  endpoint:
    path: /api/xm/1/shifts/{shift_id}/members
    method: GET
    data_selector: members
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: temporary_absence
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: POST
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
- name: get_change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: get_device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: id
    params:
      embed: timeframes
- name: get_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
- name: conference
  endpoint:
    path: /conferences
    method: GET
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: name
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: ''
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{name}
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: group
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: supervisors
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: null
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: null
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library_by_id
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group_name}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site_by_name
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: targetDeviceNames
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages.data
- name: user_delivery_data
  endpoint:
    path: /user-deliveries
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/89a37590-83b7-4839-aa0d-fd3550d63ab7/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: 'true'
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: group
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: POST
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
- name: on-call
  endpoint:
    path: /api/xm/1/on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change_detail
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: change
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: conferences
  endpoint:
    path: /api/xm/1/conferences
    method: GET
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planID}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: ''
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: ''
    params: {}
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
    data_selector: data
    params: {}
- name: modify_group
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params:
      limit: 100
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      enabled: 'true'
      search: alert
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: ''
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      sortBy: USER_DEFINED
      sortOrder: ASCENDING
      offset: 0
      limit: 100
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: response
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params:
      id: 6c96a506-a111-4f64-81ca-859b687dd61e
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      id: 6c96a506-a111-4f64-81ca-859b687dd61e
      offset: 0
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absence
    method: POST
    data_selector: absence
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: timestamp
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: id
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: 'null'
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSections
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response.body
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formId}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /api/xm/1/plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary object
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift object
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: Shift objects
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: Member objects
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /shifts
    method: GET
    data_selector: records
- name: members
  endpoint:
    path: /shifts/{shiftId}/members
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: response
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: POST
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on_call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSections
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: self
    params: {}
- name: plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: self
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: self
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: member
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_details
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params:
      id: a01cc337-14ed-47f4-b6a9-2b7108017b7f
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params:
      allowWildcards: 'true'
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupID}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{group_id}/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: members
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: requestId
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: device_types
  endpoint:
    path: /device-names
    method: GET
    data_selector: targetDeviceNames
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/responses
    method: GET
    data_selector: responseOptions
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: specific_form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms/89a37590-83b7-4839-aa0d-fd3550d63ab7
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
      embed: observers,supervisors
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      search: alert
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: response
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: device_types
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupId}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachments
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: timestamp
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: response
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{group_name}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{group_id}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: get_assignee
  endpoint:
    path: /integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: form_scenarios
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: get_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: null
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /groups/{groupId}/shifts
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members.data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
      at: timestamp
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: body
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: body
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: get_incident
  endpoint:
    path: /incidents/{incidentId}
    method: GET
    data_selector: ''
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: obtain_access_token
  endpoint:
    path: /oauth2/token
    method: POST
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: create_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: get_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ServiceDependencyObject
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
- name: shifts_list
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /shifts
    method: GET
    data_selector: records
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: startDate
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: IT Communications
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: users_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Response
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: Response
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params:
      propertyName: Country#en
      propertyValue: USA
      priority: HIGH
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachment
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events
    method: GET
    data_selector: annotations
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id, status
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: response-options
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: get_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: records
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: self
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: self
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: property
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: get_event_annotations
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: update_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: get_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupId}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: shifts
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: users_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Annotation
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachment
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_delivery_data
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
    data_selector: response
    params:
      apiKey: '{apiKey}'
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status_change
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_annotation
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipientType
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      search: alert
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: name
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: null
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: subscriptionId
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      at: '2018-11-02T08:00:00.000Z'
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachments
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
    data_selector: trigger
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_attachment
  endpoint:
    path: /api/xm/1/events/a7ab8012-0583-4e5b-a5dd-36f67ec016f3
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/ef62b6ac-ba7e-40e8-9253-a837efcd38ea
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail_options
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/response_options
    method: GET
    data_selector: id
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference_pointer
    method: GET
    data_selector: type
- name: property_values
  endpoint:
    path: /api/xm/1/property_values
    method: GET
    data_selector: myBooleanProperty
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipientType
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms
    method: GET
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      embed: creator
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: response
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: get-services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient.id
    params:
      position: 6
      delay: 15
      escalationType: Peer
      inRotation: true
      onDuty: true
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: name
    params:
      startDate: '2024-11-01T15:00:00.000Z'
      endDate: '2024-11-01T23:30:00.000Z'
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: users_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: responseOptions.data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: sections
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: ''
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
- name: role
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenario
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: SenderPermissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: subscriptionId
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: event_trigger
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params:
      embed: recipients,scenarios
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response.body
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response-options
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: forms
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: modify_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: get_group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: get_group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: data
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: get_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
      integrationId: DataDog
- name: oauth2_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: access_token
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: specific_communication_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: created
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts
    method: GET
    data_selector: data
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share-permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params:
      absenceType: REPLACEMENT
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absence
    method: GET
    data_selector: records
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: add_comment
  endpoint:
    path: /api/xm/1/events/{event_id}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: id
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_suppressions
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences/{bridgeId}
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail_options
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/response_options
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference_pointer
    method: GET
    data_selector: conference
- name: property_values
  endpoint:
    path: /api/xm/1/property_values
    method: GET
    data_selector: properties
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
      limit: 100
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents/{incidentIdentifier}
    method: GET
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: data
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: targetName
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library_details
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: shifts
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: startDate
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: name
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: change
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: records
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: ''
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: ''
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
      devices.exists: 'false'
      devices.active.exists: 'false'
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: create_group
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: modify_group
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: group1,group2
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: person
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: devices
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /api/xm/1/plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: property
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shifts
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupId}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: name
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: null
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params:
      absenceType: REPLACEMENT
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans?embed=creator&planType=BUILT_IN&search=alert
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporaryAbsences
    method: GET
    data_selector: data
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: data
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: eventId
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{integrationID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: links.self
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params:
      limit: 100
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: integration_deletion
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: records
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: plan_property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: scheduledMessage
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupID}/occurrences
    method: GET
    data_selector: data
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: self
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: single_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: id
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params:
      absenceType: string
      member: string
      start: string
      end: string
      group: string
      replacement: string
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params:
      deviceID: string
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
      at: '2018-11-02T08:00:00.000Z'
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences/{bridgeId}
    method: GET
    data_selector: bridgeId
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: messageTemplates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms/89a37590-83b7-4839-aa0d-fd3550d63ab7
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_details
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: access_token
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    params:
      offset: '0'
      limit: '2'
- name: get_scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: get_scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_shift
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: id
    params: {}
- name: update_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: conference_bridges
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: members
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: Conference Bridge object
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: response
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change_record
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change_record
  endpoint:
    path: /changes
    method: POST
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: conference
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: links
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: modify_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: get_import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: specific_incident
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: incident
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: id
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people/mmcbride
    method: GET
    data_selector: targetName
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: count
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: get_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/Database%20Administrators/shifts
    method: POST
    data_selector: id
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: self
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params:
      id: string
      name: string
      country: string
      language: string
      timezone: string
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      offset: 0
      limit: 10
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: uploads_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Conference Bridge object
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: get_device
  endpoint:
    path: /devices/{deviceID}
    method: GET
- name: get_devices
  endpoint:
    path: /devices
    method: GET
- name: create_device
  endpoint:
    path: /devices
    method: POST
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: comment
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '{timestamp}'
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: response
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: response
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: sections
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: get_import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: get_import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: person
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: devices
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: communication_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: external_conference_bridge
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachments
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: POST
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: device
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: get_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail-options
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/response-options
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference-pointer
    method: GET
    data_selector: conference
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: incident
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration_details
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people/mmcbride
    method: GET
    data_selector: targetName
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /api/xm/1/plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: body
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: body
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: body
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: body
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: name
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: response
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: name
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: conference_bridge
  endpoint:
    path: /external/conference/bridges
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
      at: timestamp
      from: timestamp
      to: timestamp
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myBooleanProperty
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: '100'
      offset: '0'
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: conference_bridge
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{group_name}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{group_id}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: audit
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED
- name: change
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /events
    method: GET
    data_selector: links
    params: {}
- name: FormReference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conference
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{name}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params:
      limit: 100
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formId}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: person
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: devices
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: forms
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /api/xm/1/scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient.id
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: change records
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: results
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conferencePointer
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formID}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: note
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: integrations
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      id: integration_id
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params:
      id: string
      status: INACTIVE
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: plan
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params:
      position: 6
      delay: 15
      escalationType: Peer
      inRotation: true
      onDuty: true
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params:
      startDate: '2024-11-01T15:00:00.000Z'
      endDate: '2024-11-01T23:30:00.000Z'
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form object
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: PATCH
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: uploads_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: ''
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      planId: string
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params:
      planId: string
      integrationId: string
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: token
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: 'true'
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: create_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: modify_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: null
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: null
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: null
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: null
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: get_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: Shifts
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: group
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
      embed: deviceNames,propertyDefinitions,roles
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params:
      absenceType: string
      member: string
      start: string
      end: string
      group: string
      replacement: string
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change record
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event_annotation
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachment
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: form_message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: subject
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: group
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: incidentDetails
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formId}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: []
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_by_plan_and_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: response
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /api/xm/1/service-dependencies
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift_occurrence
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: deleted_shift_occurrence
  endpoint:
    path: /api/xm/1/deleted_shift_occurrence
    method: GET
    data_selector: deleted_shift
    params: {}
- name: shift_metrics
  endpoint:
    path: /api/xm/1/shift_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: repeat_escalation
  endpoint:
    path: /api/xm/1/repeat_escalation
    method: GET
    data_selector: repeatEscalation
    params: {}
- name: notify_end_of_escalation
  endpoint:
    path: /api/xm/1/notify_end_of_escalation
    method: GET
    data_selector: notifyEndOfEscalation
    params: {}
- name: site
  endpoint:
    path: /api/xm/1/sites/{site_id}
    method: GET
    data_selector: site
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: id
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: user_delivery_data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges/
    method: POST
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: responseOptions
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: messageTemplates
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: responseOptions
    params:
      offset: 0
      limit: 100
- name: form
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: form
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: records
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: records
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: response
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: response
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: response
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: body
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: get_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: form_scenarios
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: members
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: uploads_users
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: shift_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: deleted_shifts
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: null
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: null
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration_log
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}/logs
    method: GET
    data_selector: logs
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params:
      id: string
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: response
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_by_id
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupID}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: absence
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: bridgeId
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messages
- name: form_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: sections
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{targetName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: create_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: plans_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: ''
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: records
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenarios_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: members
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: create_site
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Temporary absence object
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: requestId
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id, status
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: specific_form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: sections
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: response_options
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_details
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: null
    params: {}
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{formId}/triggers
    method: POST
    data_selector: null
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people/mmcbride
    method: GET
    data_selector: targetName
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: plans
  endpoint:
    path: /plans
    method: POST
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plan_property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario by id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios for form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: serviceDependencies
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: ''
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: ''
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: count
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form object
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions list
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriber: string
      sharedWith: string
      managedBy: string
      subscriptionName: string
      subscriptionDescription: string
      subscriptionForm: string
      offset: integer
      limit: integer
- name: subscription share permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
- name: on-call
  endpoint:
    path: /api/xm/1/on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: data
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: data
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_form_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: form_response_options
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: responseOptions
    params:
      offset: '0'
      limit: '100'
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_details
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formID}/triggers
    method: POST
    data_selector: id
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: site
  endpoint:
    path: /api/xm/1/sites
    method: GET
- name: shifts
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_by_id
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: subscriptionId
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: change
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device
    params: {}
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: get_email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: propertyValues
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: groups
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: supervisors
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formID}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: on-call summary
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: person
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: property
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
    params: {}
- name: sender-permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params:
      search: string
      sortBy: string
      sortOrder: string
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: serviceDependencies
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
- name: site
  endpoint:
    path: /sites
    method: POST
- name: subscription_form
  endpoint:
    path: /subscription-forms
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: ''
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: records
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
- name: create_incident
  endpoint:
    path: /incidents
    method: POST
- name: modify_incident
  endpoint:
    path: /incidents
    method: POST
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response.body
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /api/xm/1/service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: get_services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: ShiftOccurrence
  endpoint:
    path: /api/xm/1/groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: shift
    params: {}
- name: DeletedShiftOccurrence
  endpoint:
    path: /api/xm/1/deletedShiftOccurrences
    method: GET
    data_selector: deletedShift
    params: {}
- name: ShiftMetrics
  endpoint:
    path: /api/xm/1/shiftMetrics
    method: GET
    data_selector: metrics
    params: {}
- name: RepeatEscalation
  endpoint:
    path: /api/xm/1/repeatEscalation
    method: POST
    data_selector: repeatEscalation
    params: {}
- name: NotifyEndOfEscalation
  endpoint:
    path: /api/xm/1/notifyEndOfEscalation
    method: POST
    data_selector: notifyEndOfEscalation
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscription_form
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: absenceType
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: temporary absence object
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: get_email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planID}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: forms
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_templates
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: ''
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /incidents/{id}
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenarios_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: self
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: get_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: modify_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: ''
    params: {}
- name: set_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: change
  endpoint:
    path: /changes
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device-names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: id
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: eventId
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conferencePointer
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: propertyValues
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_form_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: section
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: null
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: id
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: create_group
  endpoint:
    path: /groups
    method: POST
- name: modify_group
  endpoint:
    path: /groups
    method: POST
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
- name: get_group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formID}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_details
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      search: alert
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: get_plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints/a01cc337-14ed-47f4-b6a9-2b7108017b7f
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: trigger_event
  endpoint:
    path: /triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotation
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: event_status
  endpoint:
    path: /api/xm/1/events
    method: POST
    data_selector: id
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: annotations
  endpoint:
    path: /api/xm/1/events/{event_id}/annotations
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: targetDeviceNames
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages.data
    params: {}
- name: user_delivery_data
  endpoint:
    path: /user-deliveries
    method: GET
    data_selector: data
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: eventId
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
      limit: 100
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: Message Template Form section objects
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: ResponseOption objects
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: Form section objects
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: Created form object
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: update_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
- name: get_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params:
      absenceType: REPLACEMENT
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: targetName
    params: {}
- name: get_change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: targetName
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: eventId
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conference/{bridgeId}
    method: GET
    data_selector: type
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail/options
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/response/options
    method: GET
    data_selector: responseOptions
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response.body
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupId}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formId}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: response
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: response
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: ''
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_by_id
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: id
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device object
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /api/xm/1/device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /api/xm/1/device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName, id
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: templates
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}?embed=services
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{form_id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoints
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupID}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: single_site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: group_members
  endpoint:
    path: /group_members
    method: GET
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: Handling
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: Recipients
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: Attachments
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: Sender Overrides
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: Response Overrides
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: Email Template
  endpoint:
    path: /forms
    method: GET
    data_selector: email
    params: {}
- name: SMS Template
  endpoint:
    path: /forms
    method: GET
    data_selector: sms
    params: {}
- name: Voice Template
  endpoint:
    path: /forms
    method: GET
    data_selector: voice
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: records
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
    params:
      comment: Looking into the problem.
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params:
      id: 9102f1c3-b67b-4970-880b-05b2fc566224
      status: TERMINATED
- name: event_reference
  endpoint:
    path: /api/xm/1/events/a7ab8012-0583-4e5b-a5dd-36f67ec016f3
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/ef62b6ac-ba7e-40e8-9253-a837efcd38ea
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences/67955226
    method: GET
    data_selector: type
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /api/xm/1/forms/{formId}/sections
    method: POST
    data_selector: sections
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: POST
    data_selector: person
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plan
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: group_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      groupID: de4f1760-79c7-412f-b79e-a0219a44f0e4
      shiftID: c3165afd-2b82-4f4c-82fd-7cb3f8c403c2
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params:
      groupId: 2384a5f3-6557-4e29-9898-f9609171479e
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params:
      groupID: 1bad48fa-5eac-4c2e-aed4-fd7d4ca3f538
      shiftID: 8a63013a-870c-4f02-8afc-c174a235318d
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: data
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members.data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: conference
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: bridge
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: bridge
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges/
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms/89a37590-83b7-4839-aa0d-fd3550d63ab7
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: incident
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: person
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: response
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params:
      embed: members
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: members
    params:
      offset: 0
      limit: 100
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: body
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /api/xm/1/temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /api/xm/1/temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /api/xm/1/temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
- name: get_email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
- name: device_names
  endpoint:
    path: /api/xm/1/device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /api/xm/1/device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: forms
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_templates
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: records
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: ''
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupID}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shifts
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: group_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: startDate
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: temporaryAbsence
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: temporaryAbsence
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params: {}
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: records
    params: {}
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: records
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{group_name}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{group_id}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_communication_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: get_communication_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: get_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library_details
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupId}/shifts
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: name
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: uploads
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: get_device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: id
    params:
      embed: timeframes
- name: get_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: recipients,responseOptions,scenarios
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: templates
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_detail
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      embed: creator
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params:
      id: a01cc337-14ed-47f4-b6a9-2b7108017b7f
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params:
      id: a01cc337-14ed-47f4-b6a9-2b7108017b7f
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: single_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shift_list
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriber: string
      sharedWith: string
      managedBy: string
      subscriptionName: string
      subscriptionDescription: string
      subscriptionForm: string
      offset: integer
      limit: integer
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params:
      id: string
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      id: string
      offset: integer
      limit: integer
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
- name: create_change_record
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: get_device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: get_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries?at={timestamp}
    method: GET
    data_selector: data
    params:
      embed: person.properties
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: event
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: body
    params: {}
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: links
- name: form_reference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /voicemail
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /responses
    method: GET
    data_selector: responseOptions
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: message_templates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: group
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: ''
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: communication_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: form_scenarios
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /api/xm/1/service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
- name: create_service
  endpoint:
    path: /services
    method: POST
- name: modify_service
  endpoint:
    path: /services
    method: POST
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: id
    params: {}
- name: group_shifts_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: group_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
- name: add_member_to_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /api/xm/1/device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /api/xm/1/device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: messageTemplates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: createdForm
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
- name: on-call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params:
      id: '{scenarioId}'
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      groupID: de4f1760-79c7-412f-b79e-a0219a44f0e4
      shiftID: c3165afd-2b82-4f4c-82fd-7cb3f8c403c2
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params:
      groupId: 2384a5f3-6557-4e29-9898-f9609171479e
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params:
      groupID: 1bad48fa-5eac-4c2e-aed4-fd7d4ca3f538
      shiftID: 8a63013a-870c-4f02-8afc-c174a235318d
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: group
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /temporaryAbsences
    method: POST
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response_options
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_templates
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /imports
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: messages
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: specific_incident
  endpoint:
    path: /incidents/{id}
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration_detail
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /api/xm/1/on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /api/xm/1/on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /api/xm/1/people/{personID}
    method: GET
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: plan_property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: DELETE
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Person
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params:
      absenceType: string
      member: string
      start: string
      end: string
      group: string
      replacement: string
      includeDirectNotifications: boolean
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemail
    method: GET
    data_selector: retry
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responses
    method: GET
    data_selector: number
    params: {}
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: type
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params:
      embed: recipients,scenarios
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: create_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSection
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: response-options
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: links.self
    params:
      offset: 0
      limit: 100
- name: form
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: links.self
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{group_name}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: response
    params: {}
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{id}/triggers
    method: POST
    data_selector: response
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
      integrationId: DataDog
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: Person object
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: Person object
    params: {}
- name: get_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: devices
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params:
      offset: 0
      limit: 100
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      groupId: de4f1760-79c7-412f-b79e-a0219a44f0e4
      shiftId: c3165afd-2b82-4f4c-82fd-7cb3f8c403c2
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params:
      groupId: 2384a5f3-6557-4e29-9898-f9609171479e
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params:
      groupId: 1bad48fa-5eac-4c2e-aed4-fd7d4ca3f538
      shiftId: 8a63013a-870c-4f02-8afc-c174a235318d
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      embed: deviceNames,propertyDefinitions,roles
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      sortBy: NAME
      sortOrder: ASCENDING
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /api/xm/1/temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: event_status_change
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: get_event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: get_event_attachment
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: get_user_delivery_data
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
    data_selector: trigger
    params:
      apiKey: '{apiKey}'
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conferences
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conferencePointer
- name: property_values
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: propertyValues
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: get_plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: id
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: group_shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: ''
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form object
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: subscriptionId
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/v1/imports
    method: POST
    data_selector: Person
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: device
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: recipients
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: get_import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: get_incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_details
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: response
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: group_recipients
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: property
    params:
      id: 4c37b889-26ee-1e3b-ad3c-cb5c475cb69f
      propertyType: TEXT
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: ''
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: group_shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: shifts
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: members
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: site
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_form
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: subscription_forms_in_plan
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      sortBy: NAME
      sortOrder: ASCENDING
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: Subscription Form object
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: import_jobs
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: upload_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '{timestamp}'
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myHierarchyProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipientType
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges/
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: self
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: self
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: self
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params:
      formId: 95fe8fbb-e095-4845-beb2-15d56829627b
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params:
      formId: 95fe8fbb-e095-4845-beb2-15d56829627b
- name: form
  endpoint:
    path: /api/xm/1/forms/89a37590-83b7-4839-aa0d-fd3550d63ab7
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: import_jobs
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: groups
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: supervisors
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: get_import_jobs
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /api/xm/1/service-dependencies
    method: POST
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_libraries
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift_metrics
  endpoint:
    path: /api/xm/1/shiftMetrics
    method: GET
    data_selector: metrics
- name: deleted_shift_occurrence
  endpoint:
    path: /api/xm/1/deletedShiftOccurrences
    method: GET
    data_selector: deletedShiftOccurrences
- name: repeat_escalation
  endpoint:
    path: /api/xm/1/repeatEscalations
    method: GET
    data_selector: repeatEscalation
- name: notify_end_of_escalation
  endpoint:
    path: /api/xm/1/notifyEndOfEscalations
    method: GET
    data_selector: notifyEndOfEscalation
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: get_event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: get_event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: get_user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: events
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conferencePointer
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /api/xm/1/forms/{planId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: ''
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: form
  endpoint:
    path: /api/xm/1/plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response options
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message templates
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{targetName}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_detail
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: response
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: response
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params:
      id: string
      status: INACTIVE
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoints
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenarios
  endpoint:
    path: /api/xm/1/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /api/xm/1/scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: self
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: null
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params:
      offset: 0
      limit: 100
- name: shift_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
      sortBy: NAME
      sortOrder: ASCENDING
      offset: 0
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
      sortBy: NAME
      sortOrder: ASCENDING
      offset: 0
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: import_jobs
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: messages
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: name
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: type
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipientType
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: forms
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_templates
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
      integrationId: DataDog
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: token
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: name
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriber: string
      sharedWith: string
      managedBy: string
      subscriptionName: string
      subscriptionDescription: string
      subscriptionForm: string
      offset: integer
      limit: integer
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      id: string
      offset: integer
      limit: integer
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: temporary_absence
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: temporary_absence
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form section
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: response-options
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params:
      limit: 100
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: get_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_by_id
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: Incident object
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: Conference Bridge object
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: Conference Bridge object
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: Form objects
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planID}/forms
    method: GET
    data_selector: Form objects
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: get_incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incident
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: Person object
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: Person object
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: Device object
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      search: alert
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: get_incident
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription-forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: forms_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: forms_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: self
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: person
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: devices
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /api/xm/1/plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: incident
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: null
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriptionForm: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /temporary_absences
    method: POST
    data_selector: absence
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
      at: '2018-11-02T08:00:00.000Z'
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: ''
    params: {}
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: status
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: ''
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: attach_scenario
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members.data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: specific_change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      at: '2018-11-02T08:00:00.000Z'
      from: '2019-08-09T08:00:00.000Z'
      to: '2019-08-09T17:00:00.000Z'
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: conferences
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: forms_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: forms_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{name}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: get_person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: incident
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: response
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: plans_subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /api/xm/1/on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import-messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: specific_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: get_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: get_scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
- name: attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: get_services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: absence
    params: {}
- name: incident_details
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: incident
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: targetDeviceNames
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages.data
    params: {}
- name: user_delivery_data
  endpoint:
    path: /user-deliveries
    method: GET
    data_selector: data
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: eventId
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: response
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: response
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
      at: '2018-11-02T08:00:00.000Z'
      from: '2019-08-09T08:00:00.000Z'
      to: '2019-08-09T17:00:00.000Z'
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /triggers
    method: POST
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /events/{id}
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /forms/{id}
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /conferences/{bridgeId}
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: property-definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: single_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Integration objects
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
- name: get_device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: id
- name: get_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotation
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: event
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: Form objects
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: Message template
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: create_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: modify_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: on-call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      embed: creator
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /api/xm/1/temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: integration
  endpoint:
    path: /api/xm/1/plans/0482202f-bc59-4f4d-a5c7-4a451c5f80ac/integrations
    method: POST
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: events_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: count
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
- name: get_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
- name: modify_person
  endpoint:
    path: /people
    method: POST
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenarios
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachments
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: get_services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: members
- name: shift_member
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Integration object
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: id
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params:
      formId: 95fe8fbb-e095-4845-beb2-15d56829627b
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params:
      formId: 95fe8fbb-e095-4845-beb2-15d56829627b
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: update_scenario
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}
    method: PUT
    data_selector: id
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
- name: set_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group_name}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: specific_change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
      at: '2019-11-13T21:48:51Z'
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: trigger_event
  endpoint:
    path: /{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conference
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration_delete
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/mmcbride
    method: GET
    data_selector: '{}'
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: id
    params: {}
- name: get_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: get_scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: SenderPermission
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: targetName
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/de4f1760-79c7-412f-b79e-a0219a44f0e4/shifts/c3165afd-2b82-4f4c-82fd-7cb3f8c403c2/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
- name: members
  endpoint:
    path: /groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: single_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /api/xm/1/devices/{deviceID}
    method: GET
    data_selector: device
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
      at: '{timestamp}'
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: createdTemplate
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: update_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: self
    params: {}
- name: imports
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
- name: create_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
- name: modify_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: null
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupId}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: null
    params:
      grant_type: password
      client_id: 7469ebe0-4dff-4a1b-84fe-0d1b3baf9dcf
      username: username
      password: password
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
- name: on-call
  endpoint:
    path: /api/xm/1/on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_name
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params:
      formId: string
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params:
      planId: string
      formId: string
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params:
      formId: string
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: recipientType
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_details
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      include: GAPS
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: {}
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constant
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: scenario_attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: ''
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shared_libraries
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: get_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: group
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: supervisors
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params:
      embed: roles
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plans
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /api/xm/1/scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 10
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries?at={timestamp}
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: conferences
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{targetName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: response
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: response
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params:
      id: constantId
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachments
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: response
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: name
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
      embed: deviceNames,propertyDefinitions,roles
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /triggers
    method: POST
    data_selector: recipients
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: event
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: null
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: null
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_details
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: propertyDefinitions
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: modify_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: set_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
- name: on_call_summary
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: IT Communications
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: Person object
    params:
      embed: roles,supervisors
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: data
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: data
- name: event
  endpoint:
    path: /events
    method: GET
- name: conference
  endpoint:
    path: /conference
    method: GET
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
- name: get_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: get_group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: get_group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people/{id}
    method: GET
    data_selector: targetName
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_plan_and_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_by_id
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: targetName
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: groups
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriber: string
      sharedWith: string
      managedBy: string
      subscriptionName: string
      subscriptionDescription: string
      subscriptionForm: string
      offset: integer
      limit: integer
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params:
      id: string
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      id: string
      offset: integer
      limit: integer
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change record
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: conference bridge object
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: conference bridge object
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: Create Form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: Create Message Template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: modify_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: response-options
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: links.self
    params:
      offset: 0
      limit: 100
- name: form
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: links.self
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{formId}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people/mmcbride
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: communication_plan
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: upload_user
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: event_reference
  endpoint:
    path: /api/xm/1/events/a7ab8012-0583-4e5b-a5dd-36f67ec016f3
    method: GET
    data_selector: self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/ef62b6ac-ba7e-40e8-9253-a837efcd38ea
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences/67955226
    method: GET
    data_selector: type
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: bridgeId
- name: property_values
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
- name: recipients
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
- name: recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: Person object
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: Person object
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: Person object
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: devices
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary object
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift object
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: Shift objects
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shifts
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
- name: people
  endpoint:
    path: /api/xm/1/people
    method: DELETE
    data_selector: id
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: data
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: recipients
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: forms
  endpoint:
    path: /plans/{plan_id}/forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: group
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_by_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: ''
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: people_devices
  endpoint:
    path: /people/{username}/devices?embed=timeframes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: targetName
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: people
  endpoint:
    path: /people
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      at: '{timestamp}'
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: message_templates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_details
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: get_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts_in_group
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: DELETE
    data_selector: shift
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_by_id
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: Device objects
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: id
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params:
      otherResponseCountThreshold: 4
      expirationInMinutes: 120
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: responseOptions.data
    params:
      embed: responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: voice
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: sms
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /plans/{plan_id}/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: count
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params:
      embed: supervisors,observers,services
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: id
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formId}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
- name: communication_plan
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      embed: creator
- name: specific_communication_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
    params:
      embed: creator
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: ''
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params:
      incremental: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoints
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: none
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: get_shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /api/xm/1/sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /api/xm/1/temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /people/{person_name}/supervisors
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: Change object
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: Device object
    params:
      embed: timeframes
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: get_email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_sms_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: create_email_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: Modify form section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: Update form recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: Update sender permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: import_jobs
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: get_import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: specific_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: data
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: get_scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: response
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group_name}/shifts
    method: POST
    data_selector: null
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriber: string
      sharedWith: string
      managedBy: string
      subscriptionName: string
      subscriptionDescription: string
      subscriptionForm: string
      offset: integer
      limit: integer
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device object
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: voicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: responseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: propertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: propertyValues
- name: recipients
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/89a37590-83b7-4839-aa0d-fd3550d63ab7/sections
    method: POST
    data_selector: id
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/recipients
    method: PUT
    data_selector: count
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{formID}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /api/xm/1/on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /api/xm/1/people/{personID}
    method: GET
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_by_id
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: person
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: records
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: events_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: events_user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail_options
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/response_options
    method: GET
    data_selector: responseOptions
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: records
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: subject
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: count
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
      integrationId: DataDog
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: plan
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: response
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: get_services
  endpoint:
    path: /services
    method: GET
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary object
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift object
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: Shift object
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: members
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: ''
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans?embed=creator&planType=BUILT_IN&search=alert
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      limit: number of items to return
      offset: number of items to skip
      at: timestamp
      from: start date
      to: end date
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
      at: '{timestamp}'
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: communication_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: modify_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms/{form_id}/response-options
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisor
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents/{id}
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: fullUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: communication_plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: modify_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: set_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: message
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: Response
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: get_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call?groups=IT
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params:
      id: string
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params:
      id: string
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: property
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: ''
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: response
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: get_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: get_shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: get_members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params:
      limit: 2
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: plan_subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: change
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: specific_form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_communication_plan
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupId}/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absence
    method: GET
    data_selector: records
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: baf8ae6e-96ee-4cf7-83b2-2b89401444b1
      groups: Antares Service
      absenceType: REPLACEMENT
      from: '2020-01-01T00:00:00.000Z'
      to: '2020-01-31T00:00:00.000Z'
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: create_change
  endpoint:
    path: /changes
    method: POST
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: updated
    params: {}
- name: get_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: get_scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: modify_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: set_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: null
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: name
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: GET
    data_selector: records
- name: plan
  endpoint:
    path: /api/xm/1/plans
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
- name: conference
  endpoint:
    path: /conferences
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: specific_form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: voice
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: sms
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: incidents
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: oauth2_token
  endpoint:
    path: /oauth2/token
    method: POST
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: body
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: body
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: body
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: body
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /api/xm/1/scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupID}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /shifts
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: 6c96a506-a111-4f64-81ca-859b687dd61e
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: baf8ae6e-96ee-4cf7-83b2-2b89401444b1
      absenceType: REPLACEMENT
      from: '2020-01-01T00:00:00.000Z'
      to: '2020-01-31T00:00:00.000Z'
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences/{bridgeId}
    method: GET
    data_selector: bridgeId
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: recipients,responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms/{form_id}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formID}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people/mmcbride
    method: GET
    data_selector: targetName
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params:
      id: a01cc337-14ed-47f4-b6a9-2b7108017b7f
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: plan
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints/{endpointID}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /api/xm/1/scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: plans_constants
  endpoint:
    path: /plans/{plan_id}/constants
    method: POST
    data_selector: response
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: events_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: Conference Bridge object
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: Conference Bridge object
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: targetName
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: targetName
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: null
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: null
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formId}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: records
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      search: alert
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_plan_and_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /api/xm/1/service-dependencies
    method: POST
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: get_services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: plan_subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form object
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: absences
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: absence
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /api/xm/1/plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: change_record
  endpoint:
    path: /changes
    method: POST
- name: device
  endpoint:
    path: /devices
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/ba60cb1-3513-4320-b48a-05cb501bb5af/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /form
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: myHierarchyProperty
- name: voicemail_options
  endpoint:
    path: /voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /responseOptions
    method: GET
    data_selector: translations
- name: conference_pointer
  endpoint:
    path: /conferencePointer
    method: GET
    data_selector: type
- name: property_values
  endpoint:
    path: /propertyValues
    method: GET
    data_selector: myNumberProperty
- name: recipient_trigger
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipientType
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_note
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: oauth2_token
  endpoint:
    path: /oauth2/token
    method: POST
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: records
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: roles
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: plan
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario_details
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: json
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: json
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: json
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      incremental: onDuty
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: created_shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /groups/{group_id}/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: members
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/a2e6b439-3396-4580-8793-1565b64d417f/constants
    method: GET
    data_selector: id
    params:
      offset: '0'
      limit: '100'
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{function_id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: single_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planID}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: create_group
  endpoint:
    path: /groups
    method: POST
- name: modify_group
  endpoint:
    path: /groups
    method: POST
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
- name: get_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_details
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plan_endpoint
  endpoint:
    path: /api/xm/1/plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /api/xm/1/plans/{planId}/property-definitions
    method: GET
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient.id
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: share-permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device-names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: data
- name: eventReference
  endpoint:
    path: /events
    method: GET
    data_selector: links.self
- name: formReference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conference
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: string
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: createdMessageTemplate
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: count
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /api/xm/1/plans
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      planId: string
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params:
      planId: string
      integrationId: string
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
    data_selector: id
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params:
      search: service maintenance
      sortBy: OWNER
      sortOrder: DESCENDING
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: scheduled_message
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: members.data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
      at: '2018-11-02T08:00:00.000Z'
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /plans/{plan_id}/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender-permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: member
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{targetName}
    method: GET
    data_selector: data
    params: {}
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: plans_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: create_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
- name: modify_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
- name: plans_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: serviceId
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: create_plan
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: uploads_users_v1
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: plans_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temp_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temp_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /api/xm/1/on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status_change
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: links
- name: form_reference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /voicemail
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /responses
    method: GET
    data_selector: responseOptions
- name: recipient_trigger
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    params: {}
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: modify_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: plans
  endpoint:
    path: /plans/{plan_id}/forms/{form_id}/response-options
    method: GET
    data_selector: responseOptions
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{group_name}
    method: GET
    data_selector: targetName
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: targetName
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: self
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params:
      sortBy: LINE
      sortOrder: ASCENDING
      offset: 0
      limit: 100
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: modify_incident
  endpoint:
    path: /incidents/
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: get_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: get_scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: 8192a2ad-1531-42ab-8bfb-1eac133341a4
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params:
      planId: 512819e2-86d6-4a76-e126-b60f2c446e5d
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: temporary absences
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: GET
    data_selector: records
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: create_change
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params:
      embed: recipients,scenarios
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: messages
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: response-options
  endpoint:
    path: /response-options
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: POST
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: incidentDetails
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: triggerDetails
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: get_services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params:
      scheduledMessageId: string
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: records
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: absenceType
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{form_id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      embed: creator
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_plan_and_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: event
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: temporary_absence
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: temporary_absence
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachment
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: voicemailOptions
  endpoint:
    path: /voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: responseOptions
  endpoint:
    path: /responseOptions
    method: GET
    data_selector: responseOptions
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: conference
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: GET
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: response
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: response
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: recipient
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_note
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: 'true'
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: null
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/{planID}/property-definitions
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: null
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params:
      offset: '0'
      limit: '100'
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: share-permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: GET
    data_selector: absences
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: change
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params:
      limit: 100
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
- name: event_reference
  endpoint:
    path: /events/{id}
    method: GET
    data_selector: links.self
    params:
      id: a7ab8012-0583-4e5b-a5dd-36f67ec016f3
- name: form_reference
  endpoint:
    path: /forms/{id}
    method: GET
    data_selector: name
    params:
      id: ef62b6ac-ba7e-40e8-9253-a837efcd38ea
- name: conference
  endpoint:
    path: /conferences/{bridgeId}
    method: GET
    data_selector: bridgeId
    params:
      bridgeId: '67955226'
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /voicemail-options
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /response-options
    method: GET
    data_selector: responseOptions
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=recipients
    method: GET
    data_selector: recipients.data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: modify_form_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: modify_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
      sortBy: NAME
      sortOrder: ASCENDING
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: property-definitions
  endpoint:
    path: /plans/a2e6b439-3396-4580-8793-1565b64d417f/property-definitions
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: null
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: DELETE
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: serviceDependency
    params: {}
- name: get_services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shifts_update
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: add_shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params:
      absenceType: REPLACEMENT
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: people
  endpoint:
    path: /people
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      at: timestamp
      from: timestamp
      to: timestamp
- name: events
  endpoint:
    path: /events/{eventID}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: events
  endpoint:
    path: /events
    method: GET
- name: conference
  endpoint:
    path: /conference
    method: GET
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /plans/{plan_id}/forms
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: incidentDetails
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      embed: creator
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: targetName
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: IT Communications
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
- name: scenario
  endpoint:
    path: /api/xm/1/scenarios/{scenarioId}
    method: GET
    data_selector: id
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: requestId
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: ''
    params: {}
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: ''
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: Create Form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: Create Voice Message Template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: voice
    params: {}
- name: Create SMS Message Template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: sms
    params: {}
- name: Create Email Message Template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planID}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: scenarios
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{group_name}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{group_id}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: records
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_note
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration_delete
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: communication_plan_by_id
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plan_property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: scheduled_message
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: null
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: 8192a2ad-1531-42ab-8bfb-1eac133341a4
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params:
      planId: 512819e2-86d6-4a76-e126-b60f2c446e5d
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: user_delivery_data
    params: {}
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
    data_selector: trigger_response
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: form_reference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /voicemail-options
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /response-options
    method: GET
    data_selector: responseOptions
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: create_form
  endpoint:
    path: /api/xm/1/plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
- name: get_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: ''
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: scenario
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints/{endpointID}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_by_id
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_name
  endpoint:
    path: /sites/{siteName}
    method: GET
    data_selector: ''
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: response
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params:
      absenceType: REPLACEMENT
      member: string
      start: string
      end: string
      group: string
      replacement: string
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: targetName
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: subject
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
- name: modify_form_section
  endpoint:
    path: /forms/89a37590-83b7-4839-aa0d-fd3550d63ab7/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{formId}/triggers
    method: POST
    data_selector: requestId
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_by_id
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: uploads
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
- name: change
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
- name: responseOptions
  endpoint:
    path: /responseOptions
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: createdForm
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: createdTemplate
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: createdTemplate
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: createdTemplate
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: modify_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/89a37590-83b7-4839-aa0d-fd3550d63ab7/sections
    method: POST
    data_selector: response
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/recipients
    method: PUT
    data_selector: response
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/sender-permissions
    method: PUT
    data_selector: response
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: targetName
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: targetName
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: id
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_by_id
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: id
    params: {}
- name: incident_by_identifier
  endpoint:
    path: /api/xm/1/incidents/{incidentIdentifier}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: scenario_attachment
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: response
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms_by_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
- name: subscription_form
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: null
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: event
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: id
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: null
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: null
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration_delete
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /api/xm/1/on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /api/xm/1/people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: members.data
    params:
      offset: 0
      limit: 100
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: absence
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: absence
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: response
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '{timestamp}'
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotation
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: event
- name: event
  endpoint:
    path: /events
    method: GET
- name: form
  endpoint:
    path: /forms
    method: GET
- name: conference
  endpoint:
    path: /conferences
    method: GET
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_scenario
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: response
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: response
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{name}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: requestId
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_by_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: upload_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: upload_attachment
  endpoint:
    path: /forms/756a2021-7d79-4452-bac8-bdc287ca5c81/scenarios/9c33b67c-5d42-45a0-9eb1-c1e4fc30f5cf/attachments
    method: POST
    data_selector: name
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: triggers
  endpoint:
    path: /{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail-options
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/response-options
    method: GET
    data_selector: responseOptions
    params: {}
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference-pointer
    method: GET
    data_selector: conference
    params: {}
- name: property_values
  endpoint:
    path: /api/xm/1/property-values
    method: GET
    data_selector: properties
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: records
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
    params: {}
- name: form
  endpoint:
    path: /plans/{plan_id}/forms/{form_id}
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}?embed=services
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: ''
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: Shifts
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: site
  endpoint:
    path: /api/xm/1/sites
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriber: string
      sharedWith: string
      managedBy: string
      subscriptionName: string
      subscriptionDescription: string
      subscriptionForm: string
      offset: integer
      limit: integer
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: set_scenario_sender_permissions
  endpoint:
    path: /api/xm/1/scenarios/{scenario_id}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: upload_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: get_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: conference_bridge
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: conference_bridge
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params:
      embed: recipients,scenarios
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: update_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form
  endpoint:
    path: /plans/{plan_id}/forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
      embed: observers,supervisors
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planID}/endpoints/{endpointID}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: properties
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_plan_and_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachments
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: members
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: upload_user_data
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: data
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: id
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
      embed: observers,supervisors
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
- name: integration_logs
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}/logs
    method: GET
    data_selector: logs
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: null
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: response
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: members
    params:
      offset: '0'
      limit: '100'
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: get_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeRecord
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '{timestamp}'
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: event
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail_options
    method: GET
    data_selector: voicemail_options
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/response_options
    method: GET
    data_selector: response_options
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: templates
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: sections
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
      offset: 0
      limit: 2
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
      groupType: ON_CALL
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: ''
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: ''
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: ''
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: ''
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: id
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: serviceDependencies
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: scheduled_messages_attachments
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: null
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absences
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '{timestamp}'
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myBooleanProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responses
    method: GET
    data_selector: id
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: type
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName, id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: 'null'
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: scheduled_message
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms/{form_id}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: get_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: create_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
- name: modify_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration_delete
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: oauth2_token
  endpoint:
    path: /oauth2/token
    method: POST
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
      recipientsPerShift: 3
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: Scheduled Message
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: Delete Plan Endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params:
      id: a01cc337-14ed-47f4-b6a9-2b7108017b7f
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params:
      planId: 438e9245-b32d-445f-916bd3e07932c89
      constantId: a01cc337-14ed-47f4-b6a9-2b7108017b7f
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
- name: uploads_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachment
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: create_change
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: id
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /api/xm/1/events/a7ab8012-0583-4e5b-a5dd-36f67ec016f3
    method: GET
    data_selector: links.self
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: eventId
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myBooleanProperty
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail_options
    method: GET
    data_selector: retry
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/response_options
    method: GET
    data_selector: id
    params: {}
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference_pointer
    method: GET
    data_selector: type
    params: {}
- name: property_values
  endpoint:
    path: /api/xm/1/property_values
    method: GET
    data_selector: myBooleanProperty
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
- name: handling
  endpoint:
    path: /api/xm/1/handling
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{name}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: get_scheduled_message_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: get_services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: uploads
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: status
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device object
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachments
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: user_deliveries
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
    params: {}
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms/89a37590-83b7-4839-aa0d-fd3550d63ab7
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: results
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: null
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: name
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: response
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: get_service_by_id
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: 8192a2ad-1531-42ab-8bfb-1eac133341a4
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: temporary_absence
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: requestId
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences/{bridgeId}
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conference
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: object
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: object
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: get_roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: get_scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      groupID: de4f1760-79c7-412f-b79e-a0219a44f0e4
      shiftID: c3165afd-2b82-4f4c-82fd-7cb3f8c403c2
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params:
      groupId: 2384a5f3-6557-4e29-9898-f9609171479e
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params:
      groupID: 1bad48fa-5eac-4c2e-aed4-fd7d4ca3f538
      shiftID: 8a63013a-870c-4f02-8afc-c174a235318d
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: IT Communications
      limit: 10
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absence
    method: GET
    data_selector: records
- name: scheduled_message
  endpoint:
    path: /api/xm/1/scheduled_messages
    method: GET
    data_selector: records
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params:
      absenceType: string
      member: string
      start: string
      end: string
      group: string
      replacement: string
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device
    params: {}
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: get_email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: ''
    params: {}
- name: event_suppressions
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /conferences/{id}
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /responseOptions
    method: GET
    data_selector: responseOptions
- name: recipients
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /forms
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
      limit: 100
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /api/xm/1/on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /api/xm/1/people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library_detail
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shifts
- name: scheduled_messages
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: messages
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: name
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: null
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      embed: person.properties
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: response
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: response
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: null
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people/mmcbride
    method: GET
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: person_group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: person_supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: user_license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
- name: create_change
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: ''
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: ''
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{targetName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formID}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: communication_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_by_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
- name: set_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: response
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /service-dependencies/{id}
    method: DELETE
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
- name: audits
  endpoint:
    path: /audits
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: events_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: events_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: links
- name: form_reference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incident
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: create_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: modify_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people/mmcbride
    method: GET
    data_selector: ''
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: id
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group_name}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: ''
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 2
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: GET
    data_selector: records
- name: service_dependency
  endpoint:
    path: /api/xm/1/service_dependencies
    method: GET
    data_selector: records
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
- name: get_email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,annotations,messages,attachments.size,suppressions
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: event
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: form
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conferencePointer
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params:
      embed: supervisors,observers,services
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /api/xm/1/incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /api/xm/1/plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration_details
  endpoint:
    path: /api/xm/1/plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: serviceDependency
- name: delete_service_dependency
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts_list
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: name
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_by_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: specific_service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    params: {}
- name: email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachment
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
    params: {}
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms/{form_id}/response-options
    method: GET
    data_selector: responseOptions
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: id
- name: modify_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: id
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: recipient
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: id
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: POST
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device object
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /api/xm/1/device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /api/xm/1/device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences/{id}
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myHierarchyProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: type
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: response
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: response
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planID}/forms
    method: GET
    data_selector: data
    params:
      embed: recipients,responseOptions,scenarios
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: modify_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{name}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_details
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: incidentDetails
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: ''
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: null
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: '{}'
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: members
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: services
  endpoint:
    path: /services
    method: POST
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: ''
    params: {}
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: ''
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: eventId
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: type
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSections
    params: {}
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params:
      formId: 95fe8fbb-e095-4845-beb2-15d56829627b
- name: form
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms/{form_id}/response-options
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: get_import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: none
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: none
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupId}/shifts
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: absence
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemail-options
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/response-options
    method: GET
    data_selector: responseOptions
    params: {}
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conference-pointer
    method: GET
    data_selector: conference
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/property-values
    method: GET
    data_selector: properties
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: messageTemplate
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: ''
    params: {}
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios
    method: POST
    data_selector: name
    params: {}
- name: attachments
  endpoint:
    path: /api/xm/1/forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /api/xm/1/scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: senderType
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: none
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupId}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shifts
    params: {}
- name: shift_update
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: GET
    data_selector: absences
- name: service
  endpoint:
    path: /api/xm/1/services
    method: GET
    data_selector: services
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_name
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_type
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: records
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSections
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: ''
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: single_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_service_dependency
  endpoint:
    path: /service-dependencies/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: group
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_name
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: shared_libraries
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: id
    params: {}
- name: plans_shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: libraries
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: Change object
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_name
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
    data_selector: trigger
    params:
      apiKey: '{apiKey}'
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges
    method: POST
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridges
    params: {}
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conference
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params:
      embed: recipients,scenarios
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
      offset: 0
      limit: 100
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response options
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message templates
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: targetName
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: targetName
- name: create_group
  endpoint:
    path: /groups
    method: POST
- name: modify_group
  endpoint:
    path: /groups
    method: POST
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
- name: get_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: id
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: null
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: ''
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permission
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_subscription_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: users_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: name
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: '100'
      offset: '0'
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: links.self
    params: {}
- name: form_reference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conference
    params: {}
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
    params: {}
- name: voicemail_options
  endpoint:
    path: /voicemailOptions
    method: GET
    data_selector: voicemailOptions
    params: {}
- name: response_options
  endpoint:
    path: /responseOptions
    method: GET
    data_selector: responseOptions
    params: {}
- name: recipient_trigger
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipients
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params:
      embed: roles
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /api/xm/1/plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /api/xm/1/plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: 8192a2ad-1531-42ab-8bfb-1eac133341a4
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /api/xm/1/conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /api/xm/1/conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: conference_bridge_delete
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: recipients,responseOptions
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params:
      search: admin database
      embed: observers
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: oauth_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: null
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: null
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params:
      id: a01cc337-14ed-47f4-b6a9-2b7108017b7f
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: serviceDependencies
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: POST
    data_selector: absence
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      at: '2018-11-02T08:00:00.000Z'
      from: '2019-08-09T08:00:00.000Z'
      to: '2019-08-09T17:00:00.000Z'
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myBooleanProperty
    params: {}
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
    params: {}
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
    params: {}
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
    params: {}
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
    params: {}
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incidentDetails
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: triggerDetails
    params: {}
- name: create_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: modify_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/438e9245-b32d-445f-916bd3e07932c89/endpoints/4cb646d0-488b-4745-844d-2814058f3578
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: modify_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: upload_attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: set_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members?offset=0&limit=100
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params:
      limit: '2'
      offset: '0'
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absence
    method: POST
    data_selector: absence
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: id
    params:
      embed: timeframes
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params: {}
- name: conference
  endpoint:
    path: /conference
    method: GET
    data_selector: records
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: get_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params:
      id: 7596f0d8-89e1-49e8-b841-ada1c513417c
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      absenceType: REPLACEMENT
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: baf8ae6e-96ee-4cf7-83b2-2b89401444b1
      groups: Antares Service
      absenceType: REPLACEMENT
      from: '2018-12-01T04:00:00'
      to: '2018-12-15T04:00:00'
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
      at: '2018-11-02T08:00:00.000Z'
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: create_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: data
    params: {}
- name: modify_device_name
  endpoint:
    path: /device-names
    method: POST
    data_selector: data
    params: {}
- name: delete_device_name
  endpoint:
    path: /device-names/{deviceID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences/{bridgeId}
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: property_values
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: properties
- name: recipients
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response.body
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: responseOptions
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: incident
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: timeline_note
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{personID}'
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /shifts
    method: GET
    data_selector: shift
    params: {}
- name: deleted_shift_occurrence
  endpoint:
    path: /deleted_shifts
    method: GET
    data_selector: start
    params: {}
- name: shift_metrics
  endpoint:
    path: /shift_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: repeat_escalation
  endpoint:
    path: /repeat_escalation
    method: GET
    data_selector: repeatEscalation
    params: {}
- name: notify_end_of_escalation
  endpoint:
    path: /notify_end_of_escalation
    method: GET
    data_selector: notifyEndOfEscalation
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriptionForm: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: users_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_members_on_duty
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    params:
      onDuty: 'true'
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /api/xm/1/on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: type
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: message_templates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params:
      embed: supervisors,observers,services
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params: {}
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_details
  endpoint:
    path: /api/xm/1/incidents/{incidentID}
    method: GET
    data_selector: incidentDetails
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
      integrationId: DataDog
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planID}/endpoints/{endpointID}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shifts
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupId}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shifts
  endpoint:
    path: /groups/{group_id}/shifts
    method: GET
    data_selector: shifts
- name: shift_members
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: null
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: null
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: null
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: null
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: uploads_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- endpoint:
    path: /uploads/users-v1
    method: POST
- endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    params:
      embed: members
- endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    params:
      from: '2018-12-01T04:00:00'
      to: '2018-12-15T04:00:00'
- endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    params:
      shifts: 1ef7a91a-dde0-45e1-83b4-d95c184edc29,1bad48fa-5eac-4c2e-aed4-fd7d4ca3f538
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /shifts
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotation
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachment
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: members_in_shift
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: get_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: templates
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: sections
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params:
      formId: 95fe8fbb-e095-4845-beb2-15d56829627b
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form section
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: recipients
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: sender permissions
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
      sortBy: NAME
      sortOrder: ASCENDING
- name: imports
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: null
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: null
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: propertyDefinitions
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: members_in_a_shift
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members.data
    params:
      offset: 0
      limit: 100
- name: shift_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params:
      startDate: '2024-11-01T15:00:00.000Z'
      endDate: '2024-11-01T23:30:00.000Z'
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    params: {}
- name: users_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
- name: event
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: voicemailOptions
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: responseOptions
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: conference
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: propertyValues
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message-templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
    data_selector: id
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: obtain_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: get_shift_occurrences
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: null
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: deleted_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift_occurrence
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: records
    params:
      groupID: string
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: bridgeId
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: voice
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: sms
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: deleted_shift_occurrences
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: people_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: get_deleted_shift_occurrences
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params:
      scenarioId: string
      attachmentId: string
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params:
      formId: string
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/shifts
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: members
    params:
      offset: 0
      limit: 100
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: create_site
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: users_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      eventId: string
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: create_shift
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: get_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: create_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
- name: shifts_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: shifts_occurrences
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: group
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: shifts
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachments
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: user_deliveries
    params:
      at: timestamp
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
    data_selector: trigger_event
    params: {}
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conference
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: form
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params:
      embed: supervisors,observers,services
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: records
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formID}/triggers
    method: POST
    data_selector: records
    params: {}
- name: create_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: records
    params: {}
- name: modify_incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: records
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: 'true'
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /api/xm/1/people
    method: POST
    data_selector: targetName
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/people/{personId}/devices
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /api/xm/1/plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /api/xm/1/plans/{planId}/property-definitions
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: shift
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: id
- name: add_shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: specific_site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: records
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription form object
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions object
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: data
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: events
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conference
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
      sortBy: NAME
      sortOrder: ASCENDING
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: ''
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: communication_plan
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      enabled: 'true'
      search: alert
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: single_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
- name: create_change
  endpoint:
    path: /api/xm/1/changes
    method: POST
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /api/xm/1/device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /api/xm/1/device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: events
  endpoint:
    path: /events
    method: GET
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: get_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSection
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: data
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: group
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: results
    params:
      status: ACTIVE
- name: create_group
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: modify_group
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: delete_group
  endpoint:
    path: /api/xm/1/groups/{groupID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: supervisors
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_by_id
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: id
    params: {}
- name: incident_by_identifier
  endpoint:
    path: /incidents/{incidentIdentifier}
    method: GET
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: count
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: shift
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: auditRecords
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: id
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: type
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: response
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{form_id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: endpoint
  endpoint:
    path: /api/xm/1/plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /api/xm/1/plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /api/xm/1/plans/{planId}/property-definitions
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Permission
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      limit: integer
      offset: integer
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: null
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/IT/shifts/Daytime/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      offset: 0
      limit: 100
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: Temporary absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: ShiftOccurrence
  endpoint:
    path: /api/xm/1/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: Site
  endpoint:
    path: /api/xm/1/sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: response
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device object
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: results
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: ''
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_details
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: integration
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: integration
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: response
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_subscription_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: users
    params: {}
- name: site
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device-names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params:
      embed: properties,recipients,annotations,messages,attachments.size,suppressions
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences/{bridgeId}
    method: GET
    data_selector: type
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: count
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: member
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: oauth2_token
  endpoint:
    path: /oauth2/token
    method: POST
    data_selector: ''
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: deleted_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: Subscription Form object
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: 8192a2ad-1531-42ab-8bfb-1eac133341a4
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: null
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: get_forms
  endpoint:
    path: /forms
    method: GET
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: id
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms/{form_id}/response-options
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_by_id
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: DELETE
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_by_name
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/Database Administrators/shifts
    method: POST
    data_selector: shift
    params: {}
- name: update_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /api/xm/1/subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: string
      subscriber: string
      sharedWith: string
      managedBy: string
      subscriptionName: string
      subscriptionDescription: string
      subscriptionForm: string
      offset: integer
      limit: integer
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporaryAbsences
    method: GET
    data_selector: absences
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: targetName
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: targetName
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: device
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      at: '{timestamp}'
- name: event
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: add_comment_to_event
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
    params: {}
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: event
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: event_suppressions
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: formResponseOptions
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: responseOptions.data
    params:
      embed: responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentID}
    method: GET
    data_selector: incidentDetails
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: id
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: id
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: modify_site
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: get_scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: record
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members?offset=0&limit=100
    method: GET
    data_selector: members.data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: single_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription object
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription object
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: temporary absences
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: GET
    data_selector: records
- name: subscription_forms
  endpoint:
    path: /api/xm/1/subscription_forms
    method: GET
    data_selector: records
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /api/xm/1/device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /api/xm/1/device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event
  endpoint:
    path: /events
    method: GET
- name: conference
  endpoint:
    path: /conference
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: null
    params: {}
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: null
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: id
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: DELETE
    data_selector: id
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: shift
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: DELETE
    data_selector: id
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
- name: create_site
  endpoint:
    path: /sites
    method: POST
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: Subscription
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
      sortBy: NAME
      sortOrder: ASCENDING
      offset: 0
      limit: 2
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: ''
    params: {}
- name: event_status_change
  endpoint:
    path: /events
    method: POST
    data_selector: ''
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: type
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/{plan_id}/forms/{form_id}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: create_group
  endpoint:
    path: /groups
    method: POST
    data_selector: group
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: incident
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents/{incidentId}
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
- name: create_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
- name: modify_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: person
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: data
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: PATCH
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params:
      planId: string
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device-names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
      at: '2018-11-02T08:00:00.000Z'
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachments
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: data
    params:
      at: '2019-11-13T21:48:51Z'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
    data_selector: trigger
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: events
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: id
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: targetName
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formID}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      id: string
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: records
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: plan_property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: name
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: POST
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrence
  endpoint:
    path: /api/xm/1/groups/2384a5f3-6557-4e29-9898-f9609171479e/shifts/803c2459-94bf-4f62-9cab-c662035f1697
    method: GET
    data_selector: shift
    params: {}
- name: deleted_shift_occurrence
  endpoint:
    path: /api/xm/1/deleted_shift_occurrences
    method: GET
    data_selector: deleted_shift_occurrence
    params: {}
- name: shift_metrics
  endpoint:
    path: /api/xm/1/shift_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: repeat_escalation
  endpoint:
    path: /api/xm/1/repeat_escalation
    method: GET
    data_selector: repeatEscalation
    params: {}
- name: notify_end_of_escalation
  endpoint:
    path: /api/xm/1/notify_end_of_escalation
    method: GET
    data_selector: notifyEndOfEscalation
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: create_change
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: ''
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conferencePointer
    method: GET
    data_selector: type
- name: property_values
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipientType
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
    params: {}
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params: {}
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id, targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: response
    params: {}
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: responseOptions
    params:
      offset: 0
      limit: 100
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoints
    params: {}
- name: plans
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: property
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: get_service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shifts
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupId}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- endpoint:
    path: /uploads/users-v1
    method: POST
- endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
- endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change_record
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /api/xm/1/propertyValues
    method: POST
    data_selector: properties
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: responseOptions.data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: id
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: ''
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{formId}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: get_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: create_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_property
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: response
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params:
      id: scenarioId
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: response
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: members.data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absence
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: ''
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: subscription_form
  endpoint:
    path: /api/xm/1/subscription-forms/db962bcd-22e6-4c74-8193-93a64209051b
    method: GET
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: Device
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachments
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: userDeliveries
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: body
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: body
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: create_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: create_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: formSection
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: form
  endpoint:
    path: /plans/{plan_id}/forms/{form_id}
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
      offset: 0
      limit: 2
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: self
    params: {}
- name: supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: create_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: modify_integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: person
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: records
- name: create_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_by_id
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: id
    params: {}
- name: update_shift
  endpoint:
    path: /groups/{groupID}/shifts/
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: members
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: recipients
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: upload_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myNumberProperty
- name: VoicemailOptions
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
- name: ResponseOptions
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
- name: ConferencePointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: type
- name: PropertyValues
  endpoint:
    path: /api/xm/1/propertyValues
    method: GET
    data_selector: myBooleanProperty
- name: RecipientTrigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: id
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: email, sms, voice
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params:
      name: MIM Playbook 1
      description: Use this form for Sev-1 problems.
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: modify_message_template
  endpoint:
    path: /api/xm/1/forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: response-options
    params:
      offset: 0
      limit: 100
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupId}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupId}/members/{memberId}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on-call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: fullUsers
    params: {}
- name: subscriptions
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: data
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: get_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_by_id
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: targetName
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site_by_name
  endpoint:
    path: /sites/{siteName}
    method: GET
    data_selector: data
    params: {}
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    params:
      absenceType: REPLACEMENT
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: links.self
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{formId}
    method: GET
    data_selector: id
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: properties
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: Message Templates objects
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ResponseOptions objects
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: Form Section objects
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupId}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: self
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params:
      embed: services
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: response
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: ''
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: subscription
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group_name}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: name
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      limit: 10
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params:
      id: 6c96a506-a111-4f64-81ca-859b687dd61e
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params:
      auditType: EVENT_ANNOTATED,RESPONSE_RECEIVED
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: '100'
      offset: '0'
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      at: '2018-11-02T08:00:00.000Z'
      from: '2019-08-09T08:00:00.000Z'
      to: '2019-08-09T17:00:00.000Z'
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: data
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conferences
- name: event_suppressions
  endpoint:
    path: /api/xm/1/event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: specific_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: messageTemplates
    params:
      formId: string
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
    params:
      planId: string
      formId: string
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
    params:
      formId: string
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params:
      planId: string
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
- name: get_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: ''
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: null
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: ''
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: Scenario object
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: Attachments object
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: Scenario permissions object
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: id
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: null
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupId}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members
  endpoint:
    path: /groups/{groupId}/shifts/{shiftId}/members
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: targetName
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /api/xm/forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /api/xm/conference
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/properties
    method: GET
    data_selector: properties
- name: voicemail_options
  endpoint:
    path: /api/xm/voicemail_options
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/response_options
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/conference_pointer
    method: GET
    data_selector: conference
- name: recipient_trigger
  endpoint:
    path: /api/xm/recipient_trigger
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}?embed=responseOptions
    method: GET
    data_selector: responseOptions.data
    params: {}
- name: form_recipients
  endpoint:
    path: /plans/{planId}/forms/{formId}/recipients
    method: GET
    data_selector: recipients.data
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: response
    params: {}
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: response
    params: {}
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: form_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: recipientType
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: group
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
- name: incidents
  endpoint:
    path: /incidents
    method: GET
- name: incidents
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
    data_selector: endpoint
    params: {}
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
    data_selector: properties
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params:
      onDuty: 'true'
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members?offset=0&limit=100
    method: GET
    data_selector: members.data
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: upload_users
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: specific_change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: id
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: id
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: response
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planID}/forms
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: null
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: id
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a
    method: GET
    data_selector: data
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: modify_form_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/{groupId}/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: string
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: string
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params:
      embed: roles
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: records
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers,fullUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
- name: plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: response
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: response
    params: {}
- name: property_definitions
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: json
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: ''
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
    params: {}
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription-forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: temporary_absence
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: absence
    params:
      subscriptionId: 6c96a506-a111-4f64-81ca-859b687dd61e
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
- name: device_names
  endpoint:
    path: /device-names
    method: GET
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionId}/triggers
    method: POST
- name: triggers
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
- name: event_reference
  endpoint:
    path: /events/{id}
    method: GET
    data_selector: id
- name: form_reference
  endpoint:
    path: /forms/{id}
    method: GET
    data_selector: id
- name: conference
  endpoint:
    path: /conferences/{id}
    method: GET
    data_selector: bridgeId
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comments
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: responseOptions.data
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: data
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: create_group
  endpoint:
    path: /groups
    method: POST
- name: modify_group
  endpoint:
    path: /groups
    method: POST
- name: delete_group
  endpoint:
    path: /groups/{groupID}
    method: DELETE
- name: get_group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on-call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: get_service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
- name: sites
  endpoint:
    path: /sites
    method: GET
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absences
    method: POST
    data_selector: absenceRecords
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: null
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comment
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: form
  endpoint:
    path: /forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: incident_trigger
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params:
      id: string
- name: integration_deletion
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      planType: BUILT_IN
      search: alert
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: constant
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: get_services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: ''
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shift
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}
    method: GET
    data_selector: shift
- name: shift_members
  endpoint:
    path: /groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: ''
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      embed: deviceNames,propertyDefinitions,roles
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: ''
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /events/{id}
    method: GET
    data_selector: links.self
- name: FormReference
  endpoint:
    path: /forms/{id}
    method: GET
    data_selector: name
- name: Conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: bridgeId
- name: Properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: ResponseOptions
  endpoint:
    path: /responseOptions
    method: GET
    data_selector: responseOptions
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: body
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/89a37590-83b7-4839-aa0d-fd3550d63ab7/sections
    method: POST
    data_selector: id
    params: {}
- name: update_form_recipients
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/recipients
    method: PUT
    data_selector: data
    params: {}
- name: update_sender_permissions
  endpoint:
    path: /forms/271283e2-7a31-41f7-99a4-e81c1a58af20/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: ''
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/76b2fbf1-6eb3-4d7d-b70e-430346107676/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration_delete
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: response
    params: {}
- name: endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
- name: restore_deleted_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: data
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: site
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: null
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes object
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: event_status_change
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /events
    method: GET
- name: form_reference
  endpoint:
    path: /forms
    method: GET
- name: conference
  endpoint:
    path: /conferences
    method: GET
- name: properties
  endpoint:
    path: /properties
    method: GET
- name: voicemail_options
  endpoint:
    path: /voicemail
    method: GET
- name: response_options
  endpoint:
    path: /responses
    method: GET
- name: recipient_trigger
  endpoint:
    path: /recipients
    method: GET
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: '100'
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: ''
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: communication_plan_forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: null
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: data
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{formId}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personId}
    method: DELETE
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: ''
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: ''
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/Database%20Admins/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: members
  endpoint:
    path: /groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4/members
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: subscription
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: file
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params:
      member: string
      groups: string
      absenceType: string
      from: string
      to: string
      offset: integer
      limit: integer
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params:
      absenceType: REPLACEMENT
      member: string
      start: string
      end: string
      group: string
      replacement: string
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/ba60cb1-3513-4320-b48a-05cb501bb5af/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotation
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: event_reference
  endpoint:
    path: /events/{id}
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /forms/{id}
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /conferences/{id}
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: myHierarchyProperty
- name: voicemail_options
  endpoint:
    path: /voicemail/options
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /response/options
    method: GET
    data_selector: responseOptions
- name: recipient_trigger
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_templates
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response_options
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form_sections
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: form
  endpoint:
    path: /plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: data
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plan
    params: {}
- name: endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: ''
    params: {}
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: POST
    data_selector: response
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachments
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: services
  endpoint:
    path: /services
    method: GET
- name: get_service
  endpoint:
    path: /services/{serviceId}
    method: GET
- name: create_service
  endpoint:
    path: /services
    method: POST
- name: modify_service
  endpoint:
    path: /services
    method: POST
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: get_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: get_shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: get_members_in_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: ''
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: ''
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: ''
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: site_by_id
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
      embed: deviceNames,propertyDefinitions,roles
- name: create_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: modify_subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: get_temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /integration/1/functions/{functionID}/triggers
    method: POST
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: event
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: event_reference
  endpoint:
    path: /api/xm/1/events/{id}
    method: GET
    data_selector: links.self
    params: {}
- name: form_reference
  endpoint:
    path: /api/xm/1/forms/{id}
    method: GET
    data_selector: name
    params: {}
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
    params: {}
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myListProperty
    params: {}
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemailOptions
    method: GET
    data_selector: retry
    params: {}
- name: response_options
  endpoint:
    path: /api/xm/1/responseOptions
    method: GET
    data_selector: id
    params: {}
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: type
    params: {}
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipientType
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: template
    params: {}
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: forms
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_group
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member_from_group
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: GET
    data_selector: groups
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: get_temporary_absences
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: get_scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_in_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_attachment
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: id
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: response
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: id
- name: temporary_absences
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params:
      position: 6
      delay: 15
      escalationType: Peer
      inRotation: true
      onDuty: true
      recipient:
        id: ceb08e86-2674-4812-9145-d157b0e24c17
        recipientType: PERSON
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params:
      startDate: '2024-11-01T15:00:00.000Z'
      endDate: '2024-11-01T23:30:00.000Z'
- name: site
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: get_site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
- name: share permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: ''
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: null
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: name
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: specific_change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: create_change
  endpoint:
    path: /changes
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
    data_selector: change
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: response
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: events
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
- name: event_reference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: name
- name: conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: bridgeId
- name: properties
  endpoint:
    path: /api/xm/1/properties
    method: GET
    data_selector: myTextProperty
- name: voicemail_options
  endpoint:
    path: /api/xm/1/voicemail-options
    method: GET
    data_selector: voicemailOptions
- name: response_options
  endpoint:
    path: /api/xm/1/response-options
    method: GET
    data_selector: responseOptions
- name: conference_pointer
  endpoint:
    path: /api/xm/1/conference
    method: GET
    data_selector: conference
- name: property_values
  endpoint:
    path: /api/xm/1/property-values
    method: GET
    data_selector: properties
- name: recipient_trigger
  endpoint:
    path: /api/xm/1/recipients
    method: GET
    data_selector: recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplates
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOptions
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: sections
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: modify_response_option
  endpoint:
    path: /api/xm/1/forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms
    method: GET
    data_selector: data
    params: {}
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params: {}
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: ''
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: ''
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: ''
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: ''
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: null
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: null
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: name
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: count
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: service_by_id
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '2'
- name: shared_library_detail
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: update_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: id
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: all_sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: id
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: modify_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: targetName
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: changeType
    params: {}
- name: devices
  endpoint:
    path: /api/xm/1/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: response
    params: {}
- name: delete_device
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: device
    params: {}
- name: get_device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: get_email_device_names
  endpoint:
    path: /device-names?deviceType=EMAIL
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: comments
- name: change_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: EventReference
  endpoint:
    path: /api/xm/1/events
    method: GET
    data_selector: links
    params: {}
- name: FormReference
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: forms
    params: {}
- name: Conference
  endpoint:
    path: /api/xm/1/conferences
    method: GET
    data_selector: conference
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: id
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: templates
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form_section
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: responseOption
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: messageTemplate
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/plans/95fe8fbb-e095-4845-beb2-15d56829627b/forms/7f6aa6f7-64d7-4ac3-a7f8-f2657c81eb0a/response-options
    method: GET
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
    params: {}
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: id
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: requestId
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
      include: GAPS
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params: {}
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: '{}'
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: ''
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params:
      embed: creator
      planType: BUILT_IN
      search: alert
- name: specific_plan
  endpoint:
    path: /plans/{planId}
    method: GET
    data_selector: data
    params:
      embed: creator
- name: create_plan
  endpoint:
    path: /plans
    method: POST
    data_selector: ''
    params: {}
- name: modify_plan
  endpoint:
    path: /plans/
    method: POST
    data_selector: ''
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: data
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: data
    params: {}
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planID}/endpoints
    method: DELETE
- name: modify_plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: null
    params: {}
- name: delete_plan_constant
  endpoint:
    path: /plans/{planId}/constants/{constantId}
    method: DELETE
    data_selector: null
    params: {}
- name: get_plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: null
    params: {}
- name: create_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: null
    params: {}
- name: modify_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: null
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: ''
    params: {}
- name: get_services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /api/xm/1/service-dependencies
    method: GET
    data_selector: data
    params: {}
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: ''
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: ''
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{group_name}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: data
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: data
    params: {}
- name: add_member
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /api/xm/1/subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /api/xm/1/plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/xm/1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: response
    params: {}
- name: upload_epic_zipsync
  endpoint:
    path: /uploads/epic-v1
    method: POST
    data_selector: Import job object
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: path
- name: audits
  endpoint:
    path: /audits
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: devices
  endpoint:
    path: /devices
    method: GET
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: ''
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: DeviceTypes
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    params:
      embed: person.properties
      at: '{timestamp}'
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
    data_selector: annotations
- name: update_event_status
  endpoint:
    path: /events
    method: POST
    data_selector: status
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conferences
    params: {}
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
    params: {}
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: id
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: id
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: message_template
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: form
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: response
    params: {}
- name: form
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params: {}
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: data
- name: form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_group_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_group_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
    params: {}
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
    params: {}
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: Group objects
    params:
      status: ACTIVE
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params: {}
- name: supervisors
  endpoint:
    path: /groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: import_jobs
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: incidents
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: id
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: id
    params: {}
- name: integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: id
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: '{planId}'
      integrationType: OUTBOUND_WEBHOOK
      deployed: true
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: '{integrationId}'
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /api/xm/1/people
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: get_person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constant
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: endpoint
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
- name: constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: Acme Endpoint
  endpoint:
    path: /api/xm/1/plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: DELETE
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
    params: {}
- name: scenarios_for_plan_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
- name: scheduled_message
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: service-dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: create_service_dependency
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: null
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
    data_selector: null
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: get_service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
    params: {}
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
    params: {}
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
    params: {}
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
    data_selector: SharedLibrary
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: Shift
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: shifts
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /api/xm/1/groups/008b665d-2241-4c87-add1-f1838ee014d8/shifts/ff375b28-7386-4d22-bc55-275cf04bbca4
    method: GET
    data_selector: shift
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: response
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscriptionForm
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionName: Oracle
      subscriptionDescription: sev1
      subscriptionForm: IT Communications
      offset: 0
      limit: 10
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: id
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: uploads
  endpoint:
    path: /uploads/epic-v1
    method: POST
    data_selector: Import job object
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: epic_zipsync
  endpoint:
    path: /uploads/epic-v1
    method: POST
    data_selector: id
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
- name: on-call
  endpoint:
    path: /on-call
    method: GET
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: change_record
  endpoint:
    path: /changes
    method: POST
    data_selector: changeType
    params: {}
- name: device
  endpoint:
    path: /devices/{deviceID}
    method: GET
    data_selector: id
    params:
      embed: timeframes
- name: all_devices
  endpoint:
    path: /devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: changes
  endpoint:
    path: /changes
    method: GET
    data_selector: data
    params: {}
- name: change
  endpoint:
    path: /changes/{changeID}
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: data
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
    data_selector: annotations
    params: {}
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
    data_selector: attachments
    params: {}
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
    data_selector: user_deliveries
    params:
      at: '{timestamp}'
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: change_event_status
  endpoint:
    path: /events
    method: POST
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: event_reference
  endpoint:
    path: /events
    method: GET
    data_selector: links.self
- name: form_reference
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: conference
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
- name: recipients
  endpoint:
    path: /recipients
    method: GET
    data_selector: recipients
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      limit: 100
- name: get_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: create_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: modify_conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: data
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: json
    params: {}
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: form
    params: {}
- name: create_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: message_template
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: plans_forms
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
- name: forms_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: forms_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: forms_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupID}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: data
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: group_supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: group_license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
    params: {}
- name: group_recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
    data_selector: data
    params: {}
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params:
      planId: 0482202f-bc59-4f4d-a5c7-4a451c5f80ac
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params:
      integrationId: 2eebaa7f-c66a-453c-8ce1-a11441548121
- name: integration
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: delete_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: DELETE
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: ''
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: people
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
- name: communication_plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
    params: {}
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: targetName
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personID}
    method: DELETE
    data_selector: targetName
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /plans/c56730a9-1435-4ae2-8c7e-b2539e635ac6/endpoints
    method: POST
- name: delete_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: get_plan_properties
  endpoint:
    path: /plans/{planId}/property-definitions
    method: GET
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: constants
    params: {}
- name: plan_endpoints
  endpoint:
    path: /plans/{planId}/endpoints
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      limit: 2
      offset: 0
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
    data_selector: data
- name: scenarios_for_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
    data_selector: data
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: scenario
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: attachment
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: permissions
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: delete_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
    data_selector: id
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
- name: get_service
  endpoint:
    path: /services/{serviceId}
    method: GET
    data_selector: data
- name: create_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: modify_service
  endpoint:
    path: /services
    method: POST
    data_selector: data
- name: delete_service
  endpoint:
    path: /services/{serviceId}
    method: DELETE
    data_selector: data
- name: shared_library
  endpoint:
    path: /shared-libraries/{libraryID}
    method: DELETE
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: specific_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
    data_selector: data
    params: {}
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
    data_selector: data
    params: {}
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: shift
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
    data_selector: data
    params: {}
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
    data_selector: data
    params: {}
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
    data_selector: data
    params: {}
- name: create_shift
  endpoint:
    path: /groups/{groupName}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: add_member_to_shift
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /shifts
    method: GET
    data_selector: records
- name: members
  endpoint:
    path: /members
    method: GET
    data_selector: data
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /sites/{siteID}
    method: GET
    data_selector: id
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: ''
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: subscription_form
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: subscription_form
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
- name: subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params:
      planId: string
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params: {}
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
    params: {}
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
    params: {}
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: id
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: temporary_absence
  endpoint:
    path: /temporary_absence
    method: POST
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /import_job
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: on-call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /api/xm/1/changes
    method: GET
    data_selector: data
- name: change
  endpoint:
    path: /api/xm/1/changes/{changeID}
    method: GET
    data_selector: data
- name: create_change
  endpoint:
    path: /api/xm/1/changes
    method: POST
    data_selector: data
- name: attachments
  endpoint:
    path: /attachments
    method: POST
    data_selector: attachments
    params: {}
- name: audits
  endpoint:
    path: /audits
    method: GET
    data_selector: data
    params: {}
- name: changes
  endpoint:
    path: /changes
    method: POST
- name: device
  endpoint:
    path: /devices
    method: GET
- name: devices
  endpoint:
    path: /devices/{deviceID}
    method: DELETE
    data_selector: id
    params: {}
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: id
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: device_names
  endpoint:
    path: /device-names
    method: GET
    data_selector: data
    params: {}
- name: device_types
  endpoint:
    path: /device-types
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /events/{eventId}
    method: GET
    data_selector: event
    params:
      embed: properties,recipients,responseOptions,annotations,messages
- name: event_annotations
  endpoint:
    path: /events/{eventID}/annotations/{annotationID}
    method: GET
- name: event_attachments
  endpoint:
    path: /events/{eventId}/attachments/{attachmentId}
    method: GET
- name: user_deliveries
  endpoint:
    path: /events/{eventID}/user-deliveries
    method: GET
- name: event
  endpoint:
    path: /api/xm/1/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: event_annotations
  endpoint:
    path: /api/xm/1/events/{eventId}/annotations
    method: GET
    data_selector: data
    params: {}
- name: trigger_event
  endpoint:
    path: /api/integration/1/functions/{id}/triggers
    method: POST
    data_selector: recipients
    params: {}
- name: event_annotations
  endpoint:
    path: /events/{eventId}/annotations
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: form
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: conference
  endpoint:
    path: /conferences
    method: GET
    data_selector: records
- name: event_suppressions
  endpoint:
    path: /event-suppressions
    method: GET
    data_selector: data
    params:
      event: ced9fac9-1065-4659-82ab-1c9664a777b2
- name: conference_bridges
  endpoint:
    path: /conference-bridges
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: single_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeId}
    method: GET
    data_selector: data
- name: forms
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: form_details
  endpoint:
    path: /plans/{planId}/forms/{formId}
    method: GET
    data_selector: data
    params:
      embed: responseOptions,recipients
- name: conference_bridge
  endpoint:
    path: /conference-bridges
    method: POST
    data_selector: data
    params: {}
- name: delete_conference_bridge
  endpoint:
    path: /conference-bridges/{bridgeID}
    method: DELETE
    data_selector: data
    params: {}
- name: get_forms
  endpoint:
    path: /forms
    method: GET
    data_selector: data
    params: {}
- name: get_forms_in_plan
  endpoint:
    path: /plans/{planId}/forms
    method: GET
    data_selector: data
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: GET
    data_selector: data
- name: response_options
  endpoint:
    path: /plans/{planId}/forms/{formId}/response-options
    method: GET
    data_selector: data
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: GET
    data_selector: data
- name: create_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
- name: create_voice_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_sms_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: create_email_message_template
  endpoint:
    path: /api/xm/1/forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
- name: message_template
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
- name: response_options
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: message_templates
  endpoint:
    path: /forms/95fe8fbb-e095-4845-beb2-15d56829627b/message-templates
    method: POST
    data_selector: email
    params: {}
- name: form_sections
  endpoint:
    path: /forms/{formId}/sections
    method: POST
    data_selector: targetName
    params: {}
- name: modify_plan_form
  endpoint:
    path: /plans/{planId}/forms
    method: POST
    data_selector: targetName
    params: {}
- name: message_templates
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: targetName
    params: {}
- name: modify_form_response_option
  endpoint:
    path: /forms/{formId}/response-options
    method: POST
    data_selector: ''
    params: {}
- name: modify_message_template
  endpoint:
    path: /forms/{formId}/message-templates
    method: POST
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /api/xm/1/forms
    method: GET
    data_selector: data
    params:
      limit: 100
      offset: 0
- name: group_members
  endpoint:
    path: /api/xm/1/groups/438e9245-b32d-445f-916bd3e07932c892/members
    method: GET
    data_selector: data
- name: modify_form_section
  endpoint:
    path: /forms/{formId}/sections
    method: POST
- name: update_form_recipients
  endpoint:
    path: /forms/{formId}/recipients
    method: PUT
- name: update_sender_permissions
  endpoint:
    path: /forms/{formId}/sender-permissions
    method: PUT
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: group_by_id
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: data
- name: group_by_name
  endpoint:
    path: /groups/{groupName}
    method: GET
    data_selector: data
- name: group_members
  endpoint:
    path: /groups/{groupID}/members
    method: GET
    data_selector: data
    params:
      embed: shifts
- name: add_member
  endpoint:
    path: /groups/{groupID}/members
    method: POST
    data_selector: targetName
    params: {}
- name: remove_member
  endpoint:
    path: /groups/{groupID}/members/{memberID}
    method: DELETE
    data_selector: member
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params:
      status: ACTIVE
- name: supervisors
  endpoint:
    path: /groups/{groupId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /groups/license-quotas
    method: GET
    data_selector: groups
- name: recipients
  endpoint:
    path: /groups/{groupId}/recipients
    method: GET
    data_selector: data
- name: groups
  endpoint:
    path: /api/xm/1/groups
    method: POST
    data_selector: id
    params: {}
- name: group_supervisors
  endpoint:
    path: /api/xm/1/groups/{groupId}/supervisors
    method: GET
    data_selector: data
    params: {}
- name: imports
  endpoint:
    path: /api/xm/1/imports
    method: GET
    data_selector: data
    params: {}
- name: import_job
  endpoint:
    path: /api/xm/1/imports/{importId}
    method: GET
    data_selector: import_job
    params: {}
- name: import_job_messages
  endpoint:
    path: /api/xm/1/imports/{importId}/import-messages
    method: GET
    data_selector: messages
    params: {}
- name: import_messages
  endpoint:
    path: /imports/{importId}/import-messages
    method: GET
    data_selector: data
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: GET
    data_selector: data
    params: {}
- name: incident
  endpoint:
    path: /api/xm/1/incidents
    method: POST
    data_selector: ''
    params: {}
- name: trigger_incident
  endpoint:
    path: /api/xm/1/forms/{id}/triggers
    method: POST
    data_selector: ''
    params: {}
- name: incidents
  endpoint:
    path: /incidents
    method: POST
- name: timeline_entries
  endpoint:
    path: /incidents/{incidentID}/timeline-entries
    method: POST
- name: get_integration
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}
    method: GET
- name: get_integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: GET
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: integrations
  endpoint:
    path: /plans/{planId}/integrations
    method: POST
    data_selector: data
    params: {}
- name: integration_logs
  endpoint:
    path: /plans/{planId}/integrations/{integrationId}/logs
    method: GET
    data_selector: data
    params: {}
- name: on_call
  endpoint:
    path: /on-call
    method: GET
    data_selector: data
    params:
      groups: IT
- name: on_call
  endpoint:
    path: /on-call?groups=IT&include=GAPS
    method: GET
    data_selector: data
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: data
    params: {}
- name: on_call_summary
  endpoint:
    path: /on-call-summary
    method: GET
    data_selector: '[]'
    params:
      groups: 2b6cf1a8-2186-41bb-951e-f79e9e776c95
- name: person
  endpoint:
    path: /people/{personID}
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: data
- name: people
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: person_devices
  endpoint:
    path: /people/{personId}/devices
    method: GET
    data_selector: data
    params:
      embed: timeframes
- name: modify_person
  endpoint:
    path: /people
    method: POST
    data_selector: data
    params: {}
- name: delete_person
  endpoint:
    path: /people/{personId}
    method: DELETE
    data_selector: data
    params: {}
- name: group_memberships
  endpoint:
    path: /people/{personID}/group-memberships
    method: GET
    data_selector: data
- name: supervisors
  endpoint:
    path: /people/{personId}/supervisors
    method: GET
    data_selector: data
- name: license_quotas
  endpoint:
    path: /people/license-quotas
    method: GET
    data_selector: stakeholderUsers, fullUsers
- name: plan
  endpoint:
    path: /plans/{planID}/endpoints
    method: POST
- name: delete_plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoint/{endpointId}
    method: DELETE
- name: plan_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: plan_endpoint
  endpoint:
    path: /plans/{planId}/endpoints
    method: POST
    data_selector: id
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: id
    params: {}
- name: delete_plan
  endpoint:
    path: /plans/{planId}
    method: DELETE
    data_selector: id
    params: {}
- name: plan_constants
  endpoint:
    path: /plans/{planId}/constants
    method: GET
    data_selector: data
    params: {}
- name: create_constant
  endpoint:
    path: /plans/{planId}/constants
    method: POST
    data_selector: id
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 2
- name: scenario_by_id
  endpoint:
    path: /scenarios/{scenarioId}
    method: GET
- name: scenarios_by_plan_and_form
  endpoint:
    path: /plans/{planId}/forms/{formId}/scenarios
    method: GET
- name: scenario_attachments
  endpoint:
    path: /scenarios/{scenarioId}/attachments/{attachmentId}
    method: GET
- name: scenario_sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: GET
- name: create_scenario
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
- name: scheduled_messages
  endpoint:
    path: /api/xm/1/scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: scenarios
  endpoint:
    path: /forms/{formId}/scenarios
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /forms/{formId}/scenarios/{scenarioId}/attachments
    method: POST
    data_selector: data
    params: {}
- name: sender_permissions
  endpoint:
    path: /scenarios/{scenarioId}/sender-permissions
    method: PUT
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: GET
    data_selector: data
    params: {}
- name: single_scheduled_message
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_message_attachment
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}/attachments/{attachmentId}
    method: GET
    data_selector: data
    params: {}
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages
    method: POST
    data_selector: data
    params: {}
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: GET
    data_selector: data
- name: scheduled_messages
  endpoint:
    path: /scheduled-messages/{scheduledMessageId}
    method: DELETE
- name: service_dependencies
  endpoint:
    path: /service-dependencies
    method: POST
- name: services
  endpoint:
    path: /services
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: data
    params: {}
- name: shared_libraries
  endpoint:
    path: /plans/{planId}/shared-libraries
    method: GET
- name: single_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: GET
- name: create_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: modify_shared_library
  endpoint:
    path: /shared-libraries
    method: POST
- name: delete_shared_library
  endpoint:
    path: /shared-libraries/{libraryId}
    method: DELETE
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/members
    method: GET
- name: shift_occurrences
  endpoint:
    path: /groups/{groupId}/occurrences
    method: GET
- name: deleted_shift_occurrences
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/exclusions
    method: GET
- name: create_shift
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
- name: shifts
  endpoint:
    path: /groups/{groupID}/shifts
    method: POST
    data_selector: ''
    params: {}
- name: shift_members
  endpoint:
    path: /groups/IT/shifts/24x7/members
    method: POST
    data_selector: recipient
    params: {}
- name: delete_shift
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}
    method: DELETE
    data_selector: shift
    params: {}
- name: restore_shift_occurrence
  endpoint:
    path: /groups/{groupID}/shifts/{shiftID}/occurrences
    method: POST
    data_selector: count
    params: {}
- name: shifts
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts
    method: GET
    data_selector: data
    params: {}
- name: shift_members
  endpoint:
    path: /api/xm/1/groups/{group_id}/shifts/{shift_id}/members
    method: GET
    data_selector: members.data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: data
- name: subscription_forms
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params:
      limit: 100
- name: subscription_forms_in_plan
  endpoint:
    path: /plans/{planId}/subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: POST
    data_selector: Site object
    params: {}
- name: subscription_forms
  endpoint:
    path: /subscription-forms
    method: GET
    data_selector: data
    params: {}
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
    params:
      id: string
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      owner: mmcbride
      subscriptionForm: oracle
      offset: 0
      limit: 10
- name: subscription_details
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: GET
    data_selector: data
- name: subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: GET
    data_selector: data
- name: share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: add_subscribers
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers
    method: PUT
    data_selector: data
- name: set_share_permissions
  endpoint:
    path: /subscriptions/{subscriptionId}/share-permissions
    method: PUT
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions/{subscriptionId}
    method: DELETE
- name: unsubscribe_user
  endpoint:
    path: /subscriptions/{subscriptionId}/subscribers/{personId}
    method: DELETE
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
- name: user_upload
  endpoint:
    path: /uploads/users-v1
    method: POST
    data_selector: status
    params: {}
- name: temporary_absence
  endpoint:
    path: /api/xm/1/temporary_absence
    method: POST
    data_selector: absence
    params: {}
- name: temporary_absences
  endpoint:
    path: /temporary-absences
    method: GET
    data_selector: data
    params: {}
- name: create_temporary_absence
  endpoint:
    path: /temporary-absences
    method: POST
    data_selector: id
    params: {}
- name: delete_temporary_absence
  endpoint:
    path: /temporary-absences/{temporaryAbsenceId}
    method: DELETE
    data_selector: id
    params: {}
- name: trigger_alerts_by_email
  endpoint:
    path: /api/v1/alerts
    method: POST
    data_selector: alert
    params: {}
- name: trigger_alerts
  endpoint:
    path: /api/alerts/trigger
    method: POST
    data_selector: alert
    params: {}
- name: incident_resolution
  endpoint:
    path: /api/v1/incidents
    method: POST
    data_selector: incident
    params: {}
- name: Test Results
  endpoint:
    path: /api/v1/test-results
    method: POST
- name: Create Incident Webhook
  endpoint:
    path: /api/arsys/v1.0/webhook
    method: POST
    data_selector: data
    params:
      description: Send new incidents to xMatters
      form_name: HPD:Help Desk
      condition: ‘Incident Number’ != null
      entry_events:
      - Create
      send_attachment_as_reference: false
      send_unchanged_fields: true
- name: Update/Delete Incident Webhook
  endpoint:
    path: /api/arsys/v1.0/webhook
    method: POST
    data_selector: data
    params:
      description: Send incident updates to xMatters
      form_name: HPD:Help Desk
      condition: '''z1D_Summary'' != null AND ''z1D_Summary'' != "" AND NOT ''z1D_Summary''
        LIKE "xMatters:%"'
      entry_events:
      - Update
      - Delete
      send_attachment_as_reference: false
      send_unchanged_fields: true
- name: inbound_for_groups
  endpoint:
    path: /services/inbound/groups
    method: POST
- name: inbound_for_individuals
  endpoint:
    path: /services/inbound/individuals
    method: POST
- name: xmatters_alert
  endpoint:
    path: /webhooks/xmatters_alert
    method: POST
- name: xmatters_on_call
  endpoint:
    path: /webhooks/xmatters_on_call
    method: POST
- name: xmatters_engage
  endpoint:
    path: /webhooks/xmatters_engage
    method: POST
- name: xmatters_conference
  endpoint:
    path: /webhooks/xmatters_conference
    method: POST
- name: problem_notifications
  endpoint:
    path: /api/problem-notifications
    method: POST
    data_selector: notifications
- name: webhook
  endpoint:
    path: /api/integration/1/functions/d15bb1da-713f-4e23-9fd7-dabb8544cf0c/triggers
    method: POST
    data_selector: data
    params: {}
- name: signal_alerts
  endpoint:
    path: /trigger/everbridge_signal
    method: POST
    data_selector: alerts
- name: Group Automation
  endpoint:
    path: /webhook/group
    method: POST
    data_selector: alerts
    params: {}
- name: Agent Automation
  endpoint:
    path: /webhook/agent
    method: POST
    data_selector: alerts
    params: {}
- name: alerts
  endpoint:
    path: /monitoring/alerting
    method: POST
- name: xMatters
  endpoint:
    path: /Alerting/Notification channels
    method: POST
    data_selector: alert
    params: {}
- name: xMatters
  endpoint:
    path: /xmatters/workflow
    method: POST
    data_selector: alert_data
    params: {}
- name: event
  endpoint:
    path: /http/applications_hpomi-3-0
    method: POST
    data_selector: event
- name: Webhook
  endpoint:
    path: /xm-integration-url
    method: POST
    data_selector: alert_data
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: payload
    params: {}
- name: Kaseya_Workflow
  endpoint:
    path: /xmatters/workflows
    method: POST
    data_selector: workflow
    params: {}
- name: alerts
  endpoint:
    path: /alerts/events
    method: POST
    data_selector: alerts
- name: xMatters Bot
  endpoint:
    path: /api/v1/integration
    method: POST
- name: Moogsoft Webhook
  endpoint:
    path: /webhook
    method: POST
- name: host_notifications
  endpoint:
    path: /notify_xmatters_host
    method: POST
    data_selector: OBJECTTYPE
    params: {}
- name: service_notifications
  endpoint:
    path: /notify_xmatters_service
    method: POST
    data_selector: OBJECTTYPE
    params: {}
- name: Outage Event
  endpoint:
    path: /panopta/outage-event
    method: POST
    data_selector: payload
    params: {}
- name: Clear Event
  endpoint:
    path: /panopta/clear-event
    method: POST
    data_selector: payload
    params: {}
- name: Pingdom Check Alerts
  endpoint:
    path: /triggers
    method: POST
    params: {}
- name: webhook
  endpoint:
    path: /your-trigger-url
    method: POST
    data_selector: alert_data
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: alert
    params: {}
- name: xMatters Bot
  endpoint:
    path: /api/xMatters
    method: POST
- name: alert
  endpoint:
    path: /alerts
    method: POST
- name: Splunk API
  endpoint:
    path: /services/alerts
    method: POST
    data_selector: alerts
    params: {}
- name: webhook
  endpoint:
    path: /api/v1/trigger
    method: POST
    data_selector: alert
    params: {}
- name: Webhook
  endpoint:
    path: /webhook/trigger
    method: POST
    data_selector: alertData
notes:
- Once uploaded, files cannot be removed and should be attached to an event or scenario
  as quickly as possible.
- Unused files are automatically discarded after a period of time.
- Ensure that you use HTTPS when making RESTful requests
- Once uploaded, attachment files cannot be removed.
- This endpoint lets you create and retrieve change records for your xMatters instance.
- Once a change record is created, it cannot be modified or deleted from your system.
- Privileged devices redact specific information, such as phone numbers, email addresses,
  or country location from users without the appropriate permission settings.
- Access to data using the from or after parameters is limited by your pricing plan.
- Targeted recipients include the names of groups but do not expand to include their
  members.
- Inbound integrations can receive a maximum payload size of 200,000 bytes.
- Handle voicemail options carefully to ensure correct handling behavior.
- Use `embed` to include additional objects in the response.
- Default trigger type is MESSAGING
- Form is not enabled for mobile devices, UI, or API use upon creation by default
- Names must be URL-encoded.
- The use of formId refers specifically to the UUID of a form.
- Uses Basic Authentication with username and password
- The language field must contain a valid two-letter ISO 639 code.
- Form can only contain one of each type of section.
- You can only send one form section per request.
- The only required parameter is the unique identifier of the form.
- Requires setup of API credentials and token management.
- You can only send one form section per request, and the type parameter cannot be
  modified.
- This endpoint retrieves all members of a specified group.
- This API does not support legacy groups that use shared teams across shifts.
- Groups are returned as a paginated list sorted in alphabetical order.
- Dynamic groups can be observed by all users or limited to specific roles.
- The operand in criteria is case-sensitive.
- Ensure to use valid username and password for authentication.
- The groupType cannot be changed after a group is created.
- This endpoint is only available for User Upload files and will not return messages
  for uploaded EPIC ZipSync files.
- Incidents created through this endpoint do not trigger flows.
- Access tokens expire after a fixed number of seconds as described by the `expires_in`
  field.
- Uses OAuth2 for authentication — requires setup of OAuth client in xMatters.
- Access tokens are temporary and must be refreshed periodically.
- You can identify groups by their name (targetName) or unique identifier (id).
- Use the embed query parameters to enhance the result to include more information
  about the owner of device members.
- Returns a paginated list of the users that are visible to the authenticating user.
- When adding new users, you can only use properties that are already defined in the
  web user interface.
- Newly-created users do not have assigned web or phone passwords.
- Uses Basic Authentication with username and password.
- Uses Basic Auth with username and password.
- Returns a list of groups that a person belongs to, including direct memberships
  only.
- Returns a paginated list of a person's supervisors.
- Returns the number of user licenses for full and stakeholder users.
- Uses basic authentication with username and password.
- Supports basic authentication.
- The endpoint allows you to modify existing properties in a communication plan.
- Attachment size must not exceed 10 MB.
- Configure the 'xMatters' endpoint to use a valid username and password.
- This endpoint does not currently support Flow Designer shared libraries.
- For a list of response codes returned by the xMatters REST API, see HTTP Response
  Codes.
- Time values in the API are specified in universal time (UTC).
- Shift details include members, recurrence, and escalation information.
- Sites are used to notify users based on their geographic location.
- Ensure valid username and password are used for authentication.
- The API requires a valid username and password for basic authentication.
- Returns a list of subscriptions. You can use the query parameters to filter the
  results.
- This endpoint allows users with appropriate permission settings to create subscriptions.
- You must have a subscription form created in the web user interface before you can
  create a subscription.
- To find the subscription ID, use Get subscriptions.
- To find the person ID, use Get people.
- Uploads a user upload v1.5 template file and creates a user upload job that performs
  an asynchronous bulk import of user data.
- Upload files must be in .csv format.
- The start and end times are defined in universal time (UTC) format and may not reflect
  the time zone of the authenticating user, the absent user, or the replacement.
- To limit the results to a specific timeframe, use the `from` and `to` query parameters.
- Ensure that you use HTTPS when making RESTful requests so that sensitive information
  such as passwords and tokens are secured during transmission.
- The authenticating REST API user must have the ability.act.HistoricalDataAccess
  permission added to a function within their roles.
- Each file has a maximum file size of 10 MB each.
- Files that are uploaded but not attached are eventually deleted.
- Ensure HTTPS is used for all requests to protect sensitive information.
- Once uploaded to xMatters, each file cannot be removed and should be attached to
  an event or scenario as quickly as possible.
- Access to data using the `from` or `after` parameters is limited by your pricing
  plan.
- Creating the conference bridge configuration does not automatically initiate a conference
  bridge.
- Emergency Change Request includes various fields such as Number, Severity, Impact,
  etc.
- Configured to work with xMatters Flow Designer.
- A form can only contain one of each type of section and you can only send one form
  section per request.
- The only required parameter for modifying a response option is the unique identifier
  of the form.
- Requires setup of connected app in xMatters
- Group members can be individual users, other groups, or devices.
- For on-call groups, members must be added to at least one shift to receive notifications.
- This endpoint returns only the groups that the authenticated user has permission
  to access.
- The id field is a unique identifier for the group.
- If the id field is not provided in the request body, xMatters interprets this as
  a request to create a group.
- Use valid username and password for basic authentication.
- Requires valid username and password for authentication.
- The summary and description fields are required to create an incident.
- Incidents created through the Create endpoint do not trigger flows.
- Use OAuth2.0 authentication to access the xMatters REST API.
- Use the 'embed' query parameters to enhance the result to include more information
  about the owner of device members.
- Use the 'include' query parameter to include all gaps in shift coverage.
- Use the embed=roles query parameter to include a list of each user's assigned roles
  in the response.
- Person identifiers must be valid UUIDs.
- Inactive people cannot receive notifications.
- Communication plans allow you to tailor your communications to suit the situation,
  recipient, and required action based on any business process, emergency, or technology.
- Use ?embed=roles to include roles in the Person object.
- Use ?embed=supervisors to include supervisors in the Person object.
- Use allowWildcards=true in queries to search for roles with partial names.
- Authentication requires a valid username and password.
- This endpoint allows you to create scenarios for a form.
- The attachment size must not exceed 10 MB.
- Scheduled messages can be sent once or on a recurring basis.
- Search terms must contain at least two characters.
- The combined size of attachments must not exceed 10 MB.
- Returns a paginated list of service dependencies in your xMatters instance.
- The unique identifier for a shared library is required to delete it.
- If shift start and end parameters are not provided, a 24 x 7 shift is created.
- Describes a shift, including its name, ID, the group to which it belongs, and the
  members it contains.
- Use basic authentication with username and password.
- Ensure to specify the correct groupID and shiftID in the URL parameters.
- You can identify a site by its name or identifier.
- The language code is returned as a two-letter code following the ISO 639 format.
- The country code is returned as a three-letter code following the ISO 3166-2 format.
- The country must be marked as Active in the web user interface Admin tab before
  you can set it here.
- The language must be enabled in xMatters before you can set it here.
- The time zone must be marked as Active in the Admin tab before you can set it here.
- The scope can be either ALL_FORMS or FORM.
- If using FORM, the form id must be specified.
- The `embed` query parameter can include deviceNames, propertyDefinitions, roles.
- Subscription form must be created in the web user interface before creating a subscription.
- The request must include the subscription ID for modifying settings.
- Query parameters are optional and can be used to fine-tune results.
- All imported files must be either User Upload template v1.5 .csv or EPIC ZipSync
  v1.3 .zip files.
- This feature is not available in the Integration Builder.
- Once a change record is created, it cannot be modified or deleted.
- Ensure that you use HTTPS when making RESTful requests.
- To query historical data, the authenticating REST API user must have the ability.act.HistoricalDataAccess
  permission added to a function within their roles.
- Parameter names are case-sensitive.
- This endpoint lets you create and retrieve change records.
- Mobile app devices cannot be created using the xMatters REST API.
- Privileged devices redact specific information such as phone numbers from users
  without appropriate permissions.
- Only company administrators and supervisors can create, edit, and delete privileged
  devices.
- Certain event types are only visible to Company Supervisors, and are not displayed
  to users without the appropriate permission level.
- Privileged devices redact specific information from users without appropriate permission
  settings.
- Access to historical data requires specific parameters like 'at', 'from', and 'to'.
- Event suppressions let you retrieve the records of any suppressions resulting from
  event flood control rules for a particular event.
- Use embed parameter to include additional objects in response.
- Forms can be filtered by various query parameters.
- Using the legacy identifier will result in an error.
- Forms must be enabled for mobile devices, web user interface, and API use if needed.
- Configured to work with xMatters Flow Designer
- The `language` field in message templates must be a valid two-letter ISO 639 code.
- The recipient values in the provided list overwrite all previously stored values.
- The sender permission values in the provided list overwrite all previously stored
  values.
- Ensure the data type field is set to 'DOCUMENT_UPLOAD' for attachments.
- For On-Call groups you can optionally include information about the shifts each
  member belongs to by including the ?embed=shifts query parameter in the request.
- The endpoint returns only groups that the authenticated user has permission to access.
- Returns paginated lists for supervisors and recipients.
- The API requires a valid username and password for authentication.
- Incidents created through the create endpoint do not trigger flows.
- The API requires basic authentication using username and password.
- When accessing who is on call now, or for a shift in the future, you'll need to
  set the `from` parameter to a time no more than 24 hours in the past.
- Uses OAuth2.0 for authentication.
- The access token expires after a fixed number of seconds as described by the expires_in
  field.
- Initial access token and refresh token are obtained by making a call to POST /oauth2/token
  with client ID, username, and password.
- Returns the active members of a group in their order of escalation for each shift.
- The maximum number of returned results per request is 1000.
- The UUID can only contain letters a-f, numbers 0-9, and dashes.
- If the `id` field is not included, xMatters treats this as a request to create a
  new person.
- Requires a valid username and password for authentication.
- The combined size of the attachments must not exceed 10 MB.
- Pagination is supported via offset and limit query parameters.
- To retrieve all roles, use GET /roles.
- To retrieve all scenarios, use GET /scenarios.
- Search terms are case-insensitive and must contain at least two characters.
- When creating a scheduled message, you can add up to 10 attachment files. The combined
  size of the attachments must not exceed 10 MB.
- Use the DELETE method to remove a scheduled message before it is sent.
- Response includes count and details of service dependencies.
- The operand is case-sensitive; for example, lowercase ‘and’ returns an error.
- Use a valid username and password for authentication
- For complex shifts, remember that the time is relative to the authenticating user.
- For adding a member, specify the recipient and their position in the shift.
- For deleting a shift, use either the shift name or its unique identifier.
- The country must be marked as Active in the Admin tab before you can set it here.
- The request must include the subscription ID for modifying or deleting subscriptions.
- The subscription form must have the `subscribeOthers` field set to `true` to add
  recipients.
- All query parameters are optional.
- Responses are returned in UTC format.
- Uploads a file to xMatters for use as an attachment with existing events and scenarios.
  Each file has a maximum file size of 10 MB.
- Logging changes allows you to more quickly detect problems and troubleshoot them
  in your instance.
- Privileged devices redact specific information for users without appropriate permissions.
- You can request devices of a specific type using the deviceTypes query parameter.
- If this endpoint is called without any search parameters, it returns a paginated
  list of all the events the authenticating user has permission to view.
- There is a 15-minute synchronization window between data collected by the current
  system and historical data.
- Resolved recipients include members of groups and sites.
- The comment appears in the event tracking report and is returned when requesting
  event comments.
- The unique identifier (id) or name (targetName) of the plan the forms belong to
  must be URL-encoded.
- You must have the appropriate permissions to delete data.
- Form ID and Plan ID must be URL-encoded when used in requests.
- A form can only contain one of each type of section.
- Describes a form used in a communication plan.
- Ensure the data type field is set to "DOCUMENT_UPLOAD" for attachments.
- 'For on-call groups only: You must add the member to at least one shift before they
  will be able to receive notifications sent to the group.'
- Groups are returned as a paginated list and sorted in alphabetical order.
- If the `id` field is not provided in the request body, xMatters interprets this
  as a request to create a group.
- Requires valid username and password for API access.
- Returns a paginated list of the users that supervise the specified group.
- Returns the number of groups currently created for your company and the number of
  total groups allowed by your plan type.
- Returns a paginated list of the recipients of a specified group. For Dynamic groups,
  the response contains all users that would be notified based on the dynamic group
  criteria.
- Incidents created through the POST /incidents endpoint do not trigger flows.
- Requires valid username and password for authentication
- Uses HTTP Basic Authentication.
- Access tokens expire after a fixed number of seconds as described by the expires_in
  field returned in the response body.
- You can request a list of all users or search for users that match specific search
  criteria.
- The id field is required for modifying a person.
- Devices can be fetched with optional timeframes.
- You must assign at least one role to a new user and you may optionally assign one
  or more supervisors. The supervisors must have permission to supervise users and
  the authenticating account must have permission to assign supervisors.
- Use basic auth with username and password for requests.
- Use GET /plans to find the id of the plan.
- Uses Basic Auth for authentication.
- Search terms must contain at least two characters and are case-insensitive.
- The operand parameter is case-sensitive.
- Scheduled messages are a way to send future notifications to users.
- You can attach a maximum of 10 files, and the size limit for all files is 10 MB.
- Response code 200 OK indicates a successful request.
- Use unique identifiers for groups and shifts where possible.
- If a shift `start` and `end` parameters are not provided, a 24 x 7 shift is created.
- Requires authentication to access site information
- The API supports pagination using the limit and offset query parameters.
- The unique identifier (`id`) of the plan is required to create or modify subscription
  forms.
- Query parameters can be used to filter subscription results.
- The users and roles in the provided list overwrite all previously stored share permissions
  for the subscription.
- Uploads must be in .csv format
- All query parameters are optional; can be used to fine-tune results.
- File uploads cannot be removed once uploaded.
- Certain event types are only visible to Company Supervisors.
- Redacted items include email address, phone number, and country for certain device
  types.
- Use UUID for eventId for reliable results.
- Event suppressions allow retrieval of records resulting from event flood control
  rules.
- Use 'embed' to list additional objects to include in the response.
- Ensure planId and formId are URL-encoded.
- Requires HTTP Basic Authentication with username and password.
- Email body must be HTML encoded.
- Use URL-encoded names for formId.
- Form can only contain one of each type of section and only one form section per
  request.
- The only required parameter for modifying a message template is the unique identifier
  of the form.
- Group visibility is controlled by the observedByAll parameter.
- The default observedByAll setting is true.
- The transform type of the submitted file can be users-v1 or epic-v1.
- The uploaded file can have statuses like PENDING, PROCESSING, COMPLETE, or FAILED.
- The authenticating user that created the incident is set as the incident commander.
- Logging must be enabled for the integration, flow, or built-in configuration to
  see successful requests; otherwise only failed requests are logged.
- The default severity of an incident is 'Medium'.
- The default status of an incident is 'OPEN'.
- Uses Basic Authentication for endpoints.
- When accessing who is on call now, or for a shift in the future, set the `from`
  parameter to a time no more than 24 hours in the past.
- Access tokens expire after a fixed number of seconds as described by the expires_in
  field.
- Use the 'allowWildcards' query parameter to search for roles by name.
- You can add up to 10 attachment files. The combined size must not exceed 10 MB.
- Scheduled messages allow sending future notifications.
- You can add up to 10 attachment files.
- This API uses basic authentication.
- Ensure the user has the necessary permissions to access the services.
- Responses may vary based on the parameters provided.
- Ensure to replace {groupID} and {shiftID} with actual IDs.
- 'The request did not succeed. Response code is: 404'
- You can use the query parameters to filter the results.
- Users must have appropriate permissions to modify subscriptions.
- Dates are in UTC format and may not reflect the authenticating user's timezone.
- To use this method, you must know the unique identifier of the device.
- Uploaded files should be attached to events or scenarios as quickly as possible.
- Privileged devices redact specific information from users without appropriate permissions.
- If you do not see the events you expect, it is possible you do not have the appropriate
  permission level.
- Returns information about an event, including the person who initiated the event,
  the form used to create the event, and any conference bridge details associated
  with the event.
- Maximum payload size is 200,000 bytes.
- Attachments must be uploaded to xMatters temporary file storage.
- Event suppressions allow retrieval of records of any suppressions resulting from
  event flood control rules.
- Requires authentication with valid username and password.
- Requires setup of valid username and password for authentication.
- Default trigger type for forms is MESSAGING.
- Default values for mobileEnabled, uiEnabled, and apiEnabled are all false.
- Requires basic authentication with username and password.
- The email template must be HTML encoded.
- With the exception of Custom sections, a form can only contain one of each type
  of section and you can only send one form section per request.
- For On-Call groups, include shift information using the embed=shifts query parameter.
- Groups are returned as a paginated list of Group objects and are sorted in alphabetical
  order.
- Group visibility is set by the observedByAll parameter.
- Endpoints require groupId parameter to be specified.
- The initial severity of the incident defaults to Medium.
- The initial status of the incident defaults to Open.
- Initial access token and refresh token are obtained using client ID, username, and
  password.
- Use the include query parameter to include all gaps in shift coverage.
- Uses Basic Authentication for xMatters endpoints.
- You must assign at least one role to a new user and you may optionally assign one
  or more supervisors.
- The authenticating account must have permission to assign supervisors.
- Maximum number of returned results per request is 1000.
- Device data includes timeframes when notifications are received.
- Communication plans allow you to tailor your communications to suit the situation.
- The returned list includes groups that the user or one of their devices belongs
  to directly.
- Requires configuration of valid username and password.
- Use the UUID of the plan to modify properties.
- Roles can be filtered using wildcards in the name.
- When creating a scenario, you can add up to 10 attachment files.
- You can add up to 10 attachment files. The combined size of the attachments must
  not exceed 10 MB.
- Results can be sorted by various criteria including name and owner.
- Service dependencies represent a direct relationship between a service and its dependent.
- The API uses basic authentication with a username and password.
- If a time zone is not specified, the time zone of the authenticating user is used.
- Returns a list of all subscription forms in xMatters.
- Subscription forms must have unique names within your company.
- Returns a list of current and upcoming temporary absences for all users you have
  permission to see.
- xMatters uses HTTP Basic Authentication to authenticate endpoints in the REST API.
- If devices are marked as privileged, and you don't have the appropriate permissions,
  you will see asterisks in place of phone numbers, email addresses, and country information.
- Privileged devices redact specific information based on user permissions.
- If a device name is marked as a privileged device, specific information is withheld
  from users without the appropriate permission settings.
- Use UUID for event ID for better reliability.
- The request to add a comment to an event returns a 201 status code on success.
- The request to change the status of an event can return a 200 or 202 status code.
- Event suppressions lets you retrieve the records of any suppressions resulting from
  event flood control rules for a particular event.
- Use embed query parameter to include additional data such as responseOptions and
  recipients.
- You must have appropriate permissions to delete data.
- The UUID of the group is a required parameter when creating a conference bridge.
- Default trigger type is MESSAGING if not specified.
- Default values for mobileEnabled, uiEnabled, and apiEnabled are false.
- The 'language' field in email and SMS templates must be a valid two-letter ISO 639
  code.
- Response options require specific parameters to be included in the request body.
- If the id field is not provided in the request body, xMatters interprets this as
  a request to create a new request parameter.
- You can only send one form section per request, and the `type` parameter cannot
  be modified.
- For On-Call groups, must add the member to at least one shift to receive notifications.
- The groupType cannot be changed after creation.
- The default groupType is ON_CALL if not specified.
- 'The request did not succeed. Response code is: '
- Incidents created through this endpoint do not trigger flows, and do not have the
  more robust functionality of user responses, collaboration channels, flood control.
- Use basic auth with username and password.
- Uses OAuth2.0 authentication — requires setup of client ID and credentials.
- The initial access token and refresh token are obtained by making a call to POST
  /oauth2/token and authenticating with a client ID, user name, and password.
- Requires valid username and password for requests
- Returned services are based on your permission level.
- This API requires valid username and password for authentication.
- Use unique identifiers for groupID and shiftID when making requests.
- The unique identifier for a site is included in the response of the GET sites method.
- Requires valid username and password for basic authentication.
- To unsubscribe a user, use DELETE on /subscriptions/{subscriptionId}/subscribers/{personId}.
- To get all temporary absences, use GET on /temporary-absences.
- The start and end times are in UTC format.
- To limit results, use optional query parameters.
- We recommend using the UUID for event IDs, as numeric event IDs may not always return
  results.
- Each file has a maximum file size of 10 MB.
- Privileged devices redact specific information from users without the appropriate
  permission settings.
- Ensure that you use HTTPS when making RESTful requests to secure sensitive information.
- The authenticating REST API user must have the ability.act.HistoricalDataAccess
  permission to query historical data.
- Uploads a file to xMatters for use as an attachment with existing events and scenarios.
- The authenticating user has permission to view events
- To retrieve an event including targeted recipients, use GET /events/{eventId}?embed=recipients&targeted=true.
- For detailed event information, use GET /events/{eventId}?embed=properties,recipients,annotations,messages,attachments.size,suppressions.
- Forms can be paginated using offset and limit parameters.
- Using legacy identifier will result in an error.
- The `language` field in message templates must contain a valid two-letter ISO 639
  code.
- When creating response options, the `action` field can have several valid values.
- Uses xMatters API for communication plans and forms.
- For On-Call groups, the member must be added to at least one shift to receive notifications.
- Incidents created through the /incidents endpoint do not trigger flows.
- The `id` of an incident is required for updates.
- Use the web user interface to enable and disable logging.
- Uses Basic Authentication — requires username and password
- To view a group's on-call schedule in universal time, view the group in the xMatters
  user interface and set the display timezone to (UTC+0000)GMT.
- Use the `embed=roles` query parameter to include a list of each user's assigned
  roles in the response.
- If the `id` field is not included xMatters treats this as a request to create a
  new person.
- Requires setup of valid username and password for basic authentication.
- The xMatters API requires a valid username and password for authentication.
- Use the unique identifier in the `id` field to identify a communication plan.
- To find the `id` of a property in a plan, use the Get plan properties endpoint.
- Deletes a scheduled message before it is sent to the list of recipients.
- You can add members to the shift when the shift is created, or add them afterwards.
- Requires username and password for basic authentication.
- To add recipients, the subscription form must have the `subscribeOthers` field set
  to `true`.
- All query parameters are optional; you can use them to fine-tune the results you
  receive.
- The start and end times are defined in universal time (UTC) format.
- A 15-minute synchronization window exists for historical data.
- Access to historical data is limited by pricing plan.
- Searching by various criteria is supported including form properties, event status,
  etc.
- Uses basic authentication — requires valid username and password.
- Form properties may have minimum and maximum values or other restrictions.
- Requires authentication with username and password.
- Depending on your permission level, you will see either a subset of information
  or all form information.
- The 'language' field must contain a valid two-letter ISO 639 code.
- The unique identifier (`id`) of the form.
- The description of the form.
- Configure the endpoint to use a valid username and password.
- To convert such a group to one that can be accessed with this API, locate it in
  the user interface and click the Unshare button.
- For On-Call groups, must add member to at least one shift.
- The unique identifier of the group must be provided to modify it.
- Uses Basic Auth with a username and password.
- To use extra features, use the Trigger an incident endpoint.
- Uses OAuth2 with password grant type.
- OAuth2.0 authentication allows you to access the xMatters REST API by providing
  an authentication token in the header of each request.
- You must assign at least one role to a new user.
- The maximum number of returned results per request for on-call summary is 1000.
- To modify a person, provide the id field and specify properties to modify.
- Communication plans and built-in integration configurations define how an event
  is processed.
- Use the correct authentication credentials for accessing the API.
- Supports pagination through query parameters.
- Attachments must not exceed 10 MB in total size.
- The maximum size for attachments is 10 MB.
- Any parameters not included in the update retain their current values.
- Service dependencies describe the relationship between a service and its direct
  dependent.
- This API supports basic authentication using username and password.
- Shift details may vary based on group and recurrence settings.
- User must provide valid username and password for basic authentication.
- To delete a subscription, use DELETE /subscriptions/{subscriptionId}.
- To unsubscribe a user from a subscription, use DELETE /subscriptions/{subscriptionId}/subscribers/{personId}.
- Once uploaded, files cannot be removed.
- To delete a device, use the unique identifier (id) or targetName.
- Use UUID for event ID to ensure results are returned.
- The 'GET notifications' endpoint is deprecated.
- To use the DELETE method, you must know the unique identifier (`id`) of the conference
  bridge.
- Uses HTTP Basic Authentication
- Ensure to provide the formId in the URL parameters.
- Uses xMatters API.
- For On-Call groups, members must be added to at least one shift to receive notifications.
- Use basic auth with username and password
- You can specify up to 30 groups.
- If users' devices are marked as 'privileged' by a company supervisor, and you don't
  have the appropriate permissions, you will see asterisks in place of phone numbers,
  email addresses, and country information.
- Initial access token is obtained by making a call to POST /oauth2/token using client
  ID, username, and password.
- Creates a new user in xMatters.
- You can identify the person using either their user name or their unique identifier.
- Depending on your permission level, you will see either a subset of information
  or all plan information.
- Returns a list of groups that a person belongs to.
- Returns a list of a person's supervisors.
- Returns the number of user licenses for your company, separated by license type.
- The xMatters API uses basic authentication.
- This endpoint allows you to create scenarios for a form. Scenarios enable you to
  pre-populate settings and fields for a message.
- Use unique identifiers for groups and shifts.
- The API supports adding members to shifts with specific parameters like position
  and delay.
- Shift members can be on-duty or off-duty based on the inRotation parameter.
- Depending on your permission level, you will see either the unique identifier and
  name of the subscription form or all subscription form information.
- The unique identifier (`id`) of the plan must be included in the request.
- Use query parameters to filter subscription results.
- All query parameters are optional for filtering results.
- Once uploaded to xMatters, each file is given a temporary location, denoted by a
  path in the response.
- If a change record is created, it cannot be modified or deleted from the system.
- Users must have roles that give sufficient permission to view or edit data.
- Use UUID for event IDs to ensure results.
- The language field is mandatory and must contain a valid two-letter ISO 639 code.
- For on-call groups, you must add the member to at least one shift before they will
  be able to receive notifications sent to the group.
- Groups are returned as a paginated list.
- You can search groups by name or description.
- For On-Call groups, the groupType cannot be changed once created.
- Returns a paginated list of uploaded User Upload or EPIC ZipSync files.
- Uses HTTP Basic Authentication for xMatters endpoints.
- Access tokens expire after a fixed number of seconds as described by the `expires_in`
  field returned in the response body.
- The initial access token and refresh token are obtained by making a call to `POST
  /oauth2/token` and authenticating with a client ID, user name, and password.
- When accessing who is on call now, or for a shift in the future, you'll need to
  set the 'from' parameter to a time no more than 24 hours in the past.
- The id field must be a valid UUID.
- User status can be set to ACTIVE or INACTIVE.
- Use the allowWildcards query parameter for partial role name matches.
- The API uses Basic Authentication with username and password.
- The unique identifier (`id`) for the shared library must be provided in the request.
- Defines a shift, including its name, ID, the group to which it belongs, and the
  members it contains.
- The unique identifier (id) can be used to identify the site.
- Depending on your permission level, you will see either the unique identifier (id)
  and name of the site or all site information.
- The country must be marked as Active in the Admin tab before setting it here.
- The language must be enabled in xMatters before setting it here.
- The timezone must be marked as Active in the Admin tab before setting it here.
- Response codes returned by the xMatters REST API include 200 OK for successful requests.
- To limit results, use the `from` and `to` query parameters.
- The change record cannot be modified or deleted once created.
- Access to historical data is limited by your pricing plan.
- UUIDs recommended for event IDs to ensure correct results.
- Event suppressions are controlled by flood control rules.
- API requires valid username and password for authentication
- Ensure to use valid username and password for the xMatters endpoint.
- Groups are returned as a paginated list and are sorted in alphabetical order.
- Use the Authorization header for Basic Auth with username and password.
- Paginated list of uploaded User Upload or EPIC ZipSync files.
- The integration logs can be useful when debugging issues with integrations or flow
  steps.
- To view a group's on-call schedule in universal time, set the display timezone to
  (UTC+0000)GMT.
- To obtain a new access token using your refresh token and client ID
- Access tokens can be revoked at any time
- Communication plans and built-in integration configurations are used to define how
  an event is processed.
- Response includes group memberships and supervisors for a person.
- If the id field is not included, xMatters treats this as a request to create a new
  person.
- Search terms must contain at least two characters and can be enclosed in double
  quotes for exact matches.
- To find the IDs of services in your system see [Get services](#get-services)
- When setting the start and end time of the shift, either use the timezone parameter
  in your request, or make sure you convert the date and time in your group's time
  zone to UTC.
- The API returns a list of subscription forms based on the user's permission level.
- Specific fields may return null if the user does not have permission to view them.
- Create a subscription requires a subscription form to be created in the web user
  interface.
- Returns a list of subscriptions.
- Returns a list of all users who subscribe to a subscription.
- The subscription form must have the subscribeOthers field set to true to add recipients.
- Devices include voice and text phones, email addresses, pagers, mobile apps, and
  more.
- Only company administrators and company supervisors currently have permission to
  create, edit, and delete privileged devices.
- This endpoint takes the place of GET notifications, which is now deprecated.
- Ensure that the API keys are properly configured to access the endpoints.
- Requires username and password for basic authentication
- Use ?embed=shifts to include shift information for On-Call groups.
- The observedByAll parameter defines which roles can send notifications to a group.
- Endpoint requires a valid username and password for Basic Authentication.
- This API returns tokens of type 'bearer'.
- You can identify the person using either their user name (the targetName field)
  or their unique identifier (the id field).
- Users need permission to manage scenarios for the form.
- Any optional parameters not set in the scenario use the form defaults.
- This script is configured to work with xMatters Flow Designer.
- For complex shifts, the time is relative to the authenticating user.
- Supports embedding deviceNames, propertyDefinitions, and roles in subscription forms.
- Authenticating users must have permission to see subscribers.
- Uploaded files cannot be removed and should be attached to events or scenarios as
  quickly as possible.
- UUID is recommended for event ID to ensure results are returned.
- Forms must be created before enabling them for use.
- If the id field is not provided in the request body, it is interpreted as a request
  to create a new request parameter.
- Requires OAuth2 authentication setup.
- The API does not support legacy groups that use shared teams across shifts.
- A dynamic group must have at least one supervisor.
- Use the Trigger an incident endpoint for more robust functionality.
- Uses OAuth2 with password grant type
- When accessing historical data, ensure you do not have a timeframe that spans from
  the past to the future.
- 'If an inaccurate id is submitted with the request, xMatters will do one of two
  things: create a new user or modify the existing user.'
- Allows wildcards in role name searches.
- Up to 10 attachment files can be added when creating a scenario.
- Search terms must contain at least two characters and can be case-insensitive.
- Use unique identifier (`id`) for groups and shifts.
- Query parameters can filter results based on duty status.
- The groupID and shiftID should be specified in the URL parameters for operations.
- The site ID can be identified by its name or identifier.
- The subscription form name must be unique within your company.
- When setting the scope to FORM, you must include the form parameter.
- For creating subscription forms, the scope can be either ALL_FORMS or FORM.
- The unique name of the import job defaults to 'User Upload v1.5 at {date/timestamp}'
  if not specified.
- Files uploaded cannot be removed once uploaded.
- The maximum value of the limit parameter is 1000.
- Use the 'at' parameter to search for information on an object at a specified point
  in time.
- Privileged devices redact specific information such as phone numbers and email addresses.
- The comment appears in the event tracking report and is returned when you request
  event comments.
- For a list of response codes returned by the xMatters REST API, see [HTTP Response
  Codes](#http-response-codes).
- The default trigger type for forms is MESSAGING.
- Response includes the created message template ID.
- For On-Call groups, embed shift information by including ?embed=shifts.
- Default incident severity is Medium.
- Default incident status is OPEN.
- Uses OAuth2.0 authentication for API access.
- When accessing who is on call now, set the 'from' parameter to a time no more than
  24 hours in the past.
- To obtain an initial access token and refresh token, provide your client ID, username,
  and password.
- UUID must match the format specified and cannot be used for other objects within
  xMatters.
- Some fields may not be returned in the response.
- Use ?embed=supervisors to embed a list of supervisors in another request.
- Use ?embed=roles to include a list of roles in the Person object.
- Requires username and password for authentication.
- Use valid username and password for authentication.
- To locate the identifier for a site, use Get Sites or see the documentation.
- The scope parameter can be set to ALL_FORMS or FORM.
- If scope is FORM, the form parameter must be included.
- Once uploaded, files cannot be removed and should be attached quickly.
- When searching timeframe-based historical data, the 'to' parameter cannot be within
  15 minutes of the current time.
- Change records cannot be modified or deleted once created.
- Privileged devices redact specific information depending on permission settings.
- Uses Basic Authentication — requires valid username and password
- Always use the UUID for eventID to ensure results.
- Use embed to list additional objects to include in the response.
- Using the legacy form identifier will result in an error.
- Default values for mobileEnabled, uiEnabled, and apiEnabled are false upon creation.
- Requires setup of valid username and password for basic auth
- The `language` field is mandatory and must contain a valid two-letter ISO 639 code.
- Success responses return a 200 OK status.
- Modify a form response option by providing its unique identifier in the id field.
- This API retrieves all members of a specified group.
- Ensure to replace {groupId} with the actual group ID.
- The groupType cannot be changed once a group is created.
- For triggering an incident, use the POST /api/xm/1/forms/{id}/triggers endpoint.
- Uses Basic Authentication — requires valid username and password.
- Initial access token requires username and password for authentication.
- Use the embed query parameter to enhance the result to include more information
  about the owner of device members.
- If no timeframe is specified, the query returns only the shifts that are currently
  on call.
- Excludes inactive users or group members who are on temporary absence with no replacement.
- UUID can only contain letters a-f, numbers 0-9, and dashes.
- Supports uploading attachments up to 10 MB.
- Requires appropriate permissions for scenario management.
- Can attach up to 10 files, total size must not exceed 10 MB.
- The unique identifier (`id`) for groups and shifts can be used in requests.
- Use unique identifiers for groups and shifts in API requests.
- If shift `start` and `end` parameters are not provided, a 24x7 shift is created.
- The request must include valid authentication credentials.
- The API provides access to shift and member details.
- Response includes subscription form objects based on permission level.
- Filtering supported via query parameters.
- Uploads must be in .csv format.
- As multi-part forms are not supported, this feature is not available in the Integration
  Builder.
- When using the 'at' parameter, ensure the timestamp is not earlier than the allowed
  timeframe based on your pricing plan.
- Searching by various criteria is supported for events.
- Devices marked as privileged redact specific information from users without appropriate
  permissions.
- Returns information about an event, including the person who initiated the event
  and the form used to create the event.
- The use of `formId` refers specifically to the UUID of a form.
- FormId and PlanId must be URL-encoded when used in requests.
- Response status code 201 indicates successful creation of message template.
- Create voice, text, or email message templates for a form.
- Create the responses available to users when they receive a notification.
- Create a conference bridge section in a form.
- Group visibility is set by the observedByAll parameter, which can be true or false.
- Use this endpoint to retrieve a paginated list of a group's supervisors.
- Returns a paginated list of the recipients of a specified group.
- Use ?embed=supervisors to get supervisor details for dynamic groups.
- Incidents created through the incident endpoint do not trigger flows.
- Logging must be enabled for the integration, flow, or built-in configuration to
  see successful requests.
- Default severity of incidents is 'Medium'.
- Default status of incidents is 'OPEN'.
- You cannot have a timeframe that spans from the past to the future and there is
  a 24-hour synchronization window for on-call data before it is available.
- UUID must be valid and cannot match the UUID of any other objects within xMatters.
- Requires setup of endpoint authentication
- Endpoints are external and may vary by plan
- Use wildcards in role search with allowWildcards=true
- Uses HTTP Basic Authentication with username and password.
- The scenario ID and form ID must be provided in the respective endpoints.
- When using multiple search terms, enclose in double quotes to preserve spaces.
- When you request a site, the language code is returned as a two-letter code following
  the ISO 639 format.
- A site cannot be deleted if it is the default site or it is in use by any Users
  or Groups.
- The API uses basic authentication.
- Subscriptions allow you to receive notifications even if you are not targeted as
  a recipient of the event.
- The API responses may include nested data structures.
- All query parameters are optional for GET requests.
- The start and end times are defined in UTC format.
- To use the device method, you must know the unique identifier of the device.
- Using Basic Authentication with username and password.
- The unique identifier of the event is provided in the 'id' field.
- The numeric identifier of the event is provided in the 'eventId' field.
- Event suppressions retrieve records of any suppressions resulting from event flood
  control rules.
- Names must be URL-encoded when retrieving forms or plans.
- Using legacy form identifiers will result in an error.
- The subject of the message template is 'An xMatters incident requires your attention.'
- POST /plans/{planId}/forms creates a form for a plan.
- POST /forms/{formId}/message-templates creates message templates for forms.
- For On-Call groups, member must be added to at least one shift to receive notifications.
- The integration requires a valid username and password.
- Use the `embed` query parameters to enhance the result to include more information
  about the owner of device members.
- Use the `include` query parameter to include all gaps in shift coverage.
- UUID must not match the UUID of any other objects within xMatters.
- If the `id` field is not included, xMatters treats the request as a new user creation.
- Plan types must be 'PLAN' for creation, modification, and deletion of constants.
- The UUID of the plan must be specified in the URL for modifying properties.
- Operand parameter expands or limits search results.
- Searching with multiple terms requires double quotes to preserve delimiters.
- Dynamic groups cannot be set as service owners.
- Get shifts can be filtered by created dates.
- Use unique identifiers for groups and shifts when making requests.
- Uses basic authentication.
- While we've renamed 'events' to 'alerts' in the web user interface, we are not changing
  any of the properties, values, or labels associated with events in the REST API.
- Retrieve an event including targeted recipients using GET /events/{eventId}?embed=recipients&targeted=true
- Retrieve an event including resolved recipients using GET /events/{eventId}?embed=recipients
- UUID is recommended for event ID.
- Historical data requires `at` parameter.
- Forms can be retrieved with various query parameters to filter or sort the results.
- The `language` field must contain a valid two-letter ISO 639 code.
- The six digit legacy numeric form identifier should not be used in place of the
  UUID when making API requests.
- The sender permission values overwrite all previously stored values.
- Use groupId parameter to specify the group in the endpoints.
- Ensure to configure the API with valid username and password.
- Shift times are defined in universal time (UTC) format.
- Uses OAuth2 with password grant type — requires username and password for access.
- Communication plans allow tailored communications based on business processes.
- This API requires basic authentication using username and password.
- When searching with multiple terms, use double quotes to preserve delimiters.
- This API uses basic authentication with username and password.
- For authentication, use a valid username and password.
- Shift members can be filtered by onDuty parameter.
- The unique identifier (id) is recommended for group and shift identification.
- The groupID and shiftID need to be specified in the URL for certain endpoints.
- For adding a member, if no position is specified, the member will be added to the
  end of the shift.
- Request for subscription forms includes pagination parameters.
- You can create a subscription form for all forms in the plan or for a specific form.
- Use appropriate permissions to access subscription deletion.
- Check user roles for subscription management capabilities.
- The authenticating REST API user must have the ability.act.HistoricalDataAccess
  permission.
- Only company administrators and company supervisors have permission to create, edit,
  and delete privileged devices.
- If search parameters are provided, only matching events are returned.
- Event suppressions let you retrieve records of any suppressions resulting from event
  flood control rules for a particular event.
- To delete a conference bridge, the unique identifier (id) must be known.
- Use the response options below to move the workflow forward.
- Use the response options to create user responses when they receive a notification.
- Only one form section of each type is allowed per form.
- The only required parameter for modifying a form response option is the unique identifier
  of the form.
- For On-Call groups, must add the member to at least one shift before they will receive
  notifications.
- The `groupType` cannot be changed after the group is created.
- If the `id` field is not provided, xMatters generates a UUID.
- The initial severity of the incident defaults to 'Medium' if not provided.
- The initial status of the incident defaults to 'OPEN' if not provided.
- Uses OAuth2.0 authentication with access and refresh tokens.
- Uses OAuth2 with password grant type — requires client ID, username, and password.
- To delete a person, use either their user name (targetName) or their unique identifier
  (id).
- Uses Basic Authentication for access.
- Use the allowWildcards query parameter to search for roles by name.
- Supports creating scenarios with attachments, limit of 10 MB total size.
- Requires permission to manage scenarios for the specified form.
- The unique identifier (`id`) of the plan is required as a URL parameter when creating
  or modifying subscription forms.
- The request must include the subscription ID for modification.
- Uploads a user upload v1.5 template file and creates a user upload job that performs
  an asynchronous bulk import of user data. Upload files must be in .csv format.
- Privileged devices redact specific information.
- Only company administrators and supervisors have permission to create, edit, and
  delete privileged devices.
- Ensure formId and planId are URL-encoded when used in requests
- Template fields must be HTML encoded.
- Identify the form by its unique identifier in the id field.
- For On-Call groups, must add the member to at least one shift before they receive
  notifications.
- For On-Call groups, the groupType cannot be changed after creation.
- Use the appropriate groupId for accessing group-specific data.
- Dynamic groups can be queried with specific criteria.
- Uses OAuth2.0 authentication — requires client ID and user credentials.
- Access tokens must be refreshed periodically.
- To include all gaps in shift coverage, use the include query parameter with value
  GAPS.
- The API allows for both retrieving and creating communication plans.
- Devices may return asterisks for privileged information.
- If 'id' is not included in a request to modify a person, a new user is created.
- Supports pagination for roles and scenarios.
- Group ID and shift ID must be specified for certain endpoints.
- Pagination query parameters supported
- You can attach a maximum of 10 files, and the size limit for each file is 10 MB.
- Uploads a file to xMatters for use as an attachment with existing events and scenarios.
  Once uploaded, the file cannot be removed.
- The language field in the email, sms, and voice templates must contain a valid two-letter
  ISO 639 code.
- Use `embed=shifts` to include shift information for On-Call groups.
- Default severity is Medium if not provided.
- Default status is OPEN if not provided.
- The access token expires after a fixed number of seconds as described by the `expires_in`
  field.
- You can identify groups by their name (`targetName`) or unique identifier (`id`)
- The API supports retrieving communication plans and their details.
- Plan names can be URL-encoded when making requests.
- Uses OAuth2 for authentication.
- Pagination is controlled by offset and limit query parameters.
- Ensure to set up authentication headers correctly.
- Use basic authentication for API calls.
- Shift members may have varying delay and escalation types.
- Responses to site creation requests return a JSON object that includes the ID of
  the newly created site.
- If propertyDefinitions are not specified, subscriptions created using the form are
  sent for every event.
- Users with appropriate permissions can modify settings for a subscription.
- Describes a temporary absence, including the group it applies to and any replacement
  that was set.
- Multi-part forms are not supported in the Integration Builder
- All query parameters are optional; you can use them to fine-tune the results.
- To query historical data, the user must have the ability.act.HistoricalDataAccess
  permission.
- Devices can be marked as privileged, which may restrict access to certain information.
- Use the `embed` query parameter to include additional objects in the response.
- Requires setup of username and password for HTTP Basic Authentication.
- Email templates must be HTML encoded.
- The language field is mandatory for SMS and email templates.
- Some fields might not be included in all instances.
- On-call groups must add members to at least one shift to receive notifications.
- Broadcast groups do not contain any calendar or shift information.
- The default severity of incidents is Medium.
- The default status of incidents is OPEN.
- Use the embed query parameter to include more information about the owner of device
  members.
- The initial access token and refresh token are obtained by making a call to `POST
  /oauth2/token`.
- The on-call summary excludes inactive users or group members who are on temporary
  absence with no replacement.
- Requires valid username and password for basic authentication
- Use the allowWildcards query parameter to search for roles.
- Use quotes for multi-word search terms.
- Shift details include group ID, shift ID, and member details.
- This API uses Basic Authentication with a username and password.
- To locate the identifier for a site in the xMatters user interface, use Get Sites
  or see Locate the identifier for a site.
- The response structure includes count and total.
- The unique identifier (`id`) must be specified to update a subscription form.
- Requests must use UTF-8 character encoding.
- Files uploaded cannot be removed and should be attached to events or scenarios as
  quickly as possible.
- The subject and body fields must be included in the request payload.
- Use the response options to guide users when they receive a notification.
- Form sections can only contain one of each type of section except Custom sections.
- Use the `?embed=shifts` query parameter to include shift information for On-Call
  groups.
- Use the ?embed=supervisors query parameter to include group supervisors in responses.
- Access tokens expire after a fixed number of seconds as described by the 'expires_in'
  field.
- You can obtain a new access token using the refresh token.
- You can only use properties that are already defined in the web user interface when
  adding new users.
- User 'mmcbride' is used as an example in the documentation.
- If the id field is not included xMatters treats this as a request to create a new
  person.
- To find the `id` of a property in a plan, use `GET plans`.
- Supports scenario creation with up to 10 attachments
- Combined size of attachments must not exceed 10 MB
- Use double quotes to preserve spaces in search terms.
- Use the unique identifier (id) for groups and shifts to avoid issues with name changes.
- For a specific communication plan, requires planId.
- Device types include EMAIL, TEXT_PAGER, TEXT_PHONE, VOICE.
- You must know the unique identifier (`id`) of the conference bridge for deletion.
- Uses Basic Auth with username and password for authentication.
- This is the notification sent from xMatters when it receives the alert from your
  ITSM application.
- If you are adding groups as members of other groups, note that on-call groups cannot
  be members of broadcast groups.
- Use ?embed=supervisors to include supervisor data
- Use the correct groupId when making requests for specific groups.
- Uses OAuth2 with password grant type — requires setup of client ID in xMatters
- Ensure to handle token expiration and refresh tokens accordingly
- Use the search query parameter to return users with matching names, user IDs, email
  address, or phone numbers.
- Response codes include 201 for created resources and 200 for successful deletions.
- The UUID of the plan is required to modify its properties.
- You can add up to 10 attachment files with a combined size not exceeding 10 MB.
- Service dependencies in the response represent a direct relationship between a service
  and its dependent.
- The API uses Basic Authentication.
- Make sure to replace {groupID} and {shiftID} with actual values in the endpoint
  paths.
- The request payload for adding a member to a shift includes parameters such as position,
  delay, escalationType, inRotation, and onDuty.
- Subscription forms can be created for all forms in a communication plan or for a
  single form.
- When creating a subscription form, the form name must be unique within your company.
- To specify a specific form, set the scope parameter to FORM.
- Users and roles in the provided list overwrite all previously stored share permissions
  for the subscription.
- Searching for multiple terms requires enclosing them in double quotes.
- The unique identifier (uuid) or name (targetName) of the plan the forms belong to
  must be URL-encoded.
- Names must be URL-encoded when retrieving forms.
- Uses Basic Authentication for xMatters endpoints
- The access tokens expire after a fixed number of seconds as described by the `expires_in`
  field returned in the response body.
- You can access historical data using to and from without using the at parameter.
- Logging must be enabled for the integration to see successful requests.
- Requires authentication via username and password.
- Supports basic authentication using username and password.
- The API supports pagination for shifts.
- All requests require valid authentication.
- Uses Basic Auth — requires valid username and password
- Response includes unique identifier and name of the subscription form depending
  on permission level.
- The id of the subscription form is required to update it.
- If 'scope' is set to FORM, a specific form ID must be included.
- Use query parameters to filter the results.
- Access to historical data is limited by pricing plan
- The response options include `number`, `text`, `description`, `prompt`, `action`,
  `contribution`, `joinConference`, and `allowComments`.
- Providing the id field is optional; if not provided, a new UUID is generated.
- Paginated responses are returned for group supervisors and recipients.
- Retrieve paginated list of uploaded files using GET /imports
- Requires setup of user credentials for basic authentication
- Requires username and password for authentication
- When accessing who is on call now, or for a shift in the future, you'll need to
  set the from parameter to a time no more than 24 hours in the past.
- Initial access token requires username and password.
- To include a list of the person's roles, use the ?embed=roles query parameter.
- Use the query parameters to limit your search by plan type or search for a particular
  keyword.
- Endpoint requires valid username and password for authentication.
- The API requires authentication via username and password.
- Only communication plans with a planType of PLAN can be deleted.
- Search results are case-insensitive.
- Specify a group by its name or identifier to get shifts.
- If the start and end parameters are not provided, a 24 x 7 shift is created.
- The shift is active on the specified days of the week.
- The shift includes members who may have different roles.
- The DELETE command is used to unsubscribe a user from a subscription.
- Start and end times are in UTC format and may not reflect the user's time zone.
- The change records give users additional insights into how changes such as deployments
  can impact their service health.
- Once a change record is created, it cannot be modified or deleted from the system.
- The maximum payload size is 200,000 bytes.
- Inbound integrations can receive a maximum of 10 files, and the size limit for each
  file is 10 MB.
- Forms can be filtered by several parameters such as enabledFor, sortBy, and triggerType.
- Ensure to handle pagination when retrieving forms.
- Default trigger type for forms is 'MESSAGING'.
- Default values for mobileEnabled, uiEnabled, and apiEnabled upon creation are all
  'false'.
- Ensure that formId and planId are URL-encoded when making requests.
- The six digit legacy numeric form identifier should *not* be used in place of the
  UUID when making API requests.
- For sender permissions, the values overwrite previously stored values.
- For on-call groups, you must add the member to at least one shift before they will
  receive notifications.
- On-call groups cannot contain broadcast groups as members.
- Use the ?embed=supervisors query parameter to get the supervisors of a dynamic group.
- Incidents created through the POST /incidents endpoint do not trigger flows and
  lack robust functionality.
- Recipient types may include PERSON and DEVICE.
- For property definitions, the required fields are id and propertyType.
- The API supports pagination for roles and scenarios.
- To locate the identifier or name for a group, see Get groups.
- You can locate the name of a group in the web user interface.
- The unique identifier (`id`) or name (`targetName`) should be used to identify groups
  and shifts.
- Users can subscribe to notifications created by forms in the plan.
- The request must include the subscription ID
- The form itself cannot be modified
- The start and end times are defined in UTC format and may not reflect the time zone
  of the authenticating user.
- To limit results to a specific timeframe, use the `from` and `to` query parameters.
- Devices must have sufficient permissions to view or edit data.
- Maximum payload size for inbound integrations is 200,000 bytes.
- You must know the unique identifier (id) of the conference bridge to delete it.
- Form can only contain one of each type of section and you can only send one form
  section per request.
- The unique identifier (`id`) of the form should not be used in place of the UUID
  when making API requests.
- For On-Call groups, members must be added to at least one shift to receive notifications
- Uses basic auth with username and password
- If a group's creator has limited the visibility by setting specific roles as observers,
  the observedByAll is set to false.
- Revoking tokens can be done via the xMatters Web user interface.
- To refresh an access token, provide the client ID and a refresh token.
- Utilizes basic authentication for endpoints.
- This endpoint allows modification of existing properties in a communication plan.
- Uses basic auth with username and password.
- Searching with multiple terms requires double quotes for phrases.
- Basic authentication requires a valid username and password.
- For a list of response codes returned by the xMatters REST API, see HTTP Response
  Codes
- Use unique identifiers (id) for groups and shifts to avoid issues.
- The group to which the shift belongs can be referenced using the group ID.
- The unique identifier (`id`) of the subscription form is required to update it.
- Supports embedding device names, property definitions, and roles in the response.
- To add recipients, `subscribeOthers` must be set to true in the subscription form.
- This endpoint allows a user with the appropriate permissions to delete a single
  subscription from the system.
- Absences can be created with or without a specified replacement.
- Files uploaded cannot be removed from xMatters.
- Changing records cannot be modified or deleted after creation.
- You must know the unique identifier of the device to retrieve it.
- You must know the unique identifier (`id`) of the conference bridge to delete it.
- Each form can only contain one of each type of section.
- For On-Call groups you can optionally include information about shifts by including
  the ?embed=shifts query parameter in the request.
- If groupType is not specified, the group is created as an On-Call group.
- This endpoint is only available for User Upload files.
- When triggering an incident, default form settings are used if no settings are provided.
- Uses Basic Authentication — requires username and password.
- Requires setup of OAuth2 authentication.
- Searching is case-insensitive and must contain at least two characters.
- Shift to respond to critical issues whenever they occur
- Uses Basic Auth — requires username and password for access.
- The unique identifier id of the plan is required for fetching subscription forms
  in a specific communication plan.
- The form itself cannot be modified.
- Privileged devices redact specific information based on permission settings.
- Searching by various criteria is supported, including form properties and event
  status.
- UUID is recommended for event IDs.
- Requires a valid username and password for basic authentication.
- Forms are not enabled for mobile, UI, or API by default.
- For the specific parameters of each available form section, see the Forms Section
  object.
- Configure the xMatters endpoint to use a valid username and password.
- For on-call groups, you must add the member to at least one shift before they will
  be able to receive notifications.
- Group endpoints accept a groupId as a URL parameter.
- The default status of incidents is Open.
- Requires setup of valid username and password.
- The plan type must be 'PLAN' to delete.
- Use the allowWildcards parameter to search for roles with partial names.
- Use unique identifiers (id) for groups and shifts.
- Use the xMatters web user interface to add new shifts for complex configurations.
- The request requires valid username and password for authentication.
- The request must include valid authentication credentials in the header.
- The API requires username and password for authentication.
- The unique identifier (`id`) of the plan is required as a URL parameter when creating
  a subscription form.
- If `scope` is set to FORM, the `form` parameter must also be included.
- The request must include the subscription ID for modifications.
- The form itself cannot be modified, and the request must not include the form property.
- When using the `from` and `to` parameters, the response includes all absences in
  the specified time range.
- Updates to changes cannot be modified or deleted once created.
- Each attachment size limit is 10 MB.
- UUIDs are recommended for identifiers.
- Event suppressions can be retrieved for a particular event.
- Response options are available for the form.
- Recipients for the form can be embedded in the response.
- While creating message templates, the language field is mandatory and must contain
  a valid two-letter ISO 639 code.
- Only one section of each type can be sent per request.
- 'For on-call groups only: You must add the member to at least one shift before they
  will be able to receive notifications.'
- Use the correct groupId in the endpoint paths.
- Incidents created through POST /incidents do not trigger flows.
- Uses OAuth2 with password grant — requires setup of client ID and user account
- If 'id' is not included, xMatters treats it as a request to create a new person.
- Endpoint type is EXTERNAL.
- Authentication type is OAUTH2.
- The UUID of the plan is required to add a property.
- The unique identifier for the shared library is required for deletion.
- The time zone must already be in the configured list of time zones for your company.
- Shift details include ID, name, start and end times, and members.
- Response code 200 OK returns a pagination of Subscription Form objects.
- The timezone must be marked as Active in the Admin tab before you can set it here.
- Subscription forms allow users to subscribe to notifications created by forms in
  a plan.
- Users must have permission to see subscribers.
- Roles without appropriate permission settings receive an error message.
- Base URL identifies your xMatters company and the version of the API you are using.
- Use of at parameter requires proper permissions.
- Forms are not immediately enabled for mobile, UI, or API use upon creation.
- Use existing templates as a base rather than creating new ones.
- Form ID must be URL-encoded.
- You can only send one form section per request
- The recipient values in the provided list overwrite all previously stored values
- For on-call groups, members must be added to a shift to receive notifications.
- Group visibility is set by the `observedByAll` parameter.
- This API provides endpoints for managing import jobs, including retrieving job details
  and messages.
- Uses basic authentication — requires valid username and password for access.
- Uses OAuth2 authentication
- If `start` and `end` parameters are not provided, a 24 x 7 shift is created.
- This method allows you to specify how to insert the member into the escalation timeline.
- To create a new site, make a POST request to /sites and include a Site object in
  the request body.
- The name of the site has a maximum of 100 characters.
- Subscriptions can be based on a specific form or all forms in the communication
  plan.
- Pagination support with offset and limit.
- Sorting support by name and description.
- Responses return a Temporary Absence object that represents the created or deleted
  absence.
- Requests should use UTF-8 character encoding.
- Maximum value of the limit parameter is 1000.
- Once uploaded, the file cannot be removed and should be attached quickly.
- UUID is recommended for event IDs to ensure accurate results.
- The use of formId refers specifically to the UUID of a form and not to the six-digit
  legacy form identifier.
- Use the UUID of a form, not the six-digit legacy form identifier.
- The template must be HTML encoded.
- Form sections can only contain one of each type, and only one form section can be
  sent per request.
- The API requires authentication with a username and password.
- Access tokens can be revoked at any time.
- Uses OAuth2 for authentication
- Access tokens must be refreshed periodically
- Use the 'embed' query parameter to enhance the result to include more information
  about the owner of device members.
- This API requires a valid username and password.
- Use wildcards in role name queries with allowWildcards=true.
- Requires authentication using username and password.
- Identify the shift using either the shift name or its unique identifier.
- When adding a member to a shift, the position parameter determines their place in
  the escalation timeline.
- The name of the subscription form must be unique within your company.
- If `scope` is set to FORM, you must also include the `form` parameter.
- Filters can be applied using query parameters to return specific subscriptions.
- The DELETE command for subscriptions does not delete the subscription itself.
- Allows you to trigger an event from a third-party system or your own application.
- 'Use ''embed'' to list additional objects to include in the response: responseOptions,
  recipients.'
- Requires username and password for Basic Authentication
- Form sections can only contain one of each type of section and you can only send
  one form section per request.
- When adding group members, you can have a maximum of 200 members in an on-call group
  and 1000 members in a broadcast group.
- If a group is created without specifying a groupType, it defaults to an On-Call
  group.
- The API uses basic authentication with username and password.
- Uses OAuth2 with password grant type — requires client ID and user credentials.
- Uses Basic Auth with username and password
- An empty response is returned if the account is not entitled to Stakeholder users.
- xMatters API requires a valid username and password for authentication.
- Use the allowWildcards query parameter to search role names with wildcards.
- Sorting requires both sortBy and sortOrder parameters.
- The API supports pagination through the offset and limit parameters.
- Subscription forms can be created for all forms in a communication plan or for a
  specific form.
- The unique identifier (`id`) of the plan must be specified in the URL parameters.
- Must have a subscription form created in the web user interface before creating
  a subscription.
- Historical data permission requires the ability.act.HistoricalDataAccess permission.
- Privileged devices redact specific information, such as phone numbers, from users
  without the appropriate permission settings.
- Only company supervisors and administrators can create, edit, and delete privileged
  devices.
- To retrieve an event including resolved recipients, use GET /events/{eventId}?embed=recipients.
- Ensure to use UUID for formId and planId in requests.
- Requires HTTP Basic Authentication
- Only one form section of each type can be added per request.
- For On-Call groups, you must add the member to at least one shift before they will
  be able to receive notifications.
- Use ?embed=supervisors to embed group supervisors in group calls.
- Use the appropriate authentication method for xMatters API.
- You must assign at least one role to a new user and may optionally assign one or
  more supervisors.
- Returns a list of groups that a person belongs to directly.
- Plan ID is required to modify or delete a plan.
- Basic authentication with username and password is required.
- Configure the API with valid username and password.
- Uses HTTP Basic Authentication with username and password
- Supports basic authentication with username and password.
- The request body for adding a member includes parameters such as position, delay,
  escalationType, inRotation, and onDuty.
- Shifts are defined per group and include details about members.
- Site names and IDs are used to identify sites.
- Retrieve subscription forms using GET request with appropriate permissions.
- Subscribing requires valid user credentials.
- To add recipients, the subscription form must have the subscribeOthers field set
  to true.
- Each file has a maximum file size of 10 MB
- Uploaded files cannot be removed and should be attached to events or scenarios quickly
- Devices must have sufficient permissions to view or edit.
- Response code 200 OK returns a list of change records.
- When searching historical data, the 'to' or 'before' parameters cannot be within
  15 minutes of the current time.
- Use the unique identifier (id) or name (targetName) of the form or plan to modify
  it.
- Incidents created through the create incident endpoint do not trigger flows.
- Default severity is Medium if not specified.
- Default status is Open if not specified.
- Users' devices marked as 'privileged' may show asterisks for sensitive information.
- The access tokens can be revoked at any time.
- Returns the active members of a group in their order of escalation for each shift.
  The maximum number of returned results per request is 1000.
- The uuid can only contain letters a-f, numbers 0-9, and dashes.
- The request will treat an inaccurate `id` as a request to create a new person.
- Requires valid username and password for API access
- Search is case-insensitive and must contain at least two characters.
- The only required body parameter for modifying a scheduled message is the UUID of
  the scheduled message you want to update.
- Members can be filtered by onDuty status.
- The request must include a valid username and password for authentication.
- If devices are marked as privileged, asterisks will replace sensitive information.
- Privileged devices redact specific information from users without permission.
- Forms sections are specific to messaging and flow trigger forms.
- The only required parameter for modifying a form message template is the unique
  identifier of the form.
- If the id field is not provided in the request body for response options, it is
  interpreted as a request to create a new request parameter.
- If a group's creator has limited visibility, only specified roles can send notifications.
- Uses OAuth2.0 authentication.
- Access tokens expire after a fixed number of seconds
- If an inaccurate `id` is submitted, xMatters will create a new user if it doesn't
  exist or modify the existing user.
- Requires setup of connected app in api
- The authentication type can be BASIC or OAUTH2 depending on the endpoint.
- Use Basic Authentication with username and password.
- The maximum number of attachment files is 10, with a total size limit of 10 MB.
- Response codes include standard HTTP response codes.
- Uses basic authentication with username and password
- The site object includes properties such as id, name, country, language, and timezone.
- This API allows adding members to shifts, deleting shifts, and restoring deleted
  shift occurrences.
- Returns a list of subscription forms in a specific communication plan.
- Uses Basic authentication with username and password.
- Changing records cannot be modified or deleted once created.
- Returns a list of Group objects that represent the on-call, broadcast, and dynamic
  groups in the system.
- Incidents created through the /incidents endpoint do not trigger flows and do not
  have the robust functionality of user responses.
- The unique identifier for incidents is required to add timeline notes.
- Uses OAuth2 authentication.
- Endpoint requires a valid username and password for authentication.
- Use wildcards in the name parameter to search for roles.
- Use basic authentication with username and password
- The unique identifier for a group can be either its ID or targetName.
- The unique identifier for a shift can be either its ID or targetName.
- For shifts that rotate through the escalation order, you can also set whether a
  shift member is on-duty or off-duty.
- The API allows embedding additional objects in the response.
- When using the `from` and `to` parameters in queries, the response includes absences
  in the specified time range.
- Use the 'embed' parameter to include additional objects in the response.
- Forms that trigger messages have a default trigger type of 'MESSAGING'.
- The `language` field is mandatory for email and SMS templates and must contain a
  valid two-letter ISO 639 code.
- Use the `?embed=shifts` query parameter to include shift information in the response
  for On-Call groups.
- 'The transform type of the submitted file can include: users-v1, epic-v1.'
- 'Response codes include: 200 OK, 400 Bad Request, 401 Unauthorized.'
- Uses OAuth2.0 authentication with client ID and credentials.
- The access tokens expire after a fixed number of seconds as described by the `expires_in`
  field.
- For groups that have commas in the name, URL-encode the comma.
- UUID must be valid and unique within xMatters.
- Responses include status codes indicating success or errors.
- Use this to retrieve and manage communication plans.
- Requires appropriate permissions to modify or delete constants and endpoints.
- Endpoint requires planId to be specified in the URL.
- This API supports operations to manage services including creating, modifying, and
  deleting services.
- Use a valid username and password for authentication.
- The subscription form must have a unique name within your company.
- Subscriptions can be created for all forms in the plan or for a specific form.
- Use Basic Auth with username and password.
- The response includes a pagination of Subscription Form objects.
- You may need to specify a replacement depending on your company's requirements.
- Possible use of HTML in request body for message templates.
- For email templates, the template must be HTML encoded.
- Uses Basic authentication with username and password
- The unique identifier (`id`) must be provided for incident updates.
- Use the correct UUID format for incidentID in timeline entries.
- The initial access token and refresh token are obtained by authenticating with a
  client ID, user name, and password.
- User must have appropriate permissions to modify or delete plans.
- When creating a scenario, you can add up to 10 attachment files. The combined size
  of the attachments must not exceed 10 MB.
- Shift times are in UTC.
- Shift members can be in rotation or fixed.
- Subscribing to notifications is based on unique subscription forms.
- Temporary absences may not be in the time zone of the authenticating user.
- Responses include detailed information about members and groups associated with
  absences.
- The unique identifier (`id`) of the absence.
- 'The type of absence: VACANCY: No replacement is set for the absent user. REPLACEMENT:
  A replacement is specified.'
- Requests with other character encoding formats may result in errors and unprocessed
  requests.
- To retrieve comments for an event, use the `/audits` endpoint with the `?auditType=EVENT_ANNOTATED`
  query parameter.
- The authenticating user who posts the request is considered the author of the comment.
- We recommend using the UUID for event identifiers.
- Creating a conference bridge configuration does not automatically initiate a conference
  bridge.
- Event suppressions let you retrieve records of any suppressions resulting from event
  flood control rules.
- The default trigger type is MESSAGING if not specified.
- While the other fields are optional, the `language` field is mandatory and must
  contain a valid two-letter ISO 639 code.
- Revoking authentication tokens is done using the xMatters Web user interface.
- To view a group's on-call schedule in universal time, set the display timezone to
  (UTC+0000)GMT
- The authorization token provides the same xMatters permissions as the user account
  used to create the token.
- You can only use properties that are already defined in the web user interface.
- Some endpoints require specific query parameters for detailed results.
- Devices can be marked as 'privileged' by a company supervisor.
- Use the UUID of the plan to modify its properties.
- When your search term contains more than one word, enclose the terms in double quotes.
- Multiple or nested dependencies are not returned in the response.
- Specify a group by its name or identifier to retrieve shifts.
- The API requires authentication using basic auth with username and password.
- Response includes pagination of Subscription Form objects.
- Use the correct plan ID in the URL parameters.
- Privileged devices redact specific information for non-permitted users.
- If no search parameters are provided, returns a paginated list of all the events
  the authenticating user has permission to view.
- Attachments can include a maximum of 10 files, with a size limit of 10 MB each.
- You must know the unique identifier (`id`) of the conference bridge to delete.
- Response codes may vary based on the method being used.
- Sender permission values overwrite all previously stored values.
- API does not support legacy groups that use shared teams across shifts.
- For On-Call groups you can optionally include information about the shifts each
  member belongs to by including the '?embed=shifts' query parameter in the request.
- Group visibility is set by the 'observedByAll' parameter.
- The initial severity of the incident defaults to Medium if not provided.
- The initial status of the incident defaults to OPEN if not provided.
- An id field is required to modify a person.
- If the id provided does not exist, a new user is created.
- The unique identifier (`id`) of the shared library is required for deletion.
- Specify the recipient's ID and type when adding a member to a shift.
- Shift details include start and end times in UTC.
- Shift members can have different escalation types.
- Maximum payload size of 200,000 bytes.
- Attachments can be a maximum of 10 files, and size limit for each file is 10 MB.
- Ensure you have valid username and password for Basic Authentication.
- UUIDs are recommended for event and annotation IDs.
- The unique identifier (`id`) of the conference bridge must be known to delete it.
- The response may contain various objects including forms and conference bridges.
- The use of `formId` refers specifically to the UUID of a form and not to the six-digit
  legacy form identifier.
- Uses HTTP Basic authentication
- When requesting dynamic group members, use only GET /groups/{groupID}/members. The
  additional parameters will not work for dynamic groups.
- For on-call groups, must add the member to at least one shift before they will receive
  notifications.
- Default severity of incidents is Medium if not specified.
- Default status of incidents is Open if not specified.
- Use UUID format for 'id'.
- Status can be 'ACTIVE' or 'INACTIVE'.
- Basic authentication requires a username and password.
- Valid values for sortBy include NAME, OWNER, RECURRENCE, LAST_MESSAGE, NEXT_MESSAGE.
- The unique identifier for a group is recommended over its name.
- Depending on your permission level, you will see either the unique identifier (`id`)
  and `name` of the subscription form or all subscription form information.
- The request must include the subscription ID for operations related to subscriptions.
- For creating changes, a valid username and password are required.
- To find the UUID for an event, use GET /events.
- Use embed parameter to list additional objects in the response.
- Use the correct UUID format for formId and planId.
- For a form, only one of each type of section is allowed.
- The only required parameter to modify a message template is the unique identifier
  of the form.
- Group visibility is defined by the observedByAll parameter.
- Use {groupId} in the path to specify the group.
- Use the ?embed=supervisors query parameter to include supervisors in the response.
- Incidents created do not trigger flows and lack robust functionality.
- Ensure to configure the xMatters endpoint with valid username and password.
- The initial severity of the incident defaults to `Medium`.
- The initial status of the incident defaults to `OPEN`.
- You can identify the person using either their user name (the `targetName` field)
  or their unique identifier (the `id` field).
- Communication plans are used to define how an event is processed, including message
  templates, response options, and any actions triggered by updates to the event.
- The group field in the response provides a reference to the group that the user
  belongs to.
- The member field describes whether it is the user or one of their devices that is
  included in the group.
- To find the `id` of a property in a plan, use GET plans.
- This API allows uploading files as attachments to scenarios.
- Response includes count and total number of subscription forms.
- Query parameters allow for sorting and embedding related data.
- Absence type can be either VACANCY or REPLACEMENT.
- Start and end times must be in UTC and cannot be in the past.
- Returns information about an event, including the person who initiated the event
  and any conference bridge details.
- Use UUID for eventId for more consistent results.
- Endpoint queries historical data; include 'at' parameter for past states.
- Use 'embed' to include additional objects in the response like responseOptions and
  recipients.
- Ensure the xMatters endpoint is configured with a valid username and password.
- The API requires basic authentication with username and password.
- If a group's creator has limited the visibility, only specified roles can send notifications
  to the group.
- The summary and description fields are required to create an incident, but are optional
  when updating an existing incident.
- Uses OAuth2 with password grant type for authentication.
- Embed roles in response by using 'embed=roles' query parameter.
- Use search query parameter to find users by matching names, user IDs, email addresses,
  or phone numbers.
- The API supports both user ID and target name for identifying people.
- The request does not return groups that the user belongs to indirectly.
- User license types include fullUsers and stakeholderUsers.
- Use basic auth with a valid username and password to access the API.
- Requires setup of appropriate permissions for user.
- You can add up to 10 attachment files for scheduled messages, with a size limit
  of 10 MB.
- When using multiple search terms, enclose in double quotes.
- To locate the name of a group or a shift in the user interface.
- The request may require valid username and password for Basic Authentication.
- Users can create subscriptions based on a specific form or all forms in the plan.
- To add recipients, the subscription form must have the 'subscribeOthers' field set
  to true.
- There is a 15-minute synchronization window between current and historical data.
- Using the UUID for event ID is recommended.
- Event suppressions are records of any suppressions resulting from event flood control
  rules for a particular event.
- Creates a form section for an existing form.
- Each request can only modify one section per call.
- Sender permission values overwrite previously stored values.
- Requires configuration of username and password for basic auth.
- Uses OAuth2.0 authentication
- The access tokens expire after a fixed number of seconds as described by the expires_in
  field.
- To get the ID of a plan, use GET plans.
- You can use wildcards in the name parameter when searching for roles.
- Use a valid username and password for HTTP Basic Authentication.
- Shift details include ID, name, start and end times, and timezone.
- Members include detailed information such as position, delay, and escalation type.
- The unique identifier for a site is included in the response of the GET sites method
  and is displayed in the xMatters web user interface.
- The notification is not delivered if the event is terminated before the notification
  delay has elapsed.
- Files uploaded cannot be removed and should be attached to events or scenarios quickly.
- Uploaded files are discarded after a period if not attached.
- Ensure you have permissions to delete data.
- The unique identifier (`id`) of the form is required in API requests.
- For on-call groups, add the member to at least one shift to receive notifications.
- This API requires a username and password for authentication.
- Access tokens are temporary and must be refreshed periodically
- UUID must be valid and cannot match other objects within xMatters.
- The response includes groups that the user or one of their devices belongs to directly.
- The response does not include groups that the user belongs to indirectly by way
  of dynamic group or subgroup.
- Use the unique identifier (id) for communication plans when modifying or deleting.
- Use the allowWildcards query parameter to search role names.
- Searching with multiple terms requires enclosing in double quotes for exact matches.
- If you want to configure a recurring shift, there are other parameters specific
  to the different recurrence types and frequency.
- Requests require authentication via basic auth.
- The scope can be set to FORM to allow for specific form subscriptions.
- The response includes a count of subscription forms and pagination links.
- This API returns a code of 204 No Content if the group member does not exist.
- Searching parameters are supported including form properties and event status.
- To find the id or UUID for an event, use GET /events or locate the Event UUID entry
  on the event’s Properties screen in the web interface.
- UUIDs are recommended for event ID.
- To use DELETE method, the id of the conference bridge must be known.
- 'Valid values for ''enabledFor'' include: MOBILE, UI.'
- Only one form section of each type can be sent per request.
- The form identifier should not be used in place of the UUID when making API requests.
- The only required parameter for modifying a form is the unique identifier of the
  form.
- The id field is required to identify the response option to modify.
- The responses are paginated for group supervisors and recipients.
- Basic authentication is required for all requests.
- The default severity of incidents is 'Medium'.
- The default status of incidents is 'Open'.
- Allows modification of existing properties in a communication plan.
- Use allowWildcards query parameter to filter roles.
- Only authorized users can modify scenarios.
- When using multiple search terms, enclose in double quotes to preserve delimiters.
- The API requires authentication using a username and password.
- When setting the start and end time of the shift, either use the timezone parameter
  in your request, or convert the date and time in your group's time zone to UTC.
- To locate the identifier for a site in the xMatters user interface, use Get Sites.
- The API supports pagination via offset and limit parameters.
- Use appropriate authentication and permissions to access subscriber data.
- Start and end times are in UTC format.
- Query parameters are optional to fine-tune results.
- Most tools and programming languages that support REST provide built-in support
  for HTTP Basic Authentication.
- This API supports file uploads up to 10 MB.
- Files cannot be removed once uploaded.
- To trigger an incident, a valid username and password must be used for authentication.
- License quotas include total, active, and unused counts for stakeholder and full
  users.
- Communication plans can be created or modified using the API.
- Requires valid username and password for Basic Auth.
- Roles control how a user can interact with xMatters.
- You can request a list of all roles or narrow the results by searching for the role
  name.
- Supports attachment uploads with a size limit of 10 MB.
- Up to 10 attachments can be added to a scenario.
- The API requires authentication using a valid username and password.
- Use unique identifiers for group and shift when making requests.
- Shift members can be persons, groups, or devices.
- Returns information on a single subscription.
- Devices must be configured to include timeframes for notification.
- Use UUID for event ID for better results.
- To create a conference bridge, the UUID of the group is required.
- Requires appropriate permissions to delete data.
- Ensure the data type field is set to DOCUMENT_UPLOAD.
- Use the `?embed=supervisors` query parameter to include supervisors in the response.
- Uses OAuth2.0 authentication for accessing the xMatters REST API.
- The initial access token and refresh token are obtained by making a call to POST
  /oauth2/token.
- If users' devices are marked as 'privileged', you may see asterisks in place of
  sensitive information.
- Search parameters must be case-insensitive and contain at least two characters.
- Use Basic Auth with username and password for authentication.
- If shift start and end parameters are not provided, a 24x7 shift is created.
- The group ID can be identified by its name or unique identifier.
- The shift ID can be identified by its name or unique identifier.
- A site cannot be deleted if it is the default site or is in use by any Users or
  Groups.
- Ensure to use HTTPS when making RESTful requests to secure sensitive information.
- Data access is limited by pricing plan when using historical data parameters.
- The comment appears in the event tracking report and is returned when you request
  event comments using the GET /audits, GET /event/annotation, and GET /event/annotations
  endpoints.
- For On-Call groups you can include shift information using the embed=shifts query
  parameter.
- Use valid username and password for Basic Auth.
- The default severity of an incident is Medium.
- The default status of an incident is OPEN.
- When two or more search terms are present, the result includes people that match
  either search term.
- The UUID can only contain letters a-f, numbers 0-9, and dashes, and cannot match
  the UUID of any other objects within xMatters.
- If an inaccurate `id` is submitted with the request, xMatters will either create
  a new user or modify the existing id.
- Use unique identifiers for group and shift when possible.
- For adding a member to the shift, make sure to specify the position and delay if
  required.
- Response code 200 OK and a pagination of Subscription Form objects in the response
  body.
- Subscription forms allow users to subscribe to notifications created by forms in
  the plan.
- Providing the targetName causes xMatters to rename the group.
- Absence start and end times are in UTC format.
- Files uploaded cannot be removed and should be attached to an event or scenario
  as quickly as possible.
- API requires specific configurations for recipients and responses.
- Event suppressions retrieve records of any suppressions resulting from event flood
  control rules for a particular event.
- The only required body parameter for creating a conference bridge is the UUID of
  the group.
- Uses Basic Authentication
- For On-Call groups you can optionally include information about the shifts each
  member belongs to by including the `?embed=shifts` query parameter in the request.
- Returns only the groups that the authenticated user has permission to access.
- Use ?embed=supervisors to get supervisors in dynamic group requests.
- This API requires an OAuth token for authentication.
- Ensure the user has appropriate permissions for the requested data.
- Communication plans can be created or modified through the API.
- Requires setup of valid username and password for API access
- Use the allowWildcards query parameter to search for roles with partial names.
- Searching requires at least two characters in the search term.
- Some operations require specific permissions based on user roles.
- Depending on your permission level, you will see either the unique identifier (`id`)
  and `name` of the site or all site information.
- Use of 'sortBy' and 'sortOrder' query parameters is available for sorting subscription
  forms.
- Notifications can only be directed to replacements when absence applies to all groups.
- All query parameters are optional; you can fine-tune the results.
- To create a device, you must include the recipientType, deviceType, and other required
  fields.
- Creating a conference bridge does not automatically initiate a conference bridge.
- Use embed to list additional objects in the response.
- Identify the form by its unique identifier in the 'id' field.
- Retrieve a paginated list of uploaded User Upload or EPIC ZipSync files.
- Use the `?embed=supervisors` query parameter to retrieve group supervisors in a
  call to GET /group.
- The summary, and description fields are required to create an incident, but are
  optional when updating an existing incident.
- Incidents created through the incident creation endpoint do not trigger flows.
- Requesting a historical search which includes a current day's shifts is not allowed.
- Communication plans can be tailored for specific situations and recipients.
- 'Valid values for sortBy include: NAME, OWNER, RECURRENCE, LAST_MESSAGE, NEXT_MESSAGE.'
- The service dependencies in the response represent a direct relationship between
  a service and its dependent.
- The unique identifier for a shared library is a UUID.
- Shifts control the dates that members are on duty.
- A user's default settings for location-specific settings are determined from their
  site.
- Use 'embed' query parameter to include related objects in the response.
- Use query parameters to filter results.
- Changes can be created but cannot be modified or deleted.
- Can attach a maximum of 10 files, size limit for each file is 10 MB.
- The default status of an incident is Open.
- OAuth2.0 authentication allows access to the xMatters REST API by providing an authentication
  token in the header of each request.
- When accessing who is on call now, or for a shift in the future, set the from parameter
  to a time no more than 24 hours in the past.
- Shift times are defined in universal time (UTC) format and may not reflect the time
  zone of the authenticating user.
- Requires setup of xMatters account with valid credentials.
- This API allows for the creation of scenarios for a form, enabling pre-population
  of settings and fields.
- To update a scenario, the authenticating user needs permission to manage scenarios
  for the form.
- Responses are case-insensitive.
- Service can only have one owner, but a group can own multiple services.
- This API requires a valid username and password for authentication.
- Shift information includes start and end times in UTC format.
- Members of a shift can include individuals with various statuses.
- Site countries, languages, and time zones must be marked as Active in the Admin
  tab.
- The subscription form must be unique within your company.
- The API supports pagination through limit and offset parameters.
- Privileged devices redact specific information from users without the appropriate
  permissions.
- Only company supervisors and administrators can create, edit, or delete privileged
  devices.
- The use of `formId` in the definition refers specifically to the UUID of a form
  and not to the six-digit legacy form identifier.
- When creating message templates, the email template must be HTML encoded.
- For On-Call groups, shifts must be assigned for members to receive notifications.
- Use the groupId or targetName to specify the group when calling the endpoints.
- Uses Basic Auth — requires username and password.
- OAuth2.0 authentication allows access to the xMatters REST API.
- Initial access tokens are obtained using client ID, username, and password.
- Basic authentication is used with username and password
- Use the unique identifier (id) to interact with specific plans
- Operand can be AND or OR.
- Searching with multiple terms requires double quotes for proper matching.
- When setting the start and end time of the shift, use the timezone parameter or
  convert to UTC.
- Use Get subscription forms in a plan to get the UUID of the subscription form.
- The request must include the subscription ID, and any other properties that are
  to be modified.
- 'The unique name of the import job defaults to: ''User Upload v1.5 at {date/timestamp}'''
- Files uploaded to xMatters cannot be removed once uploaded.
- Audit objects contain basic information about an audit record.
- Annotations can be made by any user who has permission to view the event.
- When results are paginated, the original request returns the first page of results
  and a URL that links to access the next page of results.
- To retrieve targeted recipients, use GET /events/{eventId}?embed=recipients&targeted=true.
- To retrieve resolved recipients, use GET /events/{eventId}?embed=recipients.
- Forms are not immediately enabled upon creation by default.
- Forms can only contain one of each type of section and you can only send one form
  section per request.
- Only the unique identifier of the form is required for modifying a message template.
- Some objects may return nulls in deeply nested fields.
- Paginated list of uploaded User Upload or EPIC ZipSync files available.
- Use the `?embed=supervisors` query parameter to embed group supervisors in a call
  to get a group.
- When accessing historical data, ensure to set the 'from' and 'to' parameters appropriately.
- Uses OAuth2 with password grant type — requires setup of xMatters account credentials
- Modifies the properties of a user in xMatters.
- The group field in the response provides a reference to the group that the user
  belongs to and the member field describes whether it is the user or one of their
  devices that is included in the group.
- The request returns response codes including 201 for created and 200 for successful
  operations.
- When multiple search terms are present, results include messages that match either
  term.
- The API requires valid username and password for authentication.
- The site can be identified by its name or id.
- Supports pagination through offset and limit query parameters.
- Response structure includes count and total of subscription forms.
- The subscription form must have a unique name within the company.
- If `scope` is set to FORM, the `form` parameter must be included.
- All query parameters are optional for retrieving absences.
- Uploads files cannot be removed once uploaded.
- To allow for unknown factors such as clock drift and network lag, there is a 15-minute
  synchronization window between data collected by the current system and historical
  data.
- Creating a conference bridge does not automatically initiate a conference.
- Required parameter for modifying response option is the unique identifier of the
  form.
- The unique identifier (`id`) of the form is required for requests.
- Use the client ID of your xMatters instance for authentication.
- Authorization requires a valid username and password for basic authentication.
- UUID must be valid and cannot match UUID of any other objects within xMatters.
- The request may include a list of additional objects to include in the response.
- Use allowWildcards query parameter for partial role name matches.
- The combined size of attachments must not exceed 10 MB
- You can add a shift that is active 24x7 or configure it to occur at a specific time
  or in a recurring pattern.
- For shifts that rotate through the escalation order, specify if the member is on-duty
  or off-duty using the onDuty parameter.
- Ensure to replace {planId} with the actual plan ID in the endpoint.
- To specify a specific form, set the `scope` parameter to FORM, then include the
  form id in the `form` parameter.
- If `subscribeOthers` is not specified, the default is false.
- If `notificationDelay` is not specified, the value is 0.
- Query parameters can be used to filter results.
- The request must include the subscription ID to modify settings.
- Devices can be created for various types including EMAIL and VOICE.
- Targeted recipients include users and groups but do not expand to group members.
- UUIDs are recommended for event IDs as they may return more reliable results.
- Incidents created through this endpoint do not trigger flows and do not have the
  functionality of user responses.
- OAuth2.0 authentication allows access without storing sensitive user credentials.
- If an inaccurate id is submitted with the request, xMatters will create a new user
  if the id does not exist.
- Group ID and Shift ID are required for retrieving shifts.
- Ensure to convert date and time to UTC when creating shifts.
- Shift data includes recurrence and member details.
- The shift can have multiple members and escalations.
- For shifts that rotate, specify onDuty parameter for members.
- Returns a list of all subscription forms based on permission level.
- Authentication requires valid username and password.
- As multi-part forms are not supported, this feature is not available in the Integration
  Builder
- Returns a list of change records for services within your xMatters instance.
- Files should be attached to events or scenarios as quickly as possible.
- Searching by various criteria is supported.
- When searching historical data, use the 'at' parameter along with 'from' and 'to'.
- Targeted recipients include users and groups but do not expand to include their
  members.
- Event suppressions can be retrieved based on event flood control rules.
- Requires setup of basic authentication with username and password.
- If mobileEnabled, uiEnabled, or apiEnabled are not specified, they default to false.
- The unique identifier (id) or name (targetName) of forms must be URL-encoded.
- If the id field is not provided, it interprets as a request to create a new parameter.
- Can only send one form section per request.
- For on-call groups, must add the member to at least one shift to receive notifications.
- You can specify up to 30 groups in the groups parameter.
- Use the query parameters to limit your search by plan type or search for specific
  keywords.
- Retrieve shifts by group ID or name.
- Shift details include start and end times, recurrence, and group information.
- A site can be identified by its 'name' or 'id'.
- The request must include the subscription ID.
- If you want to set up an absence for multiple groups, you need to send multiple
  requests.
- You can use the query parameters to limit your search by the requestID, status,
  or severity of an incident.
- Maximum file size for attachments is 10 MB.
- Searching by form properties and event status is supported.
- UUIDs are recommended for event IDs.
- Must include the 'at' parameter for historical data queries.
- The maximum payload size for inbound integrations is 200,000 bytes.
- You can embed the response options available for the form, and include any recipients
  set in the form.
- Use {groupId} to specify the group in the endpoint URLs.
- Incidents created will not trigger flows.
- You can access historical data using `to` and `from` without using the `at` parameter.
- UUID can only contain letters a-f, numbers 0-9, and dashes
- If no id is provided, a new user is created
- Plan identifiers are UUIDs.
- The search term must contain at least two characters.
- Pagination is supported using offset and limit parameters.
- When using multiple search terms, enclose them in double quotes to preserve delimiters.
- The `language` code is returned as a two-letter code following the ISO 639 format
  and the `country` code is returned as a three-letter code following the ISO 3166-2
  format.
- Dates must be in UTC format.
- Event suppressions retrieve records of suppressions resulting from event flood control
  rules.
- Recipient values in the provided list overwrite all previously stored values.
- Group visibility is determined by the observedByAll parameter.
- Use the Authorization header for authentication with username and password.
- Revoking tokens is done using the xMatters Web user interface.
- Use the allowWildcards query parameter for partial role name searches.
- Can add up to 10 attachment files, total size must not exceed 10 MB.
- Search terms must contain at least two characters. Enclose multi-word terms in double
  quotes.
- Shift occurrence data includes start, end, and timezone information.
- To specify a specific form, set the scope parameter to FORM, then include the form
  id in the form parameter.
- Depending on your permission level, you will see either the unique identifier (id)
  and name of the subscription form or all subscription form information.
- Use HTTPS for secure transmission of sensitive information.
- Dates must be in UTC and cannot be in the past.
- 'Redacted items include email address, phone number, and country for the following
  device types: EMAIL, VOICE, VOICE_IVR, FAX, and TEXT_PHONE.'
- Use UUID for event ID to ensure consistent results.
- The language field in templates must contain a valid two-letter ISO 639 code.
- For On-Call groups, you must add the member to at least one shift before they can
  receive notifications.
- Initial access token and refresh token are obtained by making a call to `POST /oauth2/token`.
- The request can include query parameters for additional filtering.
- The endpoint allows creating scenarios for a form.
- Searching with multiple terms requires enclosing in double quotes.
- Creates a scheduled message based on an existing communication plan and form to
  be sent to recipients at a future date and time.
- Shifts are defined by their start and end time, rotation type, and associated members.
- The API requires authentication using basic auth credentials.
- Users must have appropriate permissions to access these endpoints.
- Ensure you have the appropriate permissions to delete subscriptions or unsubscribe
  users.
- Override sender display information with meaningful values to prevent valid messages
  from being marked as spam.
- Use 'embed' to include additional objects in the response.
- The type of conference bridge set for the form section.
- The only required parameter for modifying a template is the unique identifier of
  the form.
- For on-call groups, must add the member to at least one shift before they can receive
  notifications.
- Each request requires a valid username and password for authentication.
- This API allows for modification of properties in communication plans.
- Attachment size must not exceed 10 MB
- The xMatters API uses basic authentication with username and password.
- Shift details include members and their roles.
- Shift occurrences can be queried by group IDs.
- Supports pagination with offset and limit parameters
- If the scope is set to FORM, the form parameter must be included.
- Ensure the 'subscribeOthers' field is set to true when adding recipients.
- The DELETE method is used to unsubscribe a user but does not delete the subscription.
- Changes cannot be modified or deleted once created.
- Triggers can be customized to set recipients, properties, conference information,
  response options, and handling options.
- Template must be HTML encoded.
- 'Valid values for action include: RECORD_RESPONSE, STOP_NOTIFYING_USER, STOP_NOTIFYING_TARGET,
  ESCALATE, ASSIGN_TO_USER, END.'
- 'Valid contributions include: NONE, POSITIVE, NEUTRAL, NEGATIVE.'
- The API supports basic authentication.
- Use the unique identifier (id) to identify plans.
- To find the ID of a plan, use GET plans.
- Use allowWildcards=true to search for roles with wildcard characters.
- The endpoint allows you to create scenarios for a form.
- The unique identifier (`id`) of the shared library is required to delete a library.
- The shift contains information about the members assigned and their statuses.
- The API requires basic authentication using a username and password.
- If 'scope' is set to FORM, a form ID must be included.
- If a device name is marked as a privileged device, specific information is withheld
  from users without appropriate permission settings.
- To enhance the response to include the form properties for each event, include the
  `?embed=properties` query parameter.
- Attachments up to 10 files, each file max size is 10 MB.
- Ensure formId and planId are URL-encoded.
- For On-Call groups you can optionally include information about the shifts each
  member belongs to by including the ?embed=shifts query parameter.
- The unique alpha-numeric incident number used to look up the incident is called
  incidentIdentifier.
- Incidents created do not trigger flows, and do not have the more robust functionality
  of user responses.
- The access tokens expire after a fixed number of seconds as described by the expires_in
  field returned in the response body.
- Uses OAuth2.0 for authentication
- Requires client ID and user credentials to obtain tokens
- To assign the person to a site, you must provide the unique identifier of the site.
- Use the `allowWildcards` query paramater and asterisks in the name to search for
  a partial match.
- Response code 200 OK and a SharedLibrary object in the response body when successfully
  deleted a shared library.
- Response code 200 OK and a Shift object in the response body when successfully retrieved
  a shift.
- Shift occurs in US/Pacific timezone
- Recurrence is weekly on all days
- A site cannot be deleted if it is the default site or in use by any Users or Groups.
- Event ID might not always return results; use UUID instead.
- Certain event types may not be visible to users without the appropriate permission
  level.
- Maximum payload size of 200,000 bytes for inbound integrations.
- Attachments path must point to xMatters temporary file storage.
- Response options can be embedded in requests.
- Forms can be filtered by trigger type.
- Response includes pagination for group members and quotas.
- Logs changes for services within your xMatters instance.
- The endpoint returns a paginated list of all the events the authenticating user
  has permission to view.
- Requires setup of user authentication with valid username and password.
- Access tokens expire after a fixed number of seconds as described by the expires_in
  field
- xMatters uses OAuth2.0 authentication for API access.
- Communication plans allow you to tailor your communications to suit the situation,
  recipient, and required action based on any business process.
- The unique identifier (`id`) of the communication plan is required for modifying
  or deleting a plan.
- xMatters API requires basic authentication with username and password
- The API supports querying scenarios with various parameters including search, enabledFor,
  and pagination.
- Service IDs should be UUIDs
- The request body for adding a member must include position, delay, escalationType,
  inRotation, onDuty, and recipient fields.
- Requests require valid username and password for authentication.
- Shift occurs on Dayshift from 2024-10-30 to 2024-10-31 in US/Pacific timezone.
- The request must include the subscription ID for adding subscribers or setting share
  permissions.
- The subscription itself is not deleted when unsubscribing a user.
- To delete a subscription, see Delete a subscription.
- Use embed parameter to include responseOptions and recipients in the response.
- Default values for mobileEnabled, uiEnabled, and apiEnabled upon creation are false.
- Names must be URL-encoded when using as parameters.
- Form sections can only contain one of each type of section.
- For messaging forms, the available sections include Attachments, Conference Bridge,
  Custom Section, Devices, Handling, Recipients, Response Overrides, and Sender Overrides.
- Response code 200 OK indicates success.
- Default severity of incidents is Medium if not provided.
- Default status of incidents is Open if not provided.
- Use the `embed` query parameter to include more information about the owner of device
  members.
- OAuth2.0 authentication allows access to the xMatters REST API without storing sensitive
  user credentials.
- A person object includes roles when the ?embed=roles query parameter is used.
- Uses Basic Auth with username and password for authentication
- Use the allowWildcards query parameter for partial matches in role names.
- API uses basic authentication with username and password.
- The authentication method requires a valid username and password.
- Response code 200 OK for successful requests.
- The unique identifier for a change is its id.
- Privileged devices redact specific information for users without the appropriate
  permission settings.
- Only company supervisors and company administrators can create, edit, and delete
  privileged devices.
- To search historical data, the `at` parameter must be set along with `from` or `to`.
- The API requires setup of OAuth2 for authentication.
- Request body must include subject and body in JSON format.
- Replace {groupId} with the unique identifier of the group in the endpoint path.
- Ensure to provide valid username and password for authentication.
- Uses Basic Auth for user authentication
- To obtain a new access token, provide the client ID and a refresh token.
- Ensure to use a valid username and password for authentication.
- Use wildcards in role name queries to filter results.
- Authentication uses HTTP Basic Auth with a username and password.
- The endpoint allows the creation of scenarios for a form.
- The shift member can be added to the end of the escalation timeline if no position
  is specified.
- Off-duty shift members must be positioned after all on-duty members.
- Use embed parameter to include deviceNames, propertyDefinitions, and roles in the
  response.
- Once uploaded, the attachment cannot be removed and should be attached to an event
  or scenario quickly.
- Recommended to use UUID for event ID instead of numeric event ID.
- Refer to the xMatters user interface for specific form configurations.
- Event suppressions let you retrieve records of suppressions resulting from event
  flood control rules.
- Requires Basic Authentication with username and password.
- Form references must use UUIDs, not legacy numeric identifiers.
- For On-Call groups, must add member to at least one shift to receive notifications.
- Use ?embed=supervisors query parameter to embed one page of supervisors in a call
  to GET /group.
- Uses OAuth2 for authentication with username and password.
- Responses may include privileged data obscured for unauthorized users.
- Basic authentication is required with username and password.
- This API allows adding, deleting, and restoring shifts.
- The request must be authenticated using valid username and password.
- Shift starts on 2024-10-30T07:00:00.000Z and ends on 2024-10-31T07:00:00.000Z
- Rotation type is NONE
- The request must include valid username and password for authentication.
- Delete method requires valid id and appropriate permissions.
- The unique identifier for the form is required in the URL.
- For On-Call groups, use the ?embed=shifts query parameter to include shift information.
- The request must include a valid username and password for basic authentication.
- Access historical data using 'from' and 'to' parameters without the 'at' parameter.
- Uses OAuth2 for authentication — requires valid client ID and user credentials
- Endpoint for retrieving communication plans and built-in integration configurations.
- The license type can be FULL_USER or STAKEHOLDER_USER.
- The unique identifier (id) of the communication plan is required for most operations.
- All endpoints must be configured for the communication plan.
- Use wildcards in the role name to filter results.
- Attachments must not exceed 10 MB.
- The request must include a valid username and password.
- The `id` of the subscription form you want to update is required.
- If `FORM` is specified for `scope`, you must include the `form` parameter.
- Filtering is possible through query parameters.
- Responses are paginated.
- Use ?embed=timeframes to include the timeframes that devices are scheduled to receive
  notifications.
- To find the `id` or UUID for an event, use GET /events or locate the Event UUID
  entry on the event's Properties screen in the user interface.
- Response options can be embedded in form requests.
- Requires basic authentication with username and password
- Groups are returned as a paginated list sorted in alphabetical order
- For Dynamic groups, the response contains all users that would be notified based
  on the dynamic group criteria.
- The incident must be created by a user with sufficient permissions.
- Initial access token and refresh token are obtained by making a call to POST /oauth2/token
  and authenticating with a client ID, user name, and password.
- Set the display timezone to (UTC+0000)GMT in the xMatters user interface to view
  a group's on-call schedule in universal time.
- Responses for success and error codes can be checked in the documentation.
- 'Limits on attachments: maximum of 10 files, combined size must not exceed 10 MB.'
- The response returns a SharedLibrary object that represents the recently deleted
  library.
- You can specify a group by its name or identifier.
- Use unique identifiers (id) for groups and shifts in requests.
- Utilizes basic authentication with username and password.
- Users must have appropriate permissions to access subscription features.
- To limit the results to a specific timeframe, use the 'from' and 'to' query parameters.
- To query historical data, the authenticating REST API user must have the ability.act.HistoricalDataAccess
  permission.
- Files uploaded to xMatters cannot be removed and should be attached to an event
  or scenario as quickly as possible.
- If a specific service is not included, the change is considered global.
- Uses OAuth2 with refresh token — requires setup of connected app in xMatters
- Use embed=shifts to include shift information for On-Call groups.
- Use {groupId} as a URL parameter to specify the group.
- Logging must be enabled for the integration to see successful requests; otherwise
  only failed requests are logged.
- To include gaps, use the 'include' query parameter.
- OAuth2.0 authentication allows access without storing credentials.
- The API supports pagination with offset and limit parameters.
- The subscription form must have the 'subscribeOthers' field set to 'true' to add
  recipients.
- To create a change record for a specific service, include the service parameter.
- The API supports querying both current and historical system data.
- The communication plan must be enabled for the form to be triggered.
- The authenticating user must have permission to initiate the form.
- Ensure to manage OAuth token expiration effectively.
- Use UUID for the group when updating a conference bridge.
- Use embed parameter to include additional data in response.
- The default trigger type for forms is 'MESSAGING'.
- For on-call groups, members must be added to at least one shift before receiving
  notifications.
- Devices marked as privileged may show asterisks for sensitive information.
- Requires setup of valid username and password for API access.
- Some endpoints require specific plan IDs to be included in the URL.
- Requires permission to manage scenarios for the form.
- Authentication is required to access subscriber information.
- Users need appropriate permissions to perform actions on subscriptions.
- To delete a subscription, see DELETE /subscriptions/{subscriptionId}.
- To get subscriptions, use GET /subscriptions.
- A change record cannot be modified or deleted once created.
- Redacted items include email address, phone number, and country for certain device
  types
- For On-Call groups, add the member to at least one shift before they will receive
  notifications.
- Use the unique identifier (`id`) or name (`targetName`) of the group in the URL
  parameters.
- Dynamic groups can be retrieved using the ?embed=supervisors query parameter.
- For incident creation, the default severity is Medium.
- For incident creation, the default status is OPEN.
- Uses OAuth2.0 for authentication — requires setup of client ID and credentials.
- For groups that have commas in the name, URL-encode the comma (replace it with %2C)
  or use the group's unique identifier to identify the group.
- If an inaccurate `id` is submitted with the request, xMatters will create a new
  user or modify the existing id.
- Requests require a valid username and password for authentication.
- Search parameter must contain at least two characters.
- The unique identifier for a group can be specified by its name or ID.
- Response codes include 200 for success.
- The only required body parameter is the UUID of the group you want to update.
- Shifts are defined with start and end times in UTC.
- Searching by certain criteria is supported such as Form properties and Event status
  or priority.
- Use UUID for eventId to ensure results.
- For targeted recipients, append '?embed=recipients&targeted=true' to the request.
- Must have appropriate permissions to delete a conference bridge.
- Forms are not enabled for mobile, UI, or API use by default.
- Modify a form by updating its description and changing a parameter.
- Ensure the 'xMatters' endpoint is configured to use a valid username and password.
- 'To authorize a request using an OAuth token, include the Authorization: Bearer
  header in each request.'
- Modifying a person requires their unique identifier (`id` field) to be included
  in the request.
- A unique name for the scheduled event can be up to a maximum of 250 characters.
- User must have permission to view sites.
- Uploads must be in .csv format for user upload.
- The user must have the ability.act.HistoricalDataAccess permission to access historical
  data.
- Redacted items include email address, phone number, and country for privileged device
  types.
- The `formId` must be URL-encoded.
- Creates a form section for an existing form. With the exception of Custom sections,
  a form can only contain one of each type of section and you can only send one form
  section per request.
- The only required body parameter is the UUID of the form you want to update.
- For on-call groups, must add the member to at least one shift for notifications.
- Paginated responses for groups, supervisors, and recipients.
- Responses for user license quotas include details about full users and stakeholder
  users.
- Shift members can be a person, group, or device.
- Users can view sites based on their permission level.
- If 'scope' is set to FORM, a form id must be included.
- Use HTTPS for secure transmission of credentials.
- Privileged devices redact specific information, such as phone numbers.
- Redacted items include email address, phone number, and country for privileged devices.
- When searching historical data, the to or before parameters cannot be within 15
  minutes of the current time.
- Remember to use UUIDs for event IDs as the numeric ID may not always return results.
- Historical data requires the `at` parameter for specific time queries.
- The API requires proper authentication for access.
- Use Basic Auth with username and password for access.
- Use embed to include additional objects in the response such as responseOptions
  and recipients.
- Use POST method to create forms and message templates.
- Can only send one form section per request
- Recipient values overwrite all previously stored values
- Sender permission values overwrite all previously stored values
- The unique identifier (`id`) of the form is required for API requests.
- Returns only groups that the authenticated user has permission to access.
- Default status is Open if not provided.
- Uses OAuth2 with password grant type — requires username and password for initial
  token retrieval.
- Uses Basic Authentication — configure username and password.
- To find the `id` of a property in a plan, use Get plan properties.
- The request can include up to 10 attachment files with a combined size of no more
  than 10 MB.
- Use HTTP Basic Auth with username and password.
- Some responses may contain nested objects.
- Use unique identifiers for groupID and shiftID.
- Error handling for HTTP response codes is necessary.
- Once uploaded to xMatters it cannot be removed and should be attached to an event
  or scenario as quickly as possible.
- For message templates, the base URL is followed by /forms/{formId}/message-templates.
- Form objects may have visibility restrictions based on user roles.
- This API returns only the groups that the authenticated user has permission to access.
- Incidents created through this endpoint do not trigger flows and do not have robust
  user response features.
- The unique identifier (id) of the incident is required for timeline entries.
- If users' devices are marked as 'privileged' by a company supervisor, asterisks
  may replace sensitive information.
- The supervisors must have permission to supervise users and the authenticating account
  must have permission to assign supervisors.
- UUID must be valid and unique across the system.
- Response codes for success and errors are defined in HTTP Response Codes.
- Use the allowWildcards query parameter to search for role names.
- This API allows you to create scenarios for a form.
- Only one file can be uploaded at a time.
- Use unique identifiers for groupID and shiftID
- Shift occurrences are linked to group IDs.
- Members can include both persons and groups.
- To return information for a specific site, use the GET /sites/{siteID} method.
- Absence times are in UTC format.
- Multiple requests are required for setting absences for different groups.
- The use of 'formId' refers specifically to the UUID of a form.
- For On-Call groups, must add the member to at least one shift before they can receive
  notifications.
- Integration operations include creating and deleting integrations.
- The initial access token and refresh token are obtained by making a call to 'POST
  /oauth2/token' and authenticating with a client ID, username, and password.
- This API requires Basic Authentication.
- The endpoint URLs are subject to change.
- Double quotes are required for multi-word search terms.
- Shift details include timings and recurrence.
- Members may not be in rotation.
- If you want to set up an absence for multiple groups, but not all, or you want to
  name different replacements for different groups, you need to send multiple requests.
- If devices are marked as 'privileged' by a company supervisor, asterisks may replace
  sensitive information.
- If a change record is created, it cannot be modified or deleted.
- Privileged devices redact specific information, such as phone numbers, from users
  without appropriate permissions.
- For more information on message templates, see the online help.
- 'Valid values for triggerType include: FLOW, MESSAGING. Default is MESSAGING.'
- Default values for mobileEnabled, uiEnabled, and apiEnabled upon creation is false.
- For On-Call groups you can include shift information by using the embed=shifts parameter.
- The integration must have logging enabled to see successful requests.
- Newly-created users do not have assigned web or phone passwords. You can set these
  passwords manually in the xMatters user interface.
- The request requires a valid username and password for authentication.
- Endpoints may require specific plan IDs.
- Attachment files must not exceed 10 MB in total.
- Use unique identifiers for groups and shifts when possible.
- Shift members can be added with position, delay, escalation type, rotation, and
  duty status.
- Use the correct plan ID when creating or modifying subscription forms.
- The request must include the subscription ID for various operations.
- Some fields in the subscription object cannot be modified.
- Tokens can be revoked at any time
- Files uploaded to xMatters cannot be removed and should be attached to events or
  scenarios as quickly as possible.
- To create a change record for a specific service, include the service parameter
  with the payload.
- The API requires authentication to access data.
- Ensure that the required permissions are set for the API user.
- Use UUID for formId and planId in the URL path.
- The unique identifier (`id`) of the conference bridge is required for modification
  or deletion.
- Basic authentication is required, and you must have the appropriate permissions
  to delete data.
- This API uses Basic Authentication.
- Forms can have various sections including Recipients, Handling, and Custom sections.
- The visible property controls whether sections are displayed to users.
- On-call groups require members to be added to at least one shift to receive notifications.
- Use UUID for group identifiers
- No groupType can be changed after creation
- Modify plans using their unique identifier in the id field.
- You can create, modify and delete constants for the plan type of PLAN.
- Use unique identifiers for groupID and shiftID in URLs.
- API requires username and password for access.
- All query parameters are optional and can be used to fine-tune results.
- Use this endpoint to retrieve a paginated list of a person's supervisors.
- Responses include pagination of change objects.
- Privileged devices redact specific information from unauthorized users.
- Uses Basic Auth for authentication
- Privileged devices redact specific information for users without appropriate permissions
- Returns information about an event, including the person who initiated it and the
  form used to create it.
- Targeted recipients include groups but do not expand to include their members.
- Event suppressions let you retrieve the records of any suppressions resulting from
  event flood control rules.
- Request body must include 'subject' and 'body' fields in JSON format.
- Default for mobileEnabled, uiEnabled, and apiEnabled is false.
- The language field for email and SMS templates must contain a valid two-letter ISO
  639 code.
- Uses Basic Authentication.
- Use the {groupId} URL parameter to specify the unique identifier of the group.
- Default severity is Medium
- Default status is Open
- Allows retrieval and modification of properties in a communication plan.
- Response codes returned by the xMatters REST API include success and error codes.
- Search terms in requests must be at least two characters long and can be case-insensitive.
- Sorting is possible by various criteria such as NAME or OWNER.
- Responses may include multiple shift objects.
- The script examples require a valid username and password.
- Use unique identifiers (`id`) for group and shift where possible.
- Shift occurs in US/Pacific timezone.
- Shift recurrence is weekly on all days.
- If response status code is 200, indicates success.
- The absenceType must be specified when creating a temporary absence.
- Historical data permission required for accessing historical data.
- Devices marked as privileged have redacted information.
- To trigger an event, the form must be deployed as a web service and the communication
  plan must be enabled.
- Event suppressions can be retrieved for a specific event.
- Requires valid username and password for HTTP Basic Authentication.
- The formId must be URL-encoded.
- If you want to keep the existing values and add additional recipients, use GET /forms/{formId}/recipients
  to retrieve the list of recipients.
- Endpoints return paginated results.
- After an On-Call group is created you can add members to the group and build out
  the shift schedule.
- Once a group is created, the groupType cannot be changed.
- Pagination support for import job records.
- Default severity of 'Medium' is used if not provided.
- Default status of 'Open' is used if not provided.
- The access tokens expire after a fixed number of seconds as described by the 'expires_in'
  field.
- To include a list of the person's roles in the response, use the ?embed=roles query
  parameter.
- Use the `embed` parameter to include additional objects in the response.
- Ensure the plan type is 'PLAN' for deletions.
- When using multiple search terms, enclose them in double quotes.
- The API supports operations for services including creation, modification, retrieval,
  and deletion.
- Shift occurrences include detailed member information.
- The site can be identified by its name or ID.
- Response may vary based on permission level.
- To find the subscription ID, use the Get subscriptions endpoint.
- To find the person ID, use the Get people endpoint.
- When setting `absenceType` to REPLACEMENT, make sure to include the `replacement`
  parameter.
- Attachments cannot be removed once uploaded and should be attached to an event or
  scenario quickly.
- Use UUID for eventId to ensure correct results.
- Names must be URL-encoded for formId and planId.
- Requires HTTP Basic Authentication with username and password
- Each form can only contain one of each type of section and you can only send one
  form section per request.
- The unique identifier (`id`) of the form is required for access.
- API returns a code of 204 No Content if the group member does not exist.
- Communication plans and configurations are the foundation of integrations with xMatters.
- If an inaccurate `id` is submitted, a new user is created if the `id` does not exist.
- Use the `id` field to identify the communication plan.
- This API requires authentication with username and password.
- This endpoint requires OAuth2 authentication.
- For shifts that rotate through the escalation order, you can set whether a shift
  member is on-duty or off-duty.
- Users can create subscription forms for all forms in the plan or for a specific
  form by setting the scope parameter.
- Subscriptions can include properties defined in the communication plan.
- Responses include pagination of Subscription Form objects.
- Some requests may require specific permissions.
- This API requires authentication using a username and password.
- Change records give insights into service health.
- Once uploaded to xMatters, files cannot be removed.
- Specific information for privileged devices is withheld from users without appropriate
  permissions.
- Using UUIDs for eventID is recommended.
- The API requires specific configurations for different object types.
- For event flood control, see the online help for more information.
- Default values for mobileEnabled, uiEnabled, apiEnabled are false upon creation.
- 'For messaging forms: Attachments, Conference Bridge, Custom Section, Devices, Handling,
  Recipients, Response Overrides, Sender Overrides are available.'
- 'For Flow Trigger forms: Custom Section, Devices, Handling, Incident Details, Recipients,
  Sender Overrides are available.'
- The API supports pagination for group supervisors and recipients.
- Initial access token and refresh token are obtained by authenticating with client
  ID, username, and password.
- Use the query parameters to limit your search by plan type, search for a particular
  keyword in the name or description.
- If an inaccurate id is submitted with the request, xMatters will create a new user
  or modify the existing id.
- Devices marked as 'privileged' may show asterisks in place of sensitive information.
- Response includes pagination information.
- Use allowWildcards query parameter to search for roles by name.
- Endpoint requires OAuth2 authentication.
- 'Valid sortBy values include: NAME, OWNER, RECURRENCE, LAST_MESSAGE, NEXT_MESSAGE.'
- You can attach a maximum of 10 files.
- The endpoint does not currently support Flow Designer shared libraries.
- For shifts that rotate through the escalation order, set whether a shift member
  is on-duty or off-duty using the onDuty parameter.
- The request did not succeed with response code other than 200.
- ID of a site can be used to access specific site information.
- To limit the results to a specific timeframe, use the from and to query parameters.
- Not all plans have a 'creator' property, so need to test for this.
- The unique identifier (id) of the conference bridge is required for modification
  and deletion.
- For more information and best practices on the various message templates, see the
  online help for Voice messages, Email messages, or SMS messages.
- Ensure the data type field is set to DOCUMENT_UPLOAD for attachment section.
- Use the group ID or target name to specify the group for which to retrieve supervisors
  or recipients.
- The default severity of an incident is Medium if not specified.
- The default status of an incident is Open if not specified.
- Use basic authentication with a valid username and password.
- Integration objects can be inbound or outbound.
- OAuth2.0 authentication allows you to access the xMatters REST API.
- To modify a plan, use its unique identifier in the id field.
- Requests to the API require a valid username and password for authentication.
- Use the unique identifier (id) for identifying groups and shifts.
- The notificationDelay defaults to 0 if not specified.
- Use pagination query parameters to control the number of items returned.
- This endpoint describes how a user with appropriate permissions can unsubscribe
  a single user from a single subscription.
- This endpoint allows creation and retrieval of change records.
- Devices can only be created and cannot be modified or deleted after creation.
- There is a 15-minute synchronization window for historical data.
- Use UUID for event ID for better reliability
- Not all plans have a "creator" property, so need to test for this.
- Event suppressions return records of any suppressions resulting from event flood
  control rules for a particular event.
- Requires setup of username and password for basic authentication
- 'The request did not succeed. Response code is: 200 OK.'
- Uses OAuth2.0 authentication with a client ID and user credentials.
- Historical data cannot span from the past to the future.
- When accessing historical data, use 'to' and 'from' parameters.
- Use basic authentication with valid username and password.
- Response codes returned by the xMatters REST API can be referenced in the HTTP Response
  Codes documentation.
- Enclose multi-word search terms in double quotes.
- Specify a group by its name or identifier. To locate the identifier or name for
  a group, see Get groups.
- Use unique identifiers (id) for group and shift.
- Members can be filtered by onDuty parameter to return only active members.
- Supports pagination for retrieving multiple sites.
- Some subscription forms require a specific form ID to be included.
- Users must have appropriate permissions to manage subscriptions.
- If you do not include a specific service name, the change is considered to apply
  globally.
- Only privileged users can create, edit, or delete devices.
- Mobile app devices cannot be created using the API.
- Some recipients' devices may be marked as 'privileged' and may not show all details.
- Data includes a styled HTML body for email notifications.
- For on-call groups, add the member to at least one shift before they can receive
  notifications.
- Uses Basic Authentication — configure with valid username and password.
- Ensure to handle pagination for large datasets.
- If the id is not included, xMatters treats this as a request to create a new person.
- Ensure to test for properties that may not exist for all plans.
- Use UUIDs for planId and other identifiers where required.
- Use the embed parameter to include additional details in the response.
- Search terms in queries must contain at least two characters.
- To create a complex shift, use the xMatters web user interface.
- The request for adding a member to a shift supports a position parameter.
- The scope parameter can be set to FORM or ALL_FORMS.
- If scope is FORM, the form id must be specified.
- Get subscriptions can be used to find the subscription ID.
- Device names can be created, modified, and deleted using the appropriate endpoints.
- Targeted recipients include users but do not include their notified devices unless
  the devices were explicitly added as recipients.
- Using legacy identifiers will result in an error.
- Groups are sorted in alphabetical order.
- Some endpoints require specific UUIDs for incidents and integrations.
- Use either 'id' or 'targetName' to identify a person.
- Returns a list of scheduled messages in your system.
- Returns a single scheduled message in your system.
- Returns a single scheduled message attachment.
- Requires authentication using a valid username and password.
- Your company may require you to specify a replacement.
- Files uploaded cannot be removed and should be attached to an event or scenario
  quickly.
- Devices marked as privileged will have specific information redacted based on user
  permissions.
- Mobile app devices cannot be created with the REST API.
- Event suppressions retrieval requires the unique identifier of the event.
- The unique identifier (uuid) or name (targetName) of the plan must be URL-encoded.
- To delete a conference bridge, you must know the unique identifier (`id`) of the
  conference bridge.
- Ensure to use URL-encoded names for formId and planId.
- The subject line must be concise and informative.
- The body can include HTML content for formatting.
- To convert a legacy group, locate it in the user interface and click the Unshare
  button.
- For on-call groups, add members to at least one shift to receive notifications.
- The endpoint to retrieve import jobs requires basic authentication.
- Access tokens expire after a fixed duration.
- Uses OAuth2.0 authentication allows access to the xMatters REST API.
- Use the `embed` query parameter to include additional information about the owner
  of device members.
- The query parameters `from` and `to` can be used to access historical data.
- The xMatters API requires basic authentication using a username and password.
- This API requires basic authentication.
- Modify and delete actions require the constant ID.
- To update a scenario, include all array items to avoid removal.
- Ensure to specify the correct username and password for basic authentication.
- Combines all attachments must not exceed 10 MB.
- The only required body parameter for modifying is the UUID of the scheduled message.
- Shift occurrence details include member position and delay.
- The country must be marked as Active in the Admin tab before you can set it.
- The language must be enabled in xMatters before you can set it.
- The time zone must be marked as Active in the Admin tab before you can set it.
- The unique identifier of the plan is required to create or modify subscription forms.
- The `subscribeOthers` field must be set to true to add recipients.
- User permissions overwrite previously stored share permissions.
- To search historical data, you must set the at parameter.
- The unique identifier (id) of the conference bridge is required for deletion.
- Default trigger type for forms is MESSAGING if not specified.
- Forms must be manually enabled for mobile, UI, or API use.
- The request body must include 'subject' and 'body' fields in JSON format.
- Requires setup of user credentials for basic authentication.
- If no groupType is specified, the group is created as an On-Call group.
- Uses basic authentication with username and password for API calls.
- Built-in integration configurations are used to define how an event is processed.
- This API requires authentication with a valid username and password.
- Use the correct UUID format for planId in property definitions endpoint.
- This API requires valid username and password for basic authentication.
- 'The default name for the import job is: User Upload v1.5 at {date/timestamp}.'
- For historical data queries, use the `at`, `from`, and `to` parameters.
- Basic authentication requires username and password.
- Event suppressions are based on event flood control rules.
- The body of the request includes HTML content.
- The request requires a JSON payload.
- Some objects may return nulls in deeply nested fields
- Ensure to configure the 'xMatters' endpoint with valid username and password.
- Returns a paginated list of Group objects.
- The transform type for uploaded files includes User Upload v1.5 and Epic ZipSync
  Upload v1.3.
- Ensure proper authentication setup with username and password.
- Uses OAuth2.0 for authentication — tokens must be refreshed periodically.
- Supports pagination for results.
- Wildcards can be used in role name queries.
- Supports pagination via offset and limit parameters.
- Authentication is done using basic auth with username and password.
- If one of start or end is specified, the other must be set.
- The API supports querying shifts and their members
- Ensure proper permissions are set for accessing group and shift data
- Use POST to create subscription forms.
- The request must include the subscription ID for modifying, adding subscribers,
  setting share permissions, or deleting.
- Use UTC format for start and end times.
- Query parameters are optional.
- Most tools provide built-in HTTP Basic Authentication support.
- Files uploaded to xMatters cannot be removed after upload.
- Changes allow users to detect problems and troubleshoot in their instance.
- Uses basic authentication — username and password required
- Access to data using historical parameters is limited by your pricing plan.
- Retrieve targeted recipients using GET /events/{eventId}?embed=recipients&targeted=true
- Retrieve resolved recipients using GET /events/{eventId}?embed=recipients
- The API requires valid identifiers for events and forms.
- Use specific bridge IDs for xMatters-hosted conferences.
- Use the UUID of the group you want to update.
- Use ?embed=supervisors query parameter to include supervisors.
- 'Note: This endpoint is only available for User Upload files and will not return
  messages for uploaded EPIC ZipSync files.'
- Basic auth is required for all endpoints.
- Historical data can be accessed using 'from' and 'to' parameters.
- Each endpoint requires a valid username and password.
- xMatters REST API items such as plans, forms, constants, endpoints, subscriptions,
  and integrations still contain references to plans and communication plans.
- The plan type must be 'PLAN' to modify or delete a plan.
- Ensure to handle rate limits and authentication correctly.
- Response codes provide insight into success or errors.
- You can add up to 10 attachment files with a combined size of not exceeding 10 MB.
- Default values for mobileEnabled, uiEnabled, and apiEnabled are all 'false'.
- For shifts, the `groupID` or `shiftID` is needed to retrieve specific shifts.
- Responses return objects representing the requested data.
- Once uploaded to xMatters, each file is given a temporary location.
- If search parameters are provided, this endpoint returns only the matching events.
- Ensure the event ID is valid and exists in the system
- Maximum attachment size is 10 MB, with up to 10 files.
- Forms can only contain one of each type of section.
- The `language` field in email and SMS templates is mandatory and must contain a
  valid two-letter ISO 639 code.
- Sender permission values in the provided list overwrite all previously stored values.
- Requires setup of OAuth2 credentials for API access.
- Use ?embed=supervisors query parameter to include supervisors in dynamic group response.
- If an inaccurate `id` is submitted with the request, a new user is created if the
  `id` does not exist.
- The only required body parameter for modifying a plan constant is the UUID of the
  constant you want to update.
- The maximum size for uploaded files is 10 MB.
- Shift control the dates that members are on duty as well as the order in which they
  are contacted.
- Use unique identifiers (id) for groups and shifts when making API calls.
- The API supports adding members to shifts, deleting shifts, and restoring deleted
  shift occurrences.
- Use site ID or name to identify a site.
- Shift occurs within the timezone US/Pacific from 2024-10-30T07:00:00.000Z to 2024-10-31T07:00:00.000Z.
- Recurrence frequency is WEEKLY, repeating every 1 week.
- The API requires a username and password for authentication.
- Response includes a count of subscription forms returned.
- To limit results, use the optional `from` and `to` query parameters.
- To allow for unknown factors such as clock drift and network lag, there is a 15-minute
  synchronization window.
- Some API endpoints may require specific parameters to be included in requests.
- Use specific UUIDs for forms when making API requests.
- UUIDs must not match any other objects within xMatters.
- Users with a Stakeholder license type cannot respond to notifications.
- You can add up to 10 attachment files when creating a scenario, with a combined
  size not exceeding 10 MB.
- Search parameters can be used in the scheduled messages endpoint.
- A unique name for the scheduled event, up to a maximum of 250 characters.
- Use valid username and password for authentication
- Use the site ID or name to access specific site information.
- Subscribes users to notifications created by forms in the plan.
- The subscribeOthers field must be set to true to add recipients.
- Uses basic authentication with username and password for all requests.
- For voice notifications, defines whether to try the call again or leave a message.
- Forms can be filtered and sorted using various query parameters.
- The unique identifier (id) or name (targetName) of the form must be URL-encoded
  for the formId parameter.
- Requires setup for API access in xMatters.
- You can use the embed query parameters to enhance the result to include more information
  about the owner of device members.
- The include query parameter can be used to include all gaps in shift coverage.
- Use HTTP Basic Authentication with username and password.
- The plan ID is required for updating or deleting endpoints.
- Utilizes basic authentication.
- To modify a property, specify the plan ID in the URL.
- Use the allowWildcards query parameter to filter roles.
- 'Example: `/scheduled-messages?search=service maintenance` returns all scheduled
  messages that contain either ''service'' or ''maintenance''.'
- Shift times are in UTC format.
- Shift members may have different statuses and roles.
- If scope is set to FORM, you must also include the form parameter.
- Requires authentication for accessing subscription data
- Permissions affect subscriber visibility depending on user roles
- When set to `true`, notifications that target you directly are sent to your specified
  replacement or discarded if a replacement is not set.
- 15-minute synchronization window between data collected by the current system and
  historical data.
- Use UUID for event ID as it may return more reliable results.
- Configurations may vary depending on the form's setup.
- Forms are not enabled immediately and must be manually enabled later.
- For On-Call groups, you must add the member to at least one shift before they will
  receive notifications.
- Use `?embed=supervisors` to include supervisors in the response.
- Uses OAuth2.0 for authentication with a client ID and user credentials.
- When search terms contain spaces, they must be enclosed in double quotes.
- API requires basic authentication with username and password.
- Shift members can include persons, groups, or devices.
- Users can identify a site by its name or id.
- Authentication is required for accessing subscription information.
- If no group is specified, the absence applies to all groups the user is a member
  of.
- The unique identifier for the plan is required for fetching or creating properties.
- Requires OAuth2 authentication for API access.
- The conference bridge is deleted from any form or scenario where it is used.
- Ensure formId and planId are URL-encoded when querying.
- Uses basic authentication
- Ensure the email template body is HTML encoded.
- The sender permission values in the provided list overwrite all previously stored
  values
- The six digit legacy numeric form identifier should not be used in place of the
  UUID.
- If `true`, you can use the xMatters app to send messages using the form.
- If `true`, you can use the web user interface to send messages using the form.
- If `true`, you can use the xMatters Trigger an event endpoint to send messages using
  the form.
- The `observedByAll` parameter defines group visibility.
- For a specific import job, use its unique identifier.
- The request must be authenticated using a valid username and password.
- UUIDs must follow the specified format and cannot match existing IDs.
- The request can create a new person if the provided ID does not exist.
- Plan identifiers are unique and must be specified for certain operations.
- Use the 'allowWildcards' query parameter to search role names.
- Shift details include ID, name, start and end times, and member information.
- If scope is set to FORM, the form parameter must be included.
- Users with appropriate permissions can modify subscriptions.
- To return information about a single device, use GET /devices/{deviceID}.
- Must have appropriate permissions to delete data.
- The only required body parameter for modifying a group is the UUID of the group.
- Uses Basic Authentication for accessing API.
- Requires sufficient permissions to view or trigger incidents.
- Use GET /communication plans to get the UUID of a plan.
- Uses OAuth2 with password grant type — requires setup of client ID and user credentials.
- When accessing who is on call now, or for a shift in the future, you'll need to
  set the from parameter to a time no more than 24 hours in the past, and the to parameter
  for a time that is in the future.
- This API requires authentication using basic auth.
- A unique name for the scheduled event must be up to a maximum of 250 characters.
- Shift details include members, rotation type, and recurrence information.
- The request must be authenticated using Basic Auth.
- The unique identifier (`id`) of the plan is required.
- The `scope` parameter can be set to FORM or ALL_FORMS.
- Retrieve subscription forms in a specific communication plan using the planId.
- Uses HTTP Basic Authentication or OAuth authentication with token.
- Once uploaded to xMatters, each file cannot be removed.
- Only company supervisors or administrators can create, edit, or delete privileged
  devices.
- To search historical data, use the 'at' parameter along with 'from' and 'to'.
- Targeted recipients do not include their notified devices unless explicitly added
  as recipients.
- Resolved recipients may vary based on group memberships.
- A maximum of 10 files can be attached, with a size limit of 10 MB for each file.
- The only required body parameter for creating a conference bridge is the UUID of
  the group you want to update.
- To delete a conference bridge, you must know its unique identifier (id).
- Using basic authentication with username and password.
- Ensure the formId and planId are URL-encoded when making requests.
- The `language` field in email and SMS templates must contain a valid two-letter
  ISO 639 code.
- If the id field is not provided, it is interpreted as a request to create a new
  request parameter.
- For On-Call groups, must add the member to at least one shift before they will be
  able to receive notifications.
- OAuth2.0 authentication allows access without storing sensitive credentials.
- If an inaccurate `id` is submitted, xMatters will create a new user or modify the
  existing user.
- This API requires basic authentication with a username and password.
- Use 'operand' parameter to limit or expand search results.
- This API allows uploading files up to 10 MB in size.
- The id field uniquely identifies a site.
- Language and country codes follow ISO standards.
- If 'scope' is set to FORM, the 'form' parameter must be included.
- Pagination is available using offset and limit parameters.
- Requires a subscription form created in the web user interface before creating a
  subscription.
- Use GET /temporary-absences to retrieve temporary absences.
- Response includes any roles with 'incident' in the name when using wildcards.
- Use with caution regarding the timing of 'from' and 'to' for historical data.
- Initial access token and refresh token are obtained by authenticating with a client
  ID, username, and password.
- You can use the query parameters to limit your search by plan type or search for
  specific keywords.
- Requires valid username and password for API authentication
- Requires setup of valid username and password for basic auth.
- Responses may vary based on search criteria.
- Responses include a variety of shift and shared library objects.
- Ensure valid authentication credentials are used.
- Use unique identifiers for groupID and shiftID to ensure accurate requests.
- Response contains a list of subscription forms or details based on permission level.
- Use UUID for eventID for better results.
- The unique identifier of an incident is required when modifying an existing incident.
- The default severity for incidents is Medium.
- The default status for incidents is Open.
- UUID must be valid and unique for each person.
- Plan type can be BUILT_IN or communication plan.
- When searching with multiple terms, enclose them in double quotes.
- For more information on response codes, see HTTP Response Codes.
- If 'scope' is FORM, you must include the 'form' parameter.
- Use the query parameters to filter the results.
- Absences are defined in UTC format.
- Use the 'at' parameter to query historical data.
- Responses may vary based on permission level
- If the `id` field is not provided in the request body, it's interpreted as a request
  to create a group.
- The base URL must be defined for requests.
- Access tokens expire after a fixed number of seconds as described by the `expires_in`
  field
- Use the `id` field to modify a user.
- If the `id` is not provided, a new user is created.
- For group memberships, the returned list includes groups that the user or one of
  their devices belongs to directly.
- For supervisors, the endpoint retrieves a paginated list of a person's supervisors.
- License quotas are separated by license type.
- The request did not succeed if the response code is not 200.
- Use HTTP Basic Authentication with a username and password.
- This API requires authentication using username and password.
- Search terms for scheduled messages must contain at least two characters.
- Sorting options available for scheduled messages include NAME, OWNER, RECURRENCE,
  LAST_MESSAGE, and NEXT_MESSAGE.
- Responses include pagination of Services Objects.
- 'Service tier valid values include: PLATINUM, GOLD, SILVER, BRONZE, NONE.'
- The site object includes fields for name, country, language, and timezone.
- Some properties are not modified if they are not included in the request.
- Create a subscription form for all forms in the plan or for a specific form.
- The endpoint for creating subscription forms requires a valid username and password
  for authentication.
- Privileged devices redact specific information such as phone numbers from users
  without the appropriate permission settings.
- To search historical data, use the `at`, `from`, and `to` parameters.
- Voicemail options require configuration for handling behavior.
- Forms are associated with communication plans which may still reference old terminology.
- Use the 'embed=shifts' query parameter for On-Call groups to include shift information.
- If a group's creator has limited visibility by setting specific roles as observers,
  the observedByAll is set to false.
- Response is paginated for supervisors and recipients.
- This API requires basic authentication with a valid username and password.
- Uses OAuth2.0 for authentication — requires setup of client ID in xMatters.
- Variable 'planId' must be provided to access specific plan details
- Authentication is done using HTTP Basic Auth.
- The endpoint for creating scenarios allows for up to 10 attachments with a combined
  size limit of 10 MB.
- Response includes count and total of subscription forms.
- Uploaded files should be attached to events or scenarios as quickly as possible.
  Files that are uploaded but not attached are eventually deleted.
- Privileged devices redact specific information for users without appropriate permission
  settings.
- Only company administrators and company supervisors can create, edit, and delete
  privileged devices.
- xMatters API allows triggering events through Inbound Integration.
- Maximum payload size for Inbound Integrations is 200,000 bytes.
- The formId should not be used in place of the UUID when making API requests.
- For On-Call groups you can include shift information by using the ?embed=shifts
  query parameter.
- Use {groupId} to specify the unique identifier or name of the group.
- Dynamic groups and import jobs are available through the xMatters API.
- Must have sufficient permissions to view incidents.
- Use the allowWildcards query parameter to search for roles with partial matches.
- The unique identifier of the shared library is automatically generated.
- The subscription ID and person ID must be specified in the URL parameters.
- Successful deletion returns a 200 OK response.
- The start and end times are defined in universal time (UTC) format and may not reflect
  the time zone of the authenticating user.
- This feature is not available in the Integration Builder
- Default trigger type is MESSAGING if not specified
- Default values for mobileEnabled, uiEnabled, and apiEnabled are false
- Ensure formId and planId are URL-encoded when making requests.
- The subject and body fields are required for the message template.
- This API requires OAuth2 authentication.
- Use the id field to identify the plan when modifying or deleting.
- Can add up to 10 attachment files, combined size must not exceed 10 MB.
- For creating or modifying services, ensure the request payload includes all required
  fields.
- Ensure groupID and shiftID are correctly specified in the URL
- Shift occurs in the US/Pacific timezone
- Shift members can have different escalation types
- Users can create subscription forms for all forms in the plan or for a specific
  form.
- Targeted recipients include users but do not include their notified devices.
- If a group's creator has limited the visibility by setting specific roles as observers,
  only those roles can send notifications.
- Supports paginated responses
- Responses contain paginated data.
- Requires setup of valid username and password for Basic Authentication
- Requires setup of user credentials for authentication.
- Use 'allowWildcards' parameter to search for roles with partial matches.
- The service can only have one owner, but a group can own multiple services.
- If you do not specify a position to insert the member, it is added to the end of
  the escalation timeline.
- Members can have different escalation types and delays.
- The `scope` parameter must be set to FORM to specify a specific form.
- If `subscribeOthers` is true, subscription creators can subscribe other users.
- Absences are defined in universal time (UTC) format.
- Multi-part forms are not supported in Flow Designer.
- Files that are uploaded but not attached are eventually deleted
- If a change record is created, it cannot be modified or deleted from your system.
- When this value is set to true, xMatters omits the standard voice greeting and plays
  the message immediately.
- When this value is set to true, xMatters ignores shift escalation delays and immediately
  broadcasts the message to all recipients.
- When this value is set to true, xMatters ignores device timeframes and delays.
- Authenticate using username and password via Basic Auth.
- The unique identifier (`id`) of the form is used for API requests.
- 'Use the groupType parameter to specify the type of group to create: ON_CALL, BROADCAST,
  or DYNAMIC.'
- The transform type of the submitted file can be User Upload v1.5 or Epic ZipSync
  v1.3.
- Use the 'embed=roles' query parameter to include a list of each user's assigned
  roles in the response.
- A paginated list of group memberships for a person can be retrieved using their
  unique identifier or target name.
- Valid UUIDs are required for the 'id' field.
- Device information may be restricted based on permissions.
- Requires setup of valid username and password in the request.
- This API requires username and password for basic authentication.
- The shift includes information about group assignments and member details.
- The request must include the subscription ID for modifying a subscription.
- When targeting all devices, targetDeviceNames cannot be true.
- Files must be in .csv format.
- Start and end times are defined in universal time (UTC) format.
- This endpoint allows users with appropriate permission settings to set which users
  and roles can edit and initiate scenarios.
- Devices must have roles that give sufficient permission to view or edit data.
- Default trigger type for forms is MESSAGING
- For on-call groups, must add member to at least one shift to receive notifications.
- Dynamic groups return users based on criteria at the time of an event.
- The summary, and description fields are required to create an incident.
- Ensure to handle basic authentication properly.
- Use the embed query parameter to enhance the result.
- The unique identifier of the shared library is generated automatically by xMatters.
- You can identify the shift and group by either its targetName or id.
- The site object includes properties like id, name, language, and timezone.
- Success response code is 200 OK.
- Error responses include various HTTP response codes.
- Access to data using the 'from' or 'after' parameters is limited by your pricing
  plan.
- Uses Basic Auth with username and password for API requests.
- The API uses Basic Auth with username and password.
- Use GET /imports to find the id of the specific job.
- The response includes a maximum of 3 shift members unless membersPerShift is specified.
- Uses basic authentication — requires setup of valid username and password.
- For people, use 'PERSON' as the recipientType.
- Responses may vary based on user permissions.
- xMatters REST API items such as plans still contain references to communication
  plans.
- Get all scheduled messages in your system
- Use double quotes for multi-word search terms.
- Uses HTTP Basic Auth for authentication
- When setting the start and end time of the shift, ensure to convert the date and
  time to UTC.
- Uses basic authentication — requires valid username and password
- Use UUID for eventId as the event ID number might not always return results.
- For on-call groups, must add the member to at least one shift before notifications
  can be sent.
- The groupType cannot be changed after group creation.
- Use the correct groupId when calling endpoints related to groups.
- Paginated response for import jobs.
- Incidents created do not trigger flows, and do not have the robust functionality
  of user responses, collaboration channels, flood control.
- Integration logs are useful for debugging issues.
- Initial access token and refresh token obtained via client ID, username, and password.
- UUIDs must be valid and cannot match the UUID of any other objects within xMatters.
- The only required body parameter for updating a scenario is the UUID of the scenario.
- If propertyDefinitions are not specified, subscriptions are sent for every event.
- Contact xMatters Support for permission settings for other roles.
- Maximum payload size of 200,000 bytes
- Authentication requires valid username and password
- The unique identifier for events is recommended to be the UUID.
- Use pagination query parameters for results.
- If the id field is not provided when modifying a group, it is interpreted as a request
  to create a new group.
- Incidents created do not trigger flows.
- Ensure to replace {incidentID}, {planId}, and {integrationId} with actual values
  in the endpoints.
- Uses OAuth2 for authentication — requires setup of OAuth client in xMatters
- API keys are used for authentication
- When accessing who is on call now, or for a shift in the future, you'll need to
  set the `from` parameter to a time no more than 24 hours in the past, and the `to`
  parameter for a time that is in the future.
- Use 'allowWildcards' query param to search for roles with wildcards.
- Use URL-encoded names for planId and formId.
- The size limit for all files is 10 MB.
- The unique identifier for a shared library is generated automatically.
- Shift occurrences and details about members can be fetched via the respective endpoints.
- To create a subscription form, set the `scope` parameter to FORM, then include the
  form id in the `form` parameter.
- Returns a list of subscriptions. Use query parameters to filter results.
- UUID should be used for eventID for better reliability.
- The 'at' parameter is necessary for historical user delivery data.
- Valid values for sorting include USER_DEFINED and NAME.
- Pagination query parameters are offset and limit.
- Uses Basic Authentication with username and password for xMatters endpoints.
- Use HTTP Basic Auth for requests.
- Uses OAuth2 with password grant type — requires client ID, username, and password
- Search terms in query parameters must contain at least two characters.
- The sortOrder parameter must be used with the sortBy parameter.
- The response returns all services that depend on the specified service.
- Shift details include members, recurrence, and timing information.
- This API allows for creating and modifying subscription forms.
- Requires setup of subscription form in the web user interface.
- This endpoint allows for the creation and retrieval of change records.
- User must have 'ability.act.HistoricalDataAccess' permission for historical data
  access.
- Using UUIDs is recommended for event ID.
- Historical data queries require the 'at' parameter.
- Use `embed` to list additional objects to include in the response.
- Response options must include text, description, prompt, action, contribution, joinConference,
  and allowComments.
- The API requires a valid username and password for Basic Authentication.
- This API uses OAuth2 for authentication.
- The API has renamed 'communication plans' to 'workflows'.
- The company name to attach to all chat bot conversations.
- Identifies the constant to be modified.
- Shift occurrences can vary in timing and member assignment.
- Site must have country, language, and timezone marked as Active in the Admin tab
  before creating.
- Subscription forms can be created for all forms or a specific form in a plan.
- You must include the 'id' in the update request to modify a subscription form.
- To trigger an event, use an inbound integration and send a POST request to the relevant
  URL.
- The API supports embedding response options and recipients.
- For specific parameters about the incident details section, see the Incident Details
  object.
- API requires specific form IDs when making requests.
- Ensure to check if the form is mobile or UI enabled before using it.
- Update existing sender permissions for a form.
- The unique alpha-numeric incident number is used to look up the incident.
- The default status of an incident is 'Open'.
- To include gaps in shift coverage, use the 'include' query parameter with the value
  'GAPS'.
- Some plans may not have a 'creator' property.
- The UUID of the plan needs to be specified in the URL for modifying properties.
- Response includes pagination for scheduled messages.
- Search terms must be at least two characters.
- Shift recurrence allows for weekly scheduling.
- Shifts can have multiple members with specific roles.
- The API supports pagination using offset and limit parameters.
- Subscription forms can be used to manage notifications based on user-defined criteria.
- The DELETE command is used to unsubscribe a user, not to delete the subscription
  itself.
- The request must include the subscription ID for modifying or deleting a subscription.
- Temporary absences are defined in UTC format.
- For creating absences, a replacement must be specified if absenceType is REPLACEMENT.
- Only company supervisors currently have permission to create, edit, and delete privileged
  devices.
- Using Basic Authentication with username and password for requests.
- Event suppressions returns records of suppressions related to an event.
- Includes information on the parent event and the event flood control rule that resulted
  in the suppression.
- The default value for mobileEnabled, uiEnabled, and apiEnabled upon creation is
  false.
- For On-Call groups, must add a member to at least one shift to receive notifications.
- Use the appropriate group ID to query specific group information.
- Communication plans allow tailoring communications to suit situations.
- Response code 201 Created when a person is successfully modified or created.
- Response code 200 OK when a person is successfully deleted.
- You can set values for sections that are hidden or not included on the form in the
  web user interface.
- Configure the "xMatters" endpoint to use a valid username and password.
- Use unique identifier for group and shift when making requests.
- For shifts that rotate through the escalation order, you can also set whether a
  shift member is on-duty or off-duty using the 'onDuty' parameter.
- The unique identifier (id) of the plan is required for creating subscription forms.
- Uses basic authentication — requires username and password.
- Uses HTTP Basic authentication.
- The API returns a code of 204 No Content if the group member does not exist.
- Use URL parameters to specify groupId for group-specific requests.
- Ensure to use valid username and password for authentication
- To obtain a new access token using your refresh token and client ID.
- Use allowWildcards query parameter to search for roles.
- Searching requires at least two characters.
- Shift members may have varying duty statuses.
- Holidays may affect shift coverage.
- For events, use UUID for eventId as the numeric eventId may not always return results.
- Ensure to include 'at' parameter for historical data queries.
- Event suppressions are retrieved based on the event ID.
- For on-call groups, must add the member to at least one shift before they start
  receiving notifications.
- Group visibility is set by the observedByAll parameter, which defines which roles
  can send notifications to a group.
- The import job endpoint supports pagination.
- Initial access and refresh tokens are obtained using client ID, username, and password.
- The request cannot have a timeframe that spans from the past to the future.
- Uses OAuth2.0 authentication with client ID and user credentials.
- Some plans may not have a description.
- The API allows for modifying existing properties in a communication plan.
- Operand is case-sensitive; use uppercase 'AND' or 'OR'.
- The search parameter must contain at least two characters.
- Searching with multiple terms requires enclosing them in double quotes.
- To limit results to a specific timeframe, use the from and to query parameters.
- Once uploaded to xMatters, each file is given a temporary location
- Uploaded files should be attached to events or scenarios as quickly as possible
- If excluded, the change is assumed to be global.
- Use UUIDs for event IDs to ensure reliable results.
- Event suppressions are related to event flood control.
- Basic authentication using username and password.
- Use of formId refers specifically to the UUID of a form and not to the six-digit
  legacy form identifier.
- The language field must be a valid two-letter ISO 639 code.
- Templates must be HTML encoded.
- Use groupId to access specific group details.
- Uses OAuth2.0 authentication with username and password
- Token expires after a fixed number of seconds as described by the expires_in field
  returned in the response body.
- Devices may show asterisks for privileged information if permissions are insufficient.
- Uses basic authentication for API access.
- This API requires authentication with a username and password.
- Depends on permission level for visibility of subscription form details.
- If a notification is not handled on time, xMatters can then escalate it to the next
  group member according to the group's timeline.
- Returns a paginated list of supervisors for a specified group.
- Returns the number of groups created and allowed by the plan.
- Returns a paginated list of recipients for a specified group.
- You can identify groups by their name (`targetName`) or unique identifier (`id`).
- Historical data can be accessed using `to` and `from` parameters.
- Integration objects describe an inbound or outbound integration associated with
  a communication plan.
- OAuth2 authentication type is required.
- Use wildcards in role names for searching.
- Searching with multiple terms requires double quotes.
- Shift starts on 2024-10-30T07:00:00.000Z and ends on 2024-10-31T07:00:00.000Z.
- Shift is in US/Pacific timezone.
- Requires valid username and password for access.
- Service to manage inbound emails
- Use the offset and limit parameters to control pagination.
- The use of formId in the definition refers specifically to the UUID of a form and
  not to the six-digit legacy form identifier.
- You can create either On-Call, Broadcast, or Dynamic groups by specifying the `groupType`.
- Once a group is created, the `groupType` cannot be changed.
- Use the /triggers endpoint for more robust functionality.
- Uses Basic Authentication for user requests.
- Ensure the correct permissions are set for the API user.
- Locating site identifiers in the xMatters user interface requires advanced permissions.
- Use UUIDs for unique identifiers.
- Responses will vary based on the user's permissions.
- Each service has a group assigned as its owner.
- You can create, modify, and delete services.
- Use unique identifiers for groups and shifts to avoid issues.
- Requires specific permissions to access subscription form details.
- This endpoint allows you to suspend, resume, or terminate an event.
- Use embed to include additional objects like responseOptions and recipients.
- Form sections can only contain one of each type.
- The `observedByAll` parameter defines which roles can send notifications to a group.
- Use ?embed=supervisors to include supervisors in the response.
- If not provided during incident creation, the default severity is 'Medium' and the
  default status is 'Open'.
- The unique identifier for each incident is required when updating.
- When accessing historical data, ensure the timeframe does not span from the past
  to the future.
- Uses OAuth2.0 with password grant type for authentication
- UUID must be valid and not match any other objects within xMatters.
- User licenses include fullUsers and stakeholderUsers.
- The API allows modification of existing properties in a communication plan.
- Roles can be retrieved with optional filters.
- Uses HTTP Basic Auth with username and password.
- Requires setup of valid username and password for xMatters API.
- Shift occurs weekly from Monday to Sunday.
- Shift members may have varying delays before escalation.
- Depends on your permission level to see either the unique identifier and name of
  the subscription form or all subscription form information.
- To find the `id` or UUID for an event, use [GET /events](#get-events).
- Using the `at` query parameter tells the request to search historical data.
- Names must be URL-encoded
- For On-Call groups, add the member to at least one shift to receive notifications.
- Initial access token and refresh token obtained using client ID, username, and password.
- UUIDs can only contain letters a-f, numbers 0-9, and dashes.
- For group memberships, returns groups that the user or one of their devices belongs
  to directly.
- Responses may include additional attributes based on query parameters.
- The request to create a site must include a Site object in the request body.
- Shift details include group references and member information.
- If 'scope' is set to FORM, 'form' parameter must be included.
- Use formId in the definition refers specifically to the UUID of a form and not to
  the six-digit legacy form identifier.
- Only one form section can be sent per request.
- The initial severity of the incident defaults to 'Medium'.
- The initial status of the incident defaults to 'Open'.
- Includes groups that the user or one of their devices belongs to directly.
- Plan must be identified by unique identifier (id).
- Ensure proper permissions are set for accessing the plans.
- Ensure to replace '{planId}' and '{constantId}' with actual IDs.
- The unique identifier (`id`) of the shared library is required for DELETE requests.
- Shift members may have delays and escalation types.
- The shift occurs in the US/Pacific timezone.
- The request may return various response codes for success or error.
- The start and end times are in UTC format and may not reflect the time zone of the
  authenticating user.
- To authenticate with HTTP Basic Authentication, include an Authorization header
  with each request.
- Once uploaded, files cannot be removed from xMatters.
- Logs changes for services within xMatters instance.
- Returns information about an event, including the person who initiated the event
  and any conference bridge details associated with the event.
- Requires setup of communication plan for triggering events.
- The unique identifier of the form is returned in the 'id' field.
- Use the formId for legacy numeric identifiers, not the UUID.
- Endpoint requires authentication.
- On-Call groups send notifications only to the group members on call based on the
  shift schedule.
- The transform type of the submitted file includes users-v1 and epic-v1.
- Incidents created through the /incidents endpoint do not trigger flows and lack
  advanced functionality.
- When adding new users, only use properties that are already defined in the web user
  interface.
- The maximum size for file attachments is 10 MB.
- The API allows for both user and role-based permissions for scenarios.
- Use the xMatters web user interface to add new shifts.
- The site object includes properties such as name, country, and language.
- Once uploaded, the file cannot be removed and should be attached to an event or
  scenario quickly.
- The unique identifier (id) or name (targetName) of the form must be URL-encoded.
- Use the appropriate authentication credentials for API access.
- Uses HTTP Basic Authentication — requires valid username and password.
- Use the 'id' field to modify or delete a person.
- If your xMatters account is not entitled to Stakeholder users, an empty response
  is returned.
- Allows for wildcards in role name queries.
- Searching with spaces requires double quotes.
- Allows adding members to shifts with escalation rules.
- Members can be added with specific positions and delays.
- Supports pagination with limit and offset.
- Ensure you have the appropriate permissions to delete data.
- Uses xMatters API for communication plans
- The 'type' parameter cannot be modified.
- For on-call groups, must add the member to at least one shift before they receive
  notifications.
- Only groups that the authenticated user has permission to access are returned.
- The groupType cannot be changed once created.
- The API requires basic authentication.
- Ensure to handle HTTP response codes properly.
- Use OAuth2 for authentication
- UUID must be valid and cannot be used to identify any other objects within xMatters.
- For people, the recipientType value is 'PERSON'.
- Requires authentication with a valid username and password.
- The API supports pagination for roles.
- Supports attachment upload for scenarios, limited to 10 files and 10 MB total size.
- Valid sorting options include NAME, OWNER, RECURRENCE, LAST_MESSAGE, NEXT_MESSAGE.
- Shift details include id, name, start and end times, and recurrence information.
- Users can create and manage subscription forms for notifications.
- Error response codes are documented in the HTTP Response Codes section.
- Requests must include valid username and password for authentication.
- Returns information about an event, including the person who initiated the event,
  the form used to create the event, and any conference bridge details.
- Some requests require specific permissions to access.
- Use UUIDs for identifying conference bridges.
- For on-call groups, at least one shift must be assigned for members to receive notifications.
- Default groupType is ON_CALL if not specified.
- Dynamic groups have specific criteria for determining members.
- Import jobs return paginated data.
- The unique identifier (`id`) of an incident is required for updates.
- Use base64 encoded scripts for outbound integrations.
- To view a group's on-call schedule in universal time, view the group in the xMatters
  user interface.
- Initial access token and refresh token are obtained by authenticating with a client
  ID, user name, and password.
- Use the {personID} or {personId} in the path to identify a person.
- The unique identifier for a shared library is required for deletion.
- The response for retrieving shifts includes a count of total shifts.
- The site country must be marked as Active in the Admin tab before setting it.
- The site language must be enabled in xMatters before setting it.
- The site timezone must be marked as Active in the Admin tab before setting it.
- The notification is not delivered if the event is terminated before the notificationDelay
  time has elapsed.
- Absences can only be created for future dates, not past.
- Use the 'at' parameter for historical data access.
- The 'at' parameter is used to query historical data.
- Retrieve event details and annotations using specified endpoints.
- Event suppressions allows retrieval of records resulting from event flood control
  rules.
- Basic authentication with username and password
- Endpoint retrieves all members of a specified group.
- Dynamic groups include supervisors and criteria for member determination.
- Uses Basic Auth for API requests.
- To obtain an initial access token (and refresh token), use client ID, username,
  and password.
- Modifying a plan requires the unique identifier in the id field.
- Use the UUID of the plan for modifying properties.
- Search queries must be case-insensitive and contain at least two characters.
- The shift occurs on a specified schedule.
- Members may have different positions and roles within the shift.
- User permissions determine the level of access to site information.
- A 15-minute synchronization window is applied for timeframe-based historical data.
- Requires setup of xMatters API access.
- Retrieve records of any suppressions resulting from event flood control rules for
  a particular event.
- To delete a conference bridge, you must know its unique identifier (id) and have
  the appropriate permissions.
- For On-Call groups, must add the member to at least one shift for notifications.
- The request did not succeed. Response code indicates failure.
- Triggering an incident provides more robust capabilities and features than creating
  an incident.
- Initial access token and refresh token are obtained by making a call to POST /oauth2/token
  and authenticating with a client ID, username, and password.
- A scenario can include up to 10 attachments, with a total size not exceeding 10
  MB.
- Returns a SharedLibrary object on successful delete.
- Specify group or shift by id or name.
- The API requires a valid username and password to access.
- You can set multiple requests for different groups and replacements.
- If triggerType is not specified, the default trigger type is MESSAGING.
- The default values for mobileEnabled, uiEnabled, and apiEnabled upon creation are
  false.
- The 'language' field is mandatory for email, SMS, and voice templates.
- The access tokens expire after a fixed number of seconds.
- To refresh the OAuth token, set the grant type to refresh_token.
- The `id` field is mandatory for modifying or deleting a person.
- Returns a list of shared Integration Builder libraries in a communication plan.
  This endpoint does not currently support Flow Designer shared libraries.
- Updates the name or script of an existing shared library.
- If the group allows duplicates you may add a member to a shift more than once.
- Off-duty members must be positioned after all on-duty members.
- Response code 200 OK returns a pagination of Subscription Form objects in the response
  body.
- The request must include the subscription ID for certain operations.
- To retrieve annotations, call the `/audits` endpoint with the `?auditType=EVENT_ANNOTATED`
  query parameter.
- To retrieve responses, call the `/audits` endpoint with the `?auditType=RESPONSE_RECEIVED`
  query parameter.
- There is a 15-minute synchronization window when searching historical data.
- The user must have permission to initiate the form.
- The 'language' field in the body parameters must contain a valid two-letter ISO
  639 code.
- You can only send one form section per request for modifications.
- The default group type is ON_CALL if not specified.
- Dynamic groups can include supervisors and criteria for determining group membership.
- Integration modifications require the integration ID.
- To include a list of roles in the response for a person, use the ?embed=roles query
  parameter.
- To find the ID of a plan, use [GET plans](#get-plans).
- Use the `allowWildcards` query parameter to search for roles.
- Shift objects represent availability of group members for notifications.
- Shift details include start, end, and recurrence information.
- The request to add a member requires a valid username and password.
- You can create a subscription form for all forms in the plan or for a specific form
  by setting the 'scope' parameter to FORM.
- If a specific service is not included, the change is assumed to be global.
- This API requires basic authentication with username and password.
- A group can have observers defined.
- Endpoint returns only the groups that the authenticated user has permission to access.
- The group identifier must be a valid UUID.
- If the id field is not provided in the request body, it is interpreted as a request
  to create a group.
- Use the `?embed=supervisors` query parameter to embed group supervisors in a call
  to GET /group.
- Uses OAuth2 with password grant type for authentication
- Use the `search` query parameter to return users with matching names, user IDs,
  email address, or phone numbers.
- Communication plans and configurations are used to define how an event is processed.
- Requires setup of user credentials for API access
- Returns a paginated list of service dependencies.
- Describes a scheduled message in your xMatters system.
- Uses Basic Auth — requires valid username and password.
- The shift includes members, each with their own status and details.
- The position of the recipient in the shift can be specified.
- Dates are in UTC format and cannot be in the past.
- Multiple requests are needed for setting up absences for different groups.
- Attachments can be a maximum of 10 files and each file size limit is 10 MB.
- Uses Basic Auth for xMatters endpoints
- Allows querying for on-call members including shift gaps.
- Use the 'embed' query parameter to include detailed creator information.
- Service ID is a UUID
- Create change records for services within your xMatters instance.
- Forms can be filtered by various parameters including mobile and UI enabled.
- Permissions may limit the information returned for forms.
- Default trigger type is 'MESSAGING' if not specified.
- Default values for mobileEnabled, uiEnabled, and apiEnabled are 'false'.
- The language field in email, sms, and voice templates must contain a valid two-letter
  ISO 639 code.
- Ensure to configure the endpoint to use a valid username and password.
- The API supports pagination for getting import jobs.
- Incidents created through the incidents endpoint do not trigger flows.
- Initial access token and refresh token obtained by POSTing to /oauth2/token.
- Requires a valid username and password for authentication
- Searching with spaces should be enclosed in double quotes.
- Names can change, it is recommended to use the unique identifier.
- The response includes occurrences within a 24 hour window if no date range is specified.
- Use valid username and password for API requests.
- You can create a subscription form for all forms in the plan or for a specific form
  by setting the scope parameter.
- Once uploaded, files cannot be removed and should be attached to an event or scenario
  quickly.
- The unique identifier of the event is returned in the EventReference object.
- The FormReference object includes the name and unique identifier of the form.
- The Conference object describes xMatters-hosted and externally-hosted conference
  bridges.
- Event suppressions allow you to retrieve records of any suppressions resulting from
  event flood control rules.
- Use `embed` parameter to include additional objects in the response.
- If a group's creator has limited visibility, the observedByAll is set to false.
- The transform type of the submitted file can be User Upload v1.5 or Epic ZipSync
  Upload v1.3.
- The status of the upload can be PENDING, PROCESSING, COMPLETE, or FAILED.
- Ensure to use valid credentials for authentication.
- The xMatters API requires proper handling of response codes.
- Requests for on-call data are based on a 24-hour period.
- Uses OAuth2 with token URL for authentication.
- Ensure to use correct username and password for authentication.
- To preserve delimiters in search terms, enclose terms in double quotes.
- Service ID is a UUID and is required for modifying or deleting a service.
- Use unique identifier (`id`) for group and shift where possible.
- Complex shifts depend on the time zone of the authenticating user.
- Shift details include members, start, end, and recurrence information.
- When using the from and to query parameters, both are optional.
- Use UUID for eventID for reliable results.
- Event suppressions are related to event flood control rules.
- Requires setup of authentication with username and password
- Ensure to replace {groupId} with the actual group ID in the request path.
- Use the 'allowWildcards' query parameter to search for roles with wildcards.
- The request requires the user to have permission to manage scenarios for the form.
- 'Valid values for serviceTier include: PLATINUM, GOLD, SILVER, BRONZE, NONE.'
- 'Valid values for serviceType include: APPLICATION, TECHNICAL.'
- Requests to the API require a valid username and password.
- Returns a list of shared Integration Builder libraries in a communication plan.
- Scope parameter can be set to FORM or ALL_FORMS.
- All query parameters are optional for the GET request.
- Once uploaded, each file cannot be removed and must be attached as quickly as possible.
- For more information on conference bridges, see the online help.
- Dynamic groups are created to group users based on matching criteria.
- Dynamic groups can have supervisors embedded.
- Criteria for dynamic groups are evaluated using operands.
- Uses OAuth2 with password grant type — requires credentials for user account.
- Use the plan ID to create, modify, or delete constants.
- This API allows users to manage plan constants and endpoints.
- The maximum attachment size must not exceed 10 MB.
- This API uses Basic Authentication with username and password.
- Requests to the API require valid authentication.
- The response includes the unique identifier (`id`) and `name` of the subscription
  form.
- The communication plan identifier is required when creating a subscription form.
- For creating a conference bridge, the UUID of the group is required.
- Depending on your permission level, you may see either a subset of information or
  all form information.
- If the parameter is not specified, the default trigger type is MESSAGING.
- The default value upon creation for mobileEnabled, uiEnabled, and apiEnabled is
  false.
- Ensure to replace {groupId} with the actual ID of the group.
- 'The transform type of the submitted file includes: users-v1 and epic-v1.'
- Uses Basic Authentication — configure the endpoint with valid username and password.
- To obtain an access token, you must provide a client ID, username, and password.
- The phone login may contain only digits and cannot exceed a length of 30 characters.
- In order to set a phonePin, you must specify a phoneLogin for the user.
- Use ?embed=roles to include roles in the Person object response.
- Use ?embed=supervisors to include supervisors in the Person object response.
- Make sure to use a valid username and password for authentication
- Ensure the group ID and shift ID are correct when making requests
- Allows sorting and embedding related objects in the response.
- Responses include a temporary absence object that represents the created or deleted
  absence.
- Logs changes to detect problems and troubleshoot instances.
- Mobile app devices such as iPhone, iPad, and Android app devices cannot be created
  using the xMatters REST API.
- Devices must be configured for appropriate permissions.
- When using the eventId, it is recommended to use the UUID.
- To retrieve forms, the planId must be provided in the request.
- To use the DELETE method, the unique identifier (`id`) of the conference bridge
  is required.
- For On-Call groups you can include shift information by adding the ?embed=shifts
  query parameter.
- To access imported files, use the GET /imports endpoint.
- Default severity of incidents is Medium.
- Default status of incidents is Open.
- OAuth2.0 authentication requires the client ID and user credentials.
- For groups that have commas in the name, URL-encode the comma or use the group's
  unique identifier.
- Requires setup of username and password for authentication
- The API supports modifying or deleting a person using their unique identifier.
- For detailed response structure refer to the API documentation.
- The endpoint requires authentication with a username and password.
- The maximum number of attachments is 10, with a size limit of 10 MB.
- Identifies a site by its name or ID.
- Permission level affects visibility of site information.
- Notifications can be based on a specific form or all forms in the plan.
- Some endpoints may require specific permission settings.
- Returns a paginated list of sites.
- You can identify a site by its name or ID.
- Use UUID for eventId instead of numeric ID for better results.
- Email template must be HTML encoded.
- The unique identifier (`id`) of the form is returned in the response.
- Use the `id` when making API requests.
- The default severity is Medium if not provided.
- The default status is Open if not provided.
- Historical data can be accessed using `to` and `from` without using the `at` parameter.
- The API includes references to both 'plans' and 'workflows'.
- Uses HTTP Basic Authentication — requires username and password.
- For shifts that rotate, off-duty members must be positioned after all on-duty members.
- Returns a list of all subscription forms or subscription forms in a specific communication
  plan.
- Only company administrators and supervisors can manage privileged devices.
- Includes response options and the first 100 directly-targeted recipients in the
  response when called without query parameters.
- The event ID number might not always return results; using the UUID is recommended.
- Names must be URL-encoded when using formId or planId.
- Ensure to use the correct UUID for incidentID.
- Flow Designer currently uses HTTP Basic Authentication for xMatters endpoints.
- Self-signed certificates are trusted if trustSelfSigned is true.
- This API endpoint retrieves all scheduled messages in the system.
- Can attach up to 10 files with a combined size limit of 10 MB.
- Sorting is only applicable with valid sortBy and sortOrder parameters.
- Shift details include recurrence and member information.
- This POST operation requires a multipart/form-data content type
- All query parameters are optional; use them to fine-tune results.
- Retrieve targeted recipients using the query parameter targeted=true.
- For deleting a conference bridge, you must know the unique identifier (id) of the
  conference bridge.
- The subject and body must be provided in the request data.
- The unique identifier (`id`) of the form is provided in the response.
- This endpoint retrieves all members of a specified group, and lets you add members
  to or remove members from an existing group.
- The unique identifier (`id`) is required for incident updates.
- Use appropriate authorization for API requests.
- Uses HTTP Basic Authentication — requires username and password
- If `id` is not included, xMatters treats this as a request to create a new person.
- Requires setup of username and password for authentication.
- Plan ID must be specified in the endpoint path.
- Endpoint allows you to modify existing properties in a communication plan.
- A maximum of 10 files can be attached, and the size limit for all files is 10 MB.
- Sort criteria include NAME, OWNER, RECURRENCE, LAST_MESSAGE, and NEXT_MESSAGE.
- The unique identifier for a group can be either the ID or the target name.
- Use the unique identifier (`id`) for groups and shifts to avoid issues with changing
  names.
- If the notificationDelay is not specified, the default is 0 minutes.
- Returns records of suppressions related to an event.
- To use this method, you must know the unique identifier (`id`) of the conference
  bridge and you must have the appropriate permissions to delete data.
- Use embed query parameter to include additional data like responseOptions and recipients.
- Forms are created for plans to define messages sent to recipients.
- For on-call groups, must add member to at least one shift before they can receive
  notifications.
- If a notification is not handled on time, xMatters can escalate it to the next group
  member.
- The default status for incidents is OPEN.
- You can identify groups by their name or unique identifier.
- Plan ID must be specified for modifying or deleting a plan.
- Operands for search queries include AND and OR.
- Pagination parameters include limit and offset.
- xMatters API requires authentication for all requests.
- Shift recurrence can occur weekly.
- Shift members may have different escalation types.
- Subscriptions based on the form can target all forms or a specific form.
- UUID is required for modifying a site.
- Supports embedding device names, property definitions, and roles in responses.
- Users must have appropriate permission settings to modify subscriptions.
- To use the 'at' parameter for historical data, ensure the time range is set correctly.
- Use of formId must be a UUID, not the six-digit legacy form identifier.
- Available recipient information includes their unique identifier Id, recipientType,
  targetName, and more depending on the recipient type.
- The subject and body of the message template must be provided in the request.
- Mobile, UI, and API options default to false upon creation.
- The unique identifier of the group is required for modifications.
- Initial access token and refresh token obtained by authenticating with a client
  ID, username, and password.
- UUID must match no other objects within xMatters.
- Requests are authenticated using Basic Auth with username and password.
- Scenarios enable you to pre-populate settings and fields for a message.
- You can add up to 10 attachment files for a scenario.
- The request must not include the 'form' property when modifying a subscription.
- All query parameters for GET requests are optional.
- Use `embed` to list additional objects to include in the response such as responseOptions
  and recipients.
- Uses Basic authentication
- Form sections must be unique per form type.
- Uses Basic Auth for user authentication.
- UUID must be valid and cannot match UUID of other objects within xMatters.
- The API allows retrieving and modifying properties in communication plans.
- Use the appropriate query parameters to filter or paginate results.
- Recurrence is set to weekly on all days of the week.
- The API returns a list of subscription forms depending on the permission level.
- For more information on form layout and the available sections, see online help.
- Forms are created for a specific plan and can be used to define messages for incidents.
- The `language` field in the email and SMS templates must contain a valid two-letter
  ISO 639 code.
- For a form to be modified, the unique identifier in the id field must be provided.
- Groups are returned as a paginated list
- The default observedByAll setting is true
- To retrieve import job messages, use the import job ID.
- Ensure the username and password are valid for API access.
- The UUID of a plan must be provided to modify properties.
- Shift occurrences are defined by start and end times.
- The recurrence pattern must specify frequency and applicable days.
- The scope can be set to FORM for specific form subscriptions.
- This API allows for the creation and retrieval of change records.
- Returns records of suppressions related to an event, including information on the
  parent event and the event flood control rule (filter) that resulted in the suppression.
- The unique identifier (`id`) of the conference bridge is required for modifying
  or deleting a bridge.
- Basic Auth is used with a username and password for authentication.
- Response contains ID of created message template.
- For more information on message templates, see the online help for Voice messages,
  Email messages, or SMS messages.
- For on-call groups, add the member to at least one shift before they will receive
  notifications.
- Response includes pagination for group members and supervisors.
- 'The transform type of the submitted file can include: users-v1 and epic-v1.'
- To use the API, configure the endpoint with valid username and password.
- This API allows uploading attachments to scenarios and managing scenario permissions.
- Use the unique identifier for group and shift for API calls.
- The site `id` can be used to identify the site.
- Use the correct permissions to view site information.
- Returns a list of all subscription forms depending on permission level.
- To add recipients, the subscription form must have the 'subscribeOthers' field set
  to 'true'.
- Change records give insights into how changes impact service health.
- Searching by certain criteria is supported.
- Event suppressions provide records of any suppressions resulting from event flood
  control rules.
- Username and password required for authentication
- This API requires authentication using a valid username and password.
- Access tokens expire after a fixed number of seconds.
- Supports retrieval of on-call schedules along with gaps in shift coverage.
- All parameters not included in an update retain their current values.
- Absences can be specified for multiple groups or individual replacements.
- Uses OAuth authentication — tokens can be revoked at any time.
- Uploaded files cannot be removed once uploaded.
- When the targetAllDevices is true, notifications target all types of devices in
  the system.
- Forms can be filtered by various parameters including planId and formId.
- The unique identifier (`id`) should be used in API requests.
- Use of UUIDs required for group identifiers.
- Uses OAuth2.0 authentication with temporary access tokens.
- Historical data can be accessed using 'to' and 'from' parameters without using 'at'.
- Use the id field to modify a user. If id is not provided, a new user will be created.
- If an inaccurate id is submitted, a new user may be created or the existing user
  may be modified.
- Authentication is required using HTTP Basic Auth with username and password.
- Allows creation of scenarios with up to 10 attachments, total size must not exceed
  10 MB.
- Sorting is supported by multiple criteria.
- Service IDs are unique identifiers (UUID) for services in the xMatters system.
- The position parameter specifies where to insert the member in the shift.
- The recipient must be a valid ID.
- Use the site ID or name to access site information.
- To delete a subscription, use the appropriate endpoint.
- Temporary absences allow for a replacement to receive notifications.
- Each attachment file has a maximum size of 10 MB.
- Uploaded files that are not attached will be discarded after a certain period of
  time.
- To return information about a single device, use [Get a device](#get-a-device).
- Privileged devices redact specific information
- Basic authentication is required to access the API.
- Notification sent from xMatters when it receives the alert from your ITSM application.
- The `language` field in body parameters must contain a valid two-letter ISO 639
  code.
- For On-Call groups, must add member to at least one shift before they will receive
  notifications.
- Use 'Authorization' header for Basic Auth.
- For User Uploads, the upload identifier is created when the user upload file is
  submitted.
- Requires setup of valid username and password for authentication
- UUIDs must be valid and unique within xMatters.
- Device data may be privileged and obfuscated based on permissions.
- The endpoints are designed to work with OAuth2 authentication.
- Use allowWildcards query parameter to search role names.
- Username and password are required for Basic Auth.
- Search terms with spaces must be enclosed in double quotes.
- Site ID can be used to identify a specific site.
- The absenceType can be either 'VACANCY' or 'REPLACEMENT'.
- Files uploaded to xMatters cannot be removed and should be attached to an event
  or scenario quickly.
- To delete a device, you must know the unique identifier (id) or targetName of the
  device.
- Ensure to URL-encode names when using in endpoints.
- Use URL parameters to specify groupId in the path for group-specific endpoints.
- Requires username and password for obtaining access tokens
- The `id` field must be a valid UUID when modifying a person.
- If the `id` field is not included, a new person is created.
- Use allowWildcards parameter to search for role names with wildcards.
- This API supports uploading attachments up to 10 MB in size.
- For shifts that rotate through the escalation order, you can also set whether a
  shift member is on-duty or off-duty using the onDuty parameter.
- Uses HTTP Basic Authentication to authenticate endpoints in the REST API.
- For the message templates, various options such as language and format are supported.
- Ensure to URL-encode names when using names in API calls.
- The unique identifier (`id`) of the form is used in API requests.
- The group type cannot be changed after creation.
- To create an incident, summary and description are required.
- The unique identifier (`id`) of the incident is required for updating an incident.
- This API requires a valid username and password for authentication with Flow Designer.
- The person must be active to receive notifications.
- When creating a scheduled message, you can add up to 10 attachment files.
- Use unique identifiers for groups and shifts in API calls.
- Ensure that you have appropriate permissions to access subscribers.
- Use UUID for eventID to ensure results.
- Include 'at' parameter for historical data queries.
- Requires authentication to access event suppression records.
- The unique identifier of the event is represented by 'id'.
- The numeric identifier of the event is represented by 'eventId'.
- Use embed to include additional objects in the response.
- Ensure that the correct permissions are in place to access all data.
- Language field must contain a valid two-letter ISO 639 code.
- Forms are not enabled for mobile, UI, or API use upon creation by default.
- For on-call groups, at least one shift must be assigned for notifications.
- Ensure to handle pagination when retrieving import jobs.
- The incident commander is set to the user who created the incident.
- Default severity of incidents is Medium
- Default status of incidents is OPEN
- Uses Basic Auth for xMatters endpoints.
- Historical data queries cannot have a timeframe that spans from the past to the
  future.
- When accessing who is on call now, set the from parameter to a time no more than
  24 hours in the past.
- The only required body parameters is the UUID of the constant you want to update.
- Combines multiple recipients, properties, and attachments into a scheduled message.
- The API requires the use of valid username and password for basic authentication.
- Shift information includes members and their details.
- The endpoint requires basic authentication with username and password.
- Filters can be applied using query parameters.
- Although the delete command is used, the subscription itself is not deleted.
- Recipients will be notified based on their subscription preferences.
- Requires user authentication with valid username and password.
- The unique identifier of the form is required.
- xMatters requires configuration for a valid username and password.
- When accessing who is on call now, or for a shift in the future, you need to set
  the `from` parameter to a time no more than 24 hours in the past.
- Returns group memberships, supervisors, and user license quotas.
- Use unique identifier in the id field to identify the plan.
- The endpoint allows for creating scenarios for a form.
- You can add up to 10 attachment files, with a combined size not exceeding 10 MB.
- Response code 200 OK and a Services Object in the response body.
- Authentication uses basic auth with username and password.
- Use unique identifiers (id) for group and shift instead of names
- The API requires basic authentication with username and password
- Timezone for the shift is US/Pacific.
- The request must include the subscription ID when modifying settings.
- Uses Basic Auth — requires username and password
- The comment appears in the event tracking report.
- The status of the event can be modified after initiation.
- Create forms only if they are of unique types within a single form.
- For On-Call groups, include shift information by adding '?embed=shifts' to the request.
- The unique alpha-numeric incident number used to look up the incident.
- If one is not provided during incident creation, the default status of 'OPEN' is
  used.
- Use the query parameters to limit your search by plan type, search for a particular
  keyword, or request more detailed information.
- Use ?embed=roles to include roles in the Person object
- Use ?embed=supervisors to include supervisors in the Person object
- The API supports basic authentication using username and password.
- Shift details include name, ID, group, and members.
- User must have valid credentials to access the API.
- Dynamic Teams are now called Dynamic Groups.
- The event ID is recommended to be a UUID.
- The unique identifier (`id`) of the form must be used in API requests.
- Groups are returned in alphabetical order.
- The initial status of the incident defaults to 'Open' if not provided.
- To include all gaps in shift coverage, use the `include` query parameter.
- When an access token expires, you can obtain a new one by providing the client ID
  and a refresh token.
- Use Basic Auth for authentication.
- The API allows retrieval of shifts and their members.
- Pagination is controlled by offset and limit query parameters
- Users with appropriate permission settings can add recipients to an existing subscription.
- Uploaded files cannot be removed and should be attached quickly.
- Plan type must be 'PLAN' to delete.
- Requires plan ID for endpoints and constants.
- Ensure to handle pagination when retrieving shift occurrences.
- This API provides access to shift-related data including group shifts and their
  members.
- The base URL identifies your xMatters company and the version of the API you are
  using.
- Uses API requires setup of connected app in xmatters
- Users with a Stakeholder license type can access information but cannot respond
  to notifications.
- UUID must be a valid format and unique within xMatters.
- Inactive users cannot receive notifications.
- Plan ID is required for creating and deleting plans.
- This API supports modifications to scenarios and attachments.
- Search queries are case-insensitive and must contain at least two characters.
- On-call shifts may vary by time zone.
- The 'scope' parameter can be set to FORM or ALL_FORMS.
- The only required body parameter for creating or modifying a site is the UUID of
  the site.
- Use from and to query parameters to limit results.
- Devices marked as privileged may not show complete information to users without
  appropriate permissions.
- This script is configured to work within the xMatters Integration Builder.
- Targeted recipients include users but do not include their notified devices unless
  explicitly added as recipients.
- Uses REST API
- Paginated response for import jobs with optional query parameters.
- Uses basic authentication with a username and password.
- The access token is included in the Authorization header as 'Bearer {access_token}'.
- Uses Basic Authentication with a username and password
- The combined size of attachments for a scenario must not exceed 10 MB.
- Attachments must not exceed 10 MB in size.
- This API returns scheduled messages and their attachments.
- Requires setup of valid username and password for basic authentication
- Use HTTPS when making RESTful requests to secure sensitive information.
- Using username and password for basic authentication.
- Group type cannot be changed once created.
- Pagination may apply to responses depending on the endpoint.
- Use the `?embed=supervisors` query parameter to include supervisors in dynamic group
  responses.
- Default severity is Medium and default status is Open.
- Integration objects can either be inbound or outbound.
- UUID must be used for unique identification of a person.
- Use unique identifiers for groups and shifts whenever possible.
- Use GET /subscription-forms to retrieve all subscription forms.
- Use GET /plans/{planId}/subscription-forms to retrieve subscription forms in a specific
  plan.
- Logging changes allows quicker detection of problems.
- Privileged devices redact information from users without appropriate permissions.
- Only events that the authenticating user has permission to view will be returned.
- To find the id or UUID for an event, use GET /events or locate the Event UUID entry
  on the event’s Properties screen in the user interface.
- Pagination can be controlled with `offset` and `limit` parameters.
- Initial access token and refresh token are obtained by making a call to POST /oauth2/token.
- The xMatters API requires basic authentication using username and password.
- Uses Basic Auth — configure username and password for access.
- Service IDs must be valid UUIDs.
- Time values in the API are specified in universal time (UTC). When setting the start
  and end time of the shift, either use the timezone parameter in your request, or
  make sure you convert the date and time in your group's time zone to UTC.
- You can identify a site by its `name` or `id`.
- Pagination is supported using the offset and limit query parameters.
- Use query parameters to filter results when retrieving subscriptions.
- Use Basic Authentication with Base64 encoded username and password.
- Devices can be marked as privileged, and if you don't have the appropriate permissions,
  sensitive data may be obscured.
- If called without any search parameters, returns a paginated list of all events
  the authenticating user has permission to view.
- Ensure to specify the correct groupID and shiftID in the URL parameters
- Triggering an incident provides more robust functionality.
- OAuth2.0 authentication requires a client ID and user credentials.
- Users with a Stakeholder license type cannot respond to any notifications.
- Communication plans are the foundation of integrations with xMatters.
- Requests require basic authentication.
- Search parameter must be case-insensitive.
- Response codes for success and error are defined in the API documentation.
- For shifts that rotate through the escalation order, specify whether a shift member
  is on-duty or off-duty using the `onDuty` parameter.
- Response code 200 OK and a Site object in the response body.
- The request body for adding subscribers must include a list of recipient IDs.
- The request did not succeed. Response code may vary.
- Ensure valid authentication is provided.
- Use UUID for event ID to ensure results.
- Historical data requires the 'at' parameter.
- Uses OAuth2 with password grant type for initial token retrieval.
- If users' devices are marked as 'privileged' by a company supervisor, you may see
  asterisks in place of phone numbers, email addresses, and country information.
- Use of basic authentication with username and password.
- When multiple search terms are present, results include scheduled messages that
  match either term.
- The API returns a pagination of subscription forms.
- Uploads must be in .csv or .zip format.
- Historical queries require the 'at', 'from', and 'to' parameters.
- Response codes indicate success or error states.
- Ensure to URL-encode names when retrieving forms.
- The UUID must be unique and valid.
- Triggers an incident by sending a POST request to the trigger URL.
- Can search for users that match specific search criteria using the search query
  parameter.
- Communication plans allow you to tailor your communications to suit the situation,
  recipient, and required action.
- Use ?embed=supervisors to include a person's supervisors in the response.
- UUID must be a valid UUID and cannot match the UUID of any other objects within
  xMatters.
- Requires valid username and password for authorization.
- Each shift is associated with a group and contains member details.
- Shifts can recur based on defined frequency and conditions.
- Supports pagination for listing sites
- Authentication requires a valid username and password
- Use unique identifiers for the plan and subscription form.
- Tokens can be revoked at any time.
- All query parameters are optional; use them to fine-tune the results.
- The absenceType can be either VACANCY or REPLACEMENT.
- IncludeDirectNotifications defaults to false.
- The transform type includes options for User Upload v1.5 and Epic ZipSync v1.3.
- UUID must be in a valid format and cannot match the UUID of any other objects within
  xMatters.
- If the 'id' is not included, a new user is created.
- Search terms in requests must contain at least two characters.
- Valid sort criteria include NAME, OWNER, RECURRENCE, LAST_MESSAGE, NEXT_MESSAGE.
- The API provides shift details including members and their statuses.
- The DELETE command does not delete the subscription itself.
- To delete a subscription, a different endpoint is required.
- To limit results, use optional query parameters 'from' and 'to'.
- xMatters reduces incident response time by finding the right person to solve the
  problem when system outages require you to manage on-call schedules and escalations.
- All REST-based integrations require someone to authenticate REST calls when injecting
  signals.
- xMatters includes a default 'REST Web Service User' role that should provide all
  of the necessary permissions for most integrations.
- Requires setup of authentication method for email triggers.
- The trigger URL includes the recipients parameter, which specifies who should be
  notified.
- Support is the best place to get help on all xMatters products.
- Customize the settings for new incidents.
- Ensure permissions are set for users to initiate incidents.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- AWS CloudWatch sends alerts to the flow trigger via a webhook.
- You must URL-encode any special characters or spaces in the target names.
- The integration uses custom webhooks in BigPanda to automatically identify and notify
  the on-call resource.
- When an alert is generated in Bitbucket, it sends a JSON-formatted webhook to xMatters,
  based on user-defined alert rules.
- This integration requires a user who can authenticate REST web service calls when
  working with alerts.
- Webhook requires setup of trigger URL in BMC Helix ITSM
- This version of the integration is compatible with BMC Remedy 9.1 Change Management
  and above.
- Requires xMatters to be set up as a connected app in Remedyforce
- Create a user to authenticate REST web service calls when injecting signals.
- The integration requires a dedicated 'REST Web Service User' role.
- Ensure the correct API token is used for authentication
- Webhook URL must include recipients parameter
- Dynatrace Cloud Automation has been deprecated and is no longer supported by its
  manufacturer.
- Trigger URL includes the recipients parameter, which specifies who should be notified.
- When an alert is generated in Google Cloud Operations, it sends a JSON-formatted
  webhook to xMatters, based on the user-defined alert rules.
- Uses webhook to send alerts from Grafana to xMatters
- When an alert is generated in Graylog, it sends a JSON-formatted webhook to xMatters.
- To have Halo send alerts to the flow trigger you need to generate an API authentication
  token to obtain your Client ID, Client Secret, and Authorization Tenant.
- Uses webhook to send alerts to xMatters.
- This integration does not support the Bulk Transfer feature in HP OMi; each event
  must be sent to the Integration Agents separately.
- When a condition you've set fires, it sends a signal to xMatters, which creates
  an alert and notifies the individual or the on-call members.
- Some objects like Contact may return nulls in deeply nested fields
- Jira is changing what user information it returns, introducing an account ID as
  the primary identifier for users rather than a username or user key.
- This integration requires creating a user in Jira specific to xMatters.
- Integration was designed and built for Kaseya's on-premise product.
- Uses a webhook to trigger automated flows based on feature flag changes.
- Webhook includes essential alert data you can use to enrich notifications to users
  or when building automated tasks.
- All requests between xMatters and Microsoft SCOM must be made through an agent.
- The recommended path for logging is C:\Users\<user>\Documents\SCOM-logs as Microsoft
  SCOM is unable to create any logs in folders that require elevated write permission.
- You need to be signed in with a personal connection to xMatters before you can register
  your Teams account as a device.
- Integration requires installation from Microsoft Teams app catalog.
- Global connection enables all users to use xMatters bot commands.
- The trigger URLs include the recipients parameter, which specifies who should be
  notified.
- When an alert is generated in New Relic, it sends a JSON-formatted webhook to xMatters.
- When an alert is generated in OverOps, it sends a JSON-formatted webhook to xMatters,
  based on user-defined alert rules.
- Webhook integration to initiate web service calls when outages are detected or cleared.
- When an alert is generated in pgDash, it sends a JSON-formatted webhook to xMatters,
  based on the user-defined alert rules.
- Ensure the check box for Active is selected when adding the integration in Pingdom.
- Due to recent changes in how PRTG formats their test signals, you may receive an
  error when you test the connection.
- Webhook includes essential alert data to enrich notifications.
- A paid Sentry account is required to complete these steps.
- When a problem meets a specified threshold in Site24x7, it sends a JSON-formatted
  webhook to xMatters.
- You can only connect one workflow to a Slack workspace.
- Uses OAuth2 — requires setup of connected app in xMatters
- SolarWinds NPM doesn't escape certain characters in the payload it sends out (&
  or % for example). This will cause issues when xMatters tries to parse the payload.
- When an alert is generated in Papertrail, it sends a JSON-formatted webhook to xMatters.
- To have Papertrail send an alert to xMatters, you must first have at least one saved
  search in Papertrail.
- Be sure to select the xMatters app in Splunkbase, and NOT the xMatters Actionable
  Alerts for Splunk ITSI app.
- If you're installing this integration into an xMatters trial or free instance, you
  can just use your own xMatters login credentials; there's no need to create a new
  user.
- Uses SignalFx Access Token for authentication
- URL authentication requires URL-encoding of special characters
- This integration requires the Splunk IT Service Intelligence module.
- When a condition you've set fires, it sends a signal to xMatters, which creates
  an alert and notifies the individual or the on-call members of the people or groups
  you set as recipients in the webhook URL.
- When a test meets a specified threshold in ThousandEyes, it sends a JSON-formatted
  webhook to xMatters.
- Remember to URL-encode any special characters, including spaces, in your group names.
- Uses webhook configurations to create custom integrations
- Webhooks can send updates to applications via POST requests
- Uses webhook to send alerts to xMatters
- If you're using token access, append /token to the username and use the API token
  as the password.
- xMatters uses a specific user in Zendesk for authentication, which appears as the
  author of comments.
errors:
- '401 Unauthorized: User authentication failed.'
- '403 Forbidden: Authenticated user does not have permission to perform the action.'
- '404 Not found: The resource does not exist.'
- '201 Created: Successful upload of the attachment.'
- 'Error: Response code is not 201.'
- '401 Unauthorized: Check your username and password.'
- '404 Not Found: The specified change ID does not exist.'
- '404: The device could not be found.'
- '200: Retrieved device successfully.'
- '201 Created: Device successfully created'
- '200 OK: Device successfully modified'
- '204 No Content: The device could not be found.'
- '200 OK: Successful deletion.'
- Other error codes as per xMatters REST API documentation.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '202 Accepted: Event triggered successfully.'
- '400 Bad Request: Check request formatting and required fields.'
- '401 Unauthorized: Invalid authentication credentials.'
- '201 Created: Success - Comment created'
- '200 OK: Success - Status unchanged'
- '202 ACCEPTED: Success - Status changed'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '401 Unauthorized: Recheck username and password.'
- '404 Not Found: Check if the planId or formId is correct.'
- '201 Created: Success response'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Check your authentication credentials'
- '400 Bad Request: Check if the formId or planId is correct.'
- '401 Unauthorized: Recheck authentication credentials.'
- '404 Not Found: The specified resource does not exist.'
- '201: Created successfully'
- '400: Bad request - Invalid parameters'
- '401: Unauthorized - Check your credentials'
- '404: Not found - Check the resource identifier'
- '201 Created: Successfully modified response option.'
- 'Error: Response code is: {responseCode}'
- '401 Unauthorized: Recheck API credentials or token expiration'
- '400 Bad Request: Check your request payload format.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Verify the form ID.'
- '401 Unauthorized: Recheck username or password'
- '401 Unauthorized: Check username and password.'
- '200 OK: Successful operation'
- '201 Created: Group successfully created'
- '404 Not Found: The specified group does not exist'
- '400 Bad Request: Invalid request parameters'
- '401 Unauthorized: Recheck credentials or permissions.'
- '401 Unauthorized: Recheck credentials'
- '404 Not Found: Check the specified endpoint'
- '400 Bad Request: Check the request payload for errors'
- '201 Created: Incident successfully updated'
- '400 Bad Request: Invalid request body or parameters'
- '404 Not Found: Incident not found'
- '401 Unauthorized: Invalid credentials'
- '200 OK: Request succeeded.'
- '401 Unauthorized: Invalid credentials or token.'
- '404 Not Found: The specified resource could not be found.'
- '200: Success'
- '401: Unauthorized'
- '401 Unauthorized: Recheck username and password'
- '409 Conflict: The user already exists'
- '401 Unauthorized: Invalid username or password.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: Invalid request syntax.'
- '401 Unauthorized: Recheck credentials or permissions'
- '404 Not Found: Verify the URL and the person ID.'
- '400: Bad Request'
- '404: Not Found'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '404 Not Found: Check if the shared library exists'
- '404 Not Found: Verify the libraryID or groupID/shiftID'
- '201 Created: Shift successfully added.'
- '200 OK: Shift successfully updated.'
- '400 Bad Request: Check request body for errors.'
- '404: The site could not be found'
- '409: The site already exists'
- '201 Created: Successful creation of the resource.'
- '409 Conflict: The action cannot be performed in the system.'
- '401 Unauthorized: Recheck authentication credentials'
- '200 OK: Successful request.'
- '201 Created: Subscription successfully created.'
- '400 Bad Request: Invalid input or missing parameters.'
- '401 Unauthorized: Authentication failed.'
- '403 Forbidden: You do not have permission to perform this action.'
- '201 Created: Attachment successfully uploaded.'
- 'Error: Response code is: 400 Bad Request'
- '404 Not Found: Check the change ID or endpoint'
- '201 Created: Attachment successfully created.'
- 'Error: Response code is: {response_code}'
- '404 Not Found: Ensure the device ID is correct'
- '202 Accepted: Event triggered successfully'
- '404: The event could not be found'
- '404 Not Found: Ensure the planId and formId are correct.'
- '400 Bad Request: Check required fields in the request body'
- '401 Unauthorized: Check credentials'
- '404 Not Found: Verify the form ID'
- Response code 200 OK and a pagination of Form Section objects in the response body.
- 'Error: For a list of response codes returned by the xMatters REST API, see HTTP
  Response Codes.'
- 'HTTP Response Codes: For a list of response codes returned by the xMatters REST
  API.'
- '404 Not Found: The specified group or member does not exist.'
- '400 Bad Request: Invalid parameters provided.'
- '204 No Content: The group member does not exist.'
- 'Response code 200 OK: Successfully retrieved groups.'
- 'Error: Response code is: [Error Code]'
- '404 Not Found: The specified group ID does not exist'
- '404 Not Found: Verify the group ID.'
- The request did not succeed.
- '401 Unauthorized: Check credentials or permissions'
- '400 Bad Request: Check required fields in request body'
- '404 Not Found: Verify the endpoint and resource existence'
- '201 Created: Incident successfully created.'
- '200 OK: Integration successfully retrieved.'
- '404 Not Found: Check if the incident ID or integration ID is correct.'
- '404 Not Found: The specified person does not exist.'
- '400 Bad Request: Invalid input data.'
- '404 Not Found: Check the plan ID or path'
- '200 OK: Successful response'
- '401 Unauthorized: Invalid username or password'
- '404 Not Found: Resource not found'
- '404 Not Found: Check if the scenario or endpoint exists.'
- '201 Created: Indicates a successful creation of a scenario.'
- '200 OK: Indicates a successful update of a scenario.'
- Response code 201 Created and an Attachments object in the response body.
- '200 OK: Success'
- '404 Not Found: The scheduled message does not exist.'
- '200 OK: Successful response.'
- '200 OK: Success response for a successful request.'
- '404 Not Found: The specified resource was not found.'
- 'Response code is: 400: Bad request.'
- '404 Not Found: Ensure the groupID and shiftID are correct.'
- '404 Not Found: The site could not be found.'
- '201 Created: Success in creating or modifying the site.'
- '200 OK: Success response with retrieved data.'
- 'The request did not succeed. Response code is: 401 Unauthorized'
- 'The request did not succeed. Response code is: 404 Not Found'
- 'The request did not succeed. Response code is: 400 Bad Request'
- '403: Forbidden: When the authenticating user does not have permission to access
  an endpoint.'
- '201 Created: Attachment uploaded successfully'
- 'Error: Response code is: '
- '400 Bad Request: The request is malformed.'
- '404 Not Found: The specified change record does not exist.'
- Other response codes may indicate failure.
- '404 Not Found: The device name could not be found.'
- '403 Forbidden: Insufficient permissions to access the requested resource.'
- '200 OK: Successful request'
- '401 Unauthorized: Check username and password'
- '202: Event triggered successfully'
- 'Error: response code is {responseCode}'
- '201 Created: Conference bridge successfully created.'
- '200 OK: Conference bridge successfully deleted.'
- '400 Bad Request: Check your parameters for validity.'
- '201 Created: Success'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify endpoint and parameters'
- '201: Modified response option successfully.'
- '200 OK: Success response.'
- '400 Bad Request: Invalid request format.'
- '401 Unauthorized: Invalid authentication.'
- '404 Not Found: The requested group or member does not exist.'
- '400 Bad Request: Check the request format'
- '404 Not Found: Verify the endpoint URL'
- '404 Not Found: Ensure the groupId is correct.'
- '401 Unauthorized: Check username and password for authentication.'
- '404 Not Found: Verify the endpoint path.'
- '201 Created: Successfully created the incident.'
- '401 Unauthorized: Check the provided username and password.'
- '404 Not Found: Ensure the incident ID or integration ID is correct.'
- '409: The user already exists'
- Response code 201 Created and a Plan object in the response body.
- '204 No Content: Person not found.'
- '200 OK: Person deleted.'
- '201 Created: Person created.'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Check the plan ID.'
- '404 Not Found: Check scenario or attachment IDs'
- '404 Not Found: Scenario or resource does not exist.'
- '401 Unauthorized: Check your credentials.'
- '201 Created: Scenario updated successfully.'
- '200 OK: Permissions updated successfully.'
- '401 Unauthorized: Recheck authentication details'
- '400 Bad Request: Check the parameters and request body.'
- '401 Unauthorized: Ensure correct authentication credentials.'
- '404 Not Found: Verify the scheduledMessageId or service IDs.'
- '404 Not Found: Verify the service ID'
- '400 Bad Request: Check the request body for required fields.'
- '401 Unauthorized: Check username and password for basic auth'
- '404 Not Found: Ensure the groupID and shiftID are correct'
- '201 Created: Successfully created or modified the site.'
- '400 Bad Request: Invalid request parameters.'
- '404 Not Found: The specified subscription ID does not exist.'
- '401 Unauthorized: Invalid credentials or insufficient permissions'
- '404 Not Found: Temporary absence not found'
- '429 Too many requests: The request cannot be processed because the request rate
  limit has been exceeded.'
- '201 Created: Successfully created attachment'
- 'Error: Response code is: <code>'
- '404 Not Found: The requested resource could not be found.'
- '404 Not Found: The requested device name could not be found.'
- '200 OK: Success response'
- 'Unauthorized: Ensure correct authentication credentials'
- '200 OK: Request succeeded but status unchanged'
- '202 ACCEPTED: Request succeeded - status changed'
- Response code 200 OK and a list of Conference Bridge objects in the response body.
- Response code 201 Created and a Conference Bridge object in the response body.
- '404 Not Found: Verify the planId or formId'
- '201 Created: Conference Bridge successfully created.'
- '200 OK: Conference Bridge successfully deleted.'
- '400 Bad Request: Check the request syntax and parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure the specified resource exists.'
- '201: Created'
- '201 Created: Successfully created the resource.'
- '400 Bad Request: Check the request body for errors.'
- '201 Created: Response option successfully modified.'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Check the endpoint path or resource ID'
- '404 Not Found: Check if the group or member ID exists'
- '404 Not Found: Group does not exist'
- '404 Not Found: The specified import job does not exist.'
- '401 Unauthorized: Recheck credentials or token expiration'
- '401 Unauthorized: Check credentials.'
- '422 Unprocessable Entity: Check required fields.'
- '404 Not Found: Check the incident ID or integration ID'
- 'Error: Check HTTP Response Codes documentation for more details.'
- '401 Unauthorized: Verify credentials'
- '401 Unauthorized: Recheck authentication credentials or access permissions'
- '400 Bad Request: Invalid input provided.'
- '500 Internal Server Error: Server error, try again later.'
- '401 Unauthorized: Invalid authentication credentials'
- '404 Not Found: Requested resource does not exist'
- '200 OK: Successful operation.'
- '201 Created: Resource has been created.'
- '400 Bad Request: Invalid request.'
- '404 Not Found: Resource not found.'
- '404 Not Found: Verify the endpoint URL and resource ID.'
- '404 Not Found: Check the scenario or form ID'
- '200 OK: Successful retrieval of scenarios.'
- '404 Not Found: Scenario or attachment does not exist.'
- '201 Created: Scenario was successfully created.'
- '200 OK: Senders were granted permission.'
- 'Error: Response code indicates failure.'
- HTTP response codes can indicate various errors; refer to the API documentation
  for details.
- '404 Not Found: Verify groupId or shiftId.'
- '201 Created: Shift was successfully added.'
- '200 OK: Shift parameters successfully updated.'
- '409: The action cannot be performed in the system'
- '404 Not Found: Verify endpoint and parameters.'
- '201 Created: Subscription form successfully created.'
- '200 OK: Subscription form successfully updated.'
- '401 Unauthorized: Authentication failed or permissions insufficient.'
- '400 Bad Request: Check the request payload for errors.'
- '404 Not Found: Verify the subscription ID.'
- '401 Unauthorized: Verify username and password.'
- '400 Bad Request: Check your request syntax.'
- '201 Created: Attachment uploaded successfully.'
- '404 Not Found: Check if the change ID exists'
- '200: OK'
- '204 No Content: The device name could not be found.'
- '400 Bad Request: Invalid request'
- '401 Unauthorized: Authentication required'
- '201 Created: Comment added successfully'
- '200 OK: The event status was not changed'
- '202 ACCEPTED: The request succeeded, status changed'
- Response code 200 OK and a Conference Bridge object in the response body.
- Error for a list of response codes returned by the xMatters REST API.
- '201 Created: Successfully created a conference bridge'
- '200 OK: Successfully deleted the conference bridge'
- '404 Not Found: The requested resource could not be found'
- '201 Created: Form section created successfully.'
- '400 Bad Request: Check body parameters.'
- '401 Unauthorized: Recheck credentials.'
- '400 Bad Request: Invalid request format'
- '404 Not Found: The requested group does not exist.'
- '401 Unauthorized: Invalid credentials.'
- '200 OK: Successful response with group objects.'
- '400 Bad Request: Ensure all required fields are included.'
- '201 Created: Resource successfully created'
- '401 Unauthorized: Authentication failed'
- '500 Internal Server Error: Server error'
- 'HTTP Response Codes: Check documentation for a list of response codes returned
  by the xMatters REST API.'
- '202 Accepted: Incident successfully triggered.'
- '201 Created: Successfully modified the incident.'
- '404 Not Found: The specified incident does not exist.'
- '4XX: Client error, check request parameters'
- '5XX: Server error, try again later'
- '400 Bad Request: Check request parameters and format'
- '401 Unauthorized: Verify authentication credentials'
- '404 Not Found: The requested resource does not exist'
- '201 Created: Person created successfully.'
- '200 OK: Person modified successfully.'
- '400 Bad Request: Invalid input.'
- '404 Not Found: Requested resource not found.'
- '404 Not Found: Ensure the person ID or endpoint path is correct.'
- '404 Not Found: Check the plan ID or endpoint path'
- '400 Bad Request: Check the request body for errors'
- '201 Created: Successful creation of the scenario'
- '200 OK: Successful update of the scenario'
- '404 Not Found: Check the provided IDs for forms or scenarios'
- '400 Bad Request: Check the request body parameters.'
- '401 Unauthorized: Recheck credentials or token.'
- '404 Not Found: Verify the endpoint and resource ID.'
- '200 OK: Successfully retrieved the data.'
- '404 Not Found: Service not found.'
- '404 Not Found: Service ID may not exist'
- '404 Not Found: The specified group or shift does not exist.'
- '401 Unauthorized: Check credentials or permissions.'
- '404 Not Found: Subscription ID does not exist.'
- '204: The device could not be found.'
- Other error codes may apply.
- '204 No Content: Device could not be found'
- '404 Not Found: The device could not be found.'
- '200 OK: Successful retrieval of event'
- '401 Unauthorized: Check your username and password'
- '4xx: Client error, check request parameters.'
- '200 OK: Successful retrieval of suppression records.'
- '404 Not Found: Check if the conference bridge ID exists'
- '201 Created: Successfully created a resource.'
- '200 OK: Successfully deleted a resource.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Check the provided planId or formId'
- '201 Created: Form or message template created successfully.'
- 'Error: Response code is: {code}'
- 'Error: Response code is: 400'
- '201 Created: Response option modified successfully'
- '404 Not Found: Form ID does not exist'
- '204: Member not found.'
- '400: Bad request'
- '404: Not found'
- '429: Too many requests'
- Response code 200 OK and a Pagination of Group objects in the response body.
- '201 Created: Group created'
- '404 Not Found: Group not found'
- '404 Not Found: Check the importId or incident ID'
- '202 Accepted: Incident trigger request accepted.'
- '201 Created: Indicates successful creation of an incident.'
- '4xx: Client errors, check request parameters and authentication'
- '400 Bad Request: Incorrect request format'
- Response code 200 OK
- Error response codes can be found in the API documentation.
- HTTP response codes vary based on the request outcome.
- '400 Bad Request: Check request body for errors'
- '404 Not Found: Check the endpoint or resource ID'
- '400 Bad Request: Validate the request payload'
- '404 Not Found: Check the scenarioId or formId.'
- '201 Created: Successfully created scenario.'
- '200 OK: Successfully updated scenario.'
- '404 Not Found: Check if the scheduled message ID is correct'
- '400 Bad Request: Check the request body for required fields'
- '401 Unauthorized: Verify the authentication credentials.'
- '404 Not Found: Check the groupID or shiftID'
- '201 Created: The shift was successfully added.'
- '200 OK: The shift was successfully updated.'
- '4xx: Client-side errors indicate invalid parameters or authentication issues.'
- '5xx: Server-side errors indicate an issue with the xMatters service.'
- '200 OK: Successfully retrieved subscription forms'
- '404 Not Found: Check the endpoint or resource id'
- '409 Conflict: The action cannot be performed in the system'
- '200 OK: Request succeeded'
- '201 Created: Resource was successfully created'
- '201 Created: Successful creation of a subscription form.'
- '400 Bad Request: Check required parameters and data types.'
- '404 Not Found: Check if the temporary absence ID is correct.'
- '400 Bad Request: Ensure the request body is correctly formatted.'
- 'Error: response code is not 202'
- '404 Not Found: The specified event could not be found.'
- '401 Unauthorized: Check credentials and permissions.'
- '201 Created: Comment successfully added.'
- '200 OK: The event status was not changed.'
- '202 Accepted: The event status was changed.'
- '404 Not Found: The specified form or plan does not exist.'
- '403 Forbidden: Insufficient permissions to perform the operation.'
- '201 Created: Successful creation of resource.'
- '400 Bad Request: Check request body for required fields.'
- '200 OK: Success response for valid requests.'
- '201 Created: Successfully created resource.'
- 'Error: Response code for failed requests.'
- '400 Bad Request: Check that the request body is correctly formatted.'
- '404 Not Found: Verify the endpoint and parameters.'
- '404 Not Found: Check if the group ID or name is correct'
- '400 Bad Request: Invalid request data.'
- '404 Not Found: Ensure the incident or integration ID is correct'
- '404 Not Found: Check if the planId or integrationId is correct.'
- '400 Bad Request: Invalid parameters.'
- '200 OK: Successfully retrieved data.'
- '401 Unauthorized: Invalid credentials or lack of permissions.'
- '204 No Content: The person could not be found.'
- '400 Bad Request: The request was invalid.'
- '404 Not Found: Check the personID or endpoint path'
- '404 Not Found: Verify the plan ID or endpoint'
- '500 Internal Server Error: An error occurred on the server.'
- '201 Created: Successfully created the scenario.'
- '200 OK: Successfully updated the scenario.'
- '400 Bad Request: Invalid request format or parameters.'
- '201 Created: Successfully created a service dependency.'
- '204 No Content: The requested resource could not be found.'
- '400 Bad Request: Check your request parameters.'
- '404 Not Found: Ensure groupID and shiftID are correct.'
- '200 OK: Shift was successfully updated.'
- '201 Created: Success response for site creation or modification.'
- '404 Not Found: Check the endpoint path or parameters'
- 'RESPONSE CODE 200 OK: Success'
- 'HTTP Response Codes: See documentation for details.'
- '404 Not Found: Subscription ID may be incorrect.'
- '201 Created: Successfully uploaded attachment.'
- '201 Created: The device was successfully created.'
- '400 Bad Request: Request is malformed.'
- '403 Forbidden: Authenticated user does not have permission.'
- 'Error: Response code is: <response_code>'
- '202: Accepted'
- 'Error: response code is'
- '404 Not Found: Conference bridge not found.'
- Response code 200 OK indicates success.
- HTTP response codes are detailed in the documentation.
- '403 Forbidden: The user does not have permission to access this resource.'
- '201 Created: Group successfully created.'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: The specified group was not found.'
- '400 Bad Request: Ensure required fields are provided'
- '201 Created: Incident modified successfully.'
- '400 Bad Request: Check the request body for missing or invalid fields.'
- Response code 200 OK and a pagination of Integration objects in the response body.
- For a list of response codes returned by the xMatters REST API, see HTTP Response
  Codes.
- '404 Not Found: Check the planId or integrationId'
- '401 Unauthorized: Recheck username or password.'
- '404 Not Found: Check the endpoint path and parameters.'
- '404 Not Found: Verify the planId and the endpoint.'
- '201 Created: Plan constant created successfully'
- '404 Not Found: Plan not found'
- '404 Not Found: Resource does not exist'
- '201 Created: Successful creation of a resource'
- '400 Bad Request: Check the request syntax or body'
- '401 Unauthorized: Check authentication credentials'
- '201 Created: The scheduled message was created successfully.'
- '200 OK: The request was successful.'
- '404 Not Found: The scheduled message was not found.'
- '404 Not Found: Check if the serviceId is correct'
- '200 OK: Success response indicating successful request.'
- '404 Not Found: The requested service or scheduled message was not found.'
- '200 OK: Success response with subscription form data.'
- '400 Bad Request: Invalid request body.'
- '404 Not Found: Subscription not found.'
- '200 OK: Request was successful.'
- '404 Not Found: The resource does not exist.'
- '406 Not Acceptable: The requested media type is not supported.'
- '429 Too Many Requests: The request rate limit has been exceeded.'
- '200: Received response code for successful operation.'
- '404 Not Found: Check the device ID or endpoint path'
- '400 Bad Request: Validate request payload.'
- '201 Created: Resource created'
- '400 Bad Request: Invalid request format or parameters'
- '500 Internal Server Error: An error occurred on the server'
- '400: Bad request, check parameters'
- '401: Unauthorized, check credentials'
- Error responses are defined in HTTP Response Codes.
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Ensure valid credentials are provided.'
- '404 Not Found: Verify the endpoint path and resource IDs.'
- '404 Not Found: Check if the group ID or member ID is correct.'
- '403 Forbidden: Check permissions for the user.'
- '400 Bad Request: Ensure all required fields are included'
- '404 Not Found: Group ID does not exist'
- '404 Not Found: Verify the resource ID or endpoint'
- '202 Accepted: Incident trigger successfully accepted.'
- '200 OK: Person modified or deleted.'
- '404 Not Found: Ensure the plan ID is correct.'
- '404 Not Found: Check the planId or endpoint URL.'
- '404 Not Found: Check the endpoint or resource.'
- '500 Internal Server Error: Try again later.'
- '400 Bad Request: Check the request parameters for correctness.'
- '401 Unauthorized: Ensure proper authentication is provided.'
- '404 Not Found: Verify the endpoint and resource identifiers.'
- '201 Created: Scenario successfully modified.'
- '404 Not Found: Scenario or form ID does not exist.'
- '400 Bad Request: Invalid input or request.'
- '201 Created: Scheduled message created successfully.'
- '404 Not Found: Scheduled message not found.'
- '201 Created: The site was successfully modified.'
- 'Response code 200 OK: Success'
- 'Response code 404: Not Found'
- '404 Not Found: Check if the subscription ID exists.'
- '403 Forbidden: Verify if you have permission to modify or delete the subscription.'
- '200 OK: Request successful'
- 'HTTP 404: The specified resource was not found.'
- '429 Too many requests: The request rate limit has been exceeded.'
- '200 OK: Device deleted successfully.'
- Other error codes may be returned based on API response.
- '404 Not Found: Check if the device ID is correct'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: The event could not be found.'
- '201 Created: Successfully modified or created resource.'
- '200 OK: Success response code.'
- '404 Not Found: Check the group ID or name provided.'
- '404 Not Found: Check the endpoint path or resource'
- '400 Bad Request: Verify request parameters'
- '400 Bad Request: Missing required fields.'
- '404 Not Found: Group does not exist.'
- '401 Unauthorized: Recheck authentication details.'
- '201 Created: Indicates a successful incident creation.'
- '404 Not Found: Verify endpoint path and parameters'
- '401 Unauthorized: Check client ID, username, or password.'
- '400 Bad Request: Ensure that required parameters are included.'
- 200 OK
- 'Response code 204 No Content: person not found.'
- 'Response code 200 OK: person deleted.'
- HTTP Response Codes
- '201 Created: The request was successful and a new resource was created.'
- '401 Unauthorized: The credentials provided are invalid.'
- 'Error: For a list of response codes returned by the xMatters REST API, see [HTTP
  Response Codes](#http-response-codes).'
- '200 OK: Scenario updated successfully.'
- '204 No Content: Resource deleted successfully'
- '4xx: Client errors, check request parameters.'
- '400 Bad Request: Check the request body for required parameters.'
- '201 Created: Successful creation of a site.'
- '200 OK: Success response with subscription form objects.'
- '5xx: Server errors, try again later.'
- Response code 200 OK and a pagination of Subscription permissions objects in the
  response body.
- '404 Not Found: Subscription does not exist.'
- '401 Unauthorized: Incorrect username or password.'
- '404 Not Found: Temporary absence not found.'
- '400 Bad Request: Invalid data or parameters provided.'
- '406 Not acceptable: The requested media type is not supported.'
- '415 Unsupported Media Type: The media type in the request body is not supported.'
- '201 Created: The attachment was created successfully.'
- '404 Not Found: The requested resource was not found'
- '404: Devices list could not be retrieved.'
- '400 Bad Request: Check the request body format'
- '201 Created: Successfully created the conference bridge.'
- '200 OK: Successfully deleted the conference bridge.'
- 'HTTP 200: Successful modification of response option.'
- 'HTTP 201: Created new response option.'
- 'HTTP 400: Bad request, check parameters.'
- '401 Unauthorized: Recheck credentials or API key'
- '404 Not Found: Check if the group or member ID is correct'
- '400 Bad Request: Ensure the request body is formatted correctly'
- '404 Not Found: The specified incident or resource was not found.'
- '404 Not Found: Verify the incident ID or integration ID.'
- '400 Bad Request: Ensure correct parameters are being sent'
- 'Error: Response code 200 OK and a Pagination of On-call objects in the response
  body.'
- '204 No Content: Person not found or deleted.'
- '200: Successful response'
- '401: Unauthorized access'
- '404 Not Found: Check the plan ID or endpoint path.'
- '404 Not Found: Ensure the scenarioId or formId is correct'
- '400 Bad Request: Check input values.'
- '201 Created: Successfully created scheduled message.'
- '200 OK: Successfully deleted scheduled message.'
- '200 OK: Successful retrieval of data.'
- 'Error: For a list of response codes returned by the xMatters REST API.'
- '200 OK: Successful deletion of the shared library.'
- '404 Not Found: The specified libraryID does not exist.'
- '404 Not Found: Check groupID and shiftID'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'PENDING: The upload job is still being processed.'
- '400 Bad Request: Check query parameters for correctness.'
- '404 Not Found: Check change ID or endpoint path'
- '404 Not Found: Ensure the device ID is correct.'
- 'Error: response code is ... '
- '404 Not Found: Check the bridge ID'
- '400 Bad Request: Check request format or parameters'
- '201 Created: Successful creation of message template'
- 'Error: Response code is: 200'
- 'Error: Response code is: 201'
- '400 Bad Request: Check the JSON body format.'
- '404 Not Found: Check the group ID or name provided'
- '400 Bad Request: Review the input parameters'
- '404 Not Found: The requested import job does not exist.'
- '404 Not Found: Check incident ID or URL'
- '404 Not Found: Verify the person ID or group ID'
- Response code 200 OK and a pagination of Plan objects in the response body.
- '404 Not Found: Ensure the personID is correct.'
- '400 Bad Request: Check the request parameters and body.'
- '401 Unauthorized: Verify your username and password.'
- '404 Not Found: Ensure the URL is correct.'
- '201 Created: The scenario was successfully created.'
- 'Error: Refer to HTTP Response Codes for more details.'
- '201 Created: Scheduled message successfully created.'
- '200 OK: Scheduled message successfully deleted.'
- 'Response code 400: Bad Request. Check your input data.'
- '201 Created: Resource successfully created.'
- '204 No Content: Request succeeded but no content to return.'
- '404 Not Found: Resource could not be found.'
- '400 Bad Request: Invalid input parameters.'
- '404 Not Found: Check if the group or shift ID is correct.'
- '404 Not Found: Verify the endpoint path or resource.'
- '201 Created: Subscription created successfully.'
- '400 Bad Request: Validation errors in the request body.'
- 'HTTP 200: Success'
- 'HTTP 400: Bad Request'
- 'HTTP 404: Not Found'
- '404 Not Found: Check the temporary absence ID.'
- 'PENDING: The upload is in progress.'
- 'FAILED: The upload has failed.'
- '200: Retrieved device.'
- '404 Not Found: Check the endpoint path and ensure the resource exists.'
- '400 Bad Request: Verify that the request parameters are correct.'
- '201 Created: Resource created successfully.'
- '201 Created: Successfully created the resource'
- '200 OK: Successfully updated the resource'
- '200 OK: Success response indicating the action was completed successfully.'
- 'Error: Response code is not 200.'
- '404 Not Found: Resource does not exist.'
- 'Error: Response code is: 401'
- 'Error: Response code is: 404'
- '404 Not Found: Ensure the group ID is correct.'
- For a list of response codes returned by the xMatters REST API, see [HTTP Response
  Codes](#http-response-codes).
- '202 Accepted: Incident triggered successfully.'
- '201 Created: Successful creation of scenario.'
- '200 OK: Successful update of scenario.'
- '404 Not Found: The specified form or scenario does not exist.'
- '404 Not Found: Verify the scenarioId or formId.'
- '404 Not Found: Check the service ID'
- '403 Forbidden: Insufficient permissions to access resource'
- '201 Created: Shift successfully created.'
- '404 Not Found: Verify groupID or shiftID'
- '200 OK: Successful retrieval of subscription forms'
- '404 Not Found: Ensure the correct endpoint and planId are used'
- '201 Created: Subscription successfully added'
- '404 Not Found: Endpoint does not exist'
- '500 Internal Server Error: Server error occurred'
- '404 Not Found: The specified subscription does not exist.'
- '200 OK: Successful retrieval of absences'
- '400 Bad Request: Invalid parameters provided'
- '404 Not Found: The specified resource does not exist'
- '403: Forbidden: User does not have permission to access the endpoint.'
- 'Error: Check for valid credentials or permissions.'
- '401 Unauthorized: Invalid authentication'
- '404 Not Found: Check the formId or planId'
- '201 Created: Form created successfully.'
- '400 Bad Request: Invalid parameters or request body'
- '401 Unauthorized: Recheck OAuth credentials.'
- '403 Forbidden: Check permissions for the requested resource.'
- '204 No Content: Member not found.'
- '4xx: Client errors related to request parameters.'
- '404 Not Found: Verify the group ID or name'
- '204 No Content: The group member does not exist'
- '400 Bad Request: Invalid input parameters'
- 'The request did not succeed. Response code is: '
- '201 Created: Successfully created an incident.'
- '202 Accepted: Successfully triggered an incident.'
- '500 Internal Server Error: Server encountered an error'
- '401 Unauthorized: Recheck OAuth credentials'
- '404 Not Found: Endpoint does not exist or is incorrect'
- '404 Not Found: Ensure the person ID or target name is correct'
- '200 OK: Indicates successful retrieval of data.'
- '404 Not Found: The requested resource was not found.'
- '200 OK: Successfully updated the resource.'
- 'Error: Response code is not 200 or 201.'
- '200 OK: Successfully retrieved scheduled messages.'
- '404 Not Found: The scheduled message or attachment does not exist.'
- Response code 200 OK and a paginated list of SharedLibrary objects in the response
  body.
- '201 Created: Site successfully created or modified.'
- '401: Unauthorized - Recheck username and password'
- '400: Bad Request - Check request payload format'
- 'Error: Check the request format or parameters'
- '201 Created: Successfully created a conference bridge.'
- '201 Created: Successfully created.'
- '400 Bad Request: Check the request body for missing required fields.'
- '201 Created: Message template successfully created.'
- 'Error: Response code indicates an issue.'
- Response code 200 OK and a GroupMembership object in the response body.
- '200 OK: Successful response with paginated group objects.'
- '400 Bad Request: Invalid request data'
- '201 Created: Incident successfully created'
- '201 Created: Successful request.'
- '400 Bad Request: Check request format and parameters.'
- '401 Unauthorized: Invalid credentials or token'
- '200 OK: Successful response with on-call data'
- Response code 200 OK and an On Call Summary object in the response body.
- '400 Bad Request: The request was malformed or contained invalid parameters.'
- '401 Unauthorized: Authentication failed or user does not have permission.'
- '404 Not Found: Check the person ID or endpoint path'
- '500 Internal Server Error: Retry the request'
- '404 Not Found: Verify the plan id or path'
- '404 Not Found: Verify the planId or endpointId.'
- '200 OK: Successful update of the resource.'
- '404 Not Found: Check if the groupId or shiftId is correct.'
- '401 Unauthorized: Check if the username and password are correct.'
- '201 Created: Successful shift creation'
- '200 OK: Successful shift update'
- '400 Bad Request: Invalid parameters passed'
- Response code 200 OK and a pagination of Subscription Form objects in the response
  body.
- '404 Not Found: Check the endpoint URL.'
- '201 Created: Subscription was successfully added.'
- '400 Bad Request: The request did not succeed.'
- '401 Unauthorized: Recheck API credentials.'
- '201 Created: Successful upload of attachment.'
- '400 Bad Request: Check file format and size.'
- '200 OK: Successfully deleted device.'
- '200 OK: Successfully deleted a conference bridge'
- '404 Not Found: The specified conference bridge does not exist'
- Response code 200 OK for successful requests.
- '400 Bad Request: Check the payload structure or data types.'
- '401 Unauthorized: Check the username and password.'
- '404 Not Found: Verify the form or plan ID.'
- 'HTTP 200 OK: Successful request'
- 'HTTP 400 Bad Request: Check your request format'
- 'HTTP 403 Forbidden: Check authentication credentials'
- '404 Not Found: Ensure the group ID is valid.'
- '404 Not Found: Check import job ID.'
- '404 Not Found: Ensure the groupId is correct'
- '202 Accepted: Successfully triggered the incident.'
- '401 Unauthorized: Recheck username and password for API access.'
- '404 Not Found: Check the plan ID or URL'
- '404 Not Found: Verify the plan ID or endpoint path.'
- '404 Not Found: Check if the scenario or form ID is correct.'
- '201 Created: Scenario successfully created.'
- '200 OK: Permissions successfully updated.'
- '403 Forbidden: Insufficient permissions to modify scenario.'
- '404 Not Found: Check if the service ID is correct'
- '500 Internal Server Error: Retry the request later'
- '404 Not Found: Check groupID or shiftID'
- '201 Created: Successfully created or modified a site.'
- '200 OK: Successfully deleted a site.'
- '200 OK: Successful response with subscription forms.'
- '404 Not Found: Check the plan ID or endpoint.'
- 'PENDING: The upload is being processed.'
- 'RECEIVED: The upload file has been received.'
- Error codes are provided for specific failure scenarios.
- 'Error: Response code is: 4xx or 5xx'
- '401 Unauthorized: Recheck user credentials'
- '404 Not Found: The requested device name does not exist'
- '4xx: Client errors, check request format and authentication'
- '5xx: Server errors, try again later'
- '404 Not Found: Check if the formId or planId is correct.'
- '400 Bad Request: Ensure all required fields are provided.'
- 'HTTP Response Codes: Refer to the documentation for the list of error codes.'
- '400 Bad Request: Check your request syntax or parameters.'
- '404 Not Found: Ensure the group ID or name is correct.'
- '404 Not Found: Check if the importId is valid.'
- '401 Unauthorized: Recheck your username and password'
- '201 Created: Incident successfully modified.'
- '200 OK: Successful integration retrieval.'
- Response code 200 OK and a Pagination of On-call objects in the response body.
- '403 Forbidden: Check authentication credentials'
- '404 Not Found: Ensure the plan or endpoint ID is correct'
- '404 Not Found: Verify the scenario ID or endpoint'
- '404 Not Found: Ensure the scenario or form ID is correct.'
- Response code 201 Created
- '201 Created: Successfully created a scheduled message.'
- '200 OK: Successfully deleted a scheduled message.'
- 'Error: Check HTTP Response Codes for details'
- '404 Not Found: Check if the groupID or shiftID is correct.'
- '400 Bad Request: Missing or invalid parameters.'
- '403 Forbidden: User does not have permission to access the resource.'
- '404 Not Found: The requested subscription does not exist.'
- '201 Created: The attachment was successfully created.'
- '404: Device not found.'
- '404 Not Found: The specified device does not exist'
- Response code 200 OK and a Pagination of Event objects in the response body.
- 'Error: response code is not 202.'
- '400 Bad Request: Check input parameters and payload.'
- '201 Created: Successfully created or modified resource'
- For a list of response codes returned by the xMatters REST API, see [HTTP Response
  Codes].
- '403 Forbidden: Ensure the user has the right permissions.'
- 'REQUEST_FAILED: Check your request parameters or authentication credentials.'
- '404 Not Found: Check the endpoint path'
- '400 Bad Request: Check the request format and parameters'
- '400 Bad Request: Invalid request body'
- '404 Not Found: Ensure the endpoint and parameters are correct.'
- '201 Created: Successfully created a new person.'
- '200 OK: Successfully modified an existing person.'
- '400 Bad Request: Check the body parameters for the request.'
- '404 Not Found: Verify the planId or endpoint.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Ensure the specified planId is correct.'
- 'HTTP 401: Unauthorized - Check credentials'
- 'HTTP 404: Not Found - Check the scenario ID'
- '201 Created: Scenario object returned.'
- '400 Bad Request: Check the provided data.'
- '400 Bad Request: Malformed request or invalid parameters'
- '404 Not Found: Ensure the group ID or shift ID is correct'
- '404 Not Found: Ensure the groupId and shiftId are correct'
- '404: Resource not found.'
- '409: Conflict - the site already exists.'
- 'Error: For a list of response codes returned by the xMatters REST API, see [HTTP
  Response Codes](#http-response-codes)'
- '401 Unauthorized: Check your authentication'
- '400 Bad Request: Invalid request for attachment upload.'
- '200 OK: Retrieved devices.'
- Other error codes may be returned by the API.
- '204 No Content: Device name could not be found.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Check if the formId or planId is correct'
- '201 Created: Form successfully created.'
- '201 Created: Successfully created form section'
- '200 OK: Successfully updated form or message template'
- '400 Bad Request: Check request body for required fields'
- '403 Forbidden: Check permissions for accessing the resource'
- '404 Not Found: Verify the form ID is correct'
- '400 Bad Request: Ensure all required parameters are provided'
- 'Response code 201: Resource created'
- 'Response code 400: Invalid request format'
- '204 No Content: Group member does not exist.'
- '401 Unauthorized: Recheck your username and password.'
- '404 Not Found: Group not found.'
- '400 Bad Request: Check the groupId format or parameters.'
- '404 Not Found: The specified group does not exist.'
- '404 Not Found: Ensure the import ID is correct.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '201: User created successfully'
- '403 Forbidden: Permissions issue'
- '4xx: Client error - check request parameters.'
- '5xx: Server error - try again later.'
- '200 OK: Successful update of resource.'
- '404 Not Found: Service ID does not exist'
- '404 Not Found: Check if the groupID or shiftID is correct'
- '404 Not Found: Verify groupID or shiftID.'
- '204 No Content: The shift could not be found.'
- '200 OK: Successful retrieval of subscription forms.'
- '201 Created: Subscription form created successfully'
- '200 OK: Subscription form updated successfully'
- '404 Not Found: Verify subscription or user ID.'
- '201 Created: Successfully created attachment.'
- '201 Created: Successfully created the device'
- '200 OK: Successfully modified the device'
- '500 Internal Server Error: An unexpected error occurred.'
- Error codes can be found in the HTTP Response Codes documentation.
- '4XX: Client error, check request format or authentication'
- Response code 201 Created for successful creation.
- Error for unsuccessful requests.
- '201 Created: Conference bridge was successfully created.'
- '200 OK: Conference bridge was successfully deleted.'
- Error response codes available in HTTP Response Codes documentation.
- '401 Unauthorized: Verify credentials.'
- Response code 200 OK for success
- For a list of error response codes, see HTTP Response Codes
- 'Response code 400: Bad request.'
- 'Response code 401: Unauthorized.'
- '201 Created: Successfully created a group.'
- '400 Bad Request: Invalid data format or parameters.'
- '404 Not Found: Check if the groupId is correct'
- '500 Internal Server Error: Try again later or contact support'
- '400 Bad Request: Check required fields in the request body.'
- Refer to the xMatters REST API for response codes.
- '404 Not Found: Ensure the specified plan ID exists'
- '400 Bad Request: Check the request parameters and payload.'
- '404 Not Found: Ensure the plan ID is valid.'
- '404 Not Found: Ensure the endpoint exists and is correct'
- 'Unauthorized: Check your username and password.'
- '201 Created: Successful creation of a scenario.'
- '200 OK: Successful update of a scenario.'
- 201 Created
- 204 No Content
- 400 Bad Request
- 401 Unauthorized
- 404 Not Found
- 500 Internal Server Error
- '400 Bad Request: Check for missing required fields.'
- '200 OK: Success response with data.'
- '5xx: Server error, retry the request.'
- '201 Created: Site successfully created.'
- '201 Created: Subscription form created successfully.'
- '200 OK: Subscription form updated successfully.'
- '401: Unauthorized, check credentials.'
- '404: Subscription not found.'
- '200 OK: Subscription successfully modified.'
- '404 Not Found: Check the temporary absence ID'
- '400 Bad Request: Validate request parameters'
- '404 Not Found: Change ID does not exist.'
- '200 OK: Success response for retrieving device.'
- '200 OK: Success response for deletion.'
- Other error codes applicable as per HTTP Response Codes.
- '400 Bad Request: Check query parameters or request format'
- '404 Not Found: Verify event ID'
- '404 Not Found: Check if the eventId is correct'
- '500 Internal Server Error: Retry the request after some time'
- '201 Created: Successfully created conference bridge'
- '200 OK: Successfully deleted conference bridge'
- '404 Not Found: The specified resource was not found'
- '404 Not Found: Check if the form or plan ID is correct'
- '400 Bad Request: Ensure all required fields are provided'
- '404 Not Found: Check the group or member ID.'
- '400 Bad Request: Ensure all required fields are included in the request.'
- '400 Bad Request: Check request parameters for correctness.'
- '404 Not Found: Check the incident ID or form ID'
- '401 Unauthorized: Invalid credentials or token expired.'
- '400 Bad Request: Check request payload for required fields.'
- Response code 200 OK and a Pagination of objects in the response body.
- '404 Not Found: Check the planId or constantId provided'
- '400 Bad Request: Invalid request format or missing parameters.'
- '204: No Content'
- '500: Internal Server Error'
- '404 Not Found: The site could not be found'
- '409 Conflict: The site already exists'
- '200: Site was successfully modified.'
- '200: Site was successfully deleted.'
- '401 Unauthorized: Recheck your credentials'
- '404 Not Found: Ensure the resource exists'
- 'ERROR: For a list of response codes returned by the xMatters REST API, see HTTP
  Response Codes.'
- '400 Bad Request: Check the request for missing parameters or invalid values.'
- '404 Not Found: Ensure the endpoint exists.'
- '401 Unauthorized: Recheck auth credentials'
- '201 Created: Incident successfully modified or created.'
- 'Response code 200 OK: Successful request'
- Error codes will vary based on request failure
- '400 Bad Request: Invalid parameters'
- '201 Created: Person successfully created'
- '200 OK: Person successfully modified'
- '204 No Content: Person not found'
- '500 Internal Server Error: Unexpected server error.'
- '404 Not Found: Scheduled message not found'
- '200 OK: Scenario successfully updated.'
- '201 Created: Scheduled message created.'
- '404 Not Found: The specified service does not exist.'
- '401 Unauthorized: Authentication credentials are invalid.'
- '404 Not Found: Check the library or plan ID'
- '400 Bad Request: Ensure the request parameters are valid'
- '404 Not Found: Ensure the group ID and shift ID are correct'
- '400 Bad Request: Verify request parameters and data formatting.'
- '404: The site could not be found.'
- '409: The site already exists.'
- 'Error: Request did not succeed. Response code is: 400'
- 'Error: Request did not succeed. Response code is: 401'
- 'Response code 201 Created: Successfully created a subscription form.'
- 'Response code 200 OK: Successfully updated a subscription form.'
- '401 Unauthorized: Verify username and password'
- '401 Unauthorized: Recheck provided username and password'
- '404 Not Found: Verify the resource exists.'
- '200 OK: Successful deletion of device.'
- Other error codes can occur as per the API documentation.
- '202 Accepted: Success'
- 'Error: For a list of response codes returned by the xMatters REST API, see HTTP
  Response Codes'
- '404 Not Found: The event could not be found'
- '401 Unauthorized: Check credentials and permissions'
- '404 Not Found: Verify endpoint and resource existence'
- 'Response code 400: Bad request, check your request data.'
- 'Response code 401: Unauthorized, check your authentication.'
- '404 Not Found: Check if the group ID or name is valid.'
- '401 Unauthorized: Check the credentials used for authentication.'
- '400 Bad Request: Ensure request body is correctly formatted.'
- '401 Unauthorized: Ensure credentials are correct.'
- '404 Not Found: Verify the group ID exists.'
- '403 Forbidden: Ensure sufficient permissions to access the incident.'
- '404 Not Found: Verify the incident ID or identifier provided.'
- '201 Created: Indicates successful modification of an incident.'
- '400 Bad Request: Check the structure of your request body.'
- '401 Unauthorized: Ensure correct credentials are provided.'
- '400 Bad Request: Check the request body for missing or incorrect parameters'
- '400 Bad Request: Check query parameters for validity'
- '404 Not Found: Ensure the group ID or person ID is correct'
- '200 OK: Person successfully deleted or modified.'
- '404 Not Found: Ensure the endpoint is correct'
- '404 Not Found: Plan with specified ID does not exist'
- '201 Created: Scenario created successfully.'
- '404 Not Found: Scheduled message or attachment not found'
- '404 Not Found: Check the service ID or endpoint path'
- '401 Unauthorized: Invalid credentials provided.'
- '404 Not Found: Check the absence ID or endpoint path.'
- '201 Created: Successfully created device name.'
- '200 OK: Successful retrieval of event suppressions'
- '401 Unauthorized: Check credentials or authentication method'
- 'Response code 201 Created: Successfully created a resource'
- 'Response code 400 Bad Request: Check request parameters'
- 'Response code 400: Bad request, check the request body.'
- 'Response code 401: Unauthorized access, verify credentials.'
- '201 Created: Resource created successfully'
- '401 Unauthorized: Authentication required or failed'
- '400 Bad Request: Check the request parameters and body'
- '404 Not Found: Ensure the group ID or name is correct'
- '401 Unauthorized: Recheck user credentials or permissions'
- '404 Not Found: Verify the URL and parameters'
- '401 Unauthorized: Check if the access token is valid or expired.'
- '401 Unauthorized: Invalid credentials or authentication failure'
- '404 Not Found: Check the person ID or group ID'
- 'Unauthorized: Check username and password.'
- 'Not Found: Check the person ID or target name.'
- '200 OK: Person modified or deleted successfully.'
- '400 Bad Request: Invalid input or request format.'
- '404 Not Found: Check the plan id or endpoint.'
- '201 Created: Successfully created or modified.'
- '400 Bad Request: Check request body parameters.'
- '403 Forbidden: User lacks permission to manage scenarios'
- '201 Created: The scheduled message was successfully created.'
- '200 OK: The scheduled message was successfully deleted.'
- '200 OK: Successful update.'
- '500 Internal Server Error: Server encountered an unexpected condition'
- '404 Not Found: Check the resource identifier'
- '401 Unauthorized: Check your credentials'
- 'Error: Refer to HTTP Response Codes documentation for more details.'
- '200 OK: Success response with subscription forms.'
- '404 Not Found: Invalid planId.'
- 'Error: Response code is: {response.status_code}'
- 'The request did not succeed. Response code is: 400'
- Response code 200 OK and a Temporary Absence object in the response body.
- '400 Bad Request: Invalid file or missing parameters.'
- '400 Bad Request: Invalid parameters in the request.'
- '201 Created: Success response for creating a device.'
- '200 OK: Success response for modifying a device.'
- '404 Not Found: Ensure the device ID or endpoint is correct'
- '400 Bad Request: Verify the request body format'
- '404 Not Found: The requested event ID does not exist'
- 'Error: Invalid username or password'
- 'Error: Maximum payload size exceeded'
- '401 Unauthorized: Recheck credentials or authentication method'
- 'Error: For a list of response codes returned, see HTTP Response Codes.'
- '404 Not Found: Ensure the form ID or plan ID is correct'
- '404 Not Found: Check the group ID'
- 'Error: Response code is: 403'
- Error responses vary based on request.
- '404 Not Found: Ensure the import ID is correct'
- '400 Bad Request: Check your request format'
- '201 Created: Incident modified successfully'
- Could not get access token
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- '404 Not Found: Verify the integration ID or plan ID'
- '4xx: Client Error'
- '5xx: Server Error'
- '201 Created: Person successfully created.'
- '200 OK: Person successfully modified.'
- '204 No Content: Person not found for deletion.'
- '400 Bad Request: Verify your request body parameters'
- '200 OK: Permissions successfully set.'
- '204 No Content: The service could not be found.'
- '403 Forbidden: Insufficient permissions to access the resource.'
- '400 Bad Request: Invalid request body or parameters.'
- Response code 201 Created and a Subscription object in the response body.
- '200 OK: Successful retrieval of conference bridge objects.'
- '403: Forbidden'
- 'Other: The request did not succeed.'
- '404 Not Found: Event does not exist'
- '202 Accepted: Event successfully triggered'
- '400 Bad Request: Check the request for errors'
- Error codes are documented in the HTTP Response Codes section.
- '400 Bad Request: Check if the formId or planId is valid.'
- '201 Created: Successfully created form section.'
- '200 OK: Successfully updated form.'
- '200 OK: Successful retrieval of members.'
- '201 Created: Successful creation of an incident or note.'
- '200 OK: Request was successful'
- '404 Not Found: Check if the integration or plan ID is correct.'
- '201 Created: User successfully created.'
- '409 Conflict: The user already exists.'
- '404 Not Found: Verify the plan ID.'
- '404 Not Found: Ensure the scenario or form ID is correct'
- '400 Bad Request: Check the request payload for required fields'
- '201 Created: Scheduled message successfully created'
- '404 Not Found: Scheduled message ID does not exist'
- '404 Not Found: Check the service or dependency ID'
- '201 Created: Service successfully created.'
- '201 Created: Successfully added shift'
- '400 Bad Request: Check request format and required fields'
- '404 Not Found: Verify group ID or target name'
- '200 OK: Successfully processed the request'
- '404 Not Found: Check if the subscription ID is correct'
- 'HTTP Response Codes: See documentation for error handling.'
- '201 Created: Attachment successfully uploaded'
- '400 Bad Request: Invalid input data'
- '404 Not Found: The specified change record does not exist'
- '201 Created: Successfully created device'
- '200 OK: Successfully modified device'
- '200 OK: Successfully updated resource.'
- '200 OK: Success response with Group object.'
- '400 Bad Request: Check required fields and format'
- '404 Not Found: Ensure the groupId is valid.'
- '404 Not Found: Import job not found'
- '404 Not Found: Verify the incident or integration ID'
- '404 Not Found: Check the integration ID or plan ID'
- '404 Not Found: Check the plan ID or endpoint'
- '404 Not Found: Check if the planId is correct'
- '200 OK: Successful retrieval of scheduled messages.'
- '404 Not Found: The requested scheduled message does not exist.'
- '400 Bad Request: Check the request format.'
- '401 Unauthorized: Check API credentials.'
- '404 Not Found: Verify the group or shift ID.'
- '404 Not Found: The requested site could not be found'
- '400 Bad Request: Check for missing required parameters.'
- '404 Not Found: Ensure the subscription ID is correct.'
- '404 Not Found: Check if the subscription ID exists'
- '400 Bad Request: Verify the request format and parameters'
- '404 Not Found: Check if the change ID is correct or exists'
- '201 Created: Device name created successfully'
- '204 No Content: No content to return'
- '404 Not Found: Device name not found'
- 'Error: Check response codes for failures.'
- '400 Bad Request: Check the provided data for correctness'
- '201 Created: Successful creation of a conference bridge.'
- '200 OK: Successful deletion of a conference bridge.'
- '404 Not Found: Verify the planId and formId are correct.'
- '400 Bad Request: Check request parameters and payload.'
- '404 Not Found: Ensure the resource exists.'
- '401 Unauthorized: Recheck username/password'
- '404 Not Found: Check if the formId is correct.'
- '400 Bad Request: Validate the request body parameters.'
- '404 Not Found: Ensure the groupID or memberID is correct.'
- '403 Forbidden: Check API permissions or authentication.'
- Response code 200 OK and an Import message object in the response body.
- '201 Created: Incident created successfully.'
- '400 Bad Request: Missing required fields or invalid data.'
- '401 Unauthorized: Check username/password or token expiration.'
- '404 Not Found: Check if the person or group exists.'
- '200 OK: Person successfully modified or deleted.'
- '404 Not Found: The specified plan does not exist.'
- '404 Not Found: Verify the endpoint or resource ID.'
- '201 Created: Successful operation'
- '200 OK: Successful update'
- '400 Bad Request: Check request format and parameters'
- '404 Not Found: The specified service could not be found.'
- '201 Created: Service dependency created successfully.'
- '200 OK: Service dependency modified successfully.'
- '204 No Content: Service dependency not found.'
- '404 Not Found: Check the specified group or shift identifier.'
- '404 Not Found: Verify groupID and shiftID'
- '201 Created: Successful creation of the site.'
- '200 OK: Successful response for deletion.'
- '400 Bad Request: Ensure request data is valid.'
- '401 Unauthorized: Check user credentials or permissions.'
- '400 Bad Request: Request is malformed. This often occurs when there is an error
  in the request such as referring to an object that does not exist.'
- '403 Forbidden: Authenticated user does not have permission to perform the action.
  When this occurs you may need to authenticate with a user that has more permissions
  in xMatters.'
- '404 Not Found: Check the change ID'
- '201 Created: Success response for uploaded attachments.'
- 'HTTP Response Codes: For a list of response codes returned by the xMatters REST
  API, see the API documentation.'
- '201 Created: Device created successfully'
- '200 OK: Device modified successfully'
- '401 Unauthorized: Incorrect authentication credentials.'
- 'Error: Check HTTP response codes for additional details.'
- '201 Created: Conference bridge created successfully.'
- '200 OK: Conference bridge deleted successfully.'
- Error codes available in HTTP Response Codes documentation.
- 'HTTP Response Codes: Check documentation for specific error handling.'
- '404 Not Found: Verify group ID or member ID'
- '403 Forbidden: Ensure you have permission to access this resource'
- '400 Bad Request: Check request parameters and data format'
- '404 Not Found: Group ID or name does not exist'
- The request did not succeed
- Response code 200 OK indicates success
- 'Error: For a list of response codes returned by the xMatters REST API, refer to
  the HTTP Response Codes.'
- '201 Created: Successfully created a person.'
- '200 OK: Successfully modified a person.'
- '404 Not Found: Ensure the plan ID is correct'
- '400 Bad Request: Validate request payload'
- Response code 200 OK and a pagination of Scenario objects in the response body.
- '404 Not Found: The specified resource could not be found'
- '404 Not Found: Check scenario or form ID'
- '400 Bad Request: Validate input data'
- '201 Created: Scheduled message created successfully'
- '200 OK: Scheduled message deleted successfully'
- 'HTTP Response Codes: Check the API documentation for a list of common error responses.'
- '404 Not Found: Ensure the group or shift ID is correct.'
- '204 No Content: Shift could not be found'
- '200 OK: Successful update of a subscription form.'
- Request failed due to invalid file format or missing parameters.
- '404 Not Found: Check if the temporary absence ID exists.'
- '202 Accepted: The request was successful.'
- 'Error: response code is {response_code}'
- '400 Bad Request: The request was invalid or cannot be otherwise served.'
- 'HTTP Response Codes: Refer to the documentation for more details.'
- '404 Not Found: Verify the endpoint and resource existence.'
- '201 Created: Success response for incident modification.'
- Error responses may vary; refer to HTTP Response Codes.
- '404 Not Found: Integration or plan not found.'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Check if the plan ID is correct'
- '404 Not Found: Check resource path or ID.'
- 'HTTP Response Codes: See documentation for error details.'
- '404 Not Found: Check the absence ID.'
- '401 Unauthorized: Recheck your credentials.'
- 'Response code 200 OK: Indicates success.'
- '401 Unauthorized: Check username/password or permissions'
- '500 Internal Server Error: An unexpected error occurred on the server'
- Error response codes are available in the HTTP Response Codes documentation.
- '400 Bad Request: The request was invalid or cannot be served.'
- '401 Unauthorized: Authentication credentials were missing or incorrect.'
- 'Error: Response code is: 401 Unauthorized'
- 'Error: Response code is: 404 Not Found'
- '400 Bad Request: Check request format or required fields'
- '404 Not Found: Member or group does not exist.'
- '403 Forbidden: Insufficient permissions to modify group.'
- '200 OK: Successfully processed request.'
- '201 Created: Successfully created group.'
- '400 Bad Request: Check request parameters and body.'
- '404 Not Found: Group ID or name does not exist.'
- '400 Bad Request: Check the groupId parameter.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '400 Bad Request: Check for required fields in request body.'
- '404 Not Found: Check the planId or integrationId.'
- '401 Unauthorized: Check credentials and token expiration.'
- '404 Not Found: Plan not found, check the ID.'
- '404 Not Found: Check the endpoint and resource path'
- '404 Not Found: The specified scenario or form does not exist.'
- '404: The site could not be found: {siteID}'
- '401 Unauthorized: Validate username and password'
- '404 Not Found: Ensure the endpoint exists'
- '404 Not Found: Check if the subscription ID is valid.'
- '400 Bad Request: Check for missing or invalid fields.'
- '400 Bad Request: Check the input parameters.'
- '400 Bad Request: The request is malformed or missing required parameters.'
- '401 Unauthorized: Authentication credentials are missing or invalid.'
- '400 Bad Request: Check request format and required fields.'
- '404 Not Found: Ensure the change ID exists.'
- '204 No Content: Device not found.'
- Other error codes vary based on request failure.
- '404 Not Found: Device ID does not exist'
- 'Error: response code indicates failure.'
- '404 Not Found: The resource could not be found.'
- '200 OK: Status unchanged'
- '202 ACCEPTED: Status change request accepted'
- '200 OK: Successful retrieval of event suppression records.'
- '200 OK: Successfully retrieved forms'
- 'Error: Response code indicates a failure.'
- '400 Bad Request: Check the request format and body parameters.'
- '400 Bad Request: Check if the required fields are provided.'
- '404 Not Found: Ensure the formId is correct.'
- Response code 204 indicates member not found.
- '404 Not Found: Check if the group ID is correct.'
- '404 Not Found: Ensure the groupId exists'
- '401 Unauthorized: Check your client ID, username, or password'
- '404 Not Found: Ensure the specified group or person ID exists.'
- 'Error: Check HTTP Response Codes for more details.'
- '400 Bad Request: Required fields are missing or invalid.'
- Response code 201 Created when a subscription form is successfully updated.
- '404 Not Found: Verify the endpoint or resource ID'
- '404 Not Found: The specified device does not exist.'
- '201 Created: Device name successfully created.'
- 'Error: Invalid credentials or insufficient permissions.'
- '404 Not Found: Ensure the conference bridge ID is correct.'
- '201 Created: Form or message template successfully created.'
- 'Response code 201 Created: Resource created successfully'
- '400 Bad Request: Check request data'
- '401 Unauthorized: Check authentication'
- '200: Request was successful.'
- Other response codes will indicate errors.
- '200 OK: Success.'
- '404 Not Found: Endpoint not found'
- '404 Not Found: Check the URL and resource identifiers'
- '404 Not Found: Check if the resource exists'
- '401 Unauthorized: Recheck authorization'
- '201 Created: Successful request'
- '400: Bad Request - Check the request parameters'
- '401: Unauthorized - Check authentication credentials'
- '404: Not Found - Verify the group ID'
- '404 Not Found: The specified temporary absence does not exist.'
- '201 Created: Successful attachment upload'
- '400 Bad Request: Check file parameters'
- 'Other error codes: Refer to HTTP Response Codes.'
- 'Response code 201 Created: Success for POST requests'
- 'Response code 400 Bad Request: Invalid input or missing parameters'
- '201 Created: Form section successfully created.'
- '200 OK: Form successfully updated.'
- '400 Bad Request: Check the request body for invalid parameters.'
- 'Response code 400: Bad request, check your payload'
- 'Response code 401: Unauthorized, check your credentials'
- '401 Unauthorized: Authentication required.'
- '404 Not Found: Group ID does not exist.'
- '404 Not Found: Check the group ID or endpoint path.'
- '401 Unauthorized: Verify your credentials.'
- '400 Bad Request: Validate required fields in the request body'
- '401 Unauthorized: Incorrect username/password or token expired'
- '400 Bad Request: Check the group IDs provided.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Check if the endpoint path is correct'
- Various error codes may be returned for unsuccessful requests.
- '201 Created: Successful scenario update or attachment upload.'
- '200 OK: Successful permission update.'
- 'Response code 400: Bad Request - Check your input parameters.'
- '200 OK: Scheduled message successfully deleted'
- '4xx: Client error response'
- '5xx: Server error response'
- '404 Not Found: Check the provided groupID or shiftID'
- '404 Not Found: Check group ID or shift ID'
- '404 Not Found: Ensure the endpoint and parameters are correct'
- '201 Created: Successful subscription form creation.'
- '400 Bad Request: Check required fields and data format.'
- '404 Not Found: The specified plan ID does not exist.'
- '401 Unauthorized: Recheck authentication credentials or permissions.'
- '400 Bad Request: Check the request body or parameters.'
- '404 Not Found: Check if the absence ID exists'
- '400 Bad Request: Review request parameters for correctness'
- '404 Not found: The resource does not exist. This is caused by attempting to access
  an endpoint that does not exist, for example, this error can occur when there is
  a typo in the endpoint name.'
- '406 Not acceptable: The requested media type is not supported. This API supports
  application/JSON only.'
- '415 Unsupported Media Type: The media type in the request body is not supported.
  This API supports application/JSON only.'
- '200 OK: Success response with event object.'
- 'The request did not succeed. Response code is: {response.statusCode}'
- 'HTTP Response Codes: Check the documentation for a list of response codes returned
  by the xMatters REST API.'
- 'Error: Response code is: 200 OK'
- '400 Bad Request: Check the input data for required fields.'
- '404 Not Found: Ensure that the groupId is correct.'
- '201 Created: Incident was successfully created.'
- 'Response code 201: Created integration'
- 'Response code 400: Bad Request'
- 'Response code 401: Unauthorized'
- '401 Unauthorized: Recheck OAuth credentials or token expiration.'
- '201 Created: Person object successfully created.'
- Error codes for common issues are detailed in the HTTP Response Codes section.
- '500 Internal Server Error: Try again later'
- '400 Bad Request: Check request format or parameters.'
- '404 Not Found: Verify endpoint or resource existence.'
- '404 Not Found: Service ID does not exist.'
- '201 Created: Successful shift creation.'
- '200 OK: Successful shift update.'
- Response code indicates errors based on the request.
- '200: Success - Response contains subscription form data.'
- '401: Unauthorized - Check username and password.'
- '404: Not Found - The specified plan or subscription form does not exist.'
- '400 Bad Request: Invalid input or missing required fields.'
- 'HTTP_RESPONSE_CODES: Refer to the xMatters REST API documentation for error handling.'
- 'ERROR: There was an error processing the upload.'
- '403: Forbidden: When the authenticating user does not have permission to access
  an endpoint'
- '201 Created: Device successfully created.'
- '4xx or 5xx: Various other error responses.'
- '404 Not Found: Check device ID or endpoint path'
- '404 Not Found: Verify formId or planId'
- '200 OK: Form updated successfully.'
- '400 Bad Request: Check your request format or parameters.'
- '201 Created: Indicates that a resource was successfully created.'
- 'Error: Refer to HTTP Response Codes for a list of error responses.'
- Error codes returned by the xMatters REST API can be found in the documentation.
- '200 OK: Successful retrieval of groups.'
- '200 OK: Group modified or deleted successfully.'
- '201 Created: Group created successfully.'
- '404 Not Found: Endpoint not found.'
- 'HTTP Response Codes: See documentation for more error codes.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '201 Created: A new service has been created'
- '204 No Content: Service not found'
- '400 Bad Request: The request could not be understood or was missing required parameters'
- '404 Not Found: Requested service could not be found'
- Error codes returned by the xMatters REST API available in the documentation.
- '400 Bad Request: Invalid parameters provided in the request body.'
- '201 Created: Subscription successfully created'
- '404 Not Found: Check the ID or path for the temporary absence.'
- '401 Unauthorized: Recheck credentials or token expiration.'
- '200 OK: Successfully deleted a conference bridge.'
- '401 Unauthorized: Check user credentials.'
- '400 Bad Request: Check if the required parameters are provided.'
- '400 Bad Request: Check the parameters provided in the request'
- '404 Not Found: Verify the integration or plan ID'
- '201 Created: Success response for incident creation.'
- '200 OK: Success response for getting integration.'
- Error codes can be found in the xMatters REST API documentation.
- '401 Unauthorized: Check username, password, or client credentials.'
- '403 Forbidden: Ensure you have permission to manage scenarios for the form.'
- '201 Created: Successful creation of resource'
- '200 OK: Successful update of resource'
- '404 Not Found: The requested service does not exist'
- '404 Not Found: Group or shift not found'
- '404: Resource not found'
- '201 Created: Successfully created the shift.'
- '200 OK: Successfully updated the shift.'
- Response code indicates error if the request fails.
- '409 Conflict: The site already exists.'
- '400 Bad Request: Ensure that required fields are included in the request body.'
- Response code 201 Created when a device name is successfully added.
- Response code 204 No Content if the device name could not be found.
- 'Error: Response code is not 202'
- Response code 200 OK on success.
- Error codes may vary based on the request.
- '200 OK: Successful modification.'
- '201 Created: New resource created.'
- 'Error: Response codes as specified in the xMatters REST API documentation.'
- '404 Not Found: Verify the group ID or name.'
- '202 Accepted: Incident triggered successfully'
- '400 Bad Request: Check request parameters and body'
- '404 Not Found: Ensure the correct endpoint and resource ID'
- 'Response code 204 No Content: Person not found.'
- 'Response code 200 OK: Person was successfully modified or deleted.'
- 'The request did not succeed. Response code is: 200 OK'
- '403 Forbidden: Permission denied for the requested action.'
- '201 Created: Service dependency successfully created.'
- '200 OK: Service dependency successfully modified.'
- '204 No Content: The service dependency could not be found.'
- '201 Created: Successfully added a shift.'
- '400 Bad Request: Missing required parameters.'
- '404 Not Found: Verify the libraryID or the groupID/shiftID'
- '400 Bad Request: Verify the request body parameters.'
- '404 Not Found: Check subscriptionId or personId'
- '404 Not Found: The specified temporary absence does not exist'
- '400 Bad Request: Invalid file or parameters.'
- '200 OK: Device successfully modified.'
- '201 Created: Success response for form creation'
- 'Error: For a list of response codes returned by the xMatters REST API'
- 'HTTP Response Codes: For a list of response codes returned by the xMatters REST
  API, see HTTP Response Codes.'
- '4XX: Client errors'
- '403 Forbidden: Access denied'
- '400 Bad Request: Ensure all required parameters are included.'
- '404 Not Found: Check if the group ID or name is correct.'
- '403 Forbidden: Check user permissions for group actions.'
- '403 Forbidden: Check user permissions for accessing the endpoint.'
- 'HTTP Response Codes: Refer to the documentation for a list of error codes.'
- '404 Not Found: The specified incident does not exist'
- '404 Not Found: Check the incident ID or integration ID.'
- '200 OK: Person successfully modified or deleted'
- '201 Created: Successfully created a scenario.'
- '201 Created: Successfully uploaded an attachment.'
- '404 Not Found: Ensure the groupID or shiftID exists.'
- 'The request did not succeed. Response code is: {responseCode}'
- 'Response code 200 OK: Successful request.'
- 'Response code 201 Created: Successful creation of the subscription form.'
- '201 Created: Subscription successfully added.'
- 'Not Found: Ensure the subscription ID is correct.'
- 'Other response codes: See HTTP Response Codes documentation.'
- '200 OK: Success response with a pagination of Event objects'
- '404 Not Found: Ensure the conference bridge ID is correct'
- '200 OK: Successfully retrieved or deleted a conference bridge.'
- 'Error: Check HTTP Response Codes for details.'
- 'Response code 400: Bad request, check your data structure'
- '404 Not Found: Check the groupID or memberID.'
- '403 Forbidden: Verify authentication and permissions.'
- '200 OK: Group successfully modified or deleted.'
- '4XX: Client error, check your request.'
- '404 Not Found: Verify the planId or integrationId.'
- '400 Bad Request: Invalid input or parameters.'
- '404 Not Found: The specified plan ID does not exist'
- '200 OK: Successfully processed the request.'
- '401 Unauthorized: Verify credentials and permissions.'
- '400 Bad Request: The request was malformed or missing required parameters.'
- '404 Not Found: The specified service ID does not exist.'
- '401 Unauthorized: Invalid authentication credentials provided.'
- '400 Bad Request: The request format is invalid.'
- '201 Created: Successful creation of a shift.'
- '200 OK: Successful update of a shift.'
- '401 Unauthorized: Recheck your credentials or permissions'
- 'Received response with status code: 400'
- '404 Not Found: The specified temporary absence ID does not exist.'
- '404 Not Found: Change record does not exist'
- 'Other error codes: Check HTTP Response Codes documentation.'
- '404 Not Found: The specified form ID does not exist.'
- '201 Created: Indicates successful creation of resource.'
- '400 Bad Request: Check request body and parameters.'
- 'Error: Response code is: [response code]'
- '404 Not Found: The group or resource was not found'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Validate authentication credentials.'
- '404 Not Found: Incident not found.'
- '400 Bad Request: Check required fields for incident creation.'
- '401 Unauthorized: Invalid credentials or access token expired'
- '404 Not Found: Check the plan ID'
- '404 Not Found: Plan ID does not exist.'
- '400 Bad Request: Check the request parameters and body format.'
- '404 Not Found: Ensure the specified scenario or form exists.'
- '201 Created: The request was successful.'
- '204 No Content: Service dependency could not be found.'
- '201 Created: Shift added successfully.'
- '200 OK: Shift updated successfully.'
- '404 Not Found: Verify the absence ID.'
- '201 Created: Success response for file upload'
- '200 OK: Successfully retrieved event.'
- '4xx: Client error, check the request parameters'
- '5xx: Server error, try again later'
- '201 Created: Success - Comment created.'
- '200 OK: Success - Status unchanged.'
- '202 ACCEPTED: Success - Status changed.'
- '404 Not Found: Verify the bridge ID or endpoint.'
- 'HTTP Response Codes: See documentation for a list of response codes returned by
  the xMatters REST API.'
- '404 Not Found: Check if the group or member ID exists.'
- '400 Bad Request: Check the request structure or parameters.'
- '200 OK: Successful retrieval'
- 'HTTP 201: Created'
- 'HTTP 202: Accepted'
- '401 Unauthorized: Authentication failed or user does not have permissions for the
  requested operation.'
- 'Response code 401 Unauthorized: Recheck username and password'
- '401 Unauthorized: Recheck basic auth credentials'
- '404 Not Found: The requested plan does not exist.'
- For other response codes, refer to HTTP Response Codes.
- '201 Created: The constant was successfully updated.'
- '200 OK: The endpoint was successfully created.'
- '404 Not Found: Check the planId or constantId.'
- '404 Not Found: Ensure the plan ID or endpoint is correct.'
- '404 Not Found: Check the scenario or attachment ID'
- 'HTTP Response Codes: Refer to documentation for detailed error responses.'
- '404 Not Found: Check the resource URL'
- '404 Not Found: Ensure the groupID or shiftID is correct.'
- '400 Bad Request: Check the request body format.'
- '404 Not Found: Verify the subscription ID or endpoint path.'
- '404 Not Found: Verify subscription ID'
- '400 Bad Request: Check request body format'
- '404 Not Found: Ensure the specified temporary absence id exists.'
- '401 Unauthorized: Incorrect username or password'
- 'Error: Check response code for issues.'
- 'HTTP Error Codes: Refer to the HTTP Response Codes documentation.'
- '404 Not Found: Check if the formId or planId is valid.'
- Response codes are described in the HTTP Response Codes section.
- '404 Not Found: Check if the group or member ID is correct.'
- '401 Unauthorized: Authentication credentials are required.'
- '200 OK: Person deleted successfully.'
- Response code 200 OK for successful request.
- Error for invalid requests returned in HTTP response codes.
- '404 Not Found: Scenario or attachment not found'
- '404 Not Found: Scheduled message does not exist.'
- '403 Forbidden: Authentication failed.'
- '400 Bad Request: Ensure the request body is formatted correctly.'
- 'Response code is: 4XX or 5XX indicates an error.'
- '404 Not Found: Check if the group or shift ID is correct'
- '401 Unauthorized: Recheck API access credentials'
- '200 OK: Successfully completed the request.'
- '400 Bad Request: Check the request body for missing parameters.'
- '404 Not Found: Verify the subscription ID provided.'
- 'Error: response code indicates failure'
- '404 Not Found: Check the event ID or annotation ID provided.'
- '201 Created: Successfully created a new conference bridge.'
- '4xx and 5xx: Refer to the HTTP Response Codes documentation for details.'
- '400 Bad Request: Check your request body and parameters.'
- '404 Not Found: Ensure the form ID or plan ID is correct.'
- 'Response code 200 OK: Successful retrieval of groups.'
- 'Error: Response code is: [code]'
- '202 Accepted: Triggered incident request accepted'
- '201 Created: Indicates successful creation of an incident or timeline entry.'
- '400 Bad Request: Invalid input data or parameters.'
- '404 Not Found: Endpoint does not exist.'
- '404 Not Found: The specified user does not exist.'
- '404 Not Found: Check if the person ID is correct'
- '404 Not Found: Check the scenario ID or attachment ID'
- '400 Bad Request: Check input parameters and request body'
- '200 OK: Successful update of sender permissions.'
- 'Response code is: {responseCode}'
- 'HTTP_RESPONSE_ERROR: Check the request format and parameters.'
- '200 OK: Successful deletion of subscriber.'
- '404 Not Found: Check if the subscription or subscriber ID exists.'
- '404 Not Found: Change record with specified ID does not exist'
- '200: Retrieved devices'
- '200 OK: Successful deletion'
- Other error codes may apply as per HTTP Response Codes.
- '404 Not Found: Ensure the device name or ID exists'
- '400 Bad Request: Invalid parameters or request format'
- '400 Bad Request: Missing required parameters or invalid data.'
- 'Error: Response code is: 201 Created'
- '404 Not Found: Ensure the group ID is correct'
- '404 Not Found: Check the groupId or endpoint path'
- '404 Not Found: Check the import ID or resource path'
- '400 Bad Request: Ensure required fields are included.'
- '400 Bad Request: Check request parameters or body format'
- 'Response code 200 OK: Successful integration modification'
- For a list of response codes returned by the xMatters REST API, see HTTP Response
  Codes
- 'HTTP Response Codes: See documentation for more details.'
- '200 OK: Successfully deleted the plan.'
- '201 Created: Successfully created a constant.'
- '404 Not Found: Check the scenario ID or endpoint path.'
- '403 Forbidden: Permission denied. Ensure you have the correct permissions.'
- '200 OK: Message deleted successfully.'
- '401 Unauthorized: Invalid credentials provided'
- '403 Forbidden: You do not have permission to access this resource'
- 'HTTP Response Codes: Refer to documentation for a list of response codes.'
- '400 Bad Request: Validate request parameters.'
- 'Error: Response code indicates an issue with the request.'
- '400 Bad Request: Check for missing required fields in the request body'
- '404 Not Found: Verify the subscription ID is correct'
- '400 Bad Request: Check the file format and content.'
- '404 Not Found: Check the absence ID or the endpoint path.'
- '401 Unauthorized: Check the authentication credentials.'
- '200 OK: Successfully retrieved device.'
- '404 Not Found: Check the device ID or endpoint'
- 'The request did not succeed. Response code is: {status_code}'
- 'Error: Response code indicates an issue with the request'
- '204 No Content: If the group member does not exist.'
- '404 Not Found: Check the groupId provided'
- '201 Created: The request succeeded.'
- '401 Unauthorized: Recheck username/password or permissions'
- '401 Unauthorized: Invalid username/password or token expired.'
- Other response codes can be found in HTTP Response Codes documentation.
- 'Response code 200 OK: Person successfully modified or deleted.'
- '404 Not Found: Ensure the endpoint path is correct'
- '404 Not Found: Check if the scenario or form ID is correct'
- '400 Bad Request: Ensure the request body is correctly formatted'
- '201 Created: Successful creation of scenario or attachment.'
- Other response codes can indicate various errors.
- '201 Created: Resource has been created'
- '200 OK: Successful response with data.'
- '404 Not Found: Scheduled message or attachment not found.'
- 'Error: Check HTTP response codes for more details.'
- '401 Unauthorized: Check your authentication.'
- Error responses are detailed in the xMatters REST API documentation.
- '404 Not Found: Ensure the endpoint and formId are correct.'
- '404 Not Found: Check the form ID.'
- '400 Bad Request: Check the request payload for required fields.'
- '404 Not Found: Integration or plan does not exist'
- '500 Internal Server Error: Check API status'
- '404 Not Found: The specified plan does not exist'
- '404 Not Found: Verify the plan ID or name.'
- '404 Not Found: Verify the planId or endpoint ID.'
- '201 Created: Successful request to create a scenario.'
- '200 OK: Successful request to update scenario.'
- 'Response code 401: Unauthorized access.'
- '401 Unauthorized: Recheck username/password or token expiration'
- '404 Not Found: Check groupID or shiftID.'
- 'Response code: The request did not succeed.'
- '404 Not Found: Verify the groupID or shiftID.'
- '200 OK: Success response with subscription form data'
- '401 Unauthorized: Recheck user permission settings'
- Error response codes can be found in the API documentation
- 'Error: Response code is other than 201.'
- '404 Not Found: The specified changeID does not exist'
- 'Unauthorized: Recheck your username and password.'
- '400 Bad Request: Check request parameters and body format.'
- 'Response code is: 401: Unauthorized.'
- '400 Bad Request: Invalid request format or missing required fields'
- '404 Not Found: Check the groupID or memberID provided.'
- '401 Unauthorized: Invalid credentials or token expired'
- Error for a list of response codes returned by the xMatters REST API
- HTTP Response Codes available in documentation.
- '201 Created: Successful creation of scheduled message.'
- '200 OK: Successful deletion of scheduled message.'
- '400 Bad Request: Invalid input for the request.'
- '404 Not Found: The specified service was not found.'
- '404 Not Found: Verify the group ID or shift ID'
- '200 OK: Successfully updated a shift.'
- '404 Not Found: The specified group ID does not exist.'
- '201 Created: Successfully created or updated the site.'
- '404 Not Found: The specified plan or subscription form does not exist.'
- '404 Not Found: Subscription not found'
- '404 Not Found: Check that the temporary absence ID is correct.'
- '400 Bad Request: Ensure required fields are included in the request.'
- '202: Event triggered'
- '404 Not Found: Check that the specified formId or id exists.'
- '403 Forbidden: Check if you have the right permissions.'
- '404 Not Found: Verify the groupID or memberID.'
- '400 Bad Request: Check your query parameters or request body.'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: Verify the group ID provided.'
- '404 Not Found: Ensure the incident ID is correct'
- '201 Created: Indicates successful modification.'
- 'Response code 401 Unauthorized: Invalid credentials'
- '500 Internal Server Error: An unexpected error occurred'
- '401 Unauthorized: The request did not succeed. Response code is: 401'
- '404 Not Found: Ensure the scenario ID or form ID is correct'
- '401 Unauthorized: Ensure valid username and password are provided.'
- '403 Forbidden: User does not have permission to view this subscription.'
- 'Invalid file type: Ensure the file is a .csv or .zip as required.'
- '404 Not Found: Check if the temporary absence ID is correct'
- '204 No Content: Resource not found'
- '400 Bad Request: Check parameters and request format'
- '404 Not Found: Verify if the resource exists'
- '201 Created: Message template created successfully.'
- '400 Bad Request: Check your request for missing or invalid parameters.'
- '200 OK: Success response with a list of Group objects.'
- 'Response code 201: Indicates group creation success.'
- 'Response code 400: Bad request, possibly due to invalid parameters.'
- 'Error code 200: Successful operation'
- 'Error code 400: Bad request, check parameters'
- 'Error code 404: Group not found'
- '201 Created: Indicates incident was successfully created.'
- '400 Bad Request: Check the query parameters for correctness.'
- '404 Not Found: Ensure the person ID or path is correct'
- '404 Not Found: Check the endpoint or resource you are trying to access.'
- '404 Not Found: Verify the scenario or form ID.'
- '400 Bad Request: Check request parameters and body format'
- '401 Unauthorized: Ensure valid authentication credentials'
- '404 Not Found: Service does not exist.'
- '404 Not Found: Check if the resource exists or the URL is correct'
- '404 Not Found: Verify the groupID or shiftID'
- '404 Not Found: Verify group ID or shift ID'
- '201 Created: Successfully created the subscription form.'
- '400 Bad Request: Check the request body for invalid values.'
- '404 Not Found: Check the subscription ID'
- 'PENDING: The job is still being processed.'
- '404 Not Found: Verify the temporary absence ID.'
- '200 OK: Device deleted successfully'
- '4xx: Client error, check request parameters'
- '202 ACCEPTED: Status changed'
- Response codes vary depending on the request.
- '404 Not Found: Verify the endpoint path or identifiers'
- '401 Unauthorized: Check the provided credentials.'
- '404 Not Found: Ensure the correct importId is used.'
- Other HTTP response codes may indicate errors.
- '403 Forbidden: Permission denied'
- '404 Not Found: Check the person ID'
- '404 Not Found: Ensure the endpoint path and parameters are correct.'
- '404 Not Found: Check the scenario or plan ID'
- '404 Not Found: Verify scenarioId or attachmentId'
- '201 Created: Scheduled message has been created successfully.'
- '204 No Content: Request was successful but there is no content to send'
- '400 Bad Request: The request was invalid'
- '404 Not Found: Verify the provided groupID or shiftID.'
- '400 Bad Request: Required parameters are missing or invalid.'
- 'Invalid credentials: Check username and password'
- '404 Not Found: Ensure the group or shift ID is correct'
- '404 Not Found: Verify the endpoint and identifiers'
- 'HTTP 201 Created: Subscription successfully created.'
- 'HTTP 200 OK: Subscription successfully modified.'
- '200 OK: Success response with absence data'
- 'Error: Invalid authentication credentials.'
- 'Error: Payload size exceeds limit.'
- '201 Created: Successful creation of a conference bridge'
- '200 OK: Successful deletion of a conference bridge'
- '404 Not Found: Check if the group or member exists'
- '404 Not Found: Verify the groupId is correct.'
- '201 Created: Successful incident creation.'
- 'Response code 404: Resource not found.'
- '404 Not Found: Verify planId or constantId'
- '201 Created: Plan endpoint successfully created'
- '200 OK: Plan endpoint successfully deleted'
- '404 Not Found: Plan or endpoint does not exist'
- 'HTTP 200 OK: Successful response'
- 'HTTP 201 Created: Scenario successfully created'
- 'HTTP 401 Unauthorized: Invalid credentials'
- 'HTTP 404 Not Found: Resource not found'
- '201 Created: Successful creation of a scenario or attachment'
- '200 OK: Successful update of a scenario or permissions'
- '404 Not Found: Scenario or form ID does not exist'
- '500 Internal Server Error: Retry the request later.'
- '400 Bad Request: Verify the request body format and parameters'
- '201 Created: Successful attachment upload.'
- '400 Bad Request: Check file formatting or size.'
- '401 Unauthorized: Check username/password or permissions.'
- '404 Not Found: The requested device does not exist.'
- Response code 202 Accepted and a request identifier in the response body.
- '400 Bad Request: Invalid request payload or parameters.'
- '200 OK: Successfully updated.'
- '403 Forbidden: Authentication credentials are invalid.'
- '404 Not Found: Check the import ID or endpoint path'
- '404 Not Found: Check the incident ID or plan ID'
- '401 Unauthorized: Check username or password'
- '404 Not Found: Plan or constant does not exist'
- '404 Not Found: Ensure the formId or scenarioId is correct.'
- '404 Not Found: Check if the scheduledMessageId or attachmentId is correct'
- '201 Created: Shift successfully added'
- '200 OK: Shift successfully updated'
- '404 Not Found: Verify the plan ID'
- '400 Bad Request: Check the request payload'
- '404: The resource could not be found.'
- 'HTTP 400: Bad Request - Check the request parameters.'
- 'HTTP 401: Unauthorized - Check the credentials.'
- 'HTTP 404: Not Found - Verify the resource path.'
- '401 Unauthorized: Ensure valid credentials.'
- '404 Not Found: Check the planId or formId'
- '400 Bad Request: Verify the request body parameters'
- '201 Created: Successfully created the message template'
- '404 Not Found: Ensure the groupID and memberID are correct.'
- '403 Forbidden: Check permissions for the user making the request.'
- '204 No Content: Indicates the group member does not exist.'
- '401 Unauthorized: Recheck credentials or API access rights'
- '404 Not Found: The specified integration or plan does not exist.'
- '400 Bad Request: Verify query parameters'
- '401 Unauthorized: Recheck username/password or permissions.'
- '201 Created: Successfully created or updated.'
- '404 Not Found: Check if the plan id is correct.'
- '404 Not Found: Check the URL or resource ID'
- '400 Bad Request: Check the request format and required parameters.'
- '204 No Content: Resource successfully deleted'
- '400 Bad Request: Request could not be understood by the server'
- 'Response code not successful: Indicates a failure in the request.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'Unauthorized: Recheck username and password'
- 'Not Found: Check the subscription ID'
- 'PENDING: The upload has been initiated but is not yet complete.'
- '400 Bad Request: Check the file and fileName parameters.'
- 'HTTP_RESPONSE_CODE: Check response codes for success or failure messages.'
- '201 Created: Change record created successfully.'
- '400 Bad Request: Verify request format and parameters'
- 'Error: Check response code for details.'
- '404 Not Found: The requested conference bridge does not exist.'
- Response code 200 OK and a pagination of Form objects in the response body.
- '404 Not Found: Verify the formId exists.'
- '400 Bad Request: Check the request format and body.'
- '200 OK: Success response with modified object.'
- '201 Created: Response option created successfully.'
- '404 Not Found: Check the group ID or member ID'
- '403 Forbidden: Ensure you have the right permissions'
- '400 Bad Request: Validate the request format and parameters'
- HTTP Response Codes for various error scenarios.
- '404 Not Found: Verify the endpoint and resource path.'
- '400 Bad Request: Check the request parameters and data.'
- '401 Unauthorized: Check authorization headers or credentials.'
- 'Response code 401 Unauthorized: Recheck authentication details.'
- '401 Unauthorized: Recheck credentials or API access rights.'
- '200 OK: Successful response with subscription form data.'
- '404 Not Found: The specified endpoint does not exist.'
- '400 Bad Request: Invalid request format or missing required fields.'
- '401 Unauthorized: Authentication failed. Check your credentials.'
- '500 Internal Server Error: Server error, try again later'
- '404 Not Found: Verify the device ID exists'
- '400 Bad Request: Check the request format and mandatory fields.'
- '404 Not Found: Verify the endpoint URL and resource identifiers.'
- HTTP Response Codes list is available in the documentation.
- '403 Forbidden: Ensure the user has permission to access the requested resource.'
- '404 Not Found: Verify the groupId or endpoint path.'
- '404 Not Found: Check the endpoint URL or resource ID.'
- '201 Created: Successfully modified or created the resource.'
- '200 OK: Successfully retrieved the resource.'
- '404 Not Found: Check if the planId or integrationId is correct'
- '200 OK: Request successful.'
- '4xx: Client error (e.g., unauthorized, not found)'
- '5xx: Server error'
- 'The request did not succeed. Response code is: {response.status_code}'
- '400 Bad Request: Check the request parameters and body for errors'
- '404 Not Found: Ensure the scenario ID or form ID is correct.'
- '201 Created: Scenario successfully updated'
- '200 OK: Permissions successfully updated'
- '404 Not Found: Scenario or form not found'
- 'HTTP_RESPONSE_CODES: See documentation for a list of response codes.'
- '400 Bad Request: Check the request body for missing or invalid parameters.'
- '404 Not Found: Verify the subscription ID is correct.'
- Response code 200 OK for successful requests
- '404 Not Found: Verify the device ID or endpoint path.'
- '400 Bad Request: Ensure required fields are provided in the request.'
- 'Error: Response code is not 200'
- '400 Bad Request: Invalid groupID or memberID.'
- '404 Not Found: Group or member not found.'
- '200 OK: Success response with paginated data.'
- '400 Bad Request: Check query parameters for validity.'
- '400 Bad Request: Check if the request body is correctly formatted.'
- '400 Bad Request: Check if the groupId is valid.'
- '401 Unauthorized: Ensure your username and password are correct.'
- '404 Not Found: Verify the incident ID or URL'
- '200 OK: Request succeeded and the response contains the requested data.'
- '404 Not Found: Verify the planId or constantId is correct'
- '200 OK: Successful response with scheduled messages.'
- '404 Not Found: Scheduled message or attachment does not exist.'
- '404 Not Found: Check if the group or shift ID exists'
- '404 Not Found: Check the provided groupID or endpoint'
- 'HTTP 200: Successful response'
- 'HTTP 401: Unauthorized access; check username and password'
- 'HTTP 404: Not found; check the endpoint and parameters'
- '201 Created: Successfully created a subscription form.'
- '200 OK: Successfully retrieved subscriptions.'
- '400 Bad Request: Check the request parameters for validity.'
- '404 Not Found: Check if the subscription ID is correct.'
- '404 Not Found: Check the endpoint or resource ID.'
- '401 Unauthorized: Recheck API credentials'
- '204 No Content: No content available for the requested operation'
- '201 Created: Comment added successfully.'
- '401 Unauthorized: Check username and password for authentication'
- Response code 200 OK and the Message Template Form section objects in the response
  body.
- The request did not succeed. Response code is not 200.
- '4xx: Client errors such as bad request or unauthorized access'
- '5xx: Server errors'
- '400 Bad Request: Check required fields and parameter formats.'
- '404 Not Found: Verify formId and endpoint path.'
- '404 Not Found: Verify the group ID or path'
- '400 Bad Request: Check request payload for required fields'
- '404 Not Found: Verify the integration ID'
- '403 Forbidden: Check user permissions or groups'
- 'HTTP Response Codes: Refer to the API documentation for a full list.'
- '404 Not Found: Check the plan ID or name'
- '404 Not Found: Verify the formId or scenarioId.'
- 'Response code not successful: Check input parameters.'
- '400 Bad Request: Invalid or missing parameters.'
- '404 Not Found: Subscription or resource not found.'
- '200 OK: Successful retrieval of event data.'
- '401 Unauthorized: Check authentication details.'
- '404 Not Found: Event ID may not exist.'
- '400 Bad Request: Verify request format and required fields.'
- '201 Created: Success response for created resources.'
- '404 Not Found: Verify endpoint and resource ID'
- 'The request did not succeed. Response code is: 200'
- 'The request did not succeed. Response code is: 204'
- '401 Unauthorized: Check username or password.'
- '4XX: Client errors, check request parameters.'
- '5XX: Server errors, try again later.'
- '204: The shift could not be found.'
- Error codes are listed in the xMatters REST API documentation.
- '401 Unauthorized: Check username/password.'
- '403 Forbidden: Insufficient permissions to access this resource.'
- '404 Not Found: Change not found'
- '400 Bad Request: Invalid parameters or request.'
- 'Unauthorized: Check user permissions.'
- 'Not Found: Requested resource does not exist.'
- '200 OK: Successful response with event data.'
- '404 Not Found: Event ID may be incorrect.'
- '200 OK: Request processed successfully.'
- '404 Not Found: Check the provided planId or formId.'
- '4xx: Client error, check request format and required fields.'
- 'Error: Response code may vary, check API documentation for specifics.'
- '400 Bad Request: Invalid request format or missing fields.'
- '404 Not Found: Ensure the group ID or member ID is correct.'
- '404 Not Found: Requested resource not found'
- '200 OK: Successful retrieval of data'
- '404 Not Found: Check the person ID or path.'
- '400 Bad Request: Check the request body parameters'
- '404 Not Found: Check if the library ID or shift ID exists.'
- '403 Forbidden: Insufficient permissions to access resource.'
- '200 OK: Success Response'
- 'Error: Refer to HTTP Response Codes'
- '404 Not Found: The specified absence ID does not exist.'
- Response code 200 OK and a Pagination of Incidents objects in the response body.
- 'Error: response code indicates a failure'
- '201 Created: The conference bridge was created successfully.'
- '200 OK: The conference bridge was deleted successfully.'
- '404 Not Found: The specified conference bridge ID does not exist.'
- '404 Not Found: Check the endpoint or identifier'
- '200 OK: Successful modification'
- '200 OK: Successful response with import job data.'
- '404 Not Found: Verify the incident ID or endpoint path.'
- '202 Accepted: Indicates successful triggering of an incident.'
- '401 Unauthorized: Recheck username/password for basic auth.'
- '404 Not Found: Verify planId and integrationId.'
- '400 Bad Request: Check query parameters.'
- '204 No Content: person not found'
- '400 Bad Request: Missing required fields'
- '404 Not Found: Plan with specified ID does not exist.'
- '201 Created: Successfully created or modified the resource.'
- '404 Not Found: The specified plan or constant was not found.'
- '201 Created: Successful scenario creation'
- '200 OK: Successful scenario update'
- '404 Not Found: Verify the service ID exists.'
- '404 Not Found: Check the serviceId'
- '400 Bad Request: Review request format'
- '404 Not Found: Verify the existence of the requested resource.'
- '404 Not Found: The specified site could not be found.'
- 'Error: Response code for failed upload or requests.'
- '403 Forbidden: Check user permissions'
- Other response codes indicate failure.
- '204: The device name could not be found.'
- '201: Created device name'
- '404 Not Found: The specified conference bridge or form does not exist.'
- '400 Bad Request: Check your request format and data.'
- '404 Not Found: Ensure the form ID is correct.'
- '204 No Content: If the group member does not exist'
- '404 Not Found: Ensure the group ID or name is valid.'
- '400 Bad Request: Review request parameters.'
- '400 Bad Request: Check query parameters'
- Response code indicates an error.
- '404 Not Found: Check formId or scenarioId.'
- '404 Not Found: The service with the specified ID does not exist.'
- '404 Not Found: Check group or shift identifiers'
- '200 OK: Shift parameters were successfully updated.'
- 'The request did not succeed. Response code is: [responseCode]'
- '201 Created: The subscription was successfully added.'
- '403 Forbidden: You do not have permission to create or modify this resource.'
- '401 Unauthorized: Recheck credentials and permissions.'
- '201 Created: Success response for attachment upload.'
- '404 Not Found: Ensure the change ID is correct.'
- Other error codes may be returned; see HTTP Response Codes documentation.
- '201 Created: Device name was successfully created.'
- '401 Unauthorized: Recheck your authentication credentials.'
- '404 Not Found: Verify the form ID and endpoint.'
- '404 Not Found: Check the import ID or endpoint.'
- '200 OK: Success response with import message object.'
- '401 Unauthorized: Check if the credentials provided are correct.'
- '404 Not Found: Check the incident ID or URL path'
- '400 Bad Request: Validate the request body parameters'
- '201 Created: The request succeeded and a new resource was created.'
- '400 Bad Request: The request could not be understood by the server due to malformed
  syntax.'
- 'Error: See HTTP Response Codes documentation'
- '404 Not Found: Check the endpoint or ID'
- '404 Not Found: Check the resource ID'
- '404 Not Found: Check the endpoint or resource identifier'
- '404 Not Found: Check the path or resource ID.'
- '400 Bad Request: Request data is invalid.'
- '404 Not Found: The specified service does not exist'
- '500 Internal Server Error: Try the request again later'
- '404 Not Found: Check group or shift IDs'
- '400 Bad Request: Validate input parameters'
- '201 Created: The request was successful and a site object has been created.'
- '400 Bad Request: Check required parameters.'
- '201 Created: Successfully created the subscription.'
- '403 Forbidden: Insufficient permissions to perform this action.'
- '404 Not Found: Verify the subscription or person ID.'
- 'Invalid file format: Ensure the uploaded file is in .csv format.'
- '201 Created: Successful creation of the device'
- '400 Bad Request: Check your request data'
- '404 Not Found: Device or endpoint does not exist'
- '201: Created successfully.'
- Response code 204 No Content
- '400 Bad Request: Review the request payload for required fields.'
- Other error codes can be found in the xMatters REST API documentation.
- '204 No Content: Group member does not exist'
- '404 Not Found: Check the groupID or memberID'
- '404 Not Found: Check the endpoint path or resource ID.'
- '401 Unauthorized: Recheck the authentication credentials.'
- '400 Bad Request: Verify the request parameters.'
- '201: Person successfully created.'
- '409: The user already exists.'
- '404 Not Found: Verify the plan ID or endpoint URL.'
- '404 Not Found: Verify the plan ID or endpoint path'
- '404 Not Found: Verify the planId or constantId'
- '201 Created: Request succeeded'
- '404 Not Found: Check if the formId or scenarioId is correct'
- Response code 201 Created and a Service Dependency Object in the response body.
- Response code 200 OK and a Service Dependency Object in the response body.
- '404 Not Found: Check the service ID or endpoint URL.'
- '201 Created: Shift has been successfully added.'
- '404 Not Found: Check if the group ID or shift ID is correct.'
- '500 Internal Server Error: There was an error processing the request.'
- '400 Bad Request: Ensure all required parameters are included'
- '400 Bad Request: Check the body parameters for errors.'
- '404 Not Found: Verify the specified plan ID and form ID are correct.'
- '401 Unauthorized: Check user permissions.'
- '201 Created: Subscription has been successfully created.'
- '404 Not Found: Ensure the device name exists'
- 'Error: Check your request for any invalid parameters.'
- '201 Created: Successfully created resource'
- '400 Bad Request: Check request payload or parameters'
- '403 Forbidden: Check your permissions for this action.'
- '404 Not Found: Ensure the group id or name is correct.'
- '403 Forbidden: Insufficient permissions to view or modify the incident.'
- '201 Created: Successfully modified or added an incident.'
- '404 Not Found: The specified incident or integration does not exist.'
- '404 Not Found: Check the scheduled message ID'
- '201 Created: Successfully created'
- '404 Not Found: Verify the resource ID exists.'
- '404 NOT FOUND: The resource could not be found.'
- '4xx: Client error, check your request parameters.'
- '5xx: Server error, try again later.'
- '201 Created: Response option modified'
- HTTP response codes can indicate various errors, refer to documentation for details.
- 'Response code 401 Unauthorized: Check credentials'
- 'Error response codes: see HTTP Response Codes documentation'
- '201 Created: Indicates the request was successful and an incident was created.'
- '400 Bad Request: Ensure that all required fields are provided.'
- '429 Too Many Requests: Rate limit exceeded'
- Response code 200 OK and a Person object in the response body.
- 'HTTP Response Codes: Refer to xMatters documentation for detailed error codes.'
- '404 Not Found: Check if the plan ID is correct.'
- '403 Forbidden: Ensure you have permission to access this resource.'
- '404 Not Found: Check the scenarioId or formId'
- '201 Created: The request was successful and a scheduled message was created.'
- '404 Not Found: Check if the library or plan ID is correct'
- '400 Bad Request: Review request format and parameters'
- '404 Not Found: Verify the libraryID or groupID/shiftID.'
- '401: Unauthorized access - check username and password'
- '400 Bad Request: Check your request body or parameters.'
- 'RESPONSE_CODE: Check the response for details.'
- '400 Bad Request: Check the request format and ensure the file is a valid .csv.'
- '200: Request succeeded.'
- '4xx: The request did not succeed.'
- '400 Bad Request: Check query parameters and their values'
- Response code 200 OK for success.
- Refer to HTTP Response Codes for error handling.
- '201 Created: Conference bridge successfully created'
- '200 OK: Conference bridge successfully deleted'
- '404 Not Found: Conference bridge not found'
- '404 Not Found: Verify the formId or planId is correct'
- '201 Created: Form section created successfully'
- '400 Bad Request: Invalid input or request format'
- '201: Successfully modified the response option'
- '400: Bad request, check the request body'
- '404: Form not found'
- '404 Not Found: Verify that the formId is correct.'
- '201 Created: Group was successfully created.'
- '400 Bad Request: The request could not be understood or was missing required parameters.'
- '201 Created: Indicates successful creation of an incident or timeline note.'
- '403: Forbidden: User does not have permission to access this endpoint.'
- '200 OK: Successful response with integration object.'
- '202 Accepted: Successful response for import job.'
- 'ERROR: Error codes not specified in the documentation.'
- '201 Created: Successfully created a device.'
- Other response codes may indicate errors.
- '404 Not Found: The specified conference bridge does not exist.'
- '404 Not Found: Check the URL parameters for correctness'
- '404 Not Found: Check the group ID or name'
- '400 Bad Request: Check the request parameters and body for errors.'
- '4XX: Client error, check request format and required fields.'
- '5XX: Server error, try again later.'
- '404 Not Found: Ensure the incident or integration ID is correct.'
- '201 Created: Success in creating a new person'
- '200 OK: Success in modifying or deleting a person'
- '404 Not Found: Ensure the plan ID exists.'
- 'Response code 200: Successful request.'
- 'Response code 401: Unauthorized access - check credentials.'
- 'Response code 404: Not Found - check the endpoint URL.'
- '201 Created: Successful creation of a resource.'
- '400 Bad Request: Invalid input in the request body.'
- '404 Not Found: Verify service ID'
- '201 Created: The site was successfully created or modified.'
- '404 Not Found: Check the subscription ID or endpoint path'
- '404 Not Found: Check the absence ID'
- '404 Not Found: Ensure the changeID is correct'
- '201 Created: Success response for form creation.'
- '404 Not Found: Verify the endpoint path or resource ID'
- '201 Created: Successfully created the form section.'
- '401 Unauthorized: Authentication failure.'
- '404 Not Found: The specified group or member was not found.'
- '400 Bad Request: Invalid request payload.'
- '201 Created: The group was successfully created.'
- '404 Not Found: Specified incident not found.'
- '201: User created successfully.'
- 'HTTP Response Codes: For a list of response codes returned by the xMatters REST
  API'
- '404 Not Found: Check endpoint URL'
- '404 Not Found: The requested scenario or attachment does not exist.'
- '404 Not Found: Check the service ID or endpoint'
- '404 Not Found: Verify the groupID or shiftID provided.'
- The action cannot be performed in the system
- Error codes returned by the xMatters REST API can be found in the HTTP Response
  Codes documentation.
- 'Error: For a list of response codes returned by the xMatters REST API, see [HTTP
  Response Codes]'
- 'ERROR: An error occurred during the upload process.'
- '404 Not Found: Change record does not exist.'
- '404 Not Found: Verify endpoint path.'
- 'Response code 400 Bad Request: The request was invalid'
- 'Response code 401 Unauthorized: Authentication failed'
- '201 Created: Successfully created the message template.'
- '400 Bad Request: Check the format of the request body'
- 'Response code 404 Not Found: Check the endpoint path'
- '200 OK: Indicates a successful request.'
- '401 Unauthorized: Invalid credentials or permissions'
- '404 Not Found: The specified import job does not exist'
- '400 Bad Request: Check the request format or parameters'
- 'HTTP 401: Unauthorized, check your credentials.'
- 'HTTP 404: Not Found, check the endpoint.'
- '404 Not Found: Verify the scenarioId or attachmentId'
- '201 Created: Successfully created a service'
- '404 Not Found: Service not found'
- '200: Successful request'
- 'Response code 201: Shift occurrence was successfully restored.'
- The feature is not available in the Integration Builder.
- '201 Created: Change record created'
- '400 Bad Request: Invalid request format or missing parameters'
- '204 No Content: The requested resource does not exist.'
- '404 Not Found: Check if the conference bridge exists'
- '400 Bad Request: Check the request payload.'
- '401 Unauthorized: Recheck credentials or ensure access is granted'
- '404 Not Found: Check if groupID or memberID is correct.'
- '400 Bad Request: Check if the request body is formatted correctly.'
- '403 Forbidden: Insufficient permissions to access the resource'
- '404 Not Found: Check the URL path'
- '204 No Content: The specified person could not be found.'
- '200 OK: Resource successfully deleted'
- '401 Unauthorized: Check credentials provided'
- '400 Bad Request: Check the request parameters and file format.'
- '200 OK: Success response for retrieving devices.'
- 'HTTP Response Codes: Refer to the HTTP Response Codes documentation for more details.'
- 'Response code 201 Created: Successfully created a conference bridge.'
- 'Response code 200 OK: Successfully deleted the conference bridge.'
- Error codes from the xMatters REST API are defined in HTTP Response Codes documentation.
- '400 Bad Request: Validate the request body format and required fields'
- '404 Not Found: Check the incident or integration ID.'
- '201 Created: Person successfully modified'
- 'Response code 401 Unauthorized: Check credentials.'
- 'Response code 500 Internal Server Error: Check server status.'
- 'HTTP 401: Unauthorized access due to invalid credentials'
- 'HTTP 404: Resource not found'
- '404 Not Found: Verify the planId and constantId are correct.'
- '404 Not Found: The specified scenario or form does not exist'
- '401 Unauthorized: Verify user credentials and permissions.'
- '404 Not Found: Ensure the scenario or form ID is valid.'
- '204 No Content: Request succeeded, but no content to return'
- '200 OK: Successful deletion of shared library.'
- 'Response code is: <responseCode>'
- '201 Created: Indicates successful creation of a subscription form.'
- '200 OK: Indicates successful retrieval of subscriptions.'
- '404 Not Found: The specified absence does not exist.'
- 'PENDING: The upload is currently processing.'
- '201 Created: Successfully uploaded'
- '404 Not Found: The event could not be found. Check the event ID.'
- '201 Created: Template successfully created'
- 'HTTP Response Codes: Refer to the xMatters REST API documentation.'
- '404 Not Found: Check if the incident or integration ID is correct.'
- '200 OK: Successful response with on-call objects'
- '4xx: Client error, check request formatting and parameters'
- '401 Unauthorized: Check credentials or token expiration.'
- '404 Not Found: Scenario or form not found.'
- Response code indicates failure if not 200 or 201.
- '401 Unauthorized: Invalid credentials or insufficient permissions.'
- '400 Bad Request: Validate request parameters and body structure.'
- '404 Not Found: Ensure the temporary absence ID is correct.'
- 'Error: Response code is: <status_code>'
- '401 Unauthorized: Ensure correct authentication credentials are used.'
- '404 Not Found: Check if the formId is valid'
- '400 Bad Request: Check the request body for required parameters'
- '404 Not Found: Verify the group ID or endpoint'
- '404 Not Found: Check if the specified integration or plan exists'
- '401 Unauthorized: Check client ID and credentials.'
- '404 Not Found: Ensure the plan ID and integration ID are correct.'
- '400 Bad Request: Invalid input or parameters'
- '401 Unauthorized: Authentication failure'
- '500 Internal Server Error: Unexpected server error'
- '400 Bad Request: The request is invalid.'
- '404 Not Found: Check if the scheduledMessageId or attachmentId is correct.'
- '404 Not Found: Check the service ID or dependent service ID'
- '404 Not Found: Check the libraryId or planId'
- '404 Not Found: Verify the endpoint or resource.'
- '500 Internal Server Error: Server issues, try again later.'
- 'The request did not succeed. Response code is: 201'
- '400 Bad Request: Ensure all required fields are provided in the request.'
- 'HTTP Response Codes: For a list of response codes returned by the xMatters REST
  API, see [HTTP Response Codes](#http-response-codes).'
- Other error codes may apply based on HTTP response codes.
- '401 Unauthorized: Recheck permissions or credentials'
- '404 Not Found: Event not found.'
- '500 Internal Server Error: Unexpected error occurred.'
- '401 Unauthorized: Check your credentials and OAuth scopes.'
- '400 Bad Request: Ensure the parameters are correctly formatted.'
- '404 Not Found: Check if the group ID or member ID is correct'
- '404 Not Found: Check if the group id or name is correct.'
- '201 Created: Indicates a successful request.'
- '404 Not Found: Ensure the planId or integrationId is correct.'
- '200 OK: Successfully modified or retrieved a person.'
- '404 Not Found: Ensure the plan ID or name is correct.'
- '404 Not Found: Check the endpoint URL or resource ID'
- '404 Not Found: Check the formId or scenarioId'
- '404 Not Found: Scheduled message does not exist'
- '400 Bad Request: Invalid data provided.'
- 'COMPLETED: The upload has completed.'
- '201 Created: Success response for a created attachment.'
- 'Error: Response code is: 400 or 500'
- '200 OK: Success response when the device is deleted.'
- Other error codes are documented in the xMatters REST API.
- 'Error: response code is 4xx or 5xx'
- '201 Created: The response option was modified successfully.'
- 'Error: For a list of response codes returned by the xMatters REST API, see the
  documentation.'
- 'Response code 201: Resource created.'
- '404 Not Found: Ensure the importId is correct.'
- '201 Created: Indicates success for incident creation.'
- '500 Internal Server Error: Contact support'
- '200 OK: Successful response with scenarios data.'
- '404 Not Found: Verify the provided group ID or shift ID.'
- '4XX: Client error, check request parameters.'
- Invalid subscription ID
- Unauthorized access
- 'HTTP 200: OK'
- 'HTTP 204: No Content'
- 'Other Error: The request did not succeed.'
- 'Error codes: See HTTP Response Codes in documentation.'
- '201 Created: Successful creation of the message template'
- '404 Not Found: Check the resource path or ID'
- '201 Created: Successful creation of form or message template.'
- Error response codes can be found in the xMatters REST API documentation.
- For a list of response codes returned by the xMatters REST API, refer to the HTTP
  Response Codes documentation.
- '200 OK: Success response with group objects.'
- '201 Created: Group has been created successfully.'
- 'Not Found: Ensure the import ID is correct.'
- 'Error: Check HTTP response codes for other potential issues.'
- '4xx: Client errors'
- '404 Not Found: The specified plan or constant does not exist.'
- '404 Not Found: Check the scenario or resource identifier.'
- '200 OK: Scheduled message deleted successfully.'
- Response code indicates errors if the request did not succeed.
- '400 Bad Request: Check the parameters sent in the request.'
- 'PENDING: The upload is currently being processed.'
- 'ERROR: Check the uploaded file format and content.'
- '201 Created: Successful file upload'
- 'Response code 200 OK: Successful deletion.'
- 'Response code 204: The device could not be found.'
- '404 Not Found: Event ID not found.'
- '404 Not Found: The specified formId does not exist.'
- '400 Bad Request: Check required fields for group creation or modification.'
- '500 Internal Server Error: Retry the request.'
- '404 Not Found: Check endpoint or resource existence'
- '404 Not Found: The specified person ID does not exist.'
- '400 Bad Request: Check the payload structure and required fields.'
- Error responses are documented in the HTTP Response Codes section.
- '401 Unauthorized: Recheck user authentication.'
- '201 Created: Scheduled message was successfully created'
- '200 OK: The request was successful'
- '401 Unauthorized: Recheck authentication'
- '401 Unauthorized: Recheck user credentials or permissions.'
- 'Error: Response code other than 201 indicates a failure.'
- 'HTTP 401: Unauthorized - Check your authentication credentials.'
- 'HTTP 404: Not Found - Verify the planId or formId.'
- '4xx: Client errors, check the request parameters.'
- '401 Unauthorized: Verify that the authentication credentials are correct.'
- '404 Not Found: Ensure the endpoint exists and is correct.'
- 'Response code 200 OK: Success.'
- 'Unauthorized: Invalid username or password'
- 'Not Found: The requested resource does not exist'
- 'Bad Request: The request was malformed or missing required parameters'
- '404 Not Found: Check the scenario ID or form ID.'
- '404: Scenario not found'
- '404 Not Found: Check the provided UUIDs for formId or scenarioId.'
- '404 Not Found: Ensure the specified service exists.'
- '404 Not Found: Ensure the shared library or plan exists.'
- '400 Bad Request: Check request parameters for validity'
- '404 Not Found: Ensure groupID and shiftID are correct'
- '201 Created: Indicates a successful operation.'
- '403 Forbidden: Permission denied for accessing subscribers.'
- '200 OK: Retrieved device.'
- '400 Bad Request: Check the format of the request'
- '404 Not Found: Verify the existence of the specified plan or form'
- '200 OK: Indicates successful update of resource.'
- '404 Not Found: Check the form ID or endpoint path.'
- Response code 200 OK signifies success.
- Check response codes for errors in API calls.
- Member not found.
- Modification did not succeed.
- '404 Not Found: Check if the groupId is valid'
- '400 Bad Request: Check the payload for required fields'
- '400 Bad Request: Check your request body for missing or invalid parameters.'
- 'HTTP Response Codes: Check API documentation for details.'
- '201: Created user'
- 'HTTP 200 OK: Success'
- 'HTTP 401 Unauthorized: Recheck username and password'
- 'HTTP 400 Bad Request: Check request body for required fields'
- '201 Created: Successful creation of a person.'
- '200 OK: Successful modification or deletion.'
- '4xx: Client errors such as invalid request.'
- '401 Unauthorized: Check your username or password.'
- '404 Not Found: Service not found with the specified ID.'
- '400 Bad Request: Review request body for errors'
- '400 Bad Request: Check the request parameters and body for correctness.'
- '401 Unauthorized: Ensure valid authentication credentials are provided.'
- '404 Not Found: Verify the subscription ID exists.'
- '404 Not Found: The person could not be found.'
- '201 Created: Successful response for device creation.'
- '200 OK: Successful response for device modification.'
- '204 No Content: Device could not be found.'
- '404 Not Found: Verify the device ID is correct'
- '404: The event could not be found.'
- '400 Bad Request: Check parameters for correctness.'
- 'Error: Check response codes for specific errors.'
- '204 No Content: Member not found'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- 'HTTP 400: Bad Request - Check request format and required fields.'
- 'HTTP 401: Unauthorized - Verify authentication credentials.'
- 'HTTP 404: Not Found - Check endpoint URL.'
- '404 Not Found: Check the integration or plan ID.'
- '404 Not Found: Check if the integration ID is correct.'
- Error responses may include various HTTP response codes.
- '404 Not Found: Verify planId or constantId.'
- HTTP Response Codes for error handling.
- '401 Unauthorized: User does not have permission to view this subscription.'
- 'PENDING: The upload job is still processing.'
- '400 Bad Request: Ensure all required fields are included in the request body for
  creating a temporary absence'
- '404 Not Found: User not found.'
- '400 Bad Request: Check the request format and data.'
- '200 OK: Device successfully deleted.'
- 'Error codes: See HTTP Response Codes documentation.'
- '201 Created: Message template created successfully'
- '201 Created: The form/message template was created successfully.'
- '200 OK: Successfully updated form or message template.'
- '403 Forbidden: Check permissions for the action'
- '204 No Content: Indicates that the group member does not exist.'
- For errors, refer to the HTTP Response Codes in the documentation.
- '400 Bad Request: Invalid input'
- '404 Not Found: Ensure the person ID is correct.'
- '404 Not Found: Check the ID or path provided.'
- '200 OK: Successful update of a resource.'
- '400 Bad Request: Incorrect request format or parameters.'
- '404 Not Found: The specified scheduled message does not exist.'
- '201 Created: Dependency created successfully.'
- '200 OK: Dependency modified successfully.'
- '200 OK: Shift parameters updated successfully.'
- '404 Not Found: Check the group ID and shift ID.'
- '201 Created: Shift occurrence restored.'
- '404 Not Found: Ensure the specified plan ID exists.'
- '400 Bad Request: Check the request body for required fields and formatting.'
- '404 Not Found: Ensure the subscription ID exists.'
- '401 Unauthorized: Verify authentication details.'
- '404 Not Found: Check the requested resource ID'
- 'PENDING: Upload job is still processing'
- '201 Created: Successful upload of attachment'
- 'Error: Response code is: [insert error code]'
- '201 Created: Change record successfully created.'
- '200 OK: Successfully modified or deleted the device.'
- '404 Not Found: Ensure the endpoint exists or the URL is correct.'
- Error responses can vary based on the action requested.
- '404 Not Found: Verify the resource ID.'
- 'HTTP Response Codes: See documentation for specific error codes.'
- '400 Bad Request: Check the parameters provided'
- '404 Not Found: Ensure the group ID exists'
- '200 OK: Successful retrieval of messages.'
- '404 Not Found: Check the incident ID or identifier'
- '400 Bad Request: Ensure all required fields are populated'
- '404 Not Found: Check the incident ID or plan ID.'
- '201 Created: The request has been fulfilled.'
- '403 Forbidden: Authentication credentials were missing or incorrect.'
- '404 Not Found: Check the endpoint and parameters'
- '201 Created: Successful creation of a scenario or attachment.'
- '200 OK: Successful update of a scenario or permissions.'
- 'Error: Check HTTP Response Codes for other error scenarios.'
- '404: Site not found'
- '409: Conflict - Site already exists'
- '400 Bad Request: Check your request body for errors.'
- '429 Too many requests: Request rate limit exceeded.'
- '404 Not Found: Verify the changeID exists.'
- '4xx: Client error, check the request and parameters.'
- '200 OK: Successful retrieval of event suppression records'
- '200 OK: Successful deletion of a resource.'
- '201 Created: Resource modified successfully'
- '404 Not Found: Verify resource ID'
- '201 Created: Successful request to create a scenario or attachment.'
- '200 OK: Successful request to update sender permissions.'
- Response code 201 indicates the attachment was successfully created.
- '400 Bad Request: Check required parameters and data format.'
- '404 Not Found: Ensure the scheduled message ID or attachment ID is correct.'
- Response codes for errors available in HTTP Response Codes documentation.
- '404 Not Found: Group ID not found'
- '400 Bad Request: Check that all required fields are included.'
- '404 Not Found: Ensure the temporaryAbsenceId is valid when deleting.'
- 'The request did not succeed. Response code is: <responseCode>'
- '404 Not Found: Check the endpoint path or ID.'
- 'Error: Invalid request.'
- '4xx: Client error'
- Error codes returned by the xMatters REST API available in documentation.
- '400 Bad Request: Check input parameters.'
- '400 Bad Request: Ensure request body is formatted correctly.'
- '200 OK: Integration successfully modified.'
- '404 Not Found: Person or group does not exist.'
- '401 Unauthorized: Recheck credentials or access permissions.'
- '400 Bad Request: Invalid parameters were supplied.'
- '404 Not Found: Verify endpoint path or plan ID.'
- '404 Not Found: Check subscription ID'
- '404 Not Found: Check the subscription or person ID'
- '201 Created: Device name added successfully'
- '404 Not Found: Conference bridge ID does not exist'
- 'Error: Response code indicates failure'
- '400 Bad Request: Check request structure and parameters'
- 'Error: Response code is: {code} for various error scenarios.'
- 'The request did not succeed. Response code is: 4xx or 5xx'
- '401 Unauthorized: Recheck OAuth scopes or credentials.'
- 'REQUEST_NOT_SUCCESSFUL: Check the request format or parameter values.'
- 'PERSON_NOT_FOUND: The specified person does not exist.'
- '404 Not Found: Check the specified planId.'
- '404 Not Found: Verify the scenario or form ID'
- '400 Bad Request: The request was malformed.'
- '201 Created: Successful creation of a site'
- '401 Unauthorized: Recheck user permissions.'
- '200 OK: Success response with pagination of Plan objects.'
- '201 Created: Conference bridge created successfully'
- '201 Created: Successful operation.'
- '400 Bad Request: Check the body parameters for correctness.'
- '404 Not Found: Verify group ID'
- '404 Not Found: Verify the group ID or member ID.'
- '404 Not Found: Verify the groupId in the request.'
- 'Error: For a list of response codes returned by the xMatters REST API, see HTTP
  Response codes.'
- '4xx: Client error, check request format or parameters.'
- '404 Not Found: Check the personID or resource path'
- '201 Created: Person object created successfully.'
- '403 Forbidden: Ensure the user has permission to access the plan'
- '201 Created: The request was successful and a resource was created.'
- '404 Not Found: Verify endpoint and resource.'
- '201 Created: Successfully created the endpoint.'
- '200 OK: Successfully deleted the endpoint.'
- '404 Not Found: The specified plan or endpoint does not exist.'
- 'HTTP Response Codes: Check the documentation for error responses.'
- 'Response code is: 200: Updated successfully'
- '404 Not Found: Check import ID or endpoint URL'
- '200 OK: Indicates successful retrieval of resource.'
- 'Response code 401 Unauthorized: Recheck authentication credentials.'
- '400 Bad Request: Check provided parameters'
- '201 Created: User successfully created'
- Error codes and messages related to HTTP response codes.
- '200 OK: Scenario updated.'
- '404 Not Found: Check the service ID or URL'
- '4XX: Client error, check the request parameters.'
- '404 Not Found: Check the URL or resource identifier.'
- '400 Bad Request: Check required parameters and their formats.'
- '404 Not Found: Ensure the specified temporary absence ID is correct.'
- '404 Not Found: Check the change ID provided.'
- '401 Unauthorized: Verify credentials or permissions.'
- '200 OK: Successfully retrieved the requested data'
- '401 Unauthorized: Authentication credentials are missing or invalid'
- '200 OK: Successfully deleted the resource'
- For a list of response codes, see HTTP Response Codes.
- '400 Bad Request: The request was malformed or invalid.'
- '201 Created: Incident has been successfully created'
- '404 Not Found: Check the personID provided.'
- '404 Not Found: Service with specified UUID does not exist'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '409: Site already exists'
- '404 Not Found: Check the group ID or shift ID.'
- '409: The action cannot be performed in the system.'
- '200: Response code indicating success.'
- '404 Not Found: Verify the endpoint and resource path'
- '403 Forbidden: Insufficient permissions to access this resource'
- '201 Created: Successful creation of the subscription.'
- '200 OK: Successful modification of the subscription.'
- '400 Bad Request: Verify request body parameters.'
- '400 Bad Request: Invalid parameters were provided.'
- 'HTTP Response Codes: Check documentation for details.'
- '400 Bad Request: Check the request syntax.'
- '400 Bad Request: Check the request format and required fields'
- '404 Not Found: Check if the groupId is valid.'
- '500 Internal Server Error: Server encountered an error.'
- '404 Not Found: Verify the requested resource exists'
- '404 Not Found: Verify the person ID or targetName.'
- '400 Bad Request: Check required parameters for the API call.'
- '404 Not Found: Subscription or user not found'
- '403 Forbidden: Authentication failed or user does not have permission'
- 'Error: Response code is: [responseCode]'
- '201 Created: Change record created successfully'
- '404 Not Found: The requested device name does not exist.'
- '404 Not Found: Verify the event ID'
- For error responses, see HTTP Response Codes documentation.
- Response codes returned by the xMatters REST API can vary based on the request.
- '201 Created: Incident was successfully created'
- '201 Created: Successfully modified.'
- '200 OK: Successfully deleted.'
- '200 OK: Successfully deleted the constant.'
- '400 Bad Request: Check the input data and structure'
- 'Invalid serviceId: Check if the serviceId exists.'
- 'Invalid dependentServiceId: Check if the dependentServiceId exists.'
- '404 Not Found: Check the service ID or path'
- '201 Created: Success response when creating a site.'
- '200 OK: Successful response with subscription data.'
- '404 Not Found: Verify the change ID or endpoint'
- '204: No content found'
- '404 Not Found: Verify formId or planId.'
- 'Error: Response code is:'
- 'Response code 201 Created: A group object was created.'
- 'Response code 200 OK: A group object was modified.'
- 'Response code 200 OK: A group object was deleted.'
- '404 Not Found: Check import ID or incident ID'
- '404 Not Found: Check incidentID or integrationId'
- '404 Not Found: The specified endpoint does not exist or the resource is not available'
- '200 OK: Permission settings applied.'
- 'Response code error: Check API documentation for specific error codes.'
- '404 Not Found: Check if the device name exists.'
- '201 Created: Conference Bridge created successfully.'
- '200 OK: Conference Bridge deleted successfully.'
- Error response codes may vary based on the specific request.
- 'Error: See HTTP Response Codes for more details.'
- '404 Not Found: Check if the group ID is correct'
- '201 Created: Person object successfully created'
- '200 OK: Person object successfully modified'
- '404 Not Found: Ensure the planId is correct.'
- '201 Created: Successfully created scenario or attachment.'
- '204 No Content: Resource deleted or not found'
- '200: Successful operation.'
- '201 Created: Successful creation of message template.'
- 'Response code is: 201: Created'
- 'Response code is: 200: Updated recipients.'
- 'Response code is: 200: Updated sender permissions.'
- '404 Not Found: Group or member does not exist.'
- '404 Not Found: Check if the group exists'
- '404 Not Found: Check if the import ID exists'
- '404 Not Found: Verify the groupId provided in the request.'
- 'Unauthorized: Check your credentials'
- 'Not Found: Verify the import ID'
- '400 Bad Request: Check your request format and required fields.'
- '200 OK: The request was processed successfully.'
- '404 Not Found: Check endpoint or resource ID'
- '201 Created: Scheduled message has been created.'
- '400 Bad Request: Invalid request format or missing required parameters.'
- '404 Not Found: The service could not be found'
- '404 Not Found: Verify the group ID and shift ID'
- '200 OK: Successful deletion or retrieval.'
- '404 Not Found: The requested change does not exist.'
- '400 Bad Request: Invalid data in request.'
- '404 Not Found: Verify eventId is correct'
- '202 Accepted: Successfully triggered the event.'
- HTTP response codes can vary based on the request and the state of the system.
- 'Response code 200 OK: Successful operation.'
- Response codes for errors can be found in the HTTP Response Codes documentation.
- Response code 200 OK and a Group object in the response body.
- Error codes returned by the xMatters REST API.
- '404 Not Found: Ensure the incident ID or plan ID is correct.'
- 'HTTP Response Codes: See [HTTP Response Codes](#http-response-codes).'
- '401 Unauthorized: Check OAuth credentials and tokens.'
- '404 Not Found: Check the requested resource'
- '200 OK: Successful deletion or modification.'
- '409 Conflict: Scenario already exists or validation errors'
- '400 Bad Request: Missing required fields in request body'
- '200 OK: The scenario was successfully updated.'
- '404 Not Found: The scheduled message was not found'
- '400 Bad Request: The request did not succeed. Check parameters.'
- '201 Created: Success response for successful creation'
- '404 Not Found: Verify the endpoint and resource exists.'
- '404 Not Found: Event ID does not exist'
- '404 Not Found: Ensure the event ID is correct'
- '404 Not Found: Ensure the formId exists.'
- '200 OK: Success response with a paginated list of Group objects.'
- '404 Not Found: Check the importId or resource path'
- '201 Created: Successful response for incident modification'
- '404 Not Found: Requested resource does not exist.'
- '201 Created: Successfully created or modified a resource.'
- '400 Bad Request: Check if required fields are missing or invalid.'
- 'Error: Refer to HTTP Response Codes for details.'
- '400 Bad Request: Ensure all required fields are provided in the request'
- 'Error: Check response code for more details.'
- 'Success: Response code 200 OK'
- '201 Created: Successfully created message template.'
- '404 Not Found: Check the group or member IDs'
- '404 Not Found: Check that the group ID or name is correct.'
- 'RESPONSE_CODE: recheck your request parameters or authentication'
- HTTP Response Codes are available in the API documentation.
- '200 OK: Successfully retrieved the integration.'
- '400 Bad Request: Check the request syntax or parameters.'
- '201 Created: Successful creation of the scenario.'
- '200 OK: Successful update of the scenario.'
- '200 OK: Success response with scheduled messages.'
- '404 Not Found: The requested service does not exist.'
- '201 Created: Shift was successfully added'
- '200 OK: Shift was successfully updated'
- '404 Not Found: Check the group ID or shift ID'
- '404 Not Found: Verify subscription ID.'
- '404 Not Found: Check the temporary absence ID provided'
- '201 Created: File uploaded successfully.'
- 'Error: response code is ...'
- '200 OK: Form object returned.'
- '200 OK: Successful modification of response option'
- '201 Created: Successful creation of response option'
- 'Error: Response code is not 200 or 201'
- '404 Not Found: Check if the group id/name exists'
- '200: Success response indicating records retrieved'
- '400: Bad request, check the groupId format'
- '401: Unauthorized, check username and password'
- '404: Not found, the specified group does not exist'
- 'The request did not succeed. Response code is: 403'
- '400 Bad Request: Check your request body for required fields.'
- '4xx: Client Errors'
- '5xx: Server Errors'
- 'Unauthorized: Check username and password'
- '404 Not Found: Verify the personID or endpoint path'
- 'Success: Response code 201 Created'
- '201 Created: Success response for scenario update.'
- '404 Not Found: Check if the group or shift exists'
- '401 Unauthorized: Verify the username and password.'
- '404 Not Found: Verify subscription ID or endpoint path'
- '401 Unauthorized: Recheck credentials or access rights'
- '404 Not Found: The specified event ID does not exist.'
- '404 Not Found: Check if the event ID is correct.'
- '200 OK: Successfully updated a resource.'
- '404 Not Found: Check if the group or member IDs are correct.'
- '401 Unauthorized: Check credentials or token.'
- '200 OK: Group was successfully modified.'
- '200 OK: Group was successfully deleted.'
- '201 Created: The incident was successfully created.'
- '202 Accepted: The incident was successfully triggered.'
- 'The request did not succeed. Response code is: 401'
- 'Unauthorized: Recheck credentials or permissions.'
- 'Not Found: Check the person ID or path.'
- '400 Bad Request: Verify required fields and data format'
- '404 Not Found: Ensure the service ID or scheduled message ID is correct.'
- '200 OK: Indicates success for DELETE requests.'
- '401 Unauthorized: Check your authentication details.'
- '404 Not Found: Check the subscription ID.'
- 'Error: Response code is: 4xx/5xx'
- '4xx: Client errors or invalid requests.'
- '404 Not Found: Ensure the device ID is correct or that the device exists.'
- '401 Unauthorized: Credentials required for authentication.'
- '404 Not Found: Verify the URL or the ID provided.'
- '400 Bad Request: Check request data format.'
- '401 Unauthorized: Ensure correct username and password are used.'
- '400 Bad Request: Check request formatting and required fields'
- '401 Unauthorized: Invalid credentials or expired token'
- '404 Not Found: Check if the endpoint is correct'
- '404 Not Found: Verify the endpoint and resource.'
- '400 Bad Request: Check the request format or required fields.'
- '404 Not Found: The specified plan could not be found.'
- '404 Not Found: Scenario or form ID not valid.'
- 'Response code 400: Bad Request, check parameters.'
- '201 Created: Successful creation of subscription form.'
- '200 OK: Successful update of subscription form.'
- 'PENDING: The upload job is currently processing.'
- '404 Not Found: The requested temporary absence does not exist.'
- '400 Bad Request: Invalid payload or parameters.'
- Response code 200 OK indicates a successful operation.
- '404 Not Found: Check if the incident ID is correct.'
- Error for response codes returned by the xMatters REST API
- '401 Unauthorized: Check client ID or user credentials'
- '500 Internal Server Error: Retry the request after a short delay'
- '201 Created: Person created or modified.'
- '404 Not Found: Check the person ID or endpoint path.'
- '404 Not Found: Ensure the scheduledMessageId is correct'
- '201 Created: Successfully created the scheduled message.'
- '200 OK: Successfully deleted the scheduled message.'
- '404 Not Found: Check if the specified group or shift exists.'
- '404 Not Found: Verify the subscription ID'
- '400 Bad Request: Check request body parameters'
- '404 Not Found: Check if the ID exists or is valid.'
- '200 OK: Response code for successful requests.'
- Error codes from the xMatters REST API may vary.
- '404 Not Found: Verify the formId or planId provided in the request.'
- '404 Not Found: Verify that the group ID or member ID exists.'
- '4XX: Client Error'
- '5XX: Server Error'
- 'HTTP 401: Unauthorized, check username and password'
- 'HTTP 404: Not Found, check the scenario ID'
- 'HTTP Response Codes: See documentation for the list of response codes.'
- '200 OK: Success response for requests.'
- Response code indicates failure for unauthorized requests or missing parameters.
- '201 Created: Site created successfully'
- '400 Bad Request: Ensure all required fields are filled'
- Error codes may vary; refer to HTTP Response Codes for details.
- '400 Bad Request: Ensure correct file format and parameters.'
- '201 Created: Successfully created an attachment.'
- '400 Bad Request: Check the body parameters.'
- '404 Not Found: The requested device name could not be found'
- '200 OK: Event retrieved successfully.'
- '200 OK: Status unchanged, request succeeded.'
- '200 OK: Resource successfully updated'
- '400 Bad Request: Check request body syntax or parameters'
- '400 Bad Request: Check your request syntax and parameters.'
- '400 Bad Request: Ensure the request body parameters are valid.'
- '404 Not Found: Ensure the plan ID or integration ID is correct'
- '401 Unauthorized: Check credentials or token expiration'
- 'Response code is not 200: The request did not succeed.'
- '200 OK: Successfully retrieved plans.'
- '404 Not Found: Ensure the plan ID exists'
- '404 Not Found: Verify the resource exists with the specified identifier.'
- '200: Success response'
- '204: No content – the shift could not be found.'
- 'Unauthorized: Check your credentials.'
- 'Not Found: Verify the subscription ID.'
- '404 Not Found: Scenario not found'
- '404 Not Found: Verify planId or formId'
- Error codes as listed in the HTTP Response Codes documentation.
- 'HTTP Response Codes: Refer to the documentation for a complete list'
- '400 Bad Request: Check your request for malformed syntax.'
- '403 Forbidden: The authenticated user does not have permission to access this resource.'
- '404 Not Found: Check the groupId or endpoint'
- '401 Unauthorized: Check credentials for API access.'
- '401 Unauthorized: Verify the credentials provided.'
- '404 Not Found: The requested person could not be found.'
- 'Invalid credentials: Check username and password.'
- '404 Not Found: Verify the person ID or endpoint path.'
- '403 Forbidden: Check permissions'
- '401 Unauthorized: Invalid credentials or permissions.'
- '200 OK: Permissions set successfully.'
- '400 Bad Request: Check for required parameters.'
- '401 Unauthorized: Recheck API credentials or permissions'
- '404 Not Found: Check if the absence ID is correct.'
- '400 Bad Request: Ensure all required fields are included in requests.'
- '404 Not Found: Check the change ID or endpoint URL'
- '201 Created: Successfully created a device name.'
- '404 Not Found: Ensure the correct planId or formId is used'
- '400 Bad Request: Check for errors in your request body.'
- 'Error: Validate the input and ensure it meets the required specifications.'
- '400 Bad Request: Ensure all required fields are filled.'
- '400 Bad Request: Invalid input provided'
- '401 Unauthorized: Verify that the username and password are correct.'
- '404 Not Found: Check the endpoint URL'
- 'Error: For a list of response codes returned by the xMatters REST API, check HTTP
  Response Codes.'
- '400 Bad Request: Check parameters for validity.'
- '204 No Content: Resource deleted successfully.'
- '401 Unauthorized: Invalid credentials or unauthorized access.'
- '400 Bad Request: Indicates a problem with the submitted parameters.'
- '400 Bad Request: Missing required fields in the request.'
- '401 Unauthorized: Check user permissions or authentication credentials.'
- 'Unauthorized: Check credentials'
- 'Not Found: Verify subscription ID'
- 'Bad Request: Check request format or parameters'
- 'Response code 200 OK: Successful operation'
- 'Response code 400: Bad request, check parameters'
- 'Response code 401: Unauthorized, check credentials'
- '404 Not Found: Check if the resource exists or the ID is correct'
- '401 Unauthorized: Check API token or OAuth credentials.'
- 'Error: Check API Response Codes for details.'
- Using legacy form identifier will result in an error.
- '201 Created: Successfully created a new resource.'
- '204: No Content - Member not found.'
- '404 Not Found: Verify the import job ID.'
- '404 Not Found: Check if the endpoint or resource exists'
- '404 Not Found: Verify the planId or constantId provided'
- '401 Unauthorized: The request requires user authentication.'
- HTTP Response Codes available in the documentation.
- '201 Created: Device created successfully.'
- '200 OK: Success response with event data'
- '4XX: Check request parameters'
- '5XX: Server error'
- Response code 200 OK and a list of Conference Bridge objects.
- '200 OK: Resource successfully deleted.'
- '404 Not Found: Check if the incident ID or plan ID is correct.'
- '401 Unauthorized: Ensure the authentication credentials are valid.'
- 'Error: Check HTTP Response Codes for detailed error messages.'
- 'HTTP_RESPONSE_CODE: Check the HTTP response codes for errors.'
- '201 Created: Successful creation of a constant.'
- '200 OK: Successful deletion of a constant.'
- '400 Bad Request: Validation errors or missing fields.'
- '404 Not Found: Ensure the scenario or attachment ID is correct.'
- 'HTTP_RESPONSE_CODE: For a list of response codes returned by the xMatters REST
  API, see HTTP Response Codes.'
- '404 Not Found: Check the serviceId provided'
- '201 Created: The service dependency was successfully created.'
- '200 OK: The service dependency was successfully modified or deleted.'
- '404 Not Found: The requested site could not be found.'
- '200 OK: Site was successfully deleted.'
- '404 Not Found: Verify the subscription ID or person ID.'
- '204 No Content: Device successfully deleted.'
- '200 OK: The request succeeded. The event status was not changed.'
- '202 ACCEPTED: The request succeeded. HTTP response code 202 was received.'
- '404 Not Found: Verify the formId or planId.'
- '404 Not Found: Verify the endpoint path or resource ID.'
- HTTP Response Codes for other errors can be referenced in the API documentation.
- '400 Bad Request: Check query parameters for errors'
- '404 Not Found: Check if the specified resource exists'
- '201 Created: A new resource was created.'
- HTTP Response Codes can be found in the API documentation.
- '404 Not Found: Specified resource not found.'
- '201 Created: Service successfully created'
- '204 No Content: Service not found for deletion'
- '404 Not Found: Verify the existence of the group or shift ID'
- 'Response code 404: Group not found.'
- '403 Forbidden: Check user permissions.'
- HTTP Response Codes available for handling errors.
- '201 Created: Successful creation of a device'
- '200 OK: Successful modification of a device'
- '404 Not Found: Ensure the event ID is correct.'
- '404 Not Found: Ensure the formId and planId are correct'
- Error response codes may indicate various issues.
- '500 Internal Server Error: Unexpected error'
- '4xx: Client errors such as unauthorized access or not found.'
- '404 Not Found: Verify the endpoint and parameters'
- '404 Not Found: Check the requested endpoint and parameters'
- Response code 200 OK and an Integration object in the response body.
- '400 Bad Request: Invalid query parameters'
- '400 Bad Request: Review request body parameters.'
- '404 Not Found: Service with specified ID does not exist'
- '401 Unauthorized: Recheck username and password or token expiration'
- '400 Bad Request: Ensure all required fields are included in the request'
- '201 Created: Successfully created a site.'
- '201: Created attachment'
- 'Error: Check for response codes returned by the xMatters REST API.'
- '400 Bad Request: Check the request body and parameters.'
- '404 Not Found: Check group ID or member ID'
- 'ERROR: Response code is: 401 Unauthorized'
- 'HTTP Response Codes: See the xMatters REST API documentation.'
- '400 Bad Request: Validate the request body structure.'
- '201 Created: Incident successfully modified'
- '404 Not Found: Check the {personID} or {personId} provided in the request.'
- '201 Created: Successfully modified the constant.'
- '201 Created: Scenario updated successfully'
- '404 Not Found: Check the endpoint path or identifier'
- Other error codes may apply as per the xMatters API documentation.
- '404 Not Found: Check the device ID or resource path'
- Error codes for various issues are defined in the API documentation.
- 'Error: Response code is not 201'
- '400 Bad Request: Ensure that the parameters are correctly formatted.'
- 'Response code 201: Group created successfully.'
- 'Response code 400: Bad request. Check your parameters.'
- '401 Unauthorized: Recheck credentials for basic auth.'
- '202 Accepted: Trigger request was accepted.'
- '404 Not Found: Verify the {incidentID} or {integrationId}'
- '200 OK: Successful response with on-call objects.'
- '200 OK: Scenario permissions successfully updated.'
- '201 Created: Successfully created shift.'
- '200 OK: Successfully updated shift.'
- 'Response code 400: Bad request, check your parameters.'
- '400 Bad Request: Invalid request payload'
- '200 OK: The request succeeded but the event status did not change.'
- '202 ACCEPTED: The request succeeded.'
- '404 Not Found: Verify the planId or formId is correct.'
- 'INVALID_GROUP_ID: Check the provided group ID'
- '404 Not Found: Verify the planId or integrationId'
- '401 Unauthorized: Missing or invalid authentication'
- '400 Bad Request: Check request formatting and parameters'
- '404 Not Found: Check the scheduledMessageId or attachmentId'
- '200 OK: Successfully retrieved services.'
- 'HTTP 200 OK: Successful response.'
- 'HTTP 4xx: Client error.'
- 'HTTP 5xx: Server error.'
- '200 OK: Successful deletion of the site.'
- '404 Not Found: The specified endpoint does not exist'
- '401 Unauthorized: Check authentication settings.'
- Check for appropriate file format and ensure the file is accessible.
- '403: Forbidden: The authenticating user does not have permission to access the
  endpoint.'
- Other error codes as per HTTP Response Codes.
- '401 Unauthorized: Ensure proper authentication credentials are used.'
- '404 Not Found: Check if the conference bridge ID is correct.'
- '4XX: Client errors related to bad requests or authentication issues.'
- '401 Unauthorized: Check the credentials provided.'
- '404 Not Found: Verify the groupId in the endpoint.'
- '201 Created: Request succeeded and a resource was created.'
- '404 Not Found: Verify the correct planId and integrationId.'
- '400 Bad Request: Check your query parameters.'
- '201 Created: Successful creation of a constant or endpoint.'
- '404 Not Found: Check endpoint path or resource ID'
- '200 OK: Successfully retrieved service dependencies.'
- '404 Not Found: Check the subscription ID or path'
- '400 Bad Request: Check your request parameters for validity.'
- '404 Not Found: Ensure the specified temporary absence ID exists.'
- '202: Event successfully triggered'
- '404 Not Found: Ensure the endpoint and identifiers are correct'
- HTTP Response Codes documentation available for error handling.
- '404 Not Found: Verify the incident or integration ID.'
- '400 Bad Request: Check query parameters for correctness'
- '403 Forbidden: Insufficient permissions to access the requested resource'
- '404 Not Found: Check endpoint path or resource id'
- '401 Unauthorized: Recheck user permissions or authentication details.'
- '401 Unauthorized: Recheck OAuth scopes or credentials'
- '404: The requested resource was not found.'
- '401: Unauthorized access - check credentials.'
- '200 OK: Successful deletion of device'
- 'Other error codes: Refer to HTTP Response Codes documentation'
- '200 OK: Successfully retrieved the event.'
- '404 Not Found: The event ID does not exist.'
- Response code 401 Unauthorized if authentication fails
- '201 Created: Successful creation of an incident.'
- '202 Accepted: Incident trigger request has been accepted.'
- 'Error: Check the provided planId and integrationId parameters'
- '404 Not Found: Ensure the specified planId or integrationId is correct.'
- '200 OK: Person deleted'
- '404 Not Found: Verify the scenarioId or formId'
- '400 Bad Request: Validate the request body format'
- '200 OK: Successfully updated sender permissions.'
- '200 OK: Shift has been successfully updated.'
- 409 Conflict
- 'Error: See HTTP Response Codes for additional information.'
- '400 Bad Request: Check your request parameters and values.'
- '404 Not Found: Verify the change ID or endpoint path.'
- 'Error: Invalid request'
- '200 OK: Conference bridge deleted successfully'
- '400 Bad Request: Check your parameters.'
- '403 Forbidden: Check permissions for the requested action'
- '404 Not Found: Ensure the group ID or member ID is correct'
- '400 Bad Request: Check request parameters and body data for errors.'
- '404 Not Found: Ensure the endpoint exists and the ID is correct.'
- '401 Unauthorized: The request did not succeed.'
- 'HTTP Response Codes: See HTTP Response Codes documentation.'
- '404 Not Found: Check the device ID provided.'
- 'Error: response code is {code}'
- '401 Unauthorized: Ensure correct credentials are used.'
- '404 Not Found: Check if the specified plan or form exists.'
- '404 Not Found: The specified incident ID does not exist.'
- '201 Created: Indicates successful modification or creation.'
- '404 Not Found: Check if the plan ID exists'
- '404 Not Found: Verify the plan ID exists'
- '201 Created: Plan constant object created successfully.'
- '404 Not Found: Scheduled message or attachment does not exist'
- '200 OK: Subscriptions retrieved successfully.'
- '400 Bad Request: Check parameters sent in the request.'
- '404 Not Found: Check if the specified temporary absence ID exists.'
- '400 Bad Request: Check the input data for correctness.'
- '404 Not Found: Ensure the specified formId exists.'
- '401 Unauthorized: Recheck credentials or permission settings'
- '400 Bad Request: Ensure the group ID is valid.'
- '400 Bad Request: Incorrect query parameters'
- '404 Not Found: Check if the scenario ID or form ID is correct.'
- '401: Unauthorized - Check credentials'
- '404: Not Found - Ensure the groupID and shiftID are correct'
- '200 OK: Subscription retrieved successfully.'
- '404 Not Found: Check the ID provided for the absence.'
- '201 Created: Successfully uploaded attachment'
- '400 Bad Request: Invalid file or parameters'
- 'Error: response code is '
- '409 Conflict: The conference bridge already exists'
- '404 Not Found: Check if the form or plan exists'
- 'Response code 201 Created: Successfully created form section'
- 'Response code 400 Bad Request: Check request format and parameters'
- '200 OK: Success response code'
- '400 Bad Request: Check the request format or body parameters'
- '404 Not Found: Verify the endpoint and resource identifiers'
- 'Unauthorized: Check your API credentials'
- Received response code 200 OK
- '404 Not Found: Check the scheduled message ID or endpoint URL'
- '201 Created: Request successful'
- '401 Unauthorized: Please check your credentials.'
- 'The request did not succeed. Response code is: 404'
- '201 Created: Device has been successfully created.'
- '400 Bad Request: The request is invalid or malformed.'
- '400 Bad Request: Check the parameters and data structure.'
- '201 Created: The request succeeded and the resource was created.'
- '403 Forbidden: The server understood the request, but refuses to authorize it.'
- Error codes vary based on the xMatters REST API.
- 'HTTP Response Codes: Refer to documentation for specific error codes and messages'
- '201 Created: Successfully created the object.'
- '200 OK: Successfully modified or deleted the object.'
- '404 Not Found: Check if the resource exists.'
- '404 Not Found: Verify service ID or path'
- 'Response code is not 200 or 201: The request did not succeed.'
- '201 Created: Success in uploading the attachment'
- Other error codes can be found in the HTTP Response Codes documentation
- '200: Received response OK.'
- 'Response code 400: Bad request due to incorrect parameters.'
- '404 Not Found: Check the endpoint URL for correctness'
- '401 Unauthorized: Authentication failed due to invalid credentials.'
- Response code 400 indicates a bad request.
- '404 Not Found: Verify the plan ID or endpoint.'
- '204 No Content: Device successfully deleted'
- '403 Forbidden: The user does not have permission to perform this action.'
- '400 Bad Request: Check the groupId or request parameters.'
- '404 Not Found: The specified group could not be found.'
- '404 Not Found: Verify the endpoint URL.'
- '404 Not Found: Incident or integration ID does not exist.'
- '201 Created: Person was successfully created.'
- '201 Created: Person modified or created.'
- '400 Bad Request: The request body was invalid.'
- '404 Not Found: Check if the endpoint exists.'
- 'Response code is: {response.status_code}: Error occurred during the request.'
- '400 Bad Request: Check the request body for required fields and correct values.'
- '401 Unauthorized: Recheck credentials or ensure user has permission'
- 'HTTP_RESPONSE_CODE: For a list of response codes returned by the xMatters REST
  API, see [HTTP Response Codes](#http-response-codes).'
- '202 Accepted: Event successfully triggered.'
- '201 Created: Comment has been successfully added.'
- '202 ACCEPTED: The request was accepted.'
- '404 Not Found: Ensure the specified formId or planId exists.'
- '201 Created: Successful modification of response option.'
- '400 Bad Request: Check request body structure or parameters'
- '404 Not Found: Verify form or resource ID'
- '403 Forbidden: Ensure you have the correct permissions to access this resource.'
- '400 Bad Request: Review the request parameters for correctness.'
- '404 Not Found: Check the import job ID'
- '404 Not Found: Check if the importId or incident ID is correct'
- '404 Not Found: Check the integration or plan ID'
- '400 Bad Request: Check your query parameters'
- HTTP Response codes vary based on the request.
- 'HTTP 401: Unauthorized access, check credentials.'
- 'Response code is: 200 for success'
- Error codes for failed requests are found in the HTTP Response Codes documentation.
- '404 Not Found: Check if the planId is correct.'
- '200 OK: Success response with scenario data.'
- 'HTTP Response Codes: For a list of response codes, see documentation.'
- '404 Not Found: Check if the scenario or form ID exists'
- '400 Bad Request: Ensure the request body is properly formatted'
- '200 OK: Successfully retrieved or modified.'
- '204 No Content: Successfully deleted.'
- '404 Not Found: Check the group or shift identifier'
- '500 Internal Server Error: Retry the request or contact support'
- '404 Not Found: Endpoint does not exist or resource not found'
- '404 Not Found: The specified temporary absence was not found.'
- '401: Unauthorized access due to invalid credentials.'
- '404 Not Found: Check the provided IDs'
- Check for HTTP response codes for error handling.
- '404 Not Found: Check the import ID'
- '404 Not Found: Check if the incident ID is valid.'
- '400 Bad Request: Check the query parameters'
- '404 Not Found: Person or group not found.'
- '404 Not Found: The requested scenario or plan does not exist.'
- '404 Not Found: Check the service ID.'
- Response code indicates success or failure.
- '404 Not Found: Check the shift ID or group ID.'
- '400 Bad Request: Invalid file format or parameters.'
- '401 Unauthorized: Recheck credentials used for authentication.'
- '404 Not Found: Check the change ID or endpoint path'
- '404 Not Found: Check the endpoint path or device ID.'
- '404 Not Found: Verify the planId or formId is correct'
- '404 Not Found: Ensure the formId or planId is correct'
- '400 Bad Request: Check the request format or body parameters.'
- '404 Not Found: Verify the form ID is correct.'
- '400 Bad Request: Check the provided data or parameters.'
- '201 Created: Indicates successful creation of a resource.'
- '200 OK: Indicates successful update of a resource.'
- Response code indicates various error scenarios.
- '401 Unauthorized: Recheck username/password or API key.'
- '404 Not Found: Ensure the service ID is correct.'
- Response code indicates success or failure based on the operation performed.
- '400 Bad Request: Verify request parameters.'
- 'Error: Check your permissions or the provided identifiers.'
- '404 Not Found: Verify the planId or formId provided.'
- '400 Bad Request: Invalid parameters or malformed request.'
- '404 Not Found: Verify the groupId.'
- '400 Bad Request: Check the body parameters for required fields.'
- Other HTTP response codes as specified in the documentation.
- '404 Not Found: Verify plan ID is correct.'
- '400 Bad Request: Ensure valid request body format.'
- '201 Created: Dependency successfully created'
- '200 OK: Dependency successfully modified'
- '204 No Content: Dependency not found'
- 'HTTP Response Codes: Refer to the xMatters REST API documentation for a list of
  response codes.'
- '404 Not Found: Check groupId or shiftId'
- '400 Bad Request: Check if required parameters are missing or invalid.'
- '201 Created: The site was successfully created.'
- 'Error: Response code will indicate the type of error.'
- '204 No Content: Device not found'
- 'Error: Check for valid credentials or endpoint'
- '404 Not Found: Check the form id or plan id provided.'
- '400 Bad Request: Malformed request.'
- '401 Unauthorized: Recheck authorization credentials'
- '400 Bad Request: Check the required fields and their formats.'
- '4xx: Client error responses'
- '5xx: Server error responses'
- '404 Not Found: Person or group not found'
- '201 Created: The request was successful and a new scenario was created.'
- '400 Bad Request: The request could not be understood by the server.'
- Error codes are returned for various failure conditions.
- 'Response code 204: The shift could not be found.'
- '400 Bad Request: Check the request body format and required fields.'
- Response code 404 Not Found if the temporary absence does not exist.
- '400 Bad Request: Check your parameters'
- '201 Created: Successfully created message template'
- 'HTTP 201 Created: Successful creation'
- 'HTTP 400 Bad Request: Invalid request format'
- 'HTTP 401 Unauthorized: Invalid authentication credentials'
- '404 Not Found: Ensure the specified group ID or name is correct.'
- '404 Not Found: Verify the import ID.'
- '403 Forbidden: Ensure user has permissions for the requested resource.'
- '404 Not Found: Verify the incidentID or integrationId.'
- Error response codes may vary; check the API documentation for details.
- 'Error: Refer to HTTP Response Codes for detailed error handling.'
- Response code is not successful.
- '401 Unauthorized: Check username and password for Basic Authentication'
- '404 Not Found: Ensure the subscription ID is correct'
- '403 Forbidden: Insufficient permissions to access the device.'
- '404 Not Found: The requested group does not exist'
- '200 OK: Successful response with group data'
- '400 Bad Request: Invalid or missing parameters'
- 'Not Found: The specified planId or integrationId does not exist.'
- '404 Not Found: Ensure the planId and integrationId are correct.'
- 'HTTP 200: Successful request'
- 'HTTP 401: Unauthorized access'
- 'HTTP 400: Bad request'
- '404 Not Found: Check the provided ID or targetName'
- '400 Bad Request: Verify the request payload structure.'
- '200 OK: Successful retrieval.'
- '404 Not Found: Service or dependency does not exist.'
- 'HTTP Response Codes: Refer to the documentation for error codes.'
- '201 Created: Shift occurrence was successfully restored.'
- '201: Site was successfully added'
- '201 Created: Subscription form was successfully created.'
- '404 Not Found: Verify endpoint URL.'
- 'Unauthorized: Check authentication credentials.'
- 'Not Found: Subscription ID may be invalid.'
- '400 Bad Request: The request is malformed or contains invalid parameters.'
- 'Error: Response code is: [error code]'
- 'Response code 400: Bad Request, check your input data'
- 'Response code 401: Unauthorized, recheck username and password'
- '404 Not Found: Check group or member ID'
- Response code error for invalid requests
- '400 Bad Request: The request body is invalid.'
- 'Unauthorized: Check your authentication credentials.'
- 'Not Found: The specified import job does not exist.'
- '404 Not Found: Invalid endpoint.'
- '400 Bad Request: Ensure that all required fields are provided'
- '201 Created: Successfully created the site.'
- Other error codes are detailed in the HTTP Response Codes documentation.
- '200 OK: Successful retrieval of event.'
- Error response codes can be found in the HTTP Response Codes documentation.
- '404 Not Found: Verify the incident ID or identifier'
- 'Error: Check HTTP Response Codes documentation for detailed error information.'
- '201 Created: Person created successfully'
- '200 OK: Person modified successfully'
- '404 Not Found: Scenario or resource not found'
- '404 Not Found: Ensure scenario or form ID is correct.'
- '201 Created: The resource was created successfully.'
- '201 Created: Successfully created a service dependency'
- '200 OK: Successfully retrieved or modified a service dependency'
- '204 No Content: The service dependency could not be found'
- '404 Not Found: Check the libraryID or groupID.'
- '201 Created: Successful creation of site.'
- '201 Created: Subscription added successfully.'
- 'PENDING: The upload is still being processed.'
- 'HTTP 4xx: Client error'
- 'HTTP 5xx: Server error'
- '404 Not Found: Check the endpoint path or resource identifier.'
- 'Response code 201 Created: Resource successfully created'
- 'Response code 400 Bad Request: Check request payload and parameters'
- '201 Created: Request succeeded and a new resource was created.'
- Response code 200 OK and a Pagination of Group Membership object in the response
  body.
- Response code 200 OK and a Pagination of Person objects in the response body.
- '400 Bad Request: Validate input data.'
- '201 Created: Scenario successfully updated.'
- '403 Forbidden: User does not have permission to manage scenarios.'
- '204 No Content: Resource was successfully deleted'
- '401 Unauthorized: Authentication credentials were missing or incorrect'
- '404 Not Found: Check if the specified libraryID or shiftID exists.'
- '201 Created: Successfully created or modified the site'
- '200 OK: Successfully deleted the site'
- '400 Bad Request: Invalid input data or format.'
- HTTP Response Codes for errors can be found in the documentation.
- '404 Not Found: Verify the requested change ID.'
- '201 Created: Comment successfully added'
- '5XX: Server error, retry the request.'
- '200 OK: Success response with pagination of Message Templates objects.'
- '404 Not Found: Ensure the groupID or memberID is correct'
- '403 Forbidden: Check user permissions for accessing the group'
- '400 Bad Request: The request body is missing required parameters.'
- '404 Not Found: Ensure the endpoint and resource exist.'
- 'HTTP 401: Unauthorized'
- '404 Not Found: Check if the plan ID exists.'
- Response code 204 indicates the shift could not be found.
- 'Invalid file format: Use User Upload template v1.5 .csv or EPIC ZipSync v1.3 .zip
  files.'
- '4xx: Client error, check request formatting.'
- '401 Unauthorized: Verify your authentication details.'
- '404 Not Found: Ensure the URL is correct and the resource exists.'
- '400 Bad Request: Check the data format and required fields.'
- '404 Not Found: Verify the import ID is correct'
- '403 Forbidden: Insufficient permissions to access this endpoint.'
- '201 Created: Request succeeded.'
- '404 Not Found: Invalid scheduled message ID'
- '404 Not Found: Ensure the serviceId is correct'
- Response code 201 Created for successful requests.
- Response code 200 OK for updated shifts.
- '404 Not Found: Verify the groupID and shiftID.'
- 'Unauthorized: Recheck authentication credentials'
- 'Not Found: Ensure the subscription ID is correct'
- '400 Bad Request: Check your request parameters and file format.'
- '200: Successful requests return a Change object.'
- '404 Not Found: Event ID not found'
- 'Error codes returned by the xMatters REST API: see HTTP Response Codes.'
- '404 Not Found: Ensure the form ID is correct'
- '404 Not Found: Check if the groupID or memberID is correct.'
- 'Response code 200 OK: Successful retrieval'
- 'Response code 403 Forbidden: User does not have permission to access the groups'
- '401 Unauthorized: Recheck authentication settings'
- '404 Not Found: Shared library not found'
- '404 Not Found: Check the planId or endpoint path'
- '201 Created: Site object created successfully.'
- '400 Bad Request: Check request body for missing or invalid fields.'
- '404 Not Found: Subscription or resource does not exist.'
- 'Response code 401: Unauthorized access'
- 'Response code 404: Resource not found'
- 'Response code 500: Internal server error'
- '201 Created: Form section successfully created'
- '400 Bad Request: Invalid request syntax or parameters'
- '400 Bad Request: Check the request parameters or body.'
- '404 Not Found: Ensure the incident ID is correct.'
- '403 Forbidden: Check permissions for accessing this resource'
- Response code 409 Conflict
- '400 Bad Request: Check request syntax or required fields.'
- '200 OK: Deleted device successfully.'
- '202 Accepted: The event was successfully triggered.'
- 'Response code 200 OK: Success response for POST requests.'
- '202 Accepted: Incident successfully triggered'
- '201 Created: A new resource was created'
- '401 Unauthorized: Ensure the authentication credentials are correct.'
- '404 Not Found: Verify the scenarioId or attachmentId.'
- '201 Created: Scheduled message created'
- '4XX: Client errors, check request format.'
- '5XX: Server errors, retry later.'
- '404 Not Found: Check the serviceId or URL'
- '401 Unauthorized: Users must have permission to see subscribers.'
- Throttle API calls or reduce frequency
- 'Invalid file format: Ensure the uploaded file is a .csv'
- '201 Created: Indicates successful file upload.'
- 'Error: For a list of response codes, see HTTP Response Codes.'
- 'Error: Check for response code.'
- '404 Not Found: Verify the planId or formId.'
- 'HTTP Response Codes: See documentation for specific error messages.'
- '400 Bad Request: Missing required parameters'
- '404 Not Found: Person or group does not exist'
- '400 Bad Request: Check input parameters'
- '404 Not Found: Check the endpoint or parameters.'
- '200 OK: Successful request and valid response'
- '4xx: Client error, check request parameters or authentication'
- 'Invalid subscription ID: Ensure the subscription ID exists.'
- '404 Not Found: Check if the temporary absence ID is valid.'
- '404 Not Found: Check if the eventID is correct or exists.'
- '400 Bad Request: Check the request body for missing or incorrect parameters.'
- '403 Forbidden: Check permissions for the requested operation.'
- '400 Bad Request: Check the request format or parameters.'
- '404 Not Found: Verify the group ID in the request.'
- Other response codes can be found in the xMatters REST API documentation.
- '404 Not Found: Check the resource ID or path.'
- '401 Unauthorized: Verify the username and password for authentication.'
- '403 Forbidden: Ensure appropriate permissions are set.'
- '201: Created a change record.'
- '201 Created: Successfully created or updated resource.'
- '404 Not Found: Verify the group or member ID.'
- '404 Not Found: Check the import ID.'
- '404 Not Found: Check the incident ID'
- '404 Not Found: Person not found'
- 'HTTP Response Codes: Check the xMatters REST API documentation for error codes.'
- '404 Not Found: Scenario or attachment does not exist'
- '201 Created: Scenario or attachment successfully created.'
- '200 OK: Successfully updated scenario or permissions.'
- '400 Bad Request: Check request payload'
- '201 Created: Successfully created a service.'
- '204 No Content: Successfully deleted a service.'
- '404 Not Found: Ensure the groupID or shiftID is correct'
- Error codes can be found in HTTP Response Codes documentation.
- 'Response code 401: Unauthorized - Check your authentication credentials.'
- '404 Not Found: Check if the specified planId is correct'
- '400 Bad Request: Verify the request body format.'
- '201 Created: Change record created.'
- '200 OK: Successfully modified a device.'
- '404 Not Found: Ensure the bridge ID is correct'
- '404 Not Found: Verify the resource exists'
- 'Error: Response code is: {status_code}'
- '404 Not Found: Verify the endpoint URL and resource availability.'
- '200 OK: Successfully modified.'
- '200 OK: Success response with import messages.'
- '401 Unauthorized: Verify authentication details'
- '404 Not Found: Check the person ID or target name'
- '403 Forbidden: User lacks permission to perform this action.'
- '400 Bad Request: The request was invalid, check the parameters.'
- '500 Internal Server Error: Server issue, try again later'
- '404 Not Found: Ensure endpoint is correct'
- '400 Bad Request: Missing or invalid parameters'
- '404 Not Found: Subscription does not exist'
- '404 Not Found: Verify that the subscription ID is correct.'
- '401 Unauthorized: Check username and password provided for authentication.'
- 'Response had status code: 201'
- 'Response code is: 200'
- '404 Not Found: Check the event ID.'
- 'Error: Check the HTTP Response Codes documentation for more details.'
- '201 Created: The resource was successfully created.'
- '401 Unauthorized: Recheck user credentials.'
- '404 Not Found: Verify the endpoint path and resource ID.'
- '201 Created: Indicates successful creation of the incident.'
- 'Error: Check HTTP response codes for details.'
- 'Not Found: Ensure the person ID or target name is correct.'
- 'Internal Server Error: Retry the request or contact support.'
- '404 Not Found: Check if the plan id is correct'
- '404 Not Found: The specified plan or subscription form does not exist'
- '400 Bad Request: The request body is malformed or missing required fields.'
- '200: Retrieved device'
- '200 OK: Success response with pagination of Event objects'
- '200 OK: Form modified successfully'
- '400 Bad Request: Check that the request body is formatted correctly.'
- '404 Not Found: The specified group id does not exist.'
- '404 Not Found: Incident or integration not found.'
- '422 Unprocessable Entity: Validate request payload format'
- '200 OK: Successful retrieval of resource.'
- '403 Forbidden: Insufficient permissions for this action'
- 'Invalid file format: File must be in .csv format.'
- '401 Unauthorized: Recheck API credentials or token'
- '401 Unauthorized: Recheck authentication credentials or permissions'
- '200 OK: Success, returns an Event object.'
- '201 Created: Successfully created the form.'
- '200 OK: Successfully modified resource'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Check if the incidentID is correct.'
- '401 Unauthorized: Check client ID and user credentials'
- '404 Not Found: Ensure the plan ID and endpoint ID are correct.'
- '200 OK: Successful update of sender permissions'
- '400 Bad Request: Check request format or body parameters'
- '201 Created: Scheduled message was successfully created.'
- '200 OK: Scheduled message was successfully deleted.'
- '404 Not Found: Check the scheduledMessageId or attachmentId.'
- '400 Bad Request: Check the request parameters for errors.'
- '400 Bad Request: Check file format and size'
- '404 Not Found: Check the device ID or URL for correctness'
- '200 OK: Success response with Event object.'
- 'HTTP Response Codes: See the xMatters REST API documentation for a list of response
  codes.'
- 'Error: Check the response codes for failure reasons.'
- '201 Created: Successfully modified or created the response option.'
- '400 Bad Request: Missing required fields or invalid parameters.'
- '202 Accepted: Incident trigger request accepted'
- '404 Not Found: Ensure the integration ID is correct'
- '200 OK: Person object returned on success.'
- '201 Created: Successfully created endpoint.'
- '200 OK: Successfully deleted endpoint.'
- '404 Not Found: Verify the group ID or shift ID.'
- 'Error code: Check HTTP Response Codes for more details.'
- '404 Not Found: The requested subscription or resource does not exist.'
- '404 Not Found: Change ID not found'
- '400 Bad Request: Check the parameters provided.'
- 'Error: Check request format and authentication.'
- '201 Created: Success response for creating a conference bridge.'
- '200 OK: Success response for deleting a conference bridge.'
- '404 Not Found: Verify the resource path.'
- '404 Not Found: The member or group does not exist'
- 'Error: See HTTP Response Codes for details.'
- 'HTTP Response Codes: Refer to the documentation for a list of response codes.'
- '404 Not Found: Verify endpoint path'
- '201 Created: Successful creation of service dependency.'
- '200 OK: Successful retrieval of services.'
- '204 No Content: No service dependency found.'
- '404 Not Found: Verify the serviceId'
- 'Response code 400: Bad request, check input parameters.'
- 'Response code 401: Unauthorized, check authentication.'
- '404 Not Found: Subscription ID does not exist'
- 'PENDING: Job is in progress and hasn''t completed yet.'
- '200 OK: Success response for deletion of a device.'
- '404 Not Found: Check the event ID or UUID'
- 'ERROR: The request did not succeed.'
- '200 OK: Successfully updated resource'
- '400 BAD REQUEST: Check the request parameters and body structure.'
- '404 NOT FOUND: Verify the group ID or name.'
- '400 Bad Request: Check if required fields are missing.'
- '404 Not Found: The person does not exist.'
- '400 Bad Request: Invalid request format or body.'
- '408 Request Timeout: The server timed out waiting for the request.'
- '201 Created: Indicates successful creation or modification of the site.'
- '201 Created: The subscription form was successfully created.'
- '400 Bad Request: There is a validation error with the subscription form data.'
- '404 Not Found: Check the subscription ID or endpoint'
- '404 Not Found: Check the subscriptionId or personId.'
- '200 OK: The device was successfully modified.'
- Error codes for other responses can be found in the HTTP Response Codes documentation.
- 'Error: Invalid formId or planId.'
- '400 Bad Request: Check request payload for errors'
- 'Error: Check response codes for details.'
- '200 OK: Success response with person object.'
- Error codes returned by the xMatters REST API are listed in the documentation.
- '404 Not Found: The specified person was not found.'
- '404 Not Found: Check if the endpoint is correct or if the resource exists'
- '400 Bad Request: Check for required fields in the request body'
- 'HTTP Response Codes: Refer to the API documentation for a list of response codes.'
- 'Error: Response code is: [status_code]'
- '201 Created: Successful device creation.'
- '404 Not Found: Check if the device name exists or if the URL is correct'
- '401 Unauthorized: Recheck user permissions or credentials'
- '201 Created: Conference bridge created.'
- '200 OK: Conference bridge deleted.'
- Error codes available in HTTP Response Codes.
- '404 Not Found: The form or plan may not exist.'
- '201 Created: The form section was successfully created.'
- '200 OK: The form was successfully updated.'
- 'Response code 400: Bad Request, check the request payload.'
- '404 Not Found: Member or group not found.'
- '401 Unauthorized: Check username/password for basic auth.'
- '400 Bad Request: Check the request body'
- '200 OK: The operation was successful.'
- '404 Not Found: Check if the planId is valid'
- '401: Unauthorized access - check credentials'
- '400 Bad Request: Check your request body parameters.'
- '201 Created: The request was successful and a new shift was created.'
- '401 Unauthorized: Check if the username and password are correct'
- '403 Forbidden: Ensure the user has permission to access the endpoint'
- '404 Not Found: Verify the endpoint and resource ID are correct'
- 'Response code 201 Created: Indicates successful creation of a conference bridge.'
- 'Response code 200 OK: Indicates successful deletion of a conference bridge.'
- For a list of other response codes, see the HTTP Response Codes documentation.
- '400 Bad Request: Invalid request format or data'
- '400 Bad Request: The request is malformed or missing required fields'
- '201 Created: Successful creation of an incident or timeline entry.'
- '400 Bad Request: Invalid request, verify parameters.'
- '401 Unauthorized: The request requires user authentication'
- '200 OK: Person successfully deleted.'
- '404 Not Found: Check if the personID is correct'
- '201 Created: Indicates successful creation.'
- '200 OK: Indicates successful deletion.'
- Error response codes for failed requests.
- '400 Bad Request: Check your input values'
- '404 Not Found: Verify the provided temporary absence ID.'
- '201 Created: Successfully created device name'
- '409 Conflict: Resource conflict'
- '201 Created: Message template successfully created'
- '200: Updated successfully'
- '404 Not Found: Check if the import job ID is correct'
- '201 Created: Success response for a successful POST.'
- '200 OK: Success response for a successful GET.'
- '404 Not Found: Verify the endpoint and resource IDs'
- '400 Bad Request: Check the request formatting and parameters'
- '404 Not Found: Ensure the person ID or group ID is correct.'
- '200 OK: Person object returned.'
- '404 Not Found: The specified plan id does not exist.'
- '404 Not Found: Check the provided scenario or form ID.'
- '404 Not Found: Ensure the service ID is correct'
- '400 Bad Request: Check the request syntax or parameters'
- '404 Not Found: Check if the library or shift ID is correct.'
- '400 Bad Request: Invalid request parameters or body.'
- 'Error: Check the response code for issues.'
- '404 Not Found: Verify the endpoint or resource exists.'
- 'Error 200: Success'
- 'Error 401: Unauthorized - Recheck credentials'
- '404 Not Found: Check the formId or planId is correct.'
- '201 Created: Successful template creation'
- 'HTTP 204: No Content if the group member does not exist.'
- '400 Bad Request: Validate your request parameters.'
- '400 Bad Request: Check request parameters and payload'
- '404 Not Found: Check if the endpoint is correct or if the resource exists.'
- '401 Unauthorized: Verify your credentials and permissions.'
- Error codes are detailed in the HTTP Response Codes section.
- Other response codes as per xMatters REST API documentation.
- 'Response code 400 Bad Request: The request was malformed.'
- 'Response code 401 Unauthorized: Authentication failed.'
- '404 Not Found: Plan ID does not exist'
- '401: Unauthorized - Check username and password'
- '404: Not Found - Check the scenario ID or URL'
- '201 Created: Successfully created a scenario or an attachment'
- '200 OK: Successfully updated a scenario or permissions'
- 'Response code 401 Unauthorized: Check your authentication credentials'
- '201 Created: Indicates a successful creation of a service dependency.'
- '200 OK: Indicates a successful retrieval or modification.'
- '204 No Content: Indicates a successful deletion without a response body.'
- '204 No Content: Service successfully deleted'
- '404 Not Found: Check if the specified groupID or shiftID exists.'
- '200 OK: Successfully deleted or modified the site'
- '201 Created: Subscription created successfully'
- Unexpected error occurred during upload process
- Response code 200 OK and a Device object in the response body.
- Response code for errors are documented in the xMatters REST API.
- '400 Bad Request: Validation error or missing required fields'
- '400 Bad Request: Check request parameters and ensure they are valid.'
- '404 Not Found: Check the importId for accuracy'
- '400 Bad Request: Invalid data parameters.'
- '403 Forbidden: Ensure the user has permissions to access the resource.'
- '404 Not Found: Verify the scenario or resource ID'
- '201 Created: Indicates successful creation of a scenario.'
- '200 OK: Indicates successful permission setting.'
- 'HTTP Response Codes: Refer to API documentation for specific codes and handling.'
- '404 Not Found: Group or shift not found.'
- '400 Bad Request: Check parameters in the request.'
- '404 Not Found: Verify the endpoint or resource is correct.'
- '201 Created: Successful creation of the subscription form.'
- '200 OK: Successful retrieval of subscriptions.'
- '400 Bad Request: Review request body and parameters'
- Error codes returned by the xMatters REST API
- Error codes returned by the xMatters REST API are available in the documentation.
- '400 Bad Request: Check the request parameters and ensure they are correctly formatted.'
- '404 Not Found: Confirm the resource exists at the specified endpoint.'
- '400 Bad Request: Check body parameters for required fields.'
- '404 Not Found: Ensure the formId is valid.'
- '403 Forbidden: Ensure you have the correct permissions.'
- '400 Bad Request: Check the request syntax and required parameters.'
- '404 Not Found: Verify the groupId exists.'
- '403 Forbidden: Insufficient permissions to view or create incident.'
- 'Other HTTP response codes: See HTTP Response Codes documentation.'
- '400 Bad Request: Check for required fields and valid UUID.'
- 'Response code 401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: Check the groupId or shiftId'
- '201 Created: The shift occurrence was successfully restored.'
- '201 Created: Site has been successfully created.'
- 'Response code 201 Created: Successful creation'
- 'Response code 400 Bad Request: Invalid request parameters'
- 'Response code 404 Not Found: Resource not found'
- '201 Created: Successfully created conference bridge.'
- '200 OK: Successfully deleted conference bridge.'
- '400 Bad Request: Check for missing parameters or invalid values.'
- '404 Not Found: Ensure the resource exists and the URL is correct.'
- '200 OK: Form modified successfully.'
- '404 Not Found: Check the formId.'
- '409 Conflict: Resource state conflict.'
- '404 Not Found: The specified group could not be located.'
- '400 Bad Request: Check the parameters provided in the request body.'
- '401 Unauthorized: Recheck credentials and authentication method.'
- '404 Not Found: Check the plan ID or integration ID.'
- '404 Not Found: Verify the plan ID or path'
- '404 Not Found: Person does not exist.'
- Response codes for errors can be found in HTTP Response Codes documentation.
- '404 Not Found: Specified group ID does not exist.'
- '404 Not Found: Check if the specified event ID exists.'
- '404 Not Found: Check if the planId and formId are correct.'
- Check HTTP Response Codes for error handling.
- '400 Bad Request: Check request syntax or parameters.'
- '403 Forbidden: Ensure correct authentication and permissions.'
- '400 Bad Request: Validate request parameters and payload.'
- '400 Bad Request: Review request parameters'
- '404 Not Found: Check the group ID or name.'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check body parameters'
- 'Response code 200 OK: Successfully retrieved the resource.'
- '404 Not Found: Check the endpoint and resource identifiers'
- '400 Bad Request: Ensure the request body is well-formed'
- '201 Created: Scheduled message has been created'
- '404: Not Found - Verify groupID and shiftID'
- '204 No Content: Shift could not be found.'
- '201 Created: Site successfully created'
- '201 Created: Successfully created the device.'
- '200 OK: Successfully modified the device.'
- '403 Forbidden: Insufficient permissions to view some events'
- Other error codes may be returned by the xMatters REST API.
- '404 Not Found: Verify the formId or planId is correct.'
- 'Response code 200 OK: Successfully retrieved the data.'
- 'Response code 201 Created: Successfully created the resource.'
- Response codes returned by the xMatters REST API can include various error codes.
- '202 Accepted: Triggered an incident.'
- '404 Not Found: Ensure the correct endpoint and resource ID are used'
- '200: Integration successfully updated'
- '200: Integration successfully deleted'
- '404 Not Found: Check if the person ID or group ID is correct.'
- '201 Created: The person was successfully created.'
- '404 Not Found: Check person ID or endpoint'
- '200 OK: Successfully retrieved resource.'
- '403 Forbidden: No permission to access this resource.'
- Error messages for various failure scenarios.
- 'Not Found: The requested subscription or subscriber does not exist.'
- '404 Not Found: Verify the URL or the resource ID.'
- '400 Bad Request: Incorrect parameters in request'
- 'HTTP 404: Event not found'
- 'HTTP 401: Unauthorized access - check credentials'
- 'HTTP 500: Internal server error - try again later'
- '202 Accepted: Successfully triggered the event'
- '200 OK: The request succeeded but the status of the event did not change.'
- '400 Bad Request: Check the request payload for missing fields.'
- '404 Not Found: Verify the importId is correct.'
- '401 Unauthorized: Recheck client ID, username, or password'
- '404 Not Found: Person not found.'
- '204 No Content: Person deleted successfully.'
- 'Response code indicates failure: Check error messages.'
- '201 Created: Service dependency created successfully'
- '200 OK: Service dependency modified successfully'
- '204 No Content: Service dependency not found'
- '400 Bad Request: The request was not understood or was missing required parameters'
- '401 Unauthorized: Recheck credentials or user permissions'
- '200 OK: Event status unchanged.'
- '202 Accepted: Event status changed.'
- '404 Not Found: Ensure the formId or planId is correct.'
- '201 Created: Response option modified successfully.'
- '400 Bad Request: Required fields are missing.'
- '404 Not Found: The specified form or response option does not exist.'
- '404 Not Found: Check the incident ID or endpoint path'
- HTTP response codes for error handling should be referred to in the documentation.
- '404 Not Found: The specified group does not exist or the endpoint is incorrect'
- '404 Not Found: Check the endpoint or ID provided'
- Response code 404 Not Found
- Response code 400 Bad Request
- 'Error: Check HTTP response codes for issues with requests.'
- '200 OK: Resource was retrieved or deleted successfully.'
- '201 Created: Resource was created successfully.'
- '204 No Content: A resource was not found in response to a DELETE request.'
- '401 Unauthorized: Recheck authentication configuration'
- '202 Accepted: Triggering incident was successful.'
- '400 Bad Request: Required fields missing.'
- '400 Bad Request: Check the request body and parameters'
- '401 Unauthorized: Recheck OAuth credentials or scopes'
- '404 Not Found: Check the person ID or path'
- '404 Not Found: Verify the groupID and shiftID are correct.'
- '403 Forbidden: User does not have permission to modify subscription.'
- '201 Created: Attachment created successfully.'
- '200: Retrieved devices.'
- '200 OK: Success response with group data'
- '400 Bad Request: Invalid parameters in the request'
- '400 Bad Request: Check the request parameters and ensure they are valid.'
- '404 Not Found: Ensure the group ID or name exists.'
- '400 Bad Request: Check required fields and data format'
- '404 Not Found: Verify the endpoint path and resource availability'
- '404 Not Found: Check the endpoint path or resource identifier'
- '404 Not Found: Verify the personID or endpoint.'
- Response code 201 Created when successfully creating a scenario.
- Response code 200 OK when successfully updating permissions.
- '404 Not Found: Invalid endpoint or resource not found.'
- '400 Bad Request: Check the request parameters and body format'
- 'HTTP Response Codes: Refer to the xMatters REST API documentation for common error
  responses.'
- '401 Unauthorized: Recheck credentials or token'
- '400 Bad Request: Check the request body formatting'
- '401 Unauthorized: Ensure username and password are correct.'
- 'Response code is: 500: Server error'
- '400 Bad Request: Check request body for missing or incorrect parameters.'
- '404 Not Found: Ensure the specified scenario or form ID is correct.'
- '404 Not Found: Check the ID provided for the temporary absence'
- 'Error: Check your request and try again'
- 'Error codes: Refer to the HTTP Response Codes documentation.'
- Response codes returned by the xMatters REST API can vary.
- '200 OK: Group successfully modified'
- '200 OK: Group successfully deleted'
- '404 Not Found: Check the group ID or path'
- '400 Bad Request: Validate request body parameters.'
- '401 Unauthorized: Credentials are invalid or expired.'
- Error codes are detailed in the HTTP Response Codes documentation.
- '401 Unauthorized: Authentication failed or user does not have permissions for the
  desired action.'
- '200 OK: Successfully retrieved data'
- '404 Not Found: Check the scheduled message ID or attachment ID.'
- '404 Not Found: Verify group or shift IDs.'
- 'Error: Check HTTP Response Codes for specific errors'
- Response code 202 Accepted indicates success.
- '400 Bad Request: Request body is invalid.'
- '201 Created: Incident created successfully'
- '201 Created: Successfully modified the resource'
- '201 Created: Constant or endpoint successfully created.'
- '404 Not Found: Verify service ID.'
- 'HTTP Response Codes: Refer to the xMatters REST API documentation for a complete
  list.'
- '4xx or 5xx: Check API documentation for specific error codes.'
- '404 Not Found: Verify the groupID and shiftID'
- '400 Bad Request: Ensure all required fields are included in the request body'
- '400 Bad Request: Check the request parameters and payload structure.'
- '400: Bad Request.'
- '401: Unauthorized.'
- 'Error: Response code indicates a failure'
- '400 Bad Request: Check request body formatting'
- '404 Not Found: Check form ID'
- '204: Member not found'
- '201 Created: Incident updated successfully'
- '400 Bad Request: Validation error, check your request parameters'
- '401 Unauthorized: Authentication failed, check credentials'
- 'Unauthorized: Check the client ID and user credentials.'
- '200 OK: Indicates success.'
- '404 Not Found: Check the personID provided in the URL'
- '403 Forbidden: The request was valid, but the server is refusing action.'
- '404 Not Found: The service does not exist.'
- 'Invalid request: Ensure the URL and parameters are correct.'
- '400 Bad Request: Invalid parameters or data.'
- '201 Created: Successful upload'
- 'Error: Check the response code for details.'
- '404 Not Found: Check the bridgeId for the specific conference bridge'
- '400 Bad Request: Check the request format and data provided.'
- '403 Forbidden: Ensure that the user has permission to modify the group.'
- '201 Created: Incident has been successfully created.'
- '201 Created: Successful modification.'
- '404 Not Found: Check integration or plan ID'
- '404 Not Found: Integration not found'
- '401 Unauthorized: Check client ID, username, and password.'
- 'Response code 200 OK: Successful retrieval.'
- 'Response code: Check for errors if not 200.'
- '404 Not Found: Check the serviceId or dependentServiceId parameters for correctness.'
- '201 Created: Successfully added the shift.'
- '404 Not Found: The specified groupID does not exist.'
- '201 Created: Successfully created subscription form.'
- '400 Bad Request: Check the request payload for missing or invalid fields.'
- '401 Unauthorized: Verify user credentials.'
- '201 Created: Successful creation of a device.'
- '200 OK: Successful modification of a device.'
- '401 Unauthorized: The request did not succeed. Check username and password.'
- '4XX: For a list of response codes returned by the xMatters REST API, see HTTP Response
  Codes.'
- '200 OK: Successful request with event data returned.'
- '404 Not Found: Event not found'
- '4xx: Client error, check permissions and request format.'
- '201 Created: Form/message template created successfully.'
- '201 Created: Group was successfully created'
- '404 Not Found: Ensure the group or member exists.'
- '401 Unauthorized: Verify your credentials'
- Error responses are documented in HTTP Response Codes.
- Other HTTP response codes may apply as per documentation.
- '404 Not Found: Verify the personID or personId.'
- '201 Created: Resource created.'
- '404 Not Found: Verify endpoint path or ID.'
- '404 Not Found: The requested scenario or form does not exist.'
- '404 Not Found: The scheduled message may not exist.'
- Response code errors as per the xMatters REST API documentation.
- '201 Created: Successful creation of an object.'
- '200 OK: Successful retrieval of an object.'
- '404 Not Found: The specified absence ID does not exist'
- '202 Accepted: Success response code.'
- '201 Created: The file was uploaded successfully.'
- '400 Bad Request: Check your request format.'
- '200 OK: Success response with paginated group objects.'
- '400 Bad Request: Request body is missing required fields.'
- '404 Not Found: The group with the specified ID does not exist.'
- Error codes are listed in the HTTP Response Codes section.
- 'Unauthorized: Check your username and password'
- '400 Bad Request: Ensure required fields are included in your request'
- '400 Bad Request: Invalid input or missing required parameters.'
- '201 Created: Successfully added shift.'
- '404 Not Found: Subscription ID may not exist.'
- '200 OK: Successfully deleted or unsubscribed.'
- '404 Not Found: Check if the requested absence exists.'
- '400 Bad Request: Check email format or required fields'
- '429 Too Many Requests: Throttle email notifications'
- '401 Unauthorized: Recheck authentication method or parameters.'
- 'INVALID_CLIENT: Check your client ID and secret'
- 'INVALID_GRANT: Check your username and password'
- '401 Unauthorized: Recheck username and password for authentication.'
- '401 Unauthorized: Recheck authentication method or credentials.'
- 'You don''t have access to the workflow: Contact your xMatters administrator to
  get access to the workflow'
- 'You''re not connected: Use the /xmatters connect command to connect Slack to your
  xMatters account'
- 'You should try again, and contact support if that doesn''t work: Contact support
  for assistance'
- 'ERROR: Delete user failed, cannot find the credential information with id : credential::xmatters_password'
- Cannot find credential information
- 'STDERR - ImportError: No module named itsi_path'
- If there is no entry in the Activity Stream, then the request didn't reach xMatters.
auth_info:
  mentioned_objects:
  - PlanReference
  - Endpoint Authentication
  - OauthToken
  - username
  - password
  - HTTPBasicAuth
  - AccessToken
  - OAuth
  - Authentication
  - xMatters
  - Endpoint authentication
  - OAuthToken
  - AuthProvider
  - NamedCredential
  - User
  - ' oauthTokenUrl'
  - oauthTokenUrl
  - PersonReference
  - client_id
  - Group
  - Dynamic Group
  - Endpoint Authentication objects
  - PlanPointer
  - Endpoint
  - response option
  - formId
  - Scenario
  - AttachmentReference
  - Scenario Permissions
  - incident
  - trigger_incident
  - BasicAuth
  - EndpointAuthentication
  - Sender Overrides
  - Attachment
  - Sender
  - OAuth2
  - Change
  - Device
  - Plan property objects
  - message template
  - Endpoint authentication objects
  - HttpBasicAuth
  - Incident
  - RecipientTrigger
  - PropertyValues
  - TimelineEntry
  - Integration
  - Authorization
  - xMatters API
  - plan
  - constant
  - Subscription Form
  - SubscriptionCriteria
  - ReferenceById
  - DeviceName
  - IntegrationLog
  - Bearer
  - authenticationType
  - oauthClientId
  - client_secret
  - OAuth2 Authentication
  - Supervisor
  - Plan
  - Integration User
  - Email Device
  - ConnectedApp
client:
  base_url: https://acmeco.xmatters.com/api/xm/1/
  auth:
    type: http_basic
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
  paginator:
    type: offset
    page_size_param: limit
    default_page_size: 100
source_metadata: null
