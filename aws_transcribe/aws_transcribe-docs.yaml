resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: builds
  endpoint:
    path: /builds
    method: POST
    data_selector: builds
    params: {}
- name: cell_data
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: read_only_connection
  endpoint:
    path: /database/connection
    method: GET
- name: default
  endpoint:
    params:
      ENGINE: django.db.backends.mysql
      USER: root
      PASSWORD: '12345'
- name: default_readonly
  endpoint:
    params:
      ENGINE: django.db.backends.mysql
      NAME: mydb
      PASSWORD: '12345'
      READONLY: true
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: media
  endpoint:
    path: /s3/media
    method: GET
    data_selector: files
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: getA
  endpoint:
    path: A
    method: GET
- name: getB
  endpoint:
    path: B
    method: GET
- name: getC
  endpoint:
    path: C
    method: GET
- name: templating_engines
  endpoint:
    path: /templating_engines
    method: GET
    data_selector: engines
    params: {}
- name: Node.js Tutorials
  endpoint:
    path: /tutorials/nodejs
    method: GET
    data_selector: tutorials
    params: {}
- name: Node.js Books
  endpoint:
    path: /books/nodejs
    method: GET
    data_selector: books
    params: {}
- name: Node.js Courses
  endpoint:
    path: /courses/nodejs
    method: GET
    data_selector: courses
    params: {}
- name: client_view
  endpoint:
    path: /clients/viewclient/:Code
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: top_users
  endpoint:
    path: /tags/node.js/topusers
    method: GET
    data_selector: users
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: items
    params: {}
- name: tag_info
  endpoint:
    path: /tags/typescript/info
    method: GET
    data_selector: info
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/typescript
    method: GET
    data_selector: questions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: array_characteristics
  endpoint:
    path: /api/characteristics
    method: GET
- name: index
  endpoint:
    path: /src/renderer/index.html
    method: GET
    data_selector: records
- name: index_css
  endpoint:
    path: /src/renderer/index.css
    method: GET
    data_selector: records
- name: vite_config
  endpoint:
    path: /vite.config.js
    method: GET
    data_selector: records
- name: app
  endpoint:
    path: /src/renderer/App.tsx
    method: GET
    data_selector: records
- name: title_bar
  endpoint:
    path: /src/renderer/TitleBar.tsx
    method: GET
    data_selector: records
- name: main
  endpoint:
    path: /src/renderer/main.tsx
    method: GET
    data_selector: records
- name: tailwind_config
  endpoint:
    path: /tailwind.config.js
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: employees
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: index
  endpoint:
    path: /src/renderer/index.html
    method: GET
    data_selector: records
    params: {}
- name: index_css
  endpoint:
    path: /src/renderer/index.css
    method: GET
    data_selector: records
    params: {}
- name: vite_config
  endpoint:
    path: /vite.config.js
    method: GET
    data_selector: records
    params: {}
- name: app_tsx
  endpoint:
    path: /src/renderer/App.tsx
    method: GET
    data_selector: records
    params: {}
- name: title_bar_tsx
  endpoint:
    path: /src/renderer/TitleBar.tsx
    method: GET
    data_selector: records
    params: {}
- name: main_tsx
  endpoint:
    path: /src/renderer/main.tsx
    method: GET
    data_selector: records
    params: {}
- name: tailwind_config
  endpoint:
    path: /tailwind.config.js
    method: GET
    data_selector: records
    params: {}
- name: button
  endpoint:
    path: /api/button
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vite_project_creation
  endpoint:
    path: /guide/getting-started.html#scaffolding-your-first-vite-project
    method: GET
    data_selector: projects
    params: {}
- name: electron-vite
  endpoint:
    path: /questions/79562593/electron-vite-react-tailwindcss-v4
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: electron-vite
  endpoint:
    path: /questions/79562593/electron-vite-react-tailwindcss-v4
    method: GET
    data_selector: answers
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: GET
- name: questions
  endpoint:
    path: /questions
    method: GET
- name: tags
  endpoint:
    path: /tags
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: jobs
  endpoint:
    path: /jobs
    method: GET
- name: vite
  endpoint:
    path: /guide/getting-started.html
    method: GET
    data_selector: content
- name: tailwindcss
  endpoint:
    path: /npm/tailwindcss
    method: GET
    data_selector: data
    params: {}
- name: HeroUI Styles
  endpoint:
    path: /styles
    method: GET
    data_selector: styles
    params: {}
- name: hero_styles
  endpoint:
    path: /styles
    method: GET
    data_selector: styles
    params: {}
- name: hero_styles
  endpoint:
    path: /styles
    method: GET
    data_selector: records
- name: c++
  endpoint:
    path: /questions/tagged/c%2b%2b
    method: GET
    data_selector: questions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: knex
  endpoint:
    path: /api/knex
    method: GET
    data_selector: records
- name: auction_timeseries
  endpoint:
    path: /path/to/auction_timeseries
    method: GET
    data_selector: records
    params: {}
- name: mvp
  endpoint:
    path: /services/data/vXX.X/sobjects/mvp
    method: GET
    data_selector: records
    params: {}
- name: eh
  endpoint:
    path: /services/data/vXX.X/sobjects/eh
    method: GET
    data_selector: records
    params: {}
- name: duckdb
  endpoint:
    path: /services/data/vXX.X/sobjects/DuckDB
    method: GET
    data_selector: records
    params: {}
- name: clients
  endpoint:
    path: /api/clients
    method: POST
    data_selector: clients
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: POST
    data_selector: users
    params: {}
- name: authorization_codes
  endpoint:
    path: /api/authorization_codes
    method: POST
    data_selector: authorization_codes
    params: {}
- name: access_tokens
  endpoint:
    path: /api/access_tokens
    method: POST
    data_selector: access_tokens
    params: {}
- name: refresh_tokens
  endpoint:
    path: /api/refresh_tokens
    method: POST
    data_selector: refresh_tokens
    params: {}
- name: user_consents
  endpoint:
    path: /api/user_consents
    method: POST
    data_selector: user_consents
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: POST
- name: users
  endpoint:
    path: /users
    method: POST
- name: authorization_codes
  endpoint:
    path: /authorization_codes
    method: POST
- name: access_tokens
  endpoint:
    path: /access_tokens
    method: POST
- name: refresh_tokens
  endpoint:
    path: /refresh_tokens
    method: POST
- name: user_consents
  endpoint:
    path: /user_consents
    method: POST
- name: stream
  endpoint:
    path: /v1/stream/
    method: POST
    data_selector: data
    params: {}
- name: make_outbound_call
  endpoint:
    path: /make-outbound-call
    method: POST
    data_selector: message
    params: {}
- name: plivo_answer
  endpoint:
    path: /plivo/answer
    method: GET
    data_selector: responseXml
    params: {}
- name: outbound_media_stream
  endpoint:
    path: /outbound-media-stream
    method: GET
    data_selector: connection
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
- name: outbound_call
  endpoint:
    path: /make-outbound-call
    method: POST
    params: {}
- name: plivo_answer
  endpoint:
    path: /plivo/answer
    method: GET
    params: {}
- name: outbound_media_stream
  endpoint:
    path: /outbound-media-stream
    method: GET
    params: {}
- name: make_outbound_call
  endpoint:
    path: /make-outbound-call
    method: POST
    data_selector: message
    params: {}
- name: plivo_answer
  endpoint:
    path: /plivo/answer
    method: GET
    data_selector: responseXml
    params: {}
- name: outbound_media_stream
  endpoint:
    path: /outbound-media-stream
    method: GET
    data_selector: connection
    params: {}
- name: make_outbound_call
  endpoint:
    path: /make-outbound-call
    method: POST
    data_selector: message
    params: {}
- name: plivo_answer
  endpoint:
    path: /plivo/answer
    method: GET
    data_selector: responseXml
    params: {}
- name: outbound_media_stream
  endpoint:
    path: /outbound-media-stream
    method: GET
    data_selector: audio_event
    params: {}
- name: data
  endpoint:
    path: /api/data
    method: GET
    data_selector: message
    params: {}
- name: data
  endpoint:
    path: /api/data
    method: GET
    data_selector: message
    params: {}
- name: data
  endpoint:
    path: /api/data
    method: GET
    data_selector: message
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pages
  endpoint:
    path: /me/accounts
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params: {}
- name: page
  endpoint:
    path: /{page-id}
    method: GET
    data_selector: data
    params: {}
- name: creative_folders
  endpoint:
    path: /{business-id}/creative_folders
    method: GET
    data_selector: data
- name: feed
  endpoint:
    path: /feed
    method: POST
    data_selector: id
    params:
      link: <link to post>
- name: page_access_token
  endpoint:
    path: /{pageId}?fields=access_token
    method: GET
    data_selector: access_token
    params: {}
- name: permissions
  endpoint:
    path: /me/permissions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /me/accounts?fields=id,name,tasks,access_token,category,category_list
    method: GET
    data_selector: data
    params: {}
- name: me_accounts
  endpoint:
    path: /me/accounts
    method: GET
    data_selector: data
- name: page_details
  endpoint:
    path: /{page_id}
    method: GET
    data_selector: data
- name: pages
  endpoint:
    path: /me/accounts
    method: GET
    data_selector: data
    params:
      fields: id,name,tasks,access_token,category,category_list
- name: user_photos
  endpoint:
    path: /me/photos
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params: {}
- name: page
  endpoint:
    path: /{page-id}
    method: GET
    data_selector: data
    params: {}
- name: me_accounts
  endpoint:
    path: /me/accounts
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: default
  endpoint:
    path: /questions/79625808/registering-a-fastify-plugin-multiple-times-based-on-the-url
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: country_codes
  endpoint:
    path: /country-codes
    method: GET
    data_selector: codes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: country_codes
  endpoint:
    path: /locale-data/json
    method: GET
    data_selector: codes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: iso_3166_2_codes
  endpoint:
    path: /path/to/iso_3166_2_codes
    method: GET
    data_selector: subdivision
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: editor
  endpoint:
    path: /1/APIKey/tinymce/7/
    method: GET
    data_selector: editor
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: server
  endpoint:
    path: /opensign
    method: POST
    data_selector: response.data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: search_books
  endpoint:
    path: /check
    method: POST
    data_selector: matches
- name: search_books
  endpoint:
    path: /search
    method: POST
    data_selector: matches
    params:
      language: en-US
- name: check
  endpoint:
    path: /v2/check
    method: POST
    data_selector: matches
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: online_meeting_transcript
  endpoint:
    path: /transcripts
    method: GET
- name: webhooks
  endpoint:
    path: /speechtotext/v3.2/webhooks
    method: POST
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/transcription
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/transcription
    method: GET
    data_selector: questions
    params: {}
- name: text_pre_processing
  endpoint:
    path: /tasks/text_pre_processing
    method: GET
    data_selector: tasks
    params: {}
- name: coreference_resolution
  endpoint:
    path: /tasks/coreference_resolution
    method: GET
    data_selector: tasks
    params: {}
- name: dependency_parsing
  endpoint:
    path: /tasks/dependency_parsing
    method: GET
    data_selector: tasks
    params: {}
- name: document_summarization
  endpoint:
    path: /tasks/document_summarization
    method: GET
    data_selector: tasks
    params: {}
- name: named_entity_recognition
  endpoint:
    path: /tasks/named_entity_recognition
    method: GET
    data_selector: tasks
    params: {}
- name: information_extraction
  endpoint:
    path: /tasks/information_extraction
    method: GET
    data_selector: tasks
    params: {}
- name: language_modeling
  endpoint:
    path: /tasks/language_modeling
    method: GET
    data_selector: tasks
    params: {}
- name: part_of_speech_tagging
  endpoint:
    path: /tasks/part_of_speech_tagging
    method: GET
    data_selector: tasks
    params: {}
- name: morphological_analysis
  endpoint:
    path: /tasks/morphological_analysis
    method: GET
    data_selector: tasks
    params: {}
- name: phrase_structure_parsing
  endpoint:
    path: /tasks/phrase_structure_parsing
    method: GET
    data_selector: tasks
    params: {}
- name: machine_translation
  endpoint:
    path: /tasks/machine_translation
    method: GET
    data_selector: tasks
    params: {}
- name: question_answering
  endpoint:
    path: /tasks/question_answering
    method: GET
    data_selector: tasks
    params: {}
- name: sentiment_analysis
  endpoint:
    path: /tasks/sentiment_analysis
    method: GET
    data_selector: tasks
    params: {}
- name: semantic_parsing
  endpoint:
    path: /tasks/semantic_parsing
    method: GET
    data_selector: tasks
    params: {}
- name: text_categorization
  endpoint:
    path: /tasks/text_categorization
    method: GET
    data_selector: tasks
    params: {}
- name: textual_entailment_detection
  endpoint:
    path: /tasks/textual_entailment_detection
    method: GET
    data_selector: tasks
    params: {}
- name: topic_modeling
  endpoint:
    path: /tasks/topic_modeling
    method: GET
    data_selector: tasks
    params: {}
- name: word_sense_disambiguation
  endpoint:
    path: /tasks/word_sense_disambiguation
    method: GET
    data_selector: tasks
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transcripts
  endpoint:
    path: /users/{meetingOrganizerUserId}/onlineMeetings/getAllTranscripts(meetingOrganizerUserId='{meetingOrganizerUserId}')
    method: GET
    data_selector: value
    params: {}
- name: transcript_content
  endpoint:
    path: '{transcriptContentUrl}?$format=text/vtt'
    method: GET
    data_selector: content
    params: {}
- name: service_principal
  endpoint:
    path: /v1/servicePrincipals
    method: GET
    data_selector: value
- name: transcripts
  endpoint:
    path: /users/{meetingOrganizerUserId}/onlineMeetings/getAllTranscripts(meetingOrganizerUserId='{meetingOrganizerUserId}')
    method: GET
    data_selector: value
    params: {}
- name: transcripts
  endpoint:
    path: /users/{meetingOrganizerUserId}/onlineMeetings/getAllTranscripts(meetingOrganizerUserId='{meetingOrganizerUserId}')
    method: GET
    data_selector: value
- name: transcript_content
  endpoint:
    path: '{transcriptContentUrl}'
    method: GET
    data_selector: content
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: value
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: value
    params: {}
- name: transcripts
  endpoint:
    path: /users/{meetingOrganizerUserId}/onlineMeetings/getAllTranscripts(meetingOrganizerUserId='{meetingOrganizerUserId}')
    method: GET
- name: transcript
  endpoint:
    path: /questions/79690475/start-transcript-not-honouring-the-transcript-variable
    method: GET
    data_selector: records
    params: {}
- name: timeline
  endpoint:
    path: /questions/79690475/start-transcript-not-honouring-the-transcript-variable
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transcript
  endpoint:
    path: /services/data/vXX.X/sobjects/Transcript
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transcript
  endpoint:
    path: /start-transcript
    method: POST
    data_selector: transcript_data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: question
  endpoint:
    path: /feeds/question/79690475
    method: GET
    data_selector: entry
- name: timedtext
  endpoint:
    path: /api/timedtext
    method: GET
    data_selector: subtitles
    params:
      pot: MlTKDPiZFViCScoxi53z4dU-YjO7amXBJ6Jm8b_wN3bNI3OFAs4Q69edhGsKn5s1w__EKBSRtPlyPKyw2zgW6I9Nah1xPLeF7cBOx4pE2wgw7VZCZZk%3D
- name: captions
  endpoint:
    path: /captions
    method: GET
    data_selector: items
    params: {}
- name: timedtext
  endpoint:
    path: /timedtext
    method: GET
    data_selector: captions
- name: captions
  endpoint:
    path: /api/timedtext
    method: GET
    data_selector: subtitles
    params: {}
- name: timedtext
  endpoint:
    path: ''
    method: GET
    params:
      v: FDFyo0wUBKI
      caps: asr
      hl: tr
      lang: en
- name: captions
  endpoint:
    path: /api/timedtext
    method: GET
    data_selector: captions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: speech_recognition
  endpoint:
    path: /speech/recognition
    method: POST
    data_selector: result
    params:
      incremental: 'true'
- name: transcription
  endpoint:
    path: /v1.0/transcriptions
    method: POST
    data_selector: results
    params: {}
- name: transcription
  endpoint:
    path: /api/transcription
    method: POST
    data_selector: results
    params: {}
- name: diarization
  endpoint:
    path: /api/diarization
    method: POST
    data_selector: results
    params: {}
- name: speech_recognition
  endpoint:
    path: /speech/recognition
    method: POST
    data_selector: results
    params: {}
- name: transcription
  endpoint:
    path: /v1.0/transcriptions
    method: POST
    data_selector: results
    params: {}
- name: diarization
  endpoint:
    path: /v1.0/diarization
    method: POST
    data_selector: results
    params: {}
- name: speech_recognition
  endpoint:
    path: /recognize
    method: POST
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: transcription
  endpoint:
    path: /transcriptions
    method: POST
    data_selector: results
- name: speech_recognition
  endpoint:
    path: /speech/recognition
    method: POST
- name: speech_transcription
  endpoint:
    path: /transcribe
    method: POST
- name: question
  endpoint:
    path: /feeds/question/79499068
    method: GET
    data_selector: entry
- name: transcription
  endpoint:
    path: /v1/audio/transcriptions
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses API key for authentication.
- Initialization code must be called when the table is visible
- The main issue is to calculate the position of the cells when merging the hidden
  with the visible rows
- AWS_S3_SECURE_URLS = False
- AWS_S3_URL_PROTOCOL = 'http'
- JavaScript is single-threaded but can handle I/O operations in a non-blocking manner.
- Uses async.parallel to manage parallel requests
- Delays vary by function execution
- JavaScript has no standard library.
- Node.js is EVENT BASED and ASYNCHRONOUS / NON-BLOCKING.
- JavaScript is much more lightweight for expressing functionality.
- Node's goal is to provide an easy way to build scalable network programs.
- Node is similar in design to and influenced by systems like Ruby's Event Machine
  or Python's Twisted.
- There are new templating engines all the time.
- This room has been automatically frozen for inactivity
- Ensure you have the correct endpoint for client view.
- Uses REST API
- npm uses the semantic-versioning system.
- npm comes bundled with the installation of NodeJS, so there is no need for a separate
  install.
- TypeScript is a typed superset of JavaScript that transpiles to plain JavaScript.
- Supports multiple transports, automatically falling back when a transport fails.
- MySQL is a free, open-source Relational Database Management System (RDBMS) that
  uses Structured Query Language (SQL).
- Docker questions must be specifically related to software development.
- A container is an isolated package that contains everything, except for the kernel,
  needed to run a piece of software.
- Heroku allows you to manage environment-specific configuration separately from your
  source code.
- All of Heroku's functionality can be accessed from the command line.
- PostgreSQL is an open-source, relational database management system (RDBMS) available
  for all major platforms, including Linux, UNIX, Windows and OS X.
- Arrays can be statically allocated or dynamically allocated.
- Arrays can contain multiple indices.
- Webpack is a module bundler. Its main purpose is to bundle JavaScript files for
  usage in a browser, yet it can also transform, bundle, or package just about any
  resource or asset.
- Passport.js is authentication middleware for Node.js.
- Errors related to PostCSS configuration and Tailwind v4 incompatibility have been
  encountered.
- Using light-dark() would be appealing to me, but it is part of the 2024 baseline
  and somewhat raises the minimum browser version requirement set by TailwindCSS v4
  - which is already high - originally.
- Uses OAuth2 for authentication
- Project setup includes usage of Electron, Vite, React, and TailwindCSS.
- Manual loading of HeroUI styles is required.
- Using tailwindcss v4 with vite in electron-vite project
- Ensure correct imports in vite.config.ts
- I see that the quick-start you're using is a less maintained package. I would follow
  the official guides for installing Electron + Vite + React + TailwindCSS v4.
- Using Electron with Vite and TailwindCSS v4 requires following the official installation
  guides.
- If you're using Vite, then @tailwindcss/vite is one of the best options starting
  from v4.
- The installation of TailwindCSS v3 and v4 is different.
- For v3 installation, use 'npm install -D tailwindcss@3'.
- To install TailwindCSS v4, refer to the updated installation and upgrade guides.
- As of v2.8, HeroUI supports Tailwind CSS v4.
- Removed @tailwind directives in v4. Use @import 'tailwindcss' instead.
- TailwindCSS v4 removes the need for Sass and other preprocessors.
- If you can migrate to normal .css files, then upgrading using the upgrade tool should
  just work.
- Ignore `node_modules` by default (but can be overridden by `@source not …` rules)
- Files that are in your `.gitignore` file are ignored
- To exclude paths from TailwindCSS's automatic source detection, use the `@source
  not` directive.
- TailwindCSS v4 automatically discovers class names in the project.
- Uses Tailwind CSS v4
- Requires setup of connected app in HeroUI
- Ensure all dependencies are installed correctly.
- Use the correct CSS path in index.html.
- 'Use @custom-variant dark instead of dark: ''class'''
- The tailwind.config.js file has been removed.
- The @tailwind directive has been removed.
- Uses Git for version control
- 'Error: Connection terminated unexpectedly'
- Requires OAuth2 authentication to access the API.
- This Code of Conduct is meant to work alongside individual site policies.
- Uses DuckDB-wasm for local browser usage
- Error instantiating duckdb in local environment
- 1 user can have many auth records (access_token, refresh_token)
- It should not become 1 table because 1 user can have many auth records (access_token,
  refresh_token) that's why they cannot become 1.
- WebSocket connection requires a valid token for audio playback.
- Ensure proper handling of WebSocket connections for audio streaming.
- Check the audio formats being used in the Plivo and ElevenLabs integration.
- I was able to create webhook by API POST request from Azure Devops documentation
  without specifying projectid.
- Uses WebSocket for real-time audio streaming
- Ensure that the audio format is compatible with both Plivo and ElevenLabs.
- Check WebSocket connection status and events for potential issues.
- Requires setup of connected app in api
- Call gets initiated and terminates within 5 seconds but no audio is heard.
- When running React Native on Android, localhost points to the device itself, not
  your computer.
- You can use 10.0.2.2 as a special alias that maps back to your machine.
- 'When running React Native on Android, localhost points to the device itself, not
  your computer. To connect to your Node.js server, you need to use either: - 10.0.2.2:<port>
  (special alias that maps back to your machine), or - your machine’s local IP address
  on the network, e.g. 192.168.x.x:<port>. Both options will correctly route traffic
  from the app to your development server.'
- The Android emulator uses 10.0.2.2 as a special alias to your development machine.
  If you are running your react native application in the Android emulator, you can
  replace 'localhost' in your fetch call with '10.0.2.2'. If using a real device,
  I recommend ngrok to expose your service over a public address.
- When running on Android emulator, use 10.0.2.2 instead of localhost.
- When running React Native on Android, localhost points to the device itself, not
  your computer. Use 10.0.2.2 or your machine’s local IP address.
- Requires OAuth2 setup for API access
- Uses OAuth2 with refresh token — requires setup of connected app in Stack Exchange
- Syntax detection attempts to run ambiguous files as CommonJS, and if the module
  fails to parse as CommonJS due to ES module syntax, Node.js tries again and runs
  the file as an ES module.
- Uses OAuth2 with refresh token.
- Ambiguous files are those with a .js or no extension, where the nearest parent package.json
  has no 'type' field.
- 'Ambiguous files are those with a .js or no extension, where the nearest parent
  package.json has no "type" field (either "type": "module" or "type": "commonjs").'
- A use case unlocked by this feature is the ability to use ES module syntax in extensionless
  scripts with no nearby package.json.
- They don't default to using ES modules; the first parsing attempt still assumes
  these ambiguous files are CommonJS.
- This can be disabled with --no-experimental-detect-module.
- 'Uses { skip: true } to prevent infinite refetches when an error occurs.'
- Facebook API requires proper permissions setup for data access.
- Rate limits apply based on the type of access token.
- Created app on meta for developers.
- The user must be an administrator, editor, or moderator of the page to impersonate
  it.
- If the page business requires Two Factor Authentication, the user also needs to
  enable Two Factor Authentication.
- Requires user permission for accessing photos
- Uses OAuth2 with refresh token — requires setup of Facebook app
- Some fields may return null if not publicly available
- No access_token returned in response may indicate an issue with the user access
  token
- Vite warns about externalizing modules like node:fs for browser compatibility.
- Vite gives warnings when modules that are only for Node.js are imported on the client
  side.
- Requires OAuth2 setup for accessing data
- The module may not implement the full list of ISO 3166-2 codes.
- The module implements the ECMA-402 ECMAScript Internationalization API, which may
  implement some ISO 3166-2 codes.
- Could not initialize country "GB-ENG"
- Could not initialize country "GB-NIR"
- Could not initialize country "GB-SCT"
- Could not initialize country "GB-WLS"
- The module you are using is designed for localization settings, implements the ECMA-402
  ECMAScript Internationalization API, which may implement some ISO 3166-2 codes,
  but not necessary, and if so, not necessary the full list.
- The module implements the ECMA-402 ECMAScript Internationalization API, which may
  not implement the full list of ISO 3166-2 codes.
- The module you are using is designed for localization settings, implements the ECMA-402
  ECMAScript Internationalization API, which may implement some ISO 3166-2 codes,
  but not necessary the full list.
- TinyMCE’s Real-Time Collaboration (RTC) feature has been deprecated
- Current Suggested Edits functionality only works asynchronously, not in real time
- TinyMCE's Real-Time Collaboration (RTC) feature has been deprecated.
- Current Suggested Edits functionality only works asynchronously, not in real time.
- Requires setup of TinyMCE account for API key
- TinyMCE’s Real-Time Collaboration (RTC) feature has been deprecated, and the current
  Suggested Edits functionality only works asynchronously, not in real time.
- SMTP emails are working correctly, but PDF attachments are 0 KB.
- Handles misspellings with a spell-check API
- Filters based on exact indexOf matches
- Handles misspellings and variations in search queries.
- The API checks text for grammatical errors and provides corrections.
- Questions about Windows administration tasks involving PowerShell should be asked
  on Super User or Server Fault.
- When using a live stream words are returned almost realtime. This is limited by
  1 minute or when paused for ~1 second. When using an asynchronous file the speech
  to text can be as long as 80 minutes.
- Questions should not use the [rstudio] tag unless they relate specifically to the
  RStudio interface and not just the R language.
- If you receive no response to your questions after a few days, or if your question
  is put on hold for being off-topic, it is then OK to post to another venue.
- DO NOT USE UNLESS YOUR QUESTION IS FOR PYTHON 3 ONLY. Always use alongside the standard
  python tag.
- Python 3 is strongly recommended for any new development. As of January 2020, Python
  2 has reached End Of Life status, meaning it will receive no further updates or
  bugfixes, including for security issues. Many frameworks and other add on projects
  are following a similar policy. As such, we can only recommend learning and teaching
  Python 3.
- The Microsoft Teams Developer Platform allows you to integrate your app into Microsoft
  Teams.
- '403 Error: ''not allowed access through RSC permission evaluation'' on Teams Transcript
  with OnlineMeetingTranscript.Read.All'
- Some objects may return nulls in deeply nested fields
- Requires setup of Azure Active Directory for authentication
- Grant admin consent for required permissions.
- Uses OAuth2 with bearer token
- Application.ReadWrite.OwnedBy - Application (Admin consent granted)
- Application permissions may require admin consent for certain operations
- Automating the download of Power Platform billing reports may result in an UnknownError.
- Uses OAuth2 with refresh token
- Ensure API permissions are granted for the app
- The $Transcript variable in the script is defined in the Script scope, not the Global
  scope.
- Defining $Transcript as a global variable will work.
- The example code from MS Learn for Start-Transcript forms the basis of my attempt.
- $Transcript is a Preference variable and should be defined as a global variable
  to be honored by Start-Transcript.
- The example you used as source is meant to be run directly in the console, not in
  a script.
- Defining $Transcript as global variable will work.
- The $Transcript variable in your script is (by default) defined in the Script scope,
  not the Global scope.
- Most recent 30 from stackoverflow.com
- A typical successful timedtext endpoint includes the pot parameter.
- Base URL without the pot parameter may return empty with a 200 code.
- A typical successful timedtext endpoint requires the pot parameter.
- YouTube normally calls the endpoint with the &pot parameter to return specific language
  subtitles.
- Enable speaker diarization by setting SpeechServiceConnection_EnableSpeakerDiarization
  to true.
- Requires Azure subscription and API key.
- Use let transcriber = new SpeechSDK.ConversationTranscriber(speechConfig, audioConfig);
- Requires user interaction to ask for microphone permission
- Requires subscription key for API access
- Use ConversationTranscriber instead of SpeechRecognizer for diarization support.
- Enable speaker diarization by setting the property SpeechServiceConnection_EnableSpeakerDiarization
  to true.
- Requires Azure subscription and setup of speech services.
- Speaker diarization is enabled via SpeechServiceConnection_EnableSpeakerDiarization
  property.
- Sign up with Google
- Sign up with GitHub
- Ensure your subscription key is valid and has access to the Speech API.
- Enable speaker diarization with property SpeechServiceConnection_EnableSpeakerDiarization
- Extract and display the speaker ID using result.speakerId.
- You can't completely disable content filtration.
- Content safety feature could not be turned off/disabled directly.
- You can't completely disable content filtration. but what you can do is, before
  passing the transcripts you do preprocess them.
- APIM authenticates to AOAI using a separate Managed Identity by way of the following
  API policy plus AOAI IAM roles.
- Ensure proper audio file format is used.
- Rate limits may apply to API usage.
- Content filtering system powered by Azure AI Content Safety.
- Requires OAuth2 authentication for API access.
- Requires setup of an account to access.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- rowspan='0' cells appear instead of copying the correct cell
- No specific error codes mentioned
- '401 Unauthorized: Check your credentials'
- '404 Not Found: The requested resource does not exist'
- '429 Too Many Requests: Rate limit exceeded'
- npm error could not determine executable to run
- Cannot find any CSS files that reference Tailwind CSS.
- You must use only npm tailwindcss then @import "tailwindcss" in your main scss.
- 'Unexpected token CloseSquareBracket: Check your CSS for invalid syntax'
- '404 Not Found: Check the endpoint URL'
- '500 Internal Server Error: Retry later'
- Removed @tailwind directives
- Connection terminated unexpectedly
- '401 Unauthorized: Check your credentials or token.'
- Error instantiating duckdb
- '401 Unauthorized: Check your credentials.'
- '400 Bad Request: Ensure ''to'' number is provided in request body.'
- '500 Internal Server Error: Check server logs for details on the failure.'
- '400 Bad Request: Check the request body for missing ''to'' number.'
- '500 Internal Server Error: Ensure Plivo credentials are correct.'
- error fetching data
- 'Error fetching data: Check if the server is running and accessible.'
- 'error fetching data: Check if the server is running or the URL is correct.'
- 'SyntaxError: Cannot use import statement outside a module'
- '190: Invalid OAuth access token'
- '492: Invalid request'
- 'OAuthException: The user must be an administrator, editor, or moderator of the
  page in order to impersonate it. If the page business requires Two Factor Authentication,
  the user also needs to enable Two Factor Authentication.'
- '200: No permission to access the resource'
- '1: An unknown error occurred'
- '492: Token has been revoked'
- '190: Access token is invalid or expired.'
- '492: User permissions are missing.'
- '401 Unauthorized: Check if the user who granted the page access token still has
  one of the required roles on the page.'
- 'Error getting page access token: Ensure the page has 2FA enabled and the user does
  as well.'
- 'OAuthException: The user must be an administrator, editor, or moderator of the
  page in order to impersonate it.'
- 'OAuthException: Required permissions were not granted.'
- 'OAuthException: Invalid OAuth access token'
- '100: Invalid parameter'
- '200: Permissions error'
- '401: Unauthorized'
- 'Unknown error: Failure to get page access token'
- 'Error getting page access token: {error.message}'
- Module 'node:fs' has been externalized for browser compatibility
- Module "node:fs" has been externalized for browser compatibility
- '401 Unauthorized: Recheck API key or domain settings'
- '403 Forbidden: not allowed access through RSC permission evaluation'
- '403 Error: not allowed access through RSC permission evaluation'
- '403 Forbidden: Application is not allowed to perform operations on the user ''{user_id}'',
  neither is allowed access through RSC permission evaluation.'
- '403: not allowed access through RSC permission evaluation'
- 'InvalidAuthenticationTokenAudience: Recheck token audience'
- '403 Forbidden: Check application permissions and admin consent.'
- '403 Forbidden: Ensure proper permissions are granted'
- '401 Unauthorized: Check token validity and permissions'
- 'UnknownError: Encountered when using the same code on different tenants.'
- '403 Forbidden: Ensure proper API permissions are set'
- '404 Not Found: Verify endpoint correctness'
- Default path used if no path is specified for Start-Transcript.
- '403: Insufficient permissions to access the requested resource.'
- '404: The requested resource was not found.'
- '401: The request is missing required authentication credentials.'
- '401 Unauthorized: Check your subscription key and region.'
- '429 Too Many Requests: Slow down your request rate.'
- '404 Not Found: Resource not found'
- '401 Unauthorized: Invalid subscription key'
- '401 Unauthorized: Recheck subscription key or region.'
- '401 Unauthorized: Check API key or OAuth token.'
- '403 Forbidden: Check permissions for the requested resource.'
- '401 Unauthorized: Check if the subscription key is valid.'
- '400 Bad Request: Ensure the audio input is in the correct format.'
- '400 Bad Request: Check your request format and parameters.'
- '401 Unauthorized: Verify your subscription key.'
- '403 Forbidden: Access is denied. Check your permissions.'
- Content filtering may trigger unexpectedly.
- 'DeploymentNotFound: The API deployment for this resource does not exist'
- '400 Bad Request: Check audio file format and parameters.'
- '401 Unauthorized: Verify API key and authentication.'
- '429 Too Many Requests: Reduce request rate.'
- Content Safety causing unexpected results.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Clients
  - Users/Resource Owners
  - Authorization Codes
  - Access Tokens
  - Refresh Tokens
  - Consent/Grants
  - AccessToken
  - OAuthClient
  - ClientCredential
  - AuthorizationCode
  - $Transcript
  - global variable
  - Script scope
client:
  base_url: https://stackoverflow.com
source_metadata: null
