resources:
- name: create_tunnel
  endpoint:
    path: /api/v1/tunnels
    method: POST
- name: get_tunnel
  endpoint:
    path: /api/v1/tunnels/<tunnel ID>
    method: GET
- name: list_tunnels
  endpoint:
    path: /api/v1/tunnels?pageSize=100&pageNumber=1
    method: GET
- name: update_tunnel
  endpoint:
    path: /api/v1/tunnels/<tunnel ID>
    method: PUT
- name: delete_tunnel
  endpoint:
    path: /api/v1/tunnels/<tunnel ID>
    method: DELETE
- name: get_tunnel_status
  endpoint:
    path: /api/v1/tunnels/<tunnel ID>/status
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: SSL Exclusions API
  endpoint:
    path: /docs/atmos-cloud-api-ssl-exclusions
    method: GET
- name: Web Categories API
  endpoint:
    path: /docs/atmos-cloud-api-web-categories
    method: GET
- name: Threat intelligence protection
  endpoint:
    path: /docs/threat-intelligence-protection
    method: GET
- name: DNS Application
  endpoint:
    path: /docs/dns-application
    method: GET
- name: threat_intelligence_protection
  endpoint:
    path: /docs/threat-intelligence-protection
    method: GET
    data_selector: features
    params: {}
- name: dns_application
  endpoint:
    path: /docs/dns-application
    method: GET
    data_selector: features
    params: {}
- name: ssl_exclusions_api
  endpoint:
    path: /docs/atmos-cloud-api-ssl-exclusions
    method: GET
    data_selector: features
    params: {}
- name: web_categories_api
  endpoint:
    path: /docs/atmos-cloud-api-web-categories
    method: GET
    data_selector: features
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SSL Exclusions API
  endpoint:
    path: /docs/atmos-cloud-api-ssl-exclusions
    method: GET
- name: Web Categories API
  endpoint:
    path: /docs/atmos-cloud-api-web-categories
    method: GET
- name: Threat intelligence protection
  endpoint:
    path: /docs/threat-intelligence-protection
    method: GET
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: items
  endpoint:
    path: /api/v1/items
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: application_segments
  endpoint:
    path: /api/application_segments
    method: GET
    data_selector: segments
    params: {}
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: data
    params: {}
- name: web_categories
  endpoint:
    path: /api/web_categories
    method: GET
    data_selector: categories
    params: {}
- name: urlCategories
  endpoint:
    path: /api/v1/urlCategories
    method: GET
    data_selector: customOnly=true
    params: {}
- name: destinations
  endpoint:
    path: /api/v1/destinations
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: agent_settings
  endpoint:
    path: /api/v1/agent/settings
    method: GET
    data_selector: settings
    params: {}
- name: Windows Version Distribution
  endpoint:
    path: /agent/windows/version
    method: GET
    data_selector: version_options
- name: MacOS Version Distribution
  endpoint:
    path: /agent/macos/version
    method: GET
    data_selector: version_options
- name: user_portal
  endpoint:
    path: /api/v1/user-portal
    method: GET
    data_selector: data
    params: {}
- name: block_pages
  endpoint:
    path: /api/v1/block-pages
    method: GET
    data_selector: data
    params: {}
- name: block_profiles
  endpoint:
    path: /api/block_profiles
    method: GET
    data_selector: profiles
- name: customized_block_pages
  endpoint:
    path: /api/customized_block_pages
    method: GET
    data_selector: pages
- name: zpa_application_segments
  endpoint:
    path: /api/zpa/application_segments
    method: GET
    data_selector: application_segments
    params: {}
- name: endpoint1
  endpoint:
    path: /api/v1/endpoint1
    method: GET
    data_selector: data
    params: {}
- name: endpoint2
  endpoint:
    path: /api/v1/endpoint2
    method: GET
    data_selector: data
    params: {}
- name: url_categories
  endpoint:
    path: /api/v1/urlCategories
    method: GET
    data_selector: customOnly
    params:
      customOnly: 'true'
- name: destinations
  endpoint:
    path: /api/destinations
    method: GET
    data_selector: data
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: administrators
  endpoint:
    path: /api/v1/administrators
    method: GET
    data_selector: data
- name: Connectivity
  endpoint:
    path: /docs/firewall-rules-for-connector-connectivity
    method: GET
    data_selector: connectivity_info
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: tenant
  endpoint:
    path: /api/v1/tenants
    method: GET
    data_selector: tenants
    params: {}
- name: OVA Machine Configuration
  endpoint:
    path: /ova/configuration
    method: GET
    data_selector: records
    params: {}
- name: user_portal
  endpoint:
    path: /api/user_portal
    method: GET
    data_selector: records
- name: block_pages
  endpoint:
    path: /api/block_pages
    method: GET
    data_selector: records
- name: error_pages
  endpoint:
    path: /api/error_pages
    method: GET
    data_selector: records
- name: connector_deployment
  endpoint:
    path: /api/connectors/deployment
    method: GET
    data_selector: data
    params: {}
- name: block_profiles
  endpoint:
    path: /api/v1/block_profiles
    method: GET
    data_selector: data
    params: {}
- name: customized_block_pages
  endpoint:
    path: /api/v1/customized_block_pages
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: identity_object
  endpoint:
    path: /identity/objects
    method: POST
    data_selector: identity
    params: {}
- name: identity_group
  endpoint:
    path: /identity/groups
    method: POST
    data_selector: group
    params: {}
- name: IdP Integration
  endpoint:
    path: /docs/user-portal
    method: GET
    data_selector: records
- name: backend-tcp
  endpoint:
    path: /backend-tcp.axissecurity.com
    method: GET
- name: file_extensions
  endpoint:
    path: /api/file-extensions
    method: GET
    data_selector: extensions
- name: Identity Provider
  endpoint:
    path: /applications/sp-connections
    method: POST
    data_selector: data
    params: {}
- name: saml_integration
  endpoint:
    path: /api/v1/saml/integration
    method: GET
    data_selector: data
- name: Connectors
  endpoint:
    path: /api/v1/connectors
    method: GET
    data_selector: data
    params: {}
- name: OVA
  endpoint:
    path: /deploy/ova
    method: POST
    data_selector: ovaFiles
    params: {}
- name: self_hosted_web_application
  endpoint:
    path: /import/self-hosted-web-applications
    method: POST
    data_selector: applications
    params: {}
- name: ssh_server_application
  endpoint:
    path: /import/ssh-server-applications
    method: POST
    data_selector: applications
    params: {}
- name: remote_desktop_server_application
  endpoint:
    path: /import/remote-desktop-server-applications
    method: POST
    data_selector: applications
    params: {}
- name: network_range_application
  endpoint:
    path: /import/network-range-applications
    method: POST
    data_selector: applications
    params: {}
- name: Active Directory
  endpoint:
    path: /applications/active-directory
    method: POST
    data_selector: application
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: identity_object
  endpoint:
    path: /management/identities
    method: POST
    data_selector: identity
    params: {}
- name: identity_group
  endpoint:
    path: /management/identity_groups
    method: POST
    data_selector: identity_group
    params: {}
- name: database_server
  endpoint:
    path: /database/server
    method: POST
    data_selector: server
    params: {}
- name: IdP Metadata
  endpoint:
    path: /identity-providers
    method: POST
- name: API Permissions
  endpoint:
    path: /api-permissions
    method: POST
- name: Local Address And Port
  endpoint:
    path: /docs/connecting-to-a-git-repository
    method: POST
    data_selector: application_data
    params:
      port: 9418
- name: SSO Connector
  endpoint:
    path: /sso
    method: POST
    data_selector: response
    params: {}
- name: activity_log
  endpoint:
    path: /api/v1/activity-log
    method: GET
    data_selector: events
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: Network Range
  endpoint:
    path: /docs/network-range
    method: GET
- name: user_provisioning
  endpoint:
    path: /api/user/provisioning
    method: POST
    data_selector: data
    params: {}
- name: network_range
  endpoint:
    path: /api/v1/network_range
    method: GET
    data_selector: data
    params: {}
- name: office365
  endpoint:
    path: /api/v1/office365
    method: GET
    data_selector: data
    params: {}
- name: office_365
  endpoint:
    path: /api/v1/office365
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Office 365 Applications with Conditional Access
  endpoint:
    path: /docs/office-365-with-conditional-access
    method: GET
- name: self_hosted_web_applications
  endpoint:
    path: /import/self-hosted-web-applications
    method: POST
    data_selector: applications
    params: {}
- name: ssh_server_applications
  endpoint:
    path: /import/ssh-server-applications
    method: POST
    data_selector: applications
    params: {}
- name: remote_desktop_server_applications
  endpoint:
    path: /import/remote-desktop-server-applications
    method: POST
    data_selector: applications
    params: {}
- name: network_range_applications
  endpoint:
    path: /import/network-range-applications
    method: POST
    data_selector: applications
    params: {}
- name: RDP
  endpoint:
    path: /api/v1/rdp
    method: POST
    data_selector: data
    params: {}
- name: rdp_profile
  endpoint:
    path: /api/v1/rdp_profiles
    method: POST
    data_selector: data
    params: {}
- name: MSSQL
  endpoint:
    path: /database/mssql
    method: POST
    data_selector: records
- name: rdp_profile
  endpoint:
    path: /policy/rdp
    method: GET
    data_selector: profiles
    params: {}
- name: database_events
  endpoint:
    path: /api/v1/database/events
    method: GET
    data_selector: events
- name: RDP Application Errors and Troubleshooting
  endpoint:
    path: /docs/rdp
    method: GET
- name: git_application
  endpoint:
    path: /services/data/vXX.X/sobjects/GitApplication
    method: GET
    data_selector: records
    params: {}
- name: Git Application
  endpoint:
    path: /docs/adding-a-git-application
    method: POST
    data_selector: application
    params:
      local_address: domain_or_ip_address
      port: 9418
- name: git_profile
  endpoint:
    path: /api/git/profile
    method: GET
    data_selector: profiles
- name: activity_log
  endpoint:
    path: /logs/activity
    method: GET
    data_selector: events
    params: {}
- name: network_range
  endpoint:
    path: /api/v1/network_range
    method: GET
    data_selector: data
    params: {}
- name: network_range
  endpoint:
    path: /services/data/vXX.X/sobjects/NetworkRange
    method: GET
    data_selector: records
    params: {}
- name: ssh_range_application
  endpoint:
    path: /api/v1/ssh_range_applications
    method: GET
    data_selector: data
    params: {}
- name: ssh_range_application
  endpoint:
    path: /api/ssh_range
    method: POST
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: ssh_events
  endpoint:
    path: /api/ssh/events
    method: GET
- name: activity_log
  endpoint:
    path: /logs/ssh/events
    method: GET
    data_selector: logs
    params: {}
- name: RDP
  endpoint:
    path: /api/v1/rdp
    method: GET
    data_selector: records
- name: Web Applications
  endpoint:
    path: /api/v1/web-applications
    method: GET
    data_selector: records
- name: remote_application
  endpoint:
    path: /api/remote_application
    method: GET
    data_selector: records
    params: {}
- name: ssh_user_provisioning
  endpoint:
    path: /api/v1/ssh_user_provisioning
    method: POST
    data_selector: data
    params: {}
- name: rdp_application
  endpoint:
    path: /api/rdp/applications
    method: GET
    data_selector: data
    params: {}
- name: rdp_profile
  endpoint:
    path: /api/rdp/profiles
    method: GET
    data_selector: profiles
- name: RDP_Profile
  endpoint:
    path: /Policy/SecurityProfiles/RDP
    method: GET
    data_selector: profiles
    params: {}
- name: server_initiated_flow
  endpoint:
    path: /api/server-initiated-flow
    method: GET
    data_selector: records
- name: server_initiated_flow
  endpoint:
    path: /api/server_initiated_flow
    method: POST
    data_selector: records
    params: {}
- name: ssh_range_application
  endpoint:
    path: /api/v1/ssh_range
    method: POST
    data_selector: data
    params: {}
- name: ssh_server_application
  endpoint:
    path: /api/v1/ssh_server
    method: POST
    data_selector: data
    params: {}
- name: user_provisioning
  endpoint:
    path: /api/v1/user/provisioning
    method: POST
    data_selector: data
    params: {}
- name: SSH Server
  endpoint:
    path: /settings/destinations/new_application
    method: POST
    data_selector: application
    params: {}
- name: VNC
  endpoint:
    path: /about-vnc
    method: GET
- name: VNC Application
  endpoint:
    path: /settings/applications/new
    method: POST
    data_selector: application
    params:
      local_address: Domain/IP address
      port: 5900
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /settings/axis_idp/users
    method: GET
    data_selector: users
    params: {}
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: users
- name: web_profile
  endpoint:
    path: /api/v1/web_profiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: policy_rules
  endpoint:
    path: /api/v1/policy/rules
    method: GET
    data_selector: rules
- name: device_trust
  endpoint:
    path: /api/device_trust
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /api/events
    method: GET
    data_selector: records
    params: {}
- name: device_trust_client
  endpoint:
    path: /api/v1/device-trust-client
    method: POST
    data_selector: data
- name: domain_certificates
  endpoint:
    path: /api/v1/domain-certificates
    method: GET
    data_selector: data
    params: {}
- name: device_posture
  endpoint:
    path: /api/v1/device_posture
    method: GET
    data_selector: devices
    params: {}
- name: Device Posture Object
  endpoint:
    path: /policy/device_trust/new_device_trust
    method: POST
    data_selector: device_posture
    params: {}
- name: Policy Rule
  endpoint:
    path: /policy/rules
    method: POST
    data_selector: policy_rule
    params: {}
- name: identity_object
  endpoint:
    path: /api/v1/identity_object
    method: GET
    data_selector: data
- name: vnc
  endpoint:
    path: /api/vnc
    method: GET
    data_selector: data
    params: {}
- name: identity_object
  endpoint:
    path: /services/data/vXX.X/sobjects/IdentityObject
    method: GET
    data_selector: records
- name: vnc_application
  endpoint:
    path: /applications/vnc
    method: POST
    data_selector: application
    params:
      local_address: Domain or IP address
      port: 5900
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: applications
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
    params: {}
- name: Bulk Actions
  endpoint:
    path: /docs/bulk-actions
    method: GET
    data_selector: bulk_actions
    params: {}
- name: agent_device_prerequisites
  endpoint:
    path: /services/data/vXX.X/sobjects/AgentDevicePrerequisites
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: agent
  endpoint:
    path: /api/v1/agent
    method: GET
    data_selector: agents
    params: {}
- name: temporary_rule
  endpoint:
    path: /api/v1/temporary_rule
    method: POST
    data_selector: data
    params: {}
- name: Atmos Agent Installer
  endpoint:
    path: /download/AtmosAgent
    method: GET
    data_selector: installer_file
    params: {}
- name: device_trust_client
  endpoint:
    path: /api/v1/device-trust-client
    method: POST
    data_selector: data
- name: Device Posture Object
  endpoint:
    path: /api/device_posture_object
    method: POST
    data_selector: device_posture
    params: {}
- name: Policy Rule
  endpoint:
    path: /api/policy_rule
    method: POST
    data_selector: policy_rule
    params: {}
- name: agent
  endpoint:
    path: /api/v1/agent
    method: GET
    data_selector: data
    params: {}
- name: device_posture
  endpoint:
    path: /api/device_posture
    method: GET
    data_selector: data
    params: {}
- name: domain_joined_check
  endpoint:
    path: /api/domain_joined_check
    method: GET
    data_selector: data
    params: {}
- name: enrolled_agent
  endpoint:
    path: /api/v1/enrolled-agents
    method: GET
    data_selector: data
    params: {}
- name: user_destination_pairing
  endpoint:
    path: /api/v1/user-destination-pairings
    method: GET
    data_selector: data
- name: user_activity
  endpoint:
    path: /api/v1/user_activity
    method: GET
    data_selector: data
    params: {}
- name: session_logs
  endpoint:
    path: /api/v1/session_logs
    method: GET
    data_selector: data
    params: {}
- name: agent_updates
  endpoint:
    path: /agent/updates
    method: GET
    data_selector: updates
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: application_activity
  endpoint:
    path: /api/v1/application/activity
    method: GET
    data_selector: records
- name: user_activity
  endpoint:
    path: /api/v1/user/activity
    method: GET
    data_selector: records
- name: atmos_agent
  endpoint:
    path: /api/v1/atmos_agent
    method: GET
    data_selector: data
    params: {}
- name: Atmos Agent Mobile Application
  endpoint:
    path: /atmos/agent/mobile
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: connector
  endpoint:
    path: /api/connectors
    method: GET
    data_selector: data
    params: {}
- name: Atmos Agent Installer
  endpoint:
    path: /download/AtmosAgent
    method: GET
    data_selector: installer
    params: {}
- name: activity
  endpoint:
    path: /api/v1/activity
    method: GET
    data_selector: records
- name: atmos_agent
  endpoint:
    path: /api/v1/agents
    method: GET
    data_selector: data
- name: audit_log
  endpoint:
    path: /audit/logs
    method: GET
    data_selector: logs
- name: enrolled_agents
  endpoint:
    path: /api/v1/enrolled_agents
    method: GET
    data_selector: agents
    params: {}
- name: policies
  endpoint:
    path: /api/v1/policies
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: ztna_activity_log
  endpoint:
    path: /logs/ztna
    method: GET
    data_selector: records
- name: dns_request_activity_log
  endpoint:
    path: /logs/dns-request
    method: GET
    data_selector: records
- name: swg_activity_log
  endpoint:
    path: /logs/swg
    method: GET
    data_selector: records
- name: ipsec_host_filtering_activity_log
  endpoint:
    path: /logs/ipsec-host-filtering
    method: GET
    data_selector: records
- name: ipsec_direct_activity_log
  endpoint:
    path: /logs/ipsec-direct
    method: GET
    data_selector: records
- name: agent
  endpoint:
    path: /api/v1/agent
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: API Client
  endpoint:
    path: /api/clients
    method: POST
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: commit_changes
  endpoint:
    path: /api/v1/commit
    method: POST
    data_selector: null
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: records
- name: get_user_details
  endpoint:
    path: /users/<user ID>
    method: GET
    data_selector: records
- name: get_user_list
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params:
      pageSize: '100'
      pageNumber: '1'
- name: update_user
  endpoint:
    path: /users/<user id>
    method: PUT
    data_selector: records
- name: delete_user
  endpoint:
    path: /users/<user id>
    method: DELETE
- name: user_activity
  endpoint:
    path: /api/v1/user/activity
    method: GET
    data_selector: activity_records
    params: {}
- name: activity_exploration
  endpoint:
    path: /api/activity
    method: GET
    data_selector: records
    params: {}
- name: connectors
  endpoint:
    path: /api/v1/connectors
    method: POST
    data_selector: command
    params: {}
- name: get_connector_details
  endpoint:
    path: /api/v1/connectors/<connector ID>
    method: GET
    data_selector: name
    params: {}
- name: list_connectors
  endpoint:
    path: /api/v1/connectors?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
    params: {}
- name: update_connector
  endpoint:
    path: /api/v1/connectors/<connector ID>
    method: PUT
    data_selector: name
    params: {}
- name: delete_connector
  endpoint:
    path: /api/v1/connectors/<connector ID>
    method: DELETE
    data_selector: ''
    params: {}
- name: get_connector_status
  endpoint:
    path: /api/v1/connectors/<connector ID>/status
    method: GET
    data_selector: status
    params: {}
- name: regenerate_command
  endpoint:
    path: /api/v1/connectors/<connector ID>/regenerate
    method: POST
    data_selector: command
    params: {}
- name: audit_logs
  endpoint:
    path: /api/v1/audit-logs
    method: GET
    data_selector: logs
- name: connector_zones
  endpoint:
    path: /services/data/vXX.X/sobjects/ConnectorZone
    method: GET
    data_selector: records
    params: {}
- name: activity_log
  endpoint:
    path: /api/v1/activity_log
    method: GET
    data_selector: logs
- name: connector_zones
  endpoint:
    path: /api/v1/connectorzones
    method: POST
    data_selector: connectors
- name: existing_connector_zone
  endpoint:
    path: /api/v1/connectorzones/<connector zone ID>
    method: GET
    data_selector: connectors
- name: list_connector_zones
  endpoint:
    path: /api/v1/connectorzones?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
- name: update_connector_zone
  endpoint:
    path: /api/v1/connectors/<connector ID>
    method: PUT
- name: delete_connector_zone
  endpoint:
    path: /api/v1/connectorzones/<connector zone ID>
    method: DELETE
- name: locations
  endpoint:
    path: /atmos-cloud-api/locations
    method: GET
- name: events
  endpoint:
    path: /services/data/vXX.X/events
    method: GET
    data_selector: records
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: data
    params:
      pageSize: '100'
      pageNumber: '1'
- name: create_location
  endpoint:
    path: /locations
    method: POST
    data_selector: id
    params: {}
- name: get_location
  endpoint:
    path: /locations/<location ID>
    method: GET
    data_selector: id
    params: {}
- name: update_location
  endpoint:
    path: /locations/<location ID>
    method: PUT
    data_selector: id
    params: {}
- name: delete_location
  endpoint:
    path: /locations/<location ID>
    method: DELETE
    data_selector: id
    params: {}
- name: sublocations
  endpoint:
    path: /locations/<location ID>/sublocations
    method: GET
    data_selector: data
    params:
      pageSize: '100'
      pageNumber: '1'
- name: axis_security
  endpoint:
    path: /services/data/v1.0/axis_security
    method: POST
    data_selector: logs
    params: {}
- name: delete_sub_location
  endpoint:
    path: /api/v1/locations/<location ID>/sublocations/<sub-location ID>
    method: DELETE
    data_selector: ''
    params: {}
- name: endpoint
  endpoint:
    path: /api/v1/endpoint
    method: GET
    data_selector: data
    params: {}
- name: api_client
  endpoint:
    path: /api_clients
    method: POST
- name: tags
  endpoint:
    path: /api/v1/tags
    method: POST
    data_selector: tag details
- name: tag_details
  endpoint:
    path: /api/v1/tags/<tag ID>
    method: GET
    data_selector: tag information
- name: list_tags
  endpoint:
    path: /api/v1/tags?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
- name: update_tag
  endpoint:
    path: /api/v1/tags/<tag id>
    method: PUT
    data_selector: tag details
- name: delete_tag
  endpoint:
    path: /api/v1/tags/<tag id>
    method: DELETE
    data_selector: empty
- name: rate_limit
  endpoint:
    path: /api/v1/rate_limit
    method: GET
    data_selector: data
    params: {}
- name: create_application
  endpoint:
    path: /api/v1/applications
    method: POST
    data_selector: tag details
- name: get_application_details
  endpoint:
    path: /api/v1/applications/<application ID>
    method: GET
    data_selector: application information
- name: list_applications
  endpoint:
    path: /api/v1/applications?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
- name: update_application
  endpoint:
    path: /api/v1/applications/<application ID>
    method: PUT
    data_selector: tag details
- name: delete_application
  endpoint:
    path: /api/v1/applications/<application ID>
    method: DELETE
    data_selector: ''
- name: web_categories
  endpoint:
    path: /atmos/api/v1/webCategories
    method: GET
    data_selector: records
    params: {}
- name: Management API
  endpoint:
    path: /services/data/vXX.X/management
    method: GET
    data_selector: records
    params: {}
- name: commit_changes
  endpoint:
    path: /api/v1/commit
    method: POST
    data_selector: ''
- name: web_category
  endpoint:
    path: /api/v1/webcategories
    method: POST
    data_selector: id
    params: {}
- name: existing_web_category
  endpoint:
    path: /api/v1/webcategories/<web category ID>
    method: GET
    data_selector: id
    params: {}
- name: list_web_categories
  endpoint:
    path: /api/v1/webcategories?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
    params: {}
- name: update_web_category
  endpoint:
    path: /api/v1/webcategories/<web category ID>
    method: PUT
    data_selector: id
    params: {}
- name: delete_web_category
  endpoint:
    path: /api/v1/webcategories/<web category ID>
    method: DELETE
    data_selector: id
    params: {}
- name: create_user
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: user
    params: {}
- name: get_user_details
  endpoint:
    path: /api/v1/users/<user ID>
    method: GET
    data_selector: user
    params: {}
- name: get_users_list
  endpoint:
    path: /api/v1/users?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
    params: {}
- name: update_user
  endpoint:
    path: /api/v1/users/<user id>
    method: PUT
    data_selector: user
    params: {}
- name: delete_user
  endpoint:
    path: /api/v1/users/<user id>
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_user_group
  endpoint:
    path: /api/v1/groups/
    method: DELETE
    data_selector: ''
    params: {}
- name: ssl_exclusion
  endpoint:
    path: /sslexclusions
    method: POST
    data_selector: response
    params: {}
- name: get_ssl_exclusion
  endpoint:
    path: /sslexclusions/<ssl exclusion ID>
    method: GET
    data_selector: response
    params: {}
- name: list_ssl_exclusions
  endpoint:
    path: /sslexclusions?pageSize=100&pageNumber=1
    method: GET
    data_selector: response
    params: {}
- name: update_ssl_exclusion
  endpoint:
    path: /sslexclusions/<ssl exclusion ID>
    method: PUT
    data_selector: response
    params: {}
- name: delete_ssl_exclusion
  endpoint:
    path: /ssl exclusions/<ssl exclusion ID>
    method: DELETE
    data_selector: response
    params: {}
- name: example_resource
  endpoint:
    path: /api/v1/resource
    method: GET
    data_selector: data
    params: {}
- name: connectors
  endpoint:
    path: /connectors
    method: POST
    data_selector: ''
    params: {}
- name: connector_details
  endpoint:
    path: /connectors/<connector ID>
    method: GET
    data_selector: ''
    params: {}
- name: list_connectors
  endpoint:
    path: /connectors
    method: GET
    data_selector: ''
    params:
      pageSize: '100'
      pageNumber: '1'
- name: update_connector
  endpoint:
    path: /connectors/<connector ID>
    method: PUT
    data_selector: ''
    params: {}
- name: delete_connector
  endpoint:
    path: /connectors/<connector ID>
    method: DELETE
    data_selector: ''
    params: {}
- name: connector_status
  endpoint:
    path: /connectors/<connector ID>/status
    method: GET
    data_selector: ''
    params: {}
- name: regenerate_connector
  endpoint:
    path: /connectors/<connector ID>/regenerate
    method: POST
    data_selector: ''
    params: {}
- name: connectors
  endpoint:
    path: /connectors
    method: POST
    data_selector: body
- name: connector_zones
  endpoint:
    path: /services/data/vXX.X/sobjects/ConnectorZone
    method: GET
    data_selector: records
    params: {}
- name: create_connector_zone
  endpoint:
    path: /api/v1/connectorzones
    method: POST
    data_selector: id
    params: {}
- name: get_connector_zone
  endpoint:
    path: /api/v1/connectorzones/<connector zone ID>
    method: GET
    data_selector: id
    params: {}
- name: list_connector_zones
  endpoint:
    path: /api/v1/connectorzones?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
    params: {}
- name: update_connector_zone
  endpoint:
    path: /api/v1/connectors/<connector ID>
    method: PUT
    data_selector: name
    params: {}
- name: delete_connector_zone
  endpoint:
    path: /api/v1/connectorzones/<connector zone ID>
    method: DELETE
    data_selector: id
    params: {}
- name: locations
  endpoint:
    path: /atmos/api/locations
    method: GET
    data_selector: locations
    params: {}
- name: create_location
  endpoint:
    path: /locations
    method: POST
    data_selector: id
    params: {}
- name: get_location_details
  endpoint:
    path: /locations/<location ID>
    method: GET
    data_selector: id
    params: {}
- name: get_locations_list
  endpoint:
    path: /locations?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
    params: {}
- name: update_location
  endpoint:
    path: /locations/<location ID>
    method: PUT
    data_selector: id
    params: {}
- name: delete_location
  endpoint:
    path: /locations/<location ID>
    method: DELETE
    data_selector: id
    params: {}
- name: delete_sub_location
  endpoint:
    path: /api/v1/locations/<location ID>/sublocations/<sub-location ID>
    method: DELETE
    data_selector: ''
    params: {}
- name: SCIM Service Provider
  endpoint:
    path: /path/to/scim/endpoint
    method: POST
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /scim/v2/Users
    method: POST
    data_selector: data
- name: group
  endpoint:
    path: /scim/v2/Groups
    method: POST
    data_selector: data
- name: create_tag
  endpoint:
    path: /api/v1/tags
    method: POST
- name: get_tag
  endpoint:
    path: /api/v1/tags/<tag ID>
    method: GET
- name: get_tags
  endpoint:
    path: /api/v1/tags?pageSize=100&pageNumber=1
    method: GET
- name: update_tag
  endpoint:
    path: /api/v1/tags/<tag id>
    method: PUT
- name: delete_tag
  endpoint:
    path: /api/v1/tags/<tag id>
    method: DELETE
- name: provisioned_users
  endpoint:
    path: /api/v1/provisioned_users
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_application
  endpoint:
    path: /applications
    method: POST
- name: get_application_details
  endpoint:
    path: /applications/<application ID>
    method: GET
- name: get_applications_list
  endpoint:
    path: /applications?pageSize=100&pageNumber=1
    method: GET
- name: update_application
  endpoint:
    path: /applications/<application ID>
    method: PUT
- name: delete_application
  endpoint:
    path: /applications/<application ID>
    method: DELETE
- name: web_category
  endpoint:
    path: /api/v1/webcategories
    method: POST
    data_selector: data
    params: {}
- name: existing_web_category
  endpoint:
    path: /api/v1/webcategories/<web category ID>
    method: GET
    data_selector: data
    params: {}
- name: list_web_categories
  endpoint:
    path: /api/v1/webcategories?pageSize=100&pageNumber=1
    method: GET
    data_selector: data
    params: {}
- name: update_web_category
  endpoint:
    path: /api/v1/webcategories/<web category ID>
    method: PUT
    data_selector: data
    params: {}
- name: delete_web_category
  endpoint:
    path: /api/v1/webcategories/<web category ID>
    method: DELETE
    data_selector: data
    params: {}
- name: web_categories
  endpoint:
    path: /api/v1/web_categories
    method: GET
    data_selector: categories
    params: {}
- name: web_category
  endpoint:
    path: /api/v1/web_categories
    method: GET
    data_selector: categories
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: web_category
  endpoint:
    path: /atmos/api/web_categories
    method: GET
    data_selector: records
    params: {}
- name: create_ssl_exclusion
  endpoint:
    path: /api/v1/sslexclusions
    method: POST
    data_selector: null
    params: {}
- name: get_ssl_exclusion
  endpoint:
    path: /api/v1/sslexclusions/<ssl exclusion ID>
    method: GET
    data_selector: null
    params: {}
- name: list_ssl_exclusions
  endpoint:
    path: /api/v1/sslexclusions?pageSize=100&pageNumber=1
    method: GET
    data_selector: null
    params: {}
- name: update_ssl_exclusion
  endpoint:
    path: /api/v1/sslexclusions/<ssl exclusion ID>
    method: PUT
    data_selector: null
    params: {}
- name: delete_ssl_exclusion
  endpoint:
    path: /api/v1/ssl exclusions/<ssl exclusion ID>
    method: DELETE
    data_selector: null
    params: {}
- name: connector
  endpoint:
    path: /api/connectors
    method: GET
    data_selector: records
    params: {}
- name: certificate_management
  endpoint:
    path: /services/data/vXX.X/sobjects/CertificateManagement
    method: GET
    data_selector: records
    params: {}
- name: connectors
  endpoint:
    path: /connectors
    method: POST
    data_selector: body
- name: connector
  endpoint:
    path: /connectors
    method: POST
    data_selector: body
- name: har_files
  endpoint:
    path: /har/files
    method: GET
    data_selector: files
    params: {}
- name: URL Lookup
  endpoint:
    path: /settings/destinations/categories/url-lookup
    method: GET
    data_selector: results
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: records
- name: policies
  endpoint:
    path: /api/v1/policies
    method: GET
    data_selector: records
- name: user_provisioning
  endpoint:
    path: /api/v1/user_provisioning
    method: GET
    data_selector: data
- name: user_provisioning
  endpoint:
    path: /docs/scim-provisioning-with-okta
    method: GET
- name: provisioned_users
  endpoint:
    path: /provisioned_users
    method: GET
    data_selector: users
- name: locations
  endpoint:
    path: /api/v1/locations
    method: GET
    data_selector: locations
    params: {}
- name: policies
  endpoint:
    path: /api/v1/policies
    method: GET
    data_selector: policies
    params: {}
- name: users
  endpoint:
    path: /v2/users
    method: GET
    data_selector: results
- name: groups
  endpoint:
    path: /v2/groups
    method: GET
    data_selector: results
- name: provisioned_users
  endpoint:
    path: /v2/users
    method: GET
    data_selector: users
- name: user_groups
  endpoint:
    path: /v2/groups
    method: GET
    data_selector: groups
- name: provisioned_users
  endpoint:
    path: /api/v1/provisioned_users
    method: GET
    data_selector: users
    params: {}
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: groups
    params: {}
- name: file_security_profile
  endpoint:
    path: /api/v1/file_security_profiles
    method: GET
    data_selector: profiles
    params: {}
- name: file_security_profile
  endpoint:
    path: /api/v1/file-security-profiles
    method: GET
    data_selector: profiles
    params: {}
- name: policy_rule
  endpoint:
    path: /api/v1/policy-rules
    method: GET
    data_selector: rules
    params: {}
- name: provisioned_users
  endpoint:
    path: /settings/provisioned_users
    method: GET
    data_selector: users
- name: user_information
  endpoint:
    path: /settings/provisioned_users/idp_details
    method: GET
    data_selector: idp_details
- name: group_membership
  endpoint:
    path: /settings/provisioned_users/groups
    method: GET
    data_selector: groups
- name: provisioned_user_groups
  endpoint:
    path: /settings/provisioned_users/user_groups
    method: GET
    data_selector: user_groups
- name: group_information
  endpoint:
    path: /settings/provisioned_users/group_idp_details
    method: GET
    data_selector: group_idp_details
- name: users_associated_with_group
  endpoint:
    path: /settings/provisioned_identities/users
    method: GET
    data_selector: associated_users
- name: file_security_actions
  endpoint:
    path: /api/v1/file-security-actions
    method: GET
    data_selector: actions
    params: {}
- name: File Security Profile Actions
  endpoint:
    path: /file_security_profile_actions
    method: GET
    data_selector: actions
    params: {}
- name: File Matcher File Types
  endpoint:
    path: /file_matcher_file_types
    method: GET
    data_selector: file_types
    params: {}
- name: page_layout_files
  endpoint:
    path: /file_types/page_layout
    method: GET
    data_selector: files
    params: {}
- name: spreadsheet_files
  endpoint:
    path: /file_types/spreadsheet
    method: GET
    data_selector: files
    params: {}
- name: system_files
  endpoint:
    path: /file_types/system
    method: GET
    data_selector: files
    params: {}
- name: text_files
  endpoint:
    path: /file_types/text
    method: GET
    data_selector: files
    params: {}
- name: video_files
  endpoint:
    path: /file_types/video
    method: GET
    data_selector: files
    params: {}
- name: web_files
  endpoint:
    path: /file_types/web
    method: GET
    data_selector: files
    params: {}
- name: web_categories
  endpoint:
    path: /api/v1/web-categories
    method: GET
    data_selector: categories
    params: {}
- name: web_category
  endpoint:
    path: /api/v1/web-category
    method: GET
    data_selector: categories
    params: {}
- name: certificate_management
  endpoint:
    path: /api/v1/certificate_management
    method: GET
    data_selector: certificates
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: applications
- name: CA Certificates
  endpoint:
    path: /settings/certificates/ca-certificates
    method: GET
    data_selector: certificates
    params: {}
- name: Upload Certificate
  endpoint:
    path: /settings/certificates/upload
    method: POST
    data_selector: upload_response
    params: {}
- name: URL Lookup
  endpoint:
    path: /settings/destinations/categories/url-lookup/web-categories
    method: GET
- name: ssl_exclusions
  endpoint:
    path: /api/v1/ssl_exclusions
    method: GET
    data_selector: data
    params: {}
- name: locations
  endpoint:
    path: /api/locations
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ipsec_tunnels
  endpoint:
    path: /api/ipsec/tunnels
    method: GET
    data_selector: tunnels
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: locations
  endpoint:
    path: /api/v1/locations
    method: GET
    data_selector: records
- name: file_security_profile
  endpoint:
    path: /data-security-profile
    method: GET
    data_selector: records
    params: {}
- name: file_security_profile
  endpoint:
    path: /api/file_security_profiles
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /api/v1/database
    method: GET
    data_selector: records
- name: page_layout_files
  endpoint:
    path: /page_layout_files
    method: GET
    data_selector: files
    params: {}
- name: spreadsheet_files
  endpoint:
    path: /spreadsheet_files
    method: GET
    data_selector: files
    params: {}
- name: system_files
  endpoint:
    path: /system_files
    method: GET
    data_selector: files
    params: {}
- name: text_files
  endpoint:
    path: /text_files
    method: GET
    data_selector: files
    params: {}
- name: video_files
  endpoint:
    path: /video_files
    method: GET
    data_selector: files
    params: {}
- name: web_files
  endpoint:
    path: /web_files
    method: GET
    data_selector: files
    params: {}
- name: remote_desktop
  endpoint:
    path: /api/v1/remote-desktop
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: records
- name: agent_settings
  endpoint:
    path: /api/v1/agent/settings
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: web_application
  endpoint:
    path: /api/web-applications
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: data
- name: Posture Mismatch Notification
  endpoint:
    path: /docs/block-profiles-and-customized-block-pages#custom-block-profile-options
    method: GET
    data_selector: features
    params: {}
- name: Active Agents over last 90 days
  endpoint:
    path: /docs/enrolled-agent-management#monitoring-enrolled-agent-activity
    method: GET
    data_selector: features
    params: {}
- name: Entra/Azure IDP warning expiration
  endpoint:
    path: /docs/enrolled-agent-management#device-posture
    method: GET
    data_selector: features
    params: {}
- name: Enrolled Agents Device Posture
  endpoint:
    path: /docs/enrolled-agent-management#device-posture
    method: GET
    data_selector: features
    params: {}
- name: Export from Exploration
  endpoint:
    path: /docs/activity-exploration#exploration-export
    method: GET
    data_selector: features
    params: {}
- name: Posture Mismatch Notification
  endpoint:
    path: /docs/block-profiles-and-customized-block-pages#custom-block-profile-options
    method: GET
    data_selector: new_feature
- name: Active Agents over last 90 days
  endpoint:
    path: /docs/enrolled-agent-management#monitoring-enrolled-agent-activity
    method: GET
    data_selector: new_feature
- name: Entra/Azure IDP warning expiration
  endpoint:
    path: /docs/enrolled-agent-management#device-posture
    method: GET
    data_selector: new_feature
- name: Enrolled Agents Device Posture
  endpoint:
    path: /docs/enrolled-agent-management#device-posture
    method: GET
    data_selector: new_feature
- name: Mesh
  endpoint:
    path: /docs/mesh
    method: GET
    data_selector: new_feature
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: enrolled_agents
  endpoint:
    path: /api/v3/enrolled_agents
    method: GET
    data_selector: data
    params: {}
- name: mesh_connectivity
  endpoint:
    path: /api/v3/mesh_connectivity
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Posture Mismatch Notification
  endpoint:
    path: /docs/block-profiles-and-customized-block-pages#custom-block-profile-options
    method: GET
    data_selector: not applicable
    params: {}
- name: Active Agents over last 90 days
  endpoint:
    path: /docs/enrolled-agent-management#monitoring-enrolled-agent-activity
    method: GET
    data_selector: not applicable
    params: {}
- name: Entra/Azure IDP warning expiration
  endpoint:
    path: not applicable
    method: GET
    data_selector: not applicable
    params: {}
- name: Enrolled Agents Device Posture
  endpoint:
    path: /docs/enrolled-agent-management#device-posture
    method: GET
    data_selector: not applicable
    params: {}
- name: local_edge
  endpoint:
    path: /local/edge
    method: GET
    data_selector: records
- name: multi_region_apps
  endpoint:
    path: /multi/region/apps
    method: GET
    data_selector: records
- name: agent_tunnel
  endpoint:
    path: /agent/tunnel
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: Agent Management
  endpoint:
    path: /api/v1/agent-management
    method: GET
    data_selector: agents
- name: Network Range Management
  endpoint:
    path: /api/v1/network-range
    method: GET
    data_selector: ranges
- name: web_categories
  endpoint:
    path: /api/v1/web_categories
    method: GET
    data_selector: categories
- name: destinations_lists
  endpoint:
    path: /api/destinations/lists
    method: GET
    data_selector: records
- name: agent_settings
  endpoint:
    path: /agent/settings
    method: GET
    data_selector: settings
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: block_profiles
  endpoint:
    path: /api/v1/block_profiles
    method: GET
    data_selector: profiles
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: records
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: records
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
- name: user_activity
  endpoint:
    path: /api/v1/user_activity
    method: GET
    data_selector: data
    params: {}
- name: web_categories
  endpoint:
    path: /api/web_categories
    method: GET
    data_selector: categories
    params: {}
- name: destinations
  endpoint:
    path: /api/destinations
    method: GET
    data_selector: records
    params: {}
- name: administrators
  endpoint:
    path: /api/v1/administrators
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: connector_zones
  endpoint:
    path: /api/v1/connectors/zones
    method: GET
    data_selector: data
    params: {}
- name: database
  endpoint:
    path: /services/data/vXX.X/sobjects/Database
    method: GET
    data_selector: records
    params: {}
- name: database_events
  endpoint:
    path: /api/v1/database/events
    method: GET
    data_selector: events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: git_application
  endpoint:
    path: /api/v1/git
    method: GET
    data_selector: applications
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: application
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: connectors
  endpoint:
    path: /api/connectors
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: connectors
  endpoint:
    path: /api/v1/connectors
    method: GET
    data_selector: data
    params:
      incremental: last_updated
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: results
- name: groups
  endpoint:
    path: /api/v2/groups
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: user_provisioning
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: audit_logs
  endpoint:
    path: /api/v1/audit_logs
    method: GET
    data_selector: logs
- name: database
  endpoint:
    path: /edit/database
    method: GET
    data_selector: records
    params: {}
- name: database_events
  endpoint:
    path: /api/v1/database/events
    method: GET
    data_selector: events
    params: {}
- name: git_application
  endpoint:
    path: /services/data/vXX.X/sobjects/GitApplication
    method: GET
    data_selector: records
    params: {}
- name: git_events
  endpoint:
    path: /git/events
    method: GET
    data_selector: events
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- This feature is automatically enabled for all new tenants.
- Existing customers will be migrated, with further communication to follow.
- New features and enhancements began with version 3.0.
- New features and enhancements begin with version 3.0.
- New features and enhancements are summarized in release notes starting with version
  3.0.
- New PoP in Tel Aviv, Israel, is now available for use.
- General enhancements and performance optimizations.
- New Features in General Availability
- Rollout - This feature is automatically enabled for all new tenants.
- Requires setup of connected app in Axis
- Some endpoints may have rate limits
- A common approach is to deploy both Atmos Agent and Atmos Air
- Requires configuration of connected applications for OAuth2.
- API requests are limited to 100 requests per minute.
- Requires OAuth2 authentication setup.
- API responses may vary based on user permissions.
- Axis Security allows you to use SAML as your method of authentication.
- Any question you have - We're here to help. Visit our Customer Support Portal!
- Uses OAuth2 with refresh token.
- Axis provides continuous, application-centric visibility and Zero Trust controls
  to enable and secure organizations in today’s age of digital transformation.
- Atmos Cloud is a zero-trust agent-less access broker for employees, partners and
  other stakeholders.
- Uses OAuth2 with refresh token — requires setup of connected app in Atmos
- 'This is a limited release feature. For more information contact Axis Security Support:
  support@axissecurity.com'
- OAuth2 is used for authentication, ensure tokens are managed securely.
- Uses OAuth2 with refresh token — requires setup of connected app in Axis
- Some API responses may have nested structures
- Uses OAuth2 with refresh token — requires setup of connected app in Axis Security
- For iOS, the version updates are distributed via Apple App Store.
- For Android, the version updates are distributed via Google Play App Store.
- Requires a valid API key for access
- OAuth2 authentication is required for API access.
- Connectors should be located in a network that has connectivity to your applications.
- Best practice is to associate a minimum of 2 Connectors per Connector Zone.
- Some objects may return nulls in deeply nested fields
- Ensure proper OAuth2 setup for access.
- In content-filtering firewalls, make sure that WireGuard Protocol is allowed for
  all entries pointing to backend-udp.axissecurity.com and any other backend-related
  addresses.
- Uses OAuth2 with refresh token — requires setup of connected app in axis
- Ensure to configure client credentials for OAuth2.
- The OVA file is 2.3GB
- Installation process can take under 3 minutes, not including OVA download time which
  depends on network download speed.
- Axis recommends using the default CentOS Stream (Community RedHat) but can also
  provide customers with an Ubuntu version.
- Updates to the host OS are the organization's responsibility.
- Requires setup of connected app in API
- Ensure proper OAuth2 setup for API access
- Do NOT change the hostname or IP Address after running the systemctl command.
- The Default Block Page is automatically applied to new policy rules unless you choose
  to modify it when creating or editing a rule.
- Enabling the warning option does NOT restrict or block access to the website — it
  merely provides a warning before granting access.
- Amazon Linux 2 is recommended as it provides better performance on AWS infrastructure.
  Amazon Linux 2023 is not supported yet.
- An application is unreachable if there is no network access from the connector machine
  to the application or if the connector machine is configured to a different DNS
  server than expected.
- Check firewall settings to ensure they aren't blocking outbound connectivity from
  Connector to the Axis backend.
- If you do not input the Client Secret Expiration Date, it will automatically default
  to the current date.
- You can also find the certificate by clicking on the SSO instance you created.
- If the network you are placing the Connector is on 10.244.0.0/16, contact Axis Support
  for assistance to change the Atmos Connector's Kubernetes network configuration
  to a non-conflicting 10.200.0.0/16 range.
- Ensure OAuth2 is configured correctly.
- Requires setup of SAML App in PingFederate
- API requires authentication via OAuth2.
- The installation process can take under 3 minutes, not including the OVA download
  time which depends on the network download speed.
- Updates to the host OS are the organization's responsibility. The Connector software
  is designed to be compatible with updates to the host OS.
- 'Attribute Mapping: Add the SAML attributes that will be used to query the IdP in
  policy rules.'
- 'User Auto-Provisioning (SCIM): Generate an auto-provisioning token that will be
  used when configuring the Axis application in Okta or Azure AD.'
- Auto-provisioning can only be enabled once the IdP creation is complete.
- The maximum number of days for portal session lifetime is 90.
- The maximum number of days for Portal session lifetime is 90.
- Make sure your connector has external access when choosing the Virtual Private Cluster
  (VPC) to deploy.
- Take note of the VPC in which you deploy the connector, as the connector deploys
  to the same VPC as the destination applications.
- Headers marked with an asterisk (*) are required for importing the applications.
- This application is only relevant to those accessing via the Atmos Agent.
- Requires setup of connected app in Axis Security
- Rate limits may apply
- This application is only relevant to users accessing via the Atmos Agent.
- 'The following feature is under limited release. For more information contact Axis
  Support: support@axissecurity.com.'
- Minimal Agent Version - 3.26
- Minimal Connector Version - 2.71.0
- OAuth2 implementation requires client ID and secret.
- Some endpoints may have rate limits.
- Users must be added to the system as identity objects before being added to a policy
  rule.
- Only MSSQL database applications are supported.
- Microsoft Active Directory has been recently renamed to Microsoft Entra ID.
- Public Certificate has been created and needs to be downloaded.
- The Log Streaming Service can send user activity log information to any third-party
  log analytics tool, such as Splunk and Syslog.
- Ensure to configure the OAuth settings correctly.
- API may have rate limiting.
- Requires setup of connected app in PingFederate
- Ensure proper configuration of OAuth2 integration.
- Some API calls may be limited by user permissions
- 'Important: This configuration is relevant only for Okta and Azure AD.'
- 'Note: When setting the IdP as the Atmos Agent SSO, this will be the new IdP used
  to login with to the Atmos Agent.'
- 'Note: To commit your changes, navigate to the top-right menu, click Apply Changes,
  then select Commit Changes.'
- Before you begin, review the Prerequisites
- In the Name field, enter a meaningful name so that you can easily identify the application;
  for example, MSOffice365 Network - Conditional Access.
- Setup of connected app in Axis required for OAuth2
- Ensure that the API credentials are correctly set in DLT secrets.
- Uses OAuth2 with a security token for user validation.
- Only port 3389 is used for native RDP connections.
- Some configurations require additional permissions.
- Ensure that the OAuth2 setup is correctly configured.
- Axis Security recommends allowing application traffic through the firewall by port
  number, when possible, to avoid incorrect classification of the traffic by the firewall;
  for example, if you are using RDP, use port 3389.
- RDP profiles can be added through a POST request to the /api/v1/rdp_profiles endpoint.
- If you make a change to the RDP Profile, the change will only become active after
  you commit the changes by clicking the Apply Changes dropdown and clicking Commit
  changes.
- RDP Profiles are only applied to new sessions, not current sessions.
- OAuth2 authentication is required for access.
- If you need to send a HAR file, follow the steps here.
- The maximum token expiration is 24 hours.
- This needs to be done on the customer’s network, not the Axis Cloud.
- Authentication requires setup of connected app in Axis Security.
- Some endpoints may require additional parameters for pagination.
- This is a limited release feature.
- This feature is only supported when you have a single set of credentials for each
  user to connect to all your servers in the SSH range.
- Setup of the OAuth2 connected app in Axis is required.
- Setup of connected app in Axis Security is required.
- The maximum session length for a SSH range is 24 hours.
- You typically deploy 2 or more Axis Connectors. Usually, all the connectors go through
  the same public IP address.
- 'For more information contact Axis Security Support: mailto:support@axissecurity.com'
- Requires setup of connected app in Axis Security.
- This feature contains limited release components.
- Some options are limited release features.
- 'Some of the features are limited release. For more information contact Axis Security
  Support: support@axissecurity.com'
- Uses OAuth2 with refresh token — requires setup of connected app in axis cloud
- Users may need to enter Windows credentials for RDP session
- Requires proper configuration of OAuth2.
- To commit your changes, navigate to the top-right menu, click Apply Changes, then
  select Commit Changes.
- RDP profiles may require specific configurations.
- The maximum session length for an RDP is 24 hours.
- The default RDP File Reauthentication Time is 3 hours.
- API access can only be enabled once the 'Add Application' process is complete.
- URL rewriting is required when using an Axis hosted domain.
- Using URL rewriting may lead to broken links, especially for AJAX requests and JavaScript.
- Verify that the RDP profile allows file transfers.
- Depending on your application, configuring URL rewriting often requires working
  with Axis Security Customer Support, especially for complex applications.
- If you don’t have all the domains that are needed for URL rewriting for the Axis
  Hosted domain, the application will not load properly.
- External non-hosted domains or CDNs do not need to be configured.
- Domains are configured when adding a new web application.
- Server initiated flow requires specific configurations.
- Ensure to check permissions for API access.
- This option restricts access to specific IPs (without authentication or policy checking).
  Other sources will not be allowed to access the application.
- The maximum cookie expiration is 90 days.
- Ensure to configure OAuth2 for access.
- Requires configuration for API access.
- Certificates provide authentication between the client and server to securely send
  data using Transport Layer Security (TLS).
- Some applications may require additional configuration
- 'This feature contains limited release components. For more information contact
  Axis Security Support: support@axissecurity.com'
- This feature is only available for hosted domains, and not custom domains.
- While using the discovery tool, users may experience some latency or slow connection.
- We recommend using the API token when possible.
- Requires setup of connected app in Axis.
- Ensure API access is configured for the application.
- 'If some domains do not share the same protocol or port as defined in the Local
  Address and Port screen, contact Axis Support: support@axissecurity.com'
- URL rewriting in an Axis Cloud software feature that alters URLs, changing the destination
  and is required when you use an Axis hosted domain.
- A potential challenge of using the 'URL rewriting' method is that HTML pages traditionally
  reference other targets which are hosted elsewhere.
- OAuth2 integration available for various identity providers.
- Some of the features are limited release.
- You can add your own custom domain for which you need to add a server certificate
  and public DNS record, or use a domain hosted by Axis Security, which does not require
  them.
- Users can be created and imported in bulk using a CSV file.
- Export user data from Axis IdP to a CSV file.
- Some endpoints may require additional scopes.
- Uses OAuth2 with refresh token — requires setup of connected app in axis security
- Some API calls may have rate limits
- Some objects like Event may return nulls in deeply nested fields
- Client Certificates are used by the Device Posture management.
- This type of device trust is fully enforced on access to web applications (HTTP/HTTPS).
  For other protocols, it is only enforced when connecting to the user portal.
- This type of device trust is only applicable to Agentless access.
- Ensure proper API token handling and refresh strategy.
- Requires setup of OAuth2 for authentication.
- If deploying device posture using the domain joined check option, see Key Considerations
  for using Device Posture and Domain Joined Check.
- By default, Atmos ZTNA blocks traffic unless it is explicitly allowed.
- If a rule is not set to allow the user to join the domain, the endpoint will not
  be able to validate that it is part of the domain.
- Changes to the user's circumstances mid-session are only visible through the SCIM
  Directory View.
- Requires OAuth2 authentication for access.
- These will override any existing pairings.
- You can add up to 2,000 entries for each CSV file.
- Some users may experience delays in provisioning
- The Atmos Agent captures relevant outgoing traffic by adding a virtual network interface
  to the user's machine.
- The Atmos Agent creates a local DNS server.
- Headers marked with an asterisk (*) are required for importing the users.
- You can use the export users option to create a CSV file with all the users in Axis
  IdP.
- In case the Atmos agent cannot establish a connection using udp, it will fallback
  to tls using the 'agent-geo-gw.axisapps.io' addresses below.
- The mobile device must be running version 13 and up.
- On the first login, tap Ok when asked to add VPN configurations.
- The mobile device must be running iOS 14.1 or later.
- Requires OAuth2 authentication setup
- 'This is a limited release feature. For more information contact Axis Security Support:
  support@axissecurity.com. This feature is only supported for MacOS and Windows Clients.'
- Setup required for device trust client.
- Ensure correct OAuth scopes are set.
- Requires setup of connected app in api
- Conditions are available based on the selected platform(s). If a condition was selected
  for one platform, and there is a change in platform (another was added or replaced),
  the condition may be unavailable.
- Ensure to configure the OAuth2 settings correctly for seamless integration.
- Requires OAuth2 authentication with refresh token.
- User is prompted to log in with the IdP credentials when not logged in.
- If there is an error logging in, the users are prompted to try logging in again.
- When logged in, the user can either be connected to the workspace or not connected.
- The user can click Pause to temporarily stop tunneling while remaining logged in.
- Tunneling is temporarily paused until syncing policy updates is complete.
- When the admin updates policies or application access based on IP addresses and
  pushes these changes, the user will see a notification in the Agent asking him to
  reconnect to implement these changes.
- Ensure proper permissions are set for API access
- Requires proper OAuth2 setup to access resources
- Rate limiting may apply based on usage
- If this setting is not allowed, the Atmos Agent will run but will not be able to
  create the network interface.
- Some updates may have delayed availability due to processing
- The Windows endpoint must be domain-joined.
- After a successful access to the axis agent, the Pre-Logon tunnel will not re-initiate
  by default.
- Some fields may return null values
- Ensure OAuth scopes are correctly configured.
- Requires configuration of connected app in Axis Security
- Ensure API keys are kept secure
- Ensure to configure access rights correctly.
- The audit logs can be streamed to one of two SIEMs (Splunk and Syslog) in raw format.
- Ensure correct API rate limits are respected.
- Uses OAuth2 with refresh token — requires setup of connected app in HPE API
- The system supports a TCP output.
- Some API responses may not include all fields in every request
- Users need to be an administrators to install the Atmos Agent or when the Atmos
  Agent is deployed using the Electronic Software Distribution (ESD) tools.
- Requires setup of connected app in Splunk
- You will be prompted to restart the Splunk Server after installing. This is not
  required.
- Uses OAuth2 with refresh token — requires setup of connected app in Crowdstrike
- Requires setup of connected app in Axis API
- After a successful access to the axis agent, the Pre-Logon tunnel will not re-initiate
  by default. In order to keep the Pre-Logon functionality after a user has logged
  in the agent please contact Axis Support.
- Uses Bearer Token for authentication.
- Requires setup of an application in Axis Security.
- Admins will receive an email notification regarding the token expiration a month,
  a week, and a day before expiration.
- Requires proper configuration of OAuth2 for access
- Check API rate limits to avoid throttling
- Ensure proper OAuth2 setup in the Axis Security management console
- API calls may be subject to rate limits
- Requires configuration of the API client in the management console
- Check API documentation for specific rate limits and pagination details.
- Audit log tracks changes to Axis entities, log in attempts, and admin actions.
- Requires setup of connected app in Axis security
- Requires Axis Administrator access to create a Splunk API key.
- In the Victoria experience, the Axis Security Data Input might not appear.
- The auto-created sub-location, <Location Name> - Other, is reserved and cannot be
  deleted.
- Ensure proper OAuth scopes are set for API access.
- API requires authentication via OAuth2
- Rate limits may vary based on the account type
- Use the API Access Token in the header as 'Bearer <API Access Token value>'
- Requires setup of a connected app in Axis Security.
- Ensure that you have already created an API token with the appropriate permissions
  to create a connector.
- Ensure you added the API Token, Base URI, and the relevant Connector Zone ID to
  the script before launching the template.
- HAR files contain sensitive data, including the content of pages the user downloaded
  while recording and cookies.
- Use an Incognito Window to collect the HAR files.
- Enable third-party cookies to ensure proper cookie preservation during reproduction.
- Large HAR files should be compressed, preferably as a .zip file.
- Ensure correct API version is used for calls.
- The token is valid for one year. You will be notified if you try to use an expired
  token.
- Once the form is closed you will not be able to see the token.
- Ensure the SCIM Version is set as 2.0
- Check USE PATCH FOR GROUP UPDATES
- Provisioning process can take several minutes to complete.
- Requires OAuth2 setup for authentication
- User provisioning integrates an external user directory with your Axis Cloud.
- The directory includes up to 500 results.
- Applications API is currently available for Network Range applications only
- Administrators can configure settings for the Atmos Agent in the IdP Advanced Settings.
- After the configured time has elapsed, the web traffic policies will no longer be
  enforced by the agent.
- Once the user logs in to the Atmos Agent again, the authentication timer and web
  traffic policy enforcement timer will reset.
- After the authentication timer elapses, a grace period of approximately 10 minutes
  is provided to enable users to complete the authentication process before there
  is a disruption in service.
- Requires API key for access.
- Rate limits apply.
- SSL inspection refers to a process in which SSL-encrypted internet communication
  between a client and a server is intercepted and inspected.
- Most internet communications are encrypted using SSL, therefore enabling SSL inspection
  is crucial for using the Atmos Web Gateway advanced URL filtering and Security solutions.
- If your organization manages devices through a central desktop management tool,
  we recommend remote installation instead of users downloading and installing the
  Axis Root Certificate on their own.
- To enable SSL inspection, upload a Root Certificate.
- This is enabled by default. When disabled, DNS and URL filtering are still active
  but the admin does not have access to the users' activities.
- The startup script on GCP is designed to run on every boot. However, if the connector
  has already been created, the script will detect this and stop itself from running.
- Requires authentication setup in Axis
- Enabling threat intelligence protection requires checking the appropriate options
  in the policy and settings.
- Make sure not to check Import Groups
- All fields are required except Department which is optional.
- Changing the UPN mapping after initial deployment will cause a re-provisioning of
  all users to update the new value.
- In order to present block pages or SSL Decrypt traffic it is required to install
  the Axis CA Certificate on endpoints or upload a CA Cert to Axis.
- 'The following expression MUST be included in the Users FILTER: !(userAccountControl:1.2.840.113556.1.4.803:=2)'
- Ensure to include the API key in the request header.
- The pagination method may vary depending on the endpoint.
- Ensure to set up the correct OAuth scopes for accessing user and group data.
- Some APIs may have rate limits
- Requires setup of OAuth2 credentials in the Axis Security management console.
- Some API responses may include rate limiting headers.
- Actions must be applied to each File Matcher rule.
- File Matcher rules are processed in the order of rule priority.
- SSL inspection is crucial for using the Atmos Web Gateway advanced URL filtering
  and Security solutions.
- OAuth2 authentication is required for accessing the API.
- Some fields may return nulls in deeply nested responses
- For more information on how to export and upload a custom CA Certificate click here.
- Integration requires setup of connected app in Axis.
- Requires connected app setup in Axis for OAuth2.
- API documentation is available online.
- You can retrieve a forgotten password by clicking on the Forgot Password link.
- Ensure the necessary permissions are granted for API access.
- Requires setup of OAuth2 credentials in the management console.
- Instructions are only for macOS 15 and below.
- OAuth2 with refresh token required for API access.
- If using Windows authentication, the username must be typed in the format of domain\username
  instead of username@domain (such as axis\bob instead of bob@acme.com).
- When connecting to the Git Repository, some inputs may vary depending on the server.
- 'Depending on the Git software vendor: Password may or may not be relevant, User
  may be personal username or git, Private key may or may not be mandatory, Port is
  variable.'
- OAuth2 with refresh token required for API access
- Ensure API credentials are stored securely
- Enter your username and password to connect.
- You can upload a private key for authentication.
- Uses OAuth2 with refresh token
- Requires OAuth2 authentication with refresh token
- Check API limits for usage
- The mobile device must be running version 5 and up.
- It is strongly advised to collaborate with your CSM or Axis Support to ensure a
  seamless transition to this capability.
- 'Client Device Prerequisites: Ubuntu (18 or higher), Fedora (26 or higher), Debian
  (10 or higher), RHEL (with desktop environment), CentOS (with desktop environment)'
- 150MB RAM
- If using Windows authentication, the username must be typed in the format of domain\username
  instead of username@domain
- Rollout - This feature is automatically enabled for all new tenants. It is strongly
  advised to collaborate with your CSM or Axis Support to ensure a seamless transition
  to this capability. Existing customers will be migrated, with further communication
  to follow.
- Some inputs may vary depending on the server.
- Requires setup of OAuth2 authentication
- Ensure API permissions are set correctly
- New features introduced in version 3.0.
- Rollout features are automatically enabled for all new tenants.
- New features and enhancements summarized in this document.
- This article summarizes all the new features and enhancements.
- 'Rollout - This feature is automatically enabled for all new tenants. It is strongly
  advised to collaborate with your CSM or Axis Support: support@axissecurity.com to
  ensure a seamless transition to this capability.'
- Currently, ZTNA IPsec flows lack support for DNS resolution. As a result, non-agent-based
  flows must be configured using IP addresses and/or subnets.
- Various enhancements and improvements for Local Edge Connectivity.
- Various enhancements and improvements for Multi-Region Applications.
- Uses OAuth2 with refresh token — requires setup of connected app in Axis.
- A new PoP in Tel Aviv, Israel, is now available for use.
- Atmos now provides a solution to mitigate these risks by using threat intelligence
  protection to prevent users from accessing websites that could be harmful.
- An Application that is used to handle and resolve DNS requests via a specified connector
  zone.
- Some responses may include null values in optional fields
- New features are released regularly; check for updates frequently.
- New PoP in Phoenix, Arizona, is now available for use.
- New PoP in Cape Town, South Africa, is now available for use.
- OAuth2 with refresh token is required for accessing the API
- Integration requires proper configuration of OAuth2 settings.
- Ensure API credentials are stored securely.
- Requires setup of API keys in the Axis Management Console
- Understanding each widget and tab is essential for effective monitoring and management.
- Firewall rules may be required for connector connectivity
- Ensure to check API rate limits.
- Documentation may not cover all edge cases.
- Ensure OAuth2 is properly configured to avoid authentication issues.
- API calls may be subject to rate limiting.
- Integration may require an understanding of the Atmos architecture.
- Refer to the Axis Management Console for configuration details.
- Some API responses may vary based on user permissions
- Requires API key for authentication.
- Some API endpoints may have specific access restrictions
- Some API endpoints may have specific rate limits
- Some API calls may require specific permissions to access.
- OAuth2 with refresh token is required for API access
- Requires an active JumpCloud account and proper API permissions.
- Integration requires valid OAuth2 credentials.
- Ensure all API calls are made under rate limits.
- Ensure API tokens are kept secure.
- Some objects may have rate limits that need to be considered.
- Requires OAuth2 authentication
errors:
- '201: Tunnel created successfully'
- '400: Bad request'
- '401: Unauthorized access. Make sure the API token includes writing permissions.'
- '404: Tunnel not found'
- '409: Conflict - Tunnel already exists with the same name or AuthenticatedID is
  already in use'
- '500: Internal server error'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Reduce request rate'
- '401 Unauthorized: Check token validity'
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Check the endpoint path'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of your requests.'
- '401 Unauthorized: Check your credentials and retry.'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify endpoint URL.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check token validity.'
- 'INVALID_CREDENTIALS: Check client ID and secret.'
- 'ACCESS_DENIED: Verify user permissions.'
- '401 Unauthorized: Check your API key'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check your client ID and secret.'
- '401 Unauthorized: Check credentials and token expiration.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'Invalid CSV file: Make sure that multiple values in a field are separated, using
  a semicolon '';'''
- 'File size is too large: The maximum file size is 1 MB.'
- 'CSV file is empty: Make sure there is at least one filled row.'
- 'Missing headers: Make sure all of the headers from the downloaded template are
  included.'
- '401 Unauthorized: Check your token'
- '403 Forbidden: You do not have access to this resource'
- '401 Unauthorized: Invalid credentials or token expired.'
- '429 Too Many Requests: Rate limit exceeded.'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Verify the endpoint URL.'
- 'INVALID_CREDENTIALS: Check your client_id and client_secret'
- 'TOKEN_EXPIRED: Refresh your OAuth token'
- '403 FORBIDDEN: Ensure you have the necessary permissions'
- '401 Unauthorized: Check the API credentials and token.'
- '403 Forbidden: Check API permissions or scopes'
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify OAuth2 token.'
- '404 Not Found: Endpoint does not exist.'
- '401 Unauthorized: Ensure the access token is valid.'
- '400 Bad Request: Check the request body format.'
- Maximum session length for an RDP is 24 hours.
- RDP file reauthentication time default is 3 hours.
- '401 Unauthorized: Check your credentials and token validity.'
- 'Session blocked due to security policy: Create a policy rule that provides access
  to the application'
- This RDP launcher file is registered to another user. Download a new file in the
  User Portal.
- This RDP launcher file is affiliated with another user's IdP credentials. Download
  a new launcher file in the User Portal.
- 'Access to the application was blocked due to the organization''s security policy:
  Edit the RDP security profile to allow web/native RDP client.'
- RDP token was revoked. Download a new RDP launcher file from your portal.
- An error had occurred, try to reconnect or download a new RDP launcher file.
- The remote desktop is unreachable, make sure it is online.
- Axis encountered an error processing your request, try to reconnect.
- RDP session timed out, the session will end in 5 minutes.
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Check client credentials.'
- '403 Forbidden: Insufficient permissions.'
- 'WARNING: POSSIBLE DNS SPOOFING DETECTED: Remove the existing known hosts key by
  running the following command:   rm/Users/[username]/.ssh/known_hosts'
- 'Wrong server credentials: Update the application credentials in the Axis User Portal
  and try again.'
- 'Missing server credentials: Enter your credentials in the Application Settings
  on the Axis User Portal and try again.'
- 'Different user credentials were defined in the Axis User Portal: Relaunch the SSH
  session without a username, or change your credentials in the Application Settings
  on the Axis User Portal.'
- '403 Forbidden: Check permissions.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check your OAuth credentials.'
- '403 Forbidden: Verify your access permissions.'
- '404 Not Found: Verify endpoint path.'
- '403: Access was blocked due to policy restrictions.'
- '403: The application is configured with the public connector zone, but has a private
  IP address.'
- '403: URL out of scope - User tried to access another domain from the app.'
- '403: Unsupported Browsers.'
- '404: The URL couldn’t be found.'
- '421: The application DNS routed back to Axis instead of the application server.'
- '500: Axis encountered an internal server error.'
- '500: URL rewrite failure.'
- '502: Axis could not find the application server.'
- '531: No available connectors.'
- '532: Cannot connect to a private IP using the public connector zone.'
- '2012: There are no available connectors in the zone.'
- '2013: Identity Provider login failed.'
- 'Mobile: Access to this page is blocked.'
- 'No Code: Access denied.'
- 'BAD_REQUEST: Check request format'
- 'UNAUTHORIZED: Recheck OAuth credentials'
- 'FORBIDDEN: Insufficient permissions'
- Contact domaindiscovery@axissecurity.com for assistance.
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '400 Bad Request: Check the request data format.'
- 'Invalid CSV: Make sure that all the headers (Email, First Name, Last Name, Username,
  Password, Groups) appear in the file.'
- 'The file exceeds the maximum size of 1MB: Reduce CSV file size or divide it into
  two or more separate files.'
- 'The CSV file is empty: Make sure that all the required fields are populated.'
- 'The file exceeds the maximum number of 2000 rows: Divide the file into two or more
  files and upload each one separately.'
- '500: URL rewrite failure'
- '531: No available connectors'
- 'Mobile: Access to this page is blocked'
- 'No Code: Access denied. is not an administrator in workspace'
- '403 Forbidden: Verify permissions for the requested resource.'
- For assistance with the Additional Domains Discovery Tool, contact domaindiscovery@axissecurity.com
- '404 Not Found: The requested resource was not found.'
- 'Missing information- Type field can’t be empty: Make sure the Type field is populated
  for all user-destination pairings'
- 'Identity type “” is invalid: Make sure to enter either ''user'' or ''group'''
- 'Missing information - Identity Name field can''t be empty: Make sure the Identity
  Name field is populated for all user-destination pairings'
- 'The user “” does not exist in the IdP: Make sure the spelling is correct'
- 'The group “” does not exist in the IdP: Make sure the spelling is correct'
- 'Missing information - Destination Address field can''t be empty: Make sure the
  Destination Address field is populated for all user-destination pairings'
- 'Destination Address “” is invalid: Make sure the field includes a valid domain
  or IP address'
- '400 Bad Request: Check request format and parameters'
- 'Error: No user was found with the email and the username: Make sure the spelling
  is correct.'
- 'Error: Missing Information - Email field can’t be empty: Make sure the Email field
  is populated for all users.'
- 'Error: Missing Information - Username field can’t be empty: Make sure the Username
  field is populated for all users.'
- 'Error: Invalid username - Username must be at least 3 characters: Make sure Usernames
  contain at least 3 characters.'
- 'Error: A user with the same username already exists with a different email. Email
  can only be changed manually: Change the Email and upload the file.'
- 'Error: Invalid email: Make sure Emails are valid and adhere to the structure "[address@company.com]".'
- 'Error: Password must be at least 8 characters long, use both upper case and lower
  case letters, and must include one or more digits: Change the password to adhere
  to requirements.'
- '401 Unauthorized: Check OAuth tokens'
- '400 Bad Request: Verify input parameters.'
- '401 Unauthorized: Check your credentials and permissions.'
- '403 Forbidden: Ensure you have access to the requested resource.'
- '401 Unauthorized: Invalid credentials.'
- '403 Forbidden: Access denied.'
- '401 Unauthorized: Check API keys and permissions'
- '429 Too Many Requests: Rate limiting exceeded'
- '403 Forbidden: Ensure proper OAuth scopes are granted'
- '404 Not Found: Check the endpoint path for correctness'
- '500 Internal Server Error: Retry the request after some time'
- Missing information- Type field can’t be empty
- Identity type “” is invalid
- Missing information - Identity Name field can't be empty
- The user “” does not exist in the IdP
- The group “” does not exist in the IdP
- Missing information - Destination Address field can't be empty
- Destination Address “” is invalid
- '401 Unauthorized: Check credentials and token validity'
- '403 Forbidden: Verify permissions for the requested resource'
- '401 Unauthorized: Invalid credentials or expired token.'
- '401 Unauthorized: Check client credentials'
- '403 Forbidden: Verify permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check credentials and token validity.'
- '400 Bad Request: Check the parameters sent in the request'
- '401 Unauthorized: Verify client credentials and token validity'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'ACCESS_DENIED: Ensure permissions are set correctly'
- 'INVALID_TOKEN: Refresh the OAuth2 token'
- 'NOT_FOUND: Verify endpoint and parameters'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify endpoint path'
- '401: Unauthorized access'
- '404: Entity not found'
- 'INVALID_TOKEN: Ensure the token is valid and not expired'
- 'FORBIDDEN: Check user permissions for accessing this resource'
- '404: Connector not found'
- '409: Conflict - Location already exists with the same name'
- '401 Unauthorized: Recheck API key or permissions'
- '204: Location deleted successfully'
- '403: Operation is Forbidden. Make sure the sub-location is not of type ''Default''
  or ''Other'', and it''s not used by any policy rule.'
- '404: Location not found'
- '401 Unauthorized: Check client credentials and token validity.'
- '429 Too Many Requests: Rate limit exceeded, please retry after some time.'
- '404: Tag not found'
- '409: Conflict - Tag already exists with the same name'
- '401 Unauthorized: Invalid credentials or token expired'
- '201: Application created successfully'
- '409: Conflict - An application already exists with the same name'
- '501: Not supported - Operation is supported only for network range applications'
- '201: Web category created successfully'
- '409: Conflict - Web category already exists with the same name'
- '409: Conflict - SSL exclusion already exists with the same name'
- '409: Conflict - Connector zone already exists with the same name'
- 'INVALID_REQUEST: Check your request structure.'
- '401 Unauthorized: Verify your authentication credentials.'
- '401 Unauthorized: Make sure the API token includes writing permissions.'
- 404 Location not found
- 500 Internal server error
- '403: Operation is Forbidden. Make sure the sub-location is not of type "Default"
  or "Other", and it''s not used by any policy rule.'
- '401 Unauthorized: Check API key and permissions.'
- '201: SSL exclusion created successfully'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Consider reducing the frequency of API calls.'
- '401 Unauthorized: Ensure your access token is valid and has not expired.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Confirm the endpoint path.'
- '401 Unauthorized: Check OAuth token.'
- '401 Unauthorized: Check OAuth token and permissions.'
- '403 Forbidden: You do not have access to this resource.'
- '401 Unauthorized: Check client ID and secret.'
- 'INVALID_CLIENT: Verify client ID and secret'
- 'ACCESS_DENIED: Check user permissions'
- 'TOKEN_EXPIRED: Refresh the access token'
- '401 Unauthorized: Invalid token or insufficient permissions'
- '404 Not Found: Check endpoint URL'
- '401 Unauthorized: Check your access token'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check your credentials and permissions'
- '404 Not Found: Ensure the endpoint is correct'
- '401 Unauthorized: Check your API key and permissions.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '401 Unauthorized: Check your API key and permissions'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your authentication details.'
- '401 Unauthorized: Check API token and scopes.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '429 Too Many Requests: Reduce frequency of API calls.'
- '401 Unauthorized: Check your credentials or token expiration.'
- '500 Internal Server Error: Contact support for assistance.'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Invalid API key or insufficient permissions.'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '401 Unauthorized: Check client credentials or token expiration'
- 'INVALID_CREDENTIALS: Check your API key or OAuth token.'
- 'NOT_FOUND: The requested resource does not exist.'
- '403 Forbidden: Ensure sufficient permissions for the requested resource'
- '401 Unauthorized: Check your credentials or token expiration'
- '401 Unauthorized: Check your API key or OAuth token.'
- '401 Unauthorized: Check authentication credentials.'
- '401 Unauthorized: Check the validity of the access token.'
- '403 Forbidden: Ensure proper permissions are set for the user.'
- '401 Unauthorized: Verify client credentials.'
- '401 Unauthorized: Check your API token or permissions'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - ClientCredentials
  - AccessToken
  - AuthorizationCode
  - OAuth2
  - Identity Provider
  - DeviceTrustClient
  - RefreshToken
  - Token
  - ClientID
  - ClientSecret
client:
  base_url: https://api.axissecurity.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.axissecurity.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
