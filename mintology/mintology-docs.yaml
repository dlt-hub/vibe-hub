resources:
- name: mint
  endpoint:
    path: /{projectId}/mint
    method: POST
- name: authorize
  endpoint:
    path: /reference/authorize
    method: GET
- name: authorize_inventory
  endpoint:
    path: /reference/authorize-inventory
    method: GET
- name: projects_list
  endpoint:
    path: /reference/projects-list
    method: GET
- name: projects_create
  endpoint:
    path: /reference/projects-create
    method: POST
- name: projects_show
  endpoint:
    path: /reference/projects-show
    method: GET
- name: projects_update
  endpoint:
    path: /reference/projects-update
    method: PUT
- name: projects_remove
  endpoint:
    path: /reference/projects-remove
    method: DELETE
- name: projects_mint_update
  endpoint:
    path: /reference/projects-mint-update
    method: PATCH
- name: projects_claim_update
  endpoint:
    path: /reference/projects-claim-update
    method: PATCH
- name: projects_deploy
  endpoint:
    path: /reference/projects-deploy
    method: POST
- name: custodial_wallets_create
  endpoint:
    path: /reference/custodial-wallets-create
    method: POST
- name: custodial_wallets_exports_request
  endpoint:
    path: /reference/custodial-wallets-exports-request
    method: POST
- name: custodial_wallets_exports_approve
  endpoint:
    path: /reference/custodial-wallets-exports-approve
    method: POST
- name: custodial_wallets_remove
  endpoint:
    path: /reference/custodial-wallets-remove
    method: DELETE
- name: premints_list
  endpoint:
    path: /reference/premints-list
    method: GET
- name: premints_create
  endpoint:
    path: /reference/premints-create
    method: POST
- name: premints_retrieve
  endpoint:
    path: /reference/premints-retrieve
    method: GET
- name: premints_remove
  endpoint:
    path: /reference/premints-remove
    method: DELETE
- name: premints_import
  endpoint:
    path: /reference/premints-import
    method: POST
- name: imx_register
  endpoint:
    path: /reference/imx-register
    method: POST
- name: imx_mint
  endpoint:
    path: /reference/imx-mint
    method: POST
- name: imx_transfer
  endpoint:
    path: /reference/imx-transfer
    method: POST
- name: meta_info
  endpoint:
    path: /reference/meta-info
    method: GET
- name: metadata_update
  endpoint:
    path: /reference/metadata-update
    method: PATCH
- name: mint
  endpoint:
    path: /reference/mint
    method: POST
- name: claim
  endpoint:
    path: /reference/claim
    method: POST
- name: authorize
  endpoint:
    path: /{projectId}/authorize
    method: POST
    data_selector: data
    params: {}
- name: list_authorized_tokens
  endpoint:
    path: /{projectId}/authorize-inventory
    method: POST
    data_selector: data
    params: {}
- name: authorize
  endpoint:
    path: /reference/authorize
    method: GET
- name: list_authorized_tokens
  endpoint:
    path: /reference/authorize-inventory
    method: GET
- name: list_projects
  endpoint:
    path: /reference/projects-list
    method: GET
- name: create_projects
  endpoint:
    path: /reference/projects-create
    method: POST
- name: retrieve_projects
  endpoint:
    path: /reference/projects-show
    method: GET
- name: update_projects
  endpoint:
    path: /reference/projects-update
    method: PUT
- name: remove_projects
  endpoint:
    path: /reference/projects-remove
    method: DELETE
- name: mint_config_update
  endpoint:
    path: /reference/projects-mint-update
    method: POST
- name: claim_config_update
  endpoint:
    path: /reference/projects-claim-update
    method: POST
- name: deploy_projects
  endpoint:
    path: /reference/projects-deploy
    method: POST
- name: create_mintable_wallet
  endpoint:
    path: /reference/custodial-wallets-create
    method: POST
- name: request_to_export
  endpoint:
    path: /reference/custodial-wallets-exports-request
    method: POST
- name: approve_export
  endpoint:
    path: /reference/custodial-wallets-exports-approve
    method: POST
- name: remove_mintable_wallet
  endpoint:
    path: /reference/custodial-wallets-remove
    method: DELETE
- name: list_premints
  endpoint:
    path: /reference/premints-list
    method: GET
- name: create_premints
  endpoint:
    path: /reference/premints-create
    method: POST
- name: retrieve_premints
  endpoint:
    path: /reference/premints-retrieve
    method: GET
- name: remove_premints
  endpoint:
    path: /reference/premints-remove
    method: DELETE
- name: import_premints
  endpoint:
    path: /reference/premints-import
    method: POST
- name: register_imx_user
  endpoint:
    path: /reference/imx-register
    method: POST
- name: mint_imx_item
  endpoint:
    path: /reference/imx-mint
    method: POST
- name: transfer_imx_item
  endpoint:
    path: /reference/imx-transfer
    method: POST
- name: project_info
  endpoint:
    path: /reference/meta-info
    method: GET
- name: update_nft_metadata
  endpoint:
    path: /reference/metadata-update
    method: POST
- name: mint
  endpoint:
    path: /reference/mint
    method: POST
- name: claim
  endpoint:
    path: /reference/claim
    method: POST
- name: create_project
  endpoint:
    path: /v1/projects
    method: POST
- name: premint_nft
  endpoint:
    path: /{projectId}/premints
    method: POST
    data_selector: data
- name: custodial_wallets
  endpoint:
    path: /v1/custodial-wallets
    method: POST
    data_selector: response
    params: {}
- name: mint
  endpoint:
    path: /v1/{projectId}/mint
    method: POST
    data_selector: null
    params: {}
- name: claim
  endpoint:
    path: /v1/{projectId}/claim
    method: POST
    data_selector: null
    params: {}
- name: update_nft_metadata
  endpoint:
    path: /v1/{projectId}/metadata/{tokenId}
    method: PUT
    data_selector: metadata
- name: authorize
  endpoint:
    path: /v1/{projectId}/authorize
    method: POST
- name: register_imx_user
  endpoint:
    path: /v1/{projectId}/imx/register
    method: POST
- name: mint_imx_item
  endpoint:
    path: /v1/{projectId}/imx/mint
    method: POST
- name: transfer_imx_item
  endpoint:
    path: /v1/{projectId}/imx/transfer
    method: POST
- name: authorize
  endpoint:
    path: /v1/{projectId}/authorize
    method: POST
- name: list_authorized_tokens
  endpoint:
    path: /authorize/inventory
    method: POST
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: POST
    data_selector: data
- name: projects
  endpoint:
    path: /projects/{projectId}
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v1/projects/{projectId}
    method: PUT
    data_selector: data
- name: Remove Projects
  endpoint:
    path: /projects/{projectId}
    method: DELETE
    data_selector: object
    params: {}
- name: mint_config_update
  endpoint:
    path: /projects/{projectId}/mint
    method: PUT
    data_selector: object
    params: {}
- name: claim_config_update
  endpoint:
    path: /v1/projects/{projectId}/claim
    method: PUT
    data_selector: object
    params: {}
- name: deploy_project
  endpoint:
    path: /v1/projects/{projectId}/deploy
    method: POST
    data_selector: object
    params: {}
- name: Create Mintable Wallets
  endpoint:
    path: /custodial-wallets
    method: POST
    data_selector: data
    params: {}
- name: request_to_export
  endpoint:
    path: /custodial-wallets/{walletAddress}/exports/request
    method: POST
    data_selector: data
    params: {}
- name: Approve Export
  endpoint:
    path: /v1/custodial-wallets/{walletAddress}/exports/approve
    method: POST
- name: Remove Mintable Wallets
  endpoint:
    path: /custodial-wallets/{walletAddress}
    method: DELETE
- name: premints
  endpoint:
    path: /{projectId}/premints
    method: GET
    data_selector: data
    params: {}
- name: premints
  endpoint:
    path: /{projectId}/premints
    method: POST
- name: Remove Premints
  endpoint:
    path: /{projectId}/premints/{premintId}
    method: DELETE
- name: import_premints
  endpoint:
    path: /v1/{projectId}/premints/import
    method: POST
- name: register_imx_user
  endpoint:
    path: /{projectId}/imx/register
    method: POST
- name: Mint IMX Item
  endpoint:
    path: /v1/{projectId}/imx/mint
    method: POST
    data_selector: data
    params: {}
- name: transfer_imx_item
  endpoint:
    path: /{projectId}/imx/transfer
    method: POST
- name: project_info
  endpoint:
    path: /{projectId}
    method: GET
    data_selector: data
    params: {}
- name: Update NFT Metadata
  endpoint:
    path: /v1/{projectId}/metadata/{tokenId}
    method: PUT
- name: mint
  endpoint:
    path: /{projectId}/mint
    method: POST
    data_selector: data
    params: {}
- name: claim
  endpoint:
    path: /v1/{projectId}/claim
    method: POST
    data_selector: data
- name: authorize
  endpoint:
    path: /{projectId}/authorize
    method: POST
- name: claim
  endpoint:
    path: /{projectId}/claim
    method: POST
    data_selector: data
    params: {}
- name: premints
  endpoint:
    path: /{projectId}/premints/{premintId}
    method: GET
    data_selector: data
    params: {}
- name: update_premints
  endpoint:
    path: /{projectId}/premints/{premintId}
    method: PUT
- name: create_mintable_wallet
  endpoint:
    path: /custodial-wallets
    method: POST
    data_selector: data
    params: {}
- name: Project Info
  endpoint:
    path: /{projectId}
    method: GET
    data_selector: data
- name: Update NFT Metadata
  endpoint:
    path: /v1/{projectId}/metadata/{tokenId}
    method: PUT
- name: register_imx_user
  endpoint:
    path: /{projectId}/imx/register
    method: POST
- name: premints
  endpoint:
    path: /{projectId}/premints
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
notes:
- 'IMPORTANT: Call from the back-end.'
- There is only one endpoint that can be called without the need for an API Key, the
  rest require an API Key.
- Before using the APIs, ensure that you have deployed your project and enabled Claiming
  and Minting.
- NFT Metadata endpoints work on tokens already minted on the blockchain
- Call from the back-end.
- Requires API KEY in the header.
- This operation should be initiated from the back-end.
- This will update the project mint configuration using the provided ID and details.
- When there are more than 15 tokens returned, pagination occurs.
- Separating the mint and claim endpoints will allow you to clearly identify the purpose
  of each call in your analytics.
errors:
- '400: Error message'
- '422: Validation Failed'
- '400: Bad Request'
- '400: Error'
- '400 Error: message'
- '422 Validation Failed: message'
- '400 Error: Check the request body for missing or invalid parameters.'
- '422 Validation Failed: Ensure all required fields are included and valid.'
- '400: message'
- '422: message'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.mintology.app/v1
source_metadata: null
