resources:
- name: web_browser_automation
  endpoint:
    path: /web-browser-automation
    method: GET
    data_selector: tests
    params: {}
- name: api_testing
  endpoint:
    path: /api-testing-products
    method: GET
    data_selector: tests
    params: {}
- name: API Testing
  endpoint:
    path: /api-testing-products
    method: GET
- name: API Performance Testing
  endpoint:
    path: /api-performance-testing
    method: GET
- name: API Mocks
  endpoint:
    path: /api-mocks-products
    method: GET
- name: Web Browser Automation
  endpoint:
    path: /web-browser-automation
    method: GET
- name: Windows Desktop Automation
  endpoint:
    path: /windows-desktop-automation
    method: GET
- name: API Documentation
  endpoint:
    path: /api-documentation-k-flow
    method: GET
- name: API Testing
  endpoint:
    path: /api-testing-products
    method: GET
    data_selector: records
- name: API Performance Testing
  endpoint:
    path: /api-performance-testing
    method: GET
    data_selector: records
- name: API Mocks
  endpoint:
    path: /api-mocks-products
    method: GET
    data_selector: records
- name: Web Browser Automation
  endpoint:
    path: /web-browser-automation
    method: GET
    data_selector: records
- name: Windows Desktop Automation
  endpoint:
    path: /windows-desktop-automation
    method: GET
    data_selector: records
- name: insurance_data
  endpoint:
    path: /api/v1/insurance
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: items
    params: {}
- name: API Testing
  endpoint:
    path: /api-testing-products
    method: GET
    data_selector: records
- name: API Performance Testing
  endpoint:
    path: /api-performance-testing
    method: GET
    data_selector: records
- name: API Mocks
  endpoint:
    path: /api-mocks-products
    method: GET
    data_selector: records
- name: Web Browser Automation
  endpoint:
    path: /web-browser-automation
    method: GET
    data_selector: records
- name: Windows Desktop Automation
  endpoint:
    path: /windows-desktop-automation
    method: GET
    data_selector: records
- name: API Testing
  endpoint:
    path: /api-testing-products
    method: GET
    data_selector: records
- name: API Performance Testing
  endpoint:
    path: /api-performance-testing
    method: GET
    data_selector: records
- name: API Mocks
  endpoint:
    path: /api-mocks-products
    method: GET
    data_selector: records
- name: Web Browser Automation
  endpoint:
    path: /web-browser-automation
    method: GET
    data_selector: records
- name: Windows Desktop Automation
  endpoint:
    path: /windows-desktop-automation
    method: GET
    data_selector: records
- name: API Migration
  endpoint:
    path: /api/migration
    method: POST
    data_selector: results
    params:
      migration_type: SOAP to REST
notes:
- Java knowledge is not required and even non-programmers can write tests
- Scripts are plain-text, require no compilation step or IDE, and teams can collaborate
  using Git / standard SCM
- Karate is the only open-source tool that enables you to re-use your API functional
  tests as performance-tests.
- Karate delegates to Gatling for running multi-threaded API workflows and generating
  comprehensive HTML reports.
- Karate’s low-code approach is well suited for you to implement continuous performance
  testing within your CI / CD pipeline.
- Web Browser Automation Framework designed for ease of use.
- Supports parallel execution and visual testing.
- Built upon the rock-solid foundation famous for API testing
- Support for iframe-s, switching tabs, multiple URL domains, and uploading files
- Xplorer is a local-first application. When you use Xplorer, your collections remain
  on your machine, within your firewall.
- No mandatory sign-ups or user accounts.
- There are no mandatory sign-ups or user accounts.
- Adding to Xplorer requires a paid subscription.
- Works 100% in IntelliJ Community Edition
- 'Small Footprint / High Performance: less than 3 MB.'
- Karate's LOCAL-FIRST approach ensures user data remains within the customer's firewall.
- Karate is the only open-source tool to combine API test automation, mocks, performance
  testing, and even UI automation into a single, unified framework.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Complex insurance data structures require specialized testing.
- APIs enable seamless integration.
- REST-Assured has support for out-of-container testing of specifically Spring-MVC,
  but your tests will be hard-coded in this mode.
- Karate supports even hybrid-tests where you can mix API and UI tests in the same
  script.
- Karate is local-first and code-driven. Tests are plain-text and version-controlled
  or change-tracked just like normal code.
- Karate uses real-browsers
- Karate has more cross-browser options
- Running tests in parallel
- Cypress cannot handle IFrames
- Cypress cannot switch Browser Tabs
- Cypress Cross Origin Tests are relatively new
- Cypress is Asynchronous By Default
- Debugging
- Karate and Cypress can be installed easily
- Hybrid Tests
- API Mocking
- Uses a simple, clean syntax that is well suited for people new to programming or
  test-automation.
- Supports cross-browser automation.
- Requires OAuth2 authentication setup.
- Some API calls may have rate limiting.
- Karate is the only open-source tool to combine API automation testing, API performance
  testing, API mocks and UI automation into a single, unified framework.
- Karate is an open-source unified test automation platform combining API testing,
  API performance testing, API mocks & UI testing.
- Karate simplifies the process of test automation by offering a more intuitive and
  readable syntax.
- It supports API testing out of the box.
- Karate integrates API testing within the same framework.
- Test automation gives you a significant competitive advantage.
- Supports both JSON and XML
- Supports the conversion from JSON to XML and vice-versa
- Supports the comparison of two JSON or XML payloads
- Supports the comparison of two JSON or XML payloads (assertions)
errors:
- Karate introduces a different threading model for the HTTP Client, so if you have
  to attain a high RPS (Requests Per Second) value, you need to introduce a config-file
  that is normally not required for 'vanilla' Gatling.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Verify your request parameters.'
- '401 Unauthorized: Check your authorization credentials.'
- '500 Internal Server Error: Contact support.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request payload.'
- '401 Unauthorized: Ensure valid OAuth token.'
- '429 Too Many Requests: Rate limit exceeded.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://karatelabs.io
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
