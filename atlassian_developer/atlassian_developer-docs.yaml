resources:
- name: changelog
  endpoint:
    path: /changelog/
    method: GET
    data_selector: updates
- name: app_lifecycle_event
  endpoint:
    path: /services/data/vXX.X/sobjects/AppLifecycleEvent
    method: GET
    data_selector: records
- name: macro
  endpoint:
    path: /services/data/vXX.X/sobjects/Macro
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: macro-config
  endpoint:
    path: src/frontend/config.jsx
    method: not specified
- name: macro-config
  endpoint:
    path: static/config/build
    method: not specified
- name: app_metrics
  endpoint:
    path: /path/to/app/metrics/api
    method: POST
    data_selector: data
- name: app_logs
  endpoint:
    path: /path/to/app/logs/api
    method: POST
    data_selector: logs
- name: jira_issues
  endpoint:
    path: /rest/api/3/search
    method: GET
    data_selector: issues
    params:
      jql: project={{project_key}} AND labels={{label}}
- name: qanda_macro
  endpoint:
    path: src/frontend/macro.jsx
    method: GET
- name: actions
  endpoint:
    path: src/backend/action.js
    method: GET
- name: confluence_utilities
  endpoint:
    path: src/backend/confluenceUtil.js
    method: GET
- name: qanda_utilities
  endpoint:
    path: src/backend/qandaUtil.js
    method: GET
- name: resolver
  endpoint:
    path: src/backend/resolver.js
    method: GET
- name: definitions_macro
  endpoint:
    path: /forge/kvs
    method: POST
    data_selector: definitions
    params: {}
- name: terms_storage
  endpoint:
    path: /forge/kvs
    method: GET
    data_selector: terms
- name: definition_deletion
  endpoint:
    path: /forge/kvs
    method: DELETE
    data_selector: response
- name: long_running_function
  endpoint:
    path: /generateReport
    method: POST
    data_selector: body
    params:
      timeoutSeconds: 900
- name: macro_conversion
  endpoint:
    path: /wiki/rest/api/contentbody/convert/async/styled_view
    method: POST
    data_selector: value
    params:
      representation: atlas_doc_format
      expand: webresource.tags.all,webresource.superbatch.tags.all
- name: storage_api
  endpoint:
    path: /storage
    method: POST
- name: ui_kit
  endpoint:
    path: /ui
    method: GET
- name: custom_ui
  endpoint:
    path: /custom-ui
    method: GET
notes:
- Atlassian changelog updates are pushed to developers via RSS which might indicate
  a reliance on real-time data updates.
- The authentication method suggests the need for a connected app setup in the Atlassian
  developer platform.
- 'Atlassian Connect: Use Forge for node.js apps hosted by Atlassian.'
- Automatic updates are applied to all installed copies of an app.
- Connect and Forge macros cannot coexist with the same key in the manifest
- Connect macro parameters are preserved only on the first edit in Forge
- Special handling needed for parameters like VALUE1,VALUE2 due to lack of automatic
  escaping
- Incremental adoption of Forge is only available for Confluence and Jira Connect
  apps listed on Marketplace
- Not available for Bitbucket Connect apps
- Custom configuration supports both UI Kit and custom UI.
- Users will not be able to close the configuration modal by pressing Escape or by
  clicking outside the modal in UI Kit.
- In custom UI, developer must provide a UI element that calls view.close() to allow
  the user to close the modal.
- API is still in the experimental phase and is subject to change
- This agent must be used within the context of an issue page; does not function correctly
  in other views like board view, project settings, list view.
- AI logic and actions are defined in the app's manifest and backend
- Actions are triggered based on AI prompt conditions
- Debugging is performed through logging
- Data is not shared between separate Atlassian sites, products, or Forge environments.
- Uses Forge CLI for deployment and management of the app.
- App uses Key-Value Store (KVS) for storing definitions.
- Permissions must include 'storage:app' scope to use storage features.
- Timeout can be configured up to 900 seconds for long-running functions
- The API endpoint uses atlas_doc_format for body representation
- The endpoint supports styled_view conversions with embedded content
- Forge platform automatically handles authentication, identity, scaling, and tenancy
- Environment setup (development, staging, production) is managed by Forge
errors:
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- 'Invocation errors: Check Forge function logs and settings.'
- 401 Unauthorized: Check manifest for duplicate macro keys or incorrect module configuration
- 'Custom macro editor does not launch: Check if the custom macro editor resource
  is defined correctly in the manifest.'
- 'Custom macro editor closes automatically: Check the custom macro editor resource
  for any view.close() calls.'
- 'Payload does not save: Check view.submit() error codes.'
- 'Editor modal does not close when overlay is clicked: Clicking the modal background
  once the resource has loaded will not close the modal.'
- 'Error in browser console: ForgeReconciler.addConfig() cannot be called from within
  a custom config resource: Remove the ForgeReconciler.addConfig() call.'
- 'Macro is not inserted onto page after I close the custom macro editor: Use view.submit()
  to close the macro editor if you want the macro inserted onto the page.'
- Content fetch failure: If the length of the fetched content is less than 200 characters,
    return a failure message to the user and abort further processing.
- No specific error patterns documented.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - Atlassian account ID
  - Cloud ID
  - extension
  - macro
  - API tokens
  - OAuthToken
  - Confluence API
  - permissions
  - scopes
  - Security Layer
client:
  base_url: https://developer.atlassian.com
  auth:
    type: oauth2
    flow: auth_code
    token_url: https://developer.atlassian.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''atlassian_client_id''] }}'
    client_secret: '{{ dlt.secrets[''atlassian_client_secret''] }}'
    location: header
    header_name: Authorization
    refresh_token: '{{ dlt.secrets[''atlassian_refresh_token''] }}'
  headers:
    User-Agent: ForgeMetricsExportServer/1.0.0
    Accept: application/json
    Content-Type: application/json
source_metadata: null
