resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: audience
  endpoint:
    path: /services/data/vXX.X/audience
    method: GET
    data_selector: records
- name: site
  endpoint:
    path: /v1/site
    method: POST
    data_selector: null
    params: {}
- name: campaigns
  endpoint:
    path: /management/campaigns
    method: GET
    data_selector: data
    params: {}
- name: ads
  endpoint:
    path: /management/ads
    method: GET
    data_selector: data
    params: {}
- name: vast_request
  endpoint:
    path: /vast3
    method: GET
    data_selector: request
    params: {}
- name: Creative Template
  endpoint:
    path: /api/creative_template
    method: GET
    data_selector: Templates
    params: {}
- name: thumbnail
  endpoint:
    path: /{PLAYBACK_ID}/thumbnail.{png|jpg|webp}
    method: GET
    data_selector: image
    params:
      width: '400'
      height: '200'
      fit_mode: smartcrop
      time: '35'
- name: animated_gif
  endpoint:
    path: /{PLAYBACK_ID}/animated.{gif|webp}
    method: GET
    data_selector: gif
    params:
      width: '640'
      fps: '5'
- name: video_assets
  endpoint:
    path: /api/assets/video
    method: POST
    data_selector: assets
    params: {}
- name: video_assets
  endpoint:
    path: /video-assets
    method: GET
    data_selector: assets
- name: ad_placement
  endpoint:
    path: /api/v2
    method: POST
    data_selector: placements
- name: custom_event_tracking
  endpoint:
    path: /api/v2
    method: POST
    data_selector: events
- name: keyword_targeting
  endpoint:
    path: /api/v2
    method: POST
    data_selector: properties
- name: custom_targeting
  endpoint:
    path: /api/v2
    method: POST
    data_selector: properties
- name: advertiser
  endpoint:
    path: /v1/advertiser
    method: POST
    data_selector: null
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaign
    method: POST
    data_selector: null
    params: {}
- name: flight
  endpoint:
    path: /v1/flight
    method: POST
    data_selector: null
    params: {}
- name: creative
  endpoint:
    path: /v1/creative
    method: POST
    data_selector: null
    params: {}
- name: campaign_update
  endpoint:
    path: /v1/campaign/{id}
    method: PUT
    data_selector: null
    params: {}
- name: decision
  endpoint:
    path: /api/v2
    method: POST
    data_selector: null
    params: {}
- name: sponsored_brands_ad
  endpoint:
    path: /ad_decision
    method: POST
    data_selector: ad
    params: {}
- name: Add Interest to User
  endpoint:
    path: /api/v2
    method: POST
    data_selector: placements
    params: {}
- name: Read User's UserDB Record
  endpoint:
    path: /api/v2
    method: GET
    data_selector: interest
    params: {}
- name: ad_decision
  endpoint:
    path: /ad_decision
    method: POST
    data_selector: placements
    params: {}
- name: email_ads
  endpoint:
    path: /ads/email
    method: GET
    data_selector: ads
    params: {}
- name: ad_decision
  endpoint:
    path: /decisions
    method: GET
    data_selector: response
    params: {}
- name: user_record
  endpoint:
    path: /user_db/read
    method: GET
    data_selector: record
    params: {}
- name: set_custom_properties
  endpoint:
    path: /user_db/set_custom_properties
    method: POST
    data_selector: result
    params: {}
- name: forget_user_record
  endpoint:
    path: /user_db/forget
    method: DELETE
    data_selector: result
    params: {}
- name: ad_decision
  endpoint:
    path: /decisions
    method: GET
    data_selector: decisions
    params: {}
- name: user_record
  endpoint:
    path: /user_db
    method: GET
    data_selector: user
    params: {}
- name: ad_decision
  endpoint:
    path: /ad/decision
    method: GET
    data_selector: response
- name: user_record
  endpoint:
    path: /user/record
    method: GET
    data_selector: response
- name: custom_properties
  endpoint:
    path: /user/properties
    method: POST
    data_selector: response
- name: sites
  endpoint:
    path: /sites
    method: GET
- name: advertisers
  endpoint:
    path: /advertisers
    method: POST
- name: flights
  endpoint:
    path: /flights
    method: GET
- name: instant_counts
  endpoint:
    path: /instant_counts
    method: POST
- name: advertiser
  endpoint:
    path: /create_advertisers
    method: POST
    data_selector: advertiser
    params:
      CapType: 4
      DailyCapAmount: integer
      LifetimeCapAmount: integer
- name: campaign
  endpoint:
    path: /create_campaigns
    method: POST
    data_selector: campaign
    params:
      CapType: 4
      DailyCapAmount: integer
      LifetimeCapAmount: integer
- name: flight
  endpoint:
    path: /create_flight
    method: POST
    data_selector: flight
    params:
      CapType: 4
      DailyCapAmount: integer
      LifetimeCapAmount: integer
- name: priority
  endpoint:
    path: /create_priority
    method: POST
    data_selector: priority
    params: {}
- name: flight
  endpoint:
    path: /api/flights
    method: POST
    data_selector: flight
    params: {}
- name: report
  endpoint:
    path: /api/reports
    method: GET
    data_selector: report
    params: {}
- name: Create Priority
  endpoint:
    path: /create_priority
    method: POST
    data_selector: priority
    params:
      SelectionAlgorithm: 1
      FloorPrice: 0
      RemainderPercentage: 0
- name: Create Flight
  endpoint:
    path: /create_flight
    method: POST
    data_selector: flight
    params:
      IsECPMOptimized: true
      ECPMOptimizePeriod: 7
      ECPMMultiplier: 1
      FloorECPM: 0
      DefaultECPM: 0
      ECPMBurnInImpressions: 2400
- name: Priority
  endpoint:
    path: /api/v1/priority
    method: POST
    data_selector: data
    params:
      IsSecondPricing: 'true'
- name: CPC Floor Price
  endpoint:
    path: /api/v1/decision
    method: POST
    data_selector: placements
    params:
      floorCpc: 0.5
- name: relevancy_scores
  endpoint:
    path: /api/relevancy_scores
    method: POST
    data_selector: relevancy
    params: {}
- name: creative_templates
  endpoint:
    path: /v2/creative-templates
    method: POST
    data_selector: creativeTemplate
- name: creatives
  endpoint:
    path: /v1/creative
    method: POST
    data_selector: creative
- name: ad_decision
  endpoint:
    path: /api/v2
    method: POST
    data_selector: decision
- name: explainer_request
  endpoint:
    path: /api/v2
    method: POST
    data_selector: results
- name: impression_tracking
  endpoint:
    path: /i.gif
    method: GET
    data_selector: ''
    params: {}
- name: click_tracking
  endpoint:
    path: /r
    method: GET
    data_selector: ''
    params: {}
- name: impression
  endpoint:
    path: /decision
    method: GET
    data_selector: impressionUrl
    params: {}
- name: Create Creative
  endpoint:
    path: /api/create_creative
    method: POST
    data_selector: creative
    params: {}
- name: conversion_endpoint
  endpoint:
    path: /conv/
    method: POST
- name: install_url
  endpoint:
    path: /v1/cpi/startup
    method: GET
- name: click_url
  endpoint:
    path: /v1/cpi/click
    method: GET
- name: custom_event_tracking
  endpoint:
    path: /api/v1/custom_events
    method: GET
- name: Create Flight
  endpoint:
    path: /api/v2
    method: POST
    data_selector: flight
    params:
      IsTrackingConversions: true
- name: Get Conversion Tracking Pixel
  endpoint:
    path: /v1/advertiser/12345/trackingCode
    method: GET
    data_selector: trackingCode
    params: {}
- name: conversion
  endpoint:
    path: /conv/{GUID}
    method: GET
    data_selector: ''
    params: {}
- name: geo_targeting
  endpoint:
    path: /geotargeting
    method: POST
    data_selector: geoTargeting
    params: {}
- name: Decision API
  endpoint:
    path: /decision/api
    method: POST
    data_selector: consent
    params: {}
- name: ados.js
  endpoint:
    path: /ados.js
    method: POST
    data_selector: ados_setConsent
    params: {}
- name: create_flight
  endpoint:
    path: /create_flight
    method: POST
    data_selector: response
    params: {}
- name: update_flight
  endpoint:
    path: /update_flight
    method: POST
    data_selector: response
    params: {}
- name: create_ad
  endpoint:
    path: /create_ad
    method: POST
    data_selector: response
    params: {}
- name: Create Flight
  endpoint:
    path: /create/flight
    method: POST
    data_selector: Keywords
    params: {}
- name: Update Flights
  endpoint:
    path: /update/flights
    method: POST
    data_selector: Keywords
    params: {}
- name: Create Ads
  endpoint:
    path: /create/ads
    method: POST
    data_selector: ActiveKeywords
    params: {}
- name: Update Ad
  endpoint:
    path: /update/ad
    method: POST
    data_selector: ActiveKeywords
    params: {}
- name: Create Priority
  endpoint:
    path: /create/priority
    method: POST
    data_selector: Name
    params: {}
- name: keywords
  endpoint:
    path: /api/keywords
    method: POST
    data_selector: keywords
- name: $regs.gdpr
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: $consent.gdpr
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: $datacenter
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: $device
  endpoint:
    path: $device
    method: GET
- name: $keywords
  endpoint:
    path: $keywords
    method: GET
- name: $location
  endpoint:
    path: $location
    method: GET
- name: $user
  endpoint:
    path: $user
    method: GET
- name: $content
  endpoint:
    path: $content
    method: GET
- name: $userAgent
  endpoint:
    path: $userAgent
    method: GET
- name: $url
  endpoint:
    path: $url
    method: GET
- name: $referralUrl
  endpoint:
    path: $referralUrl
    method: GET
- name: $site
  endpoint:
    path: $site
    method: GET
- name: $zones
  endpoint:
    path: $zones
    method: GET
- name: $adTypes
  endpoint:
    path: $adTypes
    method: GET
- name: $divName
  endpoint:
    path: $divName
    method: GET
- name: $acceptLanguage
  endpoint:
    path: $acceptLanguage
    method: GET
- name: $datetime
  endpoint:
    path: $datetime
    method: GET
- name: Decision API
  endpoint:
    path: /decision
    method: POST
    data_selector: keywords
    params: {}
- name: Create Advertisers
  endpoint:
    path: /create_advertisers
    method: POST
    data_selector: advertiser
    params: {}
- name: Update Advertisers
  endpoint:
    path: /update_advertisers
    method: POST
    data_selector: advertiser
    params: {}
- name: keywords
  endpoint:
    path: /api/decision
    method: POST
    data_selector: results
    params: {}
- name: create_campaign
  endpoint:
    path: /create_campaigns
    method: POST
    data_selector: campaign
    params: {}
- name: update_campaign
  endpoint:
    path: /update_campaigns
    method: POST
    data_selector: campaign
    params: {}
- name: Create Flight
  endpoint:
    path: /create_flight
    method: POST
    data_selector: flight
    params: {}
- name: BehavioralTargeting
  endpoint:
    path: /createFlight
    method: POST
    data_selector: BehavioralTargeting
    params: {}
- name: create_ads
  endpoint:
    path: /create_ads
    method: POST
    data_selector: creative
    params: {}
- name: update_ads
  endpoint:
    path: /update_ads
    method: PUT
    data_selector: creative
    params: {}
- name: Create Flight Categories
  endpoint:
    path: /create_flight_categories
    method: POST
    data_selector: id
    params: {}
- name: List Flight Categories
  endpoint:
    path: /list_flight_categories
    method: GET
    data_selector: categories
    params: {}
- name: List Network Categories
  endpoint:
    path: /list_network_categories
    method: GET
    data_selector: categories
    params: {}
- name: Create Flight
  endpoint:
    path: /create_flight
    method: POST
    data_selector: id
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: BidModifiers
  endpoint:
    path: /api/bid_modifiers
    method: POST
    data_selector: BidModifiers
- name: create_ads
  endpoint:
    path: /createAds
    method: POST
- name: Create Creative
  endpoint:
    path: /v1/creative
    method: POST
    data_selector: ''
    params: {}
- name: Upload Creative Image
  endpoint:
    path: /v1/creative/{id}/upload
    method: POST
    data_selector: ''
    params: {}
- name: Retargeting API Endpoint
  endpoint:
    path: /api/retargeting
    method: POST
    data_selector: user
    params: {}
- name: UserDB Read User Endpoint
  endpoint:
    path: /api/userdb/read
    method: GET
    data_selector: retargetingSegments
    params: {}
- name: geometry
  endpoint:
    path: /api/v2
    method: POST
    data_selector: null
    params: {}
- name: Create Ads
  endpoint:
    path: /ads/create
    method: POST
    data_selector: ad
    params: {}
- name: Update Ad
  endpoint:
    path: /ads/update
    method: POST
    data_selector: ad
    params: {}
- name: VAST - External Media
  endpoint:
    path: /create/creative
    method: POST
    data_selector: Body
    params: {}
- name: VAST - Kevel Video Asset
  endpoint:
    path: /create/creative
    method: POST
    data_selector: Body
    params: {}
- name: VAST - External Media (mp4)
  endpoint:
    path: /create/creative
    method: POST
    data_selector: Body
    params: {}
- name: click
  endpoint:
    path: /clicks
    method: GET
    data_selector: clicks
- name: conversion
  endpoint:
    path: /conversions
    method: GET
    data_selector: conversions
- name: custom_event
  endpoint:
    path: /custom_events
    method: GET
    data_selector: custom_events
- name: request_log
  endpoint:
    path: /request_logs
    method: GET
    data_selector: records
- name: decision_log
  endpoint:
    path: /decision_logs
    method: GET
    data_selector: records
- name: selection_log
  endpoint:
    path: /selection_logs
    method: GET
    data_selector: records
- name: userdb_log
  endpoint:
    path: /userdb_logs
    method: GET
    data_selector: records
- name: auction_log
  endpoint:
    path: /auction/logs
    method: GET
    data_selector: logs
    params: {}
- name: bids
  endpoint:
    path: /auction/bids
    method: GET
    data_selector: bids
    params: {}
- name: data_shipping_logs
  endpoint:
    path: /data/shipping/logs
    method: GET
    data_selector: records
- name: impression_logs
  endpoint:
    path: /impression_logs
    method: GET
    data_selector: records
- name: Create Channels
  endpoint:
    path: /api/create_channels
    method: POST
- name: Channels
  endpoint:
    path: /api/channels
    method: GET
- name: Channel Site Maps
  endpoint:
    path: /api/channel_site_maps
    method: GET
- name: Create Site
  endpoint:
    path: /create_site
    method: POST
- name: Update Sites
  endpoint:
    path: /update_sites
    method: PUT
- name: Channel Site Maps
  endpoint:
    path: /channel_site_maps
    method: POST
- name: network_settings
  endpoint:
    path: /v1/forecaster/network-settings
    method: GET
- name: ad_products
  endpoint:
    path: /v1/forecaster/ad-products
    method: POST
- name: trigger_ad_products_forecasts
  endpoint:
    path: /v1/forecaster/trigger-ad-products-forecasts
    method: POST
- name: trigger_inventory_forecast
  endpoint:
    path: /v1/forecaster/trigger-inventory-forecast
    method: POST
- name: forecast_results
  endpoint:
    path: /v1/forecaster/{forecastId}
    method: GET
- name: ad_request
  endpoint:
    path: /forecast/ad_request
    method: GET
- name: campaign_performance
  endpoint:
    path: /forecast/campaign_performance
    method: GET
- name: inventory_availability
  endpoint:
    path: /forecast/inventory_availability
    method: GET
- name: Amazon Web Services
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params:
      regions:
      - US-East-1
      - US-West-2
      - EU-Central-1
      - EU-West-1
      - Ap-Northeast-2
      - Ap-Southeast-1
      - Ap-Southeast-2
      - Ap-South-1
- name: A Serious Business, Inc. (Ab.bot)
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ChurnZero
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: Datadog, Inc.
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: Hubspot, Inc.
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: Mux, Inc.
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: Papertrail, SolarWinds Worldwide, LLC
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: Shortcut Software Company
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: Slack Technologies, LLC
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: UserDB Record
  endpoint:
    path: /userdb/record
    method: POST
    data_selector: record
    params: {}
- name: schemas
  endpoint:
    path: /schemas
    method: GET
    data_selector: records
- name: contentKeys
  endpoint:
    path: /contentKeys
    method: GET
    data_selector: records
- name: Catalog
  endpoint:
    path: /catalogs
    method: POST
    data_selector: catalogs
    params: {}
- name: Categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
    params: {}
- name: SAML Metadata
  endpoint:
    path: /FederationMetadata/2007-06/FederationMetadata.xml
    method: GET
- name: Creative Templates
  endpoint:
    path: /creative-templates
    method: GET
- name: Ad Templates
  endpoint:
    path: /ad-templates
    method: GET
- name: Create Ads from Products
  endpoint:
    path: /jobs/create-ads
    method: POST
- name: purchase_event
  endpoint:
    path: /c/123/purchase
    method: GET
    data_selector: purchase_data
    params: {}
- name: create_campaign
  endpoint:
    path: /v2/campaign
    method: POST
    data_selector: Campaign
    params: {}
- name: create_ads_from_product_query
  endpoint:
    path: /v1/job/
    method: POST
    data_selector: Job
    params: {}
- name: create_ads_from_products
  endpoint:
    path: /v1/job/
    method: POST
    data_selector: Job
    params: {}
- name: bidder
  endpoint:
    path: /v1/bidder
    method: POST
    data_selector: bids
    params:
      siteID: Required
      video.w: Required
      video.h: Required
      video.playerSize: Required
- name: Advertiser
  endpoint:
    path: /advertisers
    method: POST
    data_selector: advertiser
    params: {}
- name: Campaign
  endpoint:
    path: /campaigns
    method: POST
    data_selector: campaign
    params: {}
- name: Flight
  endpoint:
    path: /flights
    method: POST
    data_selector: flight
    params: {}
- name: Ad
  endpoint:
    path: /ads
    method: POST
    data_selector: ad
    params: {}
- name: Ad Decision Request
  endpoint:
    path: /decision
    method: POST
    data_selector: decision
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: consent
  endpoint:
    path: /decision-api
    method: POST
    data_selector: consent
    params: {}
- name: schain
  endpoint:
    path: /path/to/supplychain
    method: POST
    data_selector: rtb.schain
    params: {}
- name: user_sync_script
  endpoint:
    path: /user_sync_script
    method: GET
    data_selector: script
    params:
      account_id: <publisher_account_id>
- name: decision
  endpoint:
    path: /api/decision
    method: GET
    data_selector: decisions
- name: multi_winner_placement
  endpoint:
    path: /placements
    method: POST
    data_selector: placements
    params:
      proportionality: 'true'
      count: 2
- name: scheduled_reports
  endpoint:
    path: /report/schedule
    method: GET
    data_selector: reports
- name: schedule_report_delete
  endpoint:
    path: /v1/report/schedule//delete
    method: GET
    params: {}
- name: report_run
  endpoint:
    path: /reportruns
    method: GET
    data_selector: items
- name: instant_counts_advertiser
  endpoint:
    path: /instantcounts/advertiser/
    method: GET
- name: instant_counts_campaign
  endpoint:
    path: /instantcounts/campaign/
    method: GET
    data_selector: data
    params: {}
- name: impressions
  endpoint:
    path: /impressions
    method: GET
    data_selector: impressions
    params: {}
- name: clicks
  endpoint:
    path: /clicks
    method: GET
    data_selector: clicks
    params: {}
- name: conversions
  endpoint:
    path: /conversions
    method: GET
    data_selector: conversions
    params: {}
- name: revenue
  endpoint:
    path: /revenue
    method: GET
    data_selector: revenue
    params: {}
- name: gmv
  endpoint:
    path: /gmv
    method: GET
    data_selector: gmv
    params: {}
- name: uniqueclicks
  endpoint:
    path: /uniqueclicks
    method: GET
    data_selector: uniqueclicks
    params: {}
- name: fraudclicks
  endpoint:
    path: /fraudclicks
    method: GET
    data_selector: fraudclicks
    params: {}
- name: rawclicks
  endpoint:
    path: /rawclicks
    method: GET
    data_selector: rawclicks
    params: {}
- name: invaliduaclicks
  endpoint:
    path: /invaliduaclicks
    method: GET
    data_selector: invaliduaclicks
    params: {}
- name: duplicateimpressionclicks
  endpoint:
    path: /duplicateimpressionclicks
    method: GET
    data_selector: duplicateimpressionclicks
    params: {}
- name: testclicks
  endpoint:
    path: /testclicks
    method: GET
    data_selector: testclicks
    params: {}
- name: suspiciousclicks
  endpoint:
    path: /suspiciousclicks
    method: GET
    data_selector: suspiciousclicks
    params: {}
- name: instant_counts
  endpoint:
    path: /instantcounts/ad/
    method: GET
- name: advertiser
  endpoint:
    path: /v1/advertiser
    method: POST
- name: advertiser
  endpoint:
    path: /v1/advertiser/{AdvertiserID}
    method: PUT
- name: campaign
  endpoint:
    path: /v2/campaign
    method: POST
    data_selector: Id
    params: {}
- name: instantcounts_flight
  endpoint:
    path: /instantcounts/flight/
    method: GET
    data_selector: ''
    params: {}
- name: network_instant_counts
  endpoint:
    path: /v1/instantcounts/network
    method: GET
    params:
      required:
      - days
      - start
      - end
- name: site
  endpoint:
    path: /
    method: GET
    params:
      pageSize: 100
      page: 1
- name: search_advertiser
  endpoint:
    path: /v1/advertiser/search
    method: POST
    data_selector: items
    params: {}
- name: advertiser
  endpoint:
    path: /v1/advertiser/{AdvertiserID}
    method: PUT
    data_selector: advertiser
    params: {}
- name: advertiser
  endpoint:
    path: /v1/advertiser
    method: GET
- name: conversion_tracking_pixel
  endpoint:
    path: /v1/advertiser/{AdvertiserID}/trackingCode
    method: GET
- name: campaign
  endpoint:
    path: /v1/campaign
    method: POST
- name: campaign
  endpoint:
    path: /v1/campaign
    method: GET
- name: campaign
  endpoint:
    path: /v1/campaign/{CampaignID}
    method: GET
    data_selector: null
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaign/{CampaignID}
    method: PUT
    data_selector: null
    params:
      isDeleted: 'true'
- name: flight
  endpoint:
    path: /v1/flight/{flightId}
    method: PUT
- name: list_flights_for_campaign
  endpoint:
    path: /v1/campaign/{CampaignID}/flight
    method: GET
- name: advertiser
  endpoint:
    path: /v1/advertiser/{AdvertiserID}
    method: GET
    data_selector: ''
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaign/{CampaignID}
    method: PUT
    data_selector: null
    params: {}
- name: flight
  endpoint:
    path: /v1/flight
    method: POST
- name: flight
  endpoint:
    path: /v1/flight/{FlightID}
    method: GET
- name: search_campaigns
  endpoint:
    path: /v1/campaign/search
    method: POST
    data_selector: items
    params: {}
- name: asset
  endpoint:
    path: /v1/asset
    method: GET
    data_selector: ''
    params: {}
- name: flight
  endpoint:
    path: /v1/flight
    method: GET
    data_selector: flights
- name: list_flights_for_advertiser
  endpoint:
    path: /v1/advertiser/{AdvertiserID}/flight
    method: GET
- name: creatives
  endpoint:
    path: /v1/advertiser/{AdvertiserID}/creatives
    method: GET
- name: flights
  endpoint:
    path: /v1/fast/flight
    method: GET
    data_selector: flights
    params:
      beforeStartDate: ''
      afterStartDate: ''
      beforeEndDate: ''
      afterEndDate: ''
      noEndDate: 'true'
      name: ''
      nameContains: ''
- name: upload_creative_image
  endpoint:
    path: /v1/creative/{CreativeID}/upload
    method: POST
- name: channelSite
  endpoint:
    path: /channelSite
    method: PUT
    data_selector: null
    params: {}
- name: creative
  endpoint:
    path: /v1/creative/{CreativeID}
    method: PUT
- name: creative
  endpoint:
    path: /v1/creative/{CreativeID}
    method: GET
    data_selector: {}
    params: {}
- name: creative
  endpoint:
    path: /v1/creative
    method: POST
- name: creative
  endpoint:
    path: /v1/creative
    method: GET
    data_selector: ''
    params: {}
- name: channel_site_map
  endpoint:
    path: /channel/{ChannelID}/site/{SiteID}
    method: GET
    data_selector: site_map
    params: {}
- name: create_creative
  endpoint:
    path: /v1/flight/{FlightID}/creative
    method: POST
    data_selector: ''
    params: {}
- name: delete_channel_site_map
  endpoint:
    path: /channel/{ChannelID}/site/{SiteID}/delete
    method: GET
- name: delete_ad
  endpoint:
    path: /v1/flight/{FlightID}/creative/{AdID}/delete
    method: GET
- name: channel_site
  endpoint:
    path: /channelSite
    method: GET
    data_selector: channel site maps
    params: {}
- name: update_ad
  endpoint:
    path: /v1/flight/{FlightID}/creative/{AdID}
    method: PUT
- name: creatives
  endpoint:
    path: /v1/flight/{FlightID}/creatives
    method: GET
- name: ad
  endpoint:
    path: /v1/ad/{AdID}
    method: GET
    data_selector: ''
    params: {}
- name: get_ad
  endpoint:
    path: /v1/flight/{FlightID}/creative/{AdID}
    method: GET
- name: ad_tracking
  endpoint:
    path: /v1/ad/{AdID}/tracking-urls
    method: GET
- name: flight_category
  endpoint:
    path: /v1/flight/{FlightID}/category
    method: GET
    data_selector: ''
- name: ad
  endpoint:
    path: /v1/ad
    method: GET
    data_selector: ''
    params: {}
- name: flight_categories
  endpoint:
    path: /v1/flight/{FlightID}/categories
    method: GET
- name: delete_flight_category
  endpoint:
    path: /v1/flight/{FlightID}/category/{FlightCategoryID}/delete
    method: GET
- name: zone
  endpoint:
    path: /zone
    method: POST
    data_selector: zone
    params:
      required: name
- name: categories
  endpoint:
    path: /v1/categories
    method: GET
- name: site_zone_targeting
  endpoint:
    path: /v1/flight/{FlightID}/sitezonetargeting/{SiteZoneTargetingID}
    method: GET
    data_selector: properties
    params: {}
- name: geotargeting
  endpoint:
    path: /v1/flight/{FlightID}/geotargeting
    method: POST
- name: site_zone_targeting
  endpoint:
    path: /v1/flight/{FlightID}/sitezonetargeting
    method: POST
    data_selector: response
- name: site_zone_targeting
  endpoint:
    path: /v1/flight/{FlightID}/sitezonetargeting/{SiteZoneTargetingID}/delete
    method: GET
- name: geo_targeting
  endpoint:
    path: /v1/flight/{FlightID}/geotargeting/{LocationID}
    method: GET
    data_selector: {}
    params: {}
- name: delete_geo_targeting
  endpoint:
    path: /v1/flight/{FlightID}/geotargeting/{LocationID}/delete
    method: GET
- name: update_site_zone_targeting
  endpoint:
    path: /v1/flight/{FlightID}/sitezonetargeting/{SiteZoneTargetingID}
    method: PUT
    data_selector: ''
    params: {}
- name: update_geo_targeting
  endpoint:
    path: /v1/flight/{FlightID}/geotargeting/{LocationID}
    method: PUT
- name: countries
  endpoint:
    path: /v1/countries
    method: GET
    data_selector: countries
    params: {}
- name: regions
  endpoint:
    path: /v1/country/{CountryCode}/regions
    method: GET
    data_selector: ''
    params: {}
- name: metro_codes
  endpoint:
    path: /v1/region/{RegionCode}
    method: GET
- name: Update Distance Targeting Geometry
  endpoint:
    path: /v1/flight/{FlightID}/distance/{GeometryID}
    method: PUT
- name: distance_targeting_geometry
  endpoint:
    path: /v1/flight/{FlightID}/distance
    method: POST
- name: batch_distance_targeting
  endpoint:
    path: /v1/flight/{FlightID}/distance/batch
    method: POST
- name: day_part
  endpoint:
    path: /v1/flight/{FlightID}/dayparting/{TimepartID}
    method: GET
    data_selector: ''
    params: {}
- name: day_parts
  endpoint:
    path: /v1/flight/{FlightID}/dayparting
    method: GET
    data_selector: {}
    params: {}
- name: delete_day_part
  endpoint:
    path: /v1/flight/{FlightID}/dayparting/{TimepartID}/delete
    method: POST
- name: distance_targeting_geometry
  endpoint:
    path: /v1/flight/{FlightID}/distance/{GeometryID}
    method: GET
    data_selector: null
    params: {}
- name: zone
  endpoint:
    path: /zone/
    method: PUT
- name: distance_targeting_geometries
  endpoint:
    path: /flight/{FlightID}/distance
    method: GET
    params:
      FlightID: required
      distance: required
- name: delete_distance_targeting_geometry
  endpoint:
    path: /flight/{FlightID}/distance/{GeometryID}
    method: DELETE
- name: day_part
  endpoint:
    path: /v1/flight/{FlightID}/dayparting
    method: POST
- name: zone
  endpoint:
    path: /zone
    method: GET
    data_selector: zones
- name: priority
  endpoint:
    path: /priority
    method: GET
    data_selector: priorities
    params: {}
- name: update_creative_template
  endpoint:
    path: /v2/creative-templates/{CreativeTemplateID}/update
    method: POST
- name: zone
  endpoint:
    path: /zone/{ZoneID}
    method: GET
- name: create_asset
  endpoint:
    path: /v1/advertiser/{advertiser_id}/asset
    method: POST
    data_selector: ''
    params: {}
- name: priority
  endpoint:
    path: /priority/
    method: GET
    data_selector: properties
    params: {}
- name: delete_priority
  endpoint:
    path: /priority//delete
    method: GET
    data_selector: null
    params: {}
- name: creative_template
  endpoint:
    path: /v2/creative-templates
    method: POST
- name: creative_template
  endpoint:
    path: /v2/creative-templates/{CreativeTemplateID}
    method: GET
    data_selector: creative_template
- name: creative_templates
  endpoint:
    path: /v2/creative-templates
    method: GET
    data_selector: items
    params:
      page: 1
      pageSize: 10
- name: entity_counts
  endpoint:
    path: /entitycounts
    method: GET
- name: advertiser_asset
  endpoint:
    path: /v1/advertiser/{AdvertiserID}/asset
    method: GET
- name: asset
  endpoint:
    path: /v1/asset/{AssetID}
    method: GET
- name: create_channel
  endpoint:
    path: /v1/channel
    method: POST
- name: priorities
  endpoint:
    path: /v1/channel/{ChannelID}/priorities
    method: GET
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /site
    method: POST
- name: delete_asset
  endpoint:
    path: /v1/asset/{AssetID}/delete
    method: POST
- name: channel
  endpoint:
    path: /v1/channel
    method: GET
- name: channels_in_site
  endpoint:
    path: /channelsInSite/{SiteID}
    method: GET
    data_selector: Channel IDs
    params: {}
- name: channel
  endpoint:
    path: /v1/channel/{ChannelID}
    method: GET
    data_selector: properties
- name: site
  endpoint:
    path: /site/
    method: GET
    data_selector: properties
- name: upload_asset_image
  endpoint:
    path: /v1/asset/{AssetID}/upload
    method: POST
    data_selector: ContentURL
    params: {}
- name: channel
  endpoint:
    path: /v1/channel/{ChannelID}
    method: PUT
- name: delete_channel
  endpoint:
    path: /v1/channel/{ChannelID}/delete
    method: GET
- name: sites
  endpoint:
    path: /site
    method: GET
    data_selector: sites
    params: {}
- name: channel_site
  endpoint:
    path: /channelSite
    method: POST
- name: ad_type
  endpoint:
    path: /adtypes
    method: POST
- name: ad_type
  endpoint:
    path: /v1/adtypes/
    method: DELETE
- name: delete_ad_type
  endpoint:
    path: /channel//adtypes//delete
    method: GET
- name: forecast
  endpoint:
    path: /forecast/existing
    method: POST
    data_selector: result
    params:
      Type: existing
      EndDate: '2023-03-20'
- name: site
  endpoint:
    path: /fast/site
    method: GET
    data_selector: site
    params: {}
- name: forecast_request
  endpoint:
    path: /forecaster/
    method: POST
    data_selector: id
- name: forecast_result
  endpoint:
    path: /forecaster/{id}
    method: GET
    data_selector: result
- name: forecast
  endpoint:
    path: /forecast/deliverable
    method: POST
    data_selector: result
    params: {}
- name: placement
  endpoint:
    path: /placement
    method: post
- name: ad_types
  endpoint:
    path: /adtypes
    method: GET
    data_selector: ''
- name: ad_types
  endpoint:
    path: /channel/{ChannelID}/adtypes
    method: GET
    data_selector: ad_types
    params: {}
- name: availability_forecast
  endpoint:
    path: /availability/forecast
    method: POST
    data_selector: result
    params: {}
- name: user_record
  endpoint:
    path: /udb/{networkId}/read
    method: GET
    data_selector: user
    params: {}
- name: add_multiple_interests
  endpoint:
    path: /udb/{networkId}/interests
    method: POST
    data_selector: ''
    params: {}
- name: user_ip
  endpoint:
    path: /udb/{networkId}/ip/i.gif
    method: GET
- name: forget_user
  endpoint:
    path: /udb/{networkId}/
    method: DELETE
- name: consent
  endpoint:
    path: /udb/{networkId}/consent
    method: POST
- name: user_matching
  endpoint:
    path: /udb/{networkId}/sync/i.gif
    method: GET
    data_selector: null
    params: {}
- name: set_user
  endpoint:
    path: /udb/{networkId}/set/i.gif
    method: GET
    data_selector: ''
    params:
      userKey: ''
- name: remove_multiple_interests
  endpoint:
    path: /udb/{networkId}/interests
    method: DELETE
    data_selector: ''
    params: {}
- name: retargeting_segment
  endpoint:
    path: /udb/{networkId}/rt///i.gif
    method: GET
    data_selector: ''
- name: interest_targeting
  endpoint:
    path: /interest/i.gif?interest={interest}
    method: GET
    data_selector: ''
    params: {}
- name: retargeting
  endpoint:
    path: /rt/{advertiserID}/{segment}/i.gif
    method: GET
    data_selector: ''
    params: {}
- name: opt_out
  endpoint:
    path: /optout/i.gif
    method: GET
    data_selector: ''
    params: {}
- name: custom
  endpoint:
    path: /custom
    method: POST
    data_selector: ''
    params: {}
- name: interest
  endpoint:
    path: /udb/{networkId}/interest/i.gif
    method: GET
    data_selector: ''
    params: {}
- name: content_record
  endpoint:
    path: /cdb/{networkId}/custom/{schemaName}/{contentKey}
    method: GET
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /v1/login
    method: GET
    data_selector: users
    params: {}
- name: user
  endpoint:
    path: /v1/login/
    method: GET
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /job/
    method: POST
- name: purchase_event
  endpoint:
    path: /c/{campaignId}/purchase
    method: GET
    data_selector: purchase_data
    params: {}
- name: submit_delivery_report
  endpoint:
    path: /submit_delivery_report
    method: POST
    data_selector: report
    params: {}
- name: demand_source
  endpoint:
    path: /demand_source
    method: post
- name: demand_source_get
  endpoint:
    path: /demand_source
    method: get
- name: demand_source_by_id
  endpoint:
    path: /demand_source/{demand_source_id}
    method: get
- name: placement
  endpoint:
    path: /placement
    method: post
- name: placement_by_id
  endpoint:
    path: /placement/{placement_id}
    method: put
- name: placement_delete
  endpoint:
    path: /placement/{placement_id}
    method: delete
- name: channel
  endpoint:
    path: /channel
    method: get
- name: demand_source
  endpoint:
    path: /demand_source
    method: post
- name: demand_source_id
  endpoint:
    path: /demand_source/{demand_source_id}
    method: get
- name: placement
  endpoint:
    path: /placement
    method: post
- name: channel
  endpoint:
    path: /channel
    method: get
- name: placement_demand
  endpoint:
    path: /placement//demand/
    method: DELETE
- name: placement
  endpoint:
    path: /channel//placement/
    method: DELETE
    data_selector: ''
    params: {}
- name: placement
  endpoint:
    path: /placement/{placement_id}
    method: get
- name: placement
  endpoint:
    path: /channel//placement/
    method: PUT
    data_selector: ''
    params: {}
- name: placement
  endpoint:
    path: /placement
    method: post
- name: distance_targeting_geometry
  endpoint:
    path: /v1/flight/{FlightID}/distance
    method: POST
- name: demand_source
  endpoint:
    path: /demand_source
    method: post
- name: demand_source_get
  endpoint:
    path: /demand_source
    method: get
- name: demand_source_by_id
  endpoint:
    path: /demand_source/{demand_source_id}
    method: get
notes:
- Requires setup of connected app in api
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Considerations For Launching An Ad Platform
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Kevel
- Some objects may return nulls in deeply nested fields
- UserDB is a first party data store that enables you to activate on user-level targeting.
- Requires setup of connected app in Kevel
- All API requests must use TLS to protect your API key.
- Your API Key is the same as a username/password.
- Ensure safe-keeping of authentication tokens and limit access to authorized IPs.
- Documentation for API endpoints will be provided within 3 days.
- When updating objects, pass the entire contents of the object as the payload.
- To serve VAST ads, please contact your account manager.
- Use https to call Kevel's APIs and ad code.
- Older ad codes may not use https - those should be updated to use https only.
- The default refresh rate is 10 seconds, and the minimum refresh rate is 1 second.
- Use of this functionality is optional and is controlled via the presence of an AllowedValues
  or Regex attribute on a field in a Creative Template schema.
- Default limit of 30 thumbnails per Asset
- Maximum total duration of GIF is limited to 10 seconds; minimum total duration of
  GIF is 250ms
- There is an additional pay-per-use cost for video asset functionality and usage
  of video assets is subject to the Kevel Terms of Service.
- There is no file size limit for input video, but the max duration for any single
  asset is 12 hours.
- For full details on how to set up one of the above options, please refer to the
  Creatives (VAST) documentation page.
- Use your own network and site IDs!
- Reports that contain over 15MB of data are too large to display in the UI.
- There is a limit of 1.3 million rows in reports.
- All reports generated through the UI or API have a lifetime of 10 days; they expire
  after that and need to be regenerated.
- The lag for reporting data is 30 minutes - 2 hours, depending on ad server traffic
  volume.
- Reports that use the hourly Date Group can only be requested within the past 35
  days.
- If your data is imported incorrectly, change your Text Delimiter settings.
- This listens for the message 'ImpressionCounted'. The message data includes the
  impression shim, which includes the name of the div and the userkey as the value
  of the uk field.
- Utilizing Catalog unlocks Kevel's attribution settings.
- Kevel attributes GMV to ad campaigns.
- Common attribution setting for sponsored brands placements is 30-day post-click,
  same-brand attribution.
- You can still create sponsored brands placements using Kevel even if you don't use
  Kevel Catalog or send purchase data to Kevel.
- Email serving only works for creatives that are images.
- Browsers and mail clients will cache images for email ads if the same URL is viewed
  multiple times.
- Browsers will cache images for Email ad code if the same URL is used for multiple
  email campaigns.
- To avoid caching, make the URL unique each time you send a campaign.
- If your Kevel account uses UserDB, you are required to use a user's userKey as the
  key value.
- Your email client should have a way of automating a unique code that you can append
  to the URLs as Key.
- Demo network, site, and ad type IDs; find your own via the Adzerk UI!
- Requires setup of demo network and site IDs via the Adzerk UI.
- Ensure API key is included in the header for authentication.
- Requires setup of API key in environment variables
- Network ID is required for all SDK operations.
- API Key is required when writing to UserDB.
- Requires Node.js v10 or higher.
- API keys can be found on the API Keys page.
- If a flight has eCPM Optimization settings enabled, Kevel will calculate an eCPM
  for the ads in the flight approximately every thirty minutes.
- You can define the historical time period for the optimization and the default eCPM
  for this calculation using the eCPM Optimization settings.
- Kevel's pacing algorithm will attempt to deliver 100% of goal over the desired time
  period. The actual goal achieved can vary by +-5%, due to varying amounts of request
  traffic.
- Very small goals, eg, $10 Revenue or 100 clicks can exceed goal by a large percentage
  during high traffic scenarios.
- Auto-balance is only applicable if utilizing legacy ad weights.
- Best practice is to not change the time zone of a flight during delivery.
- Changing the time zone on an active flight that includes daily goals or caps may
  cause unexpected delivery problems.
- You must set a remainder percentage on the priority between 0% and 99%.
- An ad that is the only eligible ad in the priority will not serve as part of the
  remainder percentage.
- Relevancy scores are integers between 1 and 1000.
- An ad without a defined relevancy score has a default score of 500.
- eCPM functionality and documentation is subject to change as the product evolves
  and changes.
- Partition-specific caps, goals or frequency capping are not supported at this time.
- The maximum length of a partition name is 8 characters.
- The ad servers support up to 20 active partitions per ad at any time.
- When there are more than 20 partitions for an ad, we will choose the 20 that most
  recently received events.
- Supports phrase matching on string fields.
- Can return multiple ads per placement using multi-winner placements.
- Decision Explainer requests should only be used as a debugging and development tool.
- Impression tracking URLs expire after 24hrs.
- Click tracking URLs do not expire.
- The maximum length for the total query string appended to an impression or click
  URL is 1024 characters.
- Make sure to add \ before quotation marks within the ScriptBody string to prevent
  it from breaking.
- Uses UserKeys to identify unique devices.
- Custom Event Tracking requires using the Decision API.
- Kevel's system does not 'audit' the event that's fired.
- If conversion tracking is enabled for a Flight, the conversion column automatically
  appears.
- Reports can be generated in various Time Zones by including 'TimeZone' as a body
  param in the request body.
- Default value is UTC
- To enable server conversion tracking in the Kevel UI, go to the Flight's General
  Settings page and click the Track Conversions checkbox next to Rate and Price.
- The conversion macro does not unfurl until after the click is called, therefore,
  a user is unable to retrieve the conversionId from the response itself - only from
  the clickURL.
- To geo-target accurately with the Decision API, make sure to include the ip field
  in the Decision request.
- Frequency capping, attribution, and RTB user matching will not work for EU users
  unless consent is set.
- Keywords can contain spaces
- Keywords are case-insensitive
- Trailing spaces after keywords saved in the UI or API will be ignored
- The maximum amount of keywords that can be added to a Decision API request is capped
  at 512 characters
- We will truncate any keywords past the 512 character limit
- We will truncate a single keyword at the 256th character if it is longer than that
- The max length of CustomTargeting for flights is 1000 characters.
- For an ad to serve, both ad-level and flight-level targeting must be in agreement.
- There is a maximum of 20 ad keywords allowed per ad.
- Custom targeting values are not included in Kevel reporting
- If the report you generated is too large, please try removing some dimensions, shortening
  the date range or reducing the date group granularity and generating the report
  again.
- Conversions are represented in reports as Read-Only EventIds.
- The maximum character length for Zerkel queries is 1000 characters.
- When passing queries via CustomTargeting field in API, make sure quotation marks
  are escaped.
- Pass key/value pairs as properties in a placement in the Decision API Request
- To pass the contents of a value into a creative, use the macro {{placement.properties.key-name}}
- Keyword targeting is an exact match.
- With Reserved Keys, you do NOT need to add keyword targeting at the flight/ad level.
- Frequency Capping requires the use of the UserDB and involves you sending the UserKey
  in the user field for each request for Ad Decision Request.
- Set caps by hour, day, or minute. Max duration is 180 days, 168 hours, or 4400 minutes.
- Under GDPR, frequency capping is not enabled for European Union ad viewers unless
  tracking consent is passed in the request.
- Cookies expire after 365 days.
- The azk-events and azk-blocks cookies expire after 30 days.
- Cookies will not be set for any user with an EU-IP, unless you indicate they have
  provided consent.
- Data is transferred on a continuous basis and for the duration of the Services except
  where otherwise required or allowed by Applicable Data Protection Law.
- Set IsFreqCap to true to enable frequency capping, otherwise fields are ignored
- 'FreqCapType: 1 = Hour, 2 = Day'
- UserKey must be passed in the user object's key field for user-level targeting to
  work
- Kevel API keys are not user specific. They grant access to any API to any user in
  your account.
- Kevel API keys are sensitive data! Treat them as you would a password to a production
  software system!
- Day parting allows you to limit a flight to serve on specific days, times, or both.
- Each day parting rule is a time part. You can set up to 10 time parts per flight.
- By default, Kevel utilizes Coordinated Universal Time (UTC / GMT).
- Time parts on a flight are not allowed to overlap.
- If a day part is set from midnight to midnight, it will run for the full day(s)
  selected.
- Kevel does not provide demographic data itself. Instead, you will need to send information
  associated with the user to UserDB.
- Currently, you can only archive flights in Kevel UI (version 1.0).
- Caps may over-serve by 2% in normal traffic— this can happen due to natural traffic
  variations.
- Campaign Start and End Dates are populated based on the start and end dates of the
  flight(s) within the campaign.
- Your column preferences will be saved for your user only, and not for the full network.
- Up to 2,500 bid modifiers can be applied to a Flight.
- Modifiers can range from 0–10x.
- If a creative is set to inactive, then all ads (creatives mapped to a flight) are
  not able to serve even if they are set to active.
- A maximum of 1000 characters is allowed in the Metadata JSON object.
- Users stay in their retargeting segment for approximately 90 days.
- For more information on adding weather targeting to your ad platform, you can read
  Ad.Product's Weather Targeting Guide.
- For more information on adding company targeting to your ad platform, you can read
  Ad.Product's Company Targeting Guide.
- Distance Targeting requires the Business or Enterprise Plans.
- User location for Distance Targeting is determined in the ad request using the intendedLatitude
  and intendedLongitude parameters.
- The Ad Server UI does not restrict access based on these settings as it is a managed
  service context, but Kevel Console uses this to restrict access accordingly.
- CampaignId column is optional when uploading the CSV to a specific Campaign.
- It can take up to 5 minutes for a new campaign, flight, or creative to start serving.
- A blank ad means that Kevel has chosen not to fill an ad request with a creative,
  because there are no active creatives eligible to serve to that placement.
- Creative template string fields should not be larger than 20,000.
- If all the fields in a creative template are hidden, you will see the message 'There
  are no fields to complete.' in the UI when you create or edit an ad using that template.
- This is a Beta feature.
- Currently we display 10 results per page by default, but you can choose between
  10, 20, 50, 100 records per page.
- To get request metrics in your reports, you must generate your report in the default
  timezone (UTC)
- Impression data loads faster than request data. If you run a report for the current
  day, you may see impression data without request data.
- When the feature is enabled for your account, you can view click bucketed reports
  by running a Custom Report in the Kevel UI or by making a request in the Reporting
  API.
- Custom data shipping properties are not retrievable via reporting.
- Properties are limited by the max length of the URL.
- Custom domain - or link white-labeling - requires the Business or Enterprise Plans.
- If a CNAME record for a URL prefix already exists, you must delete that record before
  proceeding.
- Keep in mind it may take up to 24 hours for the new CNAME to be propagated.
- Kevel does not offer CNAME for the creative/image hosting static subdomains.
- Video assets make Kevel your one-stop shop for video-based ads
- For best results, Kevel hosted video files should be high resolution (HD, 720p+)
- Uses HTTPS protocol for creative previews.
- There is a limit of 1 million rows in reports.
- Each account is limited to 100 scheduled reports.
- If no ad is selected, then a Selection log will not be created.
- Fields with null values may be omitted from the log.
- Data Shipping requires the Business or Enterprise plan.
- The actual bucket name must have the prefix 'kevel-dataship-'
- The standard logs stored within the Data Shipping logs include Impression Logs.
- Tracking ROAS (Return on Advertising Spend) and GMV (Gross Merchandise Value) is
  crucial for e-commerce and retail media use cases, where advertisers aim to directly
  influence conversions, purchases, or transactions.
- Tracking ROAS and GMV provides valuable insights into the effectiveness and profitability
  of advertising efforts, regardless of the specific use case.
- Kevel will use commercially reasonable efforts to minimize the amount of scheduled
  maintenance downtime, each Service Month, Kevel will be allowed a maximum of 2 hours
  of scheduled maintenance per service.
- Response and Resolution times contingent on Customer being responsive to Kevel during
  these Response and Resolution timeframes.
- Creative templates are required for this
- This example is designed to work with our ados Javascript ad code.
- This will track impressions, but not clicks. Clicks are recorded by the header bidding
  provider.
- Kevel will be PrivacyShield certified for EU traffic.
- All data is stored and transmitted via encryption.
- You can give a name to a custom AdTypes only if you create it via the API
- You cannot make two AdTypes that share the same dimension
- If you'd like to update the Name of an AdType, reach out to Support
- Kevel's sub-processors are listed below. We will only pass to them the minimum data
  needed for the services to work.
- UserDB cuts down on data sent in the ad request, making it useful for app developers.
- Currently, you cannot retrieve a list of all ContentDB entries in your network.
- User permissions may be managed via the Kevel user interface only.
- Sessions expire after the earlier of 6 hours of inactivity or 12 hours since last
  login.
- Kevel supports daily updates of Catalog contents; however, more frequent updates
  can be considered on a case-by-case basis depending on the use case and the size
  of the Catalog.
- Kevel does not support IdP-initiated sign on.
- Users accessing Kevel for the first time will be granted Read-only permissions.
- Accepts purchase events for up to 15 days after the lookback window has closed.
- The Destination will require an API Key and your Network ID to be configured when
  being installed.
- Your Network ID can be found via the Information menu next to your username in the
  Kevel App.
- In order to move forward here, you will need to have your Site already created in
  Kevel.
- Requests with gdprConsentRequired set to true treat the user as requiring GDPR consent.
- Multi-winner placements are available for ads in both auction and lottery priorities.
- Multiple winner placements can return ads from multiple priorities in the response.
- It is highly recommended that all publishers using RTB adopt the SupplyChain object.
- Ensure that you have enabled Ads.txt or Sellers.json if you are representing 3P
  inventory.
- Overrides only change the returned value of eCPM etc. in the ad response. They do
  not change the values in the overridden objects themselves.
- All reports generated through the UI or API have a lifetime of 10 days.
- 'Caution: All StartDateISO and EndDateISO requests should use ISO 8601 midnight
  GMT.'
- All times are in GMT
- If you schedule a fixed date report, you must use a custom start and end date. ToDate
  time frames are not supported.
- 'You must pass credentials: ''include'' on the Fetch options in the request to enable
  cross-domain requests.'
- If the report exceeds this threshold, you will see a Report Too Large error message.
- Report Runs are persisted for 10 days, after which they are deleted.
- If no query parameters are included, the endpoint returns the lifetime of data for
  the Id.
- If days and start/end are both present in a request (not recommended) start/end
  will take precedence.
- If `days` and `start`/`end` are both present in a request (not recommended) `start`/`end`
  will take precedence.
- If `days` and `start`/`end` are both present in a request (not recommended), `start`/`end`
  will take precedence.
- When creating an Advertiser, always set IsDeleted = False and IsActive = True
- Once you set IsDeleted on an advertiser object to true, you cannot set it to false
  again.
- The maximum number of entities that can be created via this endpoint is 10.
- You are required to pass either the days parameter or the start and end parameters.
- Unlike other real-time reporting endpoints, the /network endpoint will NOT return
  data without query parameters.
- You must specify a time period within the past 90 days.
- There is no lifetime network reporting data.
- If days and start/end are both present in a request (not recommended), start/end
  will take precedence.
- Set the isDeleted boolean value to true to delete an advertiser
- Instead of returning flight objects, the Flights parameter will return with a value
  of null.
- Remember to set the isDeleted boolean value to true.
- This endpoint accepts a string key/value pair as its payload instead of a JSON object.
- If nothing is found, items is blank.
- Specifying both filter and either isActive or isArchived generates an error.
- To delete a Flight, use the Update Flight endpoint and set `isDeleted` to `true`.
- To unset or clear an attribute, set its value to NULL.
- Static text links no longer expire and will continue to be live.
- The requested ad must be fully distributed to Kevel's ad-delivery systems for a
  URL to be generated.
- For more information on Zones, please refer to the Zones technical documentation.
- IsSecondPricing can only be set to true for an Auction-type SelectionMethod of 1
  or 3.
- If FloorPrice is not set, and IsSecondPricing is false, it will be set to null.
  If FloorPrice is not set, and IsSecondPricing is true, it will be set to $0.01.
- Priorities may only be set on creation, and this field cannot be updated once set.
- All other parameters, beyond SelectionAlgorithm under Create Priority, can be updated.
- Make sure to include weight or name, as those will be replaced with null otherwise.
- SelectionAlgorithm cannot be updated after the priority is created.
- The List Zones endpoint will not return zones associated with deleted sites.
- Deleting a priority causes all ads in the priority to stop serving.
- All string keys and values are case sensitive.
- By default, all new sites are mapped to the All Sites channel.
- There is an additional pay-per-use cost for this functionality.
- For the explorer, use the assigned API Key.
- Use the 'Channel ID and Ad Type ID'.
- Forecasts for existing ads can take several minutes to complete.
- Use this feature with caution. Due to its ability to reshape the entire predicted
  Ad request traffic, it can impact quality and performance of forecasts.
- Always test new modifiers before storing them via API by attaching them to individual
  forecasts to see the results.
- Filtering is a simple match of the string. Wildcards, regular expressions etc. are
  not available.
- By default, any site created is AUTOMATICALLY added to the default 'All Sites' channel.
- Because many clients have no need for two channels, it is possible the Channel Site
  Maps API will never be used.
- The Kevel Forecast API is asynchronous.
- Forecast requests require an end date and, optionally, a start date as parameters.
- Deliverability forecasts can take several minutes to complete.
- For added security, Kevel has the option to require API Key authentication for the
  UserDB API.
- 'You can ignore the following fields: dirtyCookies, cookieMonster, siteViewtimes,
  and pendingConversion.'
- Make sure to send `Name` when updating a Login via the API. Leaving this blank will
  set it to `null`.
- The 'Password' field in the response is a legacy field that is no longer in use.
  The value is always returned as an empty string.
- In order for `CanAccessStudio` = `true`, `AccessLevel` must = `admn` or `edit`.
- When editing a user, if you set `AccessLevel` to `read` and specify `CanAccessStudio`
  = `true`, then the call will fail.
- When editing a user, if you set `AccessLevel` to `read` and do not specify `CanAccessStudio`,
  then `CanAccessStudio` will be set to `false`, even if it was previously set to
  `true`.
- To unset or clear an attribute, set its value to `NULL`.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Requests lacking the header, or requests with an invalid API
  Key for the network, will be rejected.'
- '401 Unauthorized: Requests lacking the header or with an invalid API Key will be
  rejected.'
- 'Report Too Large: The report you generated is too large. Please try removing some
  dimensions, shortening the date range, or reducing the date group granularity and
  generating the report again.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check API key and permissions'
- '404 Not Found: Verify endpoint and resource ID'
- '401 Unauthorized: Recheck API key'
- '500: ''Server Error'' - Report queuing is unavailable. Check the status page for
  details.'
- '403: ''Invalid API key'' - No API key in request, or the key does not belong to
  an account.'
- '400: ''Missing required parameter: criteria'' - No criteria object in the request.'
- '400 Bad Request: Check required parameters and format.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Retry the request.'
- '200: Purchase attributed to an Ad; conversion recorded'
- '204: Purchase not attributable; addition details in kevel-debug response header'
- '400: Invalid request; addition details in response body'
- Out of n% placements on the request, none were valid
- Keywords must be an array or string
- invalid JSON
- Request received with no placements defined
- No sites found
- Count must be an integer in the interval [1, 20]
- Event multiplier must be an integer in the interval [1, 100000000]
- 'Report Too Large: "The report you generated is too large. Please try removing some
  dimensions, shortening the date range, or reducing the date group granularity and
  generating the report again."'
- '400: Does not exist: Requesting an `id` that doesn''t exist using a GET endpoint'
- '400: Cannot request data more than 90 days old: Requesting a custom time period
  outside of past 90 day range'
- '400: Start date must be before end date: Requesting a start date that''s later
  than the end date'
- '{"message":"This advertiser is deleted."}'
- '404: This ad is not active.'
- Value at '["Fields" 0]' does not contain required key(s) 'Type', 'Variable', and
  'Name'.
- The proposed changes would result in an invalid creative template
- code: DATETRF
  message: Forecast considering traffic modifiers as they were defined on 2025-03-11T05:00:00
- code: MODTRF
  message: 'Traffic modified by: us-traffic-modifier, minnesota-traffic-modifier'
  causes:
  - $location.countryCode = "US"
  - $location.region = "MN"
- code: OVRTRF
  message: 'Modifiers overlap at: us-traffic-modifier, minnesota-traffic-modifier'
  causes:
  - '{$location.countryCode = "US", $location.region = "MN"}'
- There is already an account associated with this email.
- '204: Purchase not attributable; additional details in kevel-debug response header'
- '400: Invalid request; additional details in response body'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  base_url: https://api.relay.bid/m/v1
  headers:
    Accept: application/json
    Content-Type: application/json
    Authorization: Bearer {{ dlt.secrets['api_key'] }}
    User-Agent: User-Agent header must be passed for accurate device reporting
    accept: application/json
    content-type: application/json
    Engine: '0'
  paginator:
    type: none
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 100
  resources:
  - name: ad_type
    endpoint:
      path: /channel//adtypes
      method: POST
source_metadata: null
