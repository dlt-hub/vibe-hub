resources:
- name: dataset
  endpoint:
    path: /v1/dataset
    method: GET
    data_selector: data
    params: {}
- name: upload_dataset
  endpoint:
    path: /upload
    method: POST
- name: create_dataset
  endpoint:
    path: ''
    method: POST
- name: update_dataset
  endpoint:
    path: /<dataset-id>
    method: PATCH
- name: delete_dataset
  endpoint:
    path: /<dataset-id>
    method: DELETE
- name: clone_dataset
  endpoint:
    path: /<dataset-id>/clone
    method: POST
- name: concat_data
  endpoint:
    path: /<dataset_id>/concat
    method: POST
- name: overwrite_data
  endpoint:
    path: /<dataset_id>/data-overwrite
    method: POST
- name: delete_specific_data
  endpoint:
    path: /<dataset_id>/data/:data_id
    method: DELETE
- name: sync_dataset
  endpoint:
    path: ''
    method: POST
- name: get_layers
  endpoint:
    path: /layer
    method: GET
- name: get_layer
  endpoint:
    path: /layer/:layer_id
    method: GET
- name: create_layer
  endpoint:
    path: /<dataset_id>/layer
    method: POST
- name: update_layer
  endpoint:
    path: /<dataset_id>/layer/<layer_id>
    method: PATCH
- name: delete_layer
  endpoint:
    path: /<dataset_id>/layer/<layer_id>
    method: DELETE
- name: query
  endpoint:
    path: /v1/query/{dataset-id}
    method: POST
    data_selector: data
- name: stats
  endpoint:
    path: /v1/stats/{dataset-id}
    method: POST
    data_selector: data
- name: fields
  endpoint:
    path: /v1/fields/{dataset-id}
    method: GET
    data_selector: fields
- name: metadata
  endpoint:
    path: /v1/dataset/{dataset-id}/metadata
    method: GET
    data_selector: data
- name: geostore
  endpoint:
    path: /geostore
    method: POST
    data_selector: data
    params: {}
- name: find_by_ids
  endpoint:
    path: /dataset/metadata/find-by-ids
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /v1/dataset
    method: GET
    data_selector: data
    params: {}
- name: query
  endpoint:
    path: /v1/query/{query-id}
    method: POST
    data_selector: data
- name: stats
  endpoint:
    path: /v1/stats/{stats-id}
    method: POST
    data_selector: data
- name: fields
  endpoint:
    path: /v1/fields/{dataset-id}
    method: GET
    data_selector: fields
- name: metadata
  endpoint:
    path: /v1/dataset/{dataset-id}/metadata
    method: GET
    data_selector: data
- name: geostore
  endpoint:
    path: /v1/geostore/<geostoreId>
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: confirm_subscription
  endpoint:
    path: /v1/subscriptions/:id/confirm
    method: GET
    data_selector: data
    params: {}
- name: user_subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: resend_confirmation
  endpoint:
    path: /v1/subscriptions/:id/send_confirmation
    method: PATCH
    data_selector: data
    params: {}
- name: modify_subscription
  endpoint:
    path: /v1/subscriptions/:id
    method: PATCH
    data_selector: data
    params: {}
- name: unsubscribe
  endpoint:
    path: /v1/subscriptions/:id/unsubscribe
    method: GET
    data_selector: data
    params: {}
- name: delete_subscription
  endpoint:
    path: /v1/subscriptions/:id/unsubscribe
    method: DELETE
    data_selector: data
    params: {}
- name: geostore
  endpoint:
    path: /geostore
    method: POST
    data_selector: data
    params: {}
- name: find_by_ids
  endpoint:
    path: /dataset/metadata/find-by-ids
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: geostore
  endpoint:
    path: /v1/geostore/<geostoreId>
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
- name: create_subscription
  endpoint:
    path: /v1/subscriptions
    method: POST
    data_selector: data
- name: confirm_subscription
  endpoint:
    path: /v1/subscriptions/:id/confirm
    method: GET
    data_selector: data
- name: resend_confirmation
  endpoint:
    path: /v1/subscriptions/:id/send_confirmation
    method: PATCH
    data_selector: data
- name: modify_subscription
  endpoint:
    path: /v1/subscriptions/:id
    method: PATCH
    data_selector: data
- name: unsubscribe
  endpoint:
    path: /v1/subscriptions/:id/unsubscribe
    method: GET
    data_selector: data
- name: delete_subscription
  endpoint:
    path: /v1/subscriptions/:id/unsubscribe
    method: DELETE
    data_selector: data
notes:
- Uses JWT Tokens for authentication.
- Connector URLs must be accessible and non-compressed.
- This is an authenticated endpoint!
- WCPS queries require unique dataset ids and are limited to supported formats.
- All endpoint of geostore don’t need that you are authenticated.
errors:
- '401 Unauthorized: Recheck token validity or scopes.'
- '401 Unauthorized: Recheck authentication and permissions'
- '403 Forbidden: Ensure you have access to the requested resource'
- '400 Bad Request: Check request formatting and required fields'
- '400: Bad Request – Your request is incomplete or contains errors'
- '401: Unauthorized – Your API key is wrong'
- '403: Forbidden – The kitten requested is hidden for administrators only'
- '404: Not Found – The specified kitten could not be found'
- '405: Method Not Allowed – You tried to access a kitten with an invalid method'
- '406: Not Acceptable – You requested a format that isn’t json'
- '410: Gone – The kitten requested has been removed from our servers'
- '429: Too Many Requests – You’re requesting too many kittens! Slow down!'
- '500: Internal Server Error – We had a problem with our server. Try again later.'
- '503: Service Unavailable – We’re temporarially offline for maintanance. Please
  try again later.'
- '403: Forbidden – The requested resource is hidden for administrators only'
- '404: Not Found – The specified resource could not be found'
- '405: Method Not Allowed – You tried to access a resource with an invalid method'
- '410: Gone – The requested resource has been removed from our servers'
- '429: Too Many Requests – You’re requesting too many resources! Slow down!'
- '503: Service Unavailable – We’re temporarily offline for maintenance. Please try
  again later.'
auth_info:
  mentioned_objects:
  - OauthToken
client:
  base_url: https://production-api.globalforestwatch.org
  auth:
    type: oauth2
    flow: jwt
    location: header
    header_name: Authorization
source_metadata: null
