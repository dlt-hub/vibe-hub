resources:
- name: damon_addr_range
  endpoint:
    path: /damon/addr/range
    method: GET
    data_selector: address_ranges
    params: {}
- name: damon_size_range
  endpoint:
    path: /damon/size/range
    method: GET
    data_selector: size_ranges
    params: {}
- name: damon_region
  endpoint:
    path: /damon/region
    method: GET
    data_selector: regions
    params: {}
- name: damon_target
  endpoint:
    path: /damon/target
    method: GET
    data_selector: targets
    params: {}
- name: damos_action
  endpoint:
    path: /damos/action
    method: GET
    data_selector: actions
    params: {}
- name: damos_quota_goal
  endpoint:
    path: /damos/quota/goal
    method: GET
    data_selector: quota_goals
    params: {}
- name: damos_quota
  endpoint:
    path: /damos/quota
    method: GET
    data_selector: quotas
    params: {}
- name: damos_watermarks
  endpoint:
    path: /damos/watermarks
    method: GET
    data_selector: watermarks
    params: {}
- name: damos_stat
  endpoint:
    path: /damos/stat
    method: GET
    data_selector: stats
    params: {}
- name: patches
  endpoint:
    path: /Documentation/process/submitting-patches.rst
    method: GET
    data_selector: patches
- name: Documentation
  endpoint:
    path: /Documentation
    method: GET
    data_selector: files
    params: {}
- name: Bug Reporting
  endpoint:
    path: /Reporting/issues
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: intel_plane_destroy
  endpoint:
    path: gpu/i915.html#c.intel_plane_destroy
    method: GET
    data_selector: records
    params: {}
- name: intel_plane_destroy_state
  endpoint:
    path: gpu/i915.html#c.intel_plane_destroy_state
    method: GET
    data_selector: records
    params: {}
- name: intel_plane_duplicate_state
  endpoint:
    path: gpu/i915.html#c.intel_plane_duplicate_state
    method: GET
    data_selector: records
    params: {}
- name: intel_prepare_plane_fb
  endpoint:
    path: gpu/i915.html#c.intel_prepare_plane_fb
    method: GET
    data_selector: records
    params: {}
- name: intel_psr_dc5_dc6_wa_init
  endpoint:
    path: gpu/i915.html#c.intel_psr_dc5_dc6_wa_init
    method: GET
    data_selector: records
    params: {}
- name: intel_psr_disable
  endpoint:
    path: gpu/i915.html#c.intel_psr_disable
    method: GET
    data_selector: records
    params: {}
- name: create_packet
  endpoint:
    path: mipi_dsi_create_packet
    method: GET
    data_selector: records
- name: enter_sleep_mode
  endpoint:
    path: mipi_dsi_dcs_enter_sleep_mode
    method: GET
    data_selector: records
- name: exit_sleep_mode
  endpoint:
    path: mipi_dsi_dcs_exit_sleep_mode
    method: GET
    data_selector: records
- name: get_display_brightness
  endpoint:
    path: mipi_dsi_dcs_get_display_brightness
    method: GET
    data_selector: records
- name: get_pixel_format
  endpoint:
    path: mipi_dsi_dcs_get_pixel_format
    method: GET
    data_selector: records
- name: get_power_mode
  endpoint:
    path: mipi_dsi_dcs_get_power_mode
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: n_tty_close
  endpoint:
    path: /n_tty_close
    method: GET
- name: n_tty_flush_buffer
  endpoint:
    path: /n_tty_flush_buffer
    method: GET
- name: n_tty_inherit_ops
  endpoint:
    path: /n_tty_inherit_ops
    method: GET
- name: n_tty_kick_worker
  endpoint:
    path: /n_tty_kick_worker
    method: GET
- name: n_tty_open
  endpoint:
    path: /n_tty_open
    method: GET
- name: n_tty_poll
  endpoint:
    path: /n_tty_poll
    method: GET
- name: n_tty_read
  endpoint:
    path: /n_tty_read
    method: GET
- name: n_tty_receive_break
  endpoint:
    path: /n_tty_receive_break
    method: GET
- name: n_tty_receive_buf_common
  endpoint:
    path: /n_tty_receive_buf_common
    method: GET
- name: n_tty_receive_char
  endpoint:
    path: /n_tty_receive_char
    method: GET
- name: n_tty_receive_char_flow_ctrl
  endpoint:
    path: /n_tty_receive_char_flow_ctrl
    method: GET
- name: n_tty_receive_overrun
  endpoint:
    path: /n_tty_receive_overrun
    method: GET
- name: n_tty_receive_parity_error
  endpoint:
    path: /n_tty_receive_parity_error
    method: GET
- name: n_tty_set_termios
  endpoint:
    path: /n_tty_set_termios
    method: GET
- name: n_tty_write
  endpoint:
    path: /n_tty_write
    method: GET
- name: n_tty_write_wakeup
  endpoint:
    path: /n_tty_write_wakeup
    method: GET
- name: hibernation_test_modes
  endpoint:
    path: /sys/power/pm_test
    method: GET
    data_selector: test_modes
- name: suspend_stats
  endpoint:
    path: /sys/kernel/debug/suspend_stats
    method: GET
    data_selector: stats
- name: performance_domains
  endpoint:
    path: /energy_model/performance_domains
    method: GET
    data_selector: domains
- name: em_perf_state
  endpoint:
    path: /api/em_perf_state
    method: GET
    data_selector: performance_states
    params: {}
- name: em_perf_domain
  endpoint:
    path: /api/em_perf_domain
    method: GET
    data_selector: performance_domains
    params: {}
- name: freezing_of_tasks
  endpoint:
    path: /power/freezing-of-tasks
    method: GET
    data_selector: content
    params: {}
- name: initial_opp_registration
  endpoint:
    path: /drivers/opp/
    method: POST
    data_selector: default_OPPs
    params: {}
- name: opp_search_functions
  endpoint:
    path: /opp/search/
    method: GET
    data_selector: search_results
    params: {}
- name: opp_availability_control
  endpoint:
    path: /opp/control/
    method: PATCH
    data_selector: availability_status
    params: {}
- name: opp_data_retrieval
  endpoint:
    path: /opp/data/
    method: GET
    data_selector: opp_data
    params: {}
- name: device_initialization
  endpoint:
    path: /device/initialization
    method: GET
    data_selector: device_init_data
- name: runtime_device_power_management
  endpoint:
    path: /device/runtime_power_management
    method: GET
    data_selector: runtime_pm_data
- name: system_power_transitions
  endpoint:
    path: /device/system_power_transitions
    method: GET
    data_selector: system_power_transitions_data
- name: cpu_latency_qos
  endpoint:
    path: /dev/cpu_dma_latency
    method: GET
    data_selector: requests
    params: {}
- name: dev_pm_ops
  endpoint:
    path: /driver-api/pm/types.html#c.dev_pm_ops
    method: GET
    data_selector: callbacks
    params: {}
- name: dev_pm_info
  endpoint:
    path: /driver-api/infrastructure.html#c.device
    method: GET
    data_selector: fields
    params: {}
- name: suspend_interface
  endpoint:
    path: /power/userland-swsusp
    method: GET
    data_selector: ioctl_commands
- name: power_cap
  endpoint:
    path: /sys/class/power_cap
    method: GET
    data_selector: powercap
    params: {}
- name: dtpm
  endpoint:
    path: /power/powercap/dtpm
    method: GET
    data_selector: nodes
- name: regulator1
  endpoint:
    path: /regulator1
    method: GET
    data_selector: data
    params: {}
- name: regulator2
  endpoint:
    path: /regulator2
    method: GET
    data_selector: data
    params: {}
- name: regulator_register
  endpoint:
    path: /regulator/register
    method: POST
    data_selector: struct regulator_dev
    params: {}
- name: regulator_unregister
  endpoint:
    path: /regulator/unregister
    method: POST
    data_selector: void
    params: {}
- name: regulator_notifier_call_chain
  endpoint:
    path: /regulator/notifier
    method: POST
    data_selector: int
    params: {}
- name: cgroup_info
  endpoint:
    path: /proc/$PID/cgroup
    method: GET
    data_selector: 0::$PATH
    params: {}
- name: cgroup_events
  endpoint:
    path: /cgroup.events
    method: GET
    data_selector: populated
    params: {}
- name: cgroup_controllers
  endpoint:
    path: /cgroup.controllers
    method: GET
    data_selector: available_controllers
    params: {}
- name: delegation
  endpoint:
    path: /delegation
    method: GET
    data_selector: delegation_data
- name: resource_distribution_models
  endpoint:
    path: /resource-distribution-models
    method: GET
    data_selector: resource_distribution_data
- name: interface_files
  endpoint:
    path: /interface-files
    method: GET
    data_selector: interface_files_data
- name: memory_current
  endpoint:
    path: memory.current
    method: GET
    data_selector: value
- name: memory_min
  endpoint:
    path: memory.min
    method: GET
    data_selector: value
- name: memory_low
  endpoint:
    path: memory.low
    method: GET
    data_selector: value
- name: memory_high
  endpoint:
    path: memory.high
    method: GET
    data_selector: value
- name: memory_max
  endpoint:
    path: memory.max
    method: GET
    data_selector: value
- name: memory_reclaim
  endpoint:
    path: memory.reclaim
    method: POST
    data_selector: acknowledgment
- name: memory.peak
  endpoint:
    path: memory.peak
    method: GET
- name: memory.oom.group
  endpoint:
    path: memory.oom.group
    method: GET
- name: memory.events
  endpoint:
    path: memory.events
    method: GET
- name: memory.events.local
  endpoint:
    path: memory.events.local
    method: GET
- name: memory.stat
  endpoint:
    path: memory.stat
    method: GET
- name: memory.numa_stat
  endpoint:
    path: memory.numa_stat
    method: GET
- name: memory.swap.current
  endpoint:
    path: memory.swap.current
    method: GET
- name: memory.swap.high
  endpoint:
    path: memory.swap.high
    method: GET
- name: memory.swap.peak
  endpoint:
    path: memory.swap.peak
    method: GET
- name: memory.swap.max
  endpoint:
    path: memory.swap.max
    method: GET
- name: memory.swap.events
  endpoint:
    path: memory.swap.events
    method: GET
- name: memory.zswap.current
  endpoint:
    path: memory.zswap.current
    method: GET
- name: memory.zswap.max
  endpoint:
    path: memory.zswap.max
    method: GET
- name: memory.zswap.writeback
  endpoint:
    path: memory.zswap.writeback
    method: GET
- name: memory.pressure
  endpoint:
    path: memory.pressure
    method: GET
- name: cgroup.type
  endpoint:
    path: /cgroup.type
    method: GET
- name: cgroup.procs
  endpoint:
    path: /cgroup.procs
    method: GET
- name: cgroup.threads
  endpoint:
    path: /cgroup.threads
    method: GET
- name: cgroup.controllers
  endpoint:
    path: /cgroup.controllers
    method: GET
- name: cgroup.subtree_control
  endpoint:
    path: /cgroup.subtree_control
    method: GET
- name: cgroup.events
  endpoint:
    path: /cgroup.events
    method: GET
- name: cgroup.max.descendants
  endpoint:
    path: /cgroup.max.descendants
    method: GET
- name: cgroup.max.depth
  endpoint:
    path: /cgroup.max.depth
    method: GET
- name: cgroup.stat
  endpoint:
    path: /cgroup.stat
    method: GET
- name: cgroup.freeze
  endpoint:
    path: /cgroup.freeze
    method: GET
- name: cgroup.kill
  endpoint:
    path: /cgroup.kill
    method: POST
- name: cgroup.pressure
  endpoint:
    path: /cgroup.pressure
    method: GET
- name: memory.current
  endpoint:
    path: /memory.current
    method: GET
    data_selector: value
- name: memory.min
  endpoint:
    path: /memory.min
    method: GET
    data_selector: value
- name: memory.low
  endpoint:
    path: /memory.low
    method: GET
    data_selector: value
- name: memory.high
  endpoint:
    path: /memory.high
    method: GET
    data_selector: value
- name: memory.max
  endpoint:
    path: /memory.max
    method: GET
    data_selector: value
- name: memory.reclaim
  endpoint:
    path: /memory.reclaim
    method: POST
    data_selector: status
- name: dmem
  endpoint:
    path: /dmem
    method: GET
    data_selector: current configured resource limit
    params: {}
- name: hugetlb
  endpoint:
    path: /hugetlb
    method: GET
    data_selector: current usage
    params: {}
- name: misc
  endpoint:
    path: /misc
    method: GET
    data_selector: current usage
    params: {}
- name: pid
  endpoint:
    path: /cgroup/pid
    method: GET
    data_selector: pids
    params: {}
- name: cpuset
  endpoint:
    path: /cgroup/cpuset
    method: GET
    data_selector: cpusets
    params: {}
- name: rdma
  endpoint:
    path: /cgroup/rdma
    method: GET
    data_selector: rdmas
    params: {}
- name: memory.current
  endpoint:
    path: /memory.current
    method: GET
    data_selector: value
- name: memory.min
  endpoint:
    path: /memory.min
    method: GET
    data_selector: value
- name: memory.low
  endpoint:
    path: /memory.low
    method: GET
    data_selector: value
- name: memory.high
  endpoint:
    path: /memory.high
    method: GET
    data_selector: value
- name: memory.max
  endpoint:
    path: /memory.max
    method: GET
    data_selector: value
- name: memory.reclaim
  endpoint:
    path: /memory.reclaim
    method: POST
    data_selector: status
- name: memory.peak
  endpoint:
    path: /memory/peak
    method: GET
- name: memory.oom.group
  endpoint:
    path: /memory/oom.group
    method: GET
- name: memory.events
  endpoint:
    path: /memory/events
    method: GET
- name: memory.stat
  endpoint:
    path: /memory/stat
    method: GET
- name: memory.swap.current
  endpoint:
    path: /memory/swap/current
    method: GET
- name: memory.swap.high
  endpoint:
    path: /memory/swap/high
    method: GET
- name: memory.swap.peak
  endpoint:
    path: /memory/swap/peak
    method: GET
- name: memory.swap.max
  endpoint:
    path: /memory/swap/max
    method: GET
- name: memory.zswap.current
  endpoint:
    path: /memory/zswap/current
    method: GET
- name: memory.zswap.max
  endpoint:
    path: /memory/zswap/max
    method: GET
- name: memory.zswap.writeback
  endpoint:
    path: /memory/zswap/writeback
    method: GET
- name: io.stat
  endpoint:
    path: /io/stat
    method: GET
- name: io.cost.qos
  endpoint:
    path: /io/cost.qos
    method: GET
- name: io.cost.model
  endpoint:
    path: /io/cost.model
    method: GET
- name: io.weight
  endpoint:
    path: /io/weight
    method: GET
- name: io.max
  endpoint:
    path: /io/max
    method: GET
- name: io.pressure
  endpoint:
    path: /io/pressure
    method: GET
- name: pids.max
  endpoint:
    path: /pids.max
    method: GET
- name: pids.current
  endpoint:
    path: /pids.current
    method: GET
- name: pids.peak
  endpoint:
    path: /pids.peak
    method: GET
- name: pids.events
  endpoint:
    path: /pids.events
    method: GET
- name: pids.events.local
  endpoint:
    path: /pids.events.local
    method: GET
- name: memory_peak
  endpoint:
    path: memory.peak
    method: GET
- name: memory_oom_group
  endpoint:
    path: memory.oom.group
    method: GET
- name: memory_events
  endpoint:
    path: memory.events
    method: GET
- name: memory_stat
  endpoint:
    path: memory.stat
    method: GET
- name: memory_numa_stat
  endpoint:
    path: memory.numa_stat
    method: GET
- name: memory_swap_current
  endpoint:
    path: memory.swap.current
    method: GET
- name: memory_swap_high
  endpoint:
    path: memory.swap.high
    method: GET
- name: memory_swap_peak
  endpoint:
    path: memory.swap.peak
    method: GET
- name: memory_swap_max
  endpoint:
    path: memory.swap.max
    method: GET
- name: memory_swap_events
  endpoint:
    path: memory.swap.events
    method: GET
- name: memory_zswap_current
  endpoint:
    path: memory.zswap.current
    method: GET
- name: memory_zswap_max
  endpoint:
    path: memory.zswap.max
    method: GET
- name: memory_zswap_writeback
  endpoint:
    path: memory.zswap.writeback
    method: GET
- name: memory_pressure
  endpoint:
    path: memory.pressure
    method: GET
- name: cgroup.type
  endpoint:
    path: cgroup.type
    method: GET
    data_selector: value
- name: cgroup.procs
  endpoint:
    path: cgroup.procs
    method: GET
    data_selector: PIDs
- name: cgroup.threads
  endpoint:
    path: cgroup.threads
    method: GET
    data_selector: TIDs
- name: cgroup.controllers
  endpoint:
    path: cgroup.controllers
    method: GET
    data_selector: controllers
- name: cgroup.subtree_control
  endpoint:
    path: cgroup.subtree_control
    method: GET
    data_selector: enabled_controllers
- name: cgroup.events
  endpoint:
    path: cgroup.events
    method: GET
    data_selector: events
- name: cgroup.max.descendants
  endpoint:
    path: cgroup.max.descendants
    method: GET
    data_selector: max
- name: cgroup.max.depth
  endpoint:
    path: cgroup.max.depth
    method: GET
    data_selector: max
- name: cgroup.stat
  endpoint:
    path: cgroup.stat
    method: GET
    data_selector: stats
- name: cgroup.freeze
  endpoint:
    path: cgroup.freeze
    method: GET
    data_selector: frozen_status
- name: cgroup.kill
  endpoint:
    path: cgroup.kill
    method: POST
    data_selector: kill
- name: cgroup.pressure
  endpoint:
    path: cgroup.pressure
    method: GET
    data_selector: pressure_info
- name: cpu.stat
  endpoint:
    path: cpu.stat
    method: GET
    data_selector: cpu_stats
- name: cpu.weight
  endpoint:
    path: cpu.weight
    method: GET
    data_selector: weight
- name: cpu.weight.nice
  endpoint:
    path: cpu.weight.nice
    method: GET
    data_selector: nice_weight
- name: cpu.max
  endpoint:
    path: cpu.max
    method: GET
    data_selector: max_limit
- name: cpu.max.burst
  endpoint:
    path: cpu.max.burst
    method: GET
    data_selector: burst_value
- name: cpu.pressure
  endpoint:
    path: cpu.pressure
    method: GET
    data_selector: cpu_pressure_info
- name: cpu.uclamp.min
  endpoint:
    path: cpu.uclamp.min
    method: GET
    data_selector: min_utilization
- name: cpu.uclamp.max
  endpoint:
    path: cpu.uclamp.max
    method: GET
    data_selector: max_utilization
- name: cpu.idle
  endpoint:
    path: cpu.idle
    method: GET
    data_selector: idle_status
- name: misc_capacity
  endpoint:
    path: /misc.capacity
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: misc_current
  endpoint:
    path: /misc.current
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: misc_peak
  endpoint:
    path: /misc.peak
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: misc_max
  endpoint:
    path: /misc.max
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: misc_events
  endpoint:
    path: /misc.events
    method: GET
    data_selector: max
    params: {}
- name: misc_events_local
  endpoint:
    path: /misc.events.local
    method: GET
    data_selector: local_fields
    params: {}
- name: cpuset
  endpoint:
    path: /cpuset
    method: GET
    data_selector: cpuset.cpus
    params: {}
- name: device
  endpoint:
    path: /device
    method: GET
    data_selector: device
    params: {}
- name: rdma
  endpoint:
    path: /rdma
    method: GET
    data_selector: rdma.current
    params: {}
- name: dmem
  endpoint:
    path: /dmem
    method: GET
    data_selector: dmem.current
    params: {}
- name: hugetlb
  endpoint:
    path: /hugetlb
    method: GET
    data_selector: hugetlb.current
    params: {}
- name: misc
  endpoint:
    path: /misc
    method: GET
    data_selector: misc
    params: {}
- name: current_memory
  endpoint:
    path: /memory.current
    method: GET
- name: min_memory
  endpoint:
    path: /memory.min
    method: GET
- name: low_memory
  endpoint:
    path: /memory.low
    method: GET
- name: high_memory
  endpoint:
    path: /memory.high
    method: GET
- name: max_memory
  endpoint:
    path: /memory.max
    method: GET
- name: reclaim_memory
  endpoint:
    path: /memory.reclaim
    method: POST
- name: cgroup.type
  endpoint:
    path: /cgroup.type
    method: GET
    data_selector: current_cgroup_type
- name: cgroup.procs
  endpoint:
    path: /cgroup.procs
    method: GET
    data_selector: process_ids
- name: cgroup.threads
  endpoint:
    path: /cgroup.threads
    method: GET
    data_selector: thread_ids
- name: cgroup.controllers
  endpoint:
    path: /cgroup.controllers
    method: GET
    data_selector: available_controllers
- name: cgroup.subtree_control
  endpoint:
    path: /cgroup.subtree_control
    method: GET
    data_selector: enabled_controllers
- name: cgroup.events
  endpoint:
    path: /cgroup.events
    method: GET
    data_selector: event_entries
- name: cgroup.max.descendants
  endpoint:
    path: /cgroup.max.descendants
    method: GET
    data_selector: max_descendants
- name: cgroup.max.depth
  endpoint:
    path: /cgroup.max.depth
    method: GET
    data_selector: max_depth
- name: cgroup.stat
  endpoint:
    path: /cgroup.stat
    method: GET
    data_selector: stat_entries
- name: cgroup.freeze
  endpoint:
    path: /cgroup.freeze
    method: GET
    data_selector: freeze_state
- name: cgroup.kill
  endpoint:
    path: /cgroup.kill
    method: POST
    data_selector: kill_cgroup
- name: cgroup.pressure
  endpoint:
    path: /cgroup.pressure
    method: GET
    data_selector: pressure_info
- name: capacity
  endpoint:
    path: /misc/capacity
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: current
  endpoint:
    path: /misc/current
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: peak
  endpoint:
    path: /misc/peak
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: max
  endpoint:
    path: /misc/max
    method: GET
    data_selector: res_a, res_b
    params: {}
- name: events
  endpoint:
    path: /misc/events
    method: GET
    data_selector: max
    params: {}
- name: events_local
  endpoint:
    path: /misc/events.local
    method: GET
    data_selector: max
    params: {}
- name: cpuset
  endpoint:
    path: /cgroup/cpuset
    method: GET
    data_selector: cpuset
    params: {}
- name: device_controller
  endpoint:
    path: /cgroup/device
    method: GET
    data_selector: device_controller
    params: {}
- name: rdma
  endpoint:
    path: /cgroup/rdma
    method: GET
    data_selector: rdma
    params: {}
- name: dmem
  endpoint:
    path: /cgroup/dmem
    method: GET
    data_selector: dmem
    params: {}
- name: hugetlb
  endpoint:
    path: /cgroup/hugetlb
    method: GET
    data_selector: hugetlb
    params: {}
- name: misc
  endpoint:
    path: /cgroup/misc
    method: GET
    data_selector: misc
    params: {}
- name: current_memory
  endpoint:
    path: /memory.current
    method: GET
    data_selector: value
- name: min_memory
  endpoint:
    path: /memory.min
    method: GET
    data_selector: value
- name: low_memory
  endpoint:
    path: /memory.low
    method: GET
    data_selector: value
- name: high_memory
  endpoint:
    path: /memory.high
    method: GET
    data_selector: value
- name: max_memory
  endpoint:
    path: /memory.max
    method: GET
    data_selector: value
- name: reclaim_memory
  endpoint:
    path: /memory.reclaim
    method: POST
    data_selector: null
- name: memory.peak
  endpoint:
    path: /memory.peak
    method: GET
- name: memory.oom.group
  endpoint:
    path: /memory.oom.group
    method: GET
- name: memory.events
  endpoint:
    path: /memory.events
    method: GET
- name: memory.events.local
  endpoint:
    path: /memory.events.local
    method: GET
- name: memory.stat
  endpoint:
    path: /memory.stat
    method: GET
- name: memory.numa_stat
  endpoint:
    path: /memory.numa_stat
    method: GET
- name: memory.swap.current
  endpoint:
    path: /memory.swap.current
    method: GET
- name: memory.swap.high
  endpoint:
    path: /memory.swap.high
    method: GET
- name: memory.swap.peak
  endpoint:
    path: /memory.swap.peak
    method: GET
- name: memory.swap.max
  endpoint:
    path: /memory.swap.max
    method: GET
- name: memory.swap.events
  endpoint:
    path: /memory.swap.events
    method: GET
- name: memory.zswap.current
  endpoint:
    path: /memory.zswap.current
    method: GET
- name: memory.zswap.max
  endpoint:
    path: /memory.zswap.max
    method: GET
- name: memory.zswap.writeback
  endpoint:
    path: /memory.zswap.writeback
    method: GET
- name: memory.pressure
  endpoint:
    path: /memory.pressure
    method: GET
- name: cgroup.type
  endpoint:
    path: /cgroup/type
    method: GET
- name: cgroup.procs
  endpoint:
    path: /cgroup/procs
    method: GET
- name: cgroup.threads
  endpoint:
    path: /cgroup/threads
    method: GET
- name: cgroup.controllers
  endpoint:
    path: /cgroup/controllers
    method: GET
- name: cgroup.subtree_control
  endpoint:
    path: /cgroup/subtree_control
    method: GET
- name: cgroup.events
  endpoint:
    path: /cgroup/events
    method: GET
- name: cgroup.max.descendants
  endpoint:
    path: /cgroup/max.descendants
    method: GET
- name: cgroup.max.depth
  endpoint:
    path: /cgroup/max.depth
    method: GET
- name: cgroup.stat
  endpoint:
    path: /cgroup/stat
    method: GET
- name: cgroup.freeze
  endpoint:
    path: /cgroup/freeze
    method: POST
- name: cgroup.kill
  endpoint:
    path: /cgroup/kill
    method: POST
- name: cgroup.pressure
  endpoint:
    path: /cgroup/pressure
    method: GET
- name: cpu.stat
  endpoint:
    path: /cgroup/cpu.stat
    method: GET
- name: cpu.weight
  endpoint:
    path: /cgroup/cpu.weight
    method: GET
- name: cpu.weight.nice
  endpoint:
    path: /cgroup/cpu.weight.nice
    method: GET
- name: cpu.max
  endpoint:
    path: /cgroup/cpu.max
    method: GET
- name: cpu.max.burst
  endpoint:
    path: /cgroup/cpu.max.burst
    method: GET
- name: cpu.pressure
  endpoint:
    path: /cgroup/cpu.pressure
    method: GET
- name: cpu.uclamp.min
  endpoint:
    path: /cgroup/cpu.uclamp.min
    method: GET
- name: cpu.uclamp.max
  endpoint:
    path: /cgroup/cpu.uclamp.max
    method: GET
- name: cpu.idle
  endpoint:
    path: /cgroup/cpu.idle
    method: GET
- name: capacity
  endpoint:
    path: /misc/capacity
    method: GET
    data_selector: res_a, res_b
- name: current
  endpoint:
    path: /misc/current
    method: GET
    data_selector: res_a, res_b
- name: peak
  endpoint:
    path: /misc/peak
    method: GET
    data_selector: res_a, res_b
- name: max
  endpoint:
    path: /misc/max
    method: GET
    data_selector: res_a, res_b
- name: events
  endpoint:
    path: /misc/events
    method: GET
    data_selector: max
- name: events_local
  endpoint:
    path: /misc/events/local
    method: GET
    data_selector: max
- name: module_signing
  endpoint:
    path: /kernel/module/signing/facility
    method: GET
    data_selector: ''
    params: {}
- name: register_binary_type
  endpoint:
    path: /register
    method: POST
    data_selector: ''
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: ''
    params: {}
- name: java_application
  endpoint:
    path: /usr/local/bin/javawrapper
    method: GET
    data_selector: records
    params: {}
- name: jar_file
  endpoint:
    path: /usr/local/java/bin/jarwrapper
    method: GET
    data_selector: records
    params: {}
- name: applet
  endpoint:
    path: /usr/bin/appletviewer
    method: GET
    data_selector: records
    params: {}
- name: admin_reserve_kbytes
  endpoint:
    path: /proc/sys/vm/admin_reserve_kbytes
    method: GET
    data_selector: value
- name: compact_memory
  endpoint:
    path: /proc/sys/vm/compact_memory
    method: POST
    data_selector: status
- name: compaction_proactiveness
  endpoint:
    path: /proc/sys/vm/compaction_proactiveness
    method: GET
    data_selector: value
- name: compact_unevictable_allowed
  endpoint:
    path: /proc/sys/vm/compact_unevictable_allowed
    method: GET
    data_selector: value
- name: defrag_mode
  endpoint:
    path: /proc/sys/vm/defrag_mode
    method: GET
    data_selector: value
- name: dirty_background_bytes
  endpoint:
    path: /proc/sys/vm/dirty_background_bytes
    method: GET
    data_selector: value
- name: dirty_background_ratio
  endpoint:
    path: /proc/sys/vm/dirty_background_ratio
    method: GET
    data_selector: value
- name: dirty_bytes
  endpoint:
    path: /proc/sys/vm/dirty_bytes
    method: GET
    data_selector: value
- name: dirty_expire_centisecs
  endpoint:
    path: /proc/sys/vm/dirty_expire_centisecs
    method: GET
    data_selector: value
- name: dirty_ratio
  endpoint:
    path: /proc/sys/vm/dirty_ratio
    method: GET
    data_selector: value
- name: dirtytime_expire_seconds
  endpoint:
    path: /proc/sys/vm/dirtytime_expire_seconds
    method: GET
    data_selector: value
- name: dirty_writeback_centisecs
  endpoint:
    path: /proc/sys/vm/dirty_writeback_centisecs
    method: GET
    data_selector: value
- name: drop_caches
  endpoint:
    path: /proc/sys/vm/drop_caches
    method: POST
    data_selector: status
- name: enable_soft_offline
  endpoint:
    path: /proc/sys/vm/enable_soft_offline
    method: GET
    data_selector: value
- name: extfrag_threshold
  endpoint:
    path: /proc/sys/vm/extfrag_threshold
    method: GET
    data_selector: value
- name: highmem_is_dirtyable
  endpoint:
    path: /proc/sys/vm/highmem_is_dirtyable
    method: GET
    data_selector: value
- name: hugetlb_shm_group
  endpoint:
    path: /proc/sys/vm/hugetlb_shm_group
    method: GET
    data_selector: value
- name: laptop_mode
  endpoint:
    path: /proc/sys/vm/laptop_mode
    method: GET
    data_selector: value
- name: legacy_va_layout
  endpoint:
    path: /proc/sys/vm/legacy_va_layout
    method: GET
    data_selector: value
- name: lowmem_reserve_ratio
  endpoint:
    path: /lowmem_reserve_ratio
    method: GET
    data_selector: array
    params: {}
- name: max_map_count
  endpoint:
    path: /max_map_count
    method: GET
    data_selector: value
    params: {}
- name: mem_profiling
  endpoint:
    path: /mem_profiling
    method: GET
    data_selector: value
    params: {}
- name: memory_failure_early_kill
  endpoint:
    path: /memory_failure_early_kill
    method: GET
    data_selector: value
    params: {}
- name: memory_failure_recovery
  endpoint:
    path: /memory_failure_recovery
    method: GET
    data_selector: value
    params: {}
- name: min_free_kbytes
  endpoint:
    path: /min_free_kbytes
    method: GET
    data_selector: value
    params: {}
- name: min_slab_ratio
  endpoint:
    path: /min_slab_ratio
    method: GET
    data_selector: value
    params: {}
- name: min_unmapped_ratio
  endpoint:
    path: /min_unmapped_ratio
    method: GET
    data_selector: value
    params: {}
- name: mmap_min_addr
  endpoint:
    path: /mmap_min_addr
    method: GET
    data_selector: value
    params: {}
- name: mmap_rnd_bits
  endpoint:
    path: /mmap_rnd_bits
    method: GET
    data_selector: value
    params: {}
- name: mmap_rnd_compat_bits
  endpoint:
    path: /mmap_rnd_compat_bits
    method: GET
    data_selector: value
    params: {}
- name: nr_hugepages
  endpoint:
    path: /nr_hugepages
    method: GET
    data_selector: value
    params: {}
- name: hugetlb_optimize_vmemmap
  endpoint:
    path: /hugetlb_optimize_vmemmap
    method: GET
    data_selector: value
    params: {}
- name: nr_hugepages_mempolicy
  endpoint:
    path: /nr_hugepages_mempolicy
    method: GET
    data_selector: value
    params: {}
- name: nr_overcommit_hugepages
  endpoint:
    path: /nr_overcommit_hugepages
    method: GET
    data_selector: value
    params: {}
- name: nr_trim_pages
  endpoint:
    path: /nr_trim_pages
    method: GET
    data_selector: value
    params: {}
- name: numa_zonelist_order
  endpoint:
    path: /numa_zonelist_order
    method: GET
    data_selector: value
    params: {}
- name: oom_dump_tasks
  endpoint:
    path: /oom_dump_tasks
    method: GET
    data_selector: value
    params: {}
- name: oom_kill_allocating_task
  endpoint:
    path: /oom_kill_allocating_task
    method: GET
    data_selector: value
    params: {}
- name: overcommit_kbytes
  endpoint:
    path: /overcommit_kbytes
    method: GET
    data_selector: value
    params: {}
- name: overcommit_memory
  endpoint:
    path: /overcommit_memory
    method: GET
    data_selector: value
    params: {}
- name: overcommit_ratio
  endpoint:
    path: /overcommit_ratio
    method: GET
    data_selector: value
    params: {}
- name: page-cluster
  endpoint:
    path: /page-cluster
    method: GET
    data_selector: value
    params: {}
- name: page_lock_unfairness
  endpoint:
    path: /page_lock_unfairness
    method: GET
    data_selector: value
    params: {}
- name: panic_on_oom
  endpoint:
    path: /panic_on_oom
    method: GET
    data_selector: value
    params: {}
- name: page_idle
  endpoint:
    path: /sys/kernel/mm/page_idle
    method: GET
    data_selector: bitmap
- name: ksm_daemon
  endpoint:
    path: /
    method: GET
    data_selector: metadata
- name: memory_blocks
  endpoint:
    path: /sys/devices/system/memory/memoryXXX
    method: GET
    data_selector: state
    params: {}
- name: memmap_on_memory
  endpoint:
    path: /sys/module/memory_hotplug/parameters/memmap_on_memory
    method: GET
    data_selector: ''
    params: {}
- name: online_policy
  endpoint:
    path: /sys/module/memory_hotplug/parameters/online_policy
    method: GET
    data_selector: ''
    params: {}
- name: auto_movable_ratio
  endpoint:
    path: /sys/module/memory_hotplug/parameters/auto_movable_ratio
    method: GET
    data_selector: ''
    params: {}
- name: auto_movable_numa_aware
  endpoint:
    path: /sys/module/memory_hotplug/parameters/auto_movable_numa_aware
    method: GET
    data_selector: ''
    params: {}
- name: lru_gen
  endpoint:
    path: /sys/kernel/mm/lru_gen/
    method: GET
    data_selector: enabled
- name: lru_gen_full
  endpoint:
    path: /sys/kernel/debug/lru_gen_full
    method: GET
    data_selector: stats
- name: memory_initiators
  endpoint:
    path: /sys/devices/system/node/nodeX/access0/initiators/
    method: GET
    data_selector: attributes
    params: {}
- name: memory_targets
  endpoint:
    path: /sys/devices/system/node/nodeY/access0/targets/
    method: GET
    data_selector: attributes
    params: {}
- name: memory_cache
  endpoint:
    path: /sys/devices/system/node/nodeX/memory_side_cache/
    method: GET
    data_selector: attributes
    params: {}
- name: pagemap
  endpoint:
    path: /proc/pid/pagemap
    method: GET
    data_selector: data
    params: {}
- name: kpagecount
  endpoint:
    path: /proc/kpagecount
    method: GET
    data_selector: data
    params: {}
- name: kpageflags
  endpoint:
    path: /proc/kpageflags
    method: GET
    data_selector: data
    params: {}
- name: kpagecgroup
  endpoint:
    path: /proc/kpagecgroup
    method: GET
    data_selector: data
    params: {}
- name: shrinker_directory
  endpoint:
    path: /sys/kernel/debug/shrinker/
    method: GET
    data_selector: directories
- name: shrinker_info
  endpoint:
    path: /sys/kernel/debug/shrinker/{shrinker_name}/
    method: GET
    data_selector: files
- name: count_objects
  endpoint:
    path: /sys/kernel/debug/shrinker/{shrinker_name}/count
    method: GET
    data_selector: output
- name: scan_objects
  endpoint:
    path: /sys/kernel/debug/shrinker/{shrinker_name}/scan
    method: POST
    data_selector: input
- name: alloc_traces
  endpoint:
    path: /sys/kernel/debug/slab/alloc_traces
    method: GET
    data_selector: output
- name: free_traces
  endpoint:
    path: /sys/kernel/debug/slab/free_traces
    method: GET
    data_selector: output
- name: physical_memory
  endpoint:
    path: /mm/physical_memory
    method: GET
    data_selector: nodes
    params: {}
- name: nodes
  endpoint:
    path: /mm/nodes
    method: GET
    data_selector: node_states
    params: {}
- name: nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: node_structures
- name: zones
  endpoint:
    path: /zones
    method: GET
    data_selector: zone_structures
- name: dma_alloc_coherent
  endpoint:
    path: /dma_alloc_coherent
    method: GET
    data_selector: dma_alloc_coherent_data
- name: dma_free_coherent
  endpoint:
    path: /dma_free_coherent
    method: GET
    data_selector: dma_free_coherent_data
- name: dma_pool_create_node
  endpoint:
    path: /dma_pool_create_node
    method: GET
    data_selector: dma_pool_create_node_data
- name: dma_pool_alloc
  endpoint:
    path: /dma_pool_alloc
    method: GET
    data_selector: dma_pool_alloc_data
- name: dma_pool_free
  endpoint:
    path: /dma_pool_free
    method: GET
    data_selector: dma_pool_free_data
- name: dma_map_single
  endpoint:
    path: /dma/map/single
    method: GET
    data_selector: records
    params: {}
- name: dma_unmap_single
  endpoint:
    path: /dma/unmap/single
    method: GET
    data_selector: records
    params: {}
- name: dma_alloc_pages
  endpoint:
    path: /dma/alloc/pages
    method: GET
    data_selector: records
    params: {}
- name: dma_free_pages
  endpoint:
    path: /dma/free/pages
    method: GET
    data_selector: records
    params: {}
- name: dma_sync_single_for_device
  endpoint:
    path: /dma/sync/single/for/device
    method: GET
    data_selector: records
    params: {}
- name: dma_sync_single_for_cpu
  endpoint:
    path: /dma/sync/single/for/cpu
    method: GET
    data_selector: records
    params: {}
- name: dma_map_sg
  endpoint:
    path: /dma/map/sg
    method: GET
    data_selector: records
    params: {}
- name: dma_unmap_sg
  endpoint:
    path: /dma/unmap/sg
    method: GET
    data_selector: records
    params: {}
- name: sgl_alloc_order
  endpoint:
    path: sgl_alloc_order
    method: unknown
    data_selector: unknown
    params: {}
- name: sgl_alloc
  endpoint:
    path: sgl_alloc
    method: unknown
    data_selector: unknown
    params: {}
- name: sgl_free_n_order
  endpoint:
    path: sgl_free_n_order
    method: unknown
    data_selector: unknown
    params: {}
- name: sgl_free_order
  endpoint:
    path: sgl_free_order
    method: unknown
    data_selector: unknown
    params: {}
- name: sgl_free
  endpoint:
    path: sgl_free
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_miter_start
  endpoint:
    path: sg_miter_start
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_miter_skip
  endpoint:
    path: sg_miter_skip
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_miter_next
  endpoint:
    path: sg_miter_next
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_miter_stop
  endpoint:
    path: sg_miter_stop
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_copy_buffer
  endpoint:
    path: sg_copy_buffer
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_copy_from_buffer
  endpoint:
    path: sg_copy_from_buffer
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_copy_to_buffer
  endpoint:
    path: sg_copy_to_buffer
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_pcopy_from_buffer
  endpoint:
    path: sg_pcopy_from_buffer
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_pcopy_to_buffer
  endpoint:
    path: sg_pcopy_to_buffer
    method: unknown
    data_selector: unknown
    params: {}
- name: sg_zero_buffer
  endpoint:
    path: sg_zero_buffer
    method: unknown
    data_selector: unknown
    params: {}
- name: extract_iter_to_sg
  endpoint:
    path: extract_iter_to_sg
    method: unknown
    data_selector: unknown
    params: {}
- name: page_tables
  endpoint:
    path: /mm/page_tables
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: folios
  endpoint:
    path: /folios
    method: GET
- name: active_mm
  endpoint:
    path: /active_mm
    method: GET
    data_selector: records
- name: mem_profiling
  endpoint:
    path: /mem_profiling
    method: GET
    data_selector: profiling_info
- name: allocinfo
  endpoint:
    path: /allocinfo
    method: GET
    data_selector: allocation_info
- name: memory_failure_recovery
  endpoint:
    path: /sysctl/vm.memory_failure_recovery
    method: GET
    data_selector: memory_failure_recovery
    params: {}
- name: memory_failure_early_kill
  endpoint:
    path: /sysctl/vm.memory_failure_early_kill
    method: GET
    data_selector: memory_failure_early_kill
    params: {}
- name: PR_MCE_KILL
  endpoint:
    path: /proc/sys/kernel/PR_MCE_KILL
    method: GET
    data_selector: PR_MCE_KILL
    params: {}
- name: resv_huge_pages
  endpoint:
    path: /hugetlbfs/resv_huge_pages
    method: GET
    data_selector: reserved_pages
    params: {}
- name: reserve_map
  endpoint:
    path: /hugetlbfs/reserve_map
    method: GET
    data_selector: reserve_map_info
    params: {}
- name: cpusets
  endpoint:
    path: /dev/cpuset
    method: GET
- name: cpuset
  endpoint:
    path: /sys/fs/cgroup/cpuset
    method: GET
    data_selector: cpusets
    params: {}
- name: numa_stat
  endpoint:
    path: /memory.numa_stat
    method: GET
    data_selector: total
- name: HAVE_ARCH_VMAP_STACK
  endpoint:
    path: /kernel/fork.c
    method: GET
- name: VMAP_STACK
  endpoint:
    path: /kernel/fork.c
    method: GET
- name: Allocation
  endpoint:
    path: /kernel/fork.c
    method: GET
- name: Stack overflow handling
  endpoint:
    path: /kernel/fork.c
    method: GET
- name: Testing VMAP allocation with guard pages
  endpoint:
    path: /kernel/fork.c
    method: GET
- name: classes
  endpoint:
    path: /sys/kernel/debug/zsmalloc/zram0/classes
    method: GET
    data_selector: class
    params: {}
notes:
- Linux kernel development follows a loosely time-based release process.
- New major kernel releases happen every two or three months.
- Patches must be reviewed for quality before merging.
- Uses standard coding style, deviations may be necessary for readability
- Excessive or premature abstraction can be harmful
- Patches should always be sent as plain text.
- Do not send them as attachments; that makes it much harder for reviewers to quote
  sections of the patch in their replies.
- --base feature was introduced in git version 2.9.0
- Be patient and wait for reviewers to respond, typically within 2-3 weeks.
- Resend patches with 'RESEND' in the subject line after a couple of weeks if no response.
- This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available
  at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html
- Remember to follow good behavioral habits when using the lists.
- It is normal that the answers to your first patch might simply be a list of a dozen
  things you should correct.
- Kernel is written mostly in C, with some architecture-dependent parts written in
  assembly.
- The kernel is written using GNU C and the GNU toolchain.
- Loadable kernel modules require a MODULE_LICENSE() tag to indicate if the module
  is free software or proprietary.
- The Linux Kernel is provided under the terms of the GNU General Public License version
  2 only (GPL-2.0)
- Individual source files can have a different license which is required to be compatible
  with the GPL-2.0
- 'Ensure it’s vanilla (IOW: not patched and not using add-on modules)'
- Make sure it’s built and running in a healthy environment and not already tainted
  before the issue occurs.
- Ensure your system does not enhance its kernels by building additional kernel modules
  on-the-fly, which solutions like DKMS might be doing locally without your knowledge.
- Create a fresh backup and put system repair and restore tools at hand.
- Some fixes are too complex and may not get backported to older releases.
- Only issues of high priority are guaranteed to get resolved.
- If your failure involves a ‘panic’, ‘Oops’, ‘warning’, or ‘BUG’, consider decoding
  the kernel log to find the line of code that triggered the error.
- When the kernel detects an internal problem, it will log some information about
  the executed code.
- If you can’t get this to work, simply skip this step and mention the reason for
  it in the report.
- A bisection needs a bit of know-how, which not everyone has, and quite a bit of
  effort, which not everyone is willing to invest.
- When dealing with regressions make sure the issue you face is really caused by the
  kernel and not by something else.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- 中文文档翻译工作目前独立于 linux-doc 开发树开展
- 请注意，最新版本 Sphinx 的文档编译速度有极大提升，强烈建议您通过 pip/pypi 安装最新版本 Sphinx
- Hibernating in the 'reboot' and 'shutdown' modes causes the PM core to skip some
  platform-related callbacks which on ACPI systems might be necessary to make hibernation
  work.
- The 'platform' mode of hibernation does not work on some systems with broken BIOSes.
- Hibernation may require testing multiple modes for reliability.
- Failure of hibernation tests may indicate hardware issues.
- Some problems only show up on a second attempt at suspending and resuming the system.
- Hibernating in the 'reboot' and 'shutdown' modes causes the PM core to skip some
  platform-related callbacks.
- If neither 'platform' nor 'shutdown' hibernation mode works, you will need to identify
  what goes wrong.
- CONFIG_ENERGY_MODEL must be enabled to use the EM framework.
- Performance domains often have a 1-to-1 mapping with CPUFreq policies.
- The freezing of tasks is a mechanism by which user space processes and some kernel
  threads are controlled during hibernation or system-wide suspend.
- This document only covers the aspects of power management specific to PCI devices.
- The latency unit used in the PM QoS framework is the microsecond (usec).
- Only processes can register a PM QoS request.
- pm_trace uses the system’s Real Time Clock (RTC) to save the magic number.
- pm_trace is not compatible with asynchronous suspend, so it turns asynchronous suspend
  off.
- swap files need not be contiguous
- the header of a swap file is not in the first block of the partition that holds
  it
- the location of a swap file’s header may be determined with the help of appropriate
  filesystem driver
- if the filesystem is journaled, it cannot be mounted during resume from disk
- the offset is expressed in <PAGE_SIZE> units
- the swap file has to be active (ie. be present in /proc/swaps) so that it can be
  used for suspending
- if the swap file used for suspending is deleted and recreated, the location of its
  header need not be the same as before
- It’s always a bad idea to unplug a disk drive containing a mounted filesystem.
- The safest thing is to unmount all filesystems on removable media before suspending;
  then remount them after resuming.
- If you touch anything on disk between suspend and resume, kiss your data goodbye.
- If you have any filesystems on USB devices mounted before software suspend, they
  won’t be accessible after resume and you may lose data.
- 'The resume process may be triggered in two ways: during lateinit or manually from
  an initrd or initramfs.'
- Different methods work on different systems, and no known method suits all of them.
- Be careful when passing acpi_sleep=something, as it may cause a hard crash during
  resume.
- Userland utilities must not make assumptions regarding the ordering of data within
  the snapshot image.
- Power zones represent different parts of the system, which can be controlled and
  monitored.
- The DTPM framework provides a unified interface to act on device power.
- cgroup is a mechanism to organize processes hierarchically and distribute system
  resources along the hierarchy.
- cgroup v2 has only single hierarchy.
- A cgroup which doesn’t have any children or live processes can be destroyed by removing
  the directory.
- cgroup v2 has only a single hierarchy.
- Moving controllers dynamically between v2 and other hierarchies is discouraged for
  production use.
- If a cgroup is removed, ' (deleted)' is appended to the path.
- Each cgroup has a 'cgroup.events' file indicating live processes.
- Migrating processes across cgroups frequently is discouraged.
- Cgroup doesn’t do anything to prevent name collisions.
- cgroup is a mechanism to organize processes hierarchically and distribute system
  resources along the hierarchy in a controlled and configurable manner.
- cgroup v2 currently supports the following mount options.
- Migrating processes across cgroups frequently as a means to apply different resource
  restrictions is discouraged.
- cgroup doesn’t do anything to prevent name collisions and it’s the user’s responsibility
  to avoid them.
- memory.high is the main mechanism to control memory usage.
- Memory pressure monitoring mechanism isn’t implemented yet.
- Cgroup writeback requires explicit support from the underlying filesystem.
- It’s recommended to avoid usage patterns where multiple cgroups write to a single
  inode simultaneously.
- Cgroup v2 enables various resource management features.
- Resource limits can be set for different controllers.
- The root cgroup is exempt from resource control and thus shouldn’t have resource
  control interface files.
- cgroup v1 allowed an arbitrary number of hierarchies and each hierarchy could host
  any number of controllers.
- Support for multiple hierarchies came at a steep cost.
- There was no limit on how many hierarchies there might be.
- The original lower boundary, the soft limit, is defined as a limit that is per default
  unset.
- The soft limit has no hierarchical meaning.
- The memory.low boundary on the other hand is a top-down allocated reserve.
- The original high boundary, the hard limit, is defined as a strict limit that can
  not budge.
- The memory.high boundary on the other hand can be set much more conservatively.
- Setting the original memory.limit_in_bytes below the current usage was subject to
  a race condition.
- The combined memory+swap accounting and limiting is replaced by real control over
  swap space.
- Determining whether a cgroup has enough memory is not trivial as memory usage doesn’t
  indicate whether the workload can benefit from more memory.
- The writeback constantly keeps track of foreign pages and, if a particular foreign
  cgroup becomes the majority over a certain period of time, switches the ownership
  of the inode to that cgroup.
- Enabling module signing adds a dependency on the OpenSSL devel packages to the kernel
  build processes for the tool that does the signing.
- You must mount binfmt_misc before using it.
- The register string may not exceed 1920 characters.
- You must first install the Java Developers Kit for Linux.
- You have to compile BINFMT_MISC either as a module or into the kernel.
- Changing user_reserve_kbytes takes effect whenever an application requests memory.
- The files in this directory can be used to tune the operation of the virtual memory
  subsystem of the Linux kernel.
- If the user applications are going to request huge pages using mmap system call,
  then it is required that system administrator mount a file system of type hugetlbfs
- While read system calls are supported on files that reside on hugetlb file systems,
  write system calls are not.
- Regular chown, chgrp, and chmod commands (with right permissions) could be used
  to change the file attributes on hugetlbfs.
- Users can use the huge page support in Linux kernel by either using the mmap system
  call or standard SYSV shared memory system calls (shmget, shmat).
- The administrator can allocate persistent huge pages on the kernel boot command
  line by specifying the 'hugepages=N' parameter.
- Only accesses to user memory pages are tracked.
- A page is considered idle if it has not been accessed since it was marked idle.
- KSM only merges anonymous (private) pages, never pagecache (file) pages.
- KSM’s merged pages can be swapped out just like other user pages.
- Linux supports memory hot(un)plug on selected 64 bit architectures, such as x86_64,
  arm64, ppc64 and s390x.
- The kernel has limited support for memory mapping under no-MMU conditions.
- Interprocess shared memory is supported in NOMMU mode.
- Memory policies work within cpusets as described above.
- Applications may wish to consider which node they want their memory to be allocated
  from based on the node’s performance characteristics.
- The bandwidth attributes are provided in MiB/second.
- The latency attributes are provided in nanoseconds.
- Reading from any of the files will return -EINVAL if you are not starting the read
  on an 8-byte boundary.
- Before Linux 3.11 pagemap bits 55-60 were used for 'page-shift'.
- The slab allocator includes full debugging support when built with CONFIG_SLUB_DEBUG=y
  but is off by default.
- To switch debugging on, add an option slab_debug to the kernel command line.
- DebugFS files are available under /sys/kernel/debug/slab/<cache>/ for caches with
  enabled user tracking.
- THP can be enabled system wide or restricted to certain tasks or even memory ranges
  inside task’s address space.
- Unless THP is completely disabled, there is `khugepaged` daemon that scans memory
  and collapses sequences of basic pages into PMD-sized huge pages.
- The kernel may use huge pages of all available sizes, and that no fine control as
  for the internal tmpfs mount is available.
- The default policy in the past was 'never', but it can now be adjusted using the
  kernel parameter 'transparent_hugepage_tmpfs=<policy>'.
- To make them effective you need to restart any application that could have been
  using hugepages.
- Zswap is a lightweight compressed cache for swap pages.
- Zswap evicts pages from compressed cache on an LRU basis.
- Zswap can be enabled and disabled at runtime using the sysfs interface.
- KHO is available when the kernel is compiled with CONFIG_KEXEC_HANDOVER set to y.
- To use KHO, please boot the kernel with the kho=on command line parameter.
- You may use kho_scratch parameter to define size of the scratch regions.
- To support debugging a device driver this can be disabled via debugfs.
- Be careful with the option dma-api/all_errors, as it can easily flood your logs.
- You can provide 'dma_debug=off' as a boot parameter to disable DMA API debugging.
- You have to reboot to enable DMA API debugging again.
- Paged virtual memory was invented along with virtual memory as a concept in 1962.
- The page table hierarchy has now developed into a five-level structure.
- Lock inversion occurs when two threads need to acquire multiple locks, but in doing
  so inadvertently cause a mutual deadlock.
- There must be no way that page tables designated for removal can be traversed or
  referenced by concurrent tasks.
- Locking VMAs for their metadata does not have any impact on the memory they describe
  nor the page tables that map them.
- Locking rules for PTE-level page tables are very different from locking rules for
  page tables at other levels.
- Linux needs a page-frame structure for each page in the system and the pageframes
  need to live in the permanent mapping
- The general recommendation is that you don't use more than 8GiB on a 32-bit machine
- The mm_count refcount may no longer include the 'lazy' users.
- Taking and releasing lazy references must be done with mmgrab_lazy_tlb() and mmdrop_lazy_tlb()
  helpers.
- When set to 'never', memory allocation profiling overhead is minimized and it cannot
  be enabled at runtime.
- If compression fails, a warning is issued and memory allocation profiling gets disabled.
- When CONFIG_MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT=y, default value is '1'.
- When CONFIG_MEM_ALLOC_PROFILING_ENABLED_BY_DEFAULT=n, default value is 'never'.
- Memory balancing is needed for !__GFP_HIGH and !__GFP_KSWAPD_RECLAIM as well as
  for non __GFP_IO allocations.
- The kernel should try to fulfill requests for direct mapped pages from the direct
  mapped pool.
- In 2.2, memory balancing/page reclamation would kick off only when the total number
  of free pages fell below 1/64 th of total memory.
- In 2.3, zone balancing can be done in one of two ways.
- kswapd also needs to know about the zones it should balance.
- Not all page types are supported and never will. Most kernel internal objects cannot
  be recovered, only LRU pages for now.
- Reservations are created when a huge page backed shared memory segment is created.
- Private mappings create the reservation map and hang it off the VMA structure.
- KSM is a memory-saving de-duplication feature, enabled by CONFIG_KSM=y, added to
  the Linux kernel in 2.6.32
- High values of `max_page_sharing` result in faster memory merging and higher deduplication
  factor at the expense of slower worst case for rmap walks
- FLATMEM is suitable for non-NUMA systems with contiguous, or mostly contiguous,
  physical memory.
- SPARSEMEM is the most versatile memory model available in Linux.
- Notification is not necessary in all cases when clearing a pte/pmd under the page
  table lock.
- Requires notifying secondary TLB while holding page table lock in specific cases.
- Cpusets provide a mechanism for assigning a set of CPUs and Memory Nodes to a set
  of tasks.
- Cpusets constrain the CPU and Memory placement of tasks to only the resources within
  a task’s current cpuset.
- The cpuset hierarchy can be mounted at /dev/cpuset for browsing and manipulation
  from user space.
- Cpusets use the generic cgroup subsystem described in Control Groups.
- The hierarchy of cpusets can be mounted at /dev/cpuset, for browsing and manipulation
  from user space.
- By default, there is one sched domain covering all CPUs, including those marked
  isolated using the kernel boot time 'isolcpus=' argument.
- The per-cpuset flag 'cpuset.sched_load_balance' defaults to enabled.
- bash’s builtin ‘echo’ command does not check calls to write() against errors. If
  you use it in the cpuset file system, you won’t be able to tell whether a command
  succeeded or failed.
- We can only return one error code per call to write(). So you should also put only
  ONE pid.
- The C language stack growth does an implicit mremap.
- In mode 2 the MAP_NORESERVE flag is ignored.
- page owner is disabled by default. So, if you’d like to use it, you need to add
  'page_owner=on' to your boot cmdline.
- Enabling page owner increases kernel size by several kilobytes.
- page owner is disabled by default. So, if you'd like to use it, you need to add
  "page_owner=on" to your boot cmdline.
- Page table check is disabled by default, but can be optionally enabled on systems
  where the extra hardening outweighs the performance costs.
- PAGE_TABLE_CHECK depends on EXCLUSIVE_SYSTEM_RAM.
- It can help with debugging double map memory corruption issues.
- The syscall is deprecated and replaced it with an emulation now.
- One side effect of emulation is that user can hit vm.max_map_count limit more easily
  due to additional VMAs.
- Split page table lock for PTE tables is enabled compile-time if CONFIG_SPLIT_PTLOCK_CPUS
  (usually 4) is less or equal to NR_CPUS.
- Hugetlb can support several page sizes. We use split lock only for PMD level, but
  not for PUD.
- PMD split lock only makes sense if you have more than two page table levels.
- 'NOTE: pagetable_pte_ctor() and pagetable_pmd_ctor() can fail -- it must be handled
  properly.'
- Uses graceful fallback design which allows components without transparent hugepage
  knowledge to still function.
- This document is hopelessly outdated and it asks for a complete rewrite. It still
  contains a useful information so we are keeping it here but make sure to check the
  current code if you need a deeper understanding.
- Kernel memory can never be limited completely independently of user memory.
- In the current implementation, memory reclaim will NOT be triggered for a cgroup
  when it hits K while staying below U, which makes this setup impractical.
- A successful write to memory.limit_in_bytes does not guarantee a successful setting
  of this limit to the value written into the file.
- Charges recorded in swap information is not updated at removal of cgroup.
- This document is hopelessly outdated and it asks for a complete rewrite.
- The Memory Resource Controller has generically been referred to as the memory controller
  in this document.
- Soft limits are deprecated.
- OOM control features are deprecated.
- We can use a suffix (k, K, m, M, g or G) to indicate values in kilo, mega or gigabytes.
- We cannot set limits on the root cgroup any more.
- A successful write to this file does not guarantee a successful setting of this
  limit to the value written into the file.
- The user is required to re-read this file after a write to guarantee the value committed
  by the kernel.
- Architectures that can support Virtually Mapped Kernel Stacks should enable HAVE_ARCH_VMAP_STACK.
- Using VMAP_STACK with KASAN requires architecture support for backing virtual mappings
  with real shadow memory.
- As of this writing, arm64, powerpc, riscv, s390, um, and x86 have support for VMAP_STACK.
- Using this feature with KASAN requires architecture support for backing virtual
  mappings with real shadow memory, and KASAN_VMALLOC must be enabled.
- VMAP_STACK is enabled, it is not possible to run DMA on stack allocated data.
- Optimization only supports 64-bit systems.
- This optimization only supports 64-bit system.
- The size of struct page is typically 64 bytes.
- Uses CONFIG_ZSMALLOC_CHAIN_SIZE to configure zspage chains
errors:
- If you are dealing with a ‘warning’, an ‘OOPS’ or a ‘panic’ from the kernel, include
  it.
- If the issue might be related to your computer hardware, mention what kind of system
  you use.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'last_failed_errno: -16'
- If the 'freezer' test fails, there is a task that cannot be frozen.
- If the 'devices' test fails, most likely there is a driver that cannot suspend or
  resume its device.
- If the 'platform' test fails, there is a problem with the handling of the platform
  firmware on your system.
- If the 'processors' test fails, the disabling/enabling of nonboot CPUs does not
  work.
- 'EINVAL: Invalid argument provided.'
- 'ENOMEM: Out of memory.'
- 'freezing failure: If a freezable kernel thread is not put to the frozen state after
  the freezer has initiated a freezing operation, the freezing of tasks will fail.'
- 'EOPNOTSUPP: Operations which fail due to invalid topology'
- 'Cannot seek: Check the file path and permissions.'
- 'Class file corrupt: Ensure the class file is valid.'
- 'Unexpected end of file: Verify the integrity of the class file.'
- '-EINVAL: Not starting the read/write on an 8-byte boundary, or size is not a multiple
  of 8 bytes.'
- '-ENXIO: Writing to this file beyond max PFN.'
- 'EINVAL: If KSM is not configured into the running kernel.'
- madvise(..., MADV_COLLAPSE) can still cause transparent huge pages to be obtained
  even if 'never' mode is specified.
- 'SIGSEGV: Triggered by user-space code that tries to access memory not permitted.'
- 'CONFIG_MEM_ALLOC_PROFILING_DEBUG: Adds warnings for allocations that weren’t accounted.'
- 'ENOMEM: Memory allocation failed during region_del operation.'
- The cgroup limit is too low (just too low to do anything useful)
- The user is using anonymous memory and swap is turned off or too low
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: /proc/sys/vm
  headers:
    Accept: application/json
source_metadata: null
