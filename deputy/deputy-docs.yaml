resources:
- name: leave_request
  endpoint:
    path: /api/v1/resource/Leave
    method: POST
    params:
      Employee: '{{ employee_id }}'
      LeaveRule: '{{ leave_rule_id }}'
      Company: '{{ company_id }}'
      DateStart: '{{ start_date }}'
      Start: '{{ start_timestamp }}'
      DateEnd: '{{ end_date }}'
      End: '{{ end_timestamp }}'
      Comment: '{{ comment }}'
- name: company
  endpoint:
    path: /api/v1/supervise/company
    method: PUT
    params:
      intCompanyId: 381
      strOpunitName: This is an area
      strAddress: 1 Smith Street, Sydney, Australia
      strExportName: SmithStreet
      intOpunitType: 0
- name: department
  endpoint:
    path: /api/v1/supervise/department
    method: PUT
    params:
      intCompanyId: 381
      strOpunitName: This is an area
      strAddress: 1 Smith Street, Sydney, Australia
      strExportName: SmithStreet
      intOpunitType: 0
- name: metric_config
  endpoint:
    path: /supervise/metric/config/upsert
    method: POST
    data_selector: data
- name: add_or_update_shift
  endpoint:
    path: /api/v1/supervise/roster
    method: POST
- name: publish_shift
  endpoint:
    path: /api/v1/supervise/roster/publish
    method: POST
- name: employee
  endpoint:
    path: /api/management/v2/employees
    method: POST
- name: employee
  endpoint:
    path: /api/employees
    method: GET
    data_selector: employees
- name: metrics
  endpoint:
    path: /metrics
    method: POST
- name: metrics_bulk
  endpoint:
    path: /metrics:bulk
    method: POST
- name: forecast_sales_transactions
  endpoint:
    path: /metrics
    method: POST
    data_selector: data
- name: required_staff
  endpoint:
    path: /metrics
    method: POST
    data_selector: data
- name: refunds_zero_dollar
  endpoint:
    path: /metrics
    method: POST
    data_selector: data
- name: sales_zero_dollar_update
  endpoint:
    path: /metrics
    method: POST
    data_selector: data
- name: hour_budgets
  endpoint:
    path: /metrics:bulk
    method: POST
    data_selector: data
- name: wage_budget
  endpoint:
    path: /metrics
    method: POST
    data_selector: data
- name: wage_budget_bulk
  endpoint:
    path: /metrics:bulk
    method: POST
    data_selector: data
- name: address
  endpoint:
    path: /address
    method: POST
    data_selector: records
- name: agreed_hour
  endpoint:
    path: /api/management/v2/agreed_hour/{employeeid}
    method: POST
- name: agreed_hour
  endpoint:
    path: /api/management/v2/agreed_hour/{employeeid}
    method: GET
- name: webhook
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    params:
      Topic: Timesheet.Insert
      Enabled: 1
      Type: SQS
      Address: https://sqs.us-west-2.amazonaws.com/YOUR_AWS_ACCOUNT_ID/YOUR_HOOK_NAME
      Headers: 'aws_access_key_id: XXXXXXXXX; aws_secret_access_key: YYYYYYYYYY'
- name: categories
  endpoint:
    path: /api/v1/categories
    method: GET
    data_selector: categories
    params: {}
- name: my_roster
  endpoint:
    path: /v1/my/roster
    method: GET
- name: comment
  endpoint:
    path: /docs/comment
    method: GET
    data_selector: comments
- name: company_period
  endpoint:
    path: /api/v1/company_period
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /company
    method: GET
    data_selector: Not specified
    params:
      Code: String
      CompanyName: VarChar
      IsWorkplace: Boolean
      IsPayrollEntity: Boolean
- name: contact
  endpoint:
    path: /docs/contact
    method: GET
    data_selector: records
    params:
      incremental: Modified
- name: country
  endpoint:
    path: /country
    method: GET
    data_selector: data
    params: {}
- name: create_business
  endpoint:
    path: /connect/v1/partner/{partnername}/subscription-status
    method: POST
    data_selector: data
- name: change_plan
  endpoint:
    path: /connect/v1/partner/{partnername}/subscription-status
    method: POST
    data_selector: data
- name: subscription_status
  endpoint:
    path: /connect/v1/partner/{partnername}/subscription-status
    method: POST
    data_selector: data
- name: labor_model_rule
  endpoint:
    path: /api/v2/labor-model/location/{locationid}
    method: POST
    data_selector: data
- name: custom_field_data
  endpoint:
    path: /api/v1/resource/CustomFieldData/QUERY
    method: POST
    data_selector: .
- name: employee_custom_field
  endpoint:
    path: /api/v1/resource/Employee/{EmployeeId}/CustomFieldDataObject
    method: POST
    data_selector: ''
- name: timesheet_custom_field
  endpoint:
    path: ''
    method: POST
    data_selector: ''
- name: custom_field
  endpoint:
    path: /resource/CustomField
    method: POST
- name: custom_field_data
  endpoint:
    path: /docs/customfielddata
    method: GET
    data_selector: data
- name: custom_field_list
  endpoint:
    path: /api/v1/resource/CustomField
    method: GET
    data_selector: items
- name: custom_field_info
  endpoint:
    path: /api/v1/resource/CustomField/INFO
    method: GET
    data_selector: items
- name: custom_field_detail
  endpoint:
    path: /api/v1/resource/CustomField/{id}
    method: GET
    data_selector: item
- name: custom_field_update
  endpoint:
    path: /api/v1/resource/CustomField/{id}
    method: POST
    data_selector: item
- name: custom_field_query
  endpoint:
    path: /api/v1/resource/CustomField/QUERY
    method: POST
    data_selector: items
- name: delete_location
  endpoint:
    path: /api/v1/supervise/company/{id}/delete
    method: POST
    params:
      targetId: id of the new location
      sourceId: id of the location being deleted
      deleteAssociations: true
- name: archive_location
  endpoint:
    path: /api/v1/supervise/company/{id}/archive
    method: POST
    params:
      targetId: id of the new location
      sourceId: id of the location being archived
- name: assign
  endpoint:
    path: /docs/dexml-native-functions#Assign
    method: POST
- name: atom
  endpoint:
    path: /docs/dexml-native-functions#Atom
    method: POST
- name: get_nested
  endpoint:
    path: /docs/dexml-native-functions#GetNested
    method: POST
- name: del
  endpoint:
    path: /docs/dexml-native-functions#Del
    method: POST
- name: index_exists
  endpoint:
    path: /docs/dexml-native-functions#IndexExists
    method: POST
- name: length
  endpoint:
    path: /docs/dexml-native-functions#Length
    method: POST
- name: add_slashes
  endpoint:
    path: /docs/dexml-native-functions#AddSlashes
    method: POST
- name: date_print
  endpoint:
    path: /docs/dexml-native-functions#DatePrint
    method: POST
- name: unix_time
  endpoint:
    path: /docs/dexml-native-functions#UnixTime
    method: POST
- name: date_add
  endpoint:
    path: /docs/dexml-native-functions#DateAdd
    method: POST
- name: custom_sms
  endpoint:
    method: POST
- name: custom_email
  endpoint:
    method: POST
- name: custom_notify
  endpoint:
    method: POST
- name: custom_soap
  endpoint:
    method: POST
- name: deputy_rest
  endpoint:
    method: GET
- name: custom_http
  endpoint:
    method: GET
- name: custom_oauth1header
  endpoint:
    method: POST
- name: custom_data_save
  endpoint:
    method: POST
- name: custom_data_del
  endpoint:
    method: DELETE
- name: custom_get_user
  endpoint:
    method: GET
- name: custom_get_session
  endpoint:
    method: GET
- name: roster
  endpoint:
    path: /services/data/vXX.X/sobjects/Roster
    method: GET
    data_selector: records
    params: {}
- name: leaveRules
  endpoint:
    path: /services/data/vXX.X/sobjects/LeaveRules
    method: GET
    data_selector: records
    params: {}
- name: employees
  endpoint:
    path: /api/management/v2/employees
    method: POST
    data_selector: data
- name: patch_user
  endpoint:
    path: /api/management/v2/employees
    method: PATCH
- name: iframe_account
  endpoint:
    path: /connect/embed/
    method: GET
    params:
      provider: '[provider]'
      host: '[host]'
      code: '[nonce]'
      staging: '1'
- name: logout
  endpoint:
    path: /login
    method: POST
    params:
      dologout: true
- name: partner_info
  endpoint:
    path: /connect/v1/partner/{partnername}/info
    method: GET
    data_selector: .
- name: employee_agreement
  endpoint:
    path: /employee-agreement
    method: GET
    data_selector: data
- name: employee_appraisal
  endpoint:
    path: /employeeappraisal
    method: GET
    data_selector: records
- name: employee_availability
  endpoint:
    method: GET
- name: employee_history
  endpoint:
    path: /api/employee_history
    method: GET
    data_selector: records
    params: {}
- name: EmployeePaycycleReturn
  endpoint:
    path: /api/v1/employee/paycycle/return
    method: GET
    data_selector: records
    params: {}
- name: EmployeePaycycle
  endpoint:
    path: /api/employee-pay-cycle
    method: GET
    data_selector: records
    params: {}
- name: employee_role
  endpoint:
    path: /api/employee-role
    method: GET
    data_selector: data
- name: employee_salary_opunit_costing
  endpoint:
    path: /employee-salary-opunit-costing
    method: GET
    data_selector: records
- name: employee_workplace
  endpoint:
    path: /api/employee_workplace
    method: GET
    data_selector: data
    params: {}
- name: employee_agreement_history
  endpoint:
    path: /employeeagreementhistory
    method: GET
    data_selector: ''
- name: employees
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: update_employee
  endpoint:
    method: PUT
- name: assign_shift
  endpoint:
    method: POST
- name: employee_list
  endpoint:
    path: /resource/Employee
    method: GET
    data_selector: employees
- name: employee_individual
  endpoint:
    path: /resource/Employee/{id}
    method: GET
    data_selector: employee
- name: employee_query
  endpoint:
    path: /resource/Employee/QUERY
    method: POST
    data_selector: employees
- name: employment_condition
  endpoint:
    path: /docs/employment-condition
    method: GET
    data_selector: data
- name: employment_contract_leave_rules
  endpoint:
    path: /employment-contract-leave-rules
    method: GET
    data_selector: records
- name: employment_contract
  endpoint:
    path: /employment-contract
    method: GET
    data_selector: ''
    params: {}
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: None provided
    params: {}
- name: TimesheetPayReturn
  endpoint:
    path: /resource/TimesheetPayReturn/QUERY
    method: POST
    data_selector: .
    params:
      search:
        s1:
          field: Timesheet
          data: 122
          type: eq
      join:
      - TimesheetObject
      - PayRuleObject
- name: CustomFieldData
  endpoint:
    data_selector: fwwagreedtoextendshift; fwwcominginearly; fwwcominginlate; fwwleavingearly;
      fwwleavinglate; fwwunscheduledshiftconsent; fwwreceivedallmealbreaks; fwwreceivedallrestbreaks
- name: geo
  endpoint:
    path: /geo
    method: GET
    data_selector: records
- name: timesheet_pay_return
  endpoint:
    path: /api/v1/resource/TimesheetPayReturn/QUERY
    method: POST
    data_selector: _DPMetaData
- name: timesheet
  endpoint:
    method: POST
    data_selector: TimesheetObject
- name: roster
  endpoint:
    path: /resource/Roster/QUERY
    method: POST
    params:
      search: '{"s1": {"field": "Date", "data": "2022-09-01", "type": "eq"}}'
- name: agreed_hours
  endpoint:
    path: /api/v2/agreed_hours
    method: GET
- name: sales_metrics
  endpoint:
    path: /api/v2/sales_metrics
    method: GET
- name: employee_onboarding_data
  endpoint:
    path: /employees/{employeeid}/onboarding/export
    method: GET
    data_selector: data
- name: journal
  endpoint:
    path: /api/journal
    method: GET
    data_selector: records
- name: kiosk
  endpoint:
    path: /kiosk
    method: GET
    data_selector: data
    params: {}
- name: leave_accrual
  endpoint:
    data_selector: leave_accruals
- name: LeavePayLine
  endpoint:
    path: /api/leavepayline
    method: GET
    data_selector: records
    params: {}
- name: leave_rules
  endpoint:
    path: /docs/leave-rules
    method: GET
    data_selector: leave_rules
- name: leave_list
  endpoint:
    path: /Leave
    method: GET
- name: leave_info
  endpoint:
    path: /Leave/INFO
    method: GET
- name: leave_details
  endpoint:
    path: /Leave/{id}
    method: GET
- name: leave_update
  endpoint:
    path: /Leave/{id}
    method: POST
- name: leave_query
  endpoint:
    path: /Leave/QUERY
    method: POST
- name: enable_support_access
  endpoint:
    path: /api/v1/my/pref/ENABLE_DP_REMOTE
    method: POST
    data_selector: enabled
- name: disable_support_access
  endpoint:
    path: /api/v1/my/pref/ENABLE_DP_REMOTE
    method: POST
    data_selector: disabled
- name: webhook
  endpoint:
    path: /exec/devapp/webhooks
    method: GET
- name: Timesheet
  endpoint:
    path: /api/v1/resource/Timesheet/QUERY
    method: POST
    data_selector: TimesheetIdArray
- name: EmployeePaycycle
  endpoint:
    path: /api/v1/resource/EmployeePaycycle/QUERY
    method: POST
    data_selector: TimesheetIdArray
- name: payroll_mark_paid
  endpoint:
    path: /api/v1/payroll/mark/{periodid}/paid
    method: POST
    data_selector: TimesheetIdArray
- name: mark_timesheet_unpaid
  endpoint:
    path: /api/v1/payroll/mark/{periodid}/unpaid
    method: POST
- name: memo
  endpoint:
    path: /api/v1/memo
    method: GET
    data_selector: memos
- name: update_all_locations
  endpoint:
    path: /supervise/company/settings
    method: POST
- name: location_settings
  endpoint:
    path: /update_location_settings
    method: POST
    data_selector: settings
    params:
      ACTIVE_HOURS_END: 00:00
      ACTIVE_HOURS_START: 09:00
      AUTO_SUGGEST_BREAK: true
      CAN_BUMP_SHIFT_VIA_DESK: true
      CAN_CLOCKIN_SHIFT_EARLIER: true
      CAN_CLOCKIN_SHIFT_EARLIER_MINS: 5
      CAN_DISPLAY_BREAK_WARNING: false
      CAN_END_BREAK_EARLIER: true
      CAN_MOBILE_BUMP_SHIFT: true
      CAN_MODIFY_TIMESHEET_ON_END: true
      CAN_SMS_BUMP_SHIFT: false
      CAN_SUBMIT_SHIFT_VIA_DESK: true
      DEFAULT_MEALBREAK_DURATION: 0
      MEALBREAK_IS_PAID: false
      REQUIRE_KIOSK_PHOTO_BUMP_SHIFT: true
      ROSTER_ALLOW_OFFER_SHIFT: false
      ROSTER_ALLOW_PEER_VIEW: 1
      ROSTER_ALLOW_SMS_WITH_FULL_NAME: false
      ROSTER_ALLOW_SWAP_SHIFT: false
      ROSTER_DEFAULT_SHIFT_LEN: 6
      ROSTER_NOTIFICATION_MANAGER: 2
      ROSTER_PREVENT_CHANGE_HOURS: 72
      ROSTER_RECOMMENDATION_SORTING: BEST
      ROSTER_REQUIRE_CONFIRM_HOURS: 336
      ROSTER_SWAP_REQUIRE_APPROVAL: false
      SHIFT_COST_ADDITIONAL: 30
      TIMESHEET_AUTO_ROUND: false
      TIMESHEET_AUTO_TIME_APPROVE: 0
      TIMESHEET_CLOSEST_BLOCK: 15
      TIMESHEET_MATCH_ROSTER: 0
      TIMESHEET_MATCH_ROSTER_TIME: 0
      TIMESHEET_MATURITY: 15
      TIMESHEET_ROUND_END_TIME: c15
      TIMESHEET_ROUND_END_TIME_RS: false
      TIMESHEET_ROUND_MEALBREAK: c15
      TIMESHEET_ROUND_MEALBREAK_RS: false
      TIMESHEET_ROUND_START_TIME: c15
      TIMESHEET_ROUND_START_TIME_RS: false
      WEEK_START: 1
- name: individual_location_settings
  endpoint:
    path: /api/v1/supervise/company/{id}/settings
    method: POST
- name: employee
  endpoint:
    path: /employees
    method: POST
- name: employee
  endpoint:
    path: /employees
    method: GET
    params:
      fieldMask: firstName,lastName,displayName
- name: employee
  endpoint:
    path: /employee:bulk
    method: POST
    data_selector: data
- name: employee
  endpoint:
    path: /api/employees
    method: POST
    data_selector: employees
    params: {}
- name: employee
  endpoint:
    path: /api/management/v2/employees/{id}
    method: PATCH
- name: employees_bulk
  endpoint:
    path: /api/management/v2/employees:bulk
    method: PATCH
- name: new_employee
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    data_selector: ''
    params: {}
- name: employee_saved
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    data_selector: ''
    params: {}
- name: employee_updated
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    data_selector: ''
    params: {}
- name: newsfeed_memo
  endpoint:
    path: /supervise/memo
    method: POST
- name: operational_unit
  endpoint:
    path: /operational-unit
    method: GET
    data_selector: data
- name: pay_rules
  endpoint:
    path: /pay-rules
    method: GET
    data_selector: records
    params: {}
- name: pay_rules_employee
  endpoint:
    path: /pay-rules-employee
    method: GET
    data_selector: records
    params: {}
- name: pay_rules_deputec_employment_contracts_as_pay_rules
  endpoint:
    path: /pay-rules-deputec-employment-contracts-as-pay-rules
    method: GET
    data_selector: records
    params: {}
- name: operational_unit
  endpoint:
    path: /operational-unit
    method: GET
    data_selector: records
    params: {}
- name: payperiod
  endpoint:
    path: /api/payperiod
    method: GET
    data_selector: data
- name: employee_data
  endpoint:
    path: /employees
    method: GET
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
- name: sales_data
  endpoint:
    path: /sales_data
    method: POST
- name: retrieve_sales_data
  endpoint:
    path: /sales_data
    method: GET
- name: clock_in_out
  endpoint:
    path: /clock_in_out
    method: POST
- name: timesheet
- name: leave
- name: compliance
- name: public_holiday
  endpoint:
    path: /docs/public-holiday
    method: GET
    data_selector: Data Element
- name: OperationalUnit
  endpoint:
    path: /api/v1/resource/OperationalUnit/INFO
    method: GET
    data_selector: fields
- name: Timesheet
  endpoint:
    path: /api/v1/Resource/Timesheet/INFO
    method: GET
    data_selector: fields
- name: resource_query
  endpoint:
    method: POST
    params:
      max: 20
      start: 50
- name: future_rosters
  endpoint:
    path: /api/v1/resource/Roster/QUERY
    method: POST
    data_selector: .
    params:
      search:
        s1:
          field: StartTime
          type: gt
          data: '{{ current_timestamp }}'
- name: employee_agreement
  endpoint:
    path: /EmployeeAgreement
    method: GET
    data_selector: base_rate
- name: employment_contract
  endpoint:
    path: /EmploymentContract
    method: GET
    data_selector: BasePayRule
- name: employee_agreement
  endpoint:
    path: /resource/EmployeeAgreement/QUERY
    method: POST
    data_selector: .
- name: sales_data
  endpoint:
    path: /api/v2/metrics/raw
    method: GET
    params:
      areas: '1'
      types: Sales
      start: '{starttime}'
      end: '{endtime}'
- name: metric
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: state_id_numbers
  endpoint:
    path: /resource/State/QUERY
    method: POST
    data_selector: .
    params:
      search:
        s1:
          field: State
          type: lk
          data: New Y%
- name: state
  endpoint:
    path: /api/v1/resource/State/QUERY
    method: POST
- name: labor_model_rules
  endpoint:
    path: /api/v2/labor-model/location/{locationid}/rules
    method: GET
    data_selector: data
- name: timesheet
  endpoint:
    path: /api/v1/resource/Timesheet/QUERY
    method: POST
    data_selector: .
    params:
      search:
        s1:
          field: StartTime
          data: 1651791600
          type: gt
- name: TimesheetPayReturn
  endpoint:
    path: /api/v1/resource/TimesheetPayReturn/QUERY
    method: POST
    data_selector: ''
    params:
      search:
        s1:
          field: Created
          data: 2022-06-01%
          type: gt
- name: timesheet_pay_return
  endpoint:
    path: /Resource/TimesheetPayReturn/QUERY
    method: POST
    data_selector: join
    params:
      search:
        s1:
          field: Id
          data: 1
          type: eq
      join:
      - TimesheetObject
- name: timesheet
  endpoint:
    path: /Timesheet
    method: GET
    data_selector: TimesheetObject
- name: roster_open
  endpoint:
    method: GET
    data_selector: records
- name: roster_swap_list
  endpoint:
    path: /resource/RosterSwap
    method: GET
    data_selector: ''
- name: roster_swap_info
  endpoint:
    path: /resource/RosterSwap/INFO
    method: GET
    data_selector: ''
- name: roster_swap_details
  endpoint:
    path: /resource/RosterSwap/{RosterSwapId}
    method: GET
    data_selector: ''
- name: roster_swap_query
  endpoint:
    path: /resource/RosterSwap/QUERY
    method: POST
    data_selector: ''
- name: roster
  endpoint:
    path: /roster
    method: GET
    data_selector: data
- name: labor_model_run
  endpoint:
    path: /api/v2/labor-model/location/{locationid}/run
    method: POST
    data_selector: data
- name: sales_data
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    path: /latest/salesdata
    method: GET
- name: schedule
  endpoint:
    path: /schedule
    method: GET
    data_selector: data
- name: operational_unit
  endpoint:
    path: /api/v1/resource/OperationalUnit/{id}
    method: POST
- name: employee_unavailability
  endpoint:
    path: /api/v1/supervise/unavail
    method: POST
    data_selector: ''
- name: unavailability_record
  endpoint:
    data_selector: .
- name: employee_management
  endpoint:
    path: /supervise
    method: POST
- name: add_employee
  endpoint:
    path: /management/add_employee
    method: POST
- name: add_location
  endpoint:
    path: /management/add_location
    method: POST
- name: update_rosters_timesheets
  endpoint:
    path: /management/update_rosters_timesheets
    method: POST
- name: adding_sales_data
  endpoint:
    path: /management/adding_sales_data
    method: POST
- name: employee
  endpoint:
    path: /api/v1/supervise/employee
    method: POST
- name: location_update
  endpoint:
    path: /api/v1/supervise/company/{id}
    method: POST
- name: list_awards_library
  endpoint:
    path: /payroll/listAwardsLibrary
    method: GET
    data_selector: ''
- name: specific_award
  endpoint:
    path: /payroll/listAwardsLibrary/{AwardCode}
    method: GET
    data_selector: ''
- name: set_award_from_library
  endpoint:
    path: /supervise/employee/{employeeid}/setAwardFromLibrary
    method: POST
    data_selector: ''
- name: bulk_assign_contract
  endpoint:
    path: /management/v2/employees:bulk
    method: POST
    data_selector: ''
- name: shifts
  endpoint:
    path: /api/v2/shifts
    method: GET
    data_selector: data
    params:
      default_time_range: previous_7_days
- name: shifts
  endpoint:
    path: /shifts
    method: GET
    data_selector: data
    params:
      published: 'TRUE'
      employee: '{employeerecordid}'
      start: YYYY-MM-DDTHH:MM:SS{timezone offset}HH:MM
      end: YYYY-MM-DDTHH:MM:SS{timezone offset}HH:MM
- name: shift
  endpoint:
    path: /shifts
    method: POST
    data_selector: shift
- name: delete_shift
  endpoint:
    path: /shifts
    method: DELETE
- name: get_shifts
  endpoint:
    path: /shifts
    method: GET
    params:
      published: true
      employee: '{employeeid}'
- name: get_shifts_with_time
  endpoint:
    path: /shifts
    method: GET
    params:
      published: true
      employee: '{employeeid}'
      start: YYYY-MM-DDTHH:MM:SS{timezone_offset}HH:MM
      end: YYYY-MM-DDTHH:MM:SS{timezone_offset}HH:MM
- name: post_shifts
  endpoint:
    path: /shifts
    method: POST
- name: shift_update
  endpoint:
    path: /shifts/{shiftid}
    method: PUT
- name: shift_delete
  endpoint:
    path: /shifts/{shiftid}
    method: DELETE
- name: shifts_bulk_create
  endpoint:
    path: /shifts:bulk
    method: POST
- name: shift
  endpoint:
    path: /shifts
    method: POST
    data_selector: items
    params: {}
- name: shifts
  endpoint:
    path: /shifts
    method: GET
    data_selector: data
    params:
      published: true
      employee: '{employeerecordid}'
      start: YYYY-MM-DDTHH:MM:SS{timezone offset}HH:MM
      end: YYYY-MM-DDTHH:MM:SS{timezone offset}HH:MM
- name: shifts_bulk_create
  endpoint:
    path: /shifts:bulk
    method: POST
    data_selector: items
- name: shift_update
  endpoint:
    path: /shifts/{shiftid}
    method: PUT
- name: shift_delete
  endpoint:
    path: /shifts/{shiftid}
    method: DELETE
- name: bulk_import_status
  endpoint:
    path: /api/operations/v2/operations/{operationid}
    method: GET
    data_selector: data
- name: delete_shift
  endpoint:
    path: null
    method: DELETE
    data_selector: null
- name: shifts
  endpoint:
    method: GET
- name: shifts
  endpoint:
    method: POST
- name: shifts
  endpoint:
    method: PUT
- name: smslog
  endpoint:
    path: /smslog
    method: GET
    data_selector: records
- name: start_timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/start
    method: POST
- name: timesheet
  endpoint:
    path: /timesheets
    method: GET
    data_selector: Timesheet
- name: timesheet_end
  endpoint:
    path: /api/v1/supervise/timesheet/end
    method: POST
- name: state
  endpoint:
    path: /docs/state
    method: GET
    data_selector: States
- name: stress_profile
  endpoint:
    path: /docs/stressprofile
    method: GET
    data_selector: data
- name: system_usage_balance
  endpoint:
    path: /docs/systemusagebalance
    method: GET
    data_selector: data
- name: system_usage_tracking
  endpoint:
    path: /docs/systemusagetracking
    method: GET
    data_selector: data
- name: task_group_setup
  endpoint:
    path: /TaskGroupSetup
    method: GET
    data_selector: records
- name: taskgroup
  endpoint:
    path: /taskgroup
    method: GET
    data_selector: ''
- name: task_opunit_config
  endpoint:
    path: /docs/taskopunitconfig
    method: GET
    data_selector: records
- name: task_setup
  endpoint:
    path: /TaskSetup
    method: GET
    data_selector: records
    params:
      GroupId: mandatory
      Type: mandatory
      Question: mandatory
- name: task
  endpoint:
    path: /api/v1/tasks
    method: GET
    data_selector: tasks
- name: team
  endpoint:
    path: /api/v1/team
    method: GET
    data_selector: data
    params: {}
- name: who_am_i
  endpoint:
    path: /path/to/whoami
    method: GET
- name: start_timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/start
    method: POST
- name: end_timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/end
    method: POST
- name: pause_timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/pause
    method: POST
- name: approve_timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/approve
    method: POST
- name: discard_timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/discard
    method: POST
- name: update_timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/update
    method: POST
- name: timesheet_details
  endpoint:
    path: /api/v1/supervise/timesheet/{id}/details
    method: GET
- name: timesheet_insert
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    params:
      Topic: Timesheet.Insert
      Enabled: 1
      Type: URL
      Address: https://webhook.site/a90b0a6b-43e9-4755-8bf5-3518980d373a
- name: timesheet_save
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    params:
      Topic: Timesheet.Save
      Enabled: 1
      Type: URL
      Address: https://webhook.site/a90b0a6b-43e9-4755-8bf5-3518980d373a
- name: timesheet_update
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    params:
      Topic: Timesheet.Update
      Enabled: 1
      Type: URL
      Address: https://webhook.site/a90b0a6b-43e9-4755-8bf5-3518980d373a
- name: timesheet_insert_filtered
  endpoint:
    path: /api/v1/resource/Webhook
    method: POST
    params:
      Topic: Timesheet.Insert
      Enabled: 1
      Type: URL
      Filters:
        isInProgress: 1
      Address: https://webhook.site/a90b0a6b-43e9-4755-8bf5-3518980d373a
- name: timesheetpayreturn
  endpoint:
    path: /timesheetpayreturn
    method: GET
    data_selector: data
- name: timesheet
  endpoint:
    path: /timesheets
    method: GET
    params:
      state:
      - draft
      - approved
      - approved for payroll
- name: timesheet
  endpoint:
    path: /api/v1/timesheet
    method: GET
    data_selector: timesheets
- name: training_record
  endpoint:
    path: /trainingrecord
    method: GET
    data_selector: data
- name: training_module
  endpoint:
    path: /training
    method: GET
    data_selector: data
- name: location
  endpoint:
    path: /api/v1/supervise/company/{id}
    method: POST
- name: timesheet
  endpoint:
    path: /api/v1/supervise/timesheet/update
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet_update
  endpoint:
    path: /api/v1/supervise/timesheet/update
    method: POST
- name: employee_update
  endpoint:
    path: /api/management/v2/employees/{id}
    method: PATCH
    data_selector: result.data
- name: leave_accrual
  endpoint:
    path: /api/v1/resource/LeaveAccrual
    method: POST
    data_selector: .
    params:
      Employee: '{{ Employee }}'
      LeaveRule: '{{ LeaveRule }}'
      TransactionDate: '{{ TransactionDate }}'
      Hours: '{{ Hours }}'
- name: update_employee
  endpoint:
    path: /api/v1/supervise/employee/{id}
    method: POST
- name: employmentcontract
  endpoint:
    path: /resource/employmentcontract/QUERY
    method: POST
- name: employment_contract
  endpoint:
    path: /api/v1/supervise/employee/{employeeid}/setAwardFromLibrary
    method: POST
- name: update_employee_pay_rate
  endpoint:
    path: (path not specified in the documentation)
    method: POST
    data_selector: (response data structure not explicitly defined for extraction)
    params:
      strCountryCode: au
      strAwardCode: casual-2021-02-12-ratesperday-1
      arrOverridePayRules:
      - Id: 20350
        HourlyRate: 90
- name: labor_model
  endpoint:
    path: /api/v2/location/{locationid}/rules/{labormodelid}
    method: PUT
    data_selector: data
    params: {}
- name: sample_data
  endpoint:
    method: GET
    data_selector: data
- name: who_am_i
  endpoint:
    path: /api/v1/me
    method: GET
- name: oauth_client_creation
  endpoint:
    path: /my/oauth_clients
    method: POST
- name: oauth_login
  endpoint:
    path: /my/oauth/login
    method: GET
    params:
      client_id: '{{ dlt.secrets[''deputy_client_id''] }}'
      redirect_uri: '{{ dlt.secrets[''deputy_redirect_uri''] }}'
      response_type: code
      scope: longlife_refresh_token
- name: oauth_specific_client
  endpoint:
    path: /exec/devapp/oauth_clients
    method: GET
- name: who_am_i
  endpoint:
    path: /api/v1/me
    method: GET
- name: autobuild_shifts
  endpoint:
    path: /api/v1/supervise/roster/autobuild
    method: POST
    params:
      arrOpUnitIds:
      - 431
      intStartTimestamp: 1669813200
      intEndTimestamp: 1670417999
      freq: 0.25
      base: RequiredStaff
      lengths:
      - 4
      - 8
- name: check_autobuild
  endpoint:
    path: /api/v1/supervise/roster/checkautobuild/{autobuildid}
    method: GET
- name: autofill_shifts
  endpoint:
    path: /api/v1/supervise/roster/autofill
    method: POST
    params:
      arrRosterIds:
      - 1
      - 2
      arrEmpIds:
      - 1
      - 2
      - 3
      - 4
      - 5
      searchDepth: 10
      config:
        cost: 1
        equality: 1
        prevmatch: 1
- name: check_autofill_status
  endpoint:
    path: /api/v1/supervise/roster/checkautofill/{tokenid}
    method: GET
- name: company
  endpoint:
    path: /webhooks/company
    method: POST
- name: comment
  endpoint:
    path: /webhooks/comment
    method: POST
- name: employee
  endpoint:
    path: /webhooks/employee
    method: POST
- name: employee_availability
  endpoint:
    path: /webhooks/employee_availability
    method: POST
- name: leave
  endpoint:
    path: /webhooks/leave
    method: POST
- name: memo
  endpoint:
    path: /webhooks/memo
    method: POST
- name: operational_unit
  endpoint:
    path: /webhooks/operational_unit
    method: POST
- name: roster
  endpoint:
    path: /webhooks/roster
    method: POST
- name: roster_open
  endpoint:
    path: /webhooks/roster_open
    method: POST
- name: roster_swap
  endpoint:
    path: /webhooks/roster_swap
    method: POST
- name: roster_publish
  endpoint:
    path: /webhooks/roster_publish
    method: POST
- name: task
  endpoint:
    path: /webhooks/task
    method: POST
- name: timesheets
  endpoint:
    path: /webhooks/timesheets
    method: POST
- name: timesheet_pay_return
  endpoint:
    path: /webhooks/timesheet_pay_return
    method: POST
- name: training_record
  endpoint:
    path: /webhooks/training_record
    method: POST
- name: user_login
  endpoint:
    path: /webhooks/user_login
    method: POST
- name: timesheet_export_begin
  endpoint:
    path: /webhooks/timesheet_export_begin
    method: POST
- name: timesheet_export_end
  endpoint:
    path: /webhooks/timesheet_export_end
    method: POST
- name: device_registration
  endpoint:
    path: /webhooks/device_registration
    method: POST
- name: timesheet_initiated
  endpoint:
    method: POST
- name: timesheet_pending
  endpoint:
    method: POST
- name: timesheet_approved
  endpoint:
    method: POST
- name: pay_approved
  endpoint:
    method: POST
- name: webhook
  endpoint:
    path: /docs/webhook
    method: POST
    data_selector: data
    params:
      Topic: string
      Address: string
      Type: string
      Enabled: bit
- name: account_management
  endpoint:
    path: /api/accounts
    method: POST
    params:
      action:
      - create
      - convert
      - cancel
- name: timesheets
  endpoint:
    params:
      incremental: status
- name: people_sync
  endpoint:
    params:
      incremental: locations
- name: point_of_sale
  endpoint:
    params:
      incremental: sales_sync
- name: timesheets
  endpoint:
    method: GET
- name: timesheets
  endpoint:
    method: POST
- name: employee_data
  endpoint:
    method: GET
- name: employee_data
  endpoint:
    method: POST
- name: leave_requests
  endpoint:
    method: GET
- name: leave_requests
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: agreed_hours
  endpoint:
    path: /api/v2/agreed_hours
    method: GET
- name: sales_metrics
  endpoint:
    path: /api/v2/sales_metrics
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: employee
  endpoint:
    method: POST
    params: {}
- name: timesheet
  endpoint:
    method: GET
    params: {}
- name: timesheet
  endpoint:
    method: POST
    params: {}
- name: sales_data
  endpoint:
    method: POST
    params: {}
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: sales_data
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
    path: /api/v2/employee
- name: employee
  endpoint:
    method: POST
    path: /api/v2/employee
- name: timesheet
  endpoint:
    method: GET
    path: /api/v2/timesheet
- name: timesheet
  endpoint:
    method: POST
    path: /api/v2/timesheet
- name: sales_data
  endpoint:
    method: POST
    path: /api/v2/sales_data
- name: address
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: shift
  endpoint:
    method: GET
- name: shift
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
    params: {}
- name: timesheet
  endpoint:
    method: GET
    params: {}
- name: sales_data
  endpoint:
    method: GET
    params: {}
- name: location
  endpoint:
    method: GET
    params: {}
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: employees
  endpoint:
    path: /api/v2/employees
    method: GET
- name: timesheets
  endpoint:
    path: /api/v2/timesheets
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
    data_selector: data
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
    data_selector: data
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
    data_selector: data
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: labor_model_rule
  endpoint:
    method: POST
    params: {}
- name: employee
  endpoint:
    method: GET
    params: {}
- name: timesheet
  endpoint:
    method: GET
    params: {}
- name: sales_data
  endpoint:
    method: GET
    params: {}
- name: location
  endpoint:
    method: GET
    params: {}
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: custom_app_data
  endpoint:
    path: /customappdata
- name: Employee
  endpoint:
    method: GET
- name: Timesheet
  endpoint:
    method: GET
- name: SalesData
  endpoint:
    method: GET
- name: CustomFieldData
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: POST
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: shift
  endpoint:
    path: /api/v2/shift
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
    path: /api/v2/employee
- name: timesheet
  endpoint:
    method: GET
    path: /api/v2/timesheet
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: Employee
  endpoint:
    method: GET
- name: Timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: Employee
  endpoint:
    method: GET
- name: Employee
  endpoint:
    method: POST
- name: Employee
  endpoint:
    method: PUT
- name: Timesheet
  endpoint:
    method: GET
- name: Timesheet
  endpoint:
    method: POST
- name: Timesheet
  endpoint:
    method: PUT
- name: SalesData
  endpoint:
    method: POST
- name: Location
  endpoint:
    method: POST
- name: Location
  endpoint:
    method: PUT
- name: Location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
    data_selector: data
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
    data_selector: data
- name: location
  endpoint:
    path: /api/v2/location
    method: GET
    data_selector: data
- name: Employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: Timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
    params: {}
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: employee_hr_payroll_data
  endpoint:
    path: /api/v2/employee/hr_payroll
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: leave_accrual
  endpoint:
    method: GET
- name: Employee
  endpoint:
    method: GET
- name: Employee
  endpoint:
    method: POST
- name: Timesheet
  endpoint:
    method: GET
- name: Timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: Employee
  endpoint:
    method: GET
- name: Timesheet
  endpoint:
    method: GET
- name: Employee
  endpoint:
    method: GET
- name: Timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: sales_data
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
    path: /employees
- name: timesheet
  endpoint:
    method: GET
    path: /timesheets
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: Employees
  endpoint:
    method: GET
- name: Timesheets
  endpoint:
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/timesheets
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: POST
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: POST
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: Employee
  endpoint:
    method: GET
- name: Employee
  endpoint:
    method: POST
- name: Employee
  endpoint:
    method: PUT
- name: Timesheet
  endpoint:
    method: GET
- name: Timesheet
  endpoint:
    method: POST
- name: Timesheet
  endpoint:
    method: PUT
- name: Location
  endpoint:
    method: POST
- name: Location
  endpoint:
    method: PUT
- name: Location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
    data_selector: data
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
    data_selector: timesheets
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
    data_selector: sales
- name: public_holiday
  endpoint:
    path: /api/v2/public_holiday
    method: GET
    data_selector: holidays
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: labor_model_rules
  endpoint:
    path: /api/v2/labor-model-rules
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: POST
- name: timesheet
  endpoint:
    path: /api/timesheets
    method: GET
- name: timesheet
  endpoint:
    path: /api/timesheets
    method: POST
- name: sales_data
  endpoint:
    path: /api/sales
    method: GET
- name: sales_data
  endpoint:
    path: /api/sales
    method: POST
- name: roster
  endpoint:
    path: /api/rosters
    method: GET
- name: roster
  endpoint:
    path: /api/rosters
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: shift
  endpoint:
    method: GET
- name: shift
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: POST
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: location
  endpoint:
    path: /api/v2/location
    method: POST
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
    path: /api/v2/employee/{id}
- name: employee_hr_payroll_data
  endpoint:
    method: GET
    path: /api/v2/employee/{id}/hr_payroll
- name: timesheet
  endpoint:
    method: GET
    path: /api/v2/timesheet
- name: sales_data
  endpoint:
    method: GET
    path: /api/v2/sales_data
- name: location
  endpoint:
    method: POST
    path: /api/v2/location
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/timesheets
    method: GET
- name: sms_log
  endpoint:
    path: /smslog
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: location
  endpoint:
    path: /api/v2/location
    method: GET
- name: employees
  endpoint:
    method: GET
- name: employees
  endpoint:
    method: POST
- name: timesheets
  endpoint:
    method: GET
- name: timesheets
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: POST
- name: locations
  endpoint:
    method: POST
- name: locations
  endpoint:
    method: PUT
- name: locations
  endpoint:
    method: DELETE
- name: webhooks
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: timesheet_pay_return
  endpoint:
    path: /timesheetpayreturn
    method: GET
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/salesdata
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: POST
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: POST
- name: location
  endpoint:
    path: /api/v2/location
    method: POST
- name: location
  endpoint:
    path: /api/v2/location
    method: GET
- name: location
  endpoint:
    path: /api/v2/location
    method: PUT
- name: location
  endpoint:
    path: /api/v2/location
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: POST
- name: sales_data
  endpoint:
    method: GET
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: POST
- name: employee
  endpoint:
    method: PUT
- name: timesheet
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: POST
- name: timesheet
  endpoint:
    method: PUT
- name: sales_data
  endpoint:
    method: POST
- name: location
  endpoint:
    method: POST
- name: location
  endpoint:
    method: PUT
- name: location
  endpoint:
    method: DELETE
- name: employee
  endpoint:
    path: /api/v2/employee
    method: GET
- name: timesheet
  endpoint:
    path: /api/v2/timesheet
    method: GET
- name: sales_data
  endpoint:
    path: /api/v2/sales_data
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: employee
  endpoint:
    method: GET
- name: timesheet
  endpoint:
    method: GET
- name: locations
  endpoint:
    path: /v1/resource/Company
    method: GET
- name: agreed_hours
  endpoint:
    path: /api/v2/agreed_hours
    method: GET
- name: sales_metrics
  endpoint:
    path: /api/v2/sales_metrics
    method: GET
notes:
- Data includes mandatory and optional fields for employee details
- Best practice to always send the relevant daily timestamp for flexibility in budget
  settings
- Bulk API updates may not be immediately visible in Deputy
- For real-time saving of wage data, use the regular API URL instead of the bulk method.
- Ensure that AWS SQS is not set up for FIFO unless MessageGroupId is used
- 256kb data limit on SQS; not suitable for large datasets like Roster.Publish or
  Timesheet.Export
- Requires setup of a client on the Deputy account to obtain Client ID and Client
  Secret
- Scope required for token generation is 'longlife_refresh_token'
- Categories/Journals in Deputy relate to entries in the Deputy system made by managers
  about individual employees or general work tasks.
- Company Periods are crucial for the Enterprise product and involve significant data
  like pay periods
- Requires Bearer Token for authentication
- An error will be thrown if you try to upgrade an account that is already Premium,
  or cancel an account that is on trial or expired.
- 'Deputy embedded accounts have three editions: SUBSCRIPTION_PRO_TRIAL, SUBSCRIPTION_FREE,
  SUBSCRIPTION_PAID_PRO_PREMIUM.'
- Requires third party cookies to be enabled for iFramed accounts
- Access token has a lifespan of 86400 seconds
- If the Deputy sessions expires before the Partner session, users will see the Deputy
  login screen; ensure synchronization of session management
- Authentication can be handled by either a permanent token or OAuth 2.0
- Every customer runs on their own subdomain; API endpoint varies per installation
- Returned data is always in JSON format
- POST data is generally included as a string
- 'There are two versions of Deputy: Premium and Enterprise, with Enterprise possibly
  having custom data'
- Additional security requirements and approval needed to access this API
- JWT used in X-DP-HR-ONB-TOKEN header for additional security
- Only supports statuses SUBMITTED or APPROVED for data retrieval
- Up to 5 Advisor role accounts can be added to a business without accruing a charge
- Webhooks do not perform catch-up tasks
- If a Webhook is disabled, events during that period are lost and not sent when re-enabled
- Memos can be attached to employee profiles, newsfeed posts, and other areas
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Operates with the Deputy login so no separate OAuth process is required
- Only one public application can be hosted at a time
- Integration with payroll systems requires syncing employee data and timesheets
- Uses JWT for authentication with RS256 algorithm
- Partners must create a Once Profile and an OAuth client to interact with the API
- Secured via an Oauth 2.0 process using a combination of Implicit and code flow
- Web hooks available for most endpoints with functionality including insert, update,
  delete & modify
- Advanced Employee API requires additional security checks
- INFO option retrieves data elements and possible joins for objects
- API is in BETA, check documentation regularly for updates
- Timezone offset needs to be encoded for URL
- Permanent token only displayed once; must be saved securely upon creation.
- Timesheet data includes many non-mandatory fields that may be null
- Documentation is limited and may require further details for complete integration
  setup
- The response format for adding timesheets is similar to retrieving existing timesheets
- Basic pay rates cannot be updated via the API
- Deputy does not guarantee the accuracy or completeness of the pay rules library
- No authentication required; public API access
- Access tokens expire in 86400 seconds (24 hours); must refresh periodically.
- Authentication process is tied to specific Deputy install; cannot be transferred
  across different installs.
- Refresh tokens are invalidated when used; new refresh token is provided upon each
  access token renewal.
- API works asynchronously for autofill process
- Possible timeouts when using high searchDepth with significant data
- Accounts can be embedded into the partner via iFrame
- Users can sign into Deputy mobile app via their partner login
- Integration types include Timesheets, People Sync, and Point of Sale which have
  specific use cases and best practices.
- People Sync can involve complex features like two-way sync, leave balance sync,
  and pay rate sync.
- Authentication can be handled by either a permanent token or an OAuth 2.0 login
  process
- Each customer has their own subdomain which forms part of the API endpoint
- Maximum records per response is 500
- API response format is JSON
- POST data should be included as a string
- Uses OAuth2 for authentication
- Uses OAuth 2.0 for authentication
- Uses Oauth 2.0
- Uses OAuth2 with refresh token
- Deputy addresses are stored as objects linked to other records
- Uses OAuth 2.0 with refresh token
- Using Oauth 2.0 for authentication
- Uses OAuth2 with refresh token for authentication
- API supports both retrieving and posting data for employees and timesheets
- Using Oauth 2.0 for authentication.
- Uses OAuth 2.0
- Uses OAuth2 with refresh token for authenticating API calls
- Uses OAuth 2.0 for authentication.
- Using OAuth 2.0 for authentication
- Every Deputy customer runs on their own subdomain.
- Authentication is handled by either a permanent token or Oauth 2.0 login process.
- Returned data is always in JSON format.
- POST data is generally included as a string.
errors:
- '401 Unauthorized: Check if the OAuth token is missing or expired'
- success: false
- MessageGroupId Error: Ensure correct setup for FIFO queues
- code: 400
  message: Missing partner
  advice: Ensure a partner name is provided as it is mandatory
- code: 400
  message: Missing first name
  advice: Ensure a first name is provided as it is mandatory
- code: 400
  message: Missing last name
  advice: Ensure a last name is provided as it is mandatory
- code: 400
  message: Missing email
  advice: Ensure an email is provided as it is mandatory
- code: 400
  message: Missing portfolio name
  advice: Ensure a business/portfolio name is provided as it is mandatory
- code: 400
  message: Missing external ID
  advice: Ensure an external name for the business is provided as it is mandatory
- code: 400
  message: Duplicated external ID
  advice: Check if Deputy account is already linked to this external ID and take appropriate
    action
- code: 400
  message: Duplicated user email
  advice: Address the issue that this email already has a Deputy account and contact
    Deputy team if needed
- code: 500
  message: Internal Error
  advice: Something went wrong - please reach out to the Deputy team
- code: 500
  message: Error in provisioning partner
  advice: Something went wrong - please reach out to the Deputy team
- code: 400
  message: Attempted upgrade on a converted account
  advice: Only accounts in downgraded or cancelled trials may be converted
- code: 400
  message: Attempted cancellation on a free/non converted account
  advice: Only accounts in downgraded or cancelled trials may be converted
- code: 400
  message: Attempted conversion or cancellation on a non-embedded account
  advice: Only accounts created by a specific embedded partner can be upgraded/downgraded
    by that embedded partner
- code: 400
  message: Attempted cancellation on an invalid hostname
  advice: Ensure the hostname provided is a valid Deputy URL
- error: null when no errors occur
- 401 Unauthorized: Check if the access token is expired or invalid
- '400: Employee not onboarded using the Deputy HR onboarding system or data requested
  for unapproved states'
- Unauthorized: Ensure valid OAuth token is used
- 'API deprecation: At least six months notice provided before any deprecation'
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- 400 Bad Request: Handle according to specific error message
- 401 Unauthorized: User is not allowed to edit this timesheet
- 409 Conflict: User already has another timesheet in progress
- 412 Precondition Failed: Handle according to specific error message
- 500 Internal Server Error: Contact support for assistance
- code: 400
  message: Cannot change contact details to employee who has accepted invitation
- Basic pay rates can't be updated: Contact [email protected] to request feature
- 401 Unauthorized: Token might have expired or user removed consent; require re-authentication.
- Common errors: Support inquiries should be directed to support email
- 401 Unauthorized: Check OAuth2 configuration and scopes
- Common errors & supporting your customers
- Unauthorized: Recheck OAuth scopes or token expiration
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- 401 Unauthorized: Check OAuth 2.0 credentials or token validity
- Common errors & supporting your customers.
- QUERY_TIMEOUT: Increase selectivity of the query
- 401 Unauthorized: Check the validity of the OAuth token
- 401 Unauthorized: Check OAuth credentials and permissions
- 401 Unauthorized: Check OAuth scopes or token validity
- 401 Unauthorized: Check the OAuth token validity or scopes
- 401 Unauthorized: Check if OAuth tokens are correctly setup and not expired
- 401 Unauthorized: Check OAuth scopes or refresh the access token
- 401 Unauthorized: Check OAuth scopes or token expiration
- 401 Unauthorized: Check OAuth credentials or token validity
- 401 Unauthorized: Check authentication credentials
- 401 Unauthorized: Check the OAuth 2.0 configuration
auth_info:
  mentioned_objects:
  - OAuthToken
  - OauthToken
  - aws_access_key_id
  - aws_secret_access_key
  - Bearer Token
  - CompanyPeriod
  - accessToken
  - refreshToken
  - Employee
  - PayPointObject
  - ContractObject
  - SalaryPayRuleObject
  - PayPeriodObject
  - Resource API
  - JWT
  - Private Key
  - Advisor
  - Company
  - Role
  - Team
  - CompanyObject
  - ParentOperationalUnit
  - AddressObject
  - ContactObject
  - RosterActiveHoursScheduleObject
  - EmployeeSalaryOpunits
  - OperationalUnit
  - ManagementEmployeeOperationalUnit
  - TrainingModule
  - OperationUnitDeputecPayRulesesAsOperationUnit
  - OperationUnitDeputecPublicHolidaiesAsOperationUnit
  - RosterEmployeeOperationalUnit
  - TaskGroupOpUnit
  - API support team
  - OAuth client
  - Once Profile
  - EmployeeObject
  - OperationalUnitObject
  - RosterOpen
  - TaskSetup
  - TaskGroupSetup
  - Schedule
  - EmployeeAgreementObject
  - RosterObject
  - Leave
  - LeaveRuleObject
  - Paycycle
  - CustomFieldDataObject
  - TrainingRecord
  - OauthClient
  - Access Token
  - Refresh Token
  - SSO
  - permanent token
  - Oauth 2.0 login process
  - Oauth 2.0
  - OAuth 2.0
  - EmploymentContract
  - EmployeeAgreement
  - Bearer
client:
  base_url: https://{install}.{geo}.deputy.com/api/v1
  auth:
    type: unknown
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://api.usw2.deputy.com/connect/v1/partner/{partnername}/auth/token
    client_id: '{{ dlt.secrets[''deputy_client_id''] }}'
    client_secret: '{{ dlt.secrets[''deputy_client_secret''] }}'
    refresh_token: undefined
  headers:
    Accept: application/json
    aws_access_key_id: '{{ dlt.secrets[''aws_access_key_id''] }}'
    aws_secret_access_key: '{{ dlt.secrets[''aws_secret_access_key''] }}'
    Content-Type: application/json
    Authorization: Bearer {{ dlt.secrets['deputy_access_token'] }}
    X-Deputy-Secret: Checksum of the data payload which is a sha256 hmac of the body,
      salted with a secret key
    X-Deputy-Webhook-Callback: The resource URL of the webhook that generated this
      hook call
    X-Deputy-Generation-Time: Unix timestamp of when the webhook was sent
  paginator:
    type: undefined
    cursor_path: undefined
    cursor_param: undefined
    page_size_param: undefined
    default_page_size: undefined
source_metadata: null
