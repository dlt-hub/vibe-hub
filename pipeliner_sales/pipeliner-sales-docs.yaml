resources:
- name: Products
  endpoint:
    path: /entities/Products/batch-modify
    method: POST
    data_selector: data
- name: ProductCategories
  endpoint:
    path: /entities/ProductCategories
    method: GET
    data_selector: ''
- name: ProductPriceLists
  endpoint:
    path: /entities/ProductPriceLists
    method: GET
    data_selector: ''
- name: OpptyProductRelations
  endpoint:
    path: /entities/OpptyProductRelations
    method: POST
    data_selector: ''
- name: products
  endpoint:
    path: /spaces/<space_id>/entities/Products/batch-modify
    method: POST
    data_selector: data
- name: product_categories
  endpoint:
    path: /entities/ProductCategories
    method: GET
    data_selector: ''
- name: product_price_lists
  endpoint:
    path: /entities/ProductPriceLists
    method: GET
    data_selector: ''
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: GET
- name: contacts
  endpoint:
    path: /entities/Contacts
    method: GET
- name: opportunities
  endpoint:
    path: /entities/Opportunities
    method: GET
- name: leads
  endpoint:
    path: /entities/Leads
    method: GET
- name: appointments
  endpoint:
    path: /entities/Appointments
    method: GET
- name: tasks
  endpoint:
    path: /entities/Tasks
    method: GET
- name: products
  endpoint:
    path: /entities/Products
    method: GET
- name: product_line_items
  endpoint:
    path: /entities/OpptyProductRelations
    method: GET
- name: cloud_objects
  endpoint:
    path: /entities/CloudObjects
    method: GET
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: GET
- name: contacts
  endpoint:
    path: /entities/Contacts
    method: GET
- name: opportunities
  endpoint:
    path: /entities/Opportunities
    method: GET
- name: leads
  endpoint:
    path: /entities/Leads
    method: GET
- name: appointments
  endpoint:
    path: /entities/Appointments
    method: GET
- name: tasks
  endpoint:
    path: /entities/Tasks
    method: GET
- name: products
  endpoint:
    path: /entities/Products
    method: GET
- name: product_line_items
  endpoint:
    path: /entities/OpptyProductRelations
    method: GET
- name: cloud_objects
  endpoint:
    path: /entities/CloudObjects
    method: GET
- name: MasterRights
  endpoint:
    path: /entities/MasterRights
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
- name: Clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
- name: SalesUnits
  endpoint:
    path: /entities/SalesUnits
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
- name: MasterRights
  endpoint:
    path: /entities/MasterRights
    method: GET
    data_selector: data
    params:
      include-deleted: true
      first: 30
- name: Clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: true
      first: 30
- name: SalesUnits
  endpoint:
    path: /entities/SalesUnits
    method: GET
    data_selector: data
    params:
      include-deleted: true
      first: 30
- name: fields
  endpoint:
    path: /entities/Fields
    method: POST
    data_selector: data
    params: {}
- name: fields
  endpoint:
    path: /api/v100/rest/spaces/<space_id>/entities/Fields
    method: GET
    data_selector: data
- name: fields
  endpoint:
    path: /entities/Fields
    method: POST
    data_selector: data
    params: {}
- name: Clients
  endpoint:
    path: /entities/Clients
    method: GET
    params:
      include-deleted: 'true'
      first: '-8971250'
      last: '-8971250'
      before: 'true'
      after: 'true'
      expand: owner,sales_unit,account_relations.account
      order-by: created,-modified
      load-only: id,default_unit_id
      filter: email=john.doe@example.com
- name: fields
  endpoint:
    path: /entities/Fields
    method: GET
    data_selector: data
    params:
      first: 30
- name: Clients
  endpoint:
    path: /entities/Clients
    method: GET
    params:
      include-deleted: 'true'
- name: Pipelines
  endpoint:
    path: /entities/Pipelines
    method: GET
    params:
      expand: steps
- name: Opportunities
  endpoint:
    params:
      after: end_cursor
- name: batch_modify
  endpoint:
    path: /entities/{{Entity-name}}/batch-modify
    method: POST
    data_selector: records
    params:
      rollback-method: '0'
- name: batch_delete
  endpoint:
    path: /entities/{{Entity-name}}/batch-delete
    method: POST
    data_selector: records
    params: {}
- name: Webhooks
  endpoint:
    path: /entities/Webhooks
    method: POST
    data_selector: data
    params: {}
- name: batch_modify
  endpoint:
    path: /entities/{{Entity-name}}/batch-modify
    method: POST
- name: batch_delete
  endpoint:
    path: /entities/{{Entity-name}}/batch-delete
    method: POST
- name: Webhooks
  endpoint:
    path: /entities/Webhooks
    method: POST
    data_selector: data
    params: {}
- name: clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: false
      first: 30
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: POST
    data_selector: data
    params: {}
- name: industry_fields
  endpoint:
    path: /entities/Fields
    method: GET
    data_selector: data
    params:
      expand: data_set
      load-only: api_name,data_set.option_name,data_set.id
      filter[api_name]: industry_id
- name: clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
- name: clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
      first: 30
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: POST
    data_selector: data
- name: Contacts
  endpoint:
    path: /entities/Contacts
    method: POST
    data_selector: data
    params:
      validation-level: integer
- name: Clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      load-only: id,default_unit_id
      filter[email]: john.doe@example.com
- name: Accounts
  endpoint:
    path: /entities/Accounts
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
      filter[email1]: info@ziemann-and-sons.de
- name: opportunity
  endpoint:
    path: /entities/Opportunities
    method: POST
    data_selector: records
- name: contact
  endpoint:
    path: /entities/Contacts
    method: POST
    data_selector: data
    params: {}
- name: opportunity
  endpoint:
    path: /entities/Opportunities
    method: POST
    data_selector: records
    params: {}
- name: Clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: false
- name: Pipelines
  endpoint:
    path: /entities/Pipelines
    method: GET
    data_selector: data
    params:
      include-deleted: false
- name: Accounts
  endpoint:
    path: /entities/Accounts
    method: GET
    data_selector: data
    params:
      include-deleted: false
- name: ContactAccountRelations
  endpoint:
    path: /entities/ContactAccountRelations
    method: GET
    data_selector: data
    params:
      include-deleted: false
- name: Currencies
  endpoint:
    path: /entities/Currencies
    method: GET
    data_selector: data
    params:
      include-deleted: false
- name: opportunity
  endpoint:
    path: /spaces/<space_id>/entities/Opportunities
    method: POST
    data_selector: data
- name: clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      first: 30
      include-deleted: false
- name: pipelines
  endpoint:
    path: /entities/Pipelines
    method: GET
    data_selector: data
    params:
      first: 30
      include-deleted: false
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: GET
    data_selector: data
    params:
      include-deleted: false
- name: contact_account_relations
  endpoint:
    path: /entities/ContactAccountRelations
    method: GET
    data_selector: data
    params:
      first: 30
      include-deleted: false
- name: currencies
  endpoint:
    path: /entities/Currencies
    method: GET
    data_selector: data
    params:
      filter[is_base]: 'true'
- name: Clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: 'false'
      first: 30
- name: CustomEntityType
  endpoint:
    path: /entities/{custom_entity_api_name}Type
    method: GET
    data_selector: data
- name: CustomEntities
  endpoint:
    path: /entities/{custom_entity_api_name}
    method: POST
    data_selector: data
- name: opportunity
  endpoint:
    path: /entities/Opportunities
    method: POST
    data_selector: data
    params: {}
- name: Opportunities
  endpoint:
    path: /api/v100/rest/spaces/{space_id}/entities/Opportunities
    method: GET
    data_selector: data
    params:
      include-deleted: boolean
      first: integer
      last: integer
      before: string
      after: string
      expand: string
      order-by: string
      filter: object
      filter-op: object
- name: CustomEntities
  endpoint:
    path: /api/v100/rest/spaces/{space_id}/entities/{custom_entity_api_name}
    method: GET
    data_selector: data
    params:
      include-deleted: boolean
      first: integer
      last: integer
      before: string
      after: string
      expand: string
      order-by: string
      filter: object
      filter-op: object
- name: CustomEntities.update
  endpoint:
    path: /api/v100/rest/spaces/{space_id}/entities/{custom_entity_api_name}/{id}
    method: PATCH
    data_selector: data
    params:
      validation-level: integer
      name: string
      owner_id: string
      share_mode: integer
      type_id: string
      unit_id: string
      sharing_units: object[]
      sharing_clients: object[]
      documents: object[]
      revision: integer
- name: clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: false
      first: 30
- name: custom_entity_types
  endpoint:
    path: /entities/{custom_entity_api_name}Type
    method: GET
    data_selector: data
- name: create_custom_entity
  endpoint:
    path: /entities/{custom_entity_api_name}
    method: POST
    data_selector: data
- name: CloudObjectRelations
  endpoint:
    path: /entities/CloudObjectRelations
    method: POST
    data_selector: data
    params: {}
- name: Accounts
  endpoint:
    path: /entities/Accounts
    method: GET
    data_selector: records
    params:
      include-deleted: 'false'
      filter[email1]: info@ziemann-and-sons.de
- name: opportunities
  endpoint:
    path: /api/v100/rest/spaces/{space_id}/entities/Opportunities
    method: GET
    data_selector: data
    params:
      first: 30
- name: custom_entities
  endpoint:
    path: /api/v100/rest/spaces/{space_id}/entities/{custom_entity_api_name}
    method: GET
    data_selector: data
    params:
      first: 30
- name: merge_accounts
  endpoint:
    path: /entities/Accounts/merge
    method: POST
    data_selector: data
    params: {}
- name: merge_contacts
  endpoint:
    path: /entities/Contacts/merge
    method: POST
    data_selector: data
    params: {}
- name: cloud_object_relation
  endpoint:
    path: /entities/CloudObjectRelations
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /entities/Accounts
    method: GET
    data_selector: records
    params:
      include-deleted: 'false'
      filter[email1]: info@ziemann-and-sons.de
- name: merge_accounts
  endpoint:
    path: /entities/Accounts/merge
    method: POST
    data_selector: data
    params: {}
- name: merge_contacts
  endpoint:
    path: /entities/Contacts/merge
    method: POST
    data_selector: data
    params: {}
- name: clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: false
      first: 30
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: POST
    data_selector: data
    params: {}
- name: fields
  endpoint:
    path: /entities/Fields
    method: GET
    data_selector: data
    params:
      expand: data_set
      load-only: api_name,data_set.option_name,data_set.id
      filter[api_name]: industry_id
- name: clients
  endpoint:
    path: /entities/Clients
    method: GET
    data_selector: data
    params:
      include-deleted: false
      first: 30
- name: accounts
  endpoint:
    path: /entities/Accounts
    method: POST
    data_selector: data
notes:
- Use 1 for All Pipelines when creating products.
- Uses OAuth2 for authentication.
- User Name and Password are used for Basic Authentication and are generated only
  once, so store them carefully
- Users can be assigned only to one Role.
- Every Entity has to be connected with the Sales Unit.
- Some fields can be created through API.
- Not every field can be created through API.
- Uses OAuth2 with refresh token — requires setup of connected app in Pipeliner Sales
- API parameters may vary from endpoint to endpoint.
- All dates are stored in the UTC timezone.
- Data are formatted by standard ISO 8601.
- If you include Timezone in the request header, Pipeliner will automatically convert
  dates to the specified timezone.
- Pipeliner sends a maximum of 100 records per request. The limit can be changed by
  API parameter `first`.
- All dates are stored in the UTC timezone. Data are formatted by standard ISO 8601
- 'Pipeliner sends a maximum of 100 (Default: 30) records per request. The limit can
  be changed by API parameter first.'
- It is recommended to use Bulk Create, Update, Delete methods when working with a
  lot of data at once.
- If True, remote side ssl certificate will not be validated when delivering notifications.
- Webhook URL must be specified for notifications.
- Requires setup of connected app in Pipeliner.
- When working with dropdown fields like industry_id, use the corresponding id from
  the data_set.
- Contact should not be standalone records, but they should always be linked to the
  Accounts.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- When working with Dropdown fields like industry_id, use the relation to the id of
  the value in field data_set.
- Create Opportunity in the Pipeline within the First Step of the Pipeline.
- When creating account relations at least one Account needs to be primary.
- When creating contact relations at least one Contact needs to be primary.
- Opportunity represents existing potential business for a company.
- Opportunity is always part of the Pipeline and pipeline step.
- Max number of entities to return is 100, default is 30.
- 'is_delete_protected: true'
- 'is_deleted: false'
- 'is_base: true'
- 'revision: 18'
- When creating account relations at least one Account needs to be primary
- When creating contact relations at least one Contact needs to be primary
- When only owner_id is specified, Pipeliner will automatically create the opportunity
  with the default User’s sales unit.
- is_delete_protected is true
- is_deleted is false
- is_base is true
- Ensure proper authentication setup before using the API
- Error on field account_relations. Exactly one 'is_primary' item must be set.
- Uses OAuth2 with refresh token — requires setup of connected app in pipeliner
- Some objects may return nulls in deeply nested fields
- It is recommended to include the File Type in the file name of the document.
- Max number of entities to return is 100. Default is 30.
- The merging functionality through API works in the same way as in the Application.
- Document types must be specified in the filename for automatic recognition.
- Merger multiple Accounts or Contacts into master record.
- Ensure authentication works before making API calls.
- Use correct parameter formats as specified in the API documentation.
- Uses OAuth2 with refresh token — requires setup of connected app in Pipeliner
- For dropdown fields like industry_id use relation to the id of the value in field
  data_set.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 500 unexpected error
- '201: Creation confirmation. Returns created field'
- '500: Unexpected error'
- '500: unexpected error'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '40000: ERROR_ENTITY_VALIDATION: An object in a request is invalid.'
- '40002: ERROR_FIELD_VALIDATION: Validation error on a specific field.'
- '422: Validation error: If at least one object in a request is invalid.'
- 'ERROR_ENTITY_VALIDATION: Check entity validation errors.'
- 'ERROR_RELATIONS_DOESNT_EXIST: Relation does not exist.'
- 200 list of Clients
- Error on field account_relations. Exactly one 'is_primary' item must be set.
- '201: Creation confirmation.'
- '400: Bad Request - Check your request parameters.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://us-east.pipelinersales.com/api/v100/rest/spaces
  headers:
    Content-Type: application/json
    Accept: '*/*'
source_metadata: null
