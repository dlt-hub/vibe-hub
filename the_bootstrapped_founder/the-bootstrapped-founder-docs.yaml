resources:
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: records
    params: {}
- name: titles_2022
  endpoint:
    path: /2022
    method: GET
    data_selector: titles
    params: {}
- name: titles_2021
  endpoint:
    path: /2021
    method: GET
    data_selector: titles
    params: {}
- name: customer_profiles
  endpoint:
    path: /api/customer_profiles
    method: GET
    data_selector: profiles
    params: {}
- name: demo_requests
  endpoint:
    path: /api/demo_requests
    method: POST
    data_selector: request
    params: {}
- name: customer_scores
  endpoint:
    path: /scores
    method: POST
    data_selector: score
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: POST
    data_selector: alert
    params: {}
- name: ideas
  endpoint:
    path: /api/v1/ideas
    method: GET
    data_selector: data
    params: {}
- name: podcasts
  endpoint:
    path: /api/v1/podcasts
    method: GET
    data_selector: data
    params: {}
- name: trending_shows
  endpoint:
    path: /trending
    method: GET
    data_selector: shows
- name: new_episodes
  endpoint:
    path: /new
    method: GET
    data_selector: episodes
- name: profitability_status
  endpoint:
    path: /profitability
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer_calls
  endpoint:
    path: /api/customer_calls
    method: GET
    data_selector: calls
    params: {}
- name: platform_users
  endpoint:
    path: /api/platform_users
    method: GET
    data_selector: users
    params: {}
- name: data_users
  endpoint:
    path: /api/data_users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: podcast
  endpoint:
    path: /api/podcasts
    method: GET
    data_selector: data
    params: {}
- name: episode
  endpoint:
    path: /api/episodes
    method: GET
    data_selector: data
    params: {}
- name: podcast_episode
  endpoint:
    path: /376-justin-moore-becoming-a-sponsor-magnet
    method: GET
    data_selector: episode_details
- name: sponsorship_opportunities
  endpoint:
    path: /services/data/v1/sponsorships
    method: GET
    data_selector: records
- name: podcast_data
  endpoint:
    path: /podcast-data
    method: GET
    data_selector: records
- name: transcripts
  endpoint:
    path: /transcripts
    method: GET
    data_selector: records
- name: changelog
  endpoint:
    path: /services/data/v1.0/changelog
    method: GET
    data_selector: records
    params: {}
- name: change_log
  endpoint:
    path: /services/data/vXX.X/sobjects/ChangeLog
    method: GET
    data_selector: records
    params: {}
- name: terminal
  endpoint:
    path: /api/v1/terminal
    method: GET
    data_selector: records
- name: hypnosis_sessions
  endpoint:
    path: /api/hypnosis_sessions
    method: GET
    data_selector: sessions
- name: user_data
  endpoint:
    path: /api/user_data
    method: GET
    data_selector: users
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: webinars
  endpoint:
    path: /api/v1/webinars
    method: GET
    data_selector: data
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: records
- name: web_requests
  endpoint:
    path: /web_requests
    method: POST
    data_selector: data
    params: {}
- name: integration_test
  endpoint:
    path: /api/integration/test
    method: POST
    data_selector: result
- name: mentions
  endpoint:
    path: /api/v1/mentions
    method: GET
    data_selector: mentions
    params:
      incremental: updated_at
- name: brands
  endpoint:
    path: /api/v1/brands
    method: GET
    data_selector: brands
    params: {}
- name: posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
- name: books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: newsletter
- name: podcast
  endpoint:
    path: /podcast/
    method: GET
    data_selector: podcast
- name: merchant_of_record
  endpoint:
    path: /services/data/vXX.X/sobjects/MerchantOfRecord
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: podcasts
  endpoint:
    path: /api/v1/podcasts
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: subscribers
    params: {}
- name: podcast
  endpoint:
    path: /podcast/
    method: GET
    data_selector: episodes
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /archive
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: subscribers
    params: {}
- name: podcast
  endpoint:
    path: /podcast
    method: GET
    data_selector: episodes
    params: {}
- name: consulting_services
  endpoint:
    path: /consulting-services
    method: GET
    data_selector: services
    params: {}
- name: podcast_data
  endpoint:
    path: /api/podcast
    method: GET
    data_selector: records
- name: conference_summary
  endpoint:
    path: /microconf-atlanta-my-biggest-learnings
    method: GET
    data_selector: content
    params: {}
- name: video_editor
  endpoint:
    path: /api/v1/video_editor
    method: GET
    data_selector: records
- name: financials
  endpoint:
    path: /services/data/v1/financials
    method: GET
    data_selector: records
    params: {}
- name: design
  endpoint:
    path: /services/data/v1/design
    method: GET
    data_selector: records
    params: {}
- name: marketing
  endpoint:
    path: /services/data/v1/marketing
    method: GET
    data_selector: records
    params: {}
- name: sales
  endpoint:
    path: /services/data/v1/sales
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: agency_access
  endpoint:
    path: /services/data/vXX.X/sobjects/AgencyAccess
    method: POST
    data_selector: records
- name: investment_opportunities
  endpoint:
    path: /api/v1/investment_opportunities
    method: GET
    data_selector: opportunities
- name: offers
  endpoint:
    path: /api/v1/offers
    method: GET
    data_selector: offers
    params: {}
- name: design_check
  endpoint:
    path: /services/data/vXX.X/sobjects/DesignCheck
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: newsletter
  endpoint:
    path: /services/data/vXX.X/sobjects/Newsletter
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: acquisition
  endpoint:
    path: /api/acquisition
    method: GET
    data_selector: records
- name: creator_economy
  endpoint:
    path: /api/creator_economy
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: maybe_project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: voices_of_influence
  endpoint:
    path: /voices-of-influence-how-expert-feedback-shapes-saas-success
    method: GET
    data_selector: article_content
- name: mentors
  endpoint:
    path: /api/v1/mentors
    method: GET
    data_selector: data
    params: {}
- name: mentees
  endpoint:
    path: /api/v1/mentees
    method: GET
    data_selector: data
    params: {}
- name: mentors
  endpoint:
    path: /api/v1/mentors
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
- name: posts
  endpoint:
    path: /posts/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: animal_transport_companies
  endpoint:
    path: /hauling-buddies/transport-companies
    method: GET
    data_selector: verified_companies
    params: {}
- name: planet
  endpoint:
    path: /api/planet
    method: GET
    data_selector: planets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: founders
  endpoint:
    path: /api/v1/founders
    method: GET
    data_selector: founders
    params: {}
- name: companies
  endpoint:
    path: /api/v1/companies
    method: GET
    data_selector: companies
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: women_speakers
  endpoint:
    path: /api/v1/women_speakers
    method: GET
    data_selector: speakers
    params: {}
- name: subscribers
  endpoint:
    path: /subscribers
    method: GET
    data_selector: subscribers
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: blog_posts
  endpoint:
    path: /api/v1/posts
    method: GET
    data_selector: posts
- name: community_engagement
  endpoint:
    path: /engagement
    method: GET
    data_selector: records
    params: {}
- name: member_introduction
  endpoint:
    path: /introduction
    method: POST
    data_selector: records
    params: {}
- name: podcast_launch
  endpoint:
    path: /podcast/launch
    method: GET
- name: courses
  endpoint:
    path: /api/v1/courses
    method: GET
    data_selector: data
    params: {}
- name: business_listings
  endpoint:
    path: /api/v1/businesses
    method: GET
    data_selector: listings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: publishedAt
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cohort
  endpoint:
    path: /cohort
    method: GET
    data_selector: records
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tweets
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
    params: {}
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: documents
    params: {}
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: documents
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: lifetime_deal
  endpoint:
    path: /api/lifetime_deal
    method: GET
    data_selector: deals
    params: {}
- name: annual_deal
  endpoint:
    path: /api/annual_deal
    method: GET
    data_selector: deals
    params: {}
- name: transcripts
  endpoint:
    path: /services/data/vXX.X/sobjects/Transcripts
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: data
    params: {}
- name: books
  endpoint:
    path: /books
    method: GET
    data_selector: data
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: data
    params: {}
- name: podcast
  endpoint:
    path: /podcast
    method: GET
    data_selector: data
    params: {}
- name: Headshot
  endpoint:
    path: /api/v1/headshot
    method: GET
    data_selector: headshots
- name: domain_info
  endpoint:
    path: /domain/info
    method: GET
    data_selector: records
    params: {}
- name: business
  endpoint:
    path: /api/v1/business
    method: GET
    data_selector: data
    params: {}
- name: SaaS analytics
  endpoint:
    path: /api/v1/analytics
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
- name: metrics
  endpoint:
    path: /api/v1/metrics
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: newsletter
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: business_listing
  endpoint:
    path: /api/v1/listings
    method: GET
    data_selector: data
    params: {}
- name: weekly_events
  endpoint:
    path: /events/weekly
    method: GET
    data_selector: events
    params: {}
- name: community_feedback
  endpoint:
    path: /feedback
    method: POST
    data_selector: response
    params: {}
- name: community
  endpoint:
    path: /api/community
    method: GET
    data_selector: members
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: survey
  endpoint:
    path: /services/data/vXX.X/sobjects/Survey
    method: GET
    data_selector: records
- name: response
  endpoint:
    path: /services/data/vXX.X/sobjects/Response
    method: GET
    data_selector: records
- name: business
  endpoint:
    path: /business
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Twitter Teardowns
  endpoint:
    path: /twitter-teardowns-3-low-hanging-fruit-to-massively-improve-your-twitter-presence/
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: developers
  endpoint:
    path: /api/developers
    method: GET
    data_selector: developers
    params: {}
- name: businesses
  endpoint:
    path: /api/businesses
    method: GET
    data_selector: businesses
    params: {}
- name: rails_devs
  endpoint:
    path: /api/rails_devs
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: newsletter
    params: {}
- name: podcast
  endpoint:
    path: /podcast/
    method: GET
    data_selector: podcast
    params: {}
- name: consulting_services
  endpoint:
    path: /consulting-services/
    method: GET
    data_selector: services
    params: {}
- name: link_engagement
  endpoint:
    path: /api/v1/links
    method: GET
    data_selector: data
- name: links
  endpoint:
    path: /api/links
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: newsletter
  endpoint:
    path: /varsity-marketing-newsletter
    method: GET
- name: book
  endpoint:
    path: /teenage-wastebrand
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stickers
  endpoint:
    path: /api/v1/stickers
    method: GET
    data_selector: stickers
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: tweets
  endpoint:
    path: /api/tweets
    method: POST
    data_selector: data
    params: {}
- name: memes
  endpoint:
    path: /api/memes
    method: POST
    data_selector: data
    params: {}
- name: Twitter
  endpoint:
    path: /
    method: GET
- name: log ology
  endpoint:
    path: /logology
    method: GET
- name: posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: subscribers
    params: {}
- name: podcast
  endpoint:
    path: /podcast/
    method: GET
    data_selector: episodes
    params: {}
- name: consulting_services
  endpoint:
    path: /consulting-services/
    method: GET
    data_selector: services
    params: {}
- name: subscriber
  endpoint:
    path: /services/data/vXX.X/sobjects/Subscriber
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
    params: {}
- name: subscribers
  endpoint:
    path: /services/data/vXX.X/sobjects/Subscribers
    method: GET
    data_selector: records
    params: {}
- name: emails
  endpoint:
    path: /services/data/vXX.X/sobjects/Emails
    method: GET
    data_selector: records
    params: {}
- name: newsletter_content
  endpoint:
    path: /newsletter
    method: GET
    data_selector: content
    params: {}
- name: newsletter_content
  endpoint:
    path: /api/v1/newsletter
    method: GET
    data_selector: content
- name: dude_ranch
  endpoint:
    path: /api/dude_ranch
    method: GET
- name: pages
  endpoint:
    path: /pages
    method: GET
    data_selector: results
- name: blocks
  endpoint:
    path: /blocks
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: episodes
  endpoint:
    path: /api/episodes
    method: GET
    data_selector: records
- name: customer_communications
  endpoint:
    path: /api/v1/customer_communications
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /archive
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: subscribers
    params: {}
- name: podcast
  endpoint:
    path: /podcast
    method: GET
    data_selector: episodes
    params: {}
- name: consulting_services
  endpoint:
    path: /consulting-services
    method: GET
    data_selector: services
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: startups
  endpoint:
    path: /api/startups
    method: GET
    data_selector: startups
    params: {}
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: products
    params: {}
- name: products
  endpoint:
    path: /v2/products
    method: GET
    data_selector: products
    params: {}
- name: marketplace
  endpoint:
    path: /api/v1/marketplace
    method: GET
    data_selector: items
- name: business_listings
  endpoint:
    path: /api/businesses
    method: GET
    data_selector: data
    params: {}
- name: marketplace
  endpoint:
    path: /api/marketplace
    method: GET
    data_selector: items
- name: community_posts
  endpoint:
    path: /api/community/posts
    method: GET
    data_selector: posts
- name: newsletter_subscribers
  endpoint:
    path: /api/newsletter/subscribers
    method: GET
    data_selector: subscribers
- name: community_curriculum
  endpoint:
    path: /community/curriculum
    method: GET
    data_selector: curriculum_records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: subscribers
    params: {}
- name: blog_articles
  endpoint:
    path: /blog/
    method: GET
    data_selector: articles
    params: {}
- name: posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: newsletter
    params: {}
- name: podcast
  endpoint:
    path: /podcast/
    method: GET
    data_selector: episodes
    params: {}
- name: posts
  endpoint:
    path: /archive
    method: GET
    data_selector: posts
- name: books
  endpoint:
    path: /bookshelf
    method: GET
    data_selector: books
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: newsletter
- name: podcast
  endpoint:
    path: /podcast
    method: GET
    data_selector: podcast
- name: consulting_services
  endpoint:
    path: /consulting-services
    method: GET
    data_selector: services
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: data
    params: {}
- name: books
  endpoint:
    path: /books
    method: GET
    data_selector: data
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: data
    params: {}
- name: podcast
  endpoint:
    path: /podcast
    method: GET
    data_selector: data
    params: {}
- name: Posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
    params: {}
- name: Books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
    params: {}
- name: Newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: subscribers
    params: {}
- name: Podcast
  endpoint:
    path: /podcast/
    method: GET
    data_selector: episodes
    params: {}
- name: Consulting & Services
  endpoint:
    path: /consulting-services/
    method: GET
    data_selector: services
    params: {}
- name: posts
  endpoint:
    path: /archive
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter
    method: GET
    data_selector: subscribers
    params: {}
- name: podcast
  endpoint:
    path: /podcast
    method: GET
    data_selector: episodes
    params: {}
- name: posts
  endpoint:
    path: /archive/
    method: GET
    data_selector: posts
    params: {}
- name: books
  endpoint:
    path: /bookshelf/
    method: GET
    data_selector: books
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter/
    method: GET
    data_selector: newsletter
    params: {}
- name: podcast
  endpoint:
    path: /podcast/
    method: GET
    data_selector: podcast
    params: {}
- name: consulting_services
  endpoint:
    path: /consulting-services/
    method: GET
    data_selector: services
    params: {}
notes:
- Different marketing for each customer group.
- Demos help in classifying customer types.
- Uses AI to generate keywords and scoring for customer interactions.
- The Ideas Vault contains ideas extracted from podcast episodes.
- AI tools can enhance productivity but may also hinder skill development.
- Podcasting is built on RSS feeds—a technology designed around the year 2000 for
  blog syndication.
- Over 60% of podcasts are missing basic metadata like proper categorization, good
  descriptions, or even contact emails where you can reach the podcaster.
- AI tools provide a new way to learn coding through constant mentorship.
- The coding learning process has become more accessible and personalized.
- Business was previously profitable but is currently struggling to maintain profitability.
- Monthly expenses are around $10,000 with recurring revenue of approximately $6,000.
- Webhook-based data stream that sends information about every podcast episode transcribed.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Sales is a key focus area for growth.
- The product is straightforward and requires minimal development.
- Need to focus on the job to be done methodology in explaining to people what the
  app can do.
- Reporting needs to be more explicit and user-friendly.
- For trial customers, context-aware filtering is limited to about a dozen attempts
  per hour.
- Podscan is acquirable and already profitable.
- The product is stable and used 24/7.
- Entity recognition and attribution are becoming core capabilities of our data platform.
- Public podcast pages have started ranking on Google.
- The book aims to help creators understand the power of partnerships.
- Uses OAuth2 with refresh token — requires setup of connected app in sponsorship
  API
- Maintaining databases at scale requires careful planning and optimization.
- A smaller, focused backlog isn’t just about having fewer items — it’s about having
  the right items.
- Uses OAuth2 with refresh token — requires setup of connected app in ChangeBot
- Users may be skeptical of AI results due to past experiences
- Requires setup of connected app in ChangeBot
- Focus on building trust through webinars rather than high-pressure sales.
- 'Newsletter focuses on three things every single week: something to think about,
  something to do, and something to learn.'
- The API allows reliable data extraction from various websites.
- Uses API key for authentication
- Requires careful handling to avoid triggering alarms during scraping at scale
- Uses a specific hash code for each alert to prevent random imports
- Smart Database Management and chunk-size automation can optimize resource usage.
- Prioritization of data extraction based on customer feedback
- Dynamic priority system for search database updates
- Observability is crucial for data software businesses.
- Identify and monitor critical metrics to prevent issues.
- 'Expect the unexpected scale: When dealing with external data sources, your scale
  isn’t determined by your customer count. Plan for the full scope of data you might
  encounter, and provision resources that can handle it, even when things are a bit
  shaky.'
- 'Test at true scale: Don’t be fooled by tests on subset data. Find ways to validate
  your systems against realistic data volumes.'
- 'No publicly available directory of podcasts: All data is behind a login and a user
  account with a trial period.'
- 'Rate limiting: Strict rate limits implemented on certain pages.'
- Focus on entrepreneurship and building a business.
- Paddle simplifies tax and compliance for software entrepreneurs.
- Requires user authentication via OAuth2.
- Content is delivered through a regularly updated blog and newsletter.
- Uses OAuth2 with refresh token — requires setup of connected app in Podscan
- Building public trust in AI is essential for its widespread adoption.
- Transparency in AI processes and clear communication about the benefits and limitations
  of AI will be key to gaining user acceptance.
- Building a software business is never without its surprises, and most of them are
  externalities you just can’t be fully prepared for.
- Service was underloaded during downtime, not overloaded.
- REST API quite literally documents itself at this point.
- The conference fosters deep relational connections among attendees.
- Focus on financials, design, marketing, and sales gaps.
- The fund focuses on supporting early stage entrepreneurs.
- Investments range from small checks of 1-2k MRR to companies pushing seven figure
  ARR.
- Building in public while exploring offers from potential collaborators and investors.
- Focus on building relationships with clients for better retention.
- Uses a managed DB on Amazon Webservices
- Costs will likely grow at 10% the rate of customer growth
- Paddle and LemonSqueezy are Merchants of Record, requiring validation and verification.
- Stripe is easier to sign up for compared to Paddle.
- Rox is pursuing software in the creator economy.
- Free to list on acquire.com
- Requires setup of connected app in Maybe API
- Use customer discovery to inform product development and market strategies.
- Founders should balance product passion with market demand.
- Requires setup of connected app in MentorCruise
- Some users may have difficulty with pricing and mentorship structure
- Running a profitable lifestyle business that allows me to live life on my terms
  is enough for me.
- Even if the business does well, spending time with family is more important than
  making Podline a full-time business.
- Writing can lead to zero customer acquisition cost.
- Building a library of content allows for reusing past writings.
- Uses AI-assisted coding for faster development and prototyping.
- Building a voicemail system that enhances audio quality and makes managing call-ins
  easier for podcasters.
- Hauling Buddies started from a Facebook group and focuses on verified animal transport
  companies.
- The platform aims to provide trust and eliminate scams in animal transportation.
- Discusses the Stair Step Approach to building a SaaS business.
- Mentions the risks of building on platforms and the importance of diversification.
- Modern writers write in public in front of and with their eager readers.
- Ship 30 for 30 aims to transform writing from a solitary to a communal activity.
- Typeshare allows users to publish high quality visual atomic essays.
- Podcast trailer launch is going to be mid October with first episodes coming out
  in January.
- Requires OAuth2 authentication setup.
- Free to list businesses on acquire.com
- Indie hackers don’t need billion-dollar businesses to be successful.
- YouTube API requires OAuth2 for authentication.
- The cohort will be a live in-person training event.
- Ensure two-factor authentication is enabled for account security.
- Planning everything is just an infinite push towards tomorrow.
- Uses a survey for customer segmentation during signup.
- Uses OAuth2 with refresh token — requires setup of connected app in SignWell
- Uses OAuth2 with refresh token — requires setup of connected app in signwell
- The agency operates on a subscription model, providing services within a defined
  scope and turnaround times of 24 to 72 hours.
- Lifetime deal provides access for as long as the product is alive.
- Product Hunt is for established products with social proof.
- Uses OAuth2 with refresh token — requires setup of connected app in audio_pen
- Uses generative AI for headshot creation
- Focus on optimizing landing pages for conversion
- Domain leasing allows you to try out a domain before fully committing to the purchase.
- Uses OAuth2 with refresh token — requires setup of connected app in Baremetrics
- The concept of eventual reciprocity suggests that if you give without expecting
  anything in return, people will feel compelled to reciprocate over time.
- The API provides access to various content types including posts and books.
- Discussion about bootstrapping vs raising investment money
- Emphasis on understanding competitors for strategy development
- Free to list your business on acquire.com.
- Community provides mentorship and support for first-generation entrepreneurs.
- Community engagement is fostered through synchronous and asynchronous formats.
- Community is accessible at $75 a month.
- Optimizing for response times can harm overall business impact.
- Imposter syndrome can be common among entrepreneurs and creators.
- Building in public can open individuals up to social feedback and criticism.
- Focuses on empowering developers in the hiring process.
- RailsDevs is open source
- No real risk in building code in public
- Selling lifetime deals can be controversial; careful financial planning is essential.
- Lifetime users may churn, and their engagement can vary.
- Users can export their links in JSON or CSV format.
- The API requires careful management of rate limits.
- Competes directly with Google on one of their linchpin products for their whole
  advertising empire.
- They pay a premium for the most highly available services.
- Focus on privacy and compliance with EU and North America laws.
- The site was aimed primarily at developers and designers.
- The business faced challenges due to the Turkish economy and rising costs.
- Product updates are based on adding more designs and categories.
- Focus on creating lasting quality logos, not following trends.
- Uses OAuth2 with refresh token — requires setup of connected app in newsletter API
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in newsletter_api
- Uses conversational AI to assist users.
- Advertising can serve the audience by connecting them with relevant products or
  services.
- Quality of audience is crucial for successful advertising.
- Emphasizes the significance of domain names in building trust and authority.
- Focus on small projects and iterative learning
- Emphasis on partnership with subject matter experts
- Requires user authentication to access page and block data
- No specific API mentioned for ingestion configuration.
- Trust is a very hard thing to prove.
- It’s important to use reputable third-party services for critical functions like
  authentication.
- Focus on building a community of engaged and interested individuals
- Podcast is in early stages with new episodes being recorded.
- The business has been operational for approximately six years.
- Customer support is emphasized as a key differentiator.
- A free trial is available for testing the product, limited to 200 text messages.
- Encourages using remote work to create a better life.
- MicroAcquire is a startup acquisition marketplace.
- Uses OAuth2 with refresh token
- Gumroad is considering allowing Stripe Connect for payment customization
- Always supports acquisitions of all sizes
- Avoid focusing on vanity metrics such as likes, shares, and comments when assessing
  the worth and success of your content.
- The community grew organically from a blog and newsletter.
- Freemium model for community subscriptions
- This is a manually curated newsletter. I won't send you spam.
- Calmness is about staying in control of your life, business, and future.
- Focus on building meaningful long-term relationships.
- Keep it warm, keep it low-effort, write your DMs manually, and keep them short.
- No intermediaries. No one can revoke the relationship but you or your audience member.
- Content is focused on bootstrapping, audience-building, and building in public.
- No silver bullets — we all have aspirations and situations that lead us down one
  path or another.
- Most solopreneurs end up feeling unemployable.
- Building in public allows us to become public perfectionizers.
- The site offers a range of content including posts, books, newsletters, and podcasts.
- Communities are often tribal and may exhibit cult-like characteristics.
- Focus on customer retention strategies
- Consider customer experience during cancellation
- Building in public is a performative act and requires energy management.
- Creators need to take breaks to maintain creativity and avoid burnout.
- Content is focused on bootstrapping and entrepreneurship.
- No authentication required for public endpoints.
- Pivoting in public can be an incredible learning experience for a founder.
errors:
- 'RATE_LIMIT_EXCEEDED: Reduce frequency of API calls.'
- 'INVALID_REQUEST: Check parameters and request format.'
- '401 Unauthorized: Check your API credentials'
- '404 Not Found: Ensure the endpoint is correct'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Not profitable: Business is $4,000 short of breaking even.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- High-frequency terms may lead to resource overuse.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'INVALID_REQUEST: Check the parameters you are sending.'
- '429 Too Many Requests: Reduce the frequency of your requests.'
- '403 Forbidden: Check your API key or permissions.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '403 Forbidden: Check API key permissions'
- '401 Unauthorized: Recheck API key or token expiration'
- '429: Too Many Requests: Back off and stop requesting data from that server.'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '500 Internal Server Error: Retry the request later.'
- Timeouts and delays may occur due to network issues.
- Everything becomes extremely expensive due to a mistake I might make.
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify endpoint exists'
- '401 Unauthorized: Ensure API key is valid'
- '403 Forbidden: Check your permissions and scopes.'
- '404 Not Found: Verify the endpoint and parameters.'
- '403 Forbidden: Check your API key or OAuth2 permissions.'
- '404 Not Found: Verify resource ID.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '403 Forbidden: Check your API key and permissions.'
- '429 Too Many Requests: Rate limit exceeded. Please wait before retrying.'
- '401 Unauthorized: Invalid or expired token.'
- '500 Internal Server Error: Check server logs for details.'
- '404 Not Found: Verify the endpoint and request parameters.'
- 'RATE_LIMIT_EXCEEDED: Reduce frequency of requests.'
- 'INVALID_REQUEST: Check the request parameters.'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: Check server status or retry later'
- '404 Not Found: Ensure the sticker ID is correct'
- '401 Unauthorized: Check your authentication tokens'
- '404 Not Found: Verify the endpoint path'
- Trust issues arise after a data breach, affecting user perception.
- '400 Bad Request: Check API parameters and request formatting.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your OAuth token'
- '404 Not Found: Ensure the endpoint path is correct'
- Avoid growth hacks that can lead to negative audience perception.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - BearerToken
client:
  base_url: https://thebootstrappedfounder.com
source_metadata: null
