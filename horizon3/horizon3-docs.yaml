resources:
- name: action_logs_count
  endpoint:
    path: /action_logs_count
    method: POST
    data_selector: data.action_logs_count
    params: {}
- name: action_logs_csv_presigned_url
  endpoint:
    path: /action_logs_csv_presigned_url
    method: POST
    data_selector: data.action_logs_csv_presigned_url
    params: {}
- name: action_logs_page
  endpoint:
    path: /action_logs_page
    method: POST
    data_selector: data.action_logs_page
    params: {}
- name: activedir_passwords_csv_url
  endpoint:
    path: /activedir_passwords_csv_url
    method: POST
    data_selector: data.activedir_passwords_csv_url
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: data.agent
    params: {}
- name: agents
  endpoint:
    path: /agents
    method: POST
    data_selector: data.agents
    params: {}
- name: agents_count
  endpoint:
    path: /agents_count
    method: POST
    data_selector: data.agents_count
    params: {}
- name: asset_group
  endpoint:
    path: /asset_group
    method: POST
    data_selector: data.asset_group
    params: {}
- name: asset_groups_count
  endpoint:
    path: /asset_groups_count
    method: POST
    data_selector: data.asset_groups_count
    params: {}
- name: asset_groups_page
  endpoint:
    path: /asset_groups_page
    method: POST
    data_selector: data.asset_groups_page
    params: {}
- name: attack_path
  endpoint:
    path: /attack_path
    method: POST
    data_selector: data.attack_path
    params: {}
- name: attack_paths_count
  endpoint:
    path: /attack_paths_count
    method: POST
    data_selector: data.attack_paths_count
    params: {}
- name: attack_paths_csv_url
  endpoint:
    path: /attack_paths_csv_url
    method: POST
    data_selector: data.attack_paths_csv_url
    params: {}
- name: attack_paths_page
  endpoint:
    path: /attack_paths_page
    method: POST
    data_selector: data.attack_paths_page
    params: {}
- name: client_accounts_count
  endpoint:
    path: /client_accounts_count
    method: POST
    data_selector: data.client_accounts_count
    params: {}
- name: client_accounts_page
  endpoint:
    path: /client_accounts_page
    method: POST
    data_selector: data.client_accounts_page
    params: {}
- name: data_store
  endpoint:
    path: /data_store
    method: GET
    data_selector: data_store
    params:
      uuid: String!
- name: data_stores_count
  endpoint:
    path: /data_stores_count
    method: GET
    data_selector: data_stores_count
    params:
      input: OpInput!
      page_input: PageInput
- name: data_stores_csv_url
  endpoint:
    path: /data_stores_csv_url
    method: GET
    data_selector: data_stores_csv_url
    params:
      input: OpInput!
- name: external_domain_xop
  endpoint:
    path: /external_domain_xop
    method: GET
    data_selector: external_domain_xop
    params:
      uuid: String!
- name: external_domain_xops_count
  endpoint:
    path: /external_domain_xops_count
    method: GET
    data_selector: external_domain_xops_count
    params:
      op_series_uuid: String!
      page_input: PageInput
- name: hello
  endpoint:
    path: /hello
    method: GET
    data_selector: hello
- name: host_tab_xop
  endpoint:
    path: /host_tab_xop
    method: GET
    data_selector: host_tab_xop
    params:
      uuid: String!
- name: host_tab_xops_count
  endpoint:
    path: /host_tab_xops_count
    method: GET
    data_selector: host_tab_xops_count
    params:
      op_series_uuid: String!
      page_input: PageInput
- name: hosts_csv_url
  endpoint:
    path: /hosts_csv_url
    method: GET
    data_selector: hosts_csv_url
    params:
      input: OpInput!
- name: op
  endpoint:
    path: /op
    method: GET
    data_selector: op
    params:
      op_id: String!
- name: op_tabs_page
  endpoint:
    path: /op_tabs_page
    method: GET
    data_selector: op_tabs_page
    params:
      page_input: PageInput
      exclude_sample_ops: Boolean
- name: op_template
  endpoint:
    path: /op_template
    method: GET
    data_selector: op_template
    params:
      op_template_uuid: String!
- name: op_templates
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.op_templates
    params:
      op_type: NodeZero
- name: op_templates_count
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.op_templates_count
    params: {}
- name: pentests_count
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.pentests_count
    params: {}
- name: sample_op_tabs
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.sample_op_tabs
    params: {}
- name: session_user_account
  endpoint:
    path: /session_user_account
    method: POST
    data_selector: data.session_user_account
- name: weakness
  endpoint:
    path: /weakness
    method: POST
    data_selector: data.weakness
- name: weaknesses_count
  endpoint:
    path: /weaknesses_count
    method: POST
    data_selector: data.weaknesses_count
- name: weaknesses_csv_url
  endpoint:
    path: /weaknesses_csv_url
    method: POST
    data_selector: data.weaknesses_csv_url
- name: weaknesses_diff_csv_url
  endpoint:
    path: /weaknesses_diff_csv_url
    method: POST
    data_selector: data.weaknesses_diff_csv_url
- name: weaknesses_diff_page
  endpoint:
    path: /weaknesses_diff_page
    method: POST
    data_selector: data.weaknesses_diff_page
- name: weaknesses_diff_stats
  endpoint:
    path: /weaknesses_diff_stats
    method: POST
    data_selector: data.weaknesses_diff_stats
- name: weaknesses_page
  endpoint:
    path: /weaknesses_page
    method: POST
    data_selector: data.weaknesses_page
- name: bulk_deauthorize_ips
  endpoint:
    path: /mutations/bulk_deauthorize_ips
    method: POST
    data_selector: bulk_deauthorize_ips
- name: cancel_op
  endpoint:
    path: /mutations/cancel_op
    method: POST
    data_selector: cancel_op
- name: create_asset_group
  endpoint:
    path: /mutations/create_asset_group
    method: POST
    data_selector: create_asset_group
- name: create_client_account
  endpoint:
    path: /mutations/create_client_account
    method: POST
    data_selector: create_client_account
- name: create_op_template
  endpoint:
    path: /mutations/create_op_template
    method: POST
    data_selector: create_op_template
- name: create_user_account
  endpoint:
    path: /mutations/create_user_account
    method: POST
    data_selector: create_user_account
- name: deauthorize_domains
  endpoint:
    path: /mutations/deauthorize_domains
    method: POST
    data_selector: deauthorize_domains
- name: deauthorize_ips
  endpoint:
    path: /mutations/deauthorize_ips
    method: POST
    data_selector: deauthorize_ips
- name: delete_client_account
  endpoint:
    path: /mutations/delete_client_account
    method: POST
    data_selector: delete_client_account
- name: delete_op_template
  endpoint:
    path: /mutations/delete_op_template
    method: POST
    data_selector: delete_op_template
- name: delete_op_template_by_uuid
  endpoint:
    path: /mutations/delete_op_template_by_uuid
    method: POST
    data_selector: delete_op_template_by_uuid
- name: delete_user_account
  endpoint:
    path: /mutations/delete_user_account
    method: POST
    data_selector: delete_user_account
- name: pause_op
  endpoint:
    path: /pause_op
    method: POST
    data_selector: data.pause_op
    params:
      op_id: String!
- name: remove_domains_from_asset_group
  endpoint:
    path: /remove_domains_from_asset_group
    method: POST
    data_selector: data.remove_domains_from_asset_group
    params:
      asset_group_uuid: String!
      domains: '[StringNotEmpty]!'
- name: resume_op
  endpoint:
    path: /resume_op
    method: POST
    data_selector: data.resume_op
    params:
      op_id: String!
- name: save_op_template
  endpoint:
    path: /save_op_template
    method: POST
    data_selector: data.save_op_template
    params:
      op_template_name: String!
      schedule_op_form: ScheduleOpFormInput!
- name: schedule_op_template
  endpoint:
    path: /schedule_op_template
    method: POST
    data_selector: data.schedule_op_template
    params:
      op_template_name: String
      op_template_uuid: String
      op_name: String
      schedule_op_form: ScheduleOpFormInput
      agent_name: String
      runner_uuid: String
      schedule_name: String
- name: update_asset_group_template
  endpoint:
    path: /update_asset_group_template
    method: POST
    data_selector: data.update_asset_group_template
    params:
      asset_group_uuid: String!
      schedule_op_form: ScheduleOpFormInput!
- name: update_client_account
  endpoint:
    path: /update_client_account
    method: POST
    data_selector: data.update_client_account
    params:
      client_account_input: ClientAccountUpdateInput!
- name: update_op_template
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.update_op_template.op_template
- name: update_user_account
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.update_user_account
- name: attack_paths
  endpoint:
    path: /graphql
    method: POST
    data_selector: attack_paths
    params: {}
- name: DataStore
  endpoint:
    path: /data/store
    method: GET
- name: ModuleMeta
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: Op
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: OpDiffInput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: OpInput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: FilterBy
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: FilterByInput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: FilterByInputMode
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreMapping
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreSubtechnique
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreTactic
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreTechnique
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: op_tabs
  endpoint:
    path: /op_tabs
    method: GET
    data_selector: op_tabs
- name: op_templates
  endpoint:
    path: /op_templates
    method: GET
    data_selector: op_templates
- name: pentests
  endpoint:
    path: /pentests
    method: POST
    data_selector: pentests
    params: {}
- name: pentestable_entities
  endpoint:
    path: /pentestable_entities
    method: POST
    data_selector: pentestable_entities
    params: {}
- name: ScheduleOpFormInput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.scheduleOp
    params: {}
- name: ScheduleOpOutput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.scheduleOp
    params: {}
- name: weakness
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: weaknesses
- name: weakness_diff
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: weaknesses_diff_page
- name: tripwires
  endpoint:
    path: /tripwires/
    method: GET
- name: NodeZero Host
  endpoint:
    path: /downloads/ova/
    method: GET
- name: MCP Server
  endpoint:
    path: /downloads/mcp/
    method: GET
- name: Splunk App
  endpoint:
    path: /downloads/splunk_app/
    method: GET
- name: outbound_traffic_us
  endpoint:
    path: /quickstart/network_requirements/#us-based-portal
    method: GET
    data_selector: endpoints
    params: {}
- name: outbound_traffic_eu
  endpoint:
    path: /quickstart/network_requirements/#eu-based-portal
    method: GET
    data_selector: endpoints
    params: {}
- name: validate_host
  endpoint:
    path: /utilities/checkenv.sh
    method: GET
- name: internal_pentest
  endpoint:
    path: /pentests/internal
    method: POST
    data_selector: pentest_results
- name: Internal Pentest
  endpoint:
    path: /portal/test_types/internal/
    method: GET
- name: External Pentest
  endpoint:
    path: /portal/test_types/external/
    method: GET
- name: Kubernetes Pentest
  endpoint:
    path: /portal/test_types/kubernetes/
    method: GET
- name: AWS Pentest
  endpoint:
    path: /portal/test_types/aws/
    method: GET
- name: Azure Entra ID
  endpoint:
    path: /portal/test_types/azure_entra_id/
    method: GET
- name: AD Password Audit
  endpoint:
    path: /portal/test_types/ad_password_audit/
    method: GET
- name: Segmentation Test
  endpoint:
    path: /portal/test_types/segmentation/
    method: GET
- name: Phishing Test
  endpoint:
    path: /portal/test_types/phishing/
    method: GET
- name: Insider Threat Test
  endpoint:
    path: /portal/test_types/insider_threat/
    method: GET
- name: 1-Click Verify
  endpoint:
    path: /portal/test_types/1cv/
    method: GET
- name: User Management
  endpoint:
    path: /settings/user_management
    method: GET
- name: Single Sign On (SSO)
  endpoint:
    path: /settings/sso
    method: GET
- name: Identification Provider (IdP) Guides
  endpoint:
    path: /settings/idp_guides
    method: GET
- name: Email Notifications
  endpoint:
    path: /settings/emails
    method: GET
- name: Setting a Proxy
  endpoint:
    path: /settings/proxy
    method: GET
- name: Client Management
  endpoint:
    path: /settings/client_management
    method: GET
- name: Co-Branding
  endpoint:
    path: /settings/co_branding
    method: GET
- name: Integrations
  endpoint:
    path: /settings/integrations
    method: GET
- name: tripwires
  endpoint:
    path: /tripwires
    method: GET
    data_selector: tripwires
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: tripwire_management
  endpoint:
    path: /tripwires/management
    method: GET
    data_selector: tripwires
    params: {}
- name: tripwire_removal
  endpoint:
    path: /tripwires/removal
    method: POST
    data_selector: removal
    params: {}
- name: tripwires
  endpoint:
    path: /tripwires/access
    method: GET
    data_selector: tripwires
    params: {}
- name: Send Data
  endpoint:
    path: /send-data
    method: POST
    data_selector: body
    params:
      Workspace ID: your_workspace_id
      Workspace Key: your_workspace_key
- name: Response
  endpoint:
    path: /response
    method: POST
    data_selector: responseDetails
    params:
      Status Code: '200'
- name: detection_capabilities
  endpoint:
    path: /tripwires/ad_tripwires/detection_capabilities
    method: GET
    data_selector: detection_capabilities
    params: {}
- name: components
  endpoint:
    path: /tripwires/ad_tripwires/components
    method: GET
    data_selector: components
    params: {}
- name: domain_policy
  endpoint:
    path: /api/domain_policy
    method: GET
    data_selector: events
- name: ad_agent
  endpoint:
    path: /api/ad_agent
    method: GET
    data_selector: agents
- name: domain_policy_template
  endpoint:
    path: /tripwires/ad_tripwires_configure_domain_policy/
    method: GET
- name: tripwire_accounts
  endpoint:
    path: /tripwire/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: event_metadata
  endpoint:
    path: /event/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: alerts
  endpoint:
    path: /rapid_response/alerts
    method: GET
    data_selector: alerts
- name: rapid_response_activity_cards
  endpoint:
    path: /rapid_response/cards
    method: GET
    data_selector: activity_cards
- name: rapid_response_test
  endpoint:
    path: /api/v1/rapid_response_test
    method: POST
    data_selector: results
    params: {}
- name: pentests
  endpoint:
    path: /api/v1/pentests
    method: GET
    data_selector: results
- name: insights
  endpoint:
    path: /api/v1/insights
    method: GET
    data_selector: results
- name: insights
  endpoint:
    path: /api/insights
    method: GET
- name: tripwires
  endpoint:
    path: /api/tripwires
    method: GET
- name: pentest_scheduling
  endpoint:
    path: /api/pentest/scheduling
    method: GET
- name: attack_content
  endpoint:
    path: /api/attack_content
    method: GET
- name: first_time_login
  endpoint:
    path: /first_time_login
    method: POST
    data_selector: loginCredentials
- name: ssh_access
  endpoint:
    path: /ssh_access
    method: GET
    data_selector: sshInstructions
- name: NodeZero Host VM
  endpoint:
    path: /downloads/ova/
    method: GET
    data_selector: downloads
    params: {}
- name: ubuntu_setup_script
  endpoint:
    path: /utilities/linux-build.sh
    method: GET
    data_selector: script
    params: {}
- name: validate_host
  endpoint:
    path: /downloads/host_check_script/
    method: GET
- name: nodezero_data
  endpoint:
    path: /api/v1/pentest_results
    method: GET
    data_selector: results
- name: sensitive_data_exposure
  endpoint:
    path: /knowledge_base/sensitive_data/
    method: GET
    data_selector: sensitive_data_results
    params: {}
- name: weaknesses
  endpoint:
    path: /knowledge_base/weaknesses
    method: GET
    data_selector: records
- name: internal_pentests
  endpoint:
    path: /knowledge_base/exposure_score/#internal-pentests
    method: GET
    data_selector: Exposure Score
    params: {}
- name: external_pentests
  endpoint:
    path: /knowledge_base/exposure_score/#external-pentests
    method: GET
    data_selector: Exposure Score
    params: {}
- name: attack_configuration
  endpoint:
    path: /knowledge_base/attack_configurations
    method: GET
- name: US-based NodeZero Gateway
  endpoint:
    domains:
    - gateway.horizon3ai.com
    - interact.gateway.horizon3ai.com
    - api.gateway.horizon3ai.com
    - registry.gateway.horizon3ai.com
    static_ips:
    - 15.197.206.82
    - 3.33.191.122
    ports: HTTPS - 443/TCP
- name: EU-based NodeZero Gateway
  endpoint:
    domains:
    - gateway.horizon3ai.eu
    - interact.gateway.horizon3ai.eu
    - api.gateway.horizon3ai.eu
    - registry.gateway.horizon3ai.eu
    static_ips:
    - 52.223.20.205
    - 99.83.187.197
    ports: HTTPS - 443/TCP
- name: internal_pentest
  endpoint:
    path: /internal/pentest
    method: POST
    data_selector: results
- name: test_assessments
  endpoint:
    path: /api/v1/test_assessments
    method: GET
    data_selector: data
- name: insights
  endpoint:
    path: /api/v1/insights
    method: GET
    data_selector: data
- name: Internal Pentest
  endpoint:
    path: /portal/test_types/internal/
    method: GET
    data_selector: tests
    params: {}
- name: External Pentest
  endpoint:
    path: /portal/test_types/external/
    method: GET
    data_selector: tests
    params: {}
- name: Kubernetes Pentest
  endpoint:
    path: /portal/test_types/kubernetes/
    method: GET
    data_selector: tests
    params: {}
- name: AWS Pentest
  endpoint:
    path: /portal/test_types/aws/
    method: GET
    data_selector: tests
    params: {}
- name: Azure Entra ID
  endpoint:
    path: /portal/test_types/azure_entra_id/
    method: GET
    data_selector: tests
    params: {}
- name: AD Password Audit
  endpoint:
    path: /portal/test_types/ad_password_audit/
    method: GET
    data_selector: tests
    params: {}
- name: Segmentation Test
  endpoint:
    path: /portal/test_types/segmentation/
    method: GET
    data_selector: tests
    params: {}
- name: Phishing Test
  endpoint:
    path: /portal/test_types/phishing/
    method: GET
    data_selector: tests
    params: {}
- name: Insider Threat Test
  endpoint:
    path: /portal/test_types/insider_threat/
    method: GET
    data_selector: tests
    params: {}
- name: 1-Click Verify
  endpoint:
    path: /portal/test_types/1cv/
    method: GET
    data_selector: tests
    params: {}
- name: tripwires
  endpoint:
    path: /api/tripwires
    method: GET
- name: weaknesses
  endpoint:
    path: /api/weaknesses
    method: GET
    data_selector: records
- name: attack_paths
  endpoint:
    path: /api/attack_paths
    method: GET
    data_selector: records
- name: pentest
  endpoint:
    path: /api/v1/pentests
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: records
- name: AWS Pentest
  endpoint:
    path: /api/aws_pentest
    method: GET
    data_selector: pentestData
- name: Azure Entra ID Pentest
  endpoint:
    path: /api/azure_pentest
    method: GET
    data_selector: pentestData
- name: Rapid Response Alert Center
  endpoint:
    path: /api/rapid_response/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: Phishing Pentest Summary
  endpoint:
    path: /api/phishing/pentest_summary
    method: GET
    data_selector: summary
    params: {}
- name: Template Management
  endpoint:
    path: /api/templates/manage
    method: GET
    data_selector: templates
    params: {}
- name: New Attack Content
  endpoint:
    path: /api/attack_content/new
    method: GET
    data_selector: new_content
    params: {}
- name: Rapid Response Alert Center
  endpoint:
    path: /api/rapid_response_alerts
    method: GET
    data_selector: alerts
- name: Injected Credentials for Azure
  endpoint:
    path: /api/injected_credentials/azure
    method: GET
    data_selector: credentials
- name: CVE-2024-1212 Progress Kemp LoadMaster RCE
  endpoint:
    path: /api/vulnerabilities/CVE-2024-1212
    method: GET
    data_selector: vulnerabilities
- name: Entra Seamless SSO
  endpoint:
    path: /api/entra_sso
    method: GET
    data_selector: sso
- name: Azure Instance Metadata Service Queries
  endpoint:
    path: /api/azure_imds
    method: GET
    data_selector: imds
- name: AWS RDS Database Enumeration
  endpoint:
    path: /api/aws_rds_enumeration
    method: GET
    data_selector: databases
- name: action_logs_count
  endpoint:
    path: /action_logs_count
    method: POST
    data_selector: data.action_logs_count
    params: {}
- name: action_logs_csv_presigned_url
  endpoint:
    path: /action_logs_csv_presigned_url
    method: POST
    data_selector: data.action_logs_csv_presigned_url
    params: {}
- name: action_logs_page
  endpoint:
    path: /action_logs_page
    method: POST
    data_selector: data.action_logs_page
    params: {}
- name: activedir_passwords_csv_url
  endpoint:
    path: /activedir_passwords_csv_url
    method: POST
    data_selector: data.activedir_passwords_csv_url
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: data.agent
    params: {}
- name: agents
  endpoint:
    path: /agents
    method: POST
    data_selector: data.agents
    params: {}
- name: agents_count
  endpoint:
    path: /agents_count
    method: POST
    data_selector: data.agents_count
    params: {}
- name: asset_group
  endpoint:
    path: /asset_group
    method: POST
    data_selector: data.asset_group
    params: {}
- name: asset_groups_count
  endpoint:
    path: /asset_groups_count
    method: POST
    data_selector: data.asset_groups_count
    params: {}
- name: asset_groups_page
  endpoint:
    path: /asset_groups_page
    method: POST
    data_selector: data.asset_groups_page
    params: {}
- name: attack_path
  endpoint:
    path: /attack_path
    method: POST
    data_selector: data.attack_path
    params: {}
- name: attack_paths_count
  endpoint:
    path: /attack_paths_count
    method: POST
    data_selector: data.attack_paths_count
    params: {}
- name: attack_paths_csv_url
  endpoint:
    path: /attack_paths_csv_url
    method: POST
    data_selector: data.attack_paths_csv_url
    params: {}
- name: attack_paths_page
  endpoint:
    path: /attack_paths_page
    method: POST
    data_selector: data.attack_paths_page
    params: {}
- name: client_accounts_count
  endpoint:
    path: /client_accounts_count
    method: POST
    data_selector: data.client_accounts_count
    params: {}
- name: client_accounts_page
  endpoint:
    path: /client_accounts_page
    method: POST
    data_selector: data.client_accounts_page
    params: {}
- name: add_domains_to_asset_group
  endpoint:
    path: /mutation-add_domains_to_asset_group
    method: POST
- name: authorize_domains
  endpoint:
    path: /mutation-authorize_domains
    method: POST
- name: authorize_ips
  endpoint:
    path: /mutation-authorize_ips
    method: POST
- name: bulk_authorize_domains
  endpoint:
    path: /mutation-bulk_authorize_domains
    method: POST
- name: bulk_authorize_ips
  endpoint:
    path: /mutation-bulk_authorize_ips
    method: POST
- name: bulk_deauthorize_domains
  endpoint:
    path: /mutation-bulk_deauthorize_domains
    method: POST
- name: bulk_deauthorize_ips
  endpoint:
    path: /mutation-bulk_deauthorize_ips
    method: POST
- name: cancel_op
  endpoint:
    path: /mutation-cancel_op
    method: POST
- name: create_asset_group
  endpoint:
    path: /mutation-create_asset_group
    method: POST
- name: create_client_account
  endpoint:
    path: /mutation-create_client_account
    method: POST
- name: create_op_template
  endpoint:
    path: /mutation-create_op_template
    method: POST
- name: create_user_account
  endpoint:
    path: /mutation-create_user_account
    method: POST
- name: deauthorize_domains
  endpoint:
    path: /mutation-deauthorize_domains
    method: POST
- name: deauthorize_ips
  endpoint:
    path: /mutation-deauthorize_ips
    method: POST
- name: delete_client_account
  endpoint:
    path: /mutation-delete_client_account
    method: POST
- name: delete_op_template
  endpoint:
    path: /mutation-delete_op_template
    method: POST
- name: delete_op_template_by_uuid
  endpoint:
    path: /mutation-delete_op_template_by_uuid
    method: POST
- name: delete_user_account
  endpoint:
    path: /mutation-delete_user_account
    method: POST
- name: pause_op
  endpoint:
    path: /mutation-pause_op
    method: POST
- name: remove_domains_from_asset_group
  endpoint:
    path: /mutation-remove_domains_from_asset_group
    method: POST
- name: resume_op
  endpoint:
    path: /mutation-resume_op
    method: POST
- name: save_op_template
  endpoint:
    path: /mutation-save_op_template
    method: POST
- name: schedule_op_template
  endpoint:
    path: /mutation-schedule_op_template
    method: POST
- name: update_asset_group_template
  endpoint:
    path: /mutation-update_asset_group_template
    method: POST
- name: update_client_account
  endpoint:
    path: /mutation-update_client_account
    method: POST
- name: update_op_template
  endpoint:
    path: /mutation-update_op_template
    method: POST
- name: update_user_account
  endpoint:
    path: /mutation-update_user_account
    method: POST
- name: op_templates
  endpoint:
    path: /op_templates
    method: GET
- name: op_templates_count
  endpoint:
    path: /op_templates_count
    method: GET
- name: op_templates_page
  endpoint:
    path: /op_templates_page
    method: GET
- name: operators_count
  endpoint:
    path: /operators_count
    method: GET
- name: ops_count
  endpoint:
    path: /ops_count
    method: GET
- name: pentest
  endpoint:
    path: /pentest
    method: GET
- name: pentest_reports_zip_url
  endpoint:
    path: /pentest_reports_zip_url
    method: GET
- name: pentests_count
  endpoint:
    path: /pentests_count
    method: GET
- name: pentests_page
  endpoint:
    path: /pentests_page
    method: GET
- name: perspectives_count
  endpoint:
    path: /perspectives_count
    method: GET
- name: sample_op_tabs
  endpoint:
    path: /sample_op_tabs
    method: GET
- name: data_store
  endpoint:
    path: /data_store
    method: POST
    data_selector: data_store
    params:
      uuid: String!
- name: data_stores_count
  endpoint:
    path: /data_stores_count
    method: POST
    data_selector: data_stores_count
    params:
      input: OpInput!
      page_input: PageInput
- name: data_stores_csv_url
  endpoint:
    path: /data_stores_csv_url
    method: POST
    data_selector: data_stores_csv_url
    params:
      input: OpInput!
- name: external_domain_xop
  endpoint:
    path: /external_domain_xop
    method: POST
    data_selector: external_domain_xop
    params:
      uuid: String!
- name: external_domain_xops_count
  endpoint:
    path: /external_domain_xops_count
    method: POST
    data_selector: external_domain_xops_count
    params:
      op_series_uuid: String!
      page_input: PageInput
- name: host_tab_xop
  endpoint:
    path: /host_tab_xop
    method: POST
    data_selector: host_tab_xop
    params:
      uuid: String!
- name: host_tab_xops_count
  endpoint:
    path: /host_tab_xops_count
    method: POST
    data_selector: host_tab_xops_count
    params:
      op_series_uuid: String!
      page_input: PageInput
- name: hosts_csv_url
  endpoint:
    path: /hosts_csv_url
    method: POST
    data_selector: hosts_csv_url
    params:
      input: OpInput!
- name: op
  endpoint:
    path: /op
    method: POST
    data_selector: op
    params:
      op_id: String!
- name: op_tabs_page
  endpoint:
    path: /op_tabs_page
    method: POST
    data_selector: op_tabs_page
    params:
      page_input: PageInput
      exclude_sample_ops: Boolean
- name: op_template
  endpoint:
    path: /op_template
    method: POST
    data_selector: op_template
    params:
      op_template_uuid: String!
- name: session_user_account
  endpoint:
    path: /session_user_account
    method: POST
    data_selector: data.session_user_account
    params: {}
- name: weakness
  endpoint:
    path: /weakness
    method: POST
    data_selector: data.weakness
    params: {}
- name: weaknesses_count
  endpoint:
    path: /weaknesses_count
    method: POST
    data_selector: data.weaknesses_count
    params: {}
- name: weaknesses_csv_url
  endpoint:
    path: /weaknesses_csv_url
    method: POST
    data_selector: data.weaknesses_csv_url
    params: {}
- name: weaknesses_diff_csv_url
  endpoint:
    path: /weaknesses_diff_csv_url
    method: POST
    data_selector: data.weaknesses_diff_csv_url
    params: {}
- name: weaknesses_diff_page
  endpoint:
    path: /weaknesses_diff_page
    method: POST
    data_selector: data.weaknesses_diff_page
    params: {}
- name: weaknesses_diff_stats
  endpoint:
    path: /weaknesses_diff_stats
    method: POST
    data_selector: data.weaknesses_diff_stats
    params: {}
- name: weaknesses_page
  endpoint:
    path: /weaknesses_page
    method: POST
    data_selector: data.weaknesses_page
    params: {}
- name: bulk_deauthorize_ips
  endpoint:
    path: /bulk_deauthorize_ips
    method: POST
    data_selector: data.bulk_deauthorize_ips
- name: cancel_op
  endpoint:
    path: /cancel_op
    method: POST
    data_selector: data.cancel_op
- name: create_asset_group
  endpoint:
    path: /create_asset_group
    method: POST
    data_selector: data.create_asset_group
- name: create_client_account
  endpoint:
    path: /create_client_account
    method: POST
    data_selector: data.create_client_account
- name: create_op_template
  endpoint:
    path: /create_op_template
    method: POST
    data_selector: data.create_op_template
- name: create_user_account
  endpoint:
    path: /create_user_account
    method: POST
    data_selector: data.create_user_account
- name: deauthorize_domains
  endpoint:
    path: /deauthorize_domains
    method: POST
    data_selector: data.deauthorize_domains
- name: deauthorize_ips
  endpoint:
    path: /deauthorize_ips
    method: POST
    data_selector: data.deauthorize_ips
- name: delete_client_account
  endpoint:
    path: /delete_client_account
    method: POST
    data_selector: data.delete_client_account
- name: delete_op_template
  endpoint:
    path: /delete_op_template
    method: POST
    data_selector: data.delete_op_template
- name: delete_op_template_by_uuid
  endpoint:
    path: /delete_op_template_by_uuid
    method: POST
    data_selector: data.delete_op_template_by_uuid
- name: delete_user_account
  endpoint:
    path: /delete_user_account
    method: POST
    data_selector: data.delete_user_account
- name: update_op_template
  endpoint:
    path: /update_op_template
    method: POST
    data_selector: data.update_op_template
- name: update_user_account
  endpoint:
    path: /update_user_account
    method: POST
    data_selector: data.update_user_account
- name: pause_op
  endpoint:
    path: /pause_op
    method: POST
- name: remove_domains_from_asset_group
  endpoint:
    path: /remove_domains_from_asset_group
    method: POST
- name: resume_op
  endpoint:
    path: /resume_op
    method: POST
- name: save_op_template
  endpoint:
    path: /save_op_template
    method: POST
- name: schedule_op_template
  endpoint:
    path: /schedule_op_template
    method: POST
- name: update_asset_group_template
  endpoint:
    path: /update_asset_group_template
    method: POST
- name: update_client_account
  endpoint:
    path: /update_client_account
    method: POST
- name: AttackPath
  endpoint:
    path: /attack_paths
    method: POST
    data_selector: attack_paths
    params: {}
- name: AttackPathsPage
  endpoint:
    path: /attack_paths_page
    method: POST
    data_selector: attack_paths
    params: {}
- name: DataStore
  endpoint:
    path: /DataStore
    method: GET
    data_selector: dataStores
- name: Op
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.op
    params: {}
- name: OpDiffInput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.weaknesses_diff_page
    params: {}
- name: OpInput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.op
    params: {}
- name: FilterBy
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: FilterByInput
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: FilterByInputMode
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: ImpactType
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreMapping
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreSubtechnique
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreTactic
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: MitreTechnique
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: op_tabs
  endpoint:
    path: /op_tabs
    method: GET
    data_selector: op_tabs
- name: op_templates
  endpoint:
    path: /op_templates
    method: GET
    data_selector: op_templates
- name: pentest
  endpoint:
    path: /pentests
    method: POST
    data_selector: pentests
    params: {}
- name: pentestable_entities
  endpoint:
    path: /pentestable_entities
    method: POST
    data_selector: pentestable_entities
    params: {}
- name: ScheduleOpFormInput
  endpoint:
    path: /scheduleOpFormInput
    method: POST
    data_selector: op
    params: {}
- name: UpdateUserAccountInput
  endpoint:
    path: /updateUserAccountInput
    method: POST
    data_selector: userAccount
    params: {}
- name: weakness
  endpoint:
    path: /weakness
    method: GET
    data_selector: weaknesses
- name: weaknesses_diff_page
  endpoint:
    path: /weaknesses_diff_page
    method: GET
    data_selector: weaknesses
- name: weaknesses_page
  endpoint:
    path: /weaknesses_page
    method: GET
    data_selector: weaknesses
- name: LLMNR
  endpoint:
    path: /Responder/LLMNR
    method: GET
    data_selector: records
    params: {}
- name: NBT-NS
  endpoint:
    path: /Responder/NBT-NS
    method: GET
    data_selector: records
    params: {}
- name: mDNS
  endpoint:
    path: /Responder/mDNS
    method: GET
    data_selector: records
    params: {}
- name: MSSQL
  endpoint:
    path: /Responder/MSSQL
    method: GET
    data_selector: records
    params: {}
- name: RDP
  endpoint:
    path: /Responder/RDP
    method: GET
    data_selector: records
    params: {}
- name: weaknesses
  endpoint:
    path: /knowledge_base/weaknesses
    method: GET
    data_selector: weaknesses
    params: {}
- name: internal_pentests
  endpoint:
    path: /knowledge_base/exposure_score/#internal-pentests
    method: GET
    data_selector: table
    params: {}
- name: external_pentests
  endpoint:
    path: /knowledge_base/exposure_score/#external-pentests
    method: GET
    data_selector: table
    params: {}
- name: attack_configuration
  endpoint:
    path: /knowledge_base/attack_configurations/
    method: GET
    data_selector: attack_configurations
- name: pentest
  endpoint:
    path: ''
    method: POST
    data_selector: data.pentest
    params:
      op_id: 12341234-1234-1234-1234-123412341234
- name: pentest_reports_zip
  endpoint:
    path: ''
    method: POST
    data_selector: data.pentest_reports_zip_url
    params:
      input:
        op_id: 12341234-1234-1234-1234-123412341234
- name: action_logs
  endpoint:
    path: ''
    method: POST
    data_selector: data.action_logs_page.action_logs
    params:
      input:
        op_id: 12341234-1234-1234-1234-123412341234
      page_input:
        page_num: 1
        page_size: 2
        order_by: start_time
        sort_order: DESC
- name: create_pentest
  endpoint:
    path: ''
    method: POST
    data_selector: data.schedule_op_template.op
    params:
      op_template_name: Default 1 - Recommended
      op_name: Pentest created via API
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in horizon3
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token â€” requires setup of connected app in horizon3
- Use create_op_template and update_op_template instead of save_op_template.
- Requires setup of connected app in api
- Paginated data of pentests.
- One Weakness record per unique vuln_id + affected asset combination.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Tripwires act as a passive yet powerful defense mechanism, silently waiting until
  a malicious actor attempts to interact with them.
- The CLI allows users to manage and automate key aspects of pentesting without relying
  on the Portal.
- It is HIGHLY recommended to verify all the downloads from Horizon3.ai to ensure
  you are getting the correct files.
- OVA is pre-configured with the necessary inbound ports already open
- NodeZero Gateway is available exclusively to paid customers
- NodeZero Gateways are ideal for networks with strict security policies or outbound
  traffic restrictions
- Outbound network access depends on the portal-instance generating the test rather
  than the location of the NodeZero host.
- The NodeZero Host is a critical component of the NodeZero solution, enabling internal
  penetration testing to identify vulnerabilities within your network.
- Ensure necessary packages and libraries are installed.
- Check for blocking configurations or restricted access.
- Great for scenario-based testing - assess what an attacker can view and do from
  the perspective of your NodeZero host.
- Ideal for comprehensive coverage – understanding what’s in your infrastructure and
  prioritizing from an attacker’s viewpoint.
- Runners are designed exclusively for internal pentests.
- NodeZero deployment depends on specific insights aimed from pentest.
- Select placement and intent that align with security goals.
- Tripwire deployment can be enabled during any Internal, External, Phishing Impact,
  or Rapid Response pentest.
- Only Rapid Response tests that make use of the RAT are able to drop tripwires.
- NodeZero generates an alert as soon as it detects activity on a tripwire.
- There may be a slight difference between the Tripped On timestamp and the alert
  timestamp.
- 'Use Test Credentials: Only use designated test accounts and credentials'
- 'Coordinate with Security Team: Inform your security team before conducting tests'
- 'Test During Maintenance Windows: Schedule tests during off-peak hours when possible'
- 'Document Test Activities: Keep detailed logs of all testing activities'
- 'Clean Up After Testing: Remove test artifacts and reset systems as needed'
- AD Tripwires testing generates real events in your customer environment and requires
  careful coordination.
- Detection may appear in the portal before alerts are delivered, so check the portal
  periodically.
- As an Org Admin, you can grant any team member with access to NodeZero the ability
  to fully manage NodeZero Tripwires.
- Only one instance of Splunk Cloud can be connected at a time.
- Only one instance of Microsoft Sentinel can be connected at a time.
- Customize the Status Code for responses based on conditions.
- Tripwire accounts are configured with long, complex, random passwords that are extremely
  unlikely to be cracked, even with dedicated hardware.
- These accounts are not used for legitimate logins and will not generate events for
  successful authentication.
- The AD Tripwires domain policy does not enable 'Audit account management' events.
- Requires setup of Group Policy Object (GPO) for event logging.
- Ensure execution on a machine joined to the target domain.
- Removing the Domain Policy does not fully remove AD Tripwires. Additional steps
  are required to clean up tripwire accounts, agent configuration, and related infrastructure.
- Events 4768 and 4769 can significantly increase log volume in busy environments
- May impact log storage and SIEM performance
- Consider log retention policies and filtering strategies when enabling these events
- The Event Collector only processes events related to tripwire accounts, reducing
  the data volume sent to the AD Agent
- Legitimate users and applications have no reason to interact with tripwire accounts.
- Any activity indicates reconnaissance or active compromise.
- This guide helps resolve common issues encountered during AD Tripwires setup and
  operation.
- Verify the extracted folder contains all required files (`gpreport.xml`, `manifest.xml`,
  `Backup.xml`)
- Ensure you're selecting the correct folder path during import
- Check that you have Domain Admin privileges
- 'Force Group Policy update: Run `gpupdate /force` on domain controllers'
- 'Check GPO link: Verify the policy is linked to Domain Controllers OU'
- 'Verify task scheduler: Open `taskschd.msc` and look for ''IoA Collector'' task'
- Check event logs for Group Policy errors in Windows Event Viewer
- Verify service account permissions are correctly configured
- Check network connectivity between NodeZero runner and domain controller
- Ensure the specified domain controller hostname is accessible
- Verify the service account has necessary permissions to access `SYSVOL`
- Verify tripwire accounts are created and configured correctly
- Check that the scheduled task is running on domain controllers
- Test connectivity to the EventAnalytics directory in `SYSVOL`
- Review `AD Agent` logs on the NodeZero runner
- Ensure the account used for provisioning has the required permissions
- Verify the domain is accessible from the machine running the utility
- Check for naming conflicts with existing accounts
- Review Active Directory permissions and domain policies that might block account
  creation
- Open Group Policy Management Console (`gpmc.msc`)
- Navigate to Domain Controllers OU
- Verify 'H3 IoA Policy' appears in the linked GPOs list
- Check GPO status shows as 'Enabled'
- On each domain controller, open Task Scheduler (`taskschd.msc`)
- Look for 'IoA Collector' task in Task Scheduler Library
- Verify task is enabled and shows recent successful runs
- Check task history for any errors
- Open Active Directory Users and Computers (`dsa.msc`)
- Locate the created tripwire accounts
- Verify account properties match expected configurations
- Exposed credential accounts have descriptions with embedded credentials
- Kerberoastable accounts have Service Principal Names (SPNs) configured
- AS-REP Roastable accounts have 'Do not require Kerberos preauthentication' enabled
- In Horizon3 portal, navigate to AD Tripwires management
- Verify `AD Agent` shows as 'Active' status
- Check last communication timestamp is recent
- Review any error messages or warnings displayed
- Each vulnerability tracked by the Horizon3 Rapid Response team gets its own activity
  card.
- The cards contain a wealth of information including vulnerability title, CVE number,
  status tags, description, mitigations, additional references, and a timeline.
- NodeZero sends an email once the Pentest completes.
- Improved Pentest Scheduling Experience with new options
- CISA KEV Filtering added for Insights
- New Pentest Scheduling Workflow for new users
- IAM Data now Exportable from Azure and AWS pentest results
- This version of the NodeZero MCP Server only supports a locally hosted MCP server
  for use with your own IDE/AI Client & your own LLM models.
- The next release will offer a Horizon3.ai Hosted MCP Server.
- Always verify the files download come from Horizon3.
- A user with SUDO permission is required. Do not install as Root.
- Executing this script 'AS IS' will update the OS libraries that do not require user
  interaction, and the script will automatically REBOOT the OS upon completion.
- The validation script ensures your NodeZero host is properly configured and ready
  for operations by checking key system and network requirements.
- Always verify the files you download come from Horizon3.
- If your NodeZero Host requires sudo to run docker commands, then you may need to
  start the Runner using sudo.
- For troubleshooting information, view ExecProcessor logs and the nodezero logs
- Don't forget the asterisk on the end of sourcetype=nodezero*
- A ReadOnly API Key is required to access the API.
- To ensure the integrity and authenticity of your files, always verify that downloads
  originate from Horizon3.ai.
- Every download distributed here includes a download file and a checksum file containing
  a SHA256 hash to confirm the file’s authenticity and integrity.
- This API provides access to a list of known vulnerabilities and weaknesses.
- Enabling these options may increase the pentest duration.
- Attack Configuration options may vary depending on the pentest type.
- Requirements are grouped by Portal region.
- The NodeZero Host is essential for internal pentests, where threats originate from
  within a corporate network.
- Deployment can be done using Preconfigured OVA or manual installation.
- Requires setup of OAuth2 credentials in the portal.
- Powerful set of tools designed to help security teams seamlessly Fix and Verify
  weaknesses uncovered during autonomous pentests.
- Runners are designed exclusively for internal pentests. For external pentests, NodeZero
  is deployed automatically in the Horizon3.ai cloud.
- This operation may take longer as NodeZero enumerates any accessible IPs and DNS
  names, including edge routers.
- If you want NodeZero to discover every detail of your environment, place it in an
  unrestricted ACL to allow it to explore all accessible areas.
- 'OSINT Focused: This external deployment focuses on cloud-facing assets and can
  be combined with internal operations for comprehensive user/password validation.'
- 'Execution Limits: NodeZero respects defined scopes and avoids actions on out-of-scope
  or inaccessible assets unless explicitly chained or vulnerable.'
- Tripwires integrate seamlessly into your existing workflows, enhancing your security
  posture without adding manual overhead.
- Requires setup of connected app in NodeZero
- Uses OAuth2 with refresh token - requires setup of connected app in NodeZero
- Some data may have rate limits or require specific permissions
- For real-time updates and the latest release info, check notifications directly
  within the NodeZero Portal.
- NodeZero supports automatic credential injection for scheduled operations.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Some endpoints may have rate limits
- NodeZero now supports the OAuth 2.0 device authorization grant (Device Code Flow)
  to allow users to inject MFA-protected Azure Entra ID credentials.
- Gray-Box Pentest utilizes a role with read-only permissions for AWS.
- Azure Entra ID Pentest can analyze attack paths in hybrid environments.
- Introduces a Rapid Response Center in the portal for early alerts and actionable
  intelligence.
- New Exposure Level and Phishing Impact Score charts enhance visual feedback on pentest
  status.
- Enhanced the Schedule selection UI in the template management form to include options
  for Weekly, Monthly, Quarterly, or Custom cadences.
- New features include Rapid Response Alert Center for early alerts.
- Enhancements for Azure support for injected credentials.
- Attack Path Enhancements include a Vertical Display option, along with Concise/Detailed
  views.
- External Asset Discovery has been updated to assist in identifying the status and
  warnings for discovered hosts that may not be authorized for pentesting.
- Enhanced Azure attack flow within NodeZero, including authentication with Azure
  Refresh and Azure Access Token.
- NodeZero is equipped to scan for various types of PII/PCI.
- Single Sign-On (SSO) is now available in open beta for all paid accounts! Integrate
  with your preferred OIDC-compatible identity provider.
- Experimental support for Single Sign-On using OpenID Connect (OIDC)
- API key for H3-CLI to communicate with our API.
- The New User Experience is now the default interface for NodeZero, providing an
  intuitive and streamlined experience.
- Existing customers can still access the Legacy Portal via a button in the portal
  toolbar.
- New customers who sign up after April 1, 2023, will not have the Legacy Portal option.
- 'Known Issue: Switching between portal versions may cause the page to fail to load
  intermittently. A hard refresh should resolve this issue.'
- Uses GraphQL mutations for updates
- Cyanide utilizes opportunistic network protocol poisoning techniques and active
  coercion techniques to solicit a device to connect to NodeZero with authentication
  material.
- Cyanide will only work within NodeZero's subnet
- NodeZero® is heavily involved with the cybersecurity community as such there is
  some industry jargon that we use in our product and documentation.
- NodeZero attempts to discover and assess potentially sensitive information when
  a filesystem or service is compromised.
- Cleanup of the test file may fail in exceptional circumstances.
- Deletion of machine accounts may fail if the correct permissions are not obtained.
- Restoration of original template configuration may fail in exceptional cases.
- This check may cause certain printer models to print out pages.
- Manual cleanup will be required in certain instances.
- There is a small chance setting policies back to their original settings may fail.
- For vCenter servers running on Linux, it is possible that randomly-named webshells
  will be left behind on the vulnerable vCenter server if the exploit fails.
- Cleanup of the webshell may fail in exceptional cases.
- This upload is likely to be caught by AV software on the host.
- GraphQL allows for querying only the data needed, avoiding over-fetching.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check your input parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404 Not Found: The requested resource could not be found.'
- Do not alter your network beyond normal operations during a pentest
- 'Alerts Not Generated: Check network connectivity from target systems'
- 'Delayed Alerts: Network latency may cause delays'
- 'Missing Integration Alerts: Test webhook endpoints independently'
- AD Tripwires alerts may take 20-30 minutes to be delivered due to the event processing
  pipeline.
- '400: Bad Request - Check the request parameters.'
- '404: Not Found - Ensure the endpoint is correct.'
- 'DOMAIN_MISMATCH: Ensure the command is executed on the correct domain.'
- '"Access Denied" during provisioning'
- '"Domain Controller not accessible"'
- '"SYSVOL path not found"'
- 'Access Denied: Insufficient privileges for Active Directory operations or `SYSVOL`
  access'
- 'Domain Controller not accessible: Network connectivity or DNS resolution issues'
- 'SYSVOL path not found: Incorrect domain controller configuration or `SYSVOL` permissions'
- '400: Bad Request: Malformed request, see errors field in the response data.'
- '401: Unauthorized: Not authenticated due to an invalid or expired JWT.'
- '403: Forbidden: Not authorized to access the requested resource.'
- '5xx: Internal Server Error: An unexpected error was encountered.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '429 Too Many Requests: Rate limit exceeded. Reduce request frequency.'
- '401 Unauthorized: This vulnerability does not require authentication.'
- 'Invalid credentials: Ensure correct API key is used'
- 'Rate limit exceeded: Try again later'
- 'Zmap Upgrade: Moved to version 3.0.0 to diminish errors that could disrupt the
  scope_discovery module in certain operations.'
- '400 Bad Request: Malformed request, see errors field in the response data.'
- '401 Unauthorized: Not authenticated due to an invalid or expired JWT.'
- '403 Forbidden: Not authorized to access the requested resource.'
- '5xx Internal Server Error: An unexpected error was encountered.'
- There is a small chance of locking out accounts.
- This module may trigger a partial denial of service condition in the hostd process.
- '400: Bad Request'
- '401: Unauthorized'
- '5xx: Internal Server Error'
- '401 Unauthorized: Check OAuth token validity.'
- '400 Bad Request: Verify query syntax and variables.'
auth_info:
  mentioned_objects:
  - DataStore
  - ExternalDomainXop
  - HostTabXop
  - Op
  - OpTemplate
  - OauthToken
  - AuthProvider
  - NamedCredential
  - ClientAccountUpdateInput
  - ScheduleOpFormInput
  - AssetGroupFragment
  - OpTemplateFragment
  - OpTab
  - OpInput
  - PageInput
  - OpDiffInput
  - JWT
client:
  base_url: https://docs.horizon3.ai/api/
  auth:
    type: oauth2
source_metadata: null
