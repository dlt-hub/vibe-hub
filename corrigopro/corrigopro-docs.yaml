resources:
- name: work_order
  endpoint:
    path: /direct/api/workOrder
    method: GET
    params:
      ids: '87340'
- name: work_order
  endpoint:
    path: /api/v1/work_orders
    method: POST
    data_selector: work_order_data
- name: work_order_status_update
  endpoint:
    path: /api/v1/work_orders/status_updates
    method: POST
    data_selector: status_update_data
- name: work_order_search
  endpoint:
    path: /api/workorder/search
    method: POST
    data_selector: workOrders
- name: work_order_details
  endpoint:
    path: /api/workorder
    method: GET
    data_selector: workOrderDetails
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
- name: work_order_search
  endpoint:
    path: /api/workorder/search
    method: POST
    data_selector: results
- name: work_order_details
  endpoint:
    path: /api/workorder
    method: GET
    data_selector: workOrder
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
- name: work_order_accept
  endpoint:
    path: /api/workOrder/accept
    method: PUT
- name: bulk_accept
  endpoint:
    path: /api/bulk/accept
    method: PUT
- name: work_order_get
  endpoint:
    path: /api/workOrder/
    method: GET
- name: work_order_accept
  endpoint:
    path: /api/workOrder/accept
    method: PUT
    data_selector: response
    params: {}
- name: work_order_get
  endpoint:
    path: /api/workOrder/
    method: GET
    data_selector: response
    params: {}
- name: bulk_accept
  endpoint:
    path: /api/bulk/accept
    method: PUT
    data_selector: response
    params: {}
- name: reject_work_order
  endpoint:
    path: /api/workOrder/reject
    method: PUT
- name: bulk_reject_work_order
  endpoint:
    path: /api/bulk/reject
    method: PUT
- name: get_work_order
  endpoint:
    path: /api/workOrder/
    method: GET
- name: work_order_reject
  endpoint:
    path: /api/workOrder/reject
    method: PUT
- name: bulk_work_order_reject
  endpoint:
    path: /api/bulk/reject
    method: PUT
- name: work_order_status
  endpoint:
    path: /api/workOrder/
    method: GET
- name: work_order_check_in
  endpoint:
    path: /api/workOrder/checkIn
    method: PUT
- name: work_order_status
  endpoint:
    path: /api/workOrder/
    method: GET
- name: work_order_check_in
  endpoint:
    path: /api/workOrder/checkIn
    method: PUT
- name: work_order_status
  endpoint:
    path: /api/workOrder/
    method: GET
- name: work_order_checkout
  endpoint:
    path: /api/workorder/checkout
    method: PUT
- name: work_order
  endpoint:
    path: /api/workOrder/
    method: GET
- name: customer_settings
  endpoint:
    path: /api/customerSettings
    method: GET
- name: work_order_checkout
  endpoint:
    path: /api/workorder/checkout
    method: PUT
- name: work_order_get
  endpoint:
    path: /api/workOrder/
    method: GET
- name: customer_settings
  endpoint:
    path: /api/customerSettings
    method: GET
- name: equipment_add
  endpoint:
    path: /api/equipment/
    method: POST
- name: equipment_update
  endpoint:
    path: /api/equipment/
    method: PUT
- name: equipment_delete
  endpoint:
    path: /api/equipment/
    method: DELETE
- name: work_order
  endpoint:
    path: /api/workorder
    method: GET
    data_selector: work_orders
    params:
      ids: work_order_id
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
- name: download_attachment
  endpoint:
    path: /api/attachments/downloadUrl
    method: GET
    data_selector: downloadUrl
- name: upload_attachment
  endpoint:
    path: /api/attachments
    method: POST
    data_selector: AttachmentId
- name: update_attachment
  endpoint:
    path: /api/attachments
    method: PUT
    data_selector: MessageId
- name: delete_attachment
  endpoint:
    path: /api/attachments
    method: DELETE
    data_selector: MessageId
- name: attachments
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: upload_attachment
  endpoint:
    path: /api/attachments
    method: POST
    data_selector: AttachmentId
    params: {}
- name: download_attachment
  endpoint:
    path: /api/attachments/downloadUrl
    method: GET
    data_selector: downloadUrl
    params: {}
- name: update_attachment
  endpoint:
    path: /api/attachments
    method: PUT
    data_selector: MessageId
    params: {}
- name: delete_attachment
  endpoint:
    path: /api/attachments
    method: DELETE
    data_selector: MessageId
    params: {}
- name: workOrder
  endpoint:
    path: /api/workOrder
    method: GET
- name: quoteSubmit
  endpoint:
    path: /api/workOrder/quoteSubmit
    method: PUT
- name: priceList
  endpoint:
    path: /api/invoice/pricelist
    method: GET
- name: work_order
  endpoint:
    path: /api/workOrder
    method: GET
- name: quote_submit
  endpoint:
    path: /api/workOrder/quoteSubmit
    method: PUT
- name: price_list
  endpoint:
    path: /api/invoice/pricelist
    method: GET
- name: specifying_equipment_worked_on
  endpoint:
    path: /docs/specifying-equipment-used
    method: GET
- name: assigning_associates
  endpoint:
    path: /docs/assigning-associates
    method: GET
- name: completing_procedures
  endpoint:
    path: /docs/completing-procedures
    method: GET
- name: completing_checklist
  endpoint:
    path: /docs/completing-checklist
    method: GET
- name: sending_receiving_messages
  endpoint:
    path: /docs/messaging
    method: GET
- name: retrieving_customers
  endpoint:
    path: /docs/getting-customers
    method: GET
- name: assign_associate
  endpoint:
    path: /api/bulk/assign
    method: PUT
    data_selector: array_of_objects
- name: retrieving_associates
  endpoint:
    path: /api/associates
    method: GET
    data_selector: associates
- name: checklist
  endpoint:
    path: /api/checklist
    method: GET
    data_selector: CheckListItemDescriptor
- name: update_checklist
  endpoint:
    path: /api/checklist
    method: PUT
    data_selector: CheckListItem
    params: {}
- name: procedure
  endpoint:
    path: /api/procedure
    method: GET
- name: procedure_step
  endpoint:
    path: /api/procedure/step
    method: GET
- name: update_procedure_step
  endpoint:
    path: /api/procedure/step
    method: PUT
- name: checklist
  endpoint:
    path: /api/checklist
    method: GET
    data_selector: CheckListItemDescriptor
- name: checklist_update
  endpoint:
    path: /api/checklist
    method: PUT
    data_selector: CheckListItem
- name: mark_as_na
  endpoint:
    path: /api/procedure/markAsNA
    method: PUT
- name: procedure
  endpoint:
    path: /api/procedure/
    method: GET
- name: work_order_reopen
  endpoint:
    path: /api/workOrder/reopen
    method: PUT
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: messages
  endpoint:
    path: /api/messages
    method: GET
    data_selector: TextMessage
- name: send_message
  endpoint:
    path: /api/messages
    method: POST
- name: customer_settings
  endpoint:
    path: /api/customerSettings/
    method: GET
    data_selector: customerSettings
- name: reopen_work_order
  endpoint:
    path: /api/workOrder/reopen
    method: PUT
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: customer_settings
  endpoint:
    path: /api/customerSettings/
    method: GET
- name: work_done_details
  endpoint:
    path: /api/workOrder/workDoneDetails
    method: PUT
- name: unassign_associates
  endpoint:
    path: /api/bulk/unassign
    method: PUT
    data_selector: ''
    params: {}
- name: equipment_available
  endpoint:
    path: /api/equipment/available
    method: GET
    data_selector: equipmentAssets
- name: equipment_add
  endpoint:
    path: /api/equipment
    method: POST
    data_selector: response
- name: equipment_details
  endpoint:
    path: /api/equipment/details
    method: GET
    data_selector: equipmentDetail
- name: equipment_update
  endpoint:
    path: /api/equipment
    method: PUT
    data_selector: response
- name: equipment_delete
  endpoint:
    path: /api/equipment
    method: DELETE
    data_selector: response
- name: internal_note
  endpoint:
    path: /api/workorder/note
    method: PUT
    data_selector: null
    params: {}
- name: work_order_details
  endpoint:
    path: /api/workorder
    method: GET
    data_selector: null
    params: {}
- name: work_order_search
  endpoint:
    path: /api/workorder/search
    method: POST
    data_selector: null
    params: {}
- name: internal_note_history
  endpoint:
    path: /api/workorder/noteHistory
    method: GET
    data_selector: null
    params: {}
- name: work_done_details
  endpoint:
    path: /api/workOrder/workDoneDetails
    method: PUT
- name: unassign_associates
  endpoint:
    path: /api/bulk/unassign
    method: PUT
- name: customer_settings
  endpoint:
    path: /api/customerSettings/additionalFieldsDescriptors
    method: GET
- name: work_order
  endpoint:
    path: /api/WorkOrder/additionalField
    method: PUT
- name: work_order_history
  endpoint:
    path: /api/WorkOrder/AdditionalFieldHistory
    method: GET
- name: required_document
  endpoint:
    path: /api/requiredDocument
    method: GET
    data_selector: records
    params: {}
- name: required_document_download_url
  endpoint:
    path: /api/requiredDocument/downloadUrl
    method: GET
    data_selector: url
    params: {}
- name: add_required_document
  endpoint:
    path: /api/requiredDocument
    method: POST
    data_selector: success
    params: {}
- name: delete_required_document
  endpoint:
    path: /api/requiredDocument
    method: DELETE
    data_selector: success
    params: {}
- name: update_required_document
  endpoint:
    path: /api/requiredDocument
    method: PUT
    data_selector: success
    params: {}
- name: required_document
  endpoint:
    path: /api/requiredDocument
    method: GET
    data_selector: records
- name: required_document_download_url
  endpoint:
    path: /api/requiredDocument/downloadUrl
    method: GET
    data_selector: url
- name: required_document_add
  endpoint:
    path: /api/requiredDocument
    method: POST
    data_selector: result
- name: required_document_delete
  endpoint:
    path: /api/requiredDocument
    method: DELETE
    data_selector: result
- name: required_document_update
  endpoint:
    path: /api/requiredDocument
    method: PUT
    data_selector: result
- name: refrigerant_circuits
  endpoint:
    path: /api/refrigerant/circuits
    method: GET
- name: refrigerant_cylinders
  endpoint:
    path: /api/refrigerant/cylinders
    method: GET
- name: refrigerant_transactions
  endpoint:
    path: /api/refrigerant/transaction
    method: GET
- name: available_transaction_types
  endpoint:
    path: /api/refrigerant/availabletransactiontypes
    method: GET
- name: add_refrigerant
  endpoint:
    path: /api/refrigerant/add
    method: POST
- name: delete_refrigerant
  endpoint:
    path: /api/refrigerant/delete
    method: POST
- name: update_refrigerant
  endpoint:
    path: /api/refrigerant/update
    method: POST
- name: refrigerant_certification
  endpoint:
    path: /api/refrigerant/certification
    method: GET
- name: add_certification
  endpoint:
    path: /api/refrigerant/certification
    method: POST
- name: update_certification
  endpoint:
    path: /api/refrigerant/certification
    method: PUT
- name: delete_certification
  endpoint:
    path: /api/refrigerant/certification
    method: DELETE
- name: refrigerant_circuits
  endpoint:
    path: /api/refrigerant/circuits
    method: GET
- name: refrigerant_cylinders
  endpoint:
    path: /api/refrigerant/cylinders
    method: GET
- name: refrigerant_transactions
  endpoint:
    path: /api/refrigerant/transaction
    method: GET
- name: available_transaction_types
  endpoint:
    path: /api/refrigerant/availabletransactiontypes
    method: GET
- name: add_refrigerant_transaction
  endpoint:
    path: /api/refrigerant/add
    method: POST
- name: delete_refrigerant_transaction
  endpoint:
    path: /api/refrigerant/delete
    method: POST
- name: update_refrigerant_transaction
  endpoint:
    path: /api/refrigerant/update
    method: POST
- name: refrigerant_certifications
  endpoint:
    path: /api/refrigerant/certification
    method: GET
- name: appointment_info_changed
  endpoint:
    path: /path/to/appointment/info/changed
    method: POST
    data_selector: Appointment
    params: {}
- name: appointment_info_changed
  endpoint:
    path: /appointment/info/changed
    method: POST
    data_selector: Appointment
    params: {}
- name: attachment
  endpoint:
    path: /api/attachments
    method: GET
    data_selector: AttachmentId
- name: download_url
  endpoint:
    path: /api/attachments/downloadUrl
    method: GET
    data_selector: downloadUrl
- name: attachment
  endpoint:
    path: /api/attachments/downloadUrl
    method: GET
- name: attachment_removed
  endpoint:
    path: /docs/attachment-removed
    method: GET
    data_selector: records
- name: completion_info_changed
  endpoint:
    path: /completion-info-changed
    method: POST
    data_selector: Notification
    params: {}
- name: check_list_migrated
  endpoint:
    path: /checklist/migrated
    method: GET
    data_selector: Steps
    params:
      incremental: ProcedureId
- name: internal_note_changed
  endpoint:
    path: /webhook/internalNoteChanged
    method: POST
    data_selector: InternalNote
    params: {}
- name: message_received
  endpoint:
    path: /messages/received
    method: POST
    data_selector: messages
    params: {}
- name: internal_note_changed
  endpoint:
    path: /internal/note/changed
    method: POST
    data_selector: InternalNote
    params: {}
- name: invoice_status_changed
  endpoint:
    path: /invoice/status/changed
    method: POST
    data_selector: Status
    params: {}
- name: procedure_marked_as_not_applicable
  endpoint:
    path: /procedure/marked-as-not-applicable
    method: POST
    data_selector: ProcedureId, IsMarkedNa
    params: {}
- name: quote_changed
  endpoint:
    path: /quote/changed
    method: POST
    data_selector: Quote
    params: {}
- name: procedure_marked_as_not_applicable
  endpoint:
    path: /procedure/marked-as-not-applicable
    method: POST
    data_selector: ProcedureId
    params: {}
- name: step_update
  endpoint:
    path: /step/update
    method: POST
    data_selector: Steps
    params: {}
- name: technician_checked_in
  endpoint:
    path: /technician/checkedin
    method: POST
    data_selector: Status
    params: {}
- name: technician_checked_out
  endpoint:
    path: /technician/checked-out
    method: POST
    data_selector: data
    params: {}
- name: step_update
  endpoint:
    path: /step-update
    method: POST
    data_selector: Steps
    params: {}
- name: workOrder
  endpoint:
    path: /api/workOrder/workDoneDetails
    method: PUT
    data_selector: Status
    params: {}
- name: technician_checked_in
  endpoint:
    path: /technician/checked_in
    method: POST
    data_selector: Status
    params: {}
- name: technician_paused
  endpoint:
    path: /technician/paused
    method: POST
    data_selector: Status
    params: {}
- name: technician_checked_out
  endpoint:
    path: /technician/checked-out
    method: POST
    data_selector: Header
- name: work_order_accepted
  endpoint:
    path: /workorder/accepted
    method: POST
    data_selector: Status
    params: {}
- name: workOrder
  endpoint:
    path: /api/workOrder/workDoneDetails
    method: PUT
    data_selector: Status
    params: {}
- name: work_order_put_on_hold
  endpoint:
    path: /work_order/put_on_hold
    method: POST
    data_selector: work_order
    params: {}
- name: Technician paused
  endpoint:
    path: /technician/paused
    method: POST
    data_selector: Status
    params: {}
- name: work_order_recalled
  endpoint:
    path: /workorder/recalled
    method: POST
    data_selector: Status
    params: {}
- name: work_order_accepted
  endpoint:
    path: /work_order/accepted
    method: POST
    data_selector: Status
    params: {}
- name: work_order
  endpoint:
    path: /workorders
    method: POST
    data_selector: Details
    params: {}
- name: work_order_put_on_hold
  endpoint:
    path: /workorders/putonhold
    method: POST
    data_selector: Header
    params: {}
- name: work_order_rejected
  endpoint:
    path: /work_order/rejected
    method: POST
    data_selector: Status
    params: {}
- name: work_order_recalled
  endpoint:
    path: /work_order/recalled
    method: POST
    data_selector: ''
    params: {}
- name: work_order
  endpoint:
    path: /workorders
    method: POST
    data_selector: Details
    params: {}
- name: work_order_reopened
  endpoint:
    path: /work_order_reopened
    method: POST
    data_selector: Header
    params: {}
- name: work_order_rejected
  endpoint:
    path: /work-order/rejected
    method: POST
    data_selector: Status
    params: {}
- name: work_order_reopened
  endpoint:
    path: /work_order/reopened
    method: POST
    data_selector: notification
    params: {}
- name: invoices
  endpoint:
    path: /api/invoice
    method: GET
    data_selector: invoice
    params: {}
- name: Induction and Safety Management Status Changed
  endpoint:
    path: /induction-and-safety-management-status-changed
    method: GET
    data_selector: Status
    params: {}
- name: invoices
  endpoint:
    path: /docs/retrieving-invoices
    method: GET
- name: edit_invoices
  endpoint:
    path: /docs/editing-invoices
    method: POST
- name: submit_invoices
  endpoint:
    path: /docs/submitting-invoices
    method: PUT
- name: invoice
  endpoint:
    path: /api/invoice
    method: PUT
    data_selector: invoice
    params: {}
- name: invoice_pricelist
  endpoint:
    path: /api/invoice/pricelist
    method: GET
    data_selector: pricelist
    params: {}
- name: invoice
  endpoint:
    path: /api/invoice
    method: GET
    data_selector: invoice
    params: {}
- name: submit_invoice
  endpoint:
    path: /api/invoice/submit/
    method: PUT
- name: invoice
  endpoint:
    path: /api/invoice
    method: GET
    data_selector: ConcurrencyId
    params: {}
- name: invoice
  endpoint:
    path: /api/invoice
    method: PUT
    data_selector: invoice
    params: {}
- name: invoice_pricelist
  endpoint:
    path: /api/invoice/pricelist
    method: GET
    data_selector: pricelist
    params: {}
- name: invoice
  endpoint:
    path: /api/invoice/submit/
    method: PUT
    data_selector: null
    params: {}
- name: Invoice
  endpoint:
    path: /api/invoice
    method: POST
    data_selector: records
    params: {}
- name: IVRInfo
  endpoint:
    path: /api/ivrinfo
    method: GET
    data_selector: records
    params: {}
- name: InternalNote
  endpoint:
    path: /api/internalnote
    method: POST
    data_selector: records
    params: {}
- name: LineItem
  endpoint:
    path: /api/lineitem
    method: POST
    data_selector: records
    params: {}
- name: MessageHeader
  endpoint:
    path: /api/messageheader
    method: GET
    data_selector: records
    params: {}
- name: NTE
  endpoint:
    path: /api/nte
    method: POST
    data_selector: records
    params: {}
- name: Participants
  endpoint:
    path: /api/participants
    method: POST
    data_selector: records
    params: {}
- name: PerformedBy
  endpoint:
    path: /api/performedby
    method: POST
    data_selector: records
    params: {}
- name: Placemark
  endpoint:
    path: /api/placemark
    method: POST
    data_selector: records
    params: {}
- name: Procedure
  endpoint:
    path: /api/procedure
    method: POST
    data_selector: records
    params: {}
- name: ProcedureUpdates
  endpoint:
    path: /api/procedureupdates
    method: POST
    data_selector: records
    params: {}
- name: Quote
  endpoint:
    path: /api/quote
    method: POST
    data_selector: records
    params: {}
- name: RepairCategory
  endpoint:
    path: /api/repaircategory
    method: GET
    data_selector: records
    params: {}
- name: RepairCode
  endpoint:
    path: /api/repaircode
    method: GET
    data_selector: records
    params: {}
- name: RepairInfo
  endpoint:
    path: /api/repairinfo
    method: POST
    data_selector: records
    params: {}
- name: RepairInfoHeader
  endpoint:
    path: /api/repairinfoheader
    method: GET
    data_selector: records
    params: {}
- name: Sender
  endpoint:
    path: /api/sender
    method: POST
    data_selector: records
    params: {}
- name: SearchModel
  endpoint:
    path: /api/searchmodel
    method: GET
    data_selector: records
    params: {}
- name: ScheduleInfo
  endpoint:
    path: /api/scheduleinfo
    method: POST
    data_selector: records
    params: {}
- name: SLA
  endpoint:
    path: /api/sla
    method: GET
    data_selector: records
    params: {}
- name: Step
  endpoint:
    path: /api/step
    method: POST
    data_selector: records
    params: {}
- name: StepAttachment
  endpoint:
    path: /api/stepattachment
    method: POST
    data_selector: records
    params: {}
- name: StepDescriptor
  endpoint:
    path: /api/stepdescriptor
    method: POST
    data_selector: records
    params: {}
- name: StepDetails
  endpoint:
    path: /api/stepdetails
    method: POST
    data_selector: records
    params: {}
- name: Subcontractor
  endpoint:
    path: /api/subcontractor
    method: POST
    data_selector: records
    params: {}
- name: TaxItemValidationResult
  endpoint:
    path: /api/taxitemvalidationresult
    method: GET
    data_selector: records
    params: {}
- name: TextMessage
  endpoint:
    path: /api/textmessage
    method: POST
    data_selector: records
    params: {}
- name: Visit
  endpoint:
    path: /api/visit
    method: POST
    data_selector: records
    params: {}
- name: VisitInfo
  endpoint:
    path: /api/visitinfo
    method: GET
    data_selector: records
    params: {}
- name: VisitProvidedService
  endpoint:
    path: /api/visitprovidedservice
    method: POST
    data_selector: records
    params: {}
- name: VisitWoDetails
  endpoint:
    path: /api/visitwodetails
    method: GET
    data_selector: records
    params: {}
- name: WorkOrder
  endpoint:
    path: /workorders
    method: GET
- name: WorkOrderSearchResult
  endpoint:
    path: /workorders/search
    method: GET
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: IVRInfo
  endpoint:
    path: /ivrinfo
    method: GET
    data_selector: ivrInfo
- name: InternalNote
  endpoint:
    path: /internalnotes
    method: GET
    data_selector: internalNotes
- name: LineItem
  endpoint:
    path: /lineitems
    method: GET
    data_selector: lineItems
- name: MessageHeader
  endpoint:
    path: /messageheader
    method: GET
    data_selector: messageHeader
- name: NTE
  endpoint:
    path: /nte
    method: GET
    data_selector: nte
- name: Participants
  endpoint:
    path: /participants
    method: GET
    data_selector: participants
- name: PerformedBy
  endpoint:
    path: /performedby
    method: GET
    data_selector: performedBy
- name: Placemark
  endpoint:
    path: /placemark
    method: GET
    data_selector: placemark
- name: Procedure
  endpoint:
    path: /procedure
    method: GET
    data_selector: procedure
- name: Quote
  endpoint:
    path: /quote
    method: GET
    data_selector: quote
- name: RepairCategory
  endpoint:
    path: /repaircategory
    method: GET
    data_selector: repairCategory
- name: RepairCode
  endpoint:
    path: /repaircode
    method: GET
    data_selector: repairCode
- name: Sender
  endpoint:
    path: /sender
    method: GET
    data_selector: sender
- name: SLA
  endpoint:
    path: /sla
    method: GET
    data_selector: sla
- name: Visit
  endpoint:
    path: /visit
    method: GET
    data_selector: visit
- name: WorkOrder
  endpoint:
    path: /workorder
    method: GET
    data_selector: records
    params: {}
- name: WorkOrderSearchResult
  endpoint:
    path: /workorder/search
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /edit/working-with-invoices
    method: GET
- name: invoices
  endpoint:
    path: /edit/working-with-invoices
    method: GET
    data_selector: records
notes:
- Every access token has a limited lifetime, but we encourage you to track token expiration
  time and reuse bearer tokens.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Become familiar with OAuth 2.0 and the way how authorization works.
- All integrations should include the ability to poll or listen for work orders.
- Listening for status update events is mandatory.
- Check lists are becoming Procedures for most Enterprise clients on March 22, 2018,
  and we discourage their usage.
- The parameter 'refresh_token' has been deprecated and will soon be removed.
- The REST web service compresses the response larger than 1 kB if the client properly
  specifies the Accept-Encoding header.
- Search returns only basic information about a work order.
- You can receive information about no more than 50 work orders in a single call.
- When retrieving work order details, attachment data is not automatically included.
- If a work order has WorkOrder.IsPreBilled property set to true, you must submit
  an invoice by using the CorigoPro Desktop.
- You can accept work orders only in New status.
- If a work order has IsPreBilled property set to true, submit an invoice using the
  CorigoPro Desktop.
- Work orders can only be accepted in New status.
- You must provide a comment specifying the reason for rejection.
- You can reject only those work orders that have New status.
- You can check-in only if a work order is in the Accepted or Paused status.
- Provide geolocation information for verification of work order activities by a customer.
- Provide geolocation information for verification of work order activities.
- You can pause a work order only when it is in the Checked-In status.
- The field ActualActionDate is an optional parameter that indicates the step has
  already been taken.
- Provide Geo-location information for verification of activities related to the work
  order.
- It is strongly recommended to check your customer settings before sending a completion
  request!
- Provide geolocation information when completing work orders.
- Ensure to stay within SLA timelines during work order completion.
- A customer can delete attachments at any time.
- The size of a file cannot exceed 20 MB.
- Attachments cannot exceed 20 MB in size.
- You cannot attach files to a work order in statuses Rejected and Recalled.
- A quote can be submitted only once. To resubmit a quote, the customer must reject
  already submitted quote even if it was approved.
- A quote cannot be submitted for work orders in Rejected and Recalled statuses.
- A quote can be submitted only once.
- To resubmit a quote, the customer must reject already submitted quote.
- Each branch of your company can have different available associates.
- Assignment does not affect work order status or other properties.
- Assignment does not affect work order status or other properties that can be retrieved
  by GET /api/workOrder/
- Checklists are becoming Procedures for most Enterprise clients on March 22, 2018,
  and we discourage their usage.
- Checklist editing functionality is available only for work orders in Accepted, CheckedIn,
  Paused and OnHold statuses.
- Message list for CorrigoPro Desktop and CorrigoPro Direct are different.
- You cannot send messages to a work order in statuses Rejected and Recalled.
- Procedure and Step update functionality is available only for work orders in Accepted,
  CheckedIn, Paused and OnHold statuses.
- WebHook notification available for updates to procedures.
- Not all customer systems support the 'reopen' operation. In this case, an error
  with code 3000 will be returned and no work order state changes will be performed.
- This operation may only be executed if a relevant work order is in Completed Status.
  Otherwise, an error code 3001 will be returned and no work order state changes will
  be performed.
- Only messages sent to CorrigoPro Desktop with visibility option set to All (Customer
  In), are sent to CorrigoPro Direct.
- Customers who are using older versions of Enterprise are not able to provide a list
  of Priorities through this method.
- Not all customer systems support the 'reopen' operation.
- This operation may only be executed if a relevant work order is in Completed Status.
- CorrigoPro Direct retrieves all customers connected to your company, no matter whether
  is there any work order from this customer or not.
- Customers who are using older versions of Enterprise are not able to provide a list
  of Priorities through this method. The result will be a blank array.
- This information will not reach the requester side until provider submits the invoice
  in Invoicing module.
- Adding a piece of equipment requires specifying its type and asset ID if applicable.
- Deleting a piece of equipment does not roll back any changes made to its attributes.
- Unassigning associates is a mirror operation of Assigning associates. All clarifications,
  warnings etc. for assignment operation are applicable for the unassignment operation.
- The URL returned by GET api/procedure/step/attachments/GetDownloadUrl/ is temporary,
  and should never be stored permanently.
- You can only attach a file to a step only if the relevant procedure is editable
  and not marked as N/A.
- An attachment can only be removed if the relevant procedure is editable and not
  marked as N/A.
- An attachment can only removed if the relevant procedure is editable and not marked
  as N/A.
- You must add the appropriate attachment to the Required Document entity to satisfy
  the Required Document condition of a work order.
- This is a separate entity and endpoint from general work order documents/attachments.
- No WebHook notifications are sent for actions initiated by CorrigoPro Direct!
- No WebHook notifications are sent for actions initiated by CorrigoPro Direct
- Every time the Appointment status is changed, your WebHook receives a notification
  containing the updated Appointment information.
- Each time an attachment is removed, your WebHook receives notification about removed
  attachments.
- Customer's application has ability to remove attached files from a work order.
- Every time an internal note is changed, your webhook receives a notification with
  information regarding that update.
- Notification payload contains the new status value and potentially additional action-specific
  info.
- When a custom field configuration is updated by the customer, your webhook receives
  a notification with information regarding that update.
- Messages sent via CorrigoPro have visibility. CorrigoPro Direct only receives message
  notifications that have visibility option set to All (Customer In).
- Notification payload will contain a new status value only, but if your customer
  disputes, authorizes or pays an invoice, payload will contain action-specific info.
- Every time a customer changes procedure in a work order accepted by your company,
  your WebHook receives a notification with the necessary information.
- If the NTE amount is changed as a result of a quote change, notification is sent
  instead of this notification.
- You must stay within current SLA timelines while accepting and completing a work
  order, as it affects your score in a customer system.
- Your WebHook receives a notification when a procedure is marked as applicable or
  not applicable by the customer or CorrigoPro Desktop.
- Every time a customer or technician update procedure steps your WebHook receives
  a notification with the necessary information.
- Actor coordinates are mandatory.
- Status must equal CheckedIn.
- Both Customer and CorigoPro Desktop applications can perform acceptance action as
  well as CorigoPro Direct.
- Completion info may be filled in through CorrigoPro Desktop, or by calling the PUT
  api/workOrder/workDoneDetails method to specify work done details.
- Currently there is no way to receive notification about ReOpen operation in CorrigoPro
  Direct.
- Currently there is no way to receive notification about *ReOpen* operation in CorrigoPro
  Direct.
- In case if work order is rejected by a technician via CorrigoPro Desktop your application
  receives notification.
- This action may only be performed by a customer.
- A work order can be reopened by a customer or CorrigoPro Desktop. When a work order
  is reopened, your WebHook receives a notification.
- Depending on customer settings, if customer verifies your work as not completed,
  you may not be able to submit an invoice!
- When an ISM status changes, your webhook receives a notification with information
  regarding that update.
- Invoicing app may be disabled in countries with complicated processes.
- Invoices may be automatically submitted if NTE amount is zero.
- Items, which are not referenced by LineItem.Id in the update request, will be deleted.
- Delete operation is applicable only for editable invoices.
- Invoices may be automatically submitted if work order NTE.Amount is equal to zero.
- Invoices for some work orders may be in PendingVerification status and require verification
  before submission.
- Invoice submission may return an error with code 30xx if the invoice cannot be switched
  to PendingVerification status immediately.
- Invoice-related operations should be run with very strict concurrency rules to ensure
  they don't collide with each other.
- If you handle concurrency at your end or you don't expect any concurrency issues,
  simply ignore concurrencyId attribute in request/response models.
- Check Handling API Errors and Troubleshooting WebHook events pages before contacting
  support
- When working on an invoice, make sure you stay within invoice submission timelines
  as it affects your score in a customer system.
- Each successful CorrigoPro Direct API response contains actual invoice ConcurrencyId
  value.
- Please, check Handling API Errors and Troubleshooting WebHook events pages before
  contacting support!
- WebHook Emulator is not intended for end-to-end business flow emulation.
- WebHook Emulator can be used only if your WebHook endpoint is properly configured.
- We cannot identify requests with invalid Authorization. These requests will not
  be logged.
- cURL and Git for Windows are open source tools and are not supported by Corrigo.
- Please upgrade your application to TLS 1.2 before July 1st, 2020.
- If you are currently using TLS 1.0 or TLS 1.1 to access the CorrigoPro Direct API
  or your CorrigoPro Direct WebHook doesn't support TLS 1.2 or higher, you will need
  to upgrade to TLS 1.2 before July 1st, 2020.
- Requires setup of connected app in api
- All messages are in JSON format.
- A unique MessageId is sent with all messages. The message ID identifies every response
  returned from Customer side.
- All Entities, Fields and request params have PascalCase format.
- All enumeration values are sent in string representation.
- Troubleshooting WebHook events
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request format and data.'
- '404 Not Found: Ensure the endpoint is correct and the resource exists.'
- '401 UNAUTHORIZED: Need to get a new access token.'
- '401 UNAUTHORIZED: You need to get a new access token.'
- Refer to the Error Codes section for handling API errors.
- Refer to Error Codes for troubleshooting the problem.
- '3003: It is forbidden to specify a repair category without a relevant repair code.'
- '3003: Forbidden to specify a repair category without a relevant repair code.'
- ActualActionDate must be omitted or set to null unless backdating is allowed.
- AttachmentId and WorkOrderId must be provided as parameters for downloading.
- You cannot attach files to a work order in statuses Rejected and Recalled.
- 'AttachmentId required: Ensure the AttachmentId is provided.'
- 'WorkOrderId required: Ensure the WorkOrderId is provided.'
- Quote cannot be submitted for work orders in Rejected or Recalled statuses.
- 'Invalid associate: No assignment performed.'
- Work order does not exist or is inaccessible.
- 'Invalid associate: returned if an invalid associate is provided.'
- 'Work order does not exist or is inaccessible: returned if trying to manage non-existent
  or inaccessible work orders.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '3030: Operation not allowed for marking procedure as N/A'
- '3030: Operation not allowed'
- '3000: Reopen operation not supported by customer system'
- '3001: Work order not in Completed Status'
- Cannot send messages to a work order in statuses Rejected and Recalled.
- Cannot delete messages that were sent.
- '3000: Error returned when the ''reopen'' operation is not supported.'
- '3001: Error returned when the work order is not in Completed Status.'
- 'Error Codes: See Error Codes documentation for troubleshooting.'
- Required document information and attachment not yet completed.
- Required document review is not needed from customer side.
- Required document review is needed from customer side.
- Customer has reviewed the attached required document.
- '30xx: Error code for invoice submission issues.'
- '3036: Invoice should be editable.'
- '3042: Only one line item of type ''Tax'' is allowed per invoice.'
- '3043: Non-zero line item id does not exist in the invoice.'
- '3039: Pricelist line items must have a price list item id specified.'
- '3044: Aggregated error for multiple validation errors.'
- '30xx: Error when attempting to submit an invoice that cannot be switched to PendingVerification
  status.'
- '3051: Work order should be completed or checked out.'
- '3050: Invoice status should allow invoice submission.'
- '3052: Rules for invoice submission violated.'
- '3056: Tax amount does not match recommended value.'
- '3043: A nonexistent line item or price list item specified.'
- '3039: Price list item id must be specified for line items of type ''Pricelist''.'
- '3041: Custom rate value specified for a read-only rate.'
- '3044: Aggregated error with individual details.'
- '3052: Rules 3-9 violated, submit operation aborted.'
- '2100: Some fields of the request model are invalid. See [**ValidationErrors**](/docs/data-models#section-inputvalidationerror).**[Type](/docs/enumerations#section-inputerrortype)**
  and [**ValidationErrors**](/docs/data-models#section-inputvalidationerror).**Message**
  for details. Correct the request model, and try again.'
- '3000: Generic business rule violation. Review the text in the **Message**.'
- '3001: Work order state is invalid for this operation. For example, on an attempt
  to accept a work order in *Paused* status, this error occurs. Try [retrieving](/docs/receiving-a-work-order#section-polling-for-work-orders)
  the latest work order state and adjust your actions accordingly. If you think you
  did everything correctly, contact [Corrigo support](/docs/troubleshooting#section-contacting-support).'
- '3002: This error occurs on attempt to accept a prebilled work order. The only way
  to accept a prebilled work order is to submit an invoice via [CorrigoPro Desktop](https://desktop.corrigopro.com).'
- '3003: This error code is usually returned if some of entities involved in a flow
  are not found. For example, a customer ID does not represent a valid customer. Check
  the property value, and try again.'
- '3004: Quote submit is not allowed by your customer. Contact your customer via [CorrigoPro
  Desktop](https://desktop.corrigopro.com).'
- '3005: A work order is either not found, or it has been recalled by a customer.
  In any case, no actions can be performed. Try [retrieving](/docs/receiving-a-work-order#section-polling-for-work-orders)
  the latest work order state, and review the **[Status](/docs/enumerations#section-statuses)**
  value.'
- '3006: A work order is either not found, or it has been rejected. In any case, no
  actions can be performed. Try [retrieving](/docs/receiving-a-work-order#section-polling-for-work-orders)
  the latest work order state, and pay attention to **[Status](/docs/enumerations#section-statuses)**
  value.'
- '3009: Filling in the checklist is required to complete this work order. See [Completing
  work orders](/docs/completing-work-orders#section-filling-check-list) and [Completing
  checklist](/docs/completing-checklist) for more details.'
- '3010: Some of the customer questions are required. For information on how to work
  with customer questions, see [Completing work orders](/docs/completing-work-orders#section-answering-customer-questions).'
- '3012: Repair information is required to complete this work order. See [Completing
  work orders](/docs/completing-work-orders#section-specifying-repair-information)
  for more details.'
- '3014: Equipment worked on is required to complete this work order. See [Completing
  work orders](/docs/completing-work-orders#section-specifying-equipment-worked-on)
  and [Specifying equipment worked on](/docs/specifying-equipment-used) for more details.'
- '3015: This error occurs on specifying equipment worked on. A piece of equipment
  with **[Type](/docs/data-models#section-equipment)** = [*Excluding*](/docs/enumerations#section-equipmenttype)
  is already added to the current work order. No other items can be added. Remove
  this piece of equipment, and try again. See [Specifying equipment worked on](/docs/specifying-equipment-used)
  for more details.'
- '3016: This error occurs on specifying equipment worked on. A piece of equipment
  with **[Type](/docs/data-models#section-equipment)** = [*Excluding*](/docs/enumerations#section-equipmenttype)
  cannot be added to the current work order, when any additional equipment records
  exist. Remove other pieces of equipment and try again. See [Specifying equipment
  worked on](/docs/specifying-equipment-used) for more details.'
- '3017: This error occurs on assigning/divesting associates. A given associate does
  not exist in CorrigoPro Network. Try [retrieving](/docs/assigning-technician#section-retrieving-associates)
  associate list, and check this associate exists.'
- '3018: This error occurs on assigning/divesting associates. A given associate exists,
  but has no access to a provider branch, thus cannot be assigned to a work order.
  Try [retrieving](/docs/assigning-technician#section-retrieving-associates) associate
  list, and check this associate exists.'
- '3019: Quote submit failed. This error occurs if customer allows quote submit in
  general, but the particular operation failed. Most likely the quote is already *Submitted*
  or *Approved*. Review the text in the **Message** or try [retrieving](/docs/receiving-a-work-order#section-polling-for-work-orders)
  the latest work order state, and pay attention to **[NTE](/docs/data-models#section-nte).[Quote](/docs/data-models#section-quote).[QuoteStatus](/docs/enumerations#section-quotestatus)**
  value.'
- '3020: Some of the passed **[CheckListItem](/docs/data-models#section-checklistitem).Id**
  values were not found in a work order. Try [retrieving](http://api.corrigopro.com/documentation/#!/CheckList/CheckList_Get)
  a check list for the work order, and make sure all ids are correct.'
- '3021: No equipment assets can be linked to this work order. Possibly all available
  assets are already linked to the work order.'
- '3022: Could not delete an equipment with the requested id because it does not exist.
  Try [retrieving](http://api.corrigopro.com/documentation/#!/Equipment/Equipment_Get)
  a list of equipment linked to the work order, and make sure you are passing the
  correct id.'
- '3023: No available equipment asset with the requested id was found. Try [retrieving](http://api.corrigopro.com/documentation/#!/Equipment/Equipment_Available)
  a list of available assets, and make sure you are passing the correct id.'
- '3024: There was an attempt to update one or more equipment attribute records, even
  though the current equipment doesn''t have any linked attributes. For retrieving
  a list of equipment attributes, try using [GET /api/equipment/details](http://api.corrigopro.com/documentation/#!/Equipment/Equipment_Details).'
- '3025: No available equipment attribute with the requested id was found. Try [retrieving](http://api.corrigopro.com/documentation/#!/Equipment/Equipment_Details)
  a list of available attributes, and make sure you are passing the correct id.'
- '3026: No available equipment with the requested id was found. Try [retrieving](http://api.corrigopro.com/documentation/#!/Equipment/Equipment_Get)
  a list of equipment linked to the work order, and make sure you are passing the
  correct id.'
- '3027: Could not update a linked piece of equipment because relevant asset was not
  found for the requested asset id. Try [retrieving](http://api.corrigopro.com/documentation/#!/Equipment/Equipment_Get)
  a list of equipment linked to the work order, and make sure you are passing the
  correct ids.'
- '1000: Internal server error occurred. Contact support and tell them this code.'
- '1001: Internal server error occurred. Contact support and tell them this code.'
- '2000: Unauthorized access, incorrect token, expired token, etc.'
- '2100: Model validation failed.'
- '2200: Request size exceeds maximum allowed limit.'
- '1002: Internal server error occurred. Contact support and tell them this code.'
- '1003: Internal server error occurred. Contact support and tell them this code.'
- '1004: Internal server error occurred. Contact support and tell them this code.'
- '1005: Internal server error occurred. Contact support and tell them this code.'
- '1006: Internal server error occurred. Contact support and tell them this code.'
- '1007: Internal server error occurred. Contact support and tell them this code.'
- '1008: Internal server error occurred. Contact support and tell them this code.'
- '3000: Workflow business logic rules validation failed.'
- '3001: Work order state is wrong.'
- '3002: A prebilled work order cannot be accepted.'
- '3003: Request parameter is invalid.'
- '3004: A quote cannot be submitted.'
- '3005: Work order is unknown or recalled.'
- '3006: Work orders is unknown or rejected.'
- '3007: Work order verification is missing.'
- '3008: Rejection reason is missing.'
- '3009: Check list must be completed.'
- '3010: Custom Fields are required.'
- '3011: Completion details must be added.'
- '3012: Repair Category is required.'
- '3013: NTE reason is required.'
- '3014: Equipment is required.'
- '3015: No additional pieces of equipment can be added when a piece of equipment
  with Type = Excluding exists.'
- '3016: No piece of equipment with Type = Excluding can be added if another piece
  of equipment exists.'
- '3017: Returned only in case of errors during api/bulk/assign or api/bulk/unassign
  operations. Returned if a given associate does not exist in CorrigoPro Network.'
- '3018: Returned only in case of errors during api/bulk/assign or api/bulk/unassign
  operations. Returned if a given associate exists, but is not a member/sub of your
  company, thus cannot be assigned to a work order.'
- '3019: Quote submit failed.'
- '3020: Check list items were not found.'
- '3021: No equipment asset available.'
- '3022: No equipment found to delete for the requested id.'
- '3023: No equipment asset found for the requested id.'
- '3024: No attributes available for the equipment.'
- '3025: No equipment attribute found for the requested id(-s).'
- '3026: Equipment is not editable.'
- '3027: Equipment asset is not editable in current context.'
- '3028: Wrong equipment type to update.'
- '3029: Procedure must be completed.'
- '3030: Given procedure can’t be marked as N/A.'
- '3031: Attempt to delete non-existing step attachment(s).'
- '3032: Unable to upload step attachment. Check error Message for the details.'
- '3034: The Customer''s configuration doesn''t allow for Backdating an action by
  using ActualActionDate.'
- '3036: Invoice is not editable.'
- '3037: Invoice attachment is read-only.'
- '3038: Invoice was not found.'
- '3039: Customer price list item id is not specified in line item of type ''PriceList''.'
- '3040: Customer price list item with a given id was not found.'
- '3041: Customer price list item rate is read-only and does not match with provided
  one.'
- '3042: Work order service area does not support more than one tax item per invoice.'
- '3043: Attempt to edit a line item with nonexistent id.'
- '3044: Aggregated invoice validation error. Check Details property for more information.'
- '3045: Reserved.'
- '3046: Invoice attachment not found.'
- '3047: Invoice can not be canceled.'
- '3048: Invoice concurrency mismatch.'
- '3049: Could not send invoice attachments to the customer.'
- '3050: Invoice status does not allow submission.'
- '3051: Unable to submit an invoice for a work order which is not completed.'
- '3052: Invoice validation failed.'
- '3053: Invoice total amount exceeds work order NTE.'
- '3054: Invoice number is not unique.'
- '3055: Invalid invoice date.'
- '3056: Tax validation failed.'
- '3057: Can not submit invoice (Only tax specified for current invoice or some unhandled
  error).'
- '3058: Work order of current invoice verified as “not completed”'
- '3059: Invoice concurrency mismatch (need to be removed after patch).'
- '3069: QuoteValidationFailed'
- '3070: QuoteValidationFailed'
- '3071: TaxesAreNotAllowed'
- '3072: QuoteAmountValidationFailed'
- '3073: VisitWoCheckInPauseNotAllowed'
- '3074: IsmProcedureIsNotPassed'
auth_info:
  mentioned_objects:
  - client_id
  - client_secret
  - OAuth Server URL
client:
  base_url: http://api.corrigopro.com
  headers:
    Accept: application/json
source_metadata: null
