resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /example_data/orders
    method: GET
- name: customers
  endpoint:
    path: /example_data/customers
    method: GET
- name: example_resource
  endpoint:
    path: /example/path
    method: GET
    data_selector: data
    params: {}
- name: order_details
  endpoint:
    path: /example_data/order_details
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /example_data/products
    method: GET
    data_selector: records
    params: {}
- name: order_details
  endpoint:
    path: /resources/database/example_data/order_details
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /resources/database/example_data/products
    method: GET
    data_selector: records
    params: {}
- name: order_details
  endpoint:
    path: /services/data/vXX.X/sobjects/OrderDetails
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /services/data/vXX.X/sobjects/Customers
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /services/data/vXX.X/sobjects/Products
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/user
    method: GET
    data_selector: data
    params: {}
- name: data
  endpoint:
    path: /api/data
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /services/data/orders
    method: GET
    data_selector: records
- name: order_details
  endpoint:
    path: /services/data/order_details
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /services/data/products
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /services/data/customers
    method: GET
    data_selector: records
- name: order_total
  endpoint:
    path: /order_total
    method: GET
    data_selector: order_total
    params: {}
- name: support_request
  endpoint:
    path: /servicedesk/customer/portal/7
    method: POST
    data_selector: issue
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: example_resource
  endpoint:
    path: /api/v1/example
    method: GET
    data_selector: data
    params: {}
- name: Support Levels
  endpoint:
    path: /support/levels
    method: GET
    data_selector: levels
- name: Technical Support Process
  endpoint:
    path: /support/process
    method: GET
    data_selector: process
- name: Contact Support
  endpoint:
    path: /support/contact
    method: GET
    data_selector: contact_info
- name: Support Windows
  endpoint:
    path: /support/windows
    method: GET
    data_selector: windows
- name: block_ui
  endpoint:
    path: /reference/servoyextensions/browser-plugins/block-ui
    method: GET
    data_selector: records
    params: {}
- name: dialogs_plugin
  endpoint:
    path: /reference/servoyextensions/browser-plugins/servoy-dialogs-plugin
    method: GET
    data_selector: records
    params: {}
- name: i18n_keys
  endpoint:
    path: /resources/messages
    method: GET
    data_selector: messages
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: repository_server
  endpoint:
    path: /reference/servoycore/object-model/solution#solution
    method: GET
    data_selector: metadata
    params: {}
- name: i18n_table
  endpoint:
    path: /resources/messages
    method: GET
    data_selector: messages
    params: {}
- name: repository_server
  endpoint:
    path: /reference/servoycore/object-model/solution#solution
    method: GET
    data_selector: metadata
- name: ng_client_start_url
  endpoint:
    path: /servoy-ngclient
    method: GET
- name: open_solution
  endpoint:
    path: /solution/{mySolutionName}/index.html
    method: GET
- name: open_solution_with_arguments
  endpoint:
    path: /solution/{mySolutionName}/index.html?a={value}
    method: GET
- name: open_solution_with_custom_keys
  endpoint:
    path: /solution/{mySolutionName}/index.html?a={value}&{name1}={value1}&{name2}={value2}
    method: GET
- name: open_solution_and_execute_method
  endpoint:
    path: /solution/{mySolutionName}/index.html?m={myMethodName}
    method: GET
- name: open_solution_with_method_and_argument
  endpoint:
    path: /solution/{mySolutionName}/index.html?m={myMethodName}&a={value}
    method: GET
- name: open_solution_with_method_and_custom_keys
  endpoint:
    path: /solution/{mySolutionName}/index.html?m={myMethodName}&{name1}={value1}&{name2}={value2}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: example_resource
  endpoint:
    path: /api/example
    method: GET
- name: JSBaseFoundset
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbasefoundset
    method: GET
- name: JSBaseRecord
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbaserecord
    method: GET
- name: JSBaseSQLFoundset
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbasesqlfoundset
    method: GET
- name: JSBaseSqlRecord
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbasesqlrecord
    method: GET
- name: JSColumn
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jscolumn
    method: GET
- name: JSDataSet
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsdataset
    method: GET
- name: JSFoundSet
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsfoundset
    method: GET
- name: JSFoundSetUpdater
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsfoundsetupdater
    method: GET
- name: JSRecord
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsrecord
    method: GET
- name: JSRecordMarker
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsrecordmarker
    method: GET
- name: JSRecordMarkers
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsrecordmarkers
    method: GET
- name: JSTable
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jstable
    method: GET
- name: JSTableFilter
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jscolumn
    method: GET
- name: MenuFoundSet
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/menufoundset
    method: GET
- name: MenuItemRecord
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/menuitemrecord
    method: GET
- name: QBAggregate
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbaggregate
    method: GET
- name: QBAggregates
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbaggregates
    method: GET
- name: QBCase
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbcase
    method: GET
- name: QBCaseWhen
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbcasewhen
    method: GET
- name: QBColumn
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbcolumn
    method: GET
- name: QBColumns
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbcolumns
    method: GET
- name: QBCondition
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbcondition
    method: GET
- name: QBFunction
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbfunction
    method: GET
- name: QBFunctions
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbfunctions
    method: GET
- name: QBGroupBy
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbgroupby
    method: GET
- name: QBJoin
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbjoin
    method: GET
- name: QBJoins
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbjoins
    method: GET
- name: QBLogicalCondition
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qblogicalcondition
    method: GET
- name: QBParameter
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbparameter
    method: GET
- name: QBParameters
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbparameters
    method: GET
- name: QBPart
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbpart
    method: GET
- name: QBResult
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbresult
    method: GET
- name: QBSearchedCaseExpression
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbsearchedcaseexpression
    method: GET
- name: QBSelect
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbselect
    method: GET
- name: QBSort
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbsort
    method: GET
- name: QBSorts
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbsorts
    method: GET
- name: QBTableClause
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbtableclause
    method: GET
- name: QBWhereCondition
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/qbwherecondition
    method: GET
- name: ViewFoundSet
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/viewfoundset
    method: GET
- name: ViewRecord
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/viewrecord
    method: GET
- name: project
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cypress.config.js
  endpoint:
    path: /cypress.config.js
    method: GET
    data_selector: config
    params: {}
- name: cypress.env.json
  endpoint:
    path: /cypress.env.json
    method: GET
    data_selector: env
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: docker_image
  endpoint:
    path: /docker/pull/${namespace-name}/${docker-repo-name}
    method: POST
    data_selector: image
    params: {}
- name: docker_run
  endpoint:
    path: /docker/run
    method: POST
    data_selector: container
    params:
      environment: onprem
      db_postgres_password: ${MY_POSTGRES_PASSWORD}
      db_postgres_server: ${MY_POSTGRES_URL}
      db_postgres_port: '5432'
      remote_environment_token: ${token from Credentials section in CCC}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cypress_spec
  endpoint:
    path: /e2e-test-scripts/cypress
    method: GET
    data_selector: specs
- name: servoy_properties_template
  endpoint:
    path: /servoy/properties/template
    method: GET
    data_selector: properties
    params: {}
- name: servoy
  endpoint:
    path: /docker/run
    method: POST
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: whois
  endpoint:
    path: /META-INF/services/com.servoy.j2db.plugins.IPlugin
    method: GET
    data_selector: properties
- name: servoy.properties.template
  endpoint:
    path: /path/to/servoy.properties.template
    method: GET
    data_selector: properties
    params: {}
- name: whois_plugin
  endpoint:
    path: /plugins/whois
    method: GET
    data_selector: properties
- name: notifications
  endpoint:
    path: /administration/settings/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: properties_template
  endpoint:
    path: /pipelines/context-menu/view-properties-template-file
    method: GET
    data_selector: properties_template
    params: {}
- name: restore_environment
  endpoint:
    path: /environments/databases/context-menu/restore-from-another-environment
    method: POST
    data_selector: restore_environment
    params: {}
- name: sync_logs
  endpoint:
    path: /logs/sync
    method: POST
    data_selector: sync_logs
    params: {}
- name: example_resource
  endpoint:
    path: /api/v1/example
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
- name: foundset
  endpoint:
    path: /api/v1/foundset
    method: GET
    data_selector: records
    params: {}
- name: Developer
  endpoint:
    path: /issues/?jql=project+%3D+SVY+AND+component+%3D+Developer
    method: GET
    data_selector: issues
    params: {}
- name: NGClient
  endpoint:
    path: /issues/?jql=project+%3D+SVY+AND+component+%3D+NGClient
    method: GET
    data_selector: issues
    params: {}
- name: Extensions
  endpoint:
    path: /issues/?jql=project+%3D+SVY+AND+component+%3D+Extensions
    method: GET
    data_selector: issues
    params: {}
- name: Runtime
  endpoint:
    path: /issues/?jql=project+%3D+SVY+AND+component+%3D+Runtime
    method: GET
    data_selector: issues
    params: {}
- name: Server
  endpoint:
    path: /issues/?jql=project+%3D+SVY+AND+component+%3D+Server
    method: GET
    data_selector: issues
    params: {}
- name: API
  endpoint:
    path: /issues/?jql=project+%3D+SVY+AND+component+%3D+API
    method: GET
    data_selector: issues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: JSBaseFoundset
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbasefoundset
    method: GET
- name: JSBaseRecord
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbaserecord
    method: GET
- name: JSBaseSQLFoundset
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbasesqlfoundset
    method: GET
- name: JSBaseSqlRecord
  endpoint:
    path: /reference/servoycore/dev-api/database-manager/jsbasesqlrecord
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /api/v1/campaign_member
    method: GET
- name: contact
  endpoint:
    path: /api/v1/contact
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pipeline
  endpoint:
    path: /api/v1/pipelines
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in Servoy
- Uses OAuth2 with refresh token — requires setup of connected app in Servoy
- Namespace setup may take a few minutes.
- OAuth authentication requires setup of OAuth providers.
- Requires setup of connected app in Servoy Cloud
- The editor will always suggest 'source_to_destination', in this case orders_to_customers.
- The date column is formatted as 'yyyy-MM-dd'.
- The editor will always suggest source_to_destination, in this case orders_to_customers.
- Select the date column on your grid. In the Component Properties Editor, edit the
  format property.
- The subtotal calculation is not editable.
- Relation chaining allows easy traversal of data model in code.
- Fully editable records and dynamic calculations
- Servoy is modular by design. Any Solution can be reused as a 'Module' and it's easy
  to include modules in your application via the SPM.
- Uses OAuth2 with client credentials — requires setup of API client in Servoy.
- Token-based Auth and SSO (NEW!)
- Requires setup of OAuth providers
- Example note about the API.
- Support levels are outlined in the Product Order Form
- Critical situations may require immediate phone communication
- Uses OAuth2 with refresh token — requires setup of connected app in servoy
- Customers having a commercial license contract with Servoy will have indicated in
  their Product Order Form (POF) the agreed Support Level.
- Most critical Bugs (Blocker) must be reported to a live person of Servoy by phone.
- 'There are 2 types of Support windows: 5 (working days) * 12: Extended business
  hours 7AM-7PM and 5 (working days) * 8: Normal business hours 9AM-5PM.'
- The support window/working days are depending on the SuLA type as agreed upon the
  Product Order Form as well as the timezone of the Servoy branch providing the Support.
- Uses OAuth2 for authentication
- Only the i18n table set on the main solution is taken into account.
- The ideal time to start with i18n is at the beginning of building a solution.
- It is a good idea to have a naming convention for i18n key names.
- If you use a Servlet spec 5.0 container, like Tomcat 10, you need to use a Migration
  Tool to convert the generated WAR to the new specification.
- 'NGClient needs the support of websockets and then the java implementation that
  is based on: JSR-356.'
- A deployed WAR file can't be modified.
- When upgrading an existing WAR deployment, make sure to use the exact same context.
- OAuth2 authentication is required for accessing the Servoy Cloud API.
- OAuth2 with refresh token is required for authentication.
- Avoid making configuration changes through the Servoy Admin Page interface.
- Changes in the admin page are stored in the {user.dir}/.servoy/server directory.
- Servoy Cloud is a full PaaS (Platform-as-a-service).
- 'NGClient needs the support of websockets and then the java implementation that
  is based on: JSR-356. For example Tomcat supports this from 7.0.43 and higher and
  Jetty from 9.1'
- Deploying a WAR file on Apache Tomcat involves several steps.
- Avoid making configuration changes through the Servoy Admin Page.
- Requires setup of connected app in Servoy.
- Uses OAuth2 with refresh token.
- OAuth2 is required for authentication
- Ensure correct API version is used
- Requires setup of connected app in API
- Some operations may require additional permissions.
- Uses OAuth2
- Requires OAuth2 authentication.
- Uses OAuth2 for authentication.
- Requires configuration of connected app in Servoy Cloud
- Token-based authentication with SSO requires setup.
- 'This menu item is only available when you have the permission role: `Administrator`'
- After downloading the database backup file, an email is sent with the corresponding
  GPG decryption passphrase.
- This version of the Property Types page is meant for developers who use components
  / services in their Servoy solutions.
- Cypress Studio is enabled by default but can be disabled in the Cypress Config file.
- Remote Environment Token, accessible from Credentials menu in CCC
- 'This menu item is only available when you have the permission role: Administrator'
- An automatic shutdown is triggered for clients that remain idle for more than 30
  minutes.
- This shutdown feature only applies to NG1 & TiNG clients. Batch Processors and Headless
  clients are not affected.
- The max idle time that can be set is 180 minutes.
- Cypress Studio is enabled by default in Servoy Cloud but can be disabled.
- The servoy.properties.template file is used to create a servoy.properties file.
- Database setup is auto-created based on the properties and params defined in the
  servoy.properties.template file.
- Uses OAuth2 with refresh token — requires setup of connected app in Servoy Cloud
- To connect to Servoy Cloud, Remote Environments must have the properties ENVIRONMENT=onprem
  and REMOTE_ENVIRONMENT_TOKEN
- Uses OAuth2 with refresh token — requires setup of connected app in ServoyCloud
- Java plugins run at the server in the same Java VM as the NGClient itself runs.
- The plugin jar has to use Java Service Provider to expose Servoy Plugin classes.
- Automatic shutdown is triggered for clients that remain idle for more than 30 minutes.
  This is the default setting.
- The servoy.properties.template file contains all the properties needed to build
  your project on Servoy Cloud.
- 'Dynamic value resolution within the servoy.properties.template uses placeholders
  in the format of ##key## or ${key}.'
- OAuth authentication flexibility
- stateless login - support refreshing the token when using SERVOY_CLOUD with oauth
- Requires setup of connected app in ServoyCloud
- This release fixes some regressions with nested property types having null values
  and improves support in those nested structures for Client or Serverside functions
  (for example a nested 'object' type) It also has a small fix for scrollbars for
  the main form.
- Also Bootstrap (Extra) Components and Servoy Extra Compopnents have new releases
  for Servoy 2024.3.x release.
- This release will be the last release that will include SmartClient,WebClient and
  the NGClient (angularjs).
- Servoy Cloud API requires authentication.
- stateless login - oauth + deeplink
- This release has a breaking change for people that are using deeplink (m=xxx) in
  the url of the client that you start.
- It is recommended to upgrade to this release as soon as possible.
- OAuth Integration option is now available in the solution's authenticator property,
  enabling Single Sign-On (SSO).
- When selected, a dedicated edit dialog allows configuration of required values for
  predefined OAuth providers or custom authentication flow.
- If you want to run 2 instances of the 25.03.0 release at the same time then it will
  crash because of a shared directory that the embedded chromium browsers uses.
- This release will be the last release that will include SmartClient, WebClient and
  the NGClient (angularjs).
- Requires OAuth2 setup for API access.
- On-demand Syncing of Environment logs
- Pipeline View Enhancements and fixes
- This feature is only available for repositories hosted in ServoyCloud. It is not
  supported for external repositories
- Java 21 is required for both the Developer and Server environments.
- Requires setup of OAuth2 client credentials.
- Ensure proper scopes are set for data access.
- When updating from an older release, after the first restart you can get a "tomcat
  not found" dialog, this can be ignored and make sure that the applicaiton server
  update is performed right away After another restart the embedded tomcat should
  be able to start again.
- For some reason on MacOSX the Options-Shift-K keybinding (locate servoy resources)
  are not registered anymore, but other Options-Shift combinations are, you can add
  this back your self in the preferences under Keys. (search for Locate Servoy)
- Limit file size and restrict file type on file.showFileOpenDialog plugin
- Daily reports generated with stats of the past day
- Access to detailed data may be limited over time
- Servoy Cloud login / authenticator enhancements
- Automatic Scheduled Build for Outdated Environments
- Password rotation is enforced every three months for ServoyCloud users.
- If a password has expired, the user is prevented from logging in until it is reset.
- The major release after this one so 2024.03 will be the last release that will include
  SmartClient, WebClient and the NGClient (angularjs).
- OAuth Integration option for Single Sign-On (SSO) available in the solution's authenticator
  property.
- The updates of the Postgresql driver did bring forward a breaking change for the
  stored procedures support (databasources.sp.xx) that Servoy has.
- InMem tables are now following the allow null flag when saving.
- 'Query Performance: Added the name of the database that your queries are running
  on.'
- 'Job bases GIT/SVN Settings: You can now change your GIT/SVN password directly from
  the build settings screen.'
- The login screen will become stateless and will not initiate a client session until
  post-authentication.
- When updating from an older release, after the first restart you can get a 'tomcat
  not found' dialog, this can be ignored and make sure that the application server
  update is performed right away After another restart the embedded tomcat should
  be able to start again.
- Since NGDesktop Client 2023.03.1 using OAuth2 opens Flow in default browser
- This is the last release for this 2022.3.x, after this release 2023.3.x and 2024.3.x
  are the 2 supported LTS releases.
- This release has a security fix, its recommended to upgrade to this release as soon
  as possible.
- Uses OAuth2 — requires setup of connected app in Servoy
- Default 'latest' theme does not give an NG2 version
- 'It doesn''t allow URLs anymore like: http://servoy.com//test those must be http://servoy.com/test
  (RFC3986)'
- 'When upgrading from an older release that TiNG doesn''t fully build because of
  old artifacts, you can delete once this dir: [your-workspace]\.metadata\.plugins\com.servoy.eclipse.ngclient.ui\target\'
- The updates of the Postgresql driver did bring forward a breaking change for the
  stored procedures support
- Fixed regression in SVY-16937, and a few fixes for the new HTTP Plugin that is now
  based on Apache Http Client 5.1
- Stateless Authentication is being implemented
- Login screen will become stateless and will not initiate a client session until
  post-authentication
- This release has a security fix, its recommended to upgrade to this release as soon
  as possible. upgrades to Java 17.09 and NodeJS 16.20.2
- It could be when upgrading from an older release that TiNG doesn't fully build because
  of old artifacts.
- Uses OAuth2 with refresh token — requires setup of connected app in Servoy.
- Some API endpoints may have rate limits.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Invalid client_id or client_secret.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '401 Unauthorized: Check client authentication'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify authentication.'
- Problem determination or repair to the extent problems has been caused by a Bug.
- Work performed after Partner/End-User has notified Servoy in writing that it no
  longer wishes problem determination to be continued at its possible expense.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your authentication details'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check your authentication credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check your OAuth credentials.'
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: You don''t have permission to access this resource'
- Error when starting application server when upgrading from 2022.03.10 to 2024.03.4
- 'TypeError: Cannot read properties of null (reading ''script'')'
- 'TypeError: Cannot read properties of undefined (reading ''querySelector'')'
- '401 Unauthorized: Check your OAuth token.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check client credentials.'
- 'Trying to call a non deeplink (no @deeplink annotation) method: '
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthProviders
  - OAuthRequest
  - OAuthResponse
  - ClientAuthentication
  - OAuthService
  - OAuthToken
  - OAuthTokenExtractors
  - Token-based Auth and SSO
client:
  base_url: https://admin.servoy-cloud.eu
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
