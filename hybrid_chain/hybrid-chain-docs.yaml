resources:
- name: wallet
  endpoint:
    path: /api/v1/wallet
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /api/user/profile
    method: GET
    data_selector: data
    params: {}
- name: wallet_functions
  endpoint:
    path: /api/wallet/functions
    method: GET
    data_selector: data
    params: {}
- name: vault
  endpoint:
    path: /api/v1/vault
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: game_event
  endpoint:
    path: /api/game_event
    method: POST
    data_selector: data
    params: {}
- name: nft_marketplace
  endpoint:
    path: /api/nft_marketplace
    method: GET
    data_selector: nfts
    params: {}
- name: wallet
  endpoint:
    path: /api/wallets
    method: POST
    data_selector: wallet
    params: {}
- name: recovery_event
  endpoint:
    path: /api/recovery
    method: POST
    data_selector: recovery
    params: {}
- name: Basic User Profile
  endpoint:
    path: /api-docs/core-functionality/user-profile-data/profile-get-basic-profile-data
    method: GET
- name: Full User Profile
  endpoint:
    path: /api-docs/core-functionality/user-profile-data/profile-get-full-profile-data
    method: GET
- name: Get Deposit Keys
  endpoint:
    path: /api-docs/core-functionality/vault-wallet-functions/wallet-get-deposit-keys
    method: GET
- name: Get Funding Options
  endpoint:
    path: /api-docs/core-functionality/vault-wallet-functions/wallet-get-funding-options
    method: GET
- name: Validate Recipient
  endpoint:
    path: /api-docs/core-functionality/vault-wallet-functions/wallet-validate-recipient
    method: GET
- name: Secure-Send Funds
  endpoint:
    path: /api-docs/core-functionality/vault-wallet-functions/wallet-secure-send-funds
    method: POST
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: DEX Historical Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-historical-data
    method: GET
- name: DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: DEX Orderbook
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-orderbook
    method: GET
- name: DEX Order Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-order-data
    method: GET
- name: All DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: All DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: Create DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-create-dex-order
    method: POST
- name: Cancel DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: POST
- name: Cancel all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-all-dex-orders
    method: POST
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get DEX Historical Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-historical-data
    method: GET
- name: Get DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: Get DEX Orderbook
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-orderbook
    method: GET
- name: Get DEX Order Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-order-data
    method: GET
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: Get DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: Get all DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: Create DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-create-dex-order
    method: POST
- name: Cancel DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: DELETE
- name: Cancel all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-all-dex-orders
    method: DELETE
- name: mtf_markets
  endpoint:
    path: /api/v1/mtf/markets
    method: GET
    data_selector: response
- name: Get DEX Historical Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-historical-data
    method: GET
    data_selector: records
- name: markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get DEX Historical Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-historical-data
    method: GET
    data_selector: chart-data
- name: mtf_markets
  endpoint:
    path: /api/v1/mtf/markets
    method: GET
    data_selector: response
    params: {}
- name: market_history
  endpoint:
    path: /api/v1/mtf/market_history
    method: GET
    data_selector: response
    params:
      minutes: integer
      market: string
- name: Get DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: Get DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: DEX Historical Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-historical-data
    method: GET
- name: DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: DEX Orderbook
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-orderbook
    method: GET
- name: DEX Order Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-order-data
    method: GET
- name: All DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: All DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: Create DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-create-dex-order
    method: POST
- name: Cancel DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: DELETE
- name: Cancel all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-all-dex-orders
    method: DELETE
- name: mtf_market_chart
  endpoint:
    path: /api/v1/mtf/market_chart
    method: GET
    data_selector: chart-data
    params: {}
- name: historical_data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-historical-data
    method: GET
    data_selector: chart-data
- name: market_history
  endpoint:
    path: /api/v1/mtf/market_history
    method: GET
    data_selector: response
    params:
      minutes: integer
      market: string
- name: Get DEX Orderbook
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-orderbook
    method: GET
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: Get DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: Get all DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: Get DEX Orderbook
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-orderbook
    method: GET
- name: Get DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: Get DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: mtf_orderbook
  endpoint:
    path: /api/v1/mtf/orderbook
    method: GET
    data_selector: No content
    params:
      market: string
- name: Get DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: market_chart
  endpoint:
    path: /api/v1/mtf/market_chart
    method: GET
    data_selector: chart-data
    params: {}
- name: Get DEX Order Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-order-data
    method: GET
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: Get DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: Get all DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: Get DEX Order Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-order-data
    method: GET
- name: Get DEX Orderbook
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-orderbook
    method: GET
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: orderbook
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-orderbook
    method: GET
    data_selector: orderbook
- name: mtf_order_meta
  endpoint:
    path: /api/v1/mtf/order_meta
    method: GET
    data_selector: response
    params:
      id: string
- name: mtf_orderbook
  endpoint:
    path: /api/v1/mtf/orderbook
    method: GET
    data_selector: No content
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: all_dex_orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
    data_selector: orders
- name: mtf_orders
  endpoint:
    path: /api/v1/mtf/orders
    method: GET
    data_selector: responses
    params: {}
- name: Get DEX Order Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-order-data
    method: GET
- name: Get all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: Get DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
- name: Get all DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: Create DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-create-dex-order
    method: POST
- name: Cancel DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: POST
- name: Cancel all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-all-dex-orders
    method: POST
- name: dex_order_data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-order-data
    method: GET
- name: mtf_order
  endpoint:
    path: /api/v1/mtf/order_meta
    method: GET
    data_selector: response
    params:
      id: string
- name: Get all DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
    data_selector: trades
- name: Get DEX Trade Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-trade-data
    method: GET
    data_selector: tradeData
- name: all_dex_orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: all_dex_trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: all_dex_trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: get_all_dex_orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: mtf_trades
  endpoint:
    path: /api/v1/mtf/trades
    method: GET
    data_selector: trades
    params: {}
- name: mtf_orders
  endpoint:
    path: /api/v1/mtf/orders
    method: GET
    data_selector: Response
- name: DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-create-dex-order
    method: POST
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get DEX Historical Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-historical-data
    method: GET
- name: Get DEX Candle Data
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-candle-data
    method: GET
- name: DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: Create DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-create-dex-order
    method: POST
- name: all_dex_trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
    data_selector: trades
    params: {}
- name: create_order
  endpoint:
    path: /api/v1/mtf/create_order
    method: POST
    data_selector: response.payload.record
- name: mtf_trades
  endpoint:
    path: /api/v1/mtf/trades
    method: GET
    data_selector: Response
- name: DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: POST
- name: cancel_dex_order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: GET
- name: Create DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-create-dex-order
    method: POST
- name: cancel_mtf_order
  endpoint:
    path: /api/v1/mtf/cancel
    method: POST
    data_selector: response
    params: {}
- name: mtf_create_order
  endpoint:
    path: /api/v1/mtf/create_order
    method: POST
- name: DEX Orders
  endpoint:
    path: /api/docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: MTF Orders
  endpoint:
    path: /api/docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: POST
- name: DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: cancel_all_dex_orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-all-dex-orders
    method: GET
- name: Cancel DEX Order
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-dex-order
    method: POST
- name: cancel_all_mtf_orders
  endpoint:
    path: /api/v1/mtf/cancel_all
    method: POST
    data_selector: object
    params: {}
- name: mtf.order
  endpoint:
    path: /model/mtf.order
    method: POST
    data_selector: payload.record
- name: cancel_mtf_order
  endpoint:
    path: /api/v1/mtf/cancel
    method: POST
    data_selector: response
    params: {}
- name: mtf.order
  endpoint:
    path: /mtf/order
    method: POST
- name: DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-orders
    method: GET
- name: MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: Equity Tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: mtf.order
  endpoint:
    path: /services/data/vXX.X/sobjects/mtf.order
    method: POST
    data_selector: records
- name: mtf.order
  endpoint:
    path: /mtf/order
    method: POST
    data_selector: payload.record
    params: {}
- name: cancel_all_dex_orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-all-dex-orders
    method: POST
    data_selector: result
    params: {}
- name: cancel_all_mtf_orders
  endpoint:
    path: /api/v1/mtf/cancel_all
    method: POST
    data_selector: object
    params: {}
- name: order
  endpoint:
    path: /model/mtf.order
    method: POST
    data_selector: payload.record
- name: MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
    data_selector: markets
    params: {}
- name: MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
    data_selector: historicalData
    params: {}
- name: mtf_order
  endpoint:
    path: /services/data/vXX.X/sobjects/mtf.order
    method: POST
    data_selector: records
- name: mtf_order
  endpoint:
    path: /mtf/orders
    method: POST
    data_selector: payload.record
- name: mtf.order
  endpoint:
    path: /mtf/order
    method: POST
    data_selector: record
    params: {}
- name: Get MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: Get MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
- name: Get MTF Candle Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: Get MTF Orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: Get all MTF Trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: Get MTF Trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: Get all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: Get MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-order
    method: GET
- name: Create Market Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-market-order
    method: POST
- name: Create Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-limit-order
    method: POST
- name: Create Stop Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-order
    method: POST
- name: Create Stop Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-limit-order
    method: POST
- name: Create Iceberg Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-iceberg-order
    method: POST
- name: Modify MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: PATCH
- name: Cancel MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: DELETE
- name: Cancel all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: DELETE
- name: Get MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: mtf_markets
  endpoint:
    path: /api/v1/mtf/markets
    method: GET
    data_selector: response
- name: MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
- name: MTF Candle Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: MTF Orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: MTF Trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: MTF Trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: Create Market Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-market-order
    method: POST
- name: Create Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-limit-order
    method: POST
- name: Create Stop Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-order
    method: POST
- name: Create Stop Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-limit-order
    method: POST
- name: Create Iceberg Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-iceberg-order
    method: POST
- name: Modify MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: POST
- name: Cancel MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: DELETE
- name: Cancel all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: DELETE
- name: Get MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
- name: Get MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
    data_selector: chart-data
- name: market_history
  endpoint:
    path: /api/v1/mtf/market_history
    method: GET
    data_selector: response
    params: {}
- name: mtf_historical_data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
    data_selector: chart-data
- name: Get MTF Candle Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
    data_selector: candleData
- name: Get MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
    data_selector: marketsData
- name: mtf_candle_data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
- name: MTF Candle Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: MTF Orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: all MTF Trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: MTF Trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-order
    method: GET
- name: Create Market Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-market-order
    method: POST
- name: Create Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-limit-order
    method: POST
- name: Create Stop Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-order
    method: POST
- name: Create Stop Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-limit-order
    method: POST
- name: Create Iceberg Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-iceberg-order
    method: POST
- name: Modify MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: PUT
- name: Cancel MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: DELETE
- name: Cancel all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: DELETE
- name: market_chart
  endpoint:
    path: /api/v1/mtf/market_chart
    method: GET
    data_selector: chart-data
    params: {}
- name: Get MTF Candle Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: Get MTF Orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: Get MTF Orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: markets
  endpoint:
    path: /api/v1/mtf/markets
    method: GET
    data_selector: response
- name: MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: orderbook
  endpoint:
    path: /api/v1/mtf/orderbook
    method: GET
    data_selector: No content
    params:
      market: marketstring
- name: mtf_orderbook
  endpoint:
    path: /perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: Get MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
- name: MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
- name: mtf_trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: all_mtf_trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: market_history
  endpoint:
    path: /api/v1/mtf/market_history
    method: GET
    data_selector: response
    params: {}
- name: trades
  endpoint:
    path: /api/v1/mtf/trades
    method: GET
    data_selector: Response
- name: mtf_historical_data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
    data_selector: chart-data
- name: all_mtf_trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: MTF Candle Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: mtf_candle_data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: market_chart
  endpoint:
    path: /api/v1/mtf/market_chart
    method: GET
    data_selector: chart-data
    params: {}
- name: mtf_candle_data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: Get MTF Trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: orderbook
  endpoint:
    path: /api/v1/mtf/orderbook
    method: GET
    data_selector: '200'
    params:
      market: marketstring
- name: trade_meta
  endpoint:
    path: /api/v1/mtf/trade_meta
    method: GET
    data_selector: response
    params:
      trade_uuid: string
- name: MTF Orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: mtf_trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: Get all MTF Trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: all_mtf_trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: all_mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
    data_selector: orders
- name: mtf_orders
  endpoint:
    path: /api/v1/mtf/orders
    method: GET
    data_selector: responses
- name: all_mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: mtf_trades
  endpoint:
    path: /api/v1/mtf/trades
    method: GET
    data_selector: responses
- name: mtf_trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: MTF Order
  endpoint:
    path: /mtf/get-order
    method: GET
- name: MTF Markets
  endpoint:
    path: /mtf/get-markets
    method: GET
- name: Get MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-order
    method: GET
- name: mtf_order_meta
  endpoint:
    path: /api/v1/mtf/order_meta
    method: GET
    data_selector: response
    params:
      id: string
- name: Get MTF Trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
    data_selector: records
- name: Get all MTF Trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
    data_selector: records
- name: mtf_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-order
    method: GET
- name: mtf_trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: Get MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: Get all DEX Trades
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-all-dex-trades
    method: GET
- name: mtf_trade_meta
  endpoint:
    path: /api/v1/mtf/trade_meta
    method: GET
    data_selector: response
    params:
      trade_uuid: string
- name: create_market_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-market-order
    method: POST
- name: mtf_trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: create_order
  endpoint:
    path: /api/v1/mtf/create_order
    method: POST
    data_selector: response
    params: {}
- name: MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: Create Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-limit-order
    method: POST
    data_selector: order
    params: {}
- name: all_mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
    data_selector: orders
- name: Create Stop Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-order
    method: POST
    data_selector: order
    params: {}
- name: mtf_orders
  endpoint:
    path: /api/v1/mtf/orders
    method: GET
    data_selector: response
    params: {}
- name: mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: create_iceberg_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-iceberg-order
    method: POST
- name: mtf_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-order
    method: GET
- name: Modify MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: POST
- name: Get all MTF Trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: mtf_order_meta
  endpoint:
    path: /api/v1/mtf/order_meta
    method: GET
    data_selector: response
    params:
      id: string
- name: modify_mtf_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: POST
- name: mtf_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-order
    method: GET
    data_selector: orderDetails
- name: modify_order
  endpoint:
    path: /api/v1/mtf/modify_order
    method: POST
    data_selector: payload
- name: Create Market Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-market-order
    method: POST
- name: Get MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: Modify MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: POST
- name: create_market_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-market-order
    method: POST
- name: Get DEX Markets
  endpoint:
    path: /api-docs/decentralized-trading/dex-get-dex-markets
    method: GET
- name: Get MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: create_order
  endpoint:
    path: /api/v1/mtf/create_order
    method: POST
    data_selector: response.payload.record
    params: {}
- name: cancel_mtf_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: GET
    data_selector: trades
    params: {}
- name: create_limit_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-limit-order
    method: POST
- name: cancel_mtf_order
  endpoint:
    path: /api/v1/mtf/cancel
    method: POST
    data_selector: response
    params: {}
- name: Create Stop Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-order
    method: POST
    data_selector: order
    params: {}
- name: Cancel MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: GET
- name: create_iceberg_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-iceberg-order
    method: POST
- name: cancel_all_mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: POST
- name: Cancel all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: GET
- name: mtf_markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
    data_selector: records
- name: mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
    data_selector: records
- name: cancel_all_mtf_orders
  endpoint:
    path: /api/v1/mtf/cancel_all
    method: POST
    data_selector: response
    params: {}
- name: modify_mtf_order
  endpoint:
    path: /mtf/modify
    method: POST
- name: mtf_order
  endpoint:
    path: /mtf/order
    method: POST
    data_selector: response
    params: {}
- name: modify_order
  endpoint:
    path: /api/v1/mtf/modify_order
    method: POST
    data_selector: response
    params: {}
- name: MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: POST
- name: mtf_order
  endpoint:
    path: /services/data/vXX.X/sobjects/mtf.order
    method: GET
    data_selector: records
    params: {}
- name: mtf_order
  endpoint:
    path: /mtf/order
    method: POST
    data_selector: payload.record
    params: {}
- name: cancel_all_mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: GET
- name: Get all Equity Tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: Get Token Inventory
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-inventory
    method: GET
- name: Get Equity Token Details
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-details
    method: GET
- name: Get Equity Token Quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
- name: Get Token Performance
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-performance
    method: GET
- name: Get Token Buying Power
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-buying-power
    method: GET
- name: Mint a new Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-mint-a-new-equity-token
    method: POST
- name: Redeem an Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-redeem-an-equity-token
    method: POST
- name: Get MTF Markets
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-markets
    method: GET
- name: Get MTF Historical Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-historical-data
    method: GET
- name: Get MTF Candle Data
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-candle-data
    method: GET
- name: Get MTF Orderbook
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-orderbook
    method: GET
- name: Get all MTF Trades
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-trades
    method: GET
- name: Get MTF Trade
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-trade
    method: GET
- name: Get all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-all-mtf-orders
    method: GET
- name: Get MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-get-mtf-order
    method: GET
- name: Create Market Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-market-order
    method: POST
- name: Create Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-limit-order
    method: POST
- name: Create Stop Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-order
    method: POST
- name: Create Stop Limit Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-stop-limit-order
    method: POST
- name: Create Iceberg Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-create-iceberg-order
    method: POST
- name: Modify MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-modify-mtf-order
    method: PATCH
- name: Cancel MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: DELETE
- name: Cancel all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: DELETE
- name: cancel_mtf_order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: GET
- name: equity_tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: mtf_cancel
  endpoint:
    path: /api/v1/mtf/cancel
    method: POST
    data_selector: response
    params: {}
- name: tokens_available
  endpoint:
    path: /api/v1/tokens/available
    method: GET
    data_selector: No content
- name: Cancel MTF Order
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-mtf-order
    method: GET
- name: equity_tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
    data_selector: tokens
- name: Cancel all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: POST
- name: Cancel all DEX Orders
  endpoint:
    path: /api-docs/decentralized-trading/dex-cancel-all-dex-orders
    method: POST
- name: cancel_all_mtf_orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: GET
- name: cancel_all_mtf_orders
  endpoint:
    path: /api/v1/mtf/cancel_all
    method: POST
    data_selector: response
    params: {}
- name: token_inventory
  endpoint:
    path: /tokens/get-token-inventory
    method: GET
    data_selector: records
- name: token_inventory
  endpoint:
    path: /api/v1/tokens/inventory
    method: GET
    data_selector: No content
    params: {}
- name: mtf.order
  endpoint:
    path: /services/data/vXX.X/sobjects/mtf.order
    method: POST
    data_selector: records
- name: order
  endpoint:
    path: /mtf/order
    method: POST
    data_selector: record
    params: {}
- name: Get Equity Token Details
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-details
    method: GET
- name: Get all Equity Tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: order
  endpoint:
    path: /api/v1/orders
    method: POST
    data_selector: records
    params: {}
- name: equity_token_details
  endpoint:
    path: /api/v1/tokens/details
    method: GET
    data_selector: No content
    params: {}
- name: mtf_order
  endpoint:
    path: /mtf/order
    method: POST
    data_selector: payload.record
    params: {}
- name: Get Equity Token Details
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-details
    method: GET
- name: Cancel all MTF Orders
  endpoint:
    path: /api-docs/perpetuals-trading/mtf-cancel-all-mtf-orders
    method: GET
- name: get_equity_token_quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
- name: get_all_equity_tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: equity_tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
    data_selector: records
- name: token_inventory
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-inventory
    method: GET
    data_selector: records
- name: tokens_quote
  endpoint:
    path: /api/v1/tokens/quote
    method: GET
    data_selector: records
    params: {}
- name: equity_token_quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
- name: equity_tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: token_inventory
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-inventory
    method: GET
- name: equity_token_details
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-details
    method: GET
- name: equity_token_quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
- name: token_performance
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-performance
    method: GET
- name: token_buying_power
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-buying-power
    method: GET
- name: mint_equity_token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-mint-a-new-equity-token
    method: POST
- name: redeem_equity_token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-redeem-an-equity-token
    method: POST
- name: token_performance
  endpoint:
    path: /api/v1/tokens/performance
    method: GET
    data_selector: application/json
    params:
      token_uuid: integer
- name: equity_tokens
  endpoint:
    path: /api/v1/tokens/available
    method: GET
    data_selector: No content
- name: Get Token Buying Power
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-buying-power
    method: GET
- name: equity_tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
    data_selector: records
- name: buying_power
  endpoint:
    path: /api/v1/tokens/buying_power
    method: GET
    data_selector: No content
    params: {}
- name: Token Inventory
  endpoint:
    path: /api/v1/tokens/inventory
    method: GET
    data_selector: tokens
    params: {}
- name: equity_tokens
  endpoint:
    path: /api/tokens
    method: GET
    data_selector: data
    params: {}
- name: token_inventory
  endpoint:
    path: /api/tokens/inventory
    method: GET
    data_selector: data
    params: {}
- name: token_details
  endpoint:
    path: /api/tokens/details
    method: GET
    data_selector: data
    params: {}
- name: tokens_inventory
  endpoint:
    path: /api/v1/tokens/inventory
    method: GET
    data_selector: No content
- name: equity_tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: equity_token
  endpoint:
    path: /api/tokens/mint
    method: POST
    data_selector: data
    params: {}
- name: equity_token_details
  endpoint:
    path: /api/v1/tokens/details
    method: GET
- name: tokens_mint
  endpoint:
    path: /api/v1/tokens/mint
    method: POST
    data_selector: successful_response
- name: Get Equity Token Details
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-details
    method: GET
    data_selector: records
- name: Mint a new Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-mint-a-new-equity-token
    method: POST
- name: Get Equity Token Quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
    data_selector: data
    params: {}
- name: equity_token_quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
- name: Get all Equity Tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
    data_selector: records
    params: {}
- name: Get Token Inventory
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-inventory
    method: GET
    data_selector: records
    params: {}
- name: Get Equity Token Details
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-details
    method: GET
    data_selector: records
    params: {}
- name: Get Equity Token Quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
    data_selector: records
    params: {}
- name: Get Token Performance
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-performance
    method: GET
    data_selector: records
    params: {}
- name: Get Token Buying Power
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-buying-power
    method: GET
    data_selector: records
    params: {}
- name: Mint a new Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-mint-a-new-equity-token
    method: POST
    data_selector: records
    params: {}
- name: Redeem an Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-redeem-an-equity-token
    method: POST
    data_selector: records
    params: {}
- name: token_quote
  endpoint:
    path: /api/v1/tokens/quote
    method: GET
    data_selector: records
    params: {}
- name: Redeem an Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-redeem-an-equity-token
    method: POST
- name: Get Equity Token Quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
    data_selector: records
- name: tokens_redeem
  endpoint:
    path: /api/v1/tokens/redeem
    method: POST
    data_selector: body
    params: {}
- name: token_performance
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-performance
    method: GET
- name: Redeem an Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-redeem-an-equity-token
    method: POST
- name: Get Token Buying Power
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-buying-power
    method: GET
- name: Get all Equity Tokens
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: Get Token Inventory
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-inventory
    method: GET
- name: Get Equity Token Details
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-details
    method: GET
- name: Get Equity Token Quote
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-equity-token-quote
    method: GET
- name: Get Token Performance
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-token-performance
    method: GET
- name: Mint a new Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-mint-a-new-equity-token
    method: POST
- name: Redeem an Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-redeem-an-equity-token
    method: POST
- name: token_buying_power
  endpoint:
    path: /api/v1/tokens/buying_power
    method: GET
    data_selector: No content
    params: {}
- name: NFT Categories
  endpoint:
    path: /nft/get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /nft/get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /nft/get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /nft/get-collection-meta-data
    method: GET
- name: Create Collection
  endpoint:
    path: /nft/create-new-collection
    method: POST
- name: Created Collections
  endpoint:
    path: /nft/get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /nft/update-collection-data
    method: PUT
- name: Available NFTs
  endpoint:
    path: /nft/get-all-available-nfts
    method: GET
- name: Created NFTs
  endpoint:
    path: /nft/get-all-created-nfts
    method: GET
- name: Owned NFTs
  endpoint:
    path: /nft/get-all-owned-nfts
    method: GET
- name: Sold NFTs
  endpoint:
    path: /nft/get-all-sold-nfts
    method: GET
- name: NFT Meta-Data
  endpoint:
    path: /nft/get-nft-meta-data
    method: GET
- name: NFT Lifecycle History
  endpoint:
    path: /nft/get-nft-lifecycle-history
    method: GET
- name: Create NFT
  endpoint:
    path: /nft/create-new-nft
    method: POST
- name: Publish/Unpublish NFT
  endpoint:
    path: /nft/publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /nft/update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /nft/create-nft-tag
    method: POST
- name: Created NFT Tags
  endpoint:
    path: /nft/get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /nft/allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /nft/make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /nft/accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /nft/instant-buy-nft
    method: POST
- name: Creator Profile
  endpoint:
    path: /nft/get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /nft/update-creator-profile
    method: PUT
- name: Collections of Creator
  endpoint:
    path: /nft/get-collections-of-creator
    method: GET
- name: equity_token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
    data_selector: records
- name: equity_token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-mint-a-new-equity-token
    method: POST
- name: tokens_mint
  endpoint:
    path: /api/v1/tokens/mint
    method: POST
    data_selector: response
    params: {}
- name: Mint Equity Token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-mint-a-new-equity-token
    method: POST
- name: nft_categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: nft_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: collection_items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: collection_metadata
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: new_collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: created_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: update_collection_data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: available_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: created_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: owned_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: sold_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: nft_metadata
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: nft_lifecycle_history
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: new_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: publish_unpublish_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: update_nft_data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: create_nft_tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: created_nft_tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: allocate_tag_to_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: bid_for_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: accept_bid_sell_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: instant_buy_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: update_creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: collections_of_creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: Equity Tokens
  endpoint:
    path: /api/tokenized-equities/tokens-get-all-equity-tokens
    method: GET
- name: Token Inventory
  endpoint:
    path: /api/tokenized-equities/tokens-get-token-inventory
    method: GET
- name: Equity Token Details
  endpoint:
    path: /api/tokenized-equities/tokens-get-equity-token-details
    method: GET
- name: Equity Token Quote
  endpoint:
    path: /api/tokenized-equities/tokens-get-equity-token-quote
    method: GET
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: redeem_equity_token
  endpoint:
    path: /api/v1/tokens/redeem
    method: POST
- name: nft_categories
  endpoint:
    path: /api/v1/nft/categories/all
    method: GET
    data_selector: result
    params: {}
- name: tokens_redeem
  endpoint:
    path: /api/v1/tokens/redeem
    method: POST
    data_selector: application/json
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
    data_selector: records
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
    data_selector: records
- name: NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
    data_selector: records
- name: nft_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: redeem_equity_token
  endpoint:
    path: /api-docs/tokenized-equities/tokens-redeem-an-equity-token
    method: POST
- name: collections
  endpoint:
    path: /api/v1/nft/collections/all
    method: GET
    data_selector: result
    params: {}
- name: collection_items
  endpoint:
    path: /nft-super-store/nft-get-all-collection-items
    method: GET
    data_selector: items
- name: nft_categories
  endpoint:
    path: /nft-super-store/nft-get-all-nft-categories
    method: GET
    data_selector: categories
- name: nft_collections
  endpoint:
    path: /nft-super-store/nft-get-all-nft-collections
    method: GET
    data_selector: collections
- name: Get all Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: collection_items
  endpoint:
    path: /api/v1/nft/collections/items
    method: GET
    data_selector: response
    params:
      collection_uuid: string
- name: collection_items
  endpoint:
    path: /collection/items
    method: GET
    data_selector: result
- name: collection_metadata
  endpoint:
    path: /nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Get Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Get all created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PATCH
- name: Available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish/Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PATCH
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Get created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PATCH
- name: Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: collection_meta
  endpoint:
    path: /api/v1/nft/collections/meta
    method: GET
    data_selector: result
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: NFT Metadata
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: create_collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: get_all_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: create_collection
  endpoint:
    path: /api/v1/nft/collection/new
    method: POST
    data_selector: responses
    params: {}
- name: Get all created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: created_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: created_collections
  endpoint:
    path: /api/v1/nft/collections/created
    method: GET
    data_selector: result
- name: collection_data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: GET
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Get all Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Get Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Get all created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Get all created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Get all owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Get all sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Get NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: Get NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Get created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Get Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Get Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: POST
- name: update_collection
  endpoint:
    path: /api/v1/nft/collection/update
    method: POST
    data_selector: application/json
- name: nft_categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: nft_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: collection_items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
    data_selector: nft_data
    params: {}
- name: available_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
    data_selector: nfts
- name: nft_tokens
  endpoint:
    path: /api/v1/nft/tokens/all
    method: GET
    data_selector: Response
- name: nft
  endpoint:
    path: /nft
    method: GET
    data_selector: result
    params: {}
- name: nft_item_log
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: nft_item_log
    params: {}
- name: nft_item_owners
  endpoint:
    path: /nft/item/owners
    method: GET
    data_selector: nft_item_owners
    params: {}
- name: nft_item
  endpoint:
    path: /nft/item
    method: GET
    data_selector: nft_items
    params: {}
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Get all Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Get Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Get all created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Get all created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Get all owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Get all sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Get NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: Get NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Get created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Get Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Get Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: nft_categories
  endpoint:
    path: /api/v1/nft/categories/all
    method: GET
    data_selector: result
    params: {}
- name: nft_item_log
  endpoint:
    path: /nft/item/log
    method: GET
    data_selector: nft_item_log
    params: {}
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: nft_item_logs
    params: {}
- name: nft_item_owners
  endpoint:
    path: /nft/item/owners
    method: GET
    data_selector: nft_item_owners
    params: {}
- name: nft_price_movements
  endpoint:
    path: /nft/price/movements
    method: GET
    data_selector: nft_price_movements
    params: {}
- name: NFT Collections
  endpoint:
    path: /nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: nft_item_logs
- name: nft_price_movements
  endpoint:
    path: /nft/price/movements
    method: GET
    data_selector: nft_price_movements
- name: nft
  endpoint:
    path: /nft
    method: GET
    data_selector: nfts
- name: collections
  endpoint:
    path: /api/v1/nft/collections/all
    method: GET
    data_selector: result
    params: {}
- name: NFT Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: logs
- name: nft_item_owners
  endpoint:
    path: /nft/item/owners
    method: GET
    data_selector: owners
- name: Get all Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: nft_item
  endpoint:
    path: /api/nft_items
    method: GET
    data_selector: nft_items
- name: collection_items
  endpoint:
    path: /api/v1/nft/collections/items
    method: GET
    data_selector: response
    params:
      collection_uuid: string
- name: nft_items
  endpoint:
    path: /nft/items
    method: GET
    data_selector: nft_item_logs
- name: collection_items
  endpoint:
    path: /get_all_collection_items
    method: GET
    data_selector: result
    params: {}
- name: nft_sales
  endpoint:
    path: /nft/sales
    method: GET
    data_selector: sales_records
    params: {}
- name: nft_item_logs
  endpoint:
    path: /nft_item_logs
    method: GET
    data_selector: nft_item_logs
- name: collection_meta_data
  endpoint:
    path: /nft-super-store/nft-get-collection-meta-data
    method: GET
- name: all_nft_categories
  endpoint:
    path: /nft-super-store/nft-get-all-nft-categories
    method: GET
- name: all_nft_collections
  endpoint:
    path: /nft-super-store/nft-get-all-nft-collections
    method: GET
- name: collection_meta_data
  endpoint:
    path: /nft-super-store/nft-get-collection-meta-data
    method: GET
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
- name: collection_meta
  endpoint:
    path: /api/v1/nft/collections/meta
    method: GET
    data_selector: result
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: logs
- name: nft_item_owners
  endpoint:
    path: /nft/item/owners
    method: GET
    data_selector: owners
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: nft_item
  endpoint:
    path: /nft/item
    method: GET
    data_selector: items
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: nft_items
- name: create_collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: nft_item
  endpoint:
    path: /nft/item
    method: GET
    data_selector: nft_items
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: nft_items
- name: create_collection
  endpoint:
    path: /api/v1/nft/collection/new
    method: POST
    data_selector: application/json
    params: {}
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: items
- name: all_created_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
    data_selector: collections
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: items
- name: get_all_created_collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: nft_items
  endpoint:
    path: /nft/items
    method: GET
    data_selector: items
- name: created_collections
  endpoint:
    path: /api/v1/nft/collections/created
    method: GET
    data_selector: result
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: nft_items
    params: {}
- name: nft_created
  endpoint:
    path: /api/nft/get-all-created-nfts
    method: GET
    data_selector: nfts
    params: {}
- name: get_all_created_nfts
  endpoint:
    path: /nft-super-store/nft-get-all-created-nfts
    method: GET
    data_selector: data
    params: {}
- name: created_nfts
  endpoint:
    path: /api/v1/nft/tokens/created
    method: GET
- name: nft
  endpoint:
    path: /nfts
    method: GET
    data_selector: result
    params: {}
- name: NFTs
  endpoint:
    path: /nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: owned_nfts
  endpoint:
    path: /api/v1/nft/tokens/owned
    method: GET
    data_selector: No content
    params: {}
- name: sold_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Get all Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Get Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Get all created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Get all created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Get all owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Get all sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Get NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: Get NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Get created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Get Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Get Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: sold_nfts
  endpoint:
    path: /api/v1/nft/tokens/sold
    method: GET
    data_selector: application/json
- name: collection_data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: POST
    data_selector: data
    params: {}
- name: NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: update_collection
  endpoint:
    path: /api/v1/nft/collection/update
    method: POST
    data_selector: objectOptionalExample
- name: nft_meta_data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: nft_meta_data
  endpoint:
    path: /api/v1/nft/tokens/meta
    method: GET
    data_selector: result
- name: Get NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
    data_selector: records
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
    data_selector: records
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
    data_selector: records
- name: nft_lifecycle_history
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: nft_tokens_history
  endpoint:
    path: /api/v1/nft/tokens/history
    method: GET
    data_selector: result
    params: {}
- name: nft_tokens
  endpoint:
    path: /api/v1/nft/tokens/all
    method: GET
    data_selector: response
- name: Get NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: nft
  endpoint:
    path: /nft/get_all
    method: GET
    data_selector: result
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Get all Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: nft_item_log
  endpoint:
    path: /nft/item/log
    method: GET
    data_selector: nft_item_log
- name: nft_item_owners
  endpoint:
    path: /nft/item/owners
    method: GET
    data_selector: nft_item_owners
- name: nft_price_movements
  endpoint:
    path: /nft/price/movements
    method: GET
    data_selector: nft_price_movements
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: items
- name: nft_tokens_new
  endpoint:
    path: /api/v1/nft/tokens/new
    method: POST
    data_selector: application/json
    params: {}
- name: nft_item_log
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: nft_item_log
- name: nft_item_owners
  endpoint:
    path: /nft/item/owners
    method: GET
    data_selector: nft_item_owners
- name: nft_price_movements
  endpoint:
    path: /nft/price/movements
    method: GET
    data_selector: nft_price_movements
- name: nft_tags
  endpoint:
    path: /nft/tags
    method: GET
    data_selector: nft_tags
- name: nft_item_logs
  endpoint:
    path: /nft_item_logs
    method: GET
    data_selector: nft_item_logs
- name: nft_price_movements
  endpoint:
    path: /nft_price_movements
    method: GET
    data_selector: nft_price_movements
- name: nft_item_owners
  endpoint:
    path: /nft_item_owners
    method: GET
    data_selector: nft_item_owners
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: items
- name: nft_items
  endpoint:
    path: /nft/items
    method: GET
    data_selector: nft_items
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: nft_item_logs
- name: nft_item
  endpoint:
    path: /nft/item
    method: GET
    data_selector: nft_items
- name: nft_item
  endpoint:
    path: /nft_item
    method: GET
    data_selector: nft_items
    params: {}
- name: nft_sales
  endpoint:
    path: /nft/sales
    method: GET
    data_selector: sales_records
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: publish_unpublish_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: logs
- name: order
  endpoint:
    path: /api/nft/orders
    method: GET
    data_selector: orders
- name: nft_publish
  endpoint:
    path: /api/v1/nft/tokens/publish
    method: POST
    data_selector: nft_uuid
    params: {}
- name: update_nft_data
  endpoint:
    path: /nft/update
    method: POST
    data_selector: data
- name: Update NFT
  endpoint:
    path: /nft/update
    method: POST
    data_selector: data
    params: {}
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: nft_item_logs
- name: nft_update
  endpoint:
    path: /api/v1/nft/tokens/update
    method: POST
    data_selector: application/json
    params: {}
- name: nft_item
  endpoint:
    path: /nft/item
    method: GET
    data_selector: nft_item_logs
    params: {}
- name: nft_item
  endpoint:
    path: /nft/items
    method: GET
    data_selector: items
- name: nft_category
  endpoint:
    path: /nft/categories
    method: GET
    data_selector: categories
- name: nft_item
  endpoint:
    path: /nft/item
    method: GET
    data_selector: nft_items
- name: nft_items
  endpoint:
    path: /nft/items
    method: GET
    data_selector: nft_item_logs
    params: {}
- name: nft_item_logs
  endpoint:
    path: /nft_item_logs
    method: GET
    data_selector: records
- name: nft_item_owners
  endpoint:
    path: /nft_item_owners
    method: GET
    data_selector: records
- name: nft
  endpoint:
    path: /nfts
    method: GET
    data_selector: nfts
- name: nft_item_logs
  endpoint:
    path: /nft/item/logs
    method: GET
    data_selector: nft_item_logs
- name: nft_items
  endpoint:
    path: /nft/items
    method: GET
    data_selector: nft_items
- name: nft_item
  endpoint:
    path: /nft_items
    method: GET
    data_selector: nft_items
- name: NFT Categories
  endpoint:
    path: /nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /nft-super-store/nft-get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /nft-super-store/nft-create-new-collection
    method: POST
- name: Get all created Collections
  endpoint:
    path: /nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /nft-super-store/nft-update-collection-data
    method: PUT
- name: Get all available NFTs
  endpoint:
    path: /nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Get all created NFTs
  endpoint:
    path: /nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Get all owned NFTs
  endpoint:
    path: /nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Get all sold NFTs
  endpoint:
    path: /nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Get NFT Meta-Data
  endpoint:
    path: /nft-super-store/nft-get-nft-meta-data
    method: GET
- name: Get NFT Lifecycle History
  endpoint:
    path: /nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create new NFT
  endpoint:
    path: /nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /nft-super-store/nft-create-nft-tag
    method: POST
- name: Get created NFT Tags
  endpoint:
    path: /nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /nft-super-store/nft-instant-buy-nft
    method: POST
- name: Get Creator Profile
  endpoint:
    path: /nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /nft-super-store/nft-update-creator-profile
    method: PUT
- name: Get Collections of Creator
  endpoint:
    path: /nft-super-store/nft-get-collections-of-creator
    method: GET
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: create_nft_tag
  endpoint:
    path: /api/v1/nft/tags/create
    method: POST
    data_selector: application/json
    params: {}
- name: create_nft_tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: created_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
    data_selector: records
- name: available_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
    data_selector: records
- name: owned_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
    data_selector: records
- name: sold_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
    data_selector: records
- name: Get created NFT Tags
  endpoint:
    path: /nft-super-store/nft-get-created-nft-tags
    method: GET
- name: get_all_created_nfts
  endpoint:
    path: /nft-super-store/nft-get-all-created-nfts
    method: GET
    data_selector: records
- name: created_nft_tags
  endpoint:
    path: /api/v1/nft/tags/all
    method: GET
    data_selector: No content
- name: created_nfts
  endpoint:
    path: /api/v1/nft/tokens/created
    method: GET
- name: NFT
  endpoint:
    path: /nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: nft
  endpoint:
    path: /nft/get_all_created
    method: GET
    data_selector: result
    params: {}
- name: Allocate Tag to NFT
  endpoint:
    path: /nft-allocate-tag-to-nft
    method: POST
- name: owned_nfts
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: allocate_nft_tag
  endpoint:
    path: /api/v1/nft/tags/allocate
    method: POST
    data_selector: application/json
    params: {}
- name: owned_nfts
  endpoint:
    path: /api/v1/nft/tokens/owned
    method: GET
    data_selector: application/json
- name: sold_nfts
  endpoint:
    path: /nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Get NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: sold_nfts
  endpoint:
    path: /api/v1/nft/tokens/sold
    method: GET
    data_selector: records
- name: nft_meta_data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: make_offer
  endpoint:
    path: /api/v1/nft/tokens/make-offer
    method: POST
    data_selector: application/json
    params: {}
- name: nft_meta_data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
    data_selector: records
- name: make_bid_for_nft
  endpoint:
    path: /nft-super-store/nft-make-bid-for-nft
    method: POST
- name: nft_meta_data
  endpoint:
    path: /api/v1/nft/tokens/meta
    method: GET
    data_selector: result
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: NFT Transaction
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: nft_lifecycle_history
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: nft_lifecycle_history
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: accept_offer
  endpoint:
    path: /api/v1/nft/tokens/accept-offer
    method: POST
    data_selector: application/json
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: nft_tokens_history
  endpoint:
    path: /api/v1/nft/tokens/history
    method: GET
    data_selector: result
    params: {}
- name: nft_lifecycle_history
  endpoint:
    path: /nft-get-nft-lifecycle-history
    method: GET
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
    data_selector: data
    params: {}
- name: create_nft
  endpoint:
    path: /api/v1/nft/tokens/new
    method: POST
    data_selector: response
    params: {}
- name: Get all NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: Get all NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Get all Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Get Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Get all created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Get all created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Get all owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Get all sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Get NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: Get NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Get created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Get Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Get Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: instant_buy_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: GET
- name: buy_nft
  endpoint:
    path: /api/v1/nft/tokens/buy-nft
    method: POST
    data_selector: application/json
    params: {}
- name: instant_buy_nft
  endpoint:
    path: /nft-super-store/nft-instant-buy-nft
    method: POST
- name: Get Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
    data_selector: profile_data
    params: {}
- name: creator_profile
  endpoint:
    path: /api/v1/nft/creator/profile
    method: GET
    data_selector: result
    params: {}
- name: creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: update_creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: POST
- name: Publish_Unpublish_NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: GET
- name: update_creator_profile
  endpoint:
    path: /api/v1/nft/creator/update
    method: POST
    data_selector: application/json
    params: {}
- name: Get Collections of Creator
  endpoint:
    path: /nft-super-store/nft-get-collections-of-creator
    method: GET
- name: nft_publish
  endpoint:
    path: /api/v1/nft/tokens/publish
    method: POST
    data_selector: responses
    params: {}
- name: collections_of_creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: creator_collections
  endpoint:
    path: /api/v1/nft/creator/collections
    method: GET
    data_selector: response
- name: collections
  endpoint:
    path: /getCollectionsOfCreator
    method: GET
    data_selector: result
    params: {}
- name: create_payment_request
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-create-payment-request
    method: POST
- name: get_request_details
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-get-request-details
    method: GET
- name: pay_payment_request
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-pay-payment-request
    method: POST
- name: get_all_payment_requests
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-get-all-payment-requests
    method: GET
- name: make_mass_payment
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-make-mass-payment
    method: POST
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish/Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: POST
- name: DataStreams
  endpoint:
    path: /api/streams
    method: GET
    data_selector: data
    params: {}
- name: nft_update
  endpoint:
    path: /api/v1/nft/tokens/update
    method: POST
    data_selector: application/json
- name: List all DataStreams
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-list-all-datastreams
    method: GET
- name: Create new Stream
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-create-new-stream
    method: POST
- name: Whitelist Subscriber
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-whitelist-subscriber
    method: POST
- name: Blacklist Subscriber
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-blacklist-subscriber
    method: POST
- name: Whitelist Publisher
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-whitelist-publisher
    method: POST
- name: Blacklist Publisher
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-blacklist-publisher
    method: POST
- name: Toggle Stream-State
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-toggle-stream-state
    method: POST
- name: Get Quantum Bytes
  endpoint:
    path: /api-docs/peripheral-functions/quantum-entropy/entropy-get-quantum-bytes
    method: GET
- name: Get Noise Bytes
  endpoint:
    path: /api-docs/peripheral-functions/quantum-entropy/entropy-get-noise-bytes
    method: GET
- name: user_profile
  endpoint:
    path: /api/user/profile
    method: GET
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /api/payment/request
    method: POST
    data_selector: data
    params: {}
- name: get_referral_key
  endpoint:
    path: /api-docs/peripheral-functions/referral-system/network-get-referral-key
    method: GET
- name: get_network_downline
  endpoint:
    path: /api-docs/peripheral-functions/referral-system/network-get-network-downline
    method: GET
- name: invite_new_user
  endpoint:
    path: /api-docs/peripheral-functions/referral-system/network-invite-a-new-user
    method: POST
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: Get all created Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-collections
    method: GET
- name: Update Collection Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-collection-data
    method: PUT
- name: Get all available NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-available-nfts
    method: GET
- name: Get all created NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-created-nfts
    method: GET
- name: Get all owned NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-owned-nfts
    method: GET
- name: Get all sold NFTs
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-sold-nfts
    method: GET
- name: Get NFT Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-meta-data
    method: GET
- name: Get NFT Lifecycle History
  endpoint:
    path: /api-docs/nft-super-store/nft-get-nft-lifecycle-history
    method: GET
- name: Create new NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-nft
    method: POST
- name: Publish / Unpublish NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-publish-unpublish-nft
    method: POST
- name: Update NFT Data
  endpoint:
    path: /api-docs/nft-super-store/nft-update-nft-data
    method: PUT
- name: Create NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: Get created NFT Tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: Allocate Tag to NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: Instant-Buy NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: POST
- name: Get Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: PUT
- name: Get Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: NFT Tag
  endpoint:
    path: /api-docs/nft-super-store/nft-create-nft-tag
    method: POST
- name: create_nft_tag
  endpoint:
    path: /api/v1/nft/tags/create
    method: POST
    data_selector: application/json
    params: {}
- name: get_created_nft_tags
  endpoint:
    path: /api-docs/nft-super-store/nft-get-created-nft-tags
    method: GET
- name: created_nft_tags
  endpoint:
    path: /api/v1/nft/tags/all
    method: GET
    data_selector: application/json
- name: NFT Categories
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-categories
    method: GET
- name: NFT Collections
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-nft-collections
    method: GET
- name: Collection Items
  endpoint:
    path: /api-docs/nft-super-store/nft-get-all-collection-items
    method: GET
- name: Collection Meta-Data
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collection-meta-data
    method: GET
- name: Create new Collection
  endpoint:
    path: /api-docs/nft-super-store/nft-create-new-collection
    method: POST
- name: allocate_tag_to_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-allocate-tag-to-nft
    method: POST
- name: allocate_nft_tag
  endpoint:
    path: /api/v1/nft/tags/allocate
    method: POST
    data_selector: body
    params: {}
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: Make Bid for NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-make-bid-for-nft
    method: POST
- name: make_bid
  endpoint:
    path: /api/v1/nft/tokens/make-offer
    method: POST
    data_selector: application/json
- name: accept_bid_sell_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: GET
- name: Accept Bid/Sell NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: GET
- name: accept_offer
  endpoint:
    path: /api/v1/nft/tokens/accept-offer
    method: POST
    data_selector: application/json
    params: {}
- name: NFT
  endpoint:
    path: /api-docs/nft-super-store/nft-accept-bid-sell-nft
    method: POST
- name: nft
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: GET
    data_selector: nftData
- name: instant_buy_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: GET
- name: buy_nft
  endpoint:
    path: /api/v1/nft/tokens/buy-nft
    method: POST
    data_selector: application/json
    params: {}
- name: instant_buy_nft
  endpoint:
    path: /api-docs/nft-super-store/nft-instant-buy-nft
    method: GET
- name: creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
    data_selector: records
- name: creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: creator_profile
  endpoint:
    path: /api/v1/nft/creator/profile
    method: GET
    data_selector: result
    params:
      creator_uuid: string
- name: Get Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-get-creator-profile
    method: GET
- name: Update Creator Profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: POST
- name: update_creator_profile
  endpoint:
    path: /api-docs/nft-super-store/nft-update-creator-profile
    method: POST
- name: update_creator_profile
  endpoint:
    path: /api/v1/nft/creator/update
    method: POST
    data_selector: application/json
    params: {}
- name: Get Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: Get Collections of Creator
  endpoint:
    path: /api-docs/nft-super-store/nft-get-collections-of-creator
    method: GET
- name: creator_collections
  endpoint:
    path: /api/v1/nft/creator/collections
    method: GET
- name: collections
  endpoint:
    path: /api/v1/collections
    method: GET
    data_selector: result
    params: {}
- name: create_payment_request
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-create-payment-request
    method: POST
    data_selector: request
    params: {}
- name: get_request_details
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-get-request-details
    method: GET
    data_selector: details
    params: {}
- name: pay_payment_request
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-pay-payment-request
    method: POST
    data_selector: payment
    params: {}
- name: get_all_payment_requests
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-get-all-payment-requests
    method: GET
    data_selector: requests
    params: {}
- name: make_mass_payment
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-make-mass-payment
    method: POST
    data_selector: massPayment
    params: {}
- name: Get Seed
  endpoint:
    path: /api-docs/core-functionality/authentication/auth-get-seed
    method: GET
- name: User Login
  endpoint:
    path: /api-docs/core-functionality/authentication/auth-user-login
    method: POST
- name: Verify Token
  endpoint:
    path: /api-docs/core-functionality/authentication/auth-verify-token
    method: GET
- name: Get Seed
  endpoint:
    path: /api-docs/core-functionality/authentication/auth-get-seed
    method: GET
- name: User Login
  endpoint:
    path: /api-docs/core-functionality/authentication/auth-user-login
    method: POST
- name: Verify Token
  endpoint:
    path: /api-docs/core-functionality/authentication/auth-verify-token
    method: GET
- name: Get Basic Profile Data
  endpoint:
    path: /api-docs/core-functionality/user-profile-data/profile-get-basic-profile-data
    method: GET
- name: Get all Payment Requests
  endpoint:
    path: /api-docs/sales-and-payments-functions/payment-functions/pay-get-all-payment-requests
    method: GET
- name: DataStreams
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-list-all-datastreams
    method: GET
    data_selector: records
- name: list_all_datastreams
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-list-all-datastreams
    method: GET
- name: create_new_stream
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-create-new-stream
    method: POST
- name: whitelist_subscriber
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-whitelist-subscriber
    method: POST
- name: blacklist_subscriber
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-blacklist-subscriber
    method: POST
- name: whitelist_publisher
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-whitelist-publisher
    method: POST
- name: blacklist_publisher
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-blacklist-publisher
    method: POST
- name: toggle_stream_state
  endpoint:
    path: /api-docs/storage-and-data-transfer/hybrid-datastreams/stream-toggle-stream-state
    method: POST
- name: Get Quantum Bytes
  endpoint:
    path: /api-docs/peripheral-functions/quantum-entropy/entropy-get-quantum-bytes
    method: GET
- name: Get Noise Bytes
  endpoint:
    path: /api-docs/peripheral-functions/quantum-entropy/entropy-get-noise-bytes
    method: GET
- name: user_profile
  endpoint:
    path: /api/v1/user/profile
    method: GET
    data_selector: data
    params: {}
- name: wallet_transactions
  endpoint:
    path: /api/v1/wallet/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: Get Referral Key
  endpoint:
    path: /api-docs/peripheral-functions/referral-system/network-get-referral-key
    method: GET
- name: Get Network Downline
  endpoint:
    path: /api-docs/peripheral-functions/referral-system/network-get-network-downline
    method: GET
- name: Invite a new User
  endpoint:
    path: /api-docs/peripheral-functions/referral-system/network-invite-a-new-user
    method: GET
notes:
- API may have rate limits that need to be considered
- Requires setup of connected app.
- Ensure API keys are secured.
- Access is gated through a secure API key infrastructure with environment-specific
  scopes (sandbox or production).
- Requires setup of connected app in Hybrid-Chain.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Leverage and derivative trading is regulated in most jurisdictions. Ensure user
  access complies with local financial regulations, licensing, and leverage limits.
- OTC transactions may require regulatory licenses depending on your jurisdiction.
  Always consult legal advisors and comply with Hybrid-Chain’s platform policies.
- Tokenized equity is subject to strict securities regulations. Always consult with
  legal and compliance professionals to determine appropriate offering structures
  in your jurisdiction.
- Always consult national labor laws, crypto taxation guidance, and regulatory advisors
  to ensure legal operation.
- Operating a neobank—even in decentralized form—may still fall under e-money, VASP,
  or money transmission regulations in certain jurisdictions. Ensure your product
  structure aligns with applicable legal frameworks.
- Operators must comply with applicable anti-money laundering (AML), know-your-customer
  (KYC), and money transmission regulations in the regions where users are sending
  or receiving funds.
- Depending on your issuer and jurisdiction, crypto-to-fiat spending may require additional
  licenses or disclosures.
- Tokenized Loyalty Programs may require disclosures under marketing, consumer protection,
  or financial incentive guidelines depending on your jurisdiction. Always comply
  with local law and Hybrid-Chain platform terms.
- Depending on your region, tokenized game currencies or NFT assets may fall under
  securities or VASP regulations.
- Sports betting and derivatives are subject to strict legal restrictions in many
  jurisdictions. Always consult legal counsel and comply with all local laws, gaming
  regulations, and Hybrid-Chain’s platform policies.
- Government-related disbursements may fall under financial, humanitarian aid, or
  central banking oversight.
- Authentication is encrypted and hashed through a unique seed per user profile.
- API requires OAuth2 authentication.
- Returns an overview of all available markets on the Decentralized Exchange.
- Requires authorization using Bearer JWT
- Use the 'Get DEX Markets' end-point for an overview of all available markets.
- Last updated 3 months ago
- Requires setup of connected app in Hybrid-Chain
- Ensure to follow the authentication guide for setup.
- Returns a list of executed Trades of the last 10 minutes for a given market.
- All operations on mtf.order are 'create' operations.
- The following update on model mtf.order has been completed
- Requires authentication setup in the developer portal.
- Some objects like mtf.order may return nulls in deeply nested fields
- Requires user authentication via login
- Requires setup of connected app in api
- Uses OAuth2 for authentication
- Use the "Get DEX Markets" end-point for an overview of all available markets.
- Returns details and meta data of a particular trade, identified by its id on the
  request.
- Requires setup of connected app in API
- Returns details and meta data of a particular order, identified by it's id on the
  request (includes trade id references where fills have been executed).
- Returns details and meta data of a particular trade, identified by it's id on the
  request.
- Creates an order with the parameters specified.
- API requires authentication setup for access.
- Returns details and meta data of a particular order, identified by its id on the
  request.
- Modify an open Order on the Multi-Lateral Trading Exchange.
- Requires setup of connected app in Hybrid-Chain API
- Requires authentication to modify open orders.
- Uses OAuth2 with refresh token — requires setup of connected app in mtf
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in hybrid-chain
- Some endpoints may have rate limits
- The following update on model mtf.order has been completed.
- Some updates may not be reflected immediately.
- Requires OAuth2 authentication.
- Uses OAuth2 authentication
- Authentication may require additional setup on the Hybrid-Chain platform.
- Uses OAuth2 with refresh token — requires setup of connected app in Hybrid-Chain
- OAuth2 authentication is required to mint a new token.
- Requires authentication to access the API
- Requires setup of connected app in hybrid-chain
- API may have rate limiting
- Successful response returns no content
- Some endpoints may have rate limiting
- Requires user authentication to redeem tokens.
- Ensure proper authentication setup before making API calls
- Ensure to handle rate limits when accessing endpoints
- API supports various NFT functionalities including creation, retrieval, and metadata
  access.
- Requires user login for accessing NFT data.
- API provides data about NFTs available in the platform
- Some items may have null values for certain fields.
- Uses non-authenticated endpoints for data retrieval
- Kittens, punks, and memes are now trading digital wallets for cryptocurrencies.
- Some items may return nulls in deeply nested fields
- Uses API key for authentication.
- Some NFTs may have null values in certain fields.
- Each collection item contains metadata about the artist, category, and item details.
- Buy and sell scarce digital goods from the likes of POAP, Urbit ID, and Polyient
  Games.
- Allows fiat and crypto payments
- Customizable checkout options available
- Uses API key for authentication - ensure to include the key in the header
- Some endpoints may have rate limits.
- Requires JWT for authorization
- The way we value internet-native items is changing with the development of blockchain
  technology.
- API requires user authentication for access.
- Ensure collection data is properly formatted before submission.
- An online community of makers, developers, and traders is pushing the art world
  into new territory.
- The API returns data in nested structures that may require careful parsing.
- Kittens, punks, and memes are now trading digital wallets for cryptocurrencies,
  and the online collectibles market is taking shape before our eyes.
- Uses API key for authentication
- Some endpoints may return nulls in nested fields
- Uses REST API for NFT sales data.
- The merchant key is required for API access.
- Requires API key for authentication
- Requires authentication via OAuth2.
- Supports various NFT operations including transfers and minting.
- Requires setup of JWT for authorization
- Refer to the developer portal for detailed API documentation
- Body structure includes destination_address, description, source_currency, source_amount,
  and 2fa_code
- Successful response returns application/json
- Some objects may have specific requirements for creation.
- Authentication details are required for accessing the API.
- The Merchant Console (via Website), allows the management of the orders and their
  payment status online to take place immediately, without the need to build a system
  with these Endpoints.
- the argument/parameter 'merchant_key' is shown on the top left of the Merchant Console.
- 'Authorization: Bearer JWT'
- Requires a valid connected app configuration for OAuth2.
- Successful response is 200
- Successful response returns 200 status code
- Requires bearer token for authentication
- Some endpoints may require additional parameters for successful requests.
- Requires JWT in Authorization header for bearerAuth
- Requires user authentication
- Successful response returns no content.
- Some collections may not have a title image.
- The argument/parameter 'merchant_key' is shown on the top left of the Merchant Console.
errors:
- 'INVALID_REQUEST: Check your request parameters'
- 'UNAUTHORIZED: Ensure your authentication is correct'
- 'INVALID_TOKEN: Check token validity.'
- 'ACCESS_DENIED: Ensure proper permissions.'
- 'RATE_LIMIT_EXCEEDED: Slow down requests.'
- '401 Unauthorized: Check your credentials.'
- '403 Forbidden: Make sure you have permission for the requested resource.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck OAuth credentials.'
- '200 OK: Successful operation'
- 200 OK
- '200 OK: Successfully cancels orders'
- '401 Unauthorized: Invalid credentials.'
- '401 Unauthorized: Check login credentials'
- '404 Not Found: Verify endpoint paths'
- '200 OK: The following update on model mtf.external_modification_request has been
  completed'
- '200 OK: Successful request.'
- '400 Bad Request: Check request format and parameters.'
- '401 Unauthorized: Recheck OAuth tokens.'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your client credentials.'
- '401 Unauthorized: Invalid credentials provided'
- '200: Successful response'
- 'INVALID_TOKEN: Check the validity of the provided token'
- 'TOKEN_NOT_FOUND: Ensure the token exists and is correct'
- '401 Unauthorized: Check your API key or token'
- '401 Unauthorized: Check your authentication.'
- '400 Bad Request: Check request parameters for errors.'
- '401 Unauthorized: Verify API key validity.'
- '404 Not Found: Ensure the requested resource exists.'
- '401 Unauthorized: Recheck API key validity'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API key or token'
- '500 Internal Server Error: Server issue, retry later'
- '401 Unauthorized: Check API key'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Verify API key.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify API token.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Recheck token or authorization method'
- '400 Bad Request: Ensure all required parameters are included in the request.'
- '404 Not Found: Verify the endpoint and resource identifiers.'
- '403 Forbidden: Check API key or permissions'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Check your API key.'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Check the endpoint URL'
- '404 Not Found: Verify endpoint'
- 'INVALID_REQUEST: Check the request parameters.'
- 'NOT_FOUND: Ensure the resource exists.'
- 'UNAUTHORIZED: Verify your authentication.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Validate OAuth token.'
- '429 Too Many Requests: Rate limit exceeded.'
- 200 Successful response
- '401 Unauthorized: Recheck authentication credentials.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Invalid credentials'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Bearer Token
  - User Login
  - Verify Token
  - 'AUTH: User Login'
  - 'AUTH: Verify Token'
  - OAuth
  - User
client:
  base_url: https://api.hybrid-chain.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://auth.hybrid-chain.com/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
