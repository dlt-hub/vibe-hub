resources:
- name: NLP Analyze
  endpoint:
    path: /v2/nlp/analyze
    method: POST
- name: NLP Analyze Feedback
  endpoint:
    path: /v2/nlp/analyze/feedback
    method: POST
- name: Knowledgebase Details
  endpoint:
    path: /v2/knowledgebase/details
    method: POST
- name: Knowledgebase Infoboxes
  endpoint:
    path: /v2/knowledgebase/infoboxes
    method: POST
- name: Knowledgebase Redirects
  endpoint:
    path: /v2/knowledgebase/redirects
    method: POST
- name: Knowledgebase Search
  endpoint:
    path: /v2/knowledgebase/search
    method: POST
- name: Knowledgebase Standard Forms
  endpoint:
    path: /v2/knowledgebase/stdforms
    method: POST
- name: Create Editorial Tag
  endpoint:
    path: /v2/customize/editorial_tag/create
    method: POST
- name: List Editorial Tags
  endpoint:
    path: /v2/customize/editorial_tag/list
    method: GET
- name: Search Editorial Tags
  endpoint:
    path: /v2/customize/editorial_tag/search
    method: GET
- name: Retrieve Editorial Tag
  endpoint:
    path: /v2/customize/editorial_tag/{gkbId}
    method: GET
- name: Update Editorial Tag
  endpoint:
    path: /v2/customize/editorial_tag/{gkbId}
    method: PUT
- name: Delete Editorial Tag
  endpoint:
    path: /v2/customize/editorial_tag/{gkbId}
    method: DELETE
- name: List Articles
  endpoint:
    path: /v2/articles
    method: GET
- name: Retrieve Article
  endpoint:
    path: /v2/articles/{dataset}/{art_id}
    method: GET
- name: Add/Update Article
  endpoint:
    path: /v2/articles/{dataset}/{art_id}
    method: PUT
- name: Delete Article
  endpoint:
    path: /v2/articles/{dataset}/{art_id}
    method: DELETE
- name: Recommend Articles
  endpoint:
    path: /v2/articles/{dataset}/recommend
    method: POST
- name: Recommend Articles Feedback
  endpoint:
    path: /v2/articles/{dataset}/recommend/feedback
    method: POST
- name: List Photos
  endpoint:
    path: /v2/photos
    method: GET
- name: Recommend Photos
  endpoint:
    path: /v2/photos/{dataset}/recommend
    method: POST
- name: Recommend Photos Feedback
  endpoint:
    path: /v2/photos/{dataset}/recommend/feedback
    method: POST
- name: nlp_analyze
  endpoint:
    path: /v2/nlp/analyze
    method: POST
- name: nlp_analyze_feedback
  endpoint:
    path: /v2/nlp/analyze/feedback
    method: POST
- name: knowledgebase_details
  endpoint:
    path: /v2/knowledgebase/details
    method: POST
- name: knowledgebase_infoboxes
  endpoint:
    path: /v2/knowledgebase/infoboxes
    method: POST
- name: knowledgebase_redirects
  endpoint:
    path: /v2/knowledgebase/redirects
    method: POST
- name: knowledgebase_search
  endpoint:
    path: /v2/knowledgebase/search
    method: POST
- name: knowledgebase_stdforms
  endpoint:
    path: /v2/knowledgebase/stdforms
    method: POST
- name: editorial_tag_create
  endpoint:
    path: /v2/customize/editorial_tag/create
    method: POST
- name: editorial_tag_list
  endpoint:
    path: /v2/customize/editorial_tag/list
    method: GET
- name: editorial_tag_search
  endpoint:
    path: /v2/customize/editorial_tag/search
    method: GET
- name: editorial_tag_get
  endpoint:
    path: /v2/customize/editorial_tag/{gkbId}
    method: GET
- name: editorial_tag_update
  endpoint:
    path: /v2/customize/editorial_tag/{gkbId}
    method: PUT
- name: editorial_tag_delete
  endpoint:
    path: /v2/customize/editorial_tag/{gkbId}
    method: DELETE
- name: articles_list
  endpoint:
    path: /v2/articles
    method: GET
- name: articles_get
  endpoint:
    path: /v2/articles/{dataset}/{art_id}
    method: GET
- name: articles_put
  endpoint:
    path: /v2/articles/{dataset}/{art_id}
    method: PUT
- name: articles_delete
  endpoint:
    path: /v2/articles/{dataset}/{art_id}
    method: DELETE
- name: articles_recommend
  endpoint:
    path: /v2/articles/{dataset}/recommend
    method: POST
- name: articles_recommend_feedback
  endpoint:
    path: /v2/articles/{dataset}/recommend/feedback
    method: POST
- name: photos_list
  endpoint:
    path: /v2/photos
    method: GET
- name: photos_recommend
  endpoint:
    path: /v2/photos/{dataset}/recommend
    method: POST
- name: photos_recommend_feedback
  endpoint:
    path: /v2/photos/{dataset}/recommend/feedback
    method: POST
- name: nlp_analyze
  endpoint:
    path: nlp/analyze
    method: POST
    data_selector: tags
    params: {}
- name: semantic_tagging
  endpoint:
    path: /nlp/analyze
    method: POST
    data_selector: tags
- name: nlp_analyze
  endpoint:
    path: nlp/analyze
    method: POST
    data_selector: results
- name: paragraphs
  endpoint:
    path: /v2/nlp/analyze
    method: POST
    data_selector: results
    params: {}
- name: nlp_analyze
  endpoint:
    path: /nlp/analyze
    method: POST
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api_media2/guide
    method: GET
    data_selector: tags
- name: semantic_tagging
  endpoint:
    path: /nlp/analyze
    method: POST
    data_selector: tags
- name: entities
  endpoint:
    path: /entities
    method: GET
- name: analyze
  endpoint:
    path: /v2/nlp/analyze
    method: POST
    data_selector: result
    params:
      id: '1234'
- name: knowledgebase_infoboxes
  endpoint:
    path: knowledgebase/infoboxes
    method: POST
    data_selector: data
- name: knowledgebase_stdforms
  endpoint:
    path: knowledgebase/stdforms
    method: POST
    data_selector: data
- name: knowledgebase_redirects
  endpoint:
    path: knowledgebase/redirects
    method: POST
    data_selector: data
- name: analyze
  endpoint:
    path: /v2/nlp/analyze
    method: POST
    data_selector: id
    params: {}
- name: knowledge_base_search
  endpoint:
    path: /knowledgebase/search
    method: POST
    data_selector: itemDetails
- name: tags
  endpoint:
    path: /api/media/tags
    method: GET
    data_selector: tags
- name: feedback_tags
  endpoint:
    path: /nlp/analyze/feedback
    method: POST
    data_selector: tags
- name: feedback_entities
  endpoint:
    path: /nlp/analyze/feedback
    method: POST
    data_selector: entities
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: photos
    params: {}
- name: recommendations
  endpoint:
    path: /photos/ctk/recommend
    method: POST
    data_selector: recommendations
    params: {}
- name: knowledge_base_info_boxes
  endpoint:
    path: knowledgebase/infoboxes
    method: POST
- name: knowledge_base_std_forms
  endpoint:
    path: knowledgebase/stdforms
    method: POST
- name: knowledge_base_redirects
  endpoint:
    path: knowledgebase/redirects
    method: POST
- name: knowledge_base_search
  endpoint:
    path: knowledgebase/search
    method: POST
    data_selector: hits
- name: photos_recommend
  endpoint:
    path: /v2/photos/ctk/recommend
    method: POST
    data_selector: photos
    params: {}
- name: feedback_on_tags
  endpoint:
    path: /nlp/analyze/feedback
    method: POST
    data_selector: tags
- name: feedback_on_entities
  endpoint:
    path: /nlp/analyze/feedback
    method: POST
    data_selector: entities
- name: nlp_analyze
  endpoint:
    path: nlp/analyze
    method: POST
    data_selector: output
    params: {}
- name: knowledgebase_stdforms
  endpoint:
    path: knowledgebase/stdforms
    method: POST
    data_selector: output
    params: {}
- name: archive_analysis
  endpoint:
    path: /api_media2/guide/archive
    method: GET
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: photos
    params: {}
- name: recommend_photos
  endpoint:
    path: /photos/ctk/recommend
    method: POST
    data_selector: photos
    params: {}
- name: entities
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: entities
- name: recommend_photos
  endpoint:
    path: /v2/photos/ctk/recommend
    method: POST
    data_selector: photos
    params: {}
- name: NlpRequest
  endpoint:
    path: /api_media2/reference/NlpRequest
    method: GET
- name: nlp_analyze
  endpoint:
    path: nlp/analyze
    method: POST
    data_selector: data
- name: knowledgebase_stdforms
  endpoint:
    path: knowledgebase/stdforms
    method: POST
    data_selector: data
- name: tags
  endpoint:
    path: /media/tags
    method: POST
    data_selector: tags
    params: {}
- name: items
  endpoint:
    path: /media/items/{id}
    method: GET
    data_selector: items
    params: {}
- name: feedback
  endpoint:
    path: /media/tags/feedback
    method: POST
    data_selector: feedback
    params: {}
- name: tags
  endpoint:
    path: /media/tags
    method: POST
    data_selector: data
- name: items
  endpoint:
    path: /media/items/{id}
    method: GET
    data_selector: data
- name: tags_feedback
  endpoint:
    path: /media/tags/feedback
    method: POST
    data_selector: data
- name: entities
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: entities
- name: Vector
  endpoint:
    path: /api_media2/reference/Vector
    method: GET
- name: mention
  endpoint:
    path: /api_media2/reference/Mention
    method: GET
    data_selector: records
- name: language_detection
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: responseObj
    params: {}
- name: Analysis
  endpoint:
    path: /api_media2/reference/Analysis
    method: GET
    data_selector: response
- name: sentiment_analysis
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: docSentiment
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: POST
    data_selector: data
- name: items
  endpoint:
    path: /items/{id}
    method: GET
    data_selector: data
- name: feedback
  endpoint:
    path: /tags/feedback
    method: POST
    data_selector: data
- name: tags
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: tags
    params: {}
- name: tags
  endpoint:
    path: /media/tags
    method: POST
    data_selector: data
- name: items
  endpoint:
    path: /media/items/{id}
    method: GET
    data_selector: data
- name: feedback
  endpoint:
    path: /media/tags/feedback
    method: POST
    data_selector: data
- name: relations
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: relations
    params: {}
- name: language_detection
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: result.language.detected
    params: {}
- name: sentiment_analysis
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: id
    params: {}
- name: analysis-result-documents
  endpoint:
    path: /analysis/result/documents
    method: GET
    data_selector: records
- name: analysis-result-entities
  endpoint:
    path: /analysis/result/entities
    method: GET
    data_selector: records
- name: analysis-result-relations
  endpoint:
    path: /analysis/result/relations
    method: GET
    data_selector: records
- name: analysis-result-sentences
  endpoint:
    path: /analysis/result/sentences
    method: GET
    data_selector: records
- name: analysis
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: tags
- name: relations
  endpoint:
    path: /v3/analysis
    method: POST
    data_selector: relations
    params: {}
- name: Response
  endpoint:
    path: /response
    method: GET
    data_selector: fields
    params: {}
- name: ItemKeywordsResponse
  endpoint:
    path: /api/media2/ItemKeywordsResponse
    method: GET
- name: analysis-result-documents
  endpoint:
    path: /api/general/analysis-result-documents
    method: GET
    data_selector: records
    params: {}
- name: analysis-result-entities
  endpoint:
    path: /api/general/analysis-result-entities
    method: GET
    data_selector: records
    params: {}
- name: analysis-result-relations
  endpoint:
    path: /api/general/analysis-result-relations
    method: GET
    data_selector: records
    params: {}
- name: analysis-result-sentences
  endpoint:
    path: /api/general/analysis-result-sentences
    method: GET
    data_selector: records
    params: {}
- name: list_items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params:
      bucket: abc
      idsonly: 'True'
      limit: 5
- name: read_item_properties
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: ''
    params: {}
- name: search_items
  endpoint:
    path: /search/ids
    method: GET
    data_selector: ''
    params:
      buckets: abc
      externalSource: ''
      externalIds: ''
      idsonly: 'False'
- name: service_status
  endpoint:
    path: /status
    method: GET
- name: template_validation
  endpoint:
    path: /validate
    method: POST
- name: generate
  endpoint:
    path: /generate
    method: POST
- name: AnalyzeFeedback
  endpoint:
    path: /analyze/feedback
    method: POST
    data_selector: response
- name: Response
  endpoint:
    path: /api_general/reference/Response
    method: GET
    data_selector: fields
- name: AnalyzeFeedbackItem
  endpoint:
    path: /api_media2/reference/AnalyzeFeedbackItem
    method: GET
- name: ItemKeywordsResponse
  endpoint:
    path: /ItemKeywordsResponse
    method: GET
    data_selector: keywords
- name: Argument
  endpoint:
    path: /api_media2/reference/Argument
    method: GET
- name: article
  endpoint:
    path: /api_media2/reference/Article
    method: GET
    data_selector: records
- name: list_items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params:
      bucket: abc
      idsonly: 'True'
      limit: 5
- name: item_properties
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item
    params: {}
- name: search_items
  endpoint:
    path: /search/ids
    method: GET
    data_selector: items
    params:
      bucket: abc
      externalSource: ''
      externalIds: ''
      idsonly: 'False'
- name: ArticleConstraints
  endpoint:
    path: /api_media2/reference/ArticleConstraints
    method: GET
    data_selector: records
- name: article_feedback
  endpoint:
    path: /api_media2/reference/ArticleFeedback
    method: GET
    data_selector: feedback
    params: {}
- name: ArticlesResponse
  endpoint:
    path: /api_media2/reference/ArticlesResponse
    method: GET
- name: template_validation
  endpoint:
    path: /validate
    method: POST
    data_selector: templates
    params: {}
- name: service_status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params: {}
- name: generation
  endpoint:
    path: /generate
    method: POST
    data_selector: id
    params: {}
- name: Category
  endpoint:
    path: /api_media2/reference/Category
    method: GET
    data_selector: Category
    params: {}
- name: CharSpan
  endpoint:
    path: /api_media2/reference/CharSpan
    method: GET
    data_selector: fields
    params: {}
- name: analyze_feedback
  endpoint:
    path: /AnalyzeFeedback
    method: POST
    data_selector: response
- name: ConstraintCategory
  endpoint:
    path: /api_media2/reference/ConstraintCategory
    method: GET
- name: Details
  endpoint:
    path: /api_media2/reference/Details
    method: GET
- name: argument
  endpoint:
    path: /api_media2/reference/Argument
    method: GET
    data_selector: fields
    params: {}
- name: editorial_tag
  endpoint:
    path: /api_media2/reference/EditorialTag
    method: GET
    data_selector: fields
- name: article
  endpoint:
    path: /api_media2/reference/Article
    method: GET
    data_selector: records
- name: editorial_tag_list
  endpoint:
    path: /editorialtags
    method: GET
    data_selector: tags
- name: ArticleConstraints
  endpoint:
    path: /api_media2/reference/ArticleConstraints
    method: GET
    data_selector: fields
    params: {}
- name: editorial_tag_search
  endpoint:
    path: /editorial_tag/search
    method: GET
    data_selector: foundTags
- name: article_feedback
  endpoint:
    path: /api_media2/reference/ArticleFeedback
    method: GET
- name: Entity
  endpoint:
    path: /api_media2/reference/Entity
    method: GET
    data_selector: Entity
- name: ArticlesResponse
  endpoint:
    path: /api_media2/reference/ArticlesResponse
    method: GET
    data_selector: articles
- name: GkbItemsInfoRequest
  endpoint:
    path: /api_media2/reference/GkbItemsInfoRequest
    method: GET
    data_selector: records
- name: category
  endpoint:
    path: /api_media2/reference/Category
    method: GET
    data_selector: Category
- name: GkbItemsRedirectsRequest
  endpoint:
    path: /api_media2/reference/GkbItemsRedirectsRequest
    method: GET
    data_selector: gkbIds
- name: CharSpan
  endpoint:
    path: /api_media2/reference/CharSpan
    method: GET
    data_selector: fields
    params: {}
- name: GkbItemsSearchRequest
  endpoint:
    path: /GkbItemsSearchRequest
    method: GET
    data_selector: results
- name: GkbItemsStdFormRequest
  endpoint:
    path: /api_media2/reference/GkbItemsStdFormRequest
    method: GET
- name: ConstraintString
  endpoint:
    path: /api_media2/reference/ConstraintString
    method: GET
- name: GkbProperty
  endpoint:
    path: /api_media2/reference/GkbProperty
    method: GET
    data_selector: records
- name: details
  endpoint:
    path: /api_media2/reference/Details
    method: GET
- name: InfoBox
  endpoint:
    path: /api_media2/reference/InfoBox
    method: GET
    data_selector: fields
- name: editorial_tag
  endpoint:
    path: /api_media2/reference/EditorialTag
    method: GET
    data_selector: records
- name: LangValueInfoBox
  endpoint:
    path: /api_media2/reference/LangValueInfoBox
    method: GET
    data_selector: value
    params: {}
- name: editorial_tag_list
  endpoint:
    path: /editorial_tags
    method: GET
    data_selector: tags
- name: LangValueString
  endpoint:
    path: /api_media2/reference/LangValueString
    method: GET
    data_selector: value
    params: {}
- name: editorial_tag_search
  endpoint:
    path: /editorial_tag_search
    method: GET
    data_selector: foundTags
- name: Message
  endpoint:
    path: /api_media2/reference/Message
    method: GET
    data_selector: message
- name: NlpRequest
  endpoint:
    path: /api_media2/reference/NlpRequest
    method: GET
    data_selector: fields
    params: {}
- name: GkbItemsInfoRequest
  endpoint:
    path: /gkb/items/info
    method: GET
    data_selector: items
    params:
      ids: ''
      language: ''
      fallbackLanguages: ''
- name: ParaSpec
  endpoint:
    path: /api_media2/reference/ParaSpec
    method: GET
    data_selector: records
- name: gkb_items_redirects
  endpoint:
    path: /api/media2/GkbItemsRedirectsRequest
    method: GET
    data_selector: redirects
- name: GkbItemsSearch
  endpoint:
    path: /GkbItemsSearch
    method: POST
    data_selector: results
- name: photograph
  endpoint:
    path: /photograph
    method: GET
    data_selector: photoData
- name: GkbItemsStdFormRequest
  endpoint:
    path: /GkbItemsStdFormRequest
    method: POST
    data_selector: data
    params:
      ids: list of GKB item IDs
      language: preferred language
- name: photos_recommendation
  endpoint:
    path: /api_media2/reference/PhotosRecommendation
    method: GET
- name: photos_recommendation
  endpoint:
    path: /photos/recommendation
    method: POST
    data_selector: recommendations
- name: GkbProperty
  endpoint:
    path: /api_media2/reference/GkbProperty
    method: GET
    data_selector: records
- name: InfoBox
  endpoint:
    path: /api_media2/reference/InfoBox
    method: GET
    data_selector: fields
    params: {}
- name: RecommendArticlesFeedback
  endpoint:
    path: /RecommendArticlesFeedback
    method: GET
    data_selector: articles
- name: language
  endpoint:
    path: /api_general/guide/language
    method: GET
    data_selector: detected
    params: {}
- name: RecommendFeedback
  endpoint:
    path: /api_media2/reference/RecommendFeedback
    method: GET
- name: LangValueInfoBox
  endpoint:
    path: /api_media2/reference/LangValueInfoBox
    method: GET
- name: recommend_feedback_photo
  endpoint:
    path: /api_media2/reference/RecommendFeedbackPhoto
    method: GET
- name: message
  endpoint:
    path: /Message
    method: GET
    data_selector: message
    params: {}
- name: redirects
  endpoint:
    path: /api_media2/reference/Redirects
    method: GET
    data_selector: records
- name: relation
  endpoint:
    path: /api_media2/reference/Relation
    method: GET
    data_selector: records
- name: SearchResults
  endpoint:
    path: /api/media2/SearchResults
    method: GET
- name: ParaSpec
  endpoint:
    path: /api_media2/reference/ParaSpec
    method: GET
    data_selector: records
- name: sentiment
  endpoint:
    path: /api_general/guide/sentiment
    method: GET
    data_selector: sentiment
- name: photo_data
  endpoint:
    path: /photograph
    method: GET
    data_selector: photographs
- name: tag
  endpoint:
    path: /api_media2/reference/Tag
    method: GET
- name: PhotosRecommendation
  endpoint:
    path: /api_media2/reference/PhotosRecommendation
    method: GET
- name: tecto_token
  endpoint:
    path: /api_media2/reference/TectoToken
    method: GET
- name: photo_recommendations
  endpoint:
    path: /photos/request
    method: POST
    data_selector: recommendations
    params: {}
- name: RecommendArticlesFeedback
  endpoint:
    path: /api_media2/recommendations/feedback
    method: POST
    data_selector: feedback
    params: {}
- name: redirects
  endpoint:
    path: /api_media2/reference/Redirects
    method: GET
    data_selector: records
- name: relation
  endpoint:
    path: /api_media2/reference/Relation
    method: GET
- name: Response
  endpoint:
    path: /api/general/reference/Response
    method: GET
- name: SearchResults
  endpoint:
    path: /SearchResults
    method: GET
    data_selector: results
    params: {}
- name: sentiment
  endpoint:
    path: /api_general/guide/sentiment
    method: GET
    data_selector: results
- name: Tag
  endpoint:
    path: /api_media2/reference/Tag
    method: GET
- name: Token
  endpoint:
    path: /api_media2/reference/Token
    method: GET
    data_selector: fields
notes:
- 'The API is intended for analysis of small and medium-sized documents: reviews,
  newspapers articles, etc., not books.'
- Large documents must be split into smaller units.
- No special setup necessary
- Large documents must be split into smaller units. The API will reject any document
  larger than 500 KB.
- We do not provide a dedicated SDK for the Media API yet.
- Synthetic entities are useful for completeness but are not recommended for most
  production use cases.
- Searches match full entity names, not substrings.
- Uses Geneea API for NLP analysis
- To paginate through results, include a cursor in the request.
- 'Use ''cursor'': ''*'' to retrieve the first page of results explicitly.'
- Support for languages varies depending on the specific feature.
- In production environment, the API should always be called from the backend, otherwise
  you run into CORS problems
- Uses API key for authentication
- The response includes a field 'nextCursor' for requesting the next page.
- Language codes follow ISO 639-1 standards.
- The Media API V1 was deprecated; use the new version instead.
- Offline processing enables our systems to see the entire dataset at once.
- All fields are optional, but at least one of title, lead, or body must be provided.
- Requires a user key for authorization
- Customization available for specific content.
- Requires a user key for authorization.
- Uses user key for authentication
- Requires user key for authentication.
- Use 'user_key <YOUR USER KEY>' for authorization.
- Named entities include names of people, organizations, locations, and products.
- General custom entities are standardized keyphrases (e.g., sports names, common
  political and economic terms).
- Sentiment analysis detects the author's emotions expressed in the text.
- Uses user key for authorization
- Requires setup of user key for authorization
- 'The API is intended for analysis of small and medium sized documents: reviews,
  newspapers articles, etc., not books.'
- The API will reject any request larger than 500 KB.
- Even analysis of smaller documents might time-out if they contain many entities.
- The quality of the results will not be as high if used outside of the optimized
  domains.
- 'The API is intended for analysis of small and medium sized documents: reviews,
  newspapers articles, etc., not books. Large documents must be split into smaller
  units.'
- The API will reject any request larger than 500 KB. However, even analysis of smaller
  documents might time-out if they contain many entities.
- Replace base64-encoded username:password in Authorization header
- Requests larger than 500 KB are rejected.
- Even smaller documents may time out if they contain many entities.
- If your use case involves large articles, please contact us.
- The structure is identical to the General API response.
- Represents a semantic relationship between entities, events, or concepts extracted
  from the text.
- Semantic tags are used to express the content of the article and provide better
  categorization and indexing.
- A token represents a unit of text, which could be a word, separator, or other meaningful
  component.
errors:
- Timout if documents contain many entities
- '401 Unauthorized: Recheck authorization key'
- '400 Bad Request: Check the request body for errors.'
- '401 Unauthorized: Validate the user key.'
- '500 Internal Server Error: Try again later.'
- 'REQUEST_TIMEOUT: Analysis of smaller documents might time out if they contain many
  entities.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- The API will reject any document larger than 500 KB.
- Analysis of smaller documents might time out if they contain many entities.
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.geneea.com
source_metadata: null
