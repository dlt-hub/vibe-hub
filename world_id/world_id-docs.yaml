resources:
- name: verify_proof
  endpoint:
    path: /api/v2/verify/{app_id}
    method: POST
    data_selector: ''
    params: {}
- name: get_action_metadata
  endpoint:
    path: /api/v1/precheck/{app_id}
    method: GET
    data_selector: ''
    params: {}
- name: get_jwk_keys
  endpoint:
    path: /api/v1/jwks
    method: GET
    data_selector: ''
    params: {}
- name: graphql
  endpoint:
    path: /api/v1/graphql
    method: POST
    data_selector: ''
    params: {}
- name: Verify
  endpoint:
    path: /mini-apps/commands/verify
    method: GET
- name: Pay
  endpoint:
    path: /mini-apps/commands/pay
    method: POST
- name: Wallet Auth
  endpoint:
    path: /mini-apps/commands/wallet-auth
    method: POST
- name: Send Transaction
  endpoint:
    path: /mini-apps/commands/send-transaction
    method: POST
- name: Sign Message
  endpoint:
    path: /mini-apps/commands/sign-message
    method: POST
- name: Sign Typed Data
  endpoint:
    path: /mini-apps/commands/sign-typed-data
    method: POST
- name: Share Contacts
  endpoint:
    path: /mini-apps/commands/share-contacts
    method: POST
- name: Request Permission
  endpoint:
    path: /mini-apps/commands/request-permission
    method: POST
- name: Get Permissions
  endpoint:
    path: /mini-apps/commands/get-permissions
    method: GET
- name: Send Haptic Feedback
  endpoint:
    path: /mini-apps/commands/send-haptic-feedback
    method: POST
- name: Share
  endpoint:
    path: /mini-apps/commands/share
    method: POST
- name: verify
  endpoint:
    path: /api/verify
    method: POST
    data_selector: payload
- name: initiate-payment
  endpoint:
    path: /api/initiate-payment
    method: POST
    data_selector: id
- name: confirm-payment
  endpoint:
    path: /api/confirm-payment
    method: POST
    data_selector: success
- name: get-prices
  endpoint:
    path: /api/get-prices
    method: GET
- name: send_transaction
  endpoint:
    path: /api/v2/minikit/transaction
    method: POST
    data_selector: payload
- name: get_transaction
  endpoint:
    path: /api/v2/minikit/transaction/{transaction_id}
    method: GET
    data_selector: transaction
- name: SignTypedData
  endpoint:
    path: /mini-apps/commands/sign-typed-data
    method: POST
- name: Share Contacts
  endpoint:
    path: /mini-apps/commands/share-contacts
    method: POST
    data_selector: contacts
    params: {}
- name: request_permission
  endpoint:
    path: /mini-apps/commands/request-permission
    method: POST
- name: permissions
  endpoint:
    path: /api/get-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: send_haptic_feedback
  endpoint:
    path: /mini-apps/commands/send-haptic-feedback
    method: POST
    data_selector: payload
    params: {}
- name: share
  endpoint:
    path: /mini-apps/commands/share
    method: GET
    data_selector: none
    params: {}
- name: send_notification
  endpoint:
    path: /api/v2/minikit/send-notification
    method: POST
    data_selector: response
    params: {}
- name: send_notification
  endpoint:
    path: /api-reference/send-notification
    method: POST
- name: get_prices
  endpoint:
    path: /public/v1/miniapps/prices
    method: GET
    data_selector: result
    params:
      cryptoCurrencies: WLD,USDC
      fiatCurrencies: ''
- name: create_action
  endpoint:
    path: /api/v2/create-action/{app_id}
    method: POST
    data_selector: action
- name: send_notification
  endpoint:
    path: /api/v2/minikit/send-notification
    method: POST
    data_selector: result
    params: {}
- name: verify_proof
  endpoint:
    path: /api/v2/verify/{app_id}
    method: POST
    data_selector: success
    params: {}
- name: transaction
  endpoint:
    path: /api/v2/minikit/transaction/{transaction_id}
    method: GET
    data_selector: transaction
    params:
      app_id: <string>
      type: <enum>
- name: transaction_debug
  endpoint:
    path: /api/v2/minikit/transaction/debug
    method: GET
    data_selector: transactions
    params:
      app_id: string
- name: user_grant_cycle
  endpoint:
    path: /api/v2/minikit/user-grant-cycle
    method: GET
    data_selector: result
    params:
      wallet_address: string
      app_id: string
- name: prices
  endpoint:
    path: /public/v1/miniapps/prices
    method: GET
    data_selector: result.prices
    params:
      fiatCurrencies: ''
      cryptoCurrencies: ''
- name: getIsUserVerified
  endpoint:
    path: /getIsUserVerified
    method: GET
    data_selector: result
- name: usernames_service
  endpoint:
    path: /usernames
    method: GET
- name: status
  endpoint:
    path: /api/services
    method: GET
    data_selector: services
    params:
      logs: 'true'
- name: Apple Pay
  endpoint:
    path: /api-reference/apple-pay
    method: POST
    data_selector: data
    params: {}
- name: Google Pay
  endpoint:
    path: /api-reference/google-pay
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /api/v1/transaction
    method: GET
    data_selector: data
    params: {}
- name: user_grant
  endpoint:
    path: /api/v1/user/grant
    method: GET
    data_selector: data
    params: {}
- name: invite
  endpoint:
    path: /api/process-referral
    method: POST
    data_selector: success
    params: {}
- name: Get Transaction
  endpoint:
    path: /api-reference/get-transaction
    method: GET
- name: Get Prices
  endpoint:
    path: /api-reference/get-prices
    method: GET
- name: Send Notification
  endpoint:
    path: /api-reference/send-notification
    method: POST
- name: Get Transaction
  endpoint:
    path: /api-reference/get-transaction
    method: GET
- name: Get User Grant Cycle
  endpoint:
    path: /api-reference/get-user-grant-cycle
    method: GET
- name: Get Prices
  endpoint:
    path: /api-reference/get-prices
    method: GET
- name: Verify
  endpoint:
    path: /api-reference/verify-proof
    method: POST
- name: Get Transaction
  endpoint:
    path: /api-reference/get-transaction
    method: GET
- name: Add Money Quick Action
  endpoint:
    path: /mini-apps/sharing/add-money-qa
    method: GET
    data_selector: parameters
- name: swap
  endpoint:
    path: /mini-apps/sharing/uno-qa
    method: GET
    data_selector: parameters
- name: eggs_vault
  endpoint:
    path: /mini-app
    method: GET
    data_selector: app_id
    params:
      campaignName: string
- name: Earn WLD mini app
  endpoint:
    path: /mini-app
    method: GET
    data_selector: app_id
    params:
      app_id: app_b0d01dd8f2bdfbff06c9e123de487eb8
- name: Get Transaction
  endpoint:
    path: /api-reference/get-transaction
    method: GET
- name: Get Prices
  endpoint:
    path: /api-reference/get-prices
    method: GET
- name: SageSupport
  endpoint:
    path: /api-reference/sage-support
    method: GET
    data_selector: support
- name: pool
  endpoint:
    path: /pool
    method: GET
    data_selector: stats
    params:
      tab: stats
- name: investor
  endpoint:
    path: /investor/$address
    method: GET
    data_selector: tokens
    params:
      tab: tokens
- name: sign-in
  endpoint:
    path: /sign-in
    method: GET
- name: quick_action
  endpoint:
    path: /mini-apps/sharing/world-chat-qa
    method: GET
    data_selector: actions
    params: {}
- name: business
  endpoint:
    path: /mini-app
    method: GET
    data_selector: businesses
- name: payment
  endpoint:
    path: /mini-app
    method: GET
    data_selector: records
    params:
      app_id: app_d9589ab005e18dcf362d2ea26aef669e
      path: /pay
- name: puf_token
  endpoint:
    path: /mini-app?app_id=app_15daccf5b7d4ec9b7dbba044a8fdeab5&path=app/token/{tokenAddress}
    method: GET
    data_selector: token_info
- name: orbital_withdrawal
  endpoint:
    path: /mini-app?app_id=app_2248679d8f07eb1b7eacd922f9a26a1e
    method: GET
- name: world_chain_mainnet
  endpoint:
    path: /world-chain-mainnet
    method: GET
    data_selector: properties
    params: {}
- name: world_chain_sepolia
  endpoint:
    path: /world-chain-sepolia
    method: GET
    data_selector: properties
    params: {}
- name: HelloWorldChain
  endpoint:
    path: /deploy/HelloWorldChain
    method: POST
    data_selector: result
- name: Contract
  endpoint:
    path: /world-chain/sepolia/contract
    method: POST
    data_selector: contractAddress
- name: World Chain Mainnet
  endpoint:
    path: /world-chain/mainnet
    method: GET
    data_selector: addresses
- name: Ethereum Mainnet
  endpoint:
    path: /ethereum/mainnet
    method: GET
    data_selector: addresses
- name: World Chain Sepolia Testnet
  endpoint:
    path: /world-chain/sepolia-testnet
    method: GET
    data_selector: addresses
- name: AnchorStateRegistryProxy
  endpoint:
    path: /0x1333d5E5201D760444A399E77b3D337eBDB0DD07
    method: GET
    data_selector: address
    params: {}
- name: Batch Submitter
  endpoint:
    path: /0x0f3ff4731D7a10B89ED79AD1Fd97844d7F66B96d
    method: GET
    data_selector: address
    params: {}
- name: Challenger
  endpoint:
    path: /0x945185C01fb641bA3E63a9bdF66575e35a407837
    method: GET
    data_selector: address
    params: {}
- name: DelayedWETHProxy
  endpoint:
    path: /0x4F4B8Adf1af4b61bb62F68b7aF1c37f8A6311663
    method: GET
    data_selector: address
    params: {}
- name: DisputeGameFactoryProxy
  endpoint:
    path: /0x8Ec1111f67Dad6b6A93B3F42DfBC92D81c98449A
    method: GET
    data_selector: address
    params: {}
- name: L1CrossDomainMessengerProxy
  endpoint:
    path: /0x7768c821200554d8F359A8902905Ba9eDe5659a9
    method: GET
    data_selector: address
    params: {}
- name: L1ERC721BridgeProxy
  endpoint:
    path: /0x3580505c56f8560E3777E92Fb27f70fD20c5B493
    method: GET
    data_selector: address
    params: {}
- name: L1StandardBridgeProxy
  endpoint:
    path: /0xd7DF54b3989855eb66497301a4aAEc33Dbb3F8DE
    method: GET
    data_selector: address
    params: {}
- name: L2OutputOracleProxy
  endpoint:
    path: /0xc8886f8BAb6Eaeb215aDB5f1c686BF699248300e
    method: GET
    data_selector: address
    params: {}
- name: MIPS
  endpoint:
    path: /0x69470D6970Cd2A006b84B1d4d70179c892cFCE01
    method: GET
    data_selector: address
    params: {}
- name: OptimismMintableERC20FactoryProxy
  endpoint:
    path: /0x2D272eF54Ee8EF5c2Ff3523559186580b158cd57
    method: GET
    data_selector: address
    params: {}
- name: OptimismPortalProxy
  endpoint:
    path: /0xFf6EBa109271fe6d4237EeeD4bAb1dD9A77dD1A4
    method: GET
    data_selector: address
    params: {}
- name: PermissionedDisputeGame
  endpoint:
    path: /0x552334Bf0B124bD89BFF744f33Ca7e49d44a80Ac
    method: GET
    data_selector: address
    params: {}
- name: PreimageOracle
  endpoint:
    path: /0x92240135b46fc1142dA181f550aE8f595B858854
    method: GET
    data_selector: address
    params: {}
- name: ProtocolVersionsProxy
  endpoint:
    path: /0x01DBC9aBe8e59f021d47Cf79143DE830820CbA29
    method: GET
    data_selector: address
    params: {}
- name: ProxyAdmin
  endpoint:
    path: /0x3a987FE1cb587B0A1808cf9bB7Cbe0E341838319
    method: GET
    data_selector: address
    params: {}
- name: SafeProxyFactory
  endpoint:
    path: /0xa6B71E26C5e0845f74c812102Ca7114b6a896AB2
    method: GET
    data_selector: address
    params: {}
- name: SuperchainConfigProxy
  endpoint:
    path: /0xC2Be75506d5724086DEB7245bd260Cc9753911Be
    method: GET
    data_selector: address
    params: {}
- name: SystemConfigProxy
  endpoint:
    path: /0x166F9406e79A656f12F05247fb8F5DfA6155bCBF
    method: GET
    data_selector: address
    params: {}
- name: Superchain Bridges
  endpoint:
    path: /world-chain/superchain-bridges
    method: GET
    data_selector: bridges
- name: Superbridge Core
  endpoint:
    path: /world-chain/superbridge-core
    method: GET
    data_selector: core
- name: Alchemy Bridge
  endpoint:
    path: /world-chain/alchemy-bridge
    method: GET
    data_selector: alchemy
- name: Across
  endpoint:
    path: /world-chain/across
    method: GET
    data_selector: across
- name: Brid.gg
  endpoint:
    path: /world-chain/brid-gg
    method: GET
    data_selector: bridgg
- name: Synapse
  endpoint:
    path: /world-chain/synapse
    method: GET
    data_selector: synapse
- name: Hyperlane
  endpoint:
    path: /world-chain/hyperlane
    method: GET
    data_selector: hyperlane
- name: LayerZero
  endpoint:
    path: /world-chain/layerzero
    method: GET
    data_selector: layerzero
- name: Chainlink CCIP
  endpoint:
    path: /world-chain/chainlink-ccip
    method: GET
    data_selector: ccip
- name: Thirdweb Universal Bridge
  endpoint:
    path: /world-chain/thirdweb-universal-bridge
    method: GET
    data_selector: thirdweb
- name: Blockscout
  endpoint:
    path: /
    method: GET
- name: Dora
  endpoint:
    path: /network/worldchain/interactions
    method: GET
- name: Worldscan
  endpoint:
    path: /
    method: GET
- name: paymasters
  endpoint:
    path: /paymasters
    method: GET
    data_selector: data
    params: {}
- name: Ramp Network
  endpoint:
    path: /ramp-network
    method: GET
- name: Alfred Pay
  endpoint:
    path: /alfred-pay
    method: GET
- name: Moonpay
  endpoint:
    path: /moonpay
    method: GET
- name: WLD
  endpoint:
    path: /address/0x2cfc85d8e48f8eab294be644d9e25c3030863003
    method: GET
    data_selector: contract
- name: WBTC
  endpoint:
    path: /address/0x03c7054bcb39f7b2e5b2c7acb37583e32d70cfa3
    method: GET
    data_selector: contract
- name: SDAI
  endpoint:
    path: /address/0x859dbe24b90c9f2f7742083d3cf59ca41f55be5d
    method: GET
    data_selector: contract
- name: WETH
  endpoint:
    path: /address/0x4200000000000000000000000000000000000006
    method: GET
    data_selector: contract
- name: USDC
  endpoint:
    path: /address/0x79A02482A880bCE3F13e09Da970dC34db4CD24d1
    method: GET
    data_selector: contract
- name: L1 OpUSDCBridgeAdapter
  endpoint:
    path: /address/0x153A69e4bb6fEDBbAaF463CB982416316c84B2dB
    method: GET
    data_selector: contract
- name: network
  endpoint:
    path: /worldchain
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: USDC
  endpoint:
    path: /contracts/USDC
    method: GET
    data_selector: contract
    params: {}
- name: verify
  endpoint:
    path: /api/verify
    method: POST
- name: verify
  endpoint:
    path: /api/verify
    method: POST
    data_selector: response
    params: {}
- name: verify_proof
  endpoint:
    path: /verify/{app_id}
    method: POST
    data_selector: null
    params: {}
- name: verifyProof
  endpoint:
    path: /verifyProof
    method: POST
- name: IDKitWidget
  endpoint:
    path: /idkitwidget
    method: GET
    data_selector: records
    params: {}
- name: IDKitSession
  endpoint:
    path: /idkitsession
    method: GET
    data_selector: records
    params: {}
- name: user_info
  endpoint:
    path: /userinfo
    method: POST
    data_selector: ''
    params: {}
- name: verifyProof
  endpoint:
    path: /world-id/reference/contracts/verifyProof
    method: POST
    data_selector: arguments
    params: {}
- name: World ID Router
  endpoint:
    path: /world-id/router
    method: GET
    data_selector: contract_info
    params: {}
- name: Identity Manager
  endpoint:
    path: /world-id/identity-manager
    method: GET
    data_selector: contract_info
    params: {}
notes:
- This endpoint is now on version 2. The previous version at /api/v1/verify/{app_id}
  will be unavailable after June 30, 2024.
- Enter your app id in the text box below and scan the QR code generated with your
  phone’s camera.
- Apps will be rejected unless they follow guidelines
- Using NextAuth you can easily create and manage sessions for your app.
- Starting from World App 2.8.79 and higher, we support the standard SIWE verification
  library.
- Users can manipulate information in the frontend, so the proof must be verified
  in a trusted environment.
- Payments are not available in Indonesia and Philippines.
- World App sponsors the gas fee, there is a minimum transfer amount of $0.1 for all
  tokens.
- Wallet Auth should be used as the primary authentication method for mini apps. Do
  not use the Verify command for user login purposes.
- Gas fees are covered on World Chain; however, there is a limit of 300 transactions
  per user per day.
- Sequential execution is not enforced for miniapp transactions.
- On Worldchain, only custom typed data is permitted.
- SafeTx and Permit/Permit2 types are not allowed.
- This command will be available from v1.4.0 of minikit and v2.8.72 of World App.
- Share command allows users to share content, files, and links through communication
  apps.
- On Android, it uses the native share sheet; on iOS, it uses the native web share
  sheet.
- Notifications should be purely functional, not marketing-related.
- Notifications must be directly related to the mini app.
- Notifications are queued on our servers, users may not receive them immediately.
- Currently have a limit of 40 notifications per 4 hours for unverified apps.
- Verify a World ID proof for a Cloud action
- The wallet_address must be exactly 42 characters long.
- Both Apple Pay and Google Pay run directly in the WebView environment of your mini-app,
  using their respective JavaScript APIs.
- 'Platform Restrictions: Apple Pay only works on iOS/macOS devices with Safari, while
  Google Pay is primarily for Android.'
- Microphone uses the standard web api Navigator.mediaDevices.
- The microphone will automatically be turned off if the user closes your mini app
  or World App.
- Uses OAuth2 with refresh token — requires setup of connected app in World
- Some API calls may have rate limits
- 'Universal-link format: https://world.org/mini-app?app_id={app_id}&path={path}'
- 'Deep-link format: worldapp://mini-app?app_id={app_id}&path={path}'
- Track only what answers critical product questions—nothing more.
- Mini apps are inherently accessed via mobile, so your application UI should look
  and feel like a mobile app.
- For mini apps, 2-3 seconds max for initial load and under 1 second for subsequent
  actions should be your target.
- Quick Actions allow linking between mini apps.
- Crack your egg daily to earn reward
- Eggs Vault now supports a Quick Action to deeplink directly the smash screen to
  never miss your daily eggs.
- Ensure that the amount is specified in the unit of the fromToken (e.g., wei for
  Ethereum-based tokens).
- The sourceDeeplinkPath is URL-encoded to ensure it is correctly interpreted when
  the deeplink is accessed.
- The username must be a valid World ID username.
- Only one quick action type (message, pay, or request) can be used at a time.
- If the recipient does not exist, the app will show an appropriate error message.
- Only USDC & WLD are supported for payments.
- Currency amounts should be specified as decimal numbers (e.g., 5.25 for 5.25 USDC).
- Find businesses accepting World cryptocurrency as payment
- This document is subject to change, and as it changes applications may need to change
  with it.
- If you wish to call a command on open include the command inside the same `useEffect`
  hook you use to install MiniKit.
- Access to the camera and file system is possible if the user grants permission.
- Location is supported on both platforms.
- Requires setup of connected app in API
- Is anything missing in the documentation? Please reach out on our Telegram for World
  Chain developers
- Make sure that whatever assets you are bridging to and from World Chain are always
  supported by your wallet and the exchange you are using.
- Depositing an unsupported asset on an unsupported chain to an unsupported wallet
  or exchange will result in loss of funds.
- Gas Limit is 30M
- Gas Target is 15M
- Block Time is 2s
- Deploying contracts requires funding a wallet with World Chain Sepolia ETH.
- Requires setup of World ID router contract
- Use the Worldcoin Developer Portal to obtain app and action IDs
- L1 fee fluctuates depending on the volume of transactions on the L1.
- You can save on costs by submitting during periods of lower gas fees on the L1.
- World Chain is EVM-equivalent because it utilizes the OP Stack, a modular framework
  developed by Optimism.
- Ensure you have installed Docker and Docker Compose.
- Access Grafana dashboard at http://localhost:3000 with username 'admin' and password
  'worldchain'.
- This script uses World Chain Sepolia testnet, not mainnet
- The call to the Developer Portal API must be made server-side to avoid man in the
  middle attacks.
- You must verify all proofs on your backend. Never trust client-side verification
  alone.
- Store nullifier_hash to prevent proof reuse.
- Match action and signal values between frontend and backend.
- Make sure you handle the deeplink correctly when the user gets redirected back to
  the app.
- On-chain verification will succeed for 7 days after a proof is created.
- QR code is dynamically generated and time-limited. Always ensure it’s up to date.
- Modal should be keyboard-navigable and screen-reader friendly
- Self-hosted applications bypass the Worldcoin Developer Portal entirely.
- No actions can be taken on behalf of a user with OAuth2 access tokens.
- Typically an access token would allow you to perform certain actions on a user’s
  behalf, but there are no actions to perform for a user in this case.
- Only the Orb verification level is supported on-chain, so your groupId should always
  be 1.
errors:
- '400 Bad Request: The proof was invalid or the user has already verified for this
  action.'
- '404 Not Found: The requested resource was not found.'
- 'status: 400: Usually these errors are due to a user having already verified.'
- 'Transaction not found: Check the reference ID.'
- 'simulation_failed: Check transaction parameters'
- 'REQUEST_LIMIT_EXCEEDED: Limit of 300 transactions exceeded'
- '401 Unauthorized: Invalid app_id or missing credentials'
- 'user_rejected: The user rejected the request'
- 'generic_error: An unknown error occurred'
- 'user_rejected: User declined permission request'
- 'generic_error: Request failed for unknown reason'
- 'already_requested: User has already declined turning on notifications once'
- 'permission_disabled: User has notification disabled for World App'
- 'already_granted: User has already granted this mini app permission'
- 'unsupported_permission: Permission is not supported yet'
- 'world_app_permission_not_enabled: User has not granted permission to World App'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '200: Verified'
- '400: Bad Request'
- '400 Bad Request: Check your request parameters'
- '404 Not Found: Ensure the transaction_id is correct'
- '500 Internal Server Error: Try again later'
- 'verification_rejected: User rejected the World ID request in World App. If this
  was a mistake, trigger the verify command again.'
- 'max_verifications_reached: This person has already verified for this particular
  action the maximum number of times allowed. Nothing to do. User cannot verify for
  this action again.'
- 'credential_unavailable: This user does not have the requested credential. The user
  must verify at the Orb or verify their unique device in World App to receive the
  credential required.'
- 'malformed_request: The request payload couldn’t be decrypted or did not conform
  to the standard. Ensure MiniKit is configured properly and all parameters are valid.'
- 'invalid_network: The application is configured for a different environment than
  the verifying user’s client. Ensure you use the Worldcoin Simulator for Staging
  applications and World App for Production applications.'
- 'inclusion_proof_failed: The sequencer returned an unexpected error when retrieving
  the inclusion proof. Ask the user to try again. This may be due to a temporary network
  issue, or a bug with World App or the Signup Sequencer.'
- 'inclusion_proof_pending: The user might have the requested credential, but it is
  not available on-chain yet. It might be available for API verification. Ask the
  user to verify again in approximately one hour.'
- 'unexpected_response: There was a problem with the response obtained from the WLD
  app. Try again, though in most cases these will require contacting us to report
  the bug.'
- 'generic_error: An unhandled exception occurred. Try again, though in most cases
  these will require contacting us to report the bug.'
- 'input_error: There was a problem with this request. Please try again or contact
  the app owner. Ensure the request is properly formed and try again.'
- 'payment_rejected: You’ve cancelled the payment in World App. If this was a mistake,
  initiate the payment again.'
- 'invalid_receiver: The receiver address is invalid. Please contact the app owner.
  You don’t have this address whitelisted inside the Developer Portal.'
- 'insufficient_balance: You do not have enough balance to complete this transaction.
  Add more funds to your wallet'
- 'transaction_failed: The transaction failed. Please try again. Try the transaction
  again. Something failed on-chain.'
- 'malformed_request: Provided parameters in the request are invalid. Ensure the request
  is properly formed and try again. If the problem persists, contact the app owner.'
- 'user_rejected: User rejected the request. If this was a mistake, initiate the request
  again.'
- 'invalid_operation: Transaction included an operation that was invalid. Your app
  tried using a disallowed operation. These include approve, setAllowance, setApprovalForAll,
  or setApprovalForAll.'
- 'invalid_contract: App must whitelist the contract you’re calling in the Developer
  Portal. Go to the Developer Portal and whitelist the contract you’re calling.'
- 'simulation_failed: Simulation provider transaction simulation failed (this can
  include insufficient balance). Txn simulation failed see the debugUrl returned to
  understand why.'
- 'daily_tx_limit_reached: Daily transaction limit reached. Max 100 transactions per
  day. Wait until the next day.'
- 'disallowed_operation: Transaction included an operation that was disallowed. Make
  sure you are not calling functions on the user’s safe, doing approvals, calling
  safe admin functions, etc.'
- 'permitted_amount_exceeds_slippage: Permitted amount exceeds slippage. You must
  spend at least 90% of the permitted amount.'
- 'permitted_amount_not_found: Permitted amount not found. Permitted amount not found
  in permit2 payload.'
- 'world_app_permission_not_enabled: Prompt the user to enable microphone for World
  App first.'
- 'permission_disabled: Prompt the user to enable microphone for World App first.'
- 'DomException Error: User hasn’t granted permission to your mini app to use the
  microphone.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'invalid_referrer: Referrer code is invalid'
- 'Insufficient funds: Ensure wallet is funded with World Chain Sepolia ETH.'
- 'Verification failed: IDKit will display the error message to the user in the modal.'
- '400: Usually these errors are due to a user having already verified.'
- '400: Invalid proof'
- '400: Verification failed'
- '500: Verification error'
- 'invalid_proof: The provided proof is invalid and it cannot be verified. Please
  check all inputs and try again.'
- 'method_not_allowed: HTTP method is not allowed. Only GET and OPTIONS may be used'
- 'unauthenticated: The authorization header is missing, please pass the Bearer authorization
  token'
- 'invalid_token: The authorization token was invalid, and may be expired. Try generating
  a new token via /token'
- 'failed_by_host_app: An error was thrown in the handleVerify callback. Assess the
  error thrown in your handleVerify callback and resolve the issue.'
- 'connection_failed: Could not establish a connection to World App. Ask the user
  to check their internet connection on both devices running your application and
  World App. Additionally, make sure the user has the latest version of World App.'
- 'verification_rejected: User rejected the World ID request in World App. If this
  was a mistake, ask the user to go through the flow again.'
- 'malformed_request: The request payload couldn’t be decrypted or did not conform
  to the standard. Ensure IDKit is configured properly and all parameters are valid.
  See above for configuration details.'
- 'metadata_failed: Unable to load metadata for the app from the Developer Portal.
  Ensure your app_id is configured correctly in IDKit and exactly matches the app_id
  from the Developer Portal.'
- 'unexpected_response: There was a problem with the response obtained from the WLD
  app. Check the JS console for further details, though in most cases these will require
  contacting us to report the bug.'
- 'generic_error: An unhandled exception occurred. Check the JS console for further
  details, though in most cases these will require contacting us to report the bug.'
auth_info:
  mentioned_objects:
  - access_token
client:
  base_url: https://developer.worldcoin.org
  headers:
    Content-Type: application/json
    User-Agent: ''
source_metadata: null
