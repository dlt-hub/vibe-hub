resources:
- name: ai_overview
  endpoint:
    path: /google/ai_overview
    method: GET
    data_selector: results
    params:
      api_key: required
      url: required
- name: ai_overview
  endpoint:
    path: /google/ai_overview/
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      url: ai_overview_url
- name: search_query
  endpoint:
    params:
      url: required
- name: scrape
  endpoint:
    path: /scrape
    method: GET
    data_selector: response
    params:
      api_key: required
      url: required
- name: scrape
  endpoint:
    path: /scrape
    method: GET
    data_selector: origin
    params:
      api_key: 5e5a97e5b1ca5b194f42da86
      url: http://httpbin.org/ip
      dynamic: 'false'
- name: request_customization
  endpoint:
    path: /web-scraping-api/request-customization
    method: GET
    data_selector: parameters
    params: {}
- name: Javascript Rendering
  endpoint:
    path: /web-scraping-api/request-customization/javascript-rendering
    method: GET
- name: scrape
  endpoint:
    path: /scrape
    method: GET
    data_selector: response
    params:
      api_key: 5e5a97e5b1ca5b194f42da86
      url: http://httpbin.org/ip
- name: scrape
  endpoint:
    path: /scrape
    method: GET
    data_selector: response
    params:
      api_key: 5e5a97e5b1ca5b194f42da86d646
      premium: 'true'
- name: geotargeting
  endpoint:
    params:
      country: ISO codes
- name: scrape
  endpoint:
    path: /scrape
    method: GET
    data_selector: response
    params:
      api_key: 3e3a09b6ecde9f83856906c5e27dd646
      url: http://httpbin.org/ip
      country: us
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: session_data
    params:
      session_number: integer
- name: scrape
  endpoint:
    path: /scrape
    method: GET
    data_selector: null
    params:
      api_key: 5e3a0e5a97e5b1ca5b194f42da86
      url: http://httpbin.org/ip
      session_number: '666'
- name: scrape
  endpoint:
    path: /scrape
    method: POST
    data_selector: response
    params: {}
- name: scrape_results
  endpoint:
    path: /google
    method: GET
    data_selector: results
- name: google_search
  endpoint:
    path: ''
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: football
      results: '10'
      country: us
      page: '0'
- name: google_search
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: your_api_key
      query: your_search_query
      results: '10'
      country: us
      page: '0'
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: articles
    params: {}
- name: scores
  endpoint:
    path: /scores
    method: GET
    data_selector: games
    params: {}
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedule
    params: {}
- name: google_lr_languages
  endpoint:
    path: /google
    method: GET
    data_selector: languages
- name: ai_mode
  endpoint:
    path: /google/ai_mode
    method: GET
    data_selector: results
- name: scraping
  endpoint:
    path: /google/ai_mode/
    method: GET
    data_selector: results
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: scrapingdog
- name: search_query
  endpoint:
    path: /search
    method: GET
    params:
      query: ''
      country: us
      html: 'false'
- name: google_maps
  endpoint:
    path: /google_maps
    method: GET
    data_selector: data
    params: {}
- name: google_maps
  endpoint:
    path: /google_maps
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      ll: optional
- name: posts
  endpoint:
    path: /google_maps/posts
    method: GET
    data_selector: results
    params:
      api_key: required
      data_id: required
      next_page_token: optional
- name: posts
  endpoint:
    path: /google_maps/posts
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      data_id: 0x88371272500ebf33:0x70a094fd98fb45c0
- name: post_results
  endpoint:
    path: /place/photo
    method: GET
    data_selector: post_data
    params:
      api_key: required
      data_id: required
      next_page_token: optional
- name: photos
  endpoint:
    path: /google_maps/photos
    method: GET
    data_selector: results
    params:
      api_key: required
      data_id: required
      language: en
      category_id: optional
      next_page_token: optional
- name: photos
  endpoint:
    path: /google_maps/photos
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      data_id: 0x88371272500ebf33:0x70a094fd98fb45c0
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: photos
    params:
      api_key: required
      data_id: required
      language: en
      category_id: String
      next_page_token: String
- name: reviews
  endpoint:
    path: /google_maps/reviews
    method: GET
    data_selector: results
    params: {}
- name: reviews
  endpoint:
    path: /reviews
    method: GET
    data_selector: data
    params:
      api_key: api_key
      data_id: data_id
- name: reviews
  endpoint:
    path: /google_maps/reviews
    method: GET
    data_selector: results
    params:
      api_key: required
      data_id: required
      language: en
      sort_by: qualityScore
      results: '10'
- name: reviews
  endpoint:
    path: /
    method: GET
    data_selector: reviews
- name: results
  endpoint:
    params:
      api_key: required
      data_id: required
      language: en
      sort_by: qualityScore
      topic_id: optional
      next_page_token: optional
      results: '10'
- name: places
  endpoint:
    path: /places
    method: GET
- name: places
  endpoint:
    path: /google_maps/places
    method: GET
    params:
      api_key: your_personal_api_key
      place_id: ChIJT2h1HKZZwokR0kgzEtsa03k
      type: place
- name: place_results
  endpoint:
    path: /places
    method: GET
    data_selector: place_results
    params:
      api_key: required
      place_id: optional
- name: google_trends
  endpoint:
    path: /google_trends
    method: GET
    data_selector: data
    params:
      api_key: required
      query: string
      language: en
      geo: string
      region: string
      data_type: string
      tz: '420'
      cat: '0'
      gprop: string
      date: string
- name: google_trends
  endpoint:
    path: /google_trends
    method: GET
    data_selector: null
    params:
      api_key: required
      query: parameter
      language: null
      geo: null
      region: null
      data_type: null
      tz: null
      cat: null
      gprop: null
      date: null
- name: interest_over_time
  endpoint:
    path: /interestOverTime
    method: GET
    data_selector: interest_over_time
- name: google_trends
  endpoint:
    path: /google_trends
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: pizza,burger
      data_type: TIMESERIES
- name: autocomplete
  endpoint:
    path: /google_trends/autocomplete
    method: GET
    data_selector: results
    params:
      api_key: required
      query: string
      language: en
- name: autocomplete
  endpoint:
    path: /
    method: GET
    data_selector: suggestions
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: football
- name: trending_now
  endpoint:
    path: /google_trends/trending_now
    method: GET
- name: trending_now
  endpoint:
    path: /
    method: GET
    data_selector: trending_searches
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      geo: US
- name: search_query
  endpoint:
    params:
      api_key: required
      geo: required
      hours: optional
      language: optional
- name: google_images
  endpoint:
    path: /google_images
    method: GET
- name: google_images
  endpoint:
    path: /google_images
    method: GET
    data_selector: results
    params:
      api_key: api_key
      query: query
      country: us
- name: google_images
  endpoint:
    path: /google_images
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      country: us
- name: google_news
  endpoint:
    path: /
    method: GET
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: football
      results: 10
      country: us
- name: image_search
  endpoint:
    path: /google-images
    method: GET
    data_selector: images_results
    params:
      query: query
      html: false
      domain: google.com
      country: us
      language: en
      safe: 'off'
      page: '0'
- name: google_news
  endpoint:
    path: /google_news
    method: GET
    data_selector: results
    params: {}
- name: google_news
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: required
      query: required
      results: '10'
      country: us
- name: google_news
  endpoint:
    path: /google_news
    method: GET
    params:
      api_key: required
      query: required
      results: '10'
      country: us
      page: '0'
      domain: google.com
      language: en
      safe: 'off'
      html: 'false'
- name: news_results
  endpoint:
    path: /
    method: GET
    data_selector: news_results
    params:
      query: your_query
      country: us
      page: '0'
- name: google_news
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: api_key
      query: query
      country: country
- name: news_results
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: YOUR_API_KEY
      query: QUERY
      country: us
- name: news_article
  endpoint:
    path: /news/articles
    method: GET
    data_selector: articles
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: articles
    params: {}
- name: search_query
  endpoint:
    params:
      query: ''
      country: us
      language: en
- name: google_shopping
  endpoint:
    path: /google_shopping
    method: GET
    data_selector: results
- name: google_search
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: shoes
      country: in
- name: google_shopping
  endpoint:
    path: /google_shopping
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      country: us
      page: '0'
      domain: google.com
      language: en
      safe: 'off'
      nfpr: '0'
      html: 'false'
- name: search_results
  endpoint:
    path: /search
    method: GET
    data_selector: items
    params:
      query: shoes
      country: us
      page: '0'
      domain: google.com
      language: en
      safe: 'off'
      nfpr: '0'
- name: google_product
  endpoint:
    path: /google_product
    method: GET
    data_selector: results
    params: {}
- name: google_product
  endpoint:
    path: /google_product
    method: GET
    data_selector: data
    params:
      api_key: api_key
      product_id: product_id
      country: us
- name: google_product
  endpoint:
    path: /google_product
    method: GET
    data_selector: results
    params:
      api_key: required
      product_id: required
      country: us
      page: '0'
- name: product_results
  endpoint:
    params:
      api_key: required
      product_id: required
      country: us
      page: '0'
- name: google_product
  endpoint:
    path: /google_product
    method: GET
    data_selector: results
    params:
      api_key: required
      page_token: required
- name: google_immersive_product
  endpoint:
    path: /google_immersive_product
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
- name: google_immersive_product
  endpoint:
    path: /google_immersive_product
    method: GET
    data_selector: ''
    params:
      api_key: required
      page_token: required
- name: google_videos
  endpoint:
    path: /google_videos
    method: GET
    params:
      api_key: required
      query: required
      country: us
      page: '0'
      domain: google.com
      language: en
      safe: 'off'
      nfpr: '0'
      html: 'false'
- name: google_videos
  endpoint:
    path: /google_videos
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      country: us
      page: '0'
      domain: google.com
      language: en
      safe: 'off'
      nfpr: '0'
      html: 'false'
- name: google_videos
  endpoint:
    path: /google_videos/
    method: GET
    data_selector: video_results
    params:
      query: football
      country: us
- name: google_shorts
  endpoint:
    path: /google_shorts
    method: GET
    data_selector: ''
    params: {}
- name: google_shorts
  endpoint:
    path: /google_shorts
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: football
      country: us
- name: short_videos_results
  endpoint:
    path: /
    method: GET
    data_selector: short_videos_results
- name: search_results
  endpoint:
    path: /search
    method: GET
    params:
      query: required
      api_key: required
      domain: google.com
      country: us
      language: en
      safe: 'off'
      nfpr: '0'
- name: autocomplete
  endpoint:
    path: /google_autocomplete
    method: GET
    data_selector: results
    params:
      query: ''
      country: us
      language: en
- name: autocomplete
  endpoint:
    path: /
    method: GET
    data_selector: suggestions
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: football
      country: us
- name: search
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      api_key: your_api_key
      query: search_query
      results: number_of_results
      country: country_code
- name: search
  endpoint:
    path: /google_scholar
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
- name: related_searches
  endpoint:
    path: /scholar
    method: GET
    data_selector: related_searches
    params: {}
- name: scholar_results
  endpoint:
    path: /scholar/results
    method: GET
    data_selector: scholar_results
    params: {}
- name: search
  endpoint:
    params:
      query: required
      api_key: required
- name: profiles
  endpoint:
    path: /google_scholar/profiles
    method: GET
    data_selector: results
    params:
      api_key: YOUR_API_KEY
      mauthors: AUTHOR_NAME
      after_author: TOKEN
      before_author: TOKEN
- name: profiles
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      mauthors: Mike
- name: profiles
  endpoint:
    path: /google_scholar/profiles
    method: GET
    data_selector: data
- name: profiles
  endpoint:
    path: /google_scholar/profiles
    method: GET
    params:
      api_key: APIKEY
      mauthors: Mike
- name: author
  endpoint:
    path: /author
    method: GET
    data_selector: results
    params:
      api_key: Your personal API key
      author_id: Author ID of the person you want to get data for
      results: Number of results per page
      language: en
      view_op: view_citation or list_colleagues
      sort: title or pubdate
      citation_id: Citation ID if view_op=view_citation
- name: author
  endpoint:
    path: /google_scholar/author
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      author_id: LSsXyncAAAAJ
- name: articles
  endpoint:
    params:
      api_key: required
      author_id: required
      results: Number(Integer)
      language: String
      view_op: String
      sort: String
      citation_id: String
- name: citation
  endpoint:
    path: /google_scholar/author
    method: GET
    data_selector: citation
    params:
      citation_id: required
      view_op: required
- name: author_citation
  endpoint:
    path: /google_scholar/author
    method: GET
    data_selector: data
    params:
      citation_id: LSsXyncAAAAJ:2osOgNQ5qMEC
      view_op: view_citation
- name: citations
  endpoint:
    path: /google_scholar
    method: GET
    data_selector: citations
    params:
      citation_id: required
      view_op: required
- name: cite
  endpoint:
    path: /google_scholar/cite
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      language: en
- name: cite
  endpoint:
    path: /google_scholar/cite
    method: GET
    data_selector: data
    params:
      api_key: YOUR_API_KEY
      query: FDc6HiktlqEJ
- name: citations
  endpoint:
    path: /citations
    method: GET
    data_selector: citations
- name: google_finance
  endpoint:
    path: /google_finance
    method: GET
    params:
      api_key: required
      query: required
      language: en
      html: 'false'
- name: google_finance
  endpoint:
    path: /google_finance
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: NIFTY_50:INDEXNSE
- name: US
  endpoint:
    path: /market/US
    method: GET
    data_selector: market.US
- name: Europe
  endpoint:
    path: /market/Europe
    method: GET
    data_selector: market.Europe
- name: Asia
  endpoint:
    path: /market/Asia
    method: GET
    data_selector: market.Asia
- name: Currencies
  endpoint:
    path: /market/Currencies
    method: GET
    data_selector: market.Currencies
- name: Crypto
  endpoint:
    path: /market/Crypto
    method: GET
    data_selector: market.Crypto
- name: Futures
  endpoint:
    path: /market/Futures
    method: GET
    data_selector: market.Futures
- name: stock_search
  endpoint:
    params:
      api_key: required
      query: required
      language: en
      html: 'false'
- name: google_lens
  endpoint:
    path: /google_lens
    method: GET
    params:
      api_key: ''
      url: ''
      country: us
      product: 'false'
      visual_matches: 'false'
      exact_matches: 'false'
- name: google_lens
  endpoint:
    path: /google_lens
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      url: https://lens.google.com/uploadbyurl?url=https://i.imgur.com/HBrB8p0.png
- name: google_lens
  endpoint:
    path: /google_lens
    method: GET
    params:
      api_key: api_key
      url: url
- name: google_jobs
  endpoint:
    path: /google_jobs
    method: GET
    params:
      api_key: required
      query: required
      country:
        default: us
      language:
        default: en_us
      next_page_token:
        location: scrapingdog_pagination-> next_page_token
- name: google_jobs
  endpoint:
    path: /google_jobs
    method: GET
    params:
      api_key: required
      query: required
      country: us
      language: en_us
      next_page_token: optional
      chips: optional
      lrad: optional
      ltype: optional
      uds: optional
- name: Barista | London
  endpoint:
    path: /jobs/barista-london
    method: GET
    data_selector: records
- name: Events & Digital Content Officer
  endpoint:
    path: /jobs/events-and-digital-content-officer
    method: GET
    data_selector: records
- name: Runner - Summer Project - London
  endpoint:
    path: /jobs/runner-summer-project-london
    method: GET
    data_selector: records
- name: Food Runner
  endpoint:
    path: /jobs/food-runner
    method: GET
    data_selector: records
- name: google_jobs
  endpoint:
    path: /google_jobs
    method: GET
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: jobs+in+london
- name: google_local
  endpoint:
    path: /google_local
    method: GET
    params:
      api_key: required
      query: required
      location: null
      uule: null
      country: us
      language: en
      domain: google.com
      ludocid: null
      tbs: null
      page: '0'
- name: google_local
  endpoint:
    path: /google_local
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      location: ''
      uule: ''
      country: us
      language: en
      domain: google.com
      ludocid: ''
      tbs: ''
      page: '0'
- name: google_local
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: coffee+in+manhattan
- name: google_patent
  endpoint:
    path: /google_patent
    method: GET
    data_selector: results
- name: google_patents
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      query: seat+belt
- name: google_patents
  endpoint:
    path: /google_patents
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
- name: patent_details
  endpoint:
    path: /details
    method: GET
    data_selector: organic_results
    params:
      api_key: YOUR_API_KEY_HERE
- name: patent_details
  endpoint:
    path: /google_patents/details
    method: GET
    params:
      api_key: required
      html: 'false'
      patent_id: required
      language: en
- name: patent_details
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      patent_id: US11734097B1
- name: google_hotels
  endpoint:
    path: /google_hotels
    method: GET
    data_selector: results
- name: google_hotels
  endpoint:
    path: /google_hotels
    method: GET
    data_selector: data
    params:
      api_key: api_key
      query: query
      check_in_date: check_in_date
      check_out_date: check_out_date
- name: hotels
  endpoint:
    path: /google_hotels
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      check_in_date: required
      check_out_date: required
- name: ads
  endpoint:
    path: /ads
    method: GET
    data_selector: ads
    params: {}
- name: brands
  endpoint:
    path: /brands
    method: GET
    data_selector: brands
    params: {}
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: properties
    params: {}
- name: supported_property_types
  endpoint:
    path: /google-hotels-api/supported-google-hotels-property-types
    method: GET
    data_selector: property_types
    params: {}
- name: supported_google_vacation_rentals_property_types
  endpoint:
    path: /google-hotels-api/supported-google-vacation-rentals-property-types
    method: GET
    data_selector: property_types
    params: {}
- name: supported_amenities
  endpoint:
    path: /google-hotels-api/supported-google-hotels-amenities
    method: GET
    data_selector: amenities
    params: {}
- name: bing_search
  endpoint:
    path: /bing/search
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
      cc: optional
- name: bing_search
  endpoint:
    path: /bing/search
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
- name: bing_data
  endpoint:
    path: /
    method: GET
    data_selector: bing_data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: what+is+api
      cc: us
- name: search
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      api_key: required
      query: required
- name: organic_results
  endpoint:
    path: /search
    method: GET
    data_selector: organic_results
    params:
      query: required
- name: duckduckgo_search
  endpoint:
    path: /duckduckgo/search
    method: GET
    data_selector: results
    params:
      query: coffee
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      api_key: required
      query: search query
      country: us
      language: en
- name: search
  endpoint:
    path: /search/
    method: GET
    data_selector: organic_results
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      query: football
- name: amazon_product
  endpoint:
    path: /amazon-scraper-api/amazon-product-scraper
    method: GET
    data_selector: product_data
- name: amazon_search
  endpoint:
    path: /amazon-scraper-api/amazon-search-scraper
    method: GET
    data_selector: search_results
- name: amazon_reviews
  endpoint:
    path: /amazon-scraper-api/amazon-reviews-api
    method: GET
    data_selector: reviews_data
- name: amazon_autocomplete
  endpoint:
    path: /amazon-scraper-api/amazon-autocomplete-scraper
    method: GET
    data_selector: autocomplete_results
- name: product
  endpoint:
    path: /amazon/product
    method: GET
- name: product
  endpoint:
    path: /amazon/product
    method: GET
    data_selector: data
    params:
      api_key: your_api_key
      domain: com
      asin: your_asin
- name: search_results
  endpoint:
    path: /amazon/search
    method: GET
    data_selector: results
    params: {}
- name: search
  endpoint:
    path: /amazon/search
    method: GET
    data_selector: data
    params:
      api_key: your_personal_api_key
      domain: com
      query: spoon
      page: '1'
      country: us
- name: api_request
  endpoint:
    params:
      api_key: required
      domain: required
      query: required
      page: required
      country: required
      postal_code: optional
      language: optional
      premium: optional
- name: reviews
  endpoint:
    path: /amazon/reviews
    method: GET
    data_selector: reviews
    params:
      api_key: required
      domain: required
      asin: required
      page: required
- name: autocomplete
  endpoint:
    path: /amazon/autocomplete
    method: GET
    data_selector: null
    params:
      api_key: your_personal_api_key
      prefix: string
      last_prefix: string
      mid: string
      suffix: string
- name: autocomplete
  endpoint:
    path: /amazon/autocomplete
    method: GET
    data_selector: ''
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      prefix: spoon
- name: profile_information
  endpoint:
    path: /instagram/profile
    method: GET
    data_selector: data
- name: profile
  endpoint:
    path: /instagram/profile
    method: GET
    data_selector: results
    params:
      api_key: required
      username: required
- name: instagram_profile
  endpoint:
    path: /instagram/profile
    method: GET
    data_selector: json
    params:
      api_key: required
      username: required
- name: instagram_profile
  endpoint:
    path: /instagram/profile
    method: GET
    data_selector: ''
    params:
      api_key: required
      username: required
- name: user_profile
  endpoint:
    path: /v1/users/self
    method: GET
    data_selector: data
    params: {}
- name: user_videos
  endpoint:
    path: /v1/users/self/media/recent
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: videos
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
    params: {}
- name: owner_to_timeline_media
  endpoint:
    path: /v1/users/self/media/recent
    method: GET
    data_selector: media
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /v1/media
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /instagram/posts
    method: GET
    data_selector: results
    params:
      api_key: required
      id: required
      next_page_token: optional
- name: posts
  endpoint:
    path: /instagram/posts
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      id: '13460080'
- name: posts
  endpoint:
    path: /v1/media
    method: GET
    data_selector: posts_data
    params:
      incremental: timestamp
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: data
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: data
    params: {}
- name: media
  endpoint:
    path: /v1/media
    method: GET
    data_selector: data
    params:
      incremental: timestamp
- name: posts
  endpoint:
    params:
      api_key: required
      id: required
      next_page_token: optional
- name: person_profile
  endpoint:
    path: /linkedin
    method: GET
    data_selector: profile_data
    params:
      api_key: your_api_key
      linkId: required
      type: profile
      premium: 'false'
- name: profile
  endpoint:
    path: ''
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      type: profile
      linkId: rbranson
- name: company_profile
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      api_key: your_api_key
      linkId: required
      type: company
- name: company
  endpoint:
    path: ''
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      type: company
- name: company_profile
  endpoint:
    path: /company_profile
    method: GET
    data_selector: company_name
    params: {}
- name: offices
  endpoint:
    path: /offices
    method: GET
    data_selector: offices
    params: {}
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: employees
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: updates
    params: {}
- name: linkedin_post
  endpoint:
    path: /linkedin/post
    method: GET
    data_selector: response
    params:
      api_key: required
      url: required
- name: post_results
  endpoint:
    path: /linkedin/post
    method: GET
    data_selector: post_results
    params:
      api_key: APIKEY
      url: https://www.linkedin.com/feed/update/urn:li:activity:6976499964512243712/
- name: Scrape Linkedin Jobs
  endpoint:
    path: /linkedin-jobs-scraper/scrape-linkedin-jobs
    method: GET
- name: Scrape LinkedIn Job Overview
  endpoint:
    path: /linkedin-jobs-scraper/scrape-linkedin-job-overview
    method: GET
- name: Scrape Linkedin Jobs
  endpoint:
    path: /linkedinjobs
    method: GET
- name: job_listings
  endpoint:
    path: ''
    method: GET
    data_selector: results
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      field: python
      geoid: '100293800'
      page: '1'
- name: job_postings
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
    params: {}
- name: linkedin_jobs
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      field: python
      geoid: '100293800'
      page: '1'
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: job_position
    params: {}
- name: job_listings
  endpoint:
    path: /jobs
    method: GET
    params:
      api_key: required
      field: required
      geoid: '92000000'
      location: optional
      page: '1'
      sort_by: optional
      job_type: optional
      exp_level: optional
      work_type: optional
      filter_by_company: optional
- name: LinkedIn Job Overview
  endpoint:
    path: /linkedinjobs
    method: GET
    data_selector: overview
    params:
      api_key: required
      job_id: required
- name: linkedinjobs
  endpoint:
    path: /linkedinjobs
    method: GET
    data_selector: response
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      job_id: '3539667535'
- name: job_overview
  endpoint:
    path: /jobs/overview
    method: GET
    data_selector: job_details
    params: {}
- name: yelp_search
  endpoint:
    path: /yelp
    method: GET
    data_selector: results
    params:
      api_key: required
      find_loc: required
      start: 0
- name: search
  endpoint:
    path: /yelp/search
    method: GET
    data_selector: results
    params:
      api_key: APIKEY
      find_desc: burger
      find_loc: San+Francisco,CA
- name: indeed_jobs
  endpoint:
    path: /indeed
    method: GET
    data_selector: ''
    params:
      api_key: required
      url: required
- name: job_search
  endpoint:
    path: /indeed
    method: GET
    data_selector: json
    params:
      api_key: your_api_key
      url: your_job_search_url
- name: job_search
  endpoint:
    path: /indeed
    method: GET
    data_selector: json_response
    params:
      api_key: your_personal_api_key
      url: your_indeed_url
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: titles
    params: {}
- name: zillow
  endpoint:
    path: /zillow
    method: GET
    data_selector: ''
    params:
      api_key: api_key
      url: url
- name: zillow_search
  endpoint:
    path: /zillow
    method: GET
    data_selector: response
    params:
      api_key: api_key
      url: url
- name: zillow
  endpoint:
    path: /zillow
    method: GET
    data_selector: json_response
    params:
      api_key: api_key
      url: url
- name: zillow_listings
  endpoint:
    path: /v1/zillow_listings
    method: GET
    data_selector: zillow_listings
    params:
      api_key: required
      url: required
- name: profile
  endpoint:
    path: /x/profile
    method: GET
    data_selector: data
    params:
      api_key: required
      profileId: required
- name: profile
  endpoint:
    path: /x/profile
    method: GET
    data_selector: user
    params: {}
- name: post
  endpoint:
    path: /x/post
    method: GET
    data_selector: parsed JSON data
    params:
      api_key: required
      tweetId: required
- name: tweet
  endpoint:
    path: /x/post
    method: GET
    data_selector: response
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      tweetId: '1655608985058267139'
- name: youtube_search
  endpoint:
    path: /youtube/search
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      query: search_query
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: published_date
- name: search_results
  endpoint:
    params:
      api_key: Your personal API key
      search_query: Your youtube query
      country: us
      language: en
- name: youtube_transcripts
  endpoint:
    path: /youtube/transcripts
    method: GET
    data_selector: results
    params:
      api_key: '{{ dlt.secrets[''api_key''] }}'
      country: us
      language: en
- name: transcripts
  endpoint:
    path: /youtube/transcripts/
    method: GET
    data_selector: transcripts
    params:
      api_key: APIKEY
      v: 0e3GPea1Tyg
      country: us
      language: en
- name: youtube_channel
  endpoint:
    path: /youtube-channel
    method: GET
    data_selector: results
    params:
      channel_id: required
      country: us
      language: en
- name: youtube_channel
  endpoint:
    path: /youtube/channel
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      channel_id: '@TaylorSwift'
- name: youtube_channel
  endpoint:
    path: /youtube/channel
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      channel_id: '@TaylorSwift'
- name: comments
  endpoint:
    path: /youtube-comment-api
    method: GET
    data_selector: comments
    params:
      v: video_id
      country: us
      language: en
- name: comments
  endpoint:
    path: /youtube/comments/
    method: GET
    data_selector: comments
    params:
      api_key: APIKEY
      v: 0e3GPea1Tyg
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: comments
  endpoint:
    path: /commentThreads
    method: GET
    data_selector: items
    params:
      incremental: published_date
- name: search_query
  endpoint:
    params:
      api_key: required
      v: required
      country:
        default_value: us
      language:
        default_value: en
      next_page_token: optional
- name: youtube_video
  endpoint:
    path: /youtube-video-api
    method: GET
    data_selector: results
    params:
      country: us
      language: en
      video_id: ''
- name: youtube_video
  endpoint:
    path: /youtube/video/
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      v: 0e3GPea1Tyg
- name: walmart_product
  endpoint:
    path: /walmart-product
    method: GET
- name: walmart_search
  endpoint:
    path: /walmart-search
    method: GET
- name: walmart_reviews
  endpoint:
    path: /walmart-reviews
    method: GET
- name: autocomplete
  endpoint:
    path: /walmart/autocomplete
    method: GET
    data_selector: suggestions
    params:
      api_key: required
      query: This is the Walmart search query.
- name: autocomplete
  endpoint:
    path: ''
    method: GET
    data_selector: queries
- name: product
  endpoint:
    path: /walmart/product
    method: GET
    params:
      api_key: required
      url: required
- name: product_results
  endpoint:
    path: /walmart/product
    method: GET
    data_selector: product_results
    params: {}
- name: reviews_results
  endpoint:
    path: /walmart/product
    method: GET
    data_selector: reviews_results
    params: {}
- name: walmart_search
  endpoint:
    path: /walmart/search
    method: GET
    data_selector: results
    params:
      api_key: required
      url: required
- name: search_results
  endpoint:
    path: /walmart/search
    method: GET
    data_selector: data
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
      url: https://www.walmart.com/search?q=football
- name: walmart_reviews
  endpoint:
    path: /walmart/reviews
    method: GET
    data_selector: records
    params:
      api_key: required
      url: required
- name: reviews
  endpoint:
    path: /walmart/reviews
    method: GET
    data_selector: product
    params:
      api_key: 5eaa61a6e562fc52fe763tr516e4653
- name: Baidu Search
  endpoint:
    path: /baidu-scraper-api/baidu-search-api
    method: GET
- name: baidu_search
  endpoint:
    path: /baidu/search/
    method: GET
    data_selector: ''
    params:
      api_key: api_key
      query: query
- name: baidu_search
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      api_key: your_api_key
      query: search_query
- name: Baidu_data
  endpoint:
    path: /baidu/scraper
    method: GET
    data_selector: Baidu_data
    params: {}
- name: Ebay Search API
  endpoint:
    path: /ebay-scraper-api/ebay-search-api
    method: GET
- name: ebay_search
  endpoint:
    path: /ebay/search
    method: GET
    params:
      api_key: required
      html: 'false'
      url: required
- name: facebook_profile
  endpoint:
    path: /facebook-scraper-api/facebook-profile-api
    method: GET
- name: facebook_posts
  endpoint:
    path: /facebook-scraper-api/facebook-posts-api
    method: GET
- name: facebook_ads
  endpoint:
    path: /facebook-scraper-api/facebook-ads-library
    method: GET
- name: facebook_profile
  endpoint:
    path: /facebook/profile
    method: GET
    data_selector: ''
    params:
      api_key: required
      username: required
- name: facebook_profile
  endpoint:
    path: /facebook/profile
    method: GET
    data_selector: json_response
    params:
      api_key: required
      username: required
- name: profile
  endpoint:
    path: /facebook/profile
    method: GET
    data_selector: json
    params:
      api_key: your_api_key
      username: instagram_username
- name: facebook_posts
  endpoint:
    path: /facebook/posts
    method: GET
    data_selector: posts
    params:
      id: required
      next_page_token: optional
- name: posts
  endpoint:
    path: /facebook/posts
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      id: '100044541544829'
- name: ads
  endpoint:
    path: /facebook/ads
    method: GET
    data_selector: results
- name: ads
  endpoint:
    path: /facebook/ads
    method: GET
    data_selector: data
    params:
      api_key: APIKEY
      query: nike+shoes
- name: ads
  endpoint:
    path: /ads
    method: GET
    data_selector: ads
- name: ad_archive
  endpoint:
    path: /ads_archive
    method: GET
    data_selector: data
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: screenshot
    params:
      api_key: required
      url: required
      fullPage: optional
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: response
    params:
      api_key: 6103077e467766765f5803ed2df7bc8
      url: https://www.scrapingdog.com
- name: webhook_integration
  endpoint:
    path: /webhook-integration
    method: POST
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    params:
      api_key: your_personal_api_key
      url: url_of_the_page_you_want_to_scrape
      dynamic: 'true'
      webhook_id: name_of_the_webhook
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: credits
    params: {}
notes:
- When choosing a solar panel, consider factors such as efficiency, power output,
  durability, warranty, and the manufacturer's reputation.
- By default, dynamic rendering is set to true.
- Cost of using dynamic parameter with normal proxies is 5 credits.
- Cost of using dynamic parameter with premium residential proxies is 25 credits.
- Cost of using premium parameter is 10 credits and 25 credits if used with JS rendering.
- By default, dynamic parameter is always set as true in our API.
- If you want to pass your own custom headers to scrape a website then you can do
  that by using custom_headers=true parameter.
- By default, this feature will use USA residential proxies.
- Using this feature will cost you 10 credits per request and 25 credits if used with
  JS rendering.
- Sessions expire 60 seconds after the last usage.
- No extra cost is involved for using this feature.
- You can also send a POST request through Scrapingdog API along with the headers
  and the data you want to submit to another API or a form.
- Each successful request will cost you 5 API credits.
- Setting the results to 100 may slightly slow down the API response.
- Each successful request will cost you 10 API credits.
- Scrapingdog is just one of many web scraping APIs available. Users should research
  alternatives like Zyte, Oxylabs, and ScraperAPI to find the solution that best fits
  their specific needs and budget.
- Your personal API key is available on your dashboard.
- This parameter cannot be used on the first page when neither next_page_topic nor
  topic_id is provided.
- Default country is us
- Default page number is 0
- Default results value is 10
- Default country value is 'us'
- Default page value is '0'
- Default domain value is 'google.com'
- Default language value is 'en'
- Default safe value is 'off'
- Default nfpr value is '0'
- Default html value is 'false'
- Each successful request will cost you 5 API credits
- Results can be filtered by language and country.
- The new API is much faster, returns images as URLs instead of base64, and provides
  the date entity with the actual time instead of a duration.
- The country parameter uses a two-letter country code.
- 'The query parameter supports operators like site: or when:.'
- New API is faster and returns images as URLs instead of base64.
- The country parameter defaults to 'us'.
- The page parameter defaults to '0'.
- API key required for authentication
- Default country is 'us'
- Default language is 'en'
- Safe filtering default is 'off'
- Default value for nfpr is '0'
- Default country value is 'us'.
- Default language value is 'en'.
- The 'results' parameter can be used to specify the number of results per page.
- Default value for 'language' parameter is 'en'.
- The parameter citation_id is essential for fetching the citation of individual articles.
- Requires personal API key for access.
- The api_key is required for access.
- location and uule parameter can't be used together.
- The `api_key` parameter is required for accessing the API.
- Requires API key for access.
- It is recommended to always specify the market to help Bing route the request efficiently.
- Each page returns 15 results
- This API returns paginated results with a default of 15 results per page.
- Each successful request will cost you 20 API credits.
- 5 credits will be charged for each successful request with the country parameter.
- 1 credit will be charged if the target country is the USA.
- It is advised to scrape Amazon reviews with a single concurrency, as scraping has
  become more challenging since Amazon introduced the auth wall.
- We do not guarantee any consistency with this API.
- Each successful request will cost you 15 credits.
- You have to send a GET request to the specified endpoint with the required parameters.
- Uses OAuth2 with refresh token — requires setup of connected app in Instagram
- Some fields may return nulls depending on user privacy settings
- Uses OAuth2 with refresh token — requires setup of connected app in instagram
- Uses OAuth2 for authentication.
- Requires authentication for access to user media.
- API may have rate limits that affect data retrieval
- Some media objects may return nulls in fields
- Requires OAuth2 for authentication
- Some media objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of Instagram app
- Requires an active user session to fetch data.
- Rate limits apply to API calls.
- Pagination is handled through next_page_token.
- API key is required as a query parameter.
- Ensure to handle pagination for job listings
- Job descriptions may contain long text fields.
- Each Yelp API call would cost you 4 request credits.
- API key is required for access
- Each successful request will cost you `5` API credits.
- Each successful request to this API will cost 5 credits.
- YouTube uses continuous pagination, and the next page token can be retrieved from
  the Scrapingdog JSON response.
- Each successful request to this API will cost 1 credit.
- Each successful request to this API will cost 1 credits.
- Pagination is handled via next_page_token.
- Supports pagination with pn and rn parameters.
- This API requires a personal API key.
- You have to send a GET request to 'https://api.scrapingdog.com/facebook/profile'
  with the required parameters.
- Your personal API key is required.
- Username of the Instagram account to scrape is required.
- Some ads may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The webhook URL should be a POST API.
- Remember to configure your code to not verify SSL and pass the target URL with http
  only.
errors:
- '200: Successfull Request'
- '410: Request timeout'
- '404: URL is wrong'
- '403: Request Limit Reached.'
- '429: Concurrent connection limit reached.'
- '401: API Key is wrong.'
- '400: Request failed.'
- 'Failed to retrieve data. Status code: 200'
- '401 Unauthorized: Recheck API key or permissions'
- '400 Bad Request: Check your parameters.'
- '401 Unauthorized: Invalid API key.'
- '404 Not Found: Endpoint does not exist.'
- 'HTTP request failed with code: 400, message: Bad Request'
- '401 Unauthorized: Recheck API key'
- 'HTTP request failed with code: 200, message: Success'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Request failed with status code: 200'
- '400 Bad Request: Check if the required parameters are provided.'
- '401 Unauthorized: Ensure that the API key is valid.'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency.'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Invalid parameters.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your API key'
- '401 Unauthorized: Recheck API key validity'
- 'HTTP request failed with response code: 200'
- 'HTTP request failed with response code: [code]'
- 'cURL error: [error_message]'
- Request failed with status code
- '400 Bad Request: Ensure all required parameters are included.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Invalid API key'
- 'Error: Check if the request was successful (status code 200)'
- '403 Forbidden: Check if the access token has correct permissions'
- '404 Not Found: Verify endpoint and user ID'
- '401 Unauthorized: Recheck OAuth token'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your access token.'
- '429 Too Many Requests: Exceeded rate limit'
- '401 Unauthorized: Check if the access token is valid'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck OAuth token validity'
- '403 Forbidden: Ensure permissions are granted'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify access token.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your access token and permissions.'
- HTTP request failed with status code
- 'Request failed with status code: 401'
- 'HTTP request failed: 404 Not Found'
- '404 Not Found: Check job ID or URL.'
- 'Error: 401 Unauthorized: Recheck API key or permissions'
- '400 Bad Request: Check query parameters.'
- '401 Unauthorized: Ensure the API key is valid.'
- 'Invalid API key: Check if your API key is correct.'
- 'User not found: Ensure the username is valid.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - User
  - Media
client:
  base_url: https://api.scrapingdog.com
  headers:
    Accept: application/json
source_metadata: null
