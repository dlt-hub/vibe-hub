resources:
- name: tokens
  endpoint:
    path: /reference/tokens-3
- name: wallets
  endpoint:
    path: /reference/wallets-1
- name: collections
  endpoint:
    path: /reference/collections-3
- name: available_utxos
  endpoint:
    path: /v2/ord/btc/runes/utxos/wallet
    method: GET
- name: listing_psbt
  endpoint:
    path: /v2/ord/btc/runes/psbt/order/create
    method: POST
- name: listing_submit
  endpoint:
    path: /v2/ord/btc/runes/order/create
    method: POST
- name: listings
  endpoint:
    path: /v2/tokens/token_mint/listings
    method: GET
- name: listings
  endpoint:
    path: /v2/tokens/{token_mint}/listings
    method: GET
    data_selector: array of objects
- name: offers_received
  endpoint:
    path: /v2/tokens/{token_mint}/offers_received
    method: GET
- name: received_offers
  endpoint:
    path: /v2/tokens/{token_mint}/offers_received
    method: GET
    data_selector: array of objects
    params:
      offset: 0
      limit: 100
      sort: updatedAt
      sort_direction: desc
- name: token_activities
  endpoint:
    path: /tokens/{token_mint}/activities
    method: GET
- name: activities
  endpoint:
    path: /v2/tokens/{token_mint}/activities
    method: GET
    data_selector: array of objects
    params:
      offset: '0'
      limit: '100'
- name: token_metadata
  endpoint:
    path: /v2/tokens/{token_mint}
    method: GET
    data_selector: object
    params: {}
- name: token_activities
  endpoint:
    path: /tokens/token_mint/activities
    method: GET
- name: token_metadata
  endpoint:
    path: /tokens/token_mint
    method: GET
- name: received_offers
  endpoint:
    path: /tokens/token_mint/offers/received
    method: GET
- name: listings
  endpoint:
    path: /tokens/token_mint/listings
    method: GET
- name: tokens
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
- name: wallet_tokens
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
    data_selector: array of objects
    params:
      collection_symbol: string
      mcc_address: string
      offset: integer
      limit: integer
      min_price: number
      max_price: number
      attributes: array of arrays of objects
      listStatus: string
      sort: string
      sort_direction: string
- name: wallet_owner_info
  endpoint:
    path: /v2/wallets/{wallet_address}
    method: GET
    data_selector: object
    params: {}
- name: tokens
  endpoint:
    path: /reference/tokens
    method: GET
- name: wallets
  endpoint:
    path: /reference/wallets
    method: GET
- name: wallet_activity
  endpoint:
    path: /wallets/{wallet_address}/activities
    method: GET
    data_selector: object
    params: {}
- name: wallet_activities
  endpoint:
    path: /v2/wallets/{wallet_address}/activities
    method: GET
    data_selector: array of objects
    params:
      offset: '0'
      limit: '100'
- name: activities
  endpoint:
    path: /v2/wallets/owner/activities
    method: GET
- name: ownership_activities
  endpoint:
    path: /v2/wallets/owner/activities
    method: GET
    data_selector: array of objects
    params:
      owner: string
      createdAt: string
- name: offers_made
  endpoint:
    path: /v2/wallets/{wallet_address}/offers_made
    method: GET
    data_selector: object
- name: offers_made
  endpoint:
    path: /v2/wallets/{wallet_address}/offers_made
    method: GET
    data_selector: array of objects
    params:
      min_price: number
      max_price: number
      offset: integer
      limit: integer
      sort: string
      sort_direction: string
- name: offers_received
  endpoint:
    path: /v2/wallets/{wallet_address}/offers_received
    method: GET
- name: escrow_balance
  endpoint:
    path: /v2/wallets/{wallet_address}/escrow_balance
    method: GET
- name: offers_received
  endpoint:
    path: /v2/wallets/{wallet_address}/offers_received
    method: GET
    data_selector: array of objects
    params:
      min_price: number
      max_price: number
      sort: string
      sort_direction: string
      offset: integer
      limit: integer
- name: escrow_balance
  endpoint:
    path: /v2/wallets/{wallet_address}/escrow_balance
    method: GET
    data_selector: object
- name: escrow_balance
  endpoint:
    path: /v2/wallets/{wallet_address}/escrow_balance
    method: GET
    data_selector: object
    params: {}
- name: activities
  endpoint:
    path: /collections/{symbol}/activities
    method: GET
    data_selector: object
- name: collection_activities
  endpoint:
    path: /v2/collections/{symbol}/activities
    method: GET
    params:
      offset: 0
      limit: 100
- name: collection_stats
  endpoint:
    path: /v2/collections/{symbol}/stats
    method: GET
    data_selector: object
    params: {}
- name: collection_stats
  endpoint:
    path: /v2/collections/{symbol}/stats
    method: GET
    data_selector: object
    params:
      timeWindow: all
      listingAggMode: 'false'
- name: collections_attributes
  endpoint:
    path: /collections/{collectionSymbol}/attributes
    method: GET
- name: attributes
  endpoint:
    path: /v2/collections/{collectionSymbol}/attributes
    method: GET
    data_selector: results
    params:
      collectionSymbol: string
- name: collections
  endpoint:
    path: /v2/collections
    method: GET
    data_selector: array of objects
- name: collections
  endpoint:
    path: /v2/collections
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 200
- name: collections_listings
  endpoint:
    path: /collections/{symbol}/listings
    method: GET
- name: listings
  endpoint:
    path: /v2/collections/{symbol}/listings
    method: GET
    params:
      offset: 0
      limit: 20
- name: batch_listings
  endpoint:
    path: /collections/batch/listings
    method: POST
- name: batch_listings
  endpoint:
    path: /v2/collections/batch/listings
    method: POST
    data_selector: result
- name: holder_stats
  endpoint:
    path: /v2/collections/{symbol}/holder_stats
    method: GET
    data_selector: records
- name: holder_stats
  endpoint:
    path: /v2/collections/{symbol}/holder_stats
    method: GET
    data_selector: object
- name: holder_stats
  endpoint:
    path: /collections/{symbol}/leaderboard
    method: GET
- name: wallets_rank
  endpoint:
    path: /v2/collections/{symbol}/leaderboard
    method: GET
    data_selector: object
    params:
      limit: 100
- name: collections
  endpoint:
    path: /v2/launchpad/collections
    method: GET
- name: launchpad_collections
  endpoint:
    path: /v2/launchpad/collections
    method: GET
    params:
      offset: 0
      limit: 200
- name: tokens
  endpoint:
    path: /tokens
    method: GET
- name: wallets
  endpoint:
    path: /wallets
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: launchpad
  endpoint:
    path: /launchpad
    method: GET
- name: instructions_buy
  endpoint:
    path: /v2/instructions/buy
    method: GET
    data_selector: tx
    params:
      buyer: string
      auctionHouseAddress: string
      tokenMint: string
      price: number
      buyerReferral: string
      buyerCreatorRoyaltyPercent: number
      expiry: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: buy_now_transfer_nft
  endpoint:
    path: /v2/instructions/buy_now_transfer_nft
    method: GET
- name: buy_now_transfer_nft
  endpoint:
    path: /v2/instructions/buy_now_transfer_nft
    method: GET
    params:
      buyer: string
      seller: string
      auctionHouseAddress: string
      tokenMint: string
      tokenATA: string
      price: number
      destinationATA: string
      destinationOwner: string
      createATA: boolean
      buyerReferral: string
      sellerReferral: string
      buyerExpiry: number
      sellerExpiry: number
      buyerCreatorRoyaltyPercent: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: buy_now_instruction
  endpoint:
    path: /v2/instructions/buy_now
    method: GET
- name: buy_now_instruction
  endpoint:
    path: /v2/instructions/buy_now
    method: GET
    data_selector: ''
    params:
      buyer: ''
      seller: ''
      auctionHouseAddress: ''
      tokenMint: ''
      tokenATA: ''
      price: ''
      buyerReferral: ''
      sellerReferral: ''
      buyerExpiry: ''
      sellerExpiry: ''
      buyerCreatorRoyaltyPercent: ''
      priorityFee: ''
      prioFeeMicroLamports: ''
      maxPrioFeeLamports: ''
      exactPrioFeeLamports: ''
      splPrice: ''
- name: instructions_buy_cancel
  endpoint:
    path: /v2/instructions/buy_cancel
    method: GET
- name: cancel_buy_instruction
  endpoint:
    path: /v2/instructions/buy_cancel
    method: GET
    data_selector: response
    params:
      buyer: string
      auctionHouseAddress: string
      tokenMint: string
      price: number
      buyerReferral: string
      expiry: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: change_buy_price_instruction
  endpoint:
    path: /v2/instructions/buy_change_price
    method: GET
    data_selector: response
    params: {}
- name: buy_change_price
  endpoint:
    path: /v2/instructions/buy_change_price
    method: GET
- name: tokens
  endpoint:
    path: /tokens
    method: GET
    data_selector: records
- name: wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: instruction_to_sell
  endpoint:
    path: /v2/instructions/sell
    method: GET
    data_selector: tx
    params:
      seller: string
      auctionHouseAddress: string
      tokenMint: string
      tokenAccount: string
      price: number
      sellerReferral: string
      expiry: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: sell_change_price
  endpoint:
    path: /v2/instructions/sell_change_price
    method: GET
- name: change_sell_price_instruction
  endpoint:
    path: /v2/instructions/sell_change_price
    method: GET
    data_selector: null
    params:
      seller: string
      auctionHouseAddress: string
      tokenMint: string
      tokenAccount: string
      price: number
      newPrice: number
      sellerReferral: string
      expiry: number
      priorityFee: number
- name: sell_now
  endpoint:
    path: /v2/instructions/sell_now
    method: GET
- name: sell_now
  endpoint:
    path: /v2/instructions/sell_now
    method: GET
    data_selector: response
    params: {}
- name: sell_cancel
  endpoint:
    path: /v2/instructions/sell_cancel
    method: GET
- name: cancel_sell_instruction
  endpoint:
    path: /v2/instructions/sell_cancel
    method: GET
    data_selector: ''
- name: instructions_deposit
  endpoint:
    path: /v2/instructions/deposit
    method: GET
- name: deposit_instruction
  endpoint:
    path: /v2/instructions/deposit
    method: GET
    data_selector: null
    params:
      buyer: string
      amount: number
- name: withdraw_instruction
  endpoint:
    path: /v2/instructions/withdraw
    method: GET
- name: withdraw_instruction
  endpoint:
    path: /v2/instructions/withdraw
    method: GET
    data_selector: response
    params:
      buyer: string
      amount: number
- name: tokens
  endpoint:
    path: /reference/get_tokens-token-mint-listings-1
    method: GET
    data_selector: records
    params: {}
- name: wallets
  endpoint:
    path: /reference/get_wallets-wallet-address-tokens-1
    method: GET
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /reference/get_collections-symbol-activities-1
    method: GET
    data_selector: records
    params: {}
- name: launchpad
  endpoint:
    path: /reference/get_launchpad-collections-1
    method: GET
    data_selector: records
    params: {}
- name: instructions
  endpoint:
    path: /reference/get_instructions-buy-1
    method: GET
    data_selector: records
    params: {}
- name: mmm
  endpoint:
    path: /reference/get_mmm-pools-1
    method: GET
    data_selector: records
    params: {}
- name: marketplace
  endpoint:
    path: /reference/get_marketplace-popular-collections-1
    method: GET
    data_selector: records
    params: {}
- name: magic-ticket
  endpoint:
    path: /reference/get_instructions-magic-ticket-burns
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Get instruction to withdraw from escrow
  endpoint:
    path: /reference/get_instructions-withdraw
    method: GET
- name: MMM Pool Pricing
  endpoint:
    path: /reference/mmm-pool-pricing
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: price_updates
  endpoint:
    path: /services/data/vXX.X/price_updates
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tokens
  endpoint:
    path: /reference/tokens
    method: GET
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /reference/collections
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pools
  endpoint:
    path: /v2/mmm/pools
    method: GET
    data_selector: results
- name: amm_pools
  endpoint:
    path: /v2/mmm/pools
    method: GET
    params:
      collectionSymbol: string
      pools: array of strings
      owner: string
      offset: integer
      limit: integer
      field: string
      direction: string
- name: pools
  endpoint:
    path: /v2/mmm/token/{mint_address}/pools
    method: GET
    data_selector: results
- name: best_offers
  endpoint:
    path: /v2/mmm/token/{mint_address}/pools
    method: GET
    data_selector: best_offers
    params: {}
- name: create_pool_instruction
  endpoint:
    path: /v2/instructions/mmm/create-pool
    method: GET
    params: {}
- name: tokens
  endpoint:
    path: /reference/tokens
    method: GET
- name: wallets
  endpoint:
    path: /reference/wallets
    method: GET
- name: collections
  endpoint:
    path: /reference/collections
    method: GET
- name: instructions
  endpoint:
    path: /reference/instructions
    method: GET
- name: marketplace
  endpoint:
    path: /reference/marketplace
    method: GET
- name: update_pool
  endpoint:
    path: /v2/instructions/mmm/update-pool
    method: GET
    params:
      reinvestBuy: 'true'
      reinvestSell: 'true'
- name: update_pool_instruction
  endpoint:
    path: /v2/instructions/mmm/update-pool
    method: GET
    data_selector: response
    params:
      pool: string
      spotPrice: number
      curveType: string
      curveDelta: number
      reinvestBuy: boolean
      reinvestSell: boolean
      expiry: number
      lpFeeBp: number
      buysideCreatorRoyaltyBp: number
      priorityFee: number
      sharedEscrowCount: number
- name: sol_deposit_buy
  endpoint:
    path: /v2/instructions/mmm/sol-deposit-buy
    method: GET
- name: sol_deposit_buy
  endpoint:
    path: /v2/instructions/mmm/sol-deposit-buy
    method: GET
    data_selector: null
    params:
      pool: string
      solAmount: number
      priorityFee: number
- name: withdraw_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-withdraw-buy
    method: GET
- name: withdraw_sol_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-withdraw-buy
    method: GET
    params:
      pool: string
      solAmount: number
      priorityFee: number
- name: close_pool
  endpoint:
    path: /v2/instructions/mmm/sol-close-pool
    method: GET
    data_selector: null
    params:
      pool: string
      priorityFee: number
- name: instructions_close_pool
  endpoint:
    path: /v2/instructions/mmm/sol-close-pool
    method: GET
- name: sol_fulfill_buy
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-buy
    method: GET
- name: fulfill_buy_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-buy
    method: GET
    data_selector: null
    params:
      pool: string
      assetAmount: number
      minPaymentAmount: number
      seller: string
      assetMint: string
      assetTokenAccount: string
      allowlistAuxAccount: string
      skipDelist: boolean
      priorityFee: number
- name: instructions
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-sell
    method: GET
    data_selector: data
- name: fulfill_sell_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-sell
    method: GET
    data_selector: response
    params:
      pool: string
      assetAmount: number
      maxPaymentAmount: number
      buysideCreatorRoyaltyBp: number
      buyer: string
      assetMint: string
      allowlistAuxAccount: string
      priorityFee: number
- name: popular_collections
  endpoint:
    path: /v2/marketplace/popular_collections
    method: GET
    data_selector: array of objects
- name: popular_collections
  endpoint:
    path: /v2/marketplace/popular_collections
    method: GET
    data_selector: response
    params:
      timeRange: 1d
- name: tokens
  endpoint:
    path: /reference/tokens
    method: GET
- name: wallets
  endpoint:
    path: /reference/wallets
    method: GET
- name: collections
  endpoint:
    path: /reference/collections
    method: GET
- name: launchpad
  endpoint:
    path: /reference/launchpad
    method: GET
- name: instructions
  endpoint:
    path: /reference/instructions
    method: GET
- name: magic_ticket_burns
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
    data_selector: object
- name: burn_txs
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
    data_selector: response
    params:
      walletAddress: ''
      mintAddresses: ''
- name: block_activities
  endpoint:
    path: /block/activities
    method: GET
    params:
      limit: '20'
- name: block_activities
  endpoint:
    path: /v2/ord/btc/block/activities
    method: GET
    data_selector: activities
    params:
      blockHeight: required
      kind: create,transfer
      limit: 0 to 60
- name: block_activities
  endpoint:
    path: /reference/get_v2-ord-btc-block-activities
    method: GET
- name: collection_stats
  endpoint:
    path: /reference/get_v2-ord-btc-stat
    method: GET
- name: get_collection
  endpoint:
    path: /v2/ord/btc/collections/{symbol}
    method: GET
- name: collection_statistics
  endpoint:
    path: /v2/ord/btc/stat
    method: GET
    data_selector: object
    params: {}
- name: collection_stats
  endpoint:
    path: /v2/ord/btc/stat
    method: GET
    data_selector: response
    params:
      collectionSymbol: string
- name: collection_statistics
  endpoint:
    path: /collection_stats/search/bitcoin
    method: GET
    data_selector: records
    params:
      window: 1d
      sort: volume
      direction: desc
      offset: 0
      limit: 100
- name: tokens
  endpoint:
    path: /reference/get_tokens-token-mint-listings-1
    method: GET
    data_selector: records
    params: {}
- name: wallets
  endpoint:
    path: /reference/get_wallets-wallet-address-tokens-1
    method: GET
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /reference/get_collections-symbol-activities-1
    method: GET
    data_selector: records
    params: {}
- name: launchpad
  endpoint:
    path: /reference/get_launchpad-collections-1
    method: GET
    data_selector: records
    params: {}
- name: instructions
  endpoint:
    path: /reference/get_instructions-buy-1
    method: GET
    data_selector: records
    params: {}
- name: mmm
  endpoint:
    path: /reference/get_mmm-pools-1
    method: GET
    data_selector: records
    params: {}
- name: marketplace
  endpoint:
    path: /reference/get_marketplace-popular-collections-1
    method: GET
    data_selector: records
    params: {}
- name: magic-ticket
  endpoint:
    path: /reference/get_instructions-magic-ticket-burns
    method: GET
    data_selector: records
    params: {}
- name: activities
  endpoint:
    path: /ord/btc/activities
    method: GET
    data_selector: activities
    params:
      kind: buying_broadcasted
- name: activities
  endpoint:
    path: /v2/ord/btc/activities
    method: GET
    data_selector: activities
    params: {}
- name: activities
  endpoint:
    path: /activities/trades
    method: GET
    data_selector: activities
- name: trade_activity
  endpoint:
    path: /v2/ord/btc/activities/trades
    method: GET
    data_selector: activities
    params:
      cursor: string
      limit: integer
- name: tokens
  endpoint:
    path: /v2/ord/btc/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /v2/ord/btc/tokens
    method: GET
    params:
      showAll: 'true'
      sortBy: priceAsc
- name: tokens
  endpoint:
    path: /v2/ord/btc/raresats/listings
    method: GET
    params:
      sortBy: priceAsc
      limit: 100
      offset: 0
- name: rare_sats_listings
  endpoint:
    path: /v2/ord/btc/raresats/listings
    method: GET
    data_selector: listings
    params:
      limit: 100
      offset: 0
- name: raresats_wallet_utxos
  endpoint:
    path: /v2/ord/btc/raresats/wallet/utxos
    method: GET
    data_selector: tokens
    params:
      listed: 'false'
      limit: 40
- name: rare_sats
  endpoint:
    path: /v2/ord/btc/raresats/wallet/utxos
    method: GET
    data_selector: utxos
    params:
      walletAddress: string
      listed: boolean
      limit: integer
      offset: string
- name: batch_listing_psbt
  endpoint:
    path: /v2/ord/btc/raresats/listing-psbt
    method: POST
- name: raresats_listing
  endpoint:
    path: /v2/ord/btc/raresats/listing-psbt
    method: POST
- name: raresats_wallet_utxos
  endpoint:
    path: /v2/ord/btc/raresats/wallet/utxos
    method: GET
- name: batch_listing
  endpoint:
    path: /ord/btc/raresats/listing
    method: POST
- name: submit_batch_listing
  endpoint:
    path: /v2/ord/btc/raresats/listing
    method: POST
- name: rune_info
  endpoint:
    path: /v2/ord/btc/runes/market/rune/info
    method: GET
    data_selector: object
- name: rune_market_info
  endpoint:
    path: /v2/ord/btc/runes/market/{rune}/info
    method: GET
    data_selector: info
    params: {}
- name: rune_market_info
  endpoint:
    path: /v2/ord/btc/runes/market/{rune}/info
    method: GET
- name: rune_info
  endpoint:
    path: /v2/ord/btc/runes/market/rune/info
    method: GET
    data_selector: object
- name: orders
  endpoint:
    path: /v2/ord/btc/runes/orders/rune
    method: GET
    data_selector: orders
    params:
      side: sell
- name: orders
  endpoint:
    path: /v2/ord/btc/runes/orders/{rune}
    method: GET
    data_selector: results
    params:
      side: sell
      sort: unitPriceAsc
      offset: 0
      includePending: false
      rbfPreventionListingOnly: false
- name: utxos
  endpoint:
    path: /v2/ord/btc/runes/utxos/wallet/address
    method: GET
    data_selector: utxos
- name: rune_utxos
  endpoint:
    path: /v2/ord/btc/runes/utxos/wallet/{address}
    method: GET
    data_selector: response
    params:
      rune: string
      sort: string
      includeListed: boolean
- name: rune_activities
  endpoint:
    path: /v2/ord/btc/runes/activities/rune
    method: GET
    data_selector: activities
    params: {}
- name: activities_for_specific_rune
  endpoint:
    path: /v2/ord/btc/runes/activities/{rune}
    method: GET
    data_selector: ''
- name: rune_activities
  endpoint:
    path: /v2/ord/btc/runes/wallet/activities/address
    method: GET
    data_selector: activities
- name: rune_activities
  endpoint:
    path: /v2/ord/btc/runes/wallet/activities/{address}
    method: GET
    data_selector: activities
    params:
      offset: 0
- name: rune_balances
  endpoint:
    path: /v2/ord/btc/runes/wallet/balances/address/rune
    method: GET
    data_selector: object
- name: rune_balances
  endpoint:
    path: /v2/ord/btc/runes/wallet/balances/{address}/{rune}
    method: GET
    data_selector: balances
- name: collection_stats
  endpoint:
    path: /v2/ord/btc/runes/collection_stats/search
    method: GET
    params:
      window: 1d
      sort: floorPrice
      direction: desc
- name: rune_collection_stats
  endpoint:
    path: /v2/ord/btc/runes/collection_stats/search
    method: GET
    data_selector: results
    params:
      window: 1d
      limit: 20
      offset: 0
      sort: floorPrice
      direction: desc
- name: rune_sell_order
  endpoint:
    path: /v2/ord/btc/runes/psbt/order/create
    method: POST
    data_selector: null
    params: {}
- name: rune_sell_order
  endpoint:
    path: /v2/ord/btc/runes/order/create
    method: POST
- name: rune_sell_order
  endpoint:
    path: /ord/btc/runes/order/create
    method: POST
    data_selector: orderIds
    params: {}
- name: rune_sell_order_cancel
  endpoint:
    path: /ord/btc/runes/order/cancel
    method: POST
    data_selector: ''
    params: {}
- name: cancel_order
  endpoint:
    path: /v2/ord/btc/runes/psbt/order/cancel
    method: POST
- name: cancel_rune_sell_order
  endpoint:
    path: /v2/ord/btc/runes/psbt/order/cancel
    method: POST
    data_selector: orderIds
    params: {}
- name: cancel_order
  endpoint:
    path: /v2/ord/btc/runes/order/cancel
    method: POST
- name: rune_sell_order_cancel
  endpoint:
    path: /v2/ord/btc/runes/order/cancel
    method: POST
    data_selector: response
    params: {}
- name: sweeping
  endpoint:
    path: /v2/ord/btc/runes/psbt/get-sweeping
    method: POST
- name: buy_rune
  endpoint:
    path: /v2/ord/btc/runes/psbt/get-sweeping
    method: POST
    data_selector: null
    params: {}
- name: runes_sweeping
  endpoint:
    path: /v2/ord/btc/runes/sweeping
    method: POST
- name: runes_sweeping
  endpoint:
    path: /v2/ord/btc/runes/sweeping
    method: POST
    data_selector: object
- name: get_market_order_sell
  endpoint:
    path: /v2/ord/btc/runes/psbt/get-market-sell
    method: POST
- name: market_sell
  endpoint:
    path: /ord/btc/runes/psbt/get-market-sell
    method: POST
    data_selector: response
    params: {}
- name: runes_market_sell
  endpoint:
    path: /v2/ord/btc/runes/market-sell
    method: POST
- name: market_sell
  endpoint:
    path: /v2/ord/btc/runes/market-sell
    method: POST
    data_selector: object
- name: quote
  endpoint:
    path: /ord/btc/runes/quote
    method: GET
- name: rune_quote
  endpoint:
    path: /v2/ord/btc/runes/quote
    method: GET
    data_selector: response
    params:
      runeTicker: ''
      amount: ''
      side: ''
      priceToleranceBp: ''
      rbfPreventionListingOnly: ''
- name: swap_runes
  endpoint:
    path: /v2/ord/btc/runes/psbt/swap
    method: POST
- name: rune_quote
  endpoint:
    path: /reference/get_v2-ord-btc-runes-quote-1
    method: GET
- name: rune_swap
  endpoint:
    path: /reference/post_v2-ord-btc-runes-swap
    method: POST
- name: swap
  endpoint:
    path: /v2/ord/btc/runes/swap
    method: POST
- name: collections
  endpoint:
    path: /reference/getcollectionsv7
    method: GET
- name: tokens
  endpoint:
    path: /reference/tokens
    method: GET
- name: wallets
  endpoint:
    path: /reference/wallets
    method: GET
- name: marketplace
  endpoint:
    path: /reference/marketplace
    method: GET
- name: collections
  endpoint:
    path: /rtp/{chain}/collections/v7
    method: GET
    data_selector: collections
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: collections
  endpoint:
    path: /v3/rtp/{chain}/collections/trending/v1
    method: GET
    data_selector: collections
    params: {}
- name: top_selling_collections
  endpoint:
    path: /rtp/{chain}/collections/trending/v1
    method: GET
    params:
      period: 1d
      limit: 50
      sortBy: sales
      normalizeRoyalties: false
      useNonFlaggedFloorAsk: false
- name: user_collections
  endpoint:
    path: /v3/rtp/{chain}/users/{user}/collections/v3
    method: GET
    data_selector: collections
- name: user_collections
  endpoint:
    path: /rtp/{chain}/users/{user}/collections/v3
    method: GET
    data_selector: aggregate stats
    params:
      community: ''
      collectionsSetId: ''
      collection: ''
      includeTopBid: false
      includeLiquidCount: false
      offset: 0
      limit: 20
      displayCurrency: ''
- name: tokens
  endpoint:
    path: /v3/rtp/{chain}/tokens/v6
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /reference/get_tokens-token-mint-listings-1
    method: GET
    data_selector: records
    params: {}
- name: wallets
  endpoint:
    path: /reference/get_wallets-wallet-address-tokens-1
    method: GET
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /reference/get_collections-symbol-activities-1
    method: GET
    data_selector: records
    params: {}
- name: tokens
  endpoint:
    path: /tokens
    method: GET
- name: user_tokens
  endpoint:
    path: /rtp/{chain}/users/{user}/tokens/v7
    method: GET
    data_selector: tokens
    params: {}
- name: asks
  endpoint:
    path: /rtp/{chain}/orders/asks/v5
    method: GET
    data_selector: results
- name: orders
  endpoint:
    path: /v3/rtp/{chain}/orders/asks/v5
    method: GET
    data_selector: orders
    params:
      includeCriteriaMetadata: 'false'
      includeRawData: 'false'
      includeDynamicPricing: 'false'
      excludeEOA: 'false'
      normalizeRoyalties: 'false'
      sortBy: createdAt
      limit: '50'
- name: orders
  endpoint:
    path: /v3/rtp/{chain}/orders/bids/v6
    method: GET
- name: bids
  endpoint:
    path: /v3/rtp/{chain}/orders/bids/v6
    method: GET
    data_selector: orders
- name: tokens
  endpoint:
    path: /reference/get_tokens-token-mint-listings-1
    method: GET
    data_selector: listings
- name: wallets
  endpoint:
    path: /reference/get_wallets-wallet-address-tokens-1
    method: GET
    data_selector: tokens
- name: collections
  endpoint:
    path: /reference/get_collections-symbol-activities-1
    method: GET
    data_selector: activities
- name: user_activity
  endpoint:
    path: /users/activity/v6
    method: GET
- name: users_activity
  endpoint:
    path: /v3/rtp/{chain}/users/activity/v6
    method: GET
    data_selector: items
    params:
      limit: '20'
      includeMetadata: 'true'
- name: user_activity
  endpoint:
    path: /users/activity
    method: GET
    data_selector: activities
- name: token_activity
  endpoint:
    path: /rtp/{chain}/tokens/{token}/activity/v5
    method: GET
    data_selector: activity
    params:
      limit: 20
      sortBy: eventTimestamp
      includeMetadata: true
- name: all_attributes
  endpoint:
    path: /v3/rtp/{chain}/collections/{collection}/attributes/all/v4
    method: GET
    data_selector: attributes
- name: check_cross_posting_status
  endpoint:
    path: /v3/rtp/{chain}/cross-posting-orders/v1
    method: GET
    data_selector: status
    params:
      ids: []
- name: orders
  endpoint:
    path: /v3/rtp/{chain}/cross-posting-orders/v1
    method: GET
- name: submit_signed_orders
  endpoint:
    path: /v3/rtp/{chain}/order/v4
    method: POST
- name: cross_posting_order
  endpoint:
    path: /reference/getcrosspostingordersv1
    method: GET
- name: create_bids
  endpoint:
    path: /reference/postexecutebidv5
    method: POST
- name: create_bid
  endpoint:
    path: /v3/rtp/{chain}/execute/bid/v5
    method: POST
    data_selector: response
    params: {}
- name: tokens
  endpoint:
    path: /reference/get_tokens-token-mint-listings-1
    method: GET
    data_selector: records
- name: wallets
  endpoint:
    path: /reference/get_wallets-wallet-address-tokens-1
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /reference/get_collections-symbol-activities-1
    method: GET
    data_selector: records
- name: launchpad
  endpoint:
    path: /reference/get_launchpad-collections-1
    method: GET
    data_selector: records
- name: instructions
  endpoint:
    path: /reference/get_instructions-buy-1
    method: GET
    data_selector: records
- name: bids_offers
  endpoint:
    path: /reference/postexecutebidv5
    method: POST
- name: fill_orders
  endpoint:
    path: /reference/fill-orders-buy-sell
    method: POST
- name: cancel_orders
  endpoint:
    path: /v3/rtp/{chain}/execute/cancel/v3
    method: POST
    data_selector: response
    params: {}
- name: buy_tokens
  endpoint:
    path: /v3/rtp/{chain}/execute/buy/v7
    method: POST
- name: tokens
  endpoint:
    path: /reference/tokens-3
    method: GET
- name: wallets
  endpoint:
    path: /reference/wallets-1
    method: GET
- name: collections
  endpoint:
    path: /reference/collections-3
    method: GET
- name: sell_tokens
  endpoint:
    path: /rtp/{chain}/execute/sell/v7
    method: POST
    data_selector: items
    params: {}
- name: tokens
  endpoint:
    path: /reference/tokens-3
    method: GET
    data_selector: records
- name: listings
  endpoint:
    path: /v2/tokens/{token_mint}/listings
    method: GET
    data_selector: object
    params: {}
- name: listings
  endpoint:
    path: /v2/tokens/{token_mint}/listings
    method: GET
    data_selector: array of objects
    params:
      listingAggMode: 'false'
- name: offers_received
  endpoint:
    path: /v2/tokens/{token_mint}/offers_received
    method: GET
- name: received_offers
  endpoint:
    path: /v2/tokens/{token_mint}/offers_received
    method: GET
    data_selector: array of objects
    params:
      min_price: number
      max_price: number
      offset: integer
      limit: integer
      sort: string
      sort_direction: string
- name: token_activities
  endpoint:
    path: /v2/tokens/token_mint/activities
    method: GET
    data_selector: object
- name: activities
  endpoint:
    path: /v2/tokens/{token_mint}/activities
    method: GET
    data_selector: array of objects
    params:
      offset: 0
      limit: 100
- name: tokens
  endpoint:
    path: /v2/tokens/{token_mint}
    method: GET
- name: token_metadata
  endpoint:
    path: /v2/tokens/{token_mint}
    method: GET
    data_selector: object
    params: {}
- name: get_tokens_owned_by_wallet
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
    data_selector: array of objects
    params:
      limit: '100'
      offset: '0'
- name: tokens
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
    data_selector: object
    params: {}
- name: wallets
  endpoint:
    path: /v2/wallets/{wallet_address}
    method: GET
    data_selector: object
    params: {}
- name: wallet_owner_info
  endpoint:
    path: /v2/wallets/{wallet_address}
    method: GET
    data_selector: object
    params:
      wallet_address: string
- name: wallet_activities
  endpoint:
    path: /v2/wallets/{wallet_address}/activities
    method: GET
- name: wallet_activities
  endpoint:
    path: /v2/wallets/{wallet_address}/activities
    method: GET
    data_selector: array of objects
    params:
      offset: 0
      limit: 100
- name: wallet_activities
  endpoint:
    path: /v2/wallets/owner/activities
    method: GET
- name: wallet_activities
  endpoint:
    path: /v2/wallets/owner/activities
    method: GET
    data_selector: array of objects
    params:
      owner: string
      createdAt: string
- name: offers_made
  endpoint:
    path: /wallets/{wallet_address}/offers_made
    method: GET
    data_selector: object
- name: offers_made
  endpoint:
    path: /v2/wallets/{wallet_address}/offers_made
    method: GET
    data_selector: array of objects
    params:
      min_price: number
      max_price: number
      offset: integer
      limit: integer
      sort: string
      sort_direction: string
- name: offers_received
  endpoint:
    path: /v2/wallets/{wallet_address}/offers_received
    method: GET
- name: offers_received
  endpoint:
    path: /v2/wallets/{wallet_address}/offers_received
    method: GET
    data_selector: array of objects
    params:
      min_price: number
      max_price: number
      sort: string
      sort_direction: string
      offset: integer
      limit: integer
- name: escrow_balance
  endpoint:
    path: /v2/wallets/{wallet_address}/escrow_balance
    method: GET
    data_selector: buyerEscrow
- name: escrow_balance
  endpoint:
    path: /wallets/{wallet_address}/escrow_balance
    method: GET
    data_selector: object
    params: {}
- name: activities
  endpoint:
    path: /v2/collections/{symbol}/activities
    method: GET
    data_selector: object
- name: collection_activities
  endpoint:
    path: /v2/collections/{symbol}/activities
    method: GET
    params:
      offset: 0
      limit: 100
- name: collection_stats
  endpoint:
    path: /v2/collections/{symbol}/stats
    method: GET
    data_selector: object
- name: collection_stats
  endpoint:
    path: /collections/{symbol}/stats
    method: GET
    data_selector: object
    params: {}
- name: attributes
  endpoint:
    path: /collections/{collectionSymbol}/attributes
    method: GET
- name: attributes
  endpoint:
    path: /v2/collections/{collectionSymbol}/attributes
    method: GET
    data_selector: results
- name: collections
  endpoint:
    path: /v2/collections
    method: GET
    data_selector: array of objects
- name: collections
  endpoint:
    path: /v2/collections
    method: GET
    params:
      offset: 0
      limit: 200
- name: get_collections
  endpoint:
    path: /reference/get_collections-1
    method: GET
- name: post_collections_batch_listings
  endpoint:
    path: /reference/post_collections-batch-listings-1
    method: POST
- name: listings
  endpoint:
    path: /v2/collections/{symbol}/listings
    method: GET
    data_selector: array of objects
    params:
      offset: 0
      limit: 20
- name: batch_listings
  endpoint:
    path: /v2/collections/batch/listings
    method: POST
    params:
      offset: 0
      limit: 20
- name: batch_listings
  endpoint:
    path: /collections/batch/listings
    method: POST
- name: holder_stats
  endpoint:
    path: /v2/collections/{symbol}/holder_stats
    method: GET
- name: holder_stats
  endpoint:
    path: /v2/collections/{symbol}/holder_stats
    method: GET
    data_selector: object
    params: {}
- name: holder_stats
  endpoint:
    path: /collections/{symbol}/leaderboard
    method: GET
- name: wallets_rank
  endpoint:
    path: /v2/collections/{symbol}/leaderboard
    method: GET
    params:
      limit: 100
- name: collections
  endpoint:
    path: /v2/launchpad/collections
    method: GET
    data_selector: array of objects
- name: launchpad_collections
  endpoint:
    path: /v2/launchpad/collections
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 200
- name: instructions
  endpoint:
    path: /v2/instructions/buy
    method: GET
- name: buy_instruction
  endpoint:
    path: /v2/instructions/buy
    method: GET
    data_selector: ''
    params:
      buyer: ''
      auctionHouseAddress: ''
      tokenMint: ''
      price: ''
      buyerReferral: ''
      expiry: ''
      priorityFee: ''
- name: buy_now_transfer_nft
  endpoint:
    path: /v2/instructions/buy_now_transfer_nft
    method: GET
- name: buy_now_transfer_nft
  endpoint:
    path: /v2/instructions/buy_now_transfer_nft
    method: GET
    params:
      buyer: string
      seller: string
      auctionHouseAddress: string
      tokenMint: string
      tokenATA: string
      price: number
      destinationATA: string
      destinationOwner: string
      createATA: boolean
      buyerReferral: string
      sellerReferral: string
      buyerExpiry: number
      sellerExpiry: number
      buyerCreatorRoyaltyPercent: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: buy_now_instruction
  endpoint:
    path: /v2/instructions/buy_now
    method: GET
- name: buy_now_instruction
  endpoint:
    path: /v2/instructions/buy_now
    method: GET
    data_selector: response
- name: instructions_buy_cancel
  endpoint:
    path: /v2/instructions/buy_cancel
    method: GET
- name: cancel_buy_instruction
  endpoint:
    path: /v2/instructions/buy_cancel
    method: GET
    data_selector: null
    params:
      buyer: string
      auctionHouseAddress: string
      tokenMint: string
      price: number
      buyerReferral: string
      expiry: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: change_buy_price
  endpoint:
    path: /v2/instructions/buy_change_price
    method: GET
    params:
      buyer: string
      auctionHouseAddress: string
      tokenMint: string
      price: number
      newPrice: number
      buyerReferral: string
      expiry: number
      priorityFee: number
- name: instructions_sell
  endpoint:
    path: /v2/instructions/sell
    method: GET
- name: sell_instruction
  endpoint:
    path: /v2/instructions/sell
    method: GET
    data_selector: response
    params:
      seller: string
      auctionHouseAddress: string
      tokenMint: string
      tokenAccount: string
      price: number
      sellerReferral: string
      expiry: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: change_sell_price
  endpoint:
    path: /v2/instructions/sell_change_price
    method: GET
    data_selector: response
    params: {}
- name: sell_now
  endpoint:
    path: /v2/instructions/sell_now
    method: GET
- name: sell_now
  endpoint:
    path: /v2/instructions/sell_now
    method: GET
    params:
      buyer: string
      seller: string
      auctionHouseAddress: string
      tokenMint: string
      tokenATA: string
      price: number
      newPrice: number
      sellerExpiry: number
      buyerReferral: string
      sellerReferral: string
      buyerExpiry: number
      priorityFee: number
- name: sell_cancel
  endpoint:
    path: /v2/instructions/sell_cancel
    method: GET
- name: sell_cancel_instruction
  endpoint:
    path: /v2/instructions/sell_cancel
    method: GET
    params:
      seller: ''
      auctionHouseAddress: ''
      tokenMint: ''
      tokenAccount: ''
      price: ''
      sellerReferral: ''
      expiry: ''
      priorityFee: ''
      prioFeeMicroLamports: ''
      maxPrioFeeLamports: ''
      exactPrioFeeLamports: ''
- name: instructions_deposit
  endpoint:
    path: /v2/instructions/deposit
    method: GET
    data_selector: data
- name: deposit_instruction
  endpoint:
    path: /v2/instructions/deposit
    method: GET
    data_selector: null
    params:
      buyer: string
      auctionHouseAddress: string
      amount: number
      priorityFee: number
      prioFeeMicroLamports: number
      maxPrioFeeLamports: number
      exactPrioFeeLamports: number
- name: withdraw_instruction
  endpoint:
    path: /v2/instructions/withdraw
    method: GET
- name: withdraw_instruction
  endpoint:
    path: /v2/instructions/withdraw
    method: GET
    data_selector: response
    params:
      buyer: string
      amount: number
- name: pools
  endpoint:
    path: /v2/mmm/pools
    method: GET
    data_selector: results
- name: amm_pools
  endpoint:
    path: /v2/mmm/pools
    method: GET
    params:
      collectionSymbol: string
      pools: array of strings
      owner: string
      offset: integer
      limit: integer
      field: string
      direction: string
- name: amm_pools
  endpoint:
    path: /v2/mmm/token/{mint_address}/pools
    method: GET
- name: best_offers
  endpoint:
    path: /v2/mmm/token/{mint_address}/pools
    method: GET
    data_selector: best_offers
    params:
      limit: 1
- name: create_pool_instruction
  endpoint:
    path: /v2/instructions/mmm/create-pool
    method: GET
    data_selector: response
    params:
      spotPrice: number
      curveType: string
      curveDelta: number
      reinvestBuy: boolean
      reinvestSell: boolean
      expiry: number
      lpFeeBp: number
      buysideCreatorRoyaltyBp: number
      paymentMint: string
      collectionSymbol: string
      owner: string
      solDeposit: number
      priorityFee: number
      sharedEscrowCount: number
- name: update_pool
  endpoint:
    path: /v2/instructions/mmm/update-pool
    method: GET
    params:
      reinvestBuy: 'true'
      reinvestSell: 'true'
- name: update_pool
  endpoint:
    path: /v2/instructions/mmm/update-pool
    method: GET
    data_selector: ''
    params: {}
- name: sol_deposit_buy
  endpoint:
    path: /v2/instructions/mmm/sol-deposit-buy
    method: GET
- name: instruction_to_deposit_SOL
  endpoint:
    path: /v2/instructions/mmm/sol-deposit-buy
    method: GET
    data_selector: response
    params:
      pool: string
      solAmount: number
      priorityFee: number
- name: withdraw_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-withdraw-buy
    method: GET
    data_selector: data
- name: withdraw_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-withdraw-buy
    method: GET
    data_selector: ''
    params:
      pool: ''
      solAmount: ''
      priorityFee: ''
- name: instructions
  endpoint:
    path: /v2/instructions/mmm/sol-close-pool
    method: GET
    data_selector: data
- name: close_pool_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-close-pool
    method: GET
    data_selector: response
    params:
      pool: string
      priorityFee: number
- name: instructions
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-buy
    method: GET
- name: fulfill_buy_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-buy
    method: GET
    data_selector: response
    params:
      pool: string
      assetAmount: number
      minPaymentAmount: number
      seller: string
      assetMint: string
      assetTokenAccount: string
      allowlistAuxAccount: string
      skipDelist: boolean
      priorityFee: number
- name: instructions
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-sell
    method: GET
- name: fulfill_sell_instruction
  endpoint:
    path: /v2/instructions/mmm/sol-fulfill-sell
    method: GET
    data_selector: response
- name: popular_collections
  endpoint:
    path: /v2/marketplace/popular_collections
    method: GET
    data_selector: array of objects
- name: popular_collections
  endpoint:
    path: /v2/marketplace/popular_collections
    method: GET
    data_selector: response
    params:
      timeRange: 1d
- name: burns
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
- name: burn_txs
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
    data_selector: response
    params:
      walletAddress: string
      mintAddresses: string
- name: token_listings
  endpoint:
    path: /v2/tokens/{token_mint}/listings
    method: GET
    data_selector: array of objects
    params:
      listingAggMode: 'false'
- name: listings
  endpoint:
    path: /tokens/token_mint/listings
    method: GET
    data_selector: object
- name: tokens
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
- name: tokens_owned_by_wallet
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
    data_selector: array of objects
    params:
      offset: 0
      limit: 100
- name: activities
  endpoint:
    path: /v2/collections/{symbol}/activities
    method: GET
    data_selector: activities
- name: collection_activities
  endpoint:
    path: /v2/collections/{symbol}/activities
    method: GET
    params:
      offset: 0
      limit: 100
- name: collections
  endpoint:
    path: /v2/launchpad/collections
    method: GET
    data_selector: array of objects
- name: launchpad_collections
  endpoint:
    path: /v2/launchpad/collections
    method: GET
    data_selector: null
    params:
      offset: 0
      limit: 200
- name: instructions_buy
  endpoint:
    path: /v2/instructions/buy
    method: GET
    data_selector: tx
    params:
      buyer: ''
      auctionHouseAddress: ''
      tokenMint: ''
      price: ''
      buyerReferral: ''
      buyerCreatorRoyaltyPercent: ''
      expiry: ''
      priorityFee: ''
      prioFeeMicroLamports: ''
      maxPrioFeeLamports: ''
      exactPrioFeeLamports: ''
- name: tokens
  endpoint:
    path: /reference/tokens
    method: GET
    data_selector: records
- name: wallets
  endpoint:
    path: /reference/wallets
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /reference/collections
    method: GET
    data_selector: records
- name: launchpad
  endpoint:
    path: /reference/launchpad
    method: GET
    data_selector: records
- name: instructions
  endpoint:
    path: /reference/instructions
    method: GET
    data_selector: records
- name: popular_collections
  endpoint:
    path: /v2/marketplace/popular_collections
    method: GET
    params:
      timeRange: 1d
- name: magic_ticket_burns
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
    data_selector: object
- name: burn_transactions
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
    data_selector: response
    params:
      walletAddress: string
      mintAddresses: string
- name: block_activities
  endpoint:
    path: /v2/ord/btc/block/activities
    method: GET
    params:
      blockHeight: ''
      kind: create,transfer
      limit: ''
- name: block_activities
  endpoint:
    path: /v2/ord/btc/block/activities
    method: GET
    data_selector: results
    params:
      limit: '20'
- name: get_collection
  endpoint:
    path: /v2/ord/btc/collections/{symbol}
    method: GET
    data_selector: response
    params: {}
- name: block_activities
  endpoint:
    path: /reference/get_v2-ord-btc-block-activities
    method: GET
- name: collection_stats
  endpoint:
    path: /reference/get_v2-ord-btc-stat
    method: GET
- name: activities
  endpoint:
    path: /activities
    method: GET
    params:
      kind: buying_broadcasted
- name: activities
  endpoint:
    path: /v2/ord/btc/activities
    method: GET
    data_selector: activities
    params: {}
- name: tokens
  endpoint:
    path: /v2/ord/btc/tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tokens
  endpoint:
    path: /v2/ord/btc/tokens
    method: GET
    params:
      showAll: 'true'
      sortBy: priceAsc
- name: rare_sats_listings
  endpoint:
    path: /v2/ord/btc/raresats/listings
    method: GET
    data_selector: listings
    params:
      limit: 100
      offset: 0
- name: tokens
  endpoint:
    path: /v2/ord/btc/raresats/listings
    method: GET
    params:
      sortBy: priceAsc
      limit: 100
      offset: 0
- name: rune_info
  endpoint:
    path: /v2/ord/btc/runes/market/rune/info
    method: GET
- name: rune_market_info
  endpoint:
    path: /v2/ord/btc/runes/market/{rune}/info
    method: GET
- name: orders
  endpoint:
    path: /v2/ord/btc/runes/quote
    method: GET
- name: rune_quote
  endpoint:
    path: /v2/ord/btc/runes/quote
    method: GET
    data_selector: response
    params: {}
- name: market_sell
  endpoint:
    path: /v2/ord/btc/runes/psbt/get-market-sell
    method: POST
    data_selector: response
    params: {}
- name: runemarketorder
  endpoint:
    path: /v2/ord/btc/runes/psbt/get-market-sell
    method: POST
    data_selector: response
    params: {}
- name: buy_rune
  endpoint:
    path: /v2/ord/btc/runes/psbt/get-sweeping
    method: POST
- name: rune_sweeping
  endpoint:
    path: /v2/ord/btc/runes/psbt/get-sweeping
    method: POST
- name: create_rune_sell_order
  endpoint:
    path: /v2/ord/btc/runes/psbt/order/create
    method: POST
- name: create_rune_sell_order
  endpoint:
    path: /v2/ord/btc/runes/psbt/order/create
    method: POST
    data_selector: response
    params: {}
- name: collections
  endpoint:
    path: /v3/rtp/{chain}/collections/v7
    method: GET
    data_selector: collections
- name: collections
  endpoint:
    path: /rtp/{chain}/collections/v7
    method: GET
    data_selector: collections
    params: {}
- name: tokens
  endpoint:
    path: /{chain}/tokens/v6
    method: GET
    data_selector: tokens
- name: tokens
  endpoint:
    path: /v3/rtp/{chain}/tokens/v6
    method: GET
    data_selector: tokens
- name: tokens
  endpoint:
    path: /reference/get_tokens-token-mint-listings-1
    method: GET
    data_selector: listings
- name: wallets
  endpoint:
    path: /reference/get_wallets-wallet-address-tokens-1
    method: GET
    data_selector: tokens
- name: collections
  endpoint:
    path: /reference/get_collections-symbol-activities-1
    method: GET
    data_selector: activities
- name: launchpad
  endpoint:
    path: /reference/get_launchpad-collections-1
    method: GET
    data_selector: collections
- name: asks
  endpoint:
    path: /rtp/{chain}/orders/asks/v5
    method: GET
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /v3/rtp/{chain}/orders/asks/v5
    method: GET
    data_selector: orders
    params:
      includeCriteriaMetadata: 'false'
      includeRawData: 'false'
      includeDynamicPricing: 'false'
      excludeEOA: 'false'
      normalizeRoyalties: 'false'
      sortBy: createdAt
      limit: '50'
- name: users_activity
  endpoint:
    path: /v3/rtp/{chain}/users/activity/v6
    method: GET
    data_selector: response
    params:
      limit: 20
      includeMetadata: true
      sortBy: eventTimestamp
- name: user_activity
  endpoint:
    path: /users/activity/v6
    method: GET
    data_selector: activities
    params:
      limit: 20
      sortBy: eventTimestamp
      includeMetadata: true
- name: attributes
  endpoint:
    path: /rtp/{chain}/collections/{collection}/attributes/all/v4
    method: GET
    data_selector: attributes
- name: attributes
  endpoint:
    path: /v3/rtp/{chain}/collections/{collection}/attributes/all/v4
    method: GET
- name: check_cross_posting_status
  endpoint:
    path: /v3/rtp/{chain}/cross-posting-orders/v1
    method: GET
    data_selector: status
    params: {}
- name: orders
  endpoint:
    path: /v3/rtp/{chain}/cross-posting-orders/v1
    method: GET
    data_selector: orders
- name: buy_tokens
  endpoint:
    path: /v3/rtp/{chain}/execute/buy/v7
    method: POST
- name: tokens
  endpoint:
    path: /v2/tokens/{token_mint}/listings
    method: GET
- name: get_listings_for_token
  endpoint:
    path: /v2/tokens/{token_mint}/listings
    method: GET
    data_selector: array of objects
    params:
      listingAggMode: 'false'
- name: tokens
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
- name: tokens_owned_by_wallet
  endpoint:
    path: /v2/wallets/{wallet_address}/tokens
    method: GET
    data_selector: array of objects
    params:
      limit: 100
      offset: 0
- name: activities
  endpoint:
    path: /collections/{symbol}/activities
    method: GET
- name: activities_of_a_collection
  endpoint:
    path: /v2/collections/{symbol}/activities
    method: GET
    data_selector: array of objects
    params:
      offset: '0'
      limit: '100'
- name: launchpad_collections
  endpoint:
    path: /v2/launchpad/collections
    method: GET
    params:
      offset: 0
      limit: 200
- name: instructions_buy
  endpoint:
    path: /v2/instructions/buy
    method: GET
- name: instructions_buy
  endpoint:
    path: /v2/instructions/buy
    method: GET
    data_selector: response
    params: {}
- name: pools
  endpoint:
    path: /v2/mmm/pools
    method: GET
    data_selector: results
- name: mmm_pools
  endpoint:
    path: /v2/mmm/pools
    method: GET
    params:
      collectionSymbol: string
      pools: array of strings
      owner: string
      offset: integer
      limit: integer
      field: string
      direction: string
- name: popular_collections
  endpoint:
    path: /marketplace/popular_collections
    method: GET
    data_selector: collections
    params:
      timeRange: 1d
- name: popular_collections
  endpoint:
    path: /v2/marketplace/popular_collections
    method: GET
    data_selector: array of objects
- name: magic_ticket_burns
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
    data_selector: object
- name: burn_txs
  endpoint:
    path: /v2/instructions/magic_ticket/burns
    method: GET
    data_selector: response
    params:
      walletAddress: required
      mintAddresses: required
notes:
- The API is rate-limited and some endpoints are gated by an API key.
- API is rate-limited and some endpoints are gated by an API key.
- Include an `Authorization` header with value `Bearer` followed by the API key.
- This public API is free to use, and the default limit is 120 QPM or 2 QPS.
- If calling the endpoints in batch, please add a small timeout between requests to
  avoid connection refusal.
- Query parameters include offset, limit, min_price, max_price, attributes, sort,
  sort_direction, and listingAggMode.
- Requires API key for authentication
- URL for this request expired after 30 days.
- The URL for this request expired after 30 days.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The pool will ignore user input *r* values if the token is a pNFT or has OCP enforced
  royalties.
- For pNFT, we will always enforce full royalties, and for OCP tokens, we will either
  enforce full royalties, or use the dynamic royalty if available.
- We need to determine if a pool is two-sided to decide whether to charge LP fees.
- We can determine if a pool is two-sided by looking at how much SOL is deposited
  in the pool and how many NFTs are deposited into the pool.
- If the SOL amount deposited is > spot price and the amount of NFTs deposited is
  > 1, then it is a two-sided pool.
- Some objects like Contact may return nulls in deeply nested fields
- For readability reasons, the red and blue lines do not extend past the 0, even though
  the pool can still buy NFTs after selling some.
- However, if the pool was to buy a token, we can simulate this by extending the lines
  to show what the effective buy/selling prices will be.
- After buying one token, the pool is willing to sell at approximately 1.5 SOL and
  buy at 1.15 SOL instead of the previous 1.94 SOL and 1.44 SOL.
- This public API is free to use, and the default limit is 30 QPM.
- Unauthorized requests share the same 'demo' key of the 30 QPM, so it's possible
  that you will see some 429 status code when trying it.
- Array of UUIDs of the orders to be cancelled; cannot be empty and maximum of 20.
- The amount for the swap must be represented as a string to accommodate large integers.
- Requires an API key for authorization.
- floorAskPrice for all attributes might not be returned on collections with more
  than 10k tokens.
- Attributes are case sensitive.
- Please use the `/cross-posting-orders/v1` to check the status on cross posted bids.
- Requires setup of API key for authorization
- Endpoint for creating a pool requires multiple query parameters.
- Query parameters required for fulfill sell instruction
- Requires setup of connected app in API
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your API key'
- '404 Not Found: Resource does not exist'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api-mainnet.magiceden.dev
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
