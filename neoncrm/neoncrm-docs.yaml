resources:
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: activities
  endpoint:
    path: /activities
    method: POST
- name: donations
  endpoint:
    path: /donations
    method: POST
- name: events
  endpoint:
    path: /events
    method: GET
- name: memberships
  endpoint:
    path: /memberships
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: POST
- name: pledges
  endpoint:
    path: /pledges
    method: POST
- name: pledge
  endpoint:
    path: /pledges/{id}
    method: GET
- name: pledge_payment
  endpoint:
    path: /pledges/{id}/pledgePayments
    method: GET
- name: installment
  endpoint:
    path: /pledges/{pledgeId}/installments
    method: GET
- name: activity_statuses
  endpoint:
    path: /properties/activityStatuses
    method: GET
- name: address_types
  endpoint:
    path: /properties/addressTypes
    method: GET
- name: company_types
  endpoint:
    path: /properties/companyTypes
    method: GET
- name: countries
  endpoint:
    path: /properties/countries
    method: GET
- name: current_system_user
  endpoint:
    path: /properties/currentSystemUser
    method: GET
- name: event_categories
  endpoint:
    path: /properties/eventCategories
    method: GET
- name: event_topics
  endpoint:
    path: /properties/eventTopics
    method: GET
- name: funds
  endpoint:
    path: /properties/funds
    method: GET
- name: genders
  endpoint:
    path: /properties/genders
    method: GET
- name: individual_types
  endpoint:
    path: /properties/individualTypes
    method: GET
- name: organization_profile
  endpoint:
    path: /properties/organizationProfile
    method: GET
- name: prefixes
  endpoint:
    path: /properties/prefixes
    method: GET
- name: purposes
  endpoint:
    path: /properties/purposes
    method: GET
- name: relation_types
  endpoint:
    path: /properties/relationTypes
    method: GET
- name: solicitation_methods
  endpoint:
    path: /properties/solicitationMethods
    method: GET
- name: sources
  endpoint:
    path: /properties/sources
    method: GET
- name: state_provinces
  endpoint:
    path: /properties/stateProvinces
    method: GET
- name: system_timezones
  endpoint:
    path: /properties/systemTimezones
    method: GET
- name: system_users
  endpoint:
    path: /properties/systemUsers
    method: GET
- name: accounts
  endpoint:
    path: /api/accounts/
    method: GET
- name: activities
  endpoint:
    path: /api/activities/
    method: GET
- name: donations
  endpoint:
    path: /api/donations/
    method: GET
- name: memberships
  endpoint:
    path: /api/memberships/
    method: GET
- name: store
  endpoint:
    path: /api/store/
    method: GET
- name: individual_account
  endpoint:
    path: /api/accounts/create-individual-account
    method: POST
- name: company_account
  endpoint:
    path: /api/accounts/create-organization-account
    method: POST
- name: donations
  endpoint:
    path: /api/donations/list-donations/
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /api/events/list-events/
    method: GET
    data_selector: records
    params: {}
- name: memberships
  endpoint:
    path: /api/memberships/list-members/
    method: GET
    data_selector: records
    params: {}
- name: store_purchases
  endpoint:
    path: /api/store/store-purchases/list-orders/
    method: GET
    data_selector: records
    params: {}
- name: Activities
  endpoint:
    path: /api-v2/Activities
    method: GET
- name: custom_object
  endpoint:
    path: /api/custom-objects/list-custom-objects/
    method: GET
- name: custom_object_record
  endpoint:
    path: /api/custom-objects/list-custom-object-records/
    method: GET
- name: webhooks
  endpoint:
    path: /api/webhooks
    method: POST
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: activities
  endpoint:
    path: /activities
    method: POST
- name: donations
  endpoint:
    path: /donations
    method: POST
- name: events
  endpoint:
    path: /events
    method: GET
- name: memberships
  endpoint:
    path: /memberships
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: POST
- name: pledges
  endpoint:
    path: /pledges/{id}
    method: GET
- name: pledgePayments
  endpoint:
    path: /pledges/{id}/pledgePayments
    method: GET
- name: installments
  endpoint:
    path: /pledges/{pledgeId}/installments
    method: GET
- name: activityStatuses
  endpoint:
    path: /properties/activityStatuses
    method: GET
- name: addressTypes
  endpoint:
    path: /properties/addressTypes
    method: GET
- name: companyTypes
  endpoint:
    path: /properties/companyTypes
    method: GET
- name: countries
  endpoint:
    path: /properties/countries
    method: GET
- name: currentSystemUser
  endpoint:
    path: /properties/currentSystemUser
    method: GET
- name: eventCategories
  endpoint:
    path: /properties/eventCategories
    method: GET
- name: eventTopics
  endpoint:
    path: /properties/eventTopics
    method: GET
- name: funds
  endpoint:
    path: /properties/funds
    method: GET
- name: genders
  endpoint:
    path: /properties/genders
    method: GET
- name: individualTypes
  endpoint:
    path: /properties/individualTypes
    method: GET
- name: organizationProfile
  endpoint:
    path: /properties/organizationProfile
    method: GET
- name: prefixes
  endpoint:
    path: /properties/prefixes
    method: GET
- name: purposes
  endpoint:
    path: /properties/purposes
    method: GET
- name: relationTypes
  endpoint:
    path: /properties/relationTypes
    method: GET
- name: solicitationMethods
  endpoint:
    path: /properties/solicitationMethods
    method: GET
- name: sources
  endpoint:
    path: /properties/sources
    method: GET
- name: stateProvinces
  endpoint:
    path: /properties/stateProvinces
    method: GET
- name: systemTimezones
  endpoint:
    path: /properties/systemTimezones
    method: GET
- name: systemUsers
  endpoint:
    path: /properties/systemUsers
    method: GET
- name: recurringDonations
  endpoint:
    path: /recurring
    method: GET
- name: shippingAddresses
  endpoint:
    path: /shippingAddresses
    method: POST
- name: softCredits
  endpoint:
    path: /softCredits
    method: GET
- name: volunteers
  endpoint:
    path: /volunteers
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: individual_accounts
  endpoint:
    path: /accounts/individuals
    method: GET
- name: organization_accounts
  endpoint:
    path: /accounts/organizations
    method: GET
- name: custom_fields
  endpoint:
    path: /services/api/common/listCustomFields
    method: GET
    params:
      searchCriteria.component: Account
- name: custom_fields
  endpoint:
    path: /listcustomfields
    method: POST
    data_selector: customfields
    params:
      searchCriteria.component: Account
- name: credit_card_types
  endpoint:
    path: /listCreditCardTypes
    method: GET
    data_selector: creditcardtypes
    params:
      userSessionId: '[session id]'
- name: credit_card_type
  endpoint:
    path: /ListCreditCardTypes
    method: GET
    data_selector: creditCardType
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
- name: list_accounts
  endpoint:
    path: /services/api/account/listAccounts
    method: GET
    data_selector: records
- name: list_donations
  endpoint:
    path: /services/api/donations/listDonations
    method: GET
    data_selector: records
- name: list_events
  endpoint:
    path: /services/api/events/listEvents
    method: GET
    data_selector: records
- name: list_memberships
  endpoint:
    path: /services/api/memberships/listMemberships
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /account/listAccounts
    method: GET
    params:
      outputfields.idnamepair.id: ''
      outputfields.idnamepair.name: Account%20Id
      searches.search.key: Email
      searches.search.searchOperator: EQUAL
      searches.search.value: test@test.net
      page.currentPage: 1
      page.pageSize: 10
      page.sortColumn: Last%20Name
      page.sortDirection: ASC
- name: donations
  endpoint:
    path: /donations/list-donations
    method: GET
- name: campaigns
  endpoint:
    path: /donations/list-campaigns
    method: GET
- name: funds
  endpoint:
    path: /donations/list-funds
    method: GET
- name: purposes
  endpoint:
    path: /donations/list-purposes
    method: GET
- name: recurring_donors
  endpoint:
    path: /donations/list-recurring-donors
    method: GET
- name: solicitation_methods
  endpoint:
    path: /donations/list-solicitation-methods
    method: GET
- name: update_payment
  endpoint:
    path: /services/api/common/updatePayment
    method: GET
    data_selector: updatePaymentResponse
    params:
      responseType: json
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: transaction.payments.payment
    params:
      incremental: donationId
- name: events
  endpoint:
    path: /api/events/list-events/
    method: GET
    data_selector: events
- name: event_attendees
  endpoint:
    path: /api/events/retrieve-event-attendees/
    method: GET
    data_selector: attendees
- name: membership
  endpoint:
    path: /api/memberships/
    method: GET
- name: membership_terms
  endpoint:
    path: /api/memberships/list-membership-terms/
    method: GET
- name: membership_history
  endpoint:
    path: /api/memberships/list-membership-history/
    method: GET
- name: members
  endpoint:
    path: /api/memberships/list-members/
    method: GET
- name: store
  endpoint:
    path: /api/store
    method: GET
- name: custom_objects
  endpoint:
    path: /custom-objects/
    method: GET
- name: custom_object_records
  endpoint:
    path: /custom-object-records/
    method: GET
- name: update_custom_object_email_notification
  endpoint:
    path: /services/api/customObject/updateCustomObjectEmailNotification
    method: GET
    data_selector: updateCustomObjectEmailNotificationResponse
    params:
      userSessionId: '[session id]'
      notificationType: API
      enable: 'TRUE'
      objectApiName: ExampleObject_c
- name: list_custom_object_layouts
  endpoint:
    path: /services/api/customObject/listCustomObjectLayouts
    method: GET
    data_selector: listCustomObjectLayoutsResponse.layoutDetails.layoutDetail
    params:
      userSessionId: '[session_id]'
      objectApiName: Custom_Event_c
      layoutType: FORM
- name: custom_object_relations
  endpoint:
    path: /services/api/customObject/listCustomObjectChildRelations
    method: GET
    data_selector: customObjectRelations.customObjectRelation
    params:
      userSessionId: '[session id]'
      objectApiName: Custom_Event_c
- name: custom_object_list_layout
  endpoint:
    path: /services/api/customObject/retrieveCustomObjectListLayout
    method: GET
    data_selector: retrieveCustomObjectListLayoutResponse.customObjectListLayout
    params:
      userSessionId: '[session id]'
      layoutId: '27'
- name: createCustomObjectListLayout
  endpoint:
    path: /services/api/customObject/createCustomObjectListLayout
    method: POST
    data_selector: createCustomObjectListLayoutResponse
- name: update_custom_object_list_layout
  endpoint:
    path: /services/api/customObject/updateCustomObjectListLayout
    method: POST
- name: delete_custom_object_list_layout
  endpoint:
    path: /services/api/customObject/deleteCustomObjectListLayout
    method: GET
    data_selector: deleteCustomObjectListLayoutResponse
    params:
      userSessionId: '[session_id]'
      objectApiName: Custom_Event_c
      layoutId: '26'
- name: retrieve_custom_object_form_layout
  endpoint:
    path: /services/api/customObject/retrieveCustomObjectFormLayout
    method: GET
    data_selector: retrieveCustomObjectFormLayoutResponse.customObjectFormLayout
    params:
      userSessionId: ''
      layoutId: '53'
- name: create_custom_object_form_layout
  endpoint:
    path: /services/api/customObject/createCustomObjectFormLayout
    method: POST
    data_selector: createCustomObjectFormLayoutResponse
- name: update_custom_object_form_layout
  endpoint:
    path: /services/api/customObject/updateCustomObjectFormLayout
    method: POST
    data_selector: updateCustomObjectFormLayoutResponse
    params:
      userSessionId: '[session_id]'
      customObjectFormLayout.objectApiName: Custom_Event_c
      customObjectFormLayout.layoutId: 53
      customObjectFormLayout.layoutName: Test Layout
      customObjectFormLayout.isDefault: true
      customObjectFormLayout.formFields.layoutField.objectApiName: Custom_Event_c
      customObjectFormLayout.formFields.layoutField.fieldApiName: Account_c
- name: delete_custom_object_form_layout
  endpoint:
    path: /services/api/customObject/deleteCustomObjectFormLayout
    method: GET
    params:
      userSessionId: '[session_id]'
      objectApiName: Custom_Event_c
      layoutId: '50'
- name: webhook
  endpoint:
    path: /api/webhooks/api-2
    method: POST
    data_selector: data
    params: {}
notes:
- 'Specify the API version by including the header NEON-API-VERSION: 2.X with every
  request.'
- On October 18, 2025 we will be deprecating Neon CRM API v2.8.
- Some objects may return nulls in deeply nested fields
- Neon CRM uses API keys and Org ID for authentication.
- When pushing data into Neon CRM from your app, it is important to consider duplicates.
- Webhooks can be managed either from the user interface or through the Webhooks API.
- If a webhook fails, it will be retried up to 3 times, with 2-second intervals between
  attempts.
- Results are returned in either JSON or XML format
- All requests must contain a userSessionID
- Use the organization ID as the username and an API key as the password for HTTP
  basic authentication.
- Neon CRM has had 99.95% uptime since 2004.
- Some issues may need to be resolved as part of a scheduled development cycle.
- Accounts represent the constituents of a nonprofit organization.
- This method returns a list of credit card types that have been enabled in a given
  NeonCRM system.
- Activities are related to and dependent on several other data types in NeonCRM.
- Results are paginated with a default page size of 200.
- You can specify your own page size in the request parameters.
- Donations are related to several other data types in NeonCRM.
- The Update Payment method allows you to update a payment for an existing transaction.
- Memberships are sorted into different levels.
- Membership terms are configured in the NeonCRM system settings.
- Some configuration options found in the UI are not available through the API.
- Updates settings for a custom object’s email notifications.
- Retrieves a list of other Custom Objects which reference this object through a relationship.
- To add Search Criteria fields to your layout, include both the objectApiName and
  fieldApiName parameters for each Search Criteria field. Fields will display in the
  sequence you send them.
- To add List fields (columns) to your layout, include both the objectApiName and
  fieldApiName parameters for each field. Fields will display in the sequence you
  send them.
- Deletes one specific List layout for a custom object.
- Retrieves one specific Form layout for a custom object.
- NeonCRM supports webhook POST notifications for actions within the system.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '222 Merged Account: The account ID you provided in your request has since been
  merged into another account.'
- Logged in as system user not supported
- Invalid `redirect_uri` parameter
- 'Invalid Request: Authorization code invalid'
- '401 Unauthorized: Invalid user session ID.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '101: Payment amount is required.'
- '102: Tender type id or name is required.'
- '103: Tender type id or name is invalid.'
- '104: Echeck routing number is required.'
- '105: Echeck account number is required.'
- '106: Echeck account owner is required.'
- '107: Credit card number is required.'
- '108: Credit card expiration date is required.'
- '109: Credit card CVV2 is required.'
- '110: Credit card type is invalid.'
- '150: Unable to process payment.'
- '151: Payment id is invalid.'
- '152: Payment id is required.'
- '153: Succeed credit card online or e-check payment cannot be reprocessed.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.neoncrm.com/neonws
  headers:
    Accept: application/json
source_metadata: null
