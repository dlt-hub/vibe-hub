resources:
- name: single_bin_lookup
  endpoint:
    path: /bins
    method: GET
    data_selector: card
    params: {}
- name: multiple_bin_lookup
  endpoint:
    path: /bins/multiple
    method: POST
    data_selector: results
    params: {}
- name: transactions
  endpoint:
    path: /data-ingestion-api/endpoint/transactions
    method: POST
- name: refunds
  endpoint:
    path: /data-ingestion-api/endpoint/refunds
    method: POST
- name: disputes
  endpoint:
    path: /data-ingestion-api/endpoint/disputes
    method: POST
- name: disbursements
  endpoint:
    path: /data-ingestion-api/endpoint/disbursements
    method: POST
- name: fees
  endpoint:
    path: /data-ingestion-api/endpoint/fees
    method: POST
- name: healthcheck
  endpoint:
    path: /data-ingestion-api/endpoint/healthcheck
    method: GET
- name: charts
  endpoint:
    path: /insights/charts
    method: GET
    data_selector: charts
    params: {}
- name: metrics
  endpoint:
    path: /insights/metrics/overview
    method: GET
    data_selector: metrics
    params: {}
- name: fraud
  endpoint:
    path: /insights/risks#fraud
    method: GET
    data_selector: fraud
    params: {}
- name: penalties
  endpoint:
    path: /insights/costs#penalties
    method: GET
    data_selector: penalties
    params: {}
- name: bin_data
  endpoint:
    path: /insights/bin-data
    method: GET
    data_selector: bin_data
    params: {}
- name: declines
  endpoint:
    path: /insights/metrics/declines
    method: GET
    data_selector: declines
    params: {}
- name: events
  endpoint:
    path: /insights/events
    method: GET
    data_selector: transactions
    params: {}
- name: alerts
  endpoint:
    path: /insights/alerts
    method: GET
    data_selector: alertMetrics
    params: {}
- name: Pagos Production Domains
  endpoint:
    path: /pagos/production/domains
    method: GET
    data_selector: domains
    params: {}
- name: Pagos Sandbox Domains
  endpoint:
    path: /pagos/sandbox/domains
    method: GET
    data_selector: domains
    params: {}
- name: Data Ingestion IP Addresses
  endpoint:
    path: /pagos/data/ingestion/ip-addresses
    method: GET
    data_selector: ip_addresses
    params: {}
- name: Account Updater and Network Tokenization IP Addresses
  endpoint:
    path: /pagos/account-updater/network-tokenization/ip-addresses
    method: GET
    data_selector: ip_addresses
    params: {}
- name: BIN Data IP Addresses
  endpoint:
    path: /pagos/bin-data/ip-addresses
    method: GET
    data_selector: ip_addresses
    params: {}
- name: charts
  endpoint:
    path: /charts
    method: POST
    data_selector: data
    params: {}
- name: Enhanced Data
  endpoint:
    path: /insights/opportunities/enhanced-data
    method: GET
    data_selector: estimated_opportunity
    params: {}
- name: Network Tokenization
  endpoint:
    path: /insights/opportunities/network-tokenization
    method: GET
    data_selector: estimated_opportunity
    params: {}
- name: Debit Routing
  endpoint:
    path: /insights/opportunities/debit-routing
    method: GET
    data_selector: estimated_opportunity
    params: {}
- name: chargebacks
  endpoint:
    path: /insights/chargebacks
    method: GET
    data_selector: chargebackRecords
- name: fraud
  endpoint:
    path: /insights/fraud
    method: GET
    data_selector: fraudRecords
- name: BIN Data
  endpoint:
    path: /bin-data-APIs/bin-data-api-overview
    method: GET
    data_selector: data
    params: {}
- name: BIN Details
  endpoint:
    path: /bin-data-APIs/bin-data-api-dictionary
    method: GET
    data_selector: details
    params: {}
- name: metadata
  endpoint:
    path: /custom/data/metadata
    method: GET
    data_selector: records
- name: soft_descriptors
  endpoint:
    path: /custom/data/soft_descriptors
    method: GET
    data_selector: records
- name: BIN Data
  endpoint:
    path: /bin-data-APIs/bin-data-api-overview
    method: GET
- name: BIN Data
  endpoint:
    path: /bin-data-APIs/bin-data-api-overview
    method: GET
    data_selector: records
- name: stored_credential
  endpoint:
    path: /payments/stored-credentials
    method: GET
    data_selector: stored_credentials
    params: {}
- name: transaction_retry_deduplication
  endpoint:
    path: /payments-basics/transaction-retry-deduplication
    method: GET
    data_selector: data
    params: {}
- name: transactions_enrichment
  endpoint:
    path: /v1/transactions/enrichment
    method: POST
    data_selector: metadata
    params: {}
- name: transactions_enrichment_all
  endpoint:
    path: /transactions/enrichment
    method: POST
    data_selector: metadata
    params: {}
- name: healthcheck
  endpoint:
    path: /transactions/healthcheck
    method: GET
    data_selector: status
    params: {}
- name: single_bin_lookup
  endpoint:
    path: /bins
    method: GET
    data_selector: card
    params:
      bin: bin
- name: multiple_bin_lookup
  endpoint:
    path: /bins/multiple
    method: POST
    data_selector: bins
    params: {}
- name: submit_update_inquiries
  endpoint:
    path: /account-updater/endpoint/inquiries
    method: POST
- name: check_inquiry_status
  endpoint:
    path: /account-updater/endpoint/status
    method: GET
- name: download_updated_card_details
  endpoint:
    path: /account-updater/endpoint/download
    method: GET
- name: inquiry
  endpoint:
    path: /account-updater/endpoint/rtau-inquiry
    method: POST
    data_selector: accountEncrypted
    params: {}
- name: transactions
  endpoint:
    path: /data-ingestion-api/endpoint/transactions
    method: POST
- name: refunds
  endpoint:
    path: /data-ingestion-api/endpoint/refunds
    method: POST
- name: disputes
  endpoint:
    path: /data-ingestion-api/endpoint/disputes
    method: POST
- name: disbursements
  endpoint:
    path: /data-ingestion-api/endpoint/disbursements
    method: POST
- name: fees
  endpoint:
    path: /data-ingestion-api/endpoint/fees
    method: POST
- name: enrichment_one
  endpoint:
    path: /data-ingestion-api/endpoint/enrichment
    method: POST
- name: enrichment_all
  endpoint:
    path: /data-ingestion-api/endpoint/enrichment-all
    method: POST
- name: healthcheck
  endpoint:
    path: /data-ingestion-api/endpoint/healthcheck
    method: GET
- name: transactions
  endpoint:
    path: /data-ingestion-api/endpoint/transactions
    method: POST
- name: refunds
  endpoint:
    path: /data-ingestion-api/endpoint/refunds
    method: POST
- name: disputes
  endpoint:
    path: /data-ingestion-api/endpoint/disputes
    method: POST
- name: disbursements
  endpoint:
    path: /data-ingestion-api/endpoint/disbursements
    method: POST
- name: fees
  endpoint:
    path: /data-ingestion-api/endpoint/fees
    method: POST
- name: healthcheck
  endpoint:
    path: /data-ingestion-api/endpoint/healthcheck
    method: GET
- name: transactions
  endpoint:
    path: /data-ingestion-api/endpoint/transactions
    method: POST
- name: refunds
  endpoint:
    path: /data-ingestion-api/endpoint/refunds
    method: POST
- name: disputes
  endpoint:
    path: /data-ingestion-api/endpoint/disputes
    method: POST
- name: disbursements
  endpoint:
    path: /data-ingestion-api/endpoint/disbursements
    method: POST
- name: fees
  endpoint:
    path: /data-ingestion-api/endpoint/fees
    method: POST
- name: healthcheck
  endpoint:
    path: /data-ingestion-api/endpoint/healthcheck
    method: GET
- name: healthcheck
  endpoint:
    path: /data-ingestion-api/endpoint/healthcheck
    method: GET
- name: transactions
  endpoint:
    path: /data-ingestion-api/endpoint/transactions
    method: POST
- name: refunds
  endpoint:
    path: /data-ingestion-api/endpoint/refunds
    method: POST
- name: disputes
  endpoint:
    path: /data-ingestion-api/endpoint/disputes
    method: POST
- name: disbursements
  endpoint:
    path: /data-ingestion-api/endpoint/disbursements
    method: POST
- name: fees
  endpoint:
    path: /data-ingestion-api/endpoint/fees
    method: POST
- name: transactions
  endpoint:
    path: /v1/{account_id}/transactions
    method: POST
    data_selector: response
    params: {}
- name: refunds
  endpoint:
    path: /v1/{account_id}/refunds
    method: POST
    data_selector: refund_response
    params: {}
- name: disputes
  endpoint:
    path: /v1/{account_id}/disputes
    method: POST
    data_selector: disputes
- name: disbursements
  endpoint:
    path: /v1/{account_id}/disbursements
    method: POST
    data_selector: disbursement
    params: {}
- name: fees
  endpoint:
    path: /v1/{account_id}/fees
    method: POST
    data_selector: data
    params: {}
- name: enrichment
  endpoint:
    path: /v1/{account_id}/transactions/enrichment
    method: POST
    data_selector: enrichment
    params: {}
- name: enrichment_all_transactions
  endpoint:
    path: /v1/transactions/enrichment
    method: POST
    data_selector: null
    params: {}
- name: healthcheck
  endpoint:
    path: /healthcheck
    method: GET
- name: BIN Data API
  endpoint:
    path: /bin-data-APIs/bin-data-api-overview
    method: GET
- name: BIN Data Batch API
  endpoint:
    path: /bin-data-APIs/batch-api-overview
    method: GET
- name: Batch Account Updater
  endpoint:
    path: /account-updater/batch-api-overview
    method: POST
- name: Real-Time Account Updater
  endpoint:
    path: /account-updater/real-time-api-overview
    method: POST
- name: Fetch Account Data
  endpoint:
    path: /network-tokenization/endpoint/account
    method: GET
- name: Fetch Asset
  endpoint:
    path: /network-tokenization/endpoint/assets
    method: GET
- name: Delete a Token
  endpoint:
    path: /network-tokenization/endpoint/deletes
    method: DEL
- name: Resume a Suspended Token
  endpoint:
    path: /network-tokenization/endpoint/resumes
    method: PUT
- name: Suspend an Active Token
  endpoint:
    path: /network-tokenization/endpoint/suspends
    method: PUT
- name: Tokenize a PAN
  endpoint:
    path: /network-tokenization/endpoint/tokenize
    method: POST
- name: Get Token Status
  endpoint:
    path: /network-tokenization/endpoint/status
    method: GET
- name: Create a Cryptogram
  endpoint:
    path: /network-tokenization/endpoint/transact
    method: POST
- name: Fetch Account Data
  endpoint:
    path: /network-tokenization/endpoint/account
    method: GET
- name: Fetch Asset
  endpoint:
    path: /network-tokenization/endpoint/assets
    method: GET
- name: Delete a Token
  endpoint:
    path: /network-tokenization/endpoint/deletes
    method: DEL
- name: Resumes a Suspended Token
  endpoint:
    path: /network-tokenization/endpoint/resumes
    method: PUT
- name: Suspends an Active Token
  endpoint:
    path: /network-tokenization/endpoint/suspends
    method: PUT
- name: Tokenize a PAN
  endpoint:
    path: /network-tokenization/endpoint/tokenize
    method: POST
- name: Get Token Status
  endpoint:
    path: /network-tokenization/endpoint/status
    method: GET
- name: Create a Cryptogram
  endpoint:
    path: /network-tokenization/endpoint/transact
    method: POST
- name: tokenize
  endpoint:
    path: /network-tokenization/endpoint/tokenize
    method: POST
- name: transact
  endpoint:
    path: /network-tokenization/endpoint/transact
    method: POST
- name: status
  endpoint:
    path: /network-tokenization/endpoint/status
    method: GET
- name: account
  endpoint:
    path: /network-tokenization/endpoint/account
    method: GET
- name: assets
  endpoint:
    path: /network-tokenization/endpoint/assets
    method: GET
- name: resumes
  endpoint:
    path: /network-tokenization/endpoint/resumes
    method: PUT
- name: suspends
  endpoint:
    path: /network-tokenization/endpoint/suspends
    method: PUT
- name: deletes
  endpoint:
    path: /network-tokenization/endpoint/deletes
    method: DEL
- name: account
  endpoint:
    path: /network-tokenization/endpoint/account
    method: GET
- name: assets
  endpoint:
    path: /network-tokenization/endpoint/assets
    method: GET
- name: deletes
  endpoint:
    path: /network-tokenization/endpoint/deletes
    method: DEL
- name: resumes
  endpoint:
    path: /network-tokenization/endpoint/resumes
    method: PUT
- name: suspends
  endpoint:
    path: /network-tokenization/endpoint/suspends
    method: PUT
- name: tokenize
  endpoint:
    path: /network-tokenization/endpoint/tokenize
    method: POST
- name: status
  endpoint:
    path: /network-tokenization/endpoint/status
    method: GET
- name: transact
  endpoint:
    path: /network-tokenization/endpoint/transact
    method: POST
- name: account
  endpoint:
    path: /toucan/tokens/{tokenRefId}/account
    method: GET
    data_selector: metadata
- name: fetch_asset
  endpoint:
    path: /toucan/tokens/assets/{assetId}
    method: GET
    data_selector: assetData
    params: {}
- name: delete_token
  endpoint:
    path: /toucan/tokens/{tokenRefId}/delete
    method: DELETE
    data_selector: status
    params: {}
- name: resume_suspended_token
  endpoint:
    path: /toucan/tokens/{tokenRefId}/resume
    method: PUT
    data_selector: application/json
    params: {}
- name: suspend_active_token
  endpoint:
    path: /toucan/tokens/{tokenRefId}/suspend
    method: PUT
    data_selector: application/json
    params: {}
- name: tokenize_pan
  endpoint:
    path: /toucan/tokens/tokenize
    method: POST
    data_selector: cardNetworkName
    params: {}
- name: get_token_status
  endpoint:
    path: /toucan/tokens/{tokenRefId}/status
    method: GET
    data_selector: cardNetworkName
    params: {}
- name: create_cryptogram
  endpoint:
    path: /toucan/tokens/transact/{tokenRefId}
    method: POST
    data_selector: cryptogram
- name: get_token_status
  endpoint:
    path: /network-tokenization/endpoint/status
    method: GET
    data_selector: status
- name: single_bin_lookup
  endpoint:
    path: /bin-data-APIs/endpoint/single
    method: GET
- name: multiple_bin_lookups
  endpoint:
    path: /bin-data-APIs/endpoint/multiple
    method: POST
- name: single_bin_lookup
  endpoint:
    path: /bins
    method: GET
    data_selector: card
    params:
      bin: <string>
- name: multiple_bin_lookups
  endpoint:
    path: /bins/multiple
    method: POST
    data_selector: cards
    params: {}
- name: Get Snapshot File of All BINs
  endpoint:
    path: /bin-data-APIs/endpoint/file-snapshot
    method: GET
- name: Transactions
  endpoint:
    path: /data-ingestion-api/endpoint/transactions
    method: POST
- name: Refunds
  endpoint:
    path: /data-ingestion-api/endpoint/refunds
    method: POST
- name: Disputes
  endpoint:
    path: /data-ingestion-api/endpoint/disputes
    method: POST
- name: Disbursements
  endpoint:
    path: /data-ingestion-api/endpoint/disbursements
    method: POST
- name: Fees
  endpoint:
    path: /data-ingestion-api/endpoint/fees
    method: POST
- name: 'Enrichment: One Data Connection'
  endpoint:
    path: /data-ingestion-api/endpoint/enrichment
    method: POST
- name: 'Enrichment: All Transactions'
  endpoint:
    path: /data-ingestion-api/endpoint/enrichment-all
    method: POST
- name: Healthcheck
  endpoint:
    path: /data-ingestion-api/endpoint/healthcheck
    method: GET
notes:
- The Pagos BIN Data API doesn’t have a separate testing environment.
- All data connections are now accessible via the Pagos Service Panel.
- To successfully sign into your Pagos account, your network must grant you access
  to the Pagos qualified domains.
- The full list of Pagos IP addresses is required for payment processors to allowlist.
- Alerts provides a daily health check for payment processing strategy—no manual setup
  required.
- Data connection type determines when Pagos receives and reviews segments of data
  for anomalies.
- The Date Range filter defaults to a Monthly time interval, because processors provide
  cost data on a monthly cadence.
- Any time-sensitive data appears in Coordinated Universal Time (UTC).
- At this time, you can only apply the Processor filter option, which allows you to
  filter your data down to the processor, data source name, or MID level.
- This tab excludes PayPal or Klarna transactions
- Currently, Adyen, Braintree, and JP Morgan Chase are the only processors that provide
  clear indicators when a debit transaction was routed through an alternative network
- This page only appears if you import payments data from Adyen, Braintree, or Stripe
  into your Pagos account.
- The Durbin Clarification mandates 100% issuer support of PINless debit capability
  on all issued debit cards by July 1, 2023.
- This logic doesn’t account for every single duplicate retry in your transaction
  data. Because it hinges on card information (BIN, last four digits of the card number,
  and the card expiration date) it only serves to remove duplicate debit, credit,
  and prepaid card transactions from your data; other payment methods aren’t considered.
- Requests for BIN '999999' won’t count towards your quota.
- Pagos must register your business with Visa and Mastercard before accessing the
  API.
- You must encrypt any customer account details before sending requests.
- Generate an API Key for the BIN Database.
- All API requests must be made over HTTPS; calls made over plain HTTP will fail.
- API requests without authentication will also fail.
- To get started with SFTP Batch Data Ingestion, you must first request SFTP access
  from your Pagos account manager.
- Pagos systems will respond with a receipt file after processing the uploaded data
  file.
- Token suspension is only available for Visa and American Express cards.
- 'Sandbox Note: The status doesn’t persist after you suspend a token in the Network
  Tokenization Sandbox.'
- All calls to the Network Tokenization API must include an HMAC signature.
- Webhook verification is highly recommended, but isn’t required.
- The Network Tokenization sandbox is not available for self-signup at this time.
- The Pagos BIN Database provides accurate, up-to-date BIN data for each payment card
  your business processes.
- Account updater is a program offered by the major card brands to help businesses
  keep vaulted card data fresh.
- Pagos manages the relationships and connections with the card brands on your behalf
errors:
- 'REQUEST_LIMIT_EXCEEDED: 100 calls every 10 seconds for single BIN lookup.'
- 'REQUEST_LIMIT_EXCEEDED: 6 calls every 10 seconds for multiple BIN lookup.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 (bad request): No transaction identifier provided; please populate `order_id`
  and/or `transaction_id`'
- '401 (unauthorized): Authorization failed. Possible reasons include invalid API
  key or API key from another environment'
- Token suspension is only available for Visa and American Express cards.
- Once you delete a token, you cannot resume it.
- '400: InvalidProperty - A property validation check has failed.'
- '400: InvalidInput - The tokenization service could not find data linked with provided
  input.'
- '400: InvalidRequest - The tokenization service could not validate the request.'
- '400: UnavailableMerchantAccount - The merchant account is not available.'
- '400: CardEligibilityError - The card is not eligible for network tokenization.'
- '401: AuthenticationFailed - The tokenization service could not authenticate the
  request.'
- '404: InvalidTokenReference - The requested token could not be found.'
- '429: concurrentLimitExceeded - You exceeded the maximum allowed concurrent API
  calls.'
- '500: SystemError - A system error occurred.'
- '503: NetworkError - The network cannot process the request.'
- ProvisionDataExpired
- CardVerificationFailed
- CardNotEligible
- CardNotAllowed
- CardDeclined
- ProvisionNotAllowed
- InvalidTokenStatus
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 500 Internal Server Error
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '500: Internal Server Error'
- '400'
- '401'
- '403'
- '500'
- '201: card was tokenized'
- Too many requests. Please try again later.
- Trial for this account has ended. Please contact support@pagos.ai.
- BIN Data Batch API access is not allowed. Please contact support@pagos.ai
- This account is suspended. Please contact support@pagos.ai
- This API key is invalid.
- API requires an API key in ‘x-api-key’ header.
- Card BIN/IIN not found. Please contact support@pagos.ai
- '403 Forbidden: Invalid API key'
- '404 Not Found: Check the bin number'
- '200'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://secure.pagos.ai
  auth:
    type: oauth2
source_metadata: null
