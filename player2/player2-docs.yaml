resources:
- name: joules
  endpoint:
    path: /joules
    method: GET
    data_selector: joules
    params: {}
- name: npc_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
    params: {}
- name: image_generation
  endpoint:
    path: /image/generate
    method: POST
    data_selector: image
    params: {}
- name: chat_completion
  endpoint:
    path: /chat/completion
    method: POST
    data_selector: completion
    params: {}
- name: npc_conversation_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: image_generation
  endpoint:
    path: /generate/image
    method: POST
    data_selector: image
- name: npc_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: my_ai_friends_characters
  endpoint:
    path: /my_ai_friends
    method: GET
    data_selector: characters
- name: joule_balance
  endpoint:
    path: /joules
    method: GET
    data_selector: balance
- name: npcs_responses
  endpoint:
    path: /v1/npcs/responses
    method: GET
    data_selector: ''
    params: {}
- name: npc_history
  endpoint:
    path: /v1/npcs/{npc_id}/history
    method: GET
    data_selector: ''
    params: {}
- name: spawn_npc
  endpoint:
    path: /v1/npcs/spawn
    method: POST
    data_selector: ''
    params: {}
- name: send_message_to_npc
  endpoint:
    path: /v1/npcs/{npc_id}/chat
    method: POST
    data_selector: ''
    params: {}
- name: npc_history
  endpoint:
    path: /v1/npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: edit_image
  endpoint:
    path: /edit/image
    method: POST
    data_selector: image
- name: text_to_speech
  endpoint:
    path: /tts/speak
    method: POST
    data_selector: audio
- name: stream_text_to_speech
  endpoint:
    path: /tts/stream
    method: POST
    data_selector: audio
- name: speech_to_text
  endpoint:
    path: /stt/stream
    method: POST
- name: transcribe_audio
  endpoint:
    path: /stt/transcribe
    method: POST
- name: get_user_ai_friends
  endpoint:
    path: /my-ai-friends
    method: GET
- name: get_user_joule_balance
  endpoint:
    path: /joules/balance
    method: GET
- name: npc_responses
  endpoint:
    path: /v1/npcs/responses
    method: GET
    data_selector: npc_id
    params: {}
- name: npc_history
  endpoint:
    path: /v1/npcs/{npc_id}/history
    method: GET
    data_selector: history
    params: {}
- name: spawn_npc
  endpoint:
    path: /v1/npcs/spawn
    method: POST
    data_selector: npc_id
    params: {}
- name: send_message_to_npc
  endpoint:
    path: /v1/npcs/{npc_id}/chat
    method: POST
    data_selector: npc_id
    params: {}
- name: npc_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: npc_spawn
  endpoint:
    path: /npcs/spawn
    method: POST
    data_selector: npc
- name: npc_chat
  endpoint:
    path: /npcs/{npc_id}/chat
    method: POST
    data_selector: response
- name: joules
  endpoint:
    path: /joules
    method: GET
- name: npc
  endpoint:
    path: /npcs/spawn
    method: POST
- name: npc_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: spawn_npc
  endpoint:
    path: /npcs/spawn
    method: POST
    data_selector: npc
- name: chat_npc
  endpoint:
    path: /npcs/{npc_id}/chat
    method: POST
    data_selector: response
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
- name: image_generate
  endpoint:
    path: /image/generate
    method: POST
    data_selector: image
- name: image_edit
  endpoint:
    path: /image/edit
    method: POST
    data_selector: image
- name: login_device_new
  endpoint:
    path: /login/device/new
    method: POST
- name: login_device_token
  endpoint:
    path: /login/device/token
    method: POST
- name: login_authorization_code_token
  endpoint:
    path: /login/authorization_code/token
    method: POST
- name: health
  endpoint:
    path: /health
    method: GET
- name: tts_voices
  endpoint:
    path: /tts/voices
    method: GET
- name: tts_speak
  endpoint:
    path: /tts/speak
    method: POST
- name: tts_stream
  endpoint:
    path: /tts/stream
    method: POST
- name: stt_stream
  endpoint:
    path: /stt/stream
    method: GET
- name: audio_transcription
  endpoint:
    path: /stt/audio
    method: POST
    data_selector: application/octet-stream
- name: selected_characters
  endpoint:
    path: /selected_characters
    method: GET
    data_selector: application/json
- name: joules
  endpoint:
    path: /joules
    method: GET
    data_selector: application/json
- name: npc_chat_stream
  endpoint:
    path: /npcs/responses
    method: GET
    data_selector: application/json
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
- name: image_generate
  endpoint:
    path: /image/generate
    method: POST
    data_selector: image
- name: image_edit
  endpoint:
    path: /image/edit
    method: POST
    data_selector: image
- name: login_device_new
  endpoint:
    path: /login/device/new
    method: POST
- name: login_device_token
  endpoint:
    path: /login/device/token
    method: POST
- name: login_authorization_code_token
  endpoint:
    path: /login/authorization_code/token
    method: POST
- name: health
  endpoint:
    path: /health
    method: GET
- name: tts_voices
  endpoint:
    path: /tts/voices
    method: GET
- name: tts_speak
  endpoint:
    path: /tts/speak
    method: POST
- name: tts_stream
  endpoint:
    path: /tts/stream
    method: POST
- name: stt_stream
  endpoint:
    path: /stt/stream
    method: GET
- name: npc_responses
  endpoint:
    path: /npcs/responses
    method: GET
    data_selector: npc_id
- name: npc_spawn
  endpoint:
    path: /npcs/spawn
    method: POST
    data_selector: npc
- name: audio_transcription
  endpoint:
    path: /stt/audio
    method: POST
    data_selector: application/json
    params: {}
- name: selected_characters
  endpoint:
    path: /selected_characters
    method: GET
    data_selector: application/json
    params: {}
- name: get_joules
  endpoint:
    path: /joules
    method: GET
    data_selector: application/json
    params: {}
- name: npc_chat_stream
  endpoint:
    path: /npcs/responses
    method: GET
    data_selector: application/json
    params: {}
- name: npc_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
    params: {}
- name: npc_chat
  endpoint:
    path: /npcs/{npc_id}/chat
    method: POST
    data_selector: response
    params: {}
- name: npc_kill
  endpoint:
    path: /npcs/{npc_id}/kill
    method: POST
    data_selector: response
    params: {}
- name: npc_responses
  endpoint:
    path: /npcs/responses
    method: GET
    data_selector: npc_id
- name: npc_history
  endpoint:
    path: /v1/npcs/{npc_id}/history
    method: GET
    data_selector: history
    params:
      npc_id: UUID of the NPC to get conversation history for
- name: npc_history
  endpoint:
    path: /v1/npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: npc_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: npc_chat
  endpoint:
    path: /npcs/{npc_id}/chat
    method: POST
    data_selector: response
- name: npc_kill
  endpoint:
    path: /npcs/{npc_id}/kill
    method: POST
    data_selector: confirmation
- name: NpcApiChatResponse
  endpoint:
    path: /npcs/responses
    method: POST
    data_selector: message
    params: {}
- name: NpcChatCompletionRequest
  endpoint:
    path: /npcs/chat
    method: POST
    data_selector: data
    params: {}
- name: npc_history
  endpoint:
    path: /v1/npcs/{npc_id}/history
    method: GET
    data_selector: history
    params:
      npc_id: UUID of the NPC to get conversation history for (returned from /npcs/spawn)
- name: npc_history
  endpoint:
    path: /npcs/{npc_id}/history
    method: GET
    data_selector: history
- name: NpcApiChatResponse
  endpoint:
    path: /npcs/responses
    method: GET
    data_selector: message
    params: {}
- name: STTEnvelope
  endpoint:
    path: /stt/envelope
    method: POST
    data_selector: data
    params: {}
- name: games
  endpoint:
    path: /games
    method: GET
    data_selector: games
    params: {}
- name: game_list
  endpoint:
    path: /api/games
    method: GET
    data_selector: games
notes:
- You should never store user credentials outside of the user's device.
- Check the health of the API every 60 seconds to attribute usage.
- When joule balance is too low, API requests return an 'insufficient_credits' error.
- Keep the connection open for real-time responses.
- Ping events are sent every 15 seconds to keep connections alive.
- By using the Player2 API you agree to our Terms of Service.
- This endpoint supports both Server-Sent Events (SSE) and newline-delimited JSON
  streaming.
- Streaming only supports WAV and MP3 audio formats.
- The Service allows you to upload and share your gaming content.
- The Company disclaims any and all liability in connection with the Gaming Content.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Elefant AI
- No fees to use Player2, it offers a generous free daily recharge for players.
- Player2 pays for all the API costs for you.
- Player2 handles the technical aspects for game developers, including scaling services
  and device integration for TSS/STT.
errors:
- '401 Unauthorized: Authentication required - provide a valid Bearer token'
- '404 Not Found: NPC not found - the specified npc_id does not exist or has been
  deleted'
- '500 Internal Server Error: Please try again'
- 401 Authentication required - provide a valid Bearer token
- 404 NPC not found - the specified npc_id does not exist or has been deleted
- 500 Internal server error - please try again
- '401: Authentication required - provide a valid Bearer token'
- '404: NPC not found - the specified npc_id does not exist or has been deleted'
- '500: Internal server error - please try again'
- '400: Invalid request parameters'
- '401: The user must be authenticated.'
- '500: Internal server error'
- '402: Insufficient credits to complete the request.'
- '429: Rate limit exceeded - too many concurrent connections'
- '500: Internal server error - try reconnecting after a brief delay'
- '429: Rate limit exceeded - too many messages sent recently'
- '401 Unauthorized: Provide a valid Bearer token'
- 'CONNECTION_FAILED: Connection failed'
- 'CONNECTION_TIMEOUT: Connection timed out'
- 'CONNECTION_LOST: Connection lost'
- 'RECONNECT_FAILED: Reconnection failed'
- 'AUTHENTICATION_FAILED: Authentication failed'
- 'INVALID_API_KEY: API key is invalid'
- 'UNAUTHORIZED: Unauthorized access'
- 'INVALID_CONFIGURATION: Invalid configuration'
- 'UNSUPPORTED_FORMAT: Unsupported audio format'
- 'INVALID_SAMPLE_RATE: Invalid sample rate'
- 'AUDIO_VALIDATION_ERROR: Audio validation error'
- 'BUFFER_OVERFLOW: Buffer overflow error'
- 'AUDIO_PROCESSING_ERROR: Audio processing error'
- 'RATE_LIMIT_EXCEEDED: Rate limit exceeded'
- 'QUOTA_EXCEEDED: Quota exceeded'
- 'SESSION_NOT_FOUND: Session not found'
- 'SESSION_EXPIRED: Session expired'
- 'SESSION_CLOSED: Session closed'
- 'INTERNAL_ERROR: Internal server error'
- 'SERVICE_UNAVAILABLE: Service unavailable'
- 'DEEPGRAM_ERROR: Deepgram error'
- 'CONNECTION_FAILED: Connection to the server could not be established.'
- 'AUTHENTICATION_FAILED: The provided authentication information is invalid.'
- 'RATE_LIMIT_EXCEEDED: Too many requests have been made in a given time period.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - p2Key
  - BearerAuth
  - CookieAuth
client:
  base_url: https://api.player2.game/v1
  auth:
    type: oauth2
    flow: Authorization Code
source_metadata: null
