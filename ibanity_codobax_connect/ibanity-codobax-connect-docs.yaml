resources:
- name: accounting_office_consent
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: POST
    data_selector: data.attributes
    params: {}
- name: accounting_office_consents
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: POST
    data_selector: data
    params: {}
- name: accounting_office_consents
  endpoint:
    path: /accounting-office-consents
    method: GET
    data_selector: data
    params: {}
- name: document_search
  endpoint:
    path: /accounting-offices/{id}/document-searches
    method: POST
    data_selector: data
    params: {}
- name: accounting_office_consents
  endpoint:
    path: /accounting-office-consents
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_accounting_office_consent
  endpoint:
    path: /accounting-office-consents/accountingOfficeConsentId
    method: GET
    data_selector: data.attributes
    params: {}
- name: document_search
  endpoint:
    path: /accounting-offices/accountingOfficeId/document-searches
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_bank_account_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/bank-account-statements/bankAccountStatementId
    method: GET
    data_selector: data.attributes
    params: {}
- name: get_payroll_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/payroll-statements/payrollStatementId
    method: GET
    data_selector: data.attributes
    params: {}
- name: payroll_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/payroll-statements/payrollStatementId
    method: GET
    data_selector: data
- name: credit_card_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/credit-card-statements/creditCardStatementId
    method: GET
    data_selector: data
- name: sales_invoice
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/sales-invoices/salesInvoiceId
    method: GET
    data_selector: data
- name: purchase_invoice
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/purchase-invoices/purchaseInvoiceId
    method: GET
    data_selector: data
- name: bulk_payment_initiation
  endpoint:
    path: /api/bulk-payment-initiation
    method: POST
- name: account_information
  endpoint:
    path: /api/account-information
    method: GET
- name: account_reports
  endpoint:
    path: /api/account-reports
    method: GET
- name: list_accounts
  endpoint:
    path: /isabel-connect/api#list-accounts
    method: GET
- name: get_account
  endpoint:
    path: /isabel-connect/api#get-account
    method: GET
- name: list_balances
  endpoint:
    path: /isabel-connect/api#list-balances
    method: GET
- name: list_transactions
  endpoint:
    path: /isabel-connect/api#list-transactions
    method: GET
- name: list_account_reports
  endpoint:
    path: /isabel-connect/api#list-account-reports
    method: GET
- name: get_account_report
  endpoint:
    path: /isabel-connect/api#get-account-report
    method: GET
- name: payment
  endpoint:
    path: /ponto-connect/api/create-payment
    method: POST
    data_selector: paymentStatus
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/api/create-payment-request
    method: POST
    data_selector: requestStatus
    params: {}
- name: customer_search
  endpoint:
    path: /customer/search
    method: GET
- name: send_document
  endpoint:
    path: /documents/send
    method: POST
- name: get_feedback
  endpoint:
    path: /documents/feedback
    method: GET
- name: list_inbound_documents
  endpoint:
    path: /inbound/documents
    method: GET
- name: get_inbound_document
  endpoint:
    path: /inbound/document
    method: GET
- name: create_supplier
  endpoint:
    path: /suppliers
    method: POST
- name: update_supplier
  endpoint:
    path: /suppliers/update
    method: PUT
- name: offboard_supplier
  endpoint:
    path: /suppliers/offboard
    method: DELETE
- name: bank_account_statements
  endpoint:
    path: /bank_account_statements
    method: GET
    data_selector: data
- name: payroll_documents
  endpoint:
    path: /payroll_documents
    method: GET
    data_selector: data
- name: credit_card_statements
  endpoint:
    path: /credit_card_statements
    method: GET
    data_selector: data
- name: sales_invoices
  endpoint:
    path: /sales_invoices
    method: GET
    data_selector: data
- name: purchase_invoices
  endpoint:
    path: /purchase_invoices
    method: GET
    data_selector: data
- name: customer_search
  endpoint:
    path: /peppol/customer/search
    method: GET
    data_selector: records
- name: send_document
  endpoint:
    path: /peppol/document/send
    method: POST
    data_selector: records
- name: get_feedback
  endpoint:
    path: /peppol/document/feedback
    method: GET
    data_selector: records
- name: list_inbound_documents
  endpoint:
    path: /peppol/inbound/documents
    method: GET
    data_selector: records
- name: get_inbound_document
  endpoint:
    path: /peppol/inbound/document
    method: GET
    data_selector: records
- name: financial_institution
  endpoint:
    path: /xs2a/financial_institutions
    method: GET
    data_selector: financial_institutions
- name: account_information_access_request
  endpoint:
    path: /xs2a/account_information_access_requests
    method: POST
    data_selector: account_information_access_request
- name: account_information_access_requests
  endpoint:
    path: /xs2a/account-information-access-requests
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /xs2a/financial-institutions
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /xs2a/accounts
    method: GET
    data_selector: data
- name: account_information_access_requests
  endpoint:
    path: /account-information-access-requests
    method: POST
    data_selector: account_information_access_requests
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: customer_access_token
  endpoint:
    path: /customer
    method: POST
    data_selector: token
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /payment/initiation
    method: POST
    data_selector: request
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk/payment/initiation
    method: POST
    data_selector: request
    params: {}
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params: {}
- name: financial_institutions
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
- name: financial_institution
  endpoint:
    path: /xs2a/financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_for_customer
  endpoint:
    path: /xs2a/customer/financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: create_financial_institution
  endpoint:
    path: /sandbox/financial-institutions
    method: POST
    data_selector: data
- name: get_financial_institution
  endpoint:
    path: /xs2a/financial-institutions/id
    method: GET
    data_selector: data
- name: update_financial_institution
  endpoint:
    path: /sandbox/financial-institutions/id
    method: PATCH
    data_selector: data
- name: financial_institutions
  endpoint:
    path: /xs2a/financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institutions_for_customer
  endpoint:
    path: /xs2a/customer/financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: create_financial_institution
  endpoint:
    path: /sandbox/financial-institutions
    method: POST
    data_selector: data
- name: get_financial_institution
  endpoint:
    path: /xs2a/financial-institutions/id
    method: GET
    data_selector: data
- name: update_financial_institution
  endpoint:
    path: /sandbox/financial-institutions/id
    method: PATCH
    data_selector: data
- name: financial_institution
  endpoint:
    path: /sandbox/financial-institutions/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_countries
  endpoint:
    path: /xs2a/financial-institution-countries
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: customer_access_token
  endpoint:
    path: /xs2a/customer-access-tokens
    method: POST
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /xs2a/customer
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /sandbox/financial-institutions/id
    method: DELETE
- name: financial_institution_countries
  endpoint:
    path: /xs2a/financial-institution-countries
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: customer_access_token
  endpoint:
    path: /xs2a/customer-access-tokens
    method: POST
- name: customer
  endpoint:
    path: /xs2a/customer
    method: DELETE
- name: synchronization
  endpoint:
    path: /xs2a/customer/synchronizations
    method: GET
- name: customer_synchronization
  endpoint:
    path: /customer/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: get_synchronization
  endpoint:
    path: /customer/synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: initial_account_transactions_synchronization
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/initial-account-transactions-synchronizations
    method: GET
    data_selector: data
    params: {}
- name: batch_synchronization
  endpoint:
    path: /batch-synchronizations
    method: POST
    data_selector: data
    params: {}
- name: account_information_access_request
  endpoint:
    path: /account-information-access-requests
    method: POST
    data_selector: data
    params: {}
- name: customer_synchronizations
  endpoint:
    path: /customer/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: get_synchronization
  endpoint:
    path: /customer/synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: initial_account_transactions_synchronization
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/initial-account-transactions-synchronizations
    method: GET
    data_selector: data
    params: {}
- name: batch_synchronization
  endpoint:
    path: /batch-synchronizations
    method: POST
    data_selector: data
    params: {}
- name: account_information_access_request
  endpoint:
    path: /account-information-access-requests
    method: POST
    data_selector: data
    params: {}
- name: account_information_access_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests
    method: POST
    data_selector: data
    params: {}
- name: get_account_information_access_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/id
    method: GET
    data_selector: data
    params: {}
- name: account_information_access_request_authorization
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/authorizations
    method: POST
- name: account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId
    method: GET
- name: account_information_access_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/account-information-access-requests
    method: POST
    data_selector: data
    params: {}
- name: get_account_information_access_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/account-information-access-requests/id
    method: GET
    data_selector: data
    params: {}
- name: list_accounts
  endpoint:
    path: /customer/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: list_accounts_for_financial_institution
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account_information_access_request_authorization
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/authorizations
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId
    method: GET
    data_selector: data
    params: {}
- name: list_accounts
  endpoint:
    path: /customer/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: list_accounts_for_financial_institution
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: accounts
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/id
    method: GET
    data_selector: data
    params: {}
- name: delete_account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/accounts
    method: GET
    data_selector: data
    params: {}
- name: get_account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/id
    method: GET
    data_selector: data
    params: {}
- name: delete_account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /customer/financial-institutions/{financialInstitutionId}/accounts/{accountId}/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: transaction
  endpoint:
    path: /customer/financial-institutions/{financialInstitutionId}/accounts/{accountId}/transactions
    method: GET
    data_selector: data
    params: {}
- name: updated_transactions
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transactions/id
    method: GET
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: list_updated_transactions
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
- name: get_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transactions/id
    method: GET
    data_selector: data
- name: pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
- name: pending_transactions
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: updated_pending_transactions
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: get_pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
- name: pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transaction
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
- name: holdings
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings
    method: GET
    data_selector: data
- name: get_holding
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings/id
    method: GET
    data_selector: data
- name: transaction_delete_requests
  endpoint:
    path: /transaction-delete-requests
    method: POST
    data_selector: data
- name: transaction_delete_request_customer
  endpoint:
    path: /customer/transaction-delete-requests
    method: POST
- name: transaction_delete_request_account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transaction-delete-requests
    method: POST
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
- name: holdings
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings
    method: GET
    data_selector: data
    params: {}
- name: holding
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings/id
    method: GET
    data_selector: data
    params: {}
- name: transaction_delete_requests
  endpoint:
    path: /transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: transaction_delete_request_customer
  endpoint:
    path: /customer/transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: transaction_delete_request_account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: bulk_payment_initiation_requests
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/bulkPaymentInitiationRequestId/authorizations
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /xs2a/payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/{financialInstitutionId}/bulk-payment-initiation-requests/{bulkPaymentInitiationRequestId}/authorizations
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/{financialInstitutionId}/payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/paymentInitiationRequestId/authorizations
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/paymentInitiationRequestId/authorizations
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /xs2a/periodic-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_periodic_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_periodic_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request_authorization
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/periodicPaymentInitiationRequestId/authorizations
    method: POST
- name: financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users
    method: GET
- name: create_financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users
    method: POST
- name: update_financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users/id
    method: PATCH
- name: delete_financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users/id
    method: DELETE
- name: periodic_payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/periodicPaymentInitiationRequestId/authorizations
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: single_financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/id
    method: GET
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: POST
    data_selector: data
    params: {}
- name: delete_financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: POST
    data_selector: data
    params: {}
- name: delete_financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params: {}
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: GET
    data_selector: data
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: financial_institution_holdings
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: POST
    data_selector: data
    params: {}
- name: delete_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: GET
    data_selector: data
- name: create_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: POST
    data_selector: data
- name: delete_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: DELETE
    data_selector: data
- name: account_pending_transactions_created
  endpoint:
    path: /account/pendingTransactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /account/pendingTransactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /account/transactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /account/transactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_deleted
  endpoint:
    path: /account/transactionsDeleted
    method: GET
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_authorization_completed
  endpoint:
    path: /bulkPaymentInitiationRequest/authorizationCompleted
    method: GET
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_status_updated
  endpoint:
    path: /bulkPaymentInitiationRequest/statusUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: payment_initiation_request_authorization_completed
  endpoint:
    path: /payment_initiation_request/authorization_completed
    method: GET
    data_selector: attributes
    params: {}
- name: payment_initiation_request_status_updated
  endpoint:
    path: /payment_initiation_request/status_updated
    method: GET
    data_selector: attributes
    params: {}
- name: periodic_payment_initiation_request_authorization_completed
  endpoint:
    path: /periodic_payment_initiation_request/authorization_completed
    method: GET
    data_selector: attributes
    params: {}
- name: periodic_payment_initiation_request_status_updated
  endpoint:
    path: /periodic_payment_initiation_request/status_updated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_created
  endpoint:
    path: /account/pendingTransactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /account/pendingTransactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /account/transactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /account/transactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_deleted
  endpoint:
    path: /account/transactionsDeleted
    method: GET
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_authorization_completed
  endpoint:
    path: /bulkPaymentInitiationRequest/authorizationCompleted
    method: GET
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_status_updated
  endpoint:
    path: /bulkPaymentInitiationRequest/statusUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: Financial Institution
  endpoint:
    path: /xs2a/1/api/curl#financial-institution
    method: GET
- name: Customer Access Token
  endpoint:
    path: /xs2a/1/api/curl#customer-access-token
    method: GET
- name: Account Information Access Request
  endpoint:
    path: /xs2a/1/api/curl#account-information-access-request
    method: GET
- name: Transaction
  endpoint:
    path: /xs2a/1/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /xs2a/1/api/curl#pending-transaction
    method: GET
- name: Bulk Payment Initiation Request
  endpoint:
    path: /xs2a/1/api/curl#bulk-payment-initiation-request
    method: GET
- name: payment_initiation_request_authorization_completed
  endpoint:
    path: /payment_initiation_request/authorization_completed
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_request_status_updated
  endpoint:
    path: /payment_initiation_request/status_updated
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request_authorization_completed
  endpoint:
    path: /periodic_payment_initiation_request/authorization_completed
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request_status_updated
  endpoint:
    path: /periodic_payment_initiation_request/status_updated
    method: POST
    data_selector: data
    params: {}
- name: financial_institutions
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
- name: customer_accounts
  endpoint:
    path: /customer/accounts
    method: GET
    data_selector: data
- name: Financial Institution
  endpoint:
    path: /xs2a/1/api/curl#financial-institution
    method: GET
    data_selector: records
    params: {}
- name: Customer Access Token
  endpoint:
    path: /xs2a/1/api/curl#customer-access-token
    method: POST
    data_selector: records
    params: {}
- name: Account Information Access Request
  endpoint:
    path: /xs2a/1/api/curl#account-information-access-request
    method: POST
    data_selector: records
    params: {}
- name: financial_institutions
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institutions_for_customer
  endpoint:
    path: /customer/financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: create_financial_institution
  endpoint:
    path: /sandbox/financial-institutions
    method: POST
    data_selector: data
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: update_financial_institution
  endpoint:
    path: /sandbox/financial-institutions/id
    method: PATCH
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
- name: customer_accounts
  endpoint:
    path: /customer/accounts
    method: GET
    data_selector: data
- name: financial_institution
  endpoint:
    path: /sandbox/financial-institutions/id
    method: DELETE
    data_selector: data.attributes
    params: {}
- name: financial_institution_country
  endpoint:
    path: /xs2a/financial-institution-countries
    method: GET
    data_selector: data
    params: {}
- name: customer_access_token
  endpoint:
    path: /xs2a/customer-access-tokens
    method: POST
    data_selector: data.attributes
    params: {}
- name: customer
  endpoint:
    path: /xs2a/customer
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /xs2a/customer/synchronizations
    method: GET
    data_selector: data.attributes
    params: {}
- name: financial_institution
  endpoint:
    path: /xs2a/financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: customer_financial_institution
  endpoint:
    path: /xs2a/customer/financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: customer_synchronizations
  endpoint:
    path: /customer/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: get_synchronization
  endpoint:
    path: /customer/synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: initial_account_transactions_synchronizations
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/initial-account-transactions-synchronizations
    method: GET
    data_selector: data
    params: {}
- name: batch_synchronizations
  endpoint:
    path: /batch-synchronizations
    method: POST
    data_selector: data
    params: {}
- name: account_information_access_requests
  endpoint:
    path: /account-information-access-requests
    method: POST
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /sandbox/financial-institutions/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_country
  endpoint:
    path: /xs2a/financial-institution-countries
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: customer_access_token
  endpoint:
    path: /xs2a/customer-access-tokens
    method: POST
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /xs2a/customer
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /xs2a/customer/synchronizations
    method: GET
    data_selector: data
    params: {}
- name: account_information_access_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests
    method: POST
    data_selector: data
    params: {}
- name: get_account_information_access_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/id
    method: GET
    data_selector: data
    params: {}
- name: create_synchronization
  endpoint:
    path: /customer/synchronizations
    method: POST
- name: get_synchronization
  endpoint:
    path: /customer/synchronizations/id
    method: GET
- name: list_initial_account_transactions_synchronization
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/initial-account-transactions-synchronizations
    method: GET
- name: create_batch_synchronization
  endpoint:
    path: /batch-synchronizations
    method: POST
- name: account_information_access_request
  endpoint:
    path: /account-information-access-requests
    method: POST
- name: account_information_access_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/authorizations
    method: POST
- name: account_information_access_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/account-information-access-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_account_information_access_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/account-information-access-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: list_accounts
  endpoint:
    path: /customer/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: list_accounts_for_financial_institution
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: account_information_access_request_authorization
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/authorizations
    method: POST
- name: account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId
    method: GET
- name: accounts
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/id
    method: GET
    data_selector: data
    params: {}
- name: delete_account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /customer/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: accounts_for_financial_institution
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/account-information-access-requests/accountInformationAccessRequestId/accounts
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/accounts/id
    method: GET
    data_selector: data
- name: delete_account
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/accounts/id
    method: DELETE
    data_selector: data
- name: updated_transactions
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transactions/id
    method: GET
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: pending_transactions
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transactions
    method: GET
    data_selector: data
    params: {}
- name: updated_transactions
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transactions/id
    method: GET
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: holdings
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings
    method: GET
    data_selector: data
    params: {}
- name: holding
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings/id
    method: GET
    data_selector: data
    params: {}
- name: transaction_delete_request
  endpoint:
    path: /transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: transaction_delete_requests_customer
  endpoint:
    path: /customer/transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: transaction_delete_requests_account
  endpoint:
    path: /customer/financial-institutions/{financialInstitutionId}/accounts/{accountId}/transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: pending_transactions
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /customer/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_pending_transaction
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
- name: holdings
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings
    method: GET
    data_selector: data
    params: {}
- name: holding
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/holdings/id
    method: GET
    data_selector: data
    params: {}
- name: transaction_delete_request
  endpoint:
    path: /transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests
    method: POST
    data_selector: data
- name: get_bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: GET
    data_selector: data
- name: delete_bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: DELETE
    data_selector: data
- name: bulk_payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/bulkPaymentInitiationRequestId/authorizations
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: transaction_delete_request_customer
  endpoint:
    path: /customer/transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: transaction_delete_request_account
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/accounts/accountId/transaction-delete-requests
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_requests
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: bulk_payment_initiation_requests
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: get_bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_bulk_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/bulk-payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/{financialInstitutionId}/payment-initiation-requests/{paymentInitiationRequestId}/authorizations
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/{financialInstitutionId}/payment-initiation-requests/{paymentInitiationRequestId}/authorizations
    method: POST
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/{financialInstitutionId}/bulk-payment-initiation-requests/{bulkPaymentInitiationRequestId}/authorizations
    method: POST
    data_selector: data
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /xs2a/payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_periodic_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_periodic_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/periodicPaymentInitiationRequestId/authorizations
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment_initiation_request_authorization
  endpoint:
    path: /customer/financial-institutions/{financialInstitutionId}/payment-initiation-requests/{paymentInitiationRequestId}/authorizations
    method: POST
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /customer/financial-institutions/{financialInstitutionId}/periodic-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: get_financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/id
    method: GET
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_periodic_payment_initiation_request
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: POST
    data_selector: data
    params: {}
- name: delete_financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: periodic_payment_initiation_request_authorization
  endpoint:
    path: /xs2a/customer/financial-institutions/financialInstitutionId/periodic-payment-initiation-requests/periodicPaymentInitiationRequestId/authorizations
    method: POST
- name: financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users
    method: GET
- name: get_financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users/id
    method: GET
- name: create_financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users
    method: POST
- name: update_financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users/id
    method: PATCH
- name: delete_financial_institution_user
  endpoint:
    path: /sandbox/financial-institution-users/id
    method: DELETE
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params: {}
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts
    method: POST
    data_selector: data.attributes
    params: {}
- name: financial_institution_account_delete
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: POST
    data_selector: data
    params: {}
- name: delete_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: delete_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: DELETE
    data_selector: data.id
    params: {}
- name: financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account_pending_transactions_created
  endpoint:
    path: /account/pendingTransactionsCreated
    method: POST
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /account/pendingTransactionsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /account/transactionsCreated
    method: POST
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /account/transactionsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: account_transactions_deleted
  endpoint:
    path: /account/transactionsDeleted
    method: POST
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_authorization_completed
  endpoint:
    path: /bulkPaymentInitiationRequest/authorizationCompleted
    method: POST
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_status_updated
  endpoint:
    path: /bulkPaymentInitiationRequest/statusUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings
    method: POST
    data_selector: data
    params: {}
- name: delete_financial_institution_holding
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-users/financialInstitutionUserId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-holdings/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_initiation_request_authorization_completed
  endpoint:
    path: /payment_initiation_request_authorization_completed
    method: GET
    data_selector: attributes
    params: {}
- name: payment_initiation_request_status_updated
  endpoint:
    path: /payment_initiation_request_status_updated
    method: GET
    data_selector: attributes
    params: {}
- name: periodic_payment_initiation_request_authorization_completed
  endpoint:
    path: /periodic_payment_initiation_request_authorization_completed
    method: GET
    data_selector: attributes
    params: {}
- name: periodic_payment_initiation_request_status_updated
  endpoint:
    path: /periodic_payment_initiation_request_status_updated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_created
  endpoint:
    path: /account/pendingTransactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /account/pendingTransactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /account/transactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /account/transactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_deleted
  endpoint:
    path: /account/transactionsDeleted
    method: GET
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_authorization_completed
  endpoint:
    path: /bulkPaymentInitiationRequest/authorizationCompleted
    method: GET
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation_request_status_updated
  endpoint:
    path: /bulkPaymentInitiationRequest/statusUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation
  endpoint:
    path: /api/bulk-payment-initiation
    method: POST
    data_selector: data
- name: account_information
  endpoint:
    path: /api/account-information
    method: GET
    data_selector: data
- name: account_reports
  endpoint:
    path: /api/account-reports
    method: GET
    data_selector: data
- name: List Accounts
  endpoint:
    path: /isabel-connect/api#list-accounts
    method: GET
- name: Get Account
  endpoint:
    path: /isabel-connect/api#get-account
    method: GET
- name: List Balances
  endpoint:
    path: /isabel-connect/api#list-balances
    method: GET
- name: List Transactions
  endpoint:
    path: /isabel-connect/api#list-transactions
    method: GET
- name: List Account Reports
  endpoint:
    path: /isabel-connect/api#list-account-reports
    method: GET
- name: Get Account Report
  endpoint:
    path: /isabel-connect/api#get-account-report
    method: GET
- name: payment_initiation_request_authorization_completed
  endpoint:
    path: /paymentInitiationRequest/authorizationCompleted
    method: POST
    data_selector: attributes
    params: {}
- name: payment_initiation_request_status_updated
  endpoint:
    path: /paymentInitiationRequest/statusUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: periodic_payment_initiation_request_authorization_completed
  endpoint:
    path: /periodicPaymentInitiationRequest/authorizationCompleted
    method: POST
    data_selector: attributes
    params: {}
- name: periodic_payment_initiation_request_status_updated
  endpoint:
    path: /periodicPaymentInitiationRequest/statusUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: bulk_payment_initiation
  endpoint:
    path: /api/bulk-payment/initiation
    method: POST
    data_selector: response
    params: {}
- name: account_information
  endpoint:
    path: /api/account/information
    method: GET
    data_selector: accounts
    params: {}
- name: account_reports
  endpoint:
    path: /api/account/reports
    method: GET
    data_selector: reports
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests/id
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: bulk_payment_initiation_requests
  endpoint:
    path: /bulk-payment-initiation-requests/{id}
    method: GET
- name: token
  endpoint:
    path: /oauth2/token
    method: POST
- name: revoke_refresh_token
  endpoint:
    path: /oauth2/revoke
    method: POST
- name: accounts
  endpoint:
    path: /isabel-connect/accounts
    method: GET
- name: bulk-payment-initiation-requests
  endpoint:
    path: /isabel-connect/bulk-payment-initiation-requests
    method: POST
- name: token
  endpoint:
    path: /isabel-connect/oauth2/token
    method: POST
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests/{id}
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      offset: offset
      size: size
- name: account
  endpoint:
    path: /accounts/id
    method: GET
- name: balance
  endpoint:
    path: /accounts/accountId/balances
    method: GET
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
- name: intraday_transaction
  endpoint:
    path: /accounts/accountId/intraday-transactions
    method: GET
- name: accounts
  endpoint:
    path: /isabel-connect/accounts
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment_initiation_requests
  endpoint:
    path: /isabel-connect/bulk-payment-initiation-requests/id
    method: GET
    data_selector: data
    params: {}
- name: token
  endpoint:
    path: /isabel-connect/oauth2/token
    method: POST
    data_selector: access_token
    params: {}
- name: intraday_transactions
  endpoint:
    path: /isabel-connect/accounts/accountId/intraday-transactions
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: account_reports
  endpoint:
    path: /isabel-connect/account-reports
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: get_account_report
  endpoint:
    path: /isabel-connect/account-reports/id
    method: GET
    data_selector: data
- name: revoke_refresh_token
  endpoint:
    path: /oauth2/revoke
    method: POST
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment_initiation_requests
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: balance
  endpoint:
    path: /balances
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: intraday_transaction
  endpoint:
    path: /intraday-transactions
    method: GET
    data_selector: data
    params: {}
- name: account_report
  endpoint:
    path: /account-reports
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      size: 20
- name: balance
  endpoint:
    path: /accounts/accountId/balances
    method: GET
    data_selector: data
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /accounts/id
    method: GET
    data_selector: data
    params: {}
- name: balance
  endpoint:
    path: /accounts/accountId/balances
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params: {}
- name: intradayTransaction
  endpoint:
    path: /accounts/accountId/intraday-transactions
    method: GET
    data_selector: data
    params: {}
- name: intraday_transactions
  endpoint:
    path: /accounts/accountId/intraday-transactions
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: account_reports
  endpoint:
    path: /account-reports
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: get_account_report
  endpoint:
    path: /account-reports/id
    method: GET
    data_selector: data
- name: intraday_transactions
  endpoint:
    path: /accounts/accountId/intraday-transactions
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: account_reports
  endpoint:
    path: /account-reports
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: get_account_report
  endpoint:
    path: /account-reports/id
    method: GET
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: get_bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests/id
    method: GET
    data_selector: data
    params: {}
- name: account_information
  endpoint:
    path: /ponto-connect/api/account-information
    method: GET
- name: payment_initiation
  endpoint:
    path: /ponto-connect/api/payment-initiation
    method: POST
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: balance
  endpoint:
    path: /balances
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: data
    params: {}
- name: intraday_transaction
  endpoint:
    path: /intraday-transactions
    method: GET
    data_selector: data
    params: {}
- name: account_report
  endpoint:
    path: /account-reports
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      size: 20
- name: balance
  endpoint:
    path: /accounts/accountId/balances
    method: GET
    data_selector: data
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
- name: intraday_transactions
  endpoint:
    path: /isabel-connect/accounts/accountId/intraday-transactions
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: account_reports
  endpoint:
    path: /isabel-connect/account-reports
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 20
- name: get_account_report
  endpoint:
    path: /isabel-connect/account-reports/id
    method: GET
    data_selector: null
    params: {}
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
- name: bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests
    method: POST
    data_selector: data
    params: {}
- name: get_bulk_payment_initiation_request
  endpoint:
    path: /bulk-payment-initiation-requests/id
    method: GET
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: pending_transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: reauthorization_request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: POST
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/id
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/id
    method: DELETE
    data_selector: data
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
    method: GET
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: GET
- name: Bulk Payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
    method: GET
- name: Payment Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
    method: GET
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: GET
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
- name: get_pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params: {}
- name: reauthorization_request
  endpoint:
    path: /accounts/accountId/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: pending_transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: account
  endpoint:
    path: /accounts/id
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/id
    method: DELETE
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params: {}
- name: get_pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /ponto-connect/accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transaction
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
- name: reauthorization_requests
  endpoint:
    path: /ponto-connect/accounts/accountId/reauthorization-requests
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: pending_transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronizationId}/updated-pending-transactions
    method: GET
    data_selector: data
    params: {}
- name: reauthorization_requests
  endpoint:
    path: /accounts/{accountId}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: GET
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/{id}
    method: GET
    data_selector: data
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: GET
- name: bulk_payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
    method: GET
- name: payment_request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
    method: GET
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: pending_transaction_by_id
  endpoint:
    path: /accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
- name: updated_pending_transactions_for_synchronization
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account_details
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params: {}
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
    params: {}
- name: get_payment
  endpoint:
    path: /accounts/{account_id}/payments/{payment_id}
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /accounts/id
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/id
    method: DELETE
    data_selector: data
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data.attributes
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: GET
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/{id}
    method: GET
    data_selector: data
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: reauthorization_requests
  endpoint:
    path: /accounts/{accountId}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /accounts/{accountId}/payments
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments
    method: POST
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data.attributes
    params: {}
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: updated_pending_transactions
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/{accountId}/reauthorization-requests
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /accounts/{accountId}/payments
    method: POST
    data_selector: data
- name: payment
  endpoint:
    path: /payments/{paymentId}
    method: GET
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: organization_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: GET
    data_selector: data
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data
- name: Financial Institution
  endpoint:
    path: /financial-institution
    method: GET
- name: Account
  endpoint:
    path: /account
    method: GET
- name: Transaction
  endpoint:
    path: /transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /pending-transaction
    method: GET
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /ponto-connect/accounts
    method: GET
    data_selector: data
    params: {}
- name: synchronizations
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
    data_selector: data.attributes
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/{id}
    method: GET
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: delete_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: create_synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_synchronization
  endpoint:
    path: /ponto-connect/synchronizations/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: transactions
  endpoint:
    path: /ponto-connect/accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
- name: payment
  endpoint:
    path: /payments/{payment_id}
    method: GET
    data_selector: data
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
    method: GET
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: GET
- name: Bulk Payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
    method: GET
- name: Payment Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
    method: GET
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: GET
- name: Financial Institution Account
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution-account
    method: GET
- name: Financial Institution Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution-transaction
    method: GET
- name: User Info
  endpoint:
    path: /ponto-connect/2/api/curl#user-info
    method: GET
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
    data_selector: data
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_request_get
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: payment_request_delete
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: synchronization_get
  endpoint:
    path: /synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: financial_institution_accounts
  endpoint:
    path: /sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts/{financialInstitutionAccountId}/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data.attributes
    params: {}
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
    params: {}
- name: payment_activation_requests
  endpoint:
    path: /payment-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: organization_usage
  endpoint:
    path: /organizations/organizationId/usage/month
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /organizations/organizationId/integration
    method: DELETE
    data_selector: data
    params: {}
- name: integration_accounts
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /ponto-connect/sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
- name: Bulk Payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
- name: Payment Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
- name: Financial Institution Account
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution-account
- name: Financial Institution Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution-transaction
- name: Onboarding Details
  endpoint:
    path: /ponto-connect/2/api/curl#onboarding-details
- name: User Info
  endpoint:
    path: /ponto-connect/2/api/curl#user-info
- name: Payment Activation Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-activation-request
- name: Payment Request Activation Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request-activation-request
- name: Usage
  endpoint:
    path: /ponto-connect/2/api/curl#usage
- name: Integration
  endpoint:
    path: /ponto-connect/2/api/curl#integration
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts/{financialInstitutionAccountId}/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data.attributes
    params: {}
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data.attributes
    params: {}
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
    params: {}
- name: payment_activation_requests
  endpoint:
    path: /payment-activation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: organization_usage
  endpoint:
    path: /organizations/organizationId/usage/month
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /organizations/organizationId/integration
    method: DELETE
    data_selector: data
    params: {}
- name: integration_accounts
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: User Info
  endpoint:
    path: /ponto-connect/2/api/curl#user-info
    method: GET
- name: Onboarding Details
  endpoint:
    path: /ponto-connect/2/api/curl#onboarding-details
    method: GET
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
    data_selector: data.attributes
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data.attributes
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: get_synchronization
  endpoint:
    path: /ponto-connect/synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: financial_institution_accounts
  endpoint:
    path: /ponto-connect/sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: updated_pending_transaction
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronizationId}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: reauthorization_request
  endpoint:
    path: /accounts/{accountId}/reauthorization-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: payment
  endpoint:
    path: /accounts/{accountId}/payments
    method: POST
    data_selector: data.attributes
    params: {}
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data.attributes
    params: {}
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data.attributes
    params: {}
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
    params: {}
- name: payment_activation_request
  endpoint:
    path: /payment-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_request_activation_request
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: organization_usage
  endpoint:
    path: /organizations/{organizationId}/usage/{month}
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /organizations/{organizationId}/integration
    method: DELETE
    data_selector: data
    params: {}
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params:
      incremental: createdAt
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: synchronization_succeeded_without_change
  endpoint:
    path: /webhook/synchronization/succeededWithoutChange
    method: POST
    data_selector: attributes
    params: {}
- name: synchronization_failed
  endpoint:
    path: /webhook/synchronization/failed
    method: POST
    data_selector: attributes
    params: {}
- name: account_details_updated
  endpoint:
    path: /webhook/account/detailsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /webhook/account/transactionsCreated
    method: POST
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /webhook/account/transactionsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: account_pending_transactions_created
  endpoint:
    path: /webhook/account/pendingTransactionsCreated
    method: POST
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /webhook/account/pendingTransactionsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: account_pending_transactions_updated
  endpoint:
    path: /webhooks/account/pending_transactions_updated
    method: POST
    data_selector: data
    params: {}
- name: account_reauthorized
  endpoint:
    path: /webhooks/account/reauthorized
    method: POST
    data_selector: data
    params: {}
- name: organization_blocked
  endpoint:
    path: /webhooks/organization/blocked
    method: POST
    data_selector: data
    params: {}
- name: organization_unblocked
  endpoint:
    path: /webhooks/organization/unblocked
    method: POST
    data_selector: data
    params: {}
- name: integration_account_added
  endpoint:
    path: /webhooks/integration/account_added
    method: POST
    data_selector: data
    params: {}
- name: integration_account_revoked
  endpoint:
    path: /webhooks/integration/account_revoked
    method: POST
    data_selector: data
    params: {}
- name: integration_created
  endpoint:
    path: /webhooks/integration/created
    method: POST
    data_selector: data
    params: {}
- name: integration_revoked
  endpoint:
    path: /webhooks/integration/revoked
    method: POST
    data_selector: data
    params: {}
- name: payment_request_closed
  endpoint:
    path: /webhooks/payment_request/closed
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts/{financialInstitutionAccountId}/financial-institution-transactions
    method: POST
    data_selector: data.attributes
    params: {}
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data.attributes
    params: {}
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: payment_activation_requests
  endpoint:
    path: /payment-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: organization_usage
  endpoint:
    path: /organizations/organizationId/usage/month
    method: GET
    data_selector: data
    params: {}
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params: {}
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params:
      limit: 1
- name: Financial Institution
  endpoint:
    path: /financial-institution
    method: GET
- name: Account
  endpoint:
    path: /account
    method: GET
- name: Transaction
  endpoint:
    path: /transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /pending-transaction
    method: GET
- name: synchronization_succeeded_without_change
  endpoint:
    path: /synchronization/succeeded_without_change
    method: GET
    data_selector: attributes
    params: {}
- name: synchronization_failed
  endpoint:
    path: /synchronization/failed
    method: GET
    data_selector: attributes
    params: {}
- name: account_details_updated
  endpoint:
    path: /account/details_updated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /account/transactions_created
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /account/transactions_updated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_created
  endpoint:
    path: /account/pending_transactions_created
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /account/pending_transactions_updated
    method: GET
    data_selector: attributes
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: account_reauthorized
  endpoint:
    path: /account/reauthorized
    method: POST
    data_selector: data
    params: {}
- name: organization_blocked
  endpoint:
    path: /organization/blocked
    method: POST
    data_selector: data
    params: {}
- name: organization_unblocked
  endpoint:
    path: /organization/unblocked
    method: POST
    data_selector: data
    params: {}
- name: integration_account_added
  endpoint:
    path: /integration/account_added
    method: POST
    data_selector: data
    params: {}
- name: integration_account_revoked
  endpoint:
    path: /integration/account_revoked
    method: POST
    data_selector: data
    params: {}
- name: integration_created
  endpoint:
    path: /integration/created
    method: POST
    data_selector: data
    params: {}
- name: integration_revoked
  endpoint:
    path: /integration/revoked
    method: POST
    data_selector: data
    params: {}
- name: payment_request_closed
  endpoint:
    path: /payment_request/closed
    method: POST
    data_selector: data
    params: {}
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
    method: GET
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: GET
- name: Bulk Payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
    method: GET
- name: Payment Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
    method: GET
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: GET
- name: Financial Institution Account
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution-account
    method: GET
- name: User Info
  endpoint:
    path: /ponto-connect/2/api/curl#user-info
    method: GET
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params: {}
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
    params: {}
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: GET
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_account
  endpoint:
    path: /accounts/id
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/id
    method: DELETE
    data_selector: data
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions/id
    method: GET
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
    method: GET
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: GET
- name: Bulk Payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
    method: GET
- name: Payment Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
    method: GET
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: GET
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: null
- name: get_pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: reauthorization_requests
  endpoint:
    path: /accounts/accountId/reauthorization-requests
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: individual_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
    data_selector: records
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
    data_selector: records
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
    data_selector: records
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
    data_selector: records
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
    method: GET
    data_selector: records
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: POST
    data_selector: records
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: POST
    data_selector: records
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/id
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/id
    method: DELETE
    data_selector: data
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: optional
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: optional
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions/id
    method: GET
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params: {}
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
    params: {}
- name: pending_transactions
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/accountId/reauthorization-requests
    method: POST
    data_selector: data
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params: {}
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Reauthorization Request
  endpoint:
    path: /ponto-connect/2/api/curl#reauthorization-request
    method: GET
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: GET
    data_selector: data.attributes
- name: account
  endpoint:
    path: /ponto-connect/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: DELETE
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
- name: get_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
- name: delete_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: POST
- name: Bulk Payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
    method: POST
- name: Payment Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
    method: POST
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_by_id
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /ponto-connect/accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_account
  endpoint:
    path: /ponto-connect/accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /ponto-connect/accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: Payment
  endpoint:
    path: /ponto-connect/2/api/curl#payment
    method: GET
- name: Bulk Payment
  endpoint:
    path: /ponto-connect/2/api/curl#bulk-payment
    method: GET
- name: Payment Request
  endpoint:
    path: /ponto-connect/2/api/curl#payment-request
    method: GET
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronizationId}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: reauthorization_requests
  endpoint:
    path: /accounts/{accountId}/reauthorization-requests
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /accounts/{accountId}/payments
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/{id}
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments
    method: POST
    data_selector: data
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params: {}
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions/id
    method: GET
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data.attributes
    params: {}
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: GET
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '10'
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments
    method: POST
    data_selector: data.attributes
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data.attributes
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/{id}
    method: GET
    data_selector: data
- name: payment_requests
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data.attributes
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: Synchronization
  endpoint:
    path: /ponto-connect/2/api/curl#synchronization
    method: GET
- name: transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transaction
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params: {}
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/{id}
    method: GET
    data_selector: data
    params: {}
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
- name: payments
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
- name: bulk_payments
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
    data_selector: data.attributes
- name: payment_requests
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data.attributes
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
- name: reauthorization_request
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
- name: payment
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: GET
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
    data_selector: data
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
- name: Financial Institution
  endpoint:
    path: /financial-institution
    method: GET
- name: Account
  endpoint:
    path: /account
    method: GET
- name: Transaction
  endpoint:
    path: /transaction
    method: GET
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: get_synchronization
  endpoint:
    path: /synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: GET
    data_selector: data
    params: {}
- name: create_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transaction
  endpoint:
    path: /ponto-connect/synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: get_financial_institution
  endpoint:
    path: /financial-institutions/id
    method: GET
    data_selector: data
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
- name: reauthorization_requests
  endpoint:
    path: /accounts/{accountId}/reauthorization-requests
    method: POST
    data_selector: data
- name: payments
  endpoint:
    path: /accounts/{accountId}/payments
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/id
    method: GET
    data_selector: data
    params: {}
- name: revoke_account
  endpoint:
    path: /accounts/id
    method: DELETE
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data
    params: {}
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_accounts
  endpoint:
    path: /sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_pending_transaction
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: reauthorization_requests
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: bulk_payments
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data.attributes
    params: {}
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data.attributes
    params: {}
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
    params: {}
- name: payment_activation_requests
  endpoint:
    path: /payment-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: get_synchronization
  endpoint:
    path: /ponto-connect/synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: list_financial_institution_accounts
  endpoint:
    path: /ponto-connect/sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: organization_usage
  endpoint:
    path: /organizations/organizationId/usage/month
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /organizations/organizationId/integration
    method: DELETE
    data_selector: data
    params: {}
- name: integration_accounts
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts/{financialInstitutionAccountId}/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: User Info
  endpoint:
    path: /ponto-connect/2/api/curl#user-info
    method: GET
- name: Usage
  endpoint:
    path: /ponto-connect/2/api/curl#usage
    method: GET
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data.attributes
- name: update_financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions/id
    method: PATCH
    data_selector: data.attributes
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data.attributes
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
- name: payment_activation_requests
  endpoint:
    path: /payment-activation-requests
    method: POST
    data_selector: data.attributes
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data.attributes
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: payment_request_activation_requests
  endpoint:
    path: /payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: organization_usage
  endpoint:
    path: /organizations/organizationId/usage/month
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /organizations/organizationId/integration
    method: DELETE
    data_selector: data
    params: {}
- name: integration_accounts
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: Financial Institution
  endpoint:
    path: /ponto-connect/2/api/curl#financial-institution
    method: GET
- name: Account
  endpoint:
    path: /ponto-connect/2/api/curl#account
    method: GET
- name: Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#transaction
    method: GET
- name: Pending Transaction
  endpoint:
    path: /ponto-connect/2/api/curl#pending-transaction
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /accounts/{id}/transactions
    method: GET
    data_selector: links.related
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: synchronizations
  endpoint:
    path: /synchronizations
    method: POST
    data_selector: data
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution
  endpoint:
    path: /financial-institutions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: pending_transaction
  endpoint:
    path: /accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-pending-transactions
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: account
  endpoint:
    path: /accounts/{id}
    method: GET
    data_selector: data
- name: revoke_account
  endpoint:
    path: /accounts/{id}
    method: DELETE
    data_selector: data
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronizationId}/updated-pending-transactions
    method: GET
    data_selector: data
    params: {}
- name: reauthorization_requests
  endpoint:
    path: /accounts/{accountId}/reauthorization-requests
    method: POST
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /accounts/{accountId}/payments
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /accounts/accountId/payments/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: bulk_payment
  endpoint:
    path: /accounts/accountId/bulk-payments/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: payment_request
  endpoint:
    path: /accounts/accountId/payment-requests/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: transaction
  endpoint:
    path: /accounts/accountId/transactions
    method: GET
    data_selector: data
    params: {}
- name: updated_transactions
  endpoint:
    path: /synchronizations/synchronizationId/updated-transactions
    method: GET
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: get_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests/id
    method: DELETE
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: get_synchronization
  endpoint:
    path: /ponto-connect/synchronizations/id
    method: GET
    data_selector: data
    params: {}
- name: list_financial_institution_accounts
  endpoint:
    path: /ponto-connect/sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: pending_transaction
  endpoint:
    path: /ponto-connect/accounts/accountId/pending-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 10
- name: financial_institution_accounts
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: updated_pending_transactions
  endpoint:
    path: /synchronizations/{synchronization_id}/updated-pending-transactions
    method: GET
    data_selector: data
- name: reauthorization_request
  endpoint:
    path: /accounts/{account_id}/reauthorization-requests
    method: POST
    data_selector: data
- name: payment
  endpoint:
    path: /accounts/{account_id}/payments
    method: POST
    data_selector: data
- name: payment
  endpoint:
    path: /ponto-connect/accounts/accountId/payments/id
    method: GET
- name: bulk_payment
  endpoint:
    path: /ponto-connect/accounts/accountId/bulk-payments
    method: POST
- name: financial_institution_transactions
  endpoint:
    path: /financial-institutions/{financialInstitutionId}/financial-institution-accounts/{financialInstitutionAccountId}/financial-institution-transactions
    method: POST
    data_selector: data
    params: {}
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data
    params: {}
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /ponto-connect/accounts/accountId/payment-requests
    method: POST
    data_selector: data
    params: {}
- name: synchronization
  endpoint:
    path: /ponto-connect/synchronizations
    method: POST
    data_selector: data
    params: {}
- name: financial_institution_account
  endpoint:
    path: /ponto-connect/sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params: {}
- name: payment_activation_requests
  endpoint:
    path: /ponto-connect/payment-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: payment_request_activation_requests
  endpoint:
    path: /ponto-connect/payment-request-activation-requests
    method: POST
    data_selector: data
    params: {}
- name: organizations_usage
  endpoint:
    path: /ponto-connect/organizations/organizationId/usage/month
    method: GET
    data_selector: data
    params: {}
- name: integration_accounts
  endpoint:
    path: /ponto-connect/integration-accounts
    method: GET
    data_selector: data
    params: {}
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: '1'
- name: financial_institution_account
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: financial_institution_transaction
  endpoint:
    path: /financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: financial_institution_transactions
  endpoint:
    path: /sandbox/financial-institutions/financialInstitutionId/financial-institution-accounts/financialInstitutionAccountId/financial-institution-transactions
    method: POST
    data_selector: data.attributes
- name: onboarding_details
  endpoint:
    path: /onboarding-details
    method: POST
    data_selector: data.attributes
- name: user_info
  endpoint:
    path: /userinfo
    method: GET
    data_selector: data
- name: synchronization_succeeded_without_change
  endpoint:
    path: /synchronization/succeededWithoutChange
    method: POST
    data_selector: attributes
    params: {}
- name: synchronization_failed
  endpoint:
    path: /synchronization/failed
    method: POST
    data_selector: attributes
    params: {}
- name: account_details_updated
  endpoint:
    path: /account/detailsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /account/transactionsCreated
    method: POST
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /account/transactionsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: account_pending_transactions_created
  endpoint:
    path: /account/pendingTransactionsCreated
    method: POST
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /account/pendingTransactionsUpdated
    method: POST
    data_selector: attributes
    params: {}
- name: payment_activation_request
  endpoint:
    path: /payment-activation-requests
    method: POST
- name: payment_request_activation_request
  endpoint:
    path: /payment-request-activation-requests
    method: POST
- name: organization_usage
  endpoint:
    path: /organizations/organizationId/usage/month
    method: GET
- name: integration
  endpoint:
    path: /organizations/organizationId/integration
    method: DELETE
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
- name: account_reauthorized
  endpoint:
    path: /account/reauthorized
    method: POST
    data_selector: data
    params: {}
- name: account_blocked
  endpoint:
    path: /account/blocked
    method: POST
    data_selector: data
    params: {}
- name: account_unblocked
  endpoint:
    path: /account/unblocked
    method: POST
    data_selector: data
    params: {}
- name: integration_account_added
  endpoint:
    path: /integration/account_added
    method: POST
    data_selector: data
    params: {}
- name: integration_account_revoked
  endpoint:
    path: /integration/account_revoked
    method: POST
    data_selector: data
    params: {}
- name: integration_created
  endpoint:
    path: /integration/created
    method: POST
    data_selector: data
    params: {}
- name: integration_revoked
  endpoint:
    path: /integration/revoked
    method: POST
    data_selector: data
    params: {}
- name: payment_request_closed
  endpoint:
    path: /payment_request/closed
    method: POST
    data_selector: data
    params: {}
- name: integration_account
  endpoint:
    path: /integration-accounts
    method: GET
    data_selector: data
    params:
      page[limit]: 1
- name: synchronization_succeeded_without_change
  endpoint:
    path: /synchronization/succeededWithoutChange
    method: GET
    data_selector: attributes
    params: {}
- name: synchronization_failed
  endpoint:
    path: /synchronization/failed
    method: GET
    data_selector: attributes
    params: {}
- name: account_details_updated
  endpoint:
    path: /account/detailsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_created
  endpoint:
    path: /account/transactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_transactions_updated
  endpoint:
    path: /account/transactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_created
  endpoint:
    path: /account/pendingTransactionsCreated
    method: GET
    data_selector: attributes
    params: {}
- name: account_pending_transactions_updated
  endpoint:
    path: /account/pendingTransactionsUpdated
    method: GET
    data_selector: attributes
    params: {}
- name: customer_search
  endpoint:
    path: /api/customer-search
    method: GET
    data_selector: response
    params: {}
- name: send_document
  endpoint:
    path: /api/send-document
    method: POST
    data_selector: response
    params: {}
- name: get_feedback
  endpoint:
    path: /api/get-feedback
    method: GET
    data_selector: response
    params: {}
- name: list_inbound_documents
  endpoint:
    path: /api/list-inbound-documents
    method: GET
    data_selector: documents
    params: {}
- name: get_inbound_document
  endpoint:
    path: /api/get-inbound-document
    method: GET
    data_selector: document
    params:
      documentId: required
- name: account_pending_transactions_updated
  endpoint:
    path: /webhooks/account/pending_transactions_updated
    method: POST
    data_selector: account
- name: account_reauthorized
  endpoint:
    path: /webhooks/account/reauthorized
    method: POST
    data_selector: attributes
- name: organization_blocked
  endpoint:
    path: /webhooks/organization/blocked
    method: POST
    data_selector: attributes
- name: organization_unblocked
  endpoint:
    path: /webhooks/organization/unblocked
    method: POST
    data_selector: attributes
- name: integration_account_added
  endpoint:
    path: /webhooks/integration/account_added
    method: POST
    data_selector: attributes
- name: integration_account_revoked
  endpoint:
    path: /webhooks/integration/account_revoked
    method: POST
    data_selector: attributes
- name: integration_created
  endpoint:
    path: /webhooks/integration/created
    method: POST
    data_selector: attributes
- name: integration_revoked
  endpoint:
    path: /webhooks/integration/revoked
    method: POST
    data_selector: attributes
- name: payment_request_closed
  endpoint:
    path: /webhooks/payment_request/closed
    method: POST
    data_selector: attributes
- name: document
  endpoint:
    path: /einvoicing/documents
    method: GET
    data_selector: documents
- name: suppliers
  endpoint:
    path: /peppol/suppliers
    method: GET
- name: zoomit_invoice
  endpoint:
    path: /zoomit/invoices
    method: GET
- name: customer_search
  endpoint:
    path: /api/customer/search
    method: GET
    data_selector: response
    params: {}
- name: send_document
  endpoint:
    path: /api/document/send
    method: POST
    data_selector: response
    params: {}
- name: get_feedback
  endpoint:
    path: /api/document/feedback
    method: GET
    data_selector: response
    params: {}
- name: list_inbound_documents
  endpoint:
    path: /api/inbound/documents/list
    method: GET
    data_selector: documents
    params: {}
- name: get_inbound_document
  endpoint:
    path: /api/inbound/document/get
    method: GET
    data_selector: document
    params:
      documentId: required
- name: zoomit_invoice
  endpoint:
    path: /zoomit/invoice
    method: GET
    data_selector: attributes
- name: supplier
  endpoint:
    path: /suppliers
    method: GET
    data_selector: data
    params: {}
- name: create_supplier
  endpoint:
    path: /einvoicing/suppliers
    method: POST
- name: supplier
  endpoint:
    path: /supplier
    method: GET
    data_selector: data
- name: supplier
  endpoint:
    path: /einvoicing/suppliers/id
    method: PATCH
- name: supplier
  endpoint:
    path: /einvoicing/suppliers/id
    method: DELETE
- name: zoomit_invoice
  endpoint:
    path: /zoomit/invoice
    method: GET
    data_selector: attributes
- name: supplier
  endpoint:
    path: /peppol/suppliers
    method: GET
    data_selector: suppliers
- name: peppol_customer_search
  endpoint:
    path: /peppol/customer_search
    method: GET
    data_selector: customer_search
- name: peppol_registration
  endpoint:
    path: /peppol/registration
    method: GET
    data_selector: registration
- name: peppol_outbound_invoice
  endpoint:
    path: /peppol/outbound_invoice
    method: GET
    data_selector: outbound_invoice
- name: supplier
  endpoint:
    path: /suppliers
    method: GET
    data_selector: data
    params:
      page[size]: 2000
- name: get_supplier
  endpoint:
    path: /suppliers/{id}
    method: GET
    data_selector: data
- name: create_supplier
  endpoint:
    path: /suppliers
    method: POST
    data_selector: null
- name: supplier
  endpoint:
    path: /suppliers
    method: GET
    data_selector: data
    params: {}
- name: supplier
  endpoint:
    path: /e-invoicing/suppliers
    method: POST
    data_selector: data
    params: {}
- name: supplier
  endpoint:
    path: /supplier
    method: GET
    data_selector: data
- name: supplier
  endpoint:
    path: /suppliers/id
    method: PATCH
    data_selector: data
    params: {}
- name: delete_supplier
  endpoint:
    path: /suppliers/id
    method: DELETE
    data_selector: data
    params: {}
- name: supplier
  endpoint:
    path: /einvoicing/suppliers/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: delete_supplier
  endpoint:
    path: /einvoicing/suppliers/id
    method: DELETE
    data_selector: ''
    params: {}
- name: customer_search
  endpoint:
    path: /customer-searches
    method: POST
    data_selector: data.attributes
    params: {}
- name: registrations
  endpoint:
    path: /suppliers/supplierId/registrations
    method: GET
    data_selector: data
    params: {}
- name: outbound_invoice
  endpoint:
    path: /suppliers/supplierId/invoices/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: outbound_credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: supplier
  endpoint:
    path: /peppol/suppliers
    method: GET
- name: peppol_customer_search
  endpoint:
    path: /peppol/customer/search
    method: GET
- name: peppol_registration
  endpoint:
    path: /peppol/registration
    method: GET
- name: peppol_outbound_invoice
  endpoint:
    path: /peppol/outbound/invoice
    method: GET
- name: peppol_inbound_document
  endpoint:
    path: /peppol/inbound/document
    method: GET
- name: outbound_documents
  endpoint:
    path: /documents
    method: GET
    data_selector: data
    params:
      fromStatusChanged: ''
      toStatusChanged: ''
      supplierId: ''
      page[number]: ''
      page[size]: 2000
- name: inbound_documents
  endpoint:
    path: /inbound-documents
    method: GET
    data_selector: data
    params:
      fromCreatedAt: ''
      supplierId: ''
      page[number]: ''
      page[size]: 2000
- name: supplier
  endpoint:
    path: /einvoicing/suppliers
    method: GET
    data_selector: data
    params:
      page[size]: 2000
- name: get_supplier
  endpoint:
    path: /einvoicing/suppliers/{id}
    method: GET
    data_selector: data
- name: create_supplier
  endpoint:
    path: /einvoicing/suppliers
    method: POST
    data_selector: data
- name: business_status
  endpoint:
    path: /{id}/business-statuses
    method: POST
    data_selector: data.attributes
    params: {}
- name: supplier
  endpoint:
    path: /suppliers/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: customer_search
  endpoint:
    path: /customer-searches
    method: POST
- name: registrations
  endpoint:
    path: /suppliers/{supplierId}/registrations
    method: GET
- name: peppol_customer_search
  endpoint:
    path: /peppol/customers/search
    method: GET
- name: peppol_registration
  endpoint:
    path: /peppol/registrations
    method: GET
- name: peppol_outbound_invoice
  endpoint:
    path: /peppol/outbound/invoices
    method: GET
- name: peppol_outbound_credit_note
  endpoint:
    path: /peppol/outbound/credit-notes
    method: GET
- name: peppol_outbound_document
  endpoint:
    path: /peppol/outbound/documents
    method: GET
- name: peppol_inbound_document
  endpoint:
    path: /peppol/inbound/documents
    method: GET
- name: peppol_inbound_document_business_status
  endpoint:
    path: /peppol/inbound/documents/business-status
    method: GET
- name: outbound_invoice
  endpoint:
    path: /suppliers/supplierId/invoices/id
    method: GET
    data_selector: data
    params: {}
- name: outbound_credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: GET
    data_selector: data
    params: {}
- name: supplier
  endpoint:
    path: /einvoicing/suppliers
    method: GET
    data_selector: data
- name: get_supplier
  endpoint:
    path: /einvoicing/suppliers/id
    method: GET
    data_selector: data
- name: create_supplier
  endpoint:
    path: /einvoicing/suppliers
    method: POST
    data_selector: data
- name: peppol_outbound_document
  endpoint:
    path: /documents
    method: GET
    data_selector: data
    params: {}
- name: peppol_inbound_document
  endpoint:
    path: /inbound-documents
    method: GET
    data_selector: data
    params: {}
- name: business_status
  endpoint:
    path: /inbound-documents/id/business-statuses
    method: GET
    data_selector: data
    params: {}
- name: business_status
  endpoint:
    path: /id/business-statuses
    method: POST
    data_selector: data
    params: {}
- name: supplier
  endpoint:
    path: /suppliers/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: peppolCustomerSearch
  endpoint:
    path: /peppol/customer-searches
    method: POST
    data_selector: data.attributes
    params: {}
- name: peppolRegistration
  endpoint:
    path: /suppliers/supplierId/registrations
    method: GET
    data_selector: data
    params: {}
- name: peppolOutboundInvoice
  endpoint:
    path: /suppliers/supplierId/invoices/id
    method: GET
    data_selector: data
    params: {}
- name: peppolOutboundCreditNote
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: GET
    data_selector: data
    params: {}
- name: supplier
  endpoint:
    path: /suppliers/id
    method: GET
    data_selector: data.attributes
- name: list_suppliers
  endpoint:
    path: /suppliers
    method: GET
    data_selector: data
    params:
      page[size]: 2000
- name: create_supplier
  endpoint:
    path: /suppliers
    method: POST
    data_selector: data.attributes
- name: get_peppol_outbound_credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: GET
- name: create_peppol_outbound_credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes
    method: POST
    headers:
      Content-Type: application/xml
      Content-Disposition: inline; filename=credit_notes.xml
- name: list_peppol_outbound_documents
  endpoint:
    path: /documents
    method: GET
- name: get_peppol_inbound_document
  endpoint:
    path: /inbound-documents/id
    method: GET
    headers:
      Accept: application/xml
- name: list_peppol_inbound_documents
  endpoint:
    path: /inbound-documents
    method: GET
- name: peppol_inbound_documents
  endpoint:
    path: /peppol/inbound-documents
    method: GET
    data_selector: data
    params:
      fromCreatedAt: '2020-01-01T00:00:00Z'
      supplierId: 57432bc2-4af1-4bd4-9cb8-81de60c8d76a
- name: business_statuses
  endpoint:
    path: /peppol/inbound-documents/id/business-statuses
    method: GET
    data_selector: data
- name: get_business_status
  endpoint:
    path: /peppol/inbound-documents/id/business-statuses/id
    method: GET
    data_selector: data
- name: create_business_status
  endpoint:
    path: /peppol/inbound-documents/id/business-statuses
    method: POST
    data_selector: data
- name: supplier
  endpoint:
    path: /suppliers/id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: peppolCustomerSearch
  endpoint:
    path: /peppol/customer-searches
    method: POST
    data_selector: data.attributes
    params: {}
- name: list_peppol_registrations
  endpoint:
    path: /suppliers/supplierId/registrations
    method: GET
    data_selector: data
    params: {}
- name: get_peppol_outbound_invoice
  endpoint:
    path: /suppliers/supplierId/invoices/id
    method: GET
    data_selector: data
    params: {}
- name: create_peppol_outbound_invoice
  endpoint:
    path: /suppliers/supplierId/invoices
    method: POST
    data_selector: data
    params: {}
- name: customer_search
  endpoint:
    path: /suppliers/supplierId/customer-searches
    method: POST
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /suppliers/supplierId/invoices
    method: POST
    data_selector: data
    params: {}
- name: get_invoice
  endpoint:
    path: /suppliers/supplierId/invoices/id
    method: GET
    data_selector: data
    params: {}
- name: credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: GET
    data_selector: data
- name: create_credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: POST
    data_selector: data
- name: list_documents
  endpoint:
    path: /documents
    method: GET
    data_selector: data
    params:
      fromStatusChanged: '2020-07-31T00:00:00Z'
- name: peppol_inbound_document_business_status_technical_status
  endpoint:
    path: /peppol/inbound/document/business/status/technical/status
    method: POST
    data_selector: attributes
    params: {}
- name: credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: create_credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes
    method: POST
    data_selector: data.attributes
    params: {}
- name: list_documents
  endpoint:
    path: /documents
    method: GET
    data_selector: data
    params: {}
- name: get_inbound_document
  endpoint:
    path: /inbound-documents/id
    method: GET
    data_selector: data.attributes
    params: {}
- name: inbound_documents
  endpoint:
    path: /inbound-documents
    method: GET
    data_selector: data
    params:
      fromCreatedAt: '2020-01-01T00:00:00Z'
      supplierId: 57432bc2-4af1-4bd4-9cb8-81de60c8d76a
- name: business_statuses
  endpoint:
    path: /inbound-documents/{id}/business-statuses
    method: GET
    data_selector: data
    params: {}
- name: business_status
  endpoint:
    path: /inbound-documents/{id}/business-statuses/{id}
    method: GET
    data_selector: data
    params: {}
- name: create_business_status
  endpoint:
    path: /inbound-documents/{id}/business-statuses
    method: POST
    data_selector: data
    params: {}
- name: bank_account_statement
  endpoint:
    path: /document-search
    method: GET
- name: payroll_statement
  endpoint:
    path: /payroll-statement
    method: GET
- name: sales_invoice
  endpoint:
    path: /sales-invoice
    method: GET
- name: purchase_invoice
  endpoint:
    path: /purchase-invoice
    method: GET
- name: customer_search
  endpoint:
    path: /suppliers/supplierId/customer-searches
    method: POST
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /suppliers/supplierId/invoices
    method: POST
    data_selector: data
    params: {}
- name: get_invoice
  endpoint:
    path: /suppliers/supplierId/invoices/id
    method: GET
    data_selector: data
    params: {}
- name: accounting_office_consents
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: POST
    data_selector: data
    params: {}
- name: credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: GET
- name: create_credit_note
  endpoint:
    path: /suppliers/supplierId/credit-notes/id
    method: POST
    headers:
      Content-Type: application/xml
      Content-Disposition: inline; filename=credit_notes.xml
- name: list_documents
  endpoint:
    path: /documents
    method: GET
    params:
      fromStatusChanged: '2020-07-31T00:00:00Z'
- name: accounting_office_consents
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: POST
    data_selector: data
    params: {}
- name: peppol_inbound_document_business_status_technical_status
  endpoint:
    path: /new-peppol-inbound-document-business-status-technical-status
    method: POST
    data_selector: attributes
    params: {}
- name: accounting-office-consents
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: GET
    data_selector: data
    params: {}
- name: document-search
  endpoint:
    path: /codabox-connect/accounting-offices/{accounting_office_id}/document-searches
    method: POST
    data_selector: data
    params: {}
- name: bank_account_statement
  endpoint:
    path: /codabox-connect/1/api/bank-account-statements
    method: GET
- name: payroll_statement
  endpoint:
    path: /codabox-connect/1/api/payroll-statements
    method: GET
- name: sales_invoice
  endpoint:
    path: /codabox-connect/1/api/sales-invoices
    method: GET
- name: purchase_invoice
  endpoint:
    path: /codabox-connect/1/api/purchase-invoices
    method: GET
- name: accounting_office_consents
  endpoint:
    path: /accounting-office-consents
    method: POST
    data_selector: data.attributes
    params: {}
- name: document_search
  endpoint:
    path: /accounting-offices/{accountingOfficeId}/document-searches
    method: POST
    data_selector: data.attributes
    params: {}
- name: bank_account_statements
  endpoint:
    path: /accounting-offices/{accountingOfficeId}/clients/{clientId}/bank-account-statements/{bankAccountStatementId}
    method: GET
    data_selector: data.attributes
    params: {}
- name: payroll_statements
  endpoint:
    path: /accounting-offices/{accountingOfficeId}/clients/{clientId}/payroll-statements/{payrollStatementId}
    method: GET
    data_selector: data.attributes
    params: {}
- name: accounting_office_consent
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: POST
    data_selector: data
    params: {}
- name: payroll_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/payroll-statements/payrollStatementId
    method: GET
    data_selector: data
- name: credit_card_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/credit-card-statements/creditCardStatementId
    method: GET
    data_selector: data
- name: sales_invoice
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/sales-invoices/salesInvoiceId
    method: GET
    data_selector: data
- name: purchase_invoice
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/purchase-invoices/purchaseInvoiceId
    method: GET
    data_selector: data
- name: invoice_screening
  endpoint:
    path: /invoice-screening
    method: POST
    data_selector: screeningResult
    params: {}
- name: accounting_office_consents
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: POST
    data_selector: data
    params: {}
- name: accounting_office_consents
  endpoint:
    path: /codabox-connect/accounting-office-consents
    method: GET
    data_selector: data
- name: document_search
  endpoint:
    path: /codabox-connect/accounting-offices/{accounting_office_id}/document-searches
    method: POST
    data_selector: data
- name: bank_account_statement
  endpoint:
    path: /codabox-connect/bank-account-statements
    method: GET
    data_selector: data
- name: payroll_statement
  endpoint:
    path: /codabox-connect/payroll-statements
    method: GET
    data_selector: data
- name: credit_card_statement
  endpoint:
    path: /codabox-connect/credit-card-statements
    method: GET
    data_selector: data
- name: sales_invoice
  endpoint:
    path: /codabox-connect/sales-invoices
    method: GET
    data_selector: data
- name: purchase_invoice
  endpoint:
    path: /codabox-connect/purchase-invoices
    method: GET
    data_selector: data
- name: validate_peppol_document
  endpoint:
    path: /invoice-screening/validate
    method: POST
    data_selector: data
    params: {}
- name: accounting_office_consent
  endpoint:
    path: /accounting-office-consents
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_accounting_office_consent
  endpoint:
    path: /accounting-office-consents/accountingOfficeConsentId
    method: GET
    data_selector: data.attributes
    params: {}
- name: document_search
  endpoint:
    path: /accounting-offices/accountingOfficeId/document-searches
    method: POST
    data_selector: data.attributes
    params: {}
- name: get_bank_account_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/bank-account-statements/bankAccountStatementId
    method: GET
    data_selector: data.attributes
    params: {}
- name: payroll_statement
  endpoint:
    path: /payroll-statements
    method: GET
    data_selector: data.attributes
    params: {}
- name: invoice_validation_result
  endpoint:
    path: /invoice-screening/validate
    method: POST
    data_selector: data
    params: {}
- name: payroll_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/payroll-statements/payrollStatementId
    method: GET
- name: credit_card_statement
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/credit-card-statements/creditCardStatementId
    method: GET
- name: sales_invoice
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/sales-invoices/salesInvoiceId
    method: GET
- name: purchase_invoice
  endpoint:
    path: /accounting-offices/accountingOfficeId/clients/clientId/purchase-invoices/purchaseInvoiceId
    method: GET
- name: invoice_validation_result
  endpoint:
    path: /invoice-screening/1/api/curl#invoice-validation-result
    method: GET
    data_selector: data
- name: invoice_screening
  endpoint:
    path: /invoice-screening/validate
    method: POST
- name: Caro
  endpoint:
    path: /Caro
    method: GET
    data_selector: Caro
    params: {}
- name: invoice_screening
  endpoint:
    path: /invoice-screening
    method: POST
    data_selector: screening_result
    params: {}
- name: invoice_screening_result
  endpoint:
    path: /invoice-screening/validate
    method: POST
    data_selector: data
    params: {}
- name: validate_peppol_document
  endpoint:
    path: /invoice-screening/validate
    method: POST
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /ponto-connect/accounts
    method: GET
    data_selector: data
    params: {}
- name: invoice_validation_result
  endpoint:
    path: /invoice-screening/1/api/curl#invoice-validation-result
    method: GET
    data_selector: records
- name: invoice_screening
  endpoint:
    path: /invoice-screening/validate
    method: POST
- name: Caro
  endpoint:
    path: /Caro
    method: GET
    data_selector: Caro
    params: {}
notes:
- API uses HTTPS only and returns JSON payloads.
- Supports pagination for document search.
- Ibanity uses TLS with mutual authentication to secure server-to-server communication
- In sandbox mode, we generate one for you. You will be required to provide a passphrase
  for that sandbox certificate.
- Always secure the communication in the transport layer by using TLS with mutual
  authentication.
- In the application layer, we mostly use OAuth2 (except for XS2A).
- The previous version of the API is always supported for at least 6 months.
- Only applications using XS2A or Ponto Connect will be able to utilize webhooks.
- Different keys are used to sign sandbox and live webhook notifications.
- You must access the bank accounts of your customer in compliance with PSD2 regulatory
  technical standards (PSD2 RTS).
- Customer Access Tokens are sensitive credentials that you should store securely.
- A customer has only one active Customer Access Token at a time, per application.
- Each linked user will have his own set of OAuth tokens.
- The payment initiation service is enabled by default in the sandbox.
- You must create two separate organizations in two different Ponto accounts to test
  the Ponto for representatives feature in the sandbox.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- All API calls require a valid access token
- Refresh token expires after 90 days
- The Flowin API is easy to integrate in any software application.
- Valid uploaded document is stored temporarily in the Flowin e-invoicing system.
- Only Belgian IBANs are supported on Zoomit.
- Flowin e-invoicing aims to increase the volume of digital invoices in Belgium and
  to achieve this we have launched the Digicrowd initiative.
- CodaBox Connect cannot be used by non-accounting or internal software to fetch documents
  of users.
- Valid uploaded documents are stored temporarily in the Flowin e-invoicing system.
- Multiple integrators may receive documents on behalf of the same recipient.
- CodaBox Connect cannot be used by non-accounting or internal software to fetch documents
  of your users.
- Redirect model is used for initiating access requests.
- Redirect model implemented for authorization process.
- Uses OAuth2 with consent authorization.
- Sandbox application required for testing
- You can implement a maximum of four unattended access to your customer's bank account
  per period of 24 hours.
- Must comply with PSD2 regulatory technical standards
- Up to four unattended accesses per 24 hours
- Make sure you’ve followed the steps in the Fundamentals Go Live guide to create
  a team with a live application and request access to XS2A.
- A Customer Access Token is used as a bearer token in the authorization header of
  your HTTP requests.
- To use XS2A in live conditions, you must be authorized as a payment institution.
- Once the XS2A product is activated, it is time to generate the certificates that
  will secure your communications with the Ibanity API.
- The QWAC and QSealC will only be used by Ibanity, never by yourself directly.
- You need no specific license to test all functionalities of XS2A in your sandbox.
- To use XS2A in live conditions, you must be authorized as a payment institution
  by your competent authority.
- The XS2A product is now available on Ibanity! Check the documentation for more details.
- HTTP requests for live applications must be signed.
- The API provides a request identifier with each response.
- Uses certificate-based authentication
- HTTP requests for live applications must be signed
- UUID V4 required for idempotency key in create and update requests.
- Uses OAuth2 with customer access token for authorization.
- Requires setup of customer access tokens for accessing customer-specific endpoints
- The synchronization API endpoints are customer specific and therefore can only be
  accessed by providing the corresponding customer access token.
- HTTPS is required for live applications.
- 'Authorization requires customer access token provided in the format ''Authorization:
  Bearer {customerAccessToken}'''
- Requires setup of customer access token
- Make sure to handle the authorization flow properly
- Cursor for pagination is available with page[before] and page[after] parameters.
- Customer access token required for accessing account API endpoints.
- Customer access token must be provided for each request.
- Uses OAuth2 with Bearer token for authorization
- Uses OAuth2 with customer access token
- Deleting limit for execution of the transaction delete request must be minimum 90
  days ago.
- Deleting limit for transaction delete request must be minimum 90 days ago.
- Deleting limit for transaction delete requests must be a minimum of 90 days ago.
- The availability of requested execution date depends on each financial institution.
- When creating the payment initiation request, you will receive the redirect link
  in the response.
- UUID V4 for the request to ensure that it isn't processed multiple times
- Use UUID V4 for the Ibanity-Idempotency-Key to ensure unique requests.
- Requires setup of customer access token.
- UUID V4 for requests must be generated to avoid processing multiple times.
- Requires UUID V4 for idempotency key in requests
- UUID V4 is used for Ibanity-Idempotency-Key to ensure unique request processing.
- The response format is always application/vnd.api+json.
- Requires setup of financial institution and user IDs in the URL.
- Returns a list of financial institution account resources
- Returns the specified financial institution account resource or 404 if not found
- Requires UUID format for pagination cursor.
- Uses Accept header to specify response format
- Cursor-based pagination is implemented with page[limit]
- UUID V4 for requests to ensure they aren't processed multiple times
- Uses UUID V4 for the request to ensure that it isn't processed multiple times.
- Uses application/vnd.api+json for both request and response formats
- Requires setup of client certificates for secure connections
- API requests must be signed for live applications.
- Pagination is cursor-based with a default limit of 10.
- UUID format is used for pagination cursors and idempotency keys.
- Uses certificate-based authentication.
- Requires signing of HTTP requests for live applications.
- The API requires a customer access token for customer-specific endpoints.
- Requires customer access token for customer-specific endpoints
- When creating account information access request, a redirect link is provided.
- Customer access token is required to access customer-specific endpoints.
- When creating the account information access request, you will receive the redirect
  link in the response.
- Customer access token is required for accessing account API endpoints.
- 'Requires a customer access token provided in the form Authorization: Bearer {customerAccessToken}'
- Customer access token is required for all endpoints.
- Pending transaction API endpoints are customer specific and can only be accessed
  by providing the corresponding customer access token.
- Pending transaction API endpoints are customer specific and require customer access
  token
- Deleting limit must be minimum 90 days ago.
- The delete process will keep a minimum of 5 dates of transactions for future synchronizations.
- The Holding API endpoints are customer specific and therefore can only be accessed
  by providing the corresponding customer access token.
- The financial institution may ignore batchBookingPreferred parameter.
- 'Requires customer access token in the form ''Authorization: Bearer {customerAccessToken}'''
- Ensure to provide correct UUID for financial institution and payment requests.
- When authorizing periodic payment initiation, use '123456' as the digipass response.
- Always use UUID V4 for the Ibanity-Idempotency-Key
- Returns a list of financial institution account resources.
- Format of the response should always be 'application/vnd.api+json'
- UUID V4 for the request to ensure that it isn't processed multiple times.
- Each linked user will have their own set of OAuth tokens.
- Remember that these production credentials provide you access to real financial
  data, please create and store them with great care and according to industry security
  standards.
- Users must authenticate using their Isabel 6 smartcard.
- The 'itsme' authentication method is not yet supported.
- User linking flow has changed in version 2.
- Refresh token is valid for 90 days and can be reused.
- All API calls to Isabel Connect require a valid access token.
- The `client_id` and the `client_secret` are provided to you during the activation
  process of your Isabel Connect application.
- The refresh token is the one you obtained during the user linking process.
- API is HTTPS only and returns JSON payloads following jsonapi conventions.
- Idempotency is supported to prevent duplicate requests.
- User must authenticate with Isabel 6 smartcard.
- Users can withdraw consent through the user linking application in Isabel 6.
- The refresh and access tokens you are using with V1 are not compatible with V2.
- The Ibanity API is HTTPS only and returns JSON payloads.
- Requires certificate for authentication.
- The Ibanity API is HTTPS only and returns JSON payloads, following jsonapi conventions.
- Idempotency is supported for POST and PATCH requests.
- The API is HTTPS only and returns JSON payloads.
- API is HTTPS only and returns JSON payloads.
- The API uses HTTPS only and follows JSON API conventions.
- The `after` parameter must be the `id` of the last report file in the response.
- Selecting an `id` for the `after` parameter based on other logics may result in
  unexpected behavior.
- 'Authorization token must be provided in the format ''Authorization: Bearer {accessToken}'''
- Content-Disposition is mandatory in the request
- Idempotency keys are optional for POST and PATCH requests.
- All API calls to Ponto Connect require a valid access token.
- A refresh token expires after 90 days.
- Authorization header should contain 'Bearer {accessToken}'
- The new 'customerIpAddress' attribute is now mandatory when creating a synchronization.
- End users do not have to sign in each time they sign a payment or reauthorize an
  account anymore.
- Ponto is now synchronizing account information 4 times a day automatically
- The deprecated `rsa-sha256` signature scheme isn’t supported anymore
- Uses OAuth2 with refresh token — requires setup of connected app in Ponto
- Refresh token expires after 90 days if not used
- Uses certificate-based authentication — generated in Developer Portal
- Synchronization may take time due to remote financial institutions
- Your customer can revoke your integration at any time in Ponto via their dashboard.
- The best option is to use a client access token and the organization id of your
  customer integration to revoke an integration.
- Uses certificate authentication — requires setup of certificate in Developer Portal
- Idempotency keys are optional for POST and PATCH requests
- Version 1 is now deprecated with an end-of-life date set on the 15th of June 2023.
- Idempotency keys are not supported for GET and DELETE calls because such calls are
  fundamentally idempotent.
- Synchronization may only be created when at least 30 minutes have passed since the
  last synchronization of the same account and subtype.
- Asynchronous data synchronization may have delays.
- Uses Basic Authentication with certificate and private key
- Returns a financial institution resource or a 404.
- Uses certificate-based authentication with the Developer Portal.
- Requires signing of payment HTTP requests for live applications.
- Authorization requires a Bearer token.
- The response must always include 'application/vnd.api+json' in the Accept header.
- Uses certificate authentication.
- Client certificate required for authentication
- Asynchronous data synchronization may introduce delays
- 'Authorization requires an access token in the format: Authorization: Bearer {accessToken}'
- Authorization token required for every request
- Requires an access token for authorization
- 'Requires access token in the form Authorization: Bearer {accessToken}'
- Requires setup of access token for authorization
- 'Authorization token format: Bearer {accessToken}'
- Uses API key for authentication.
- To improve security, HTTP requests for live applications must be signed.
- Returns a list of financial institutions.
- 'Authorization token should be provided in the format ''Authorization: Bearer {accessToken}'''
- Uses mutual TLS for authentication with certificates
- Asynchronous data synchronization may have delays
- Requires an access token provided via Authorization header.
- Only the financial institutions corresponding to authorized accounts will be available
  on the API.
- When authorizing payment initiation in the sandbox, use the pre-filled credentials
  and `123456` as the digipass response.
- When authorizing bulk payment initiation in the sandbox, use the pre-filled credentials
  and `123456` as the digipass response.
- Uses OAuth2 with Bearer token
- Authorization header must include Bearer token
- 'Authorization must be provided in the format ''Authorization: Bearer {accessToken}'''
- Some transactions may return nulls in deeply nested fields
- Asynchronous data synchronization may experience delays
- Requires authorization to access financial institution data
- Requires valid certificates for authentication
- Use sandbox credentials for testing
- Uses OAuth2 with access tokens.
- Requires OAuth2 access token for authorization
- Authorization is required for all requests
- Requires valid OAuth2 access token.
- Uses certificate-based authentication for requests.
- Requires setup of OAuth2 for authentication
- Redirect URI is needed for authorization flows
- Requires setup of OAuth2 authorization with access tokens
- Requires setup of connected app in api
- The endpoint requires valid access tokens in the Authorization header.
- Sandbox accounts are available only to the related organization.
- Use of OAuth2 requires setup of access tokens
- API responses are in JSON format
- Requires appropriate certificates for authentication
- Uses mutual TLS for authentication
- Requires setup of certificates in the Developer Portal
- Requires setup of connected app in ibanity
- Some requests may require specific account permissions
- API calls are limited to 100 resources per request.
- Format of the response you expect from the call should always be 'application/vnd.api+json'
- The API supports pagination through 'page[after]' and 'page[limit]' parameters.
- Uses OAuth2 — requires setup of connected app in Ponto.
- Uses OAuth2 for authorization.
- Authorization token required for all requests.
- Requires setup of OAuth2 authentication
- Requires the correct Authorization header with a Bearer token
- Requires client certificate and private key for authentication.
- Redirect URI is required for certain flows.
- Uses OAuth2 with access token
- Authorization token is required in the format 'Bearer {accessToken}'
- Uses certificate-based authentication — requires setup of client certificates in
  Developer Portal.
- Asynchronous data synchronization may introduce delays.
- The onboarding details object will only be available to be linked to a new Ponto
  user for five minutes following its creation.
- The API is HTTPS only and returns JSON payloads following jsonapi conventions.
- Idempotency is supported to prevent the same request from being performed more than
  once.
- An empty response body is expected for the revoke endpoint.
- When the authorization towards the account is expected to end is provided in the
  response.
- Uses OAuth2 with Bearer token for authorization — requires client credentials.
- Uses OAuth2 for authorization
- Requires certificate and private key for secure connections.
- Uses Authorization Bearer token for authentication
- Webhooks are delivered as POST requests.
- For security purposes, onboarding details object will only be available for five
  minutes following its creation.
- Idempotency keys are not supported for GET and DELETE calls.
- Asynchronous data synchronization may face delays.
- Requires client certificate and private key for authentication
- Event types are specific to the point of the synchronization process.
- Authentication uses client certificates.
- The refresh_token can only be used once; a new one will be returned along with the
  access token.
- Synchronization may only be created when at least 30 minutes have passed since the
  last synchronization.
- Uses certificate authentication — requires setup of certificates in Developer Portal
- Asynchronous data synchronization may involve delays
- Uses certificate for authentication — requires setup of a certificate in the Developer
  Portal.
- Asynchronous data synchronization may experience delays.
- Requires setup of OAuth2 for access tokens
- Use of OAuth2 token required in the Authorization header.
- Uses client certificate for authentication
- Pagination based on cursor
- An account may be revoked from an integration using the revoke account endpoint.
- Ensure to handle token expiration
- Uses certificate-based authentication — certificate and private key must be provided.
- Response format is always application/vnd.api+json
- For live payment requests, you must have already requested and been granted the
  payment request service for your organization.
- Format of the response expected is application/vnd.api+json
- Asynchronous data synchronization may take time.
- Uses API key for authorization
- Requires client certificate and private key for secure connection
- 'Authorization token must be provided in the format: Authorization: Bearer {accessToken}'
- Accept header should always be 'application/vnd.api+json'
- When authorizing payment initiation in the sandbox, use pre-filled credentials and
  `123456` as the digipass response.
- When authorizing bulk payment initiation in the sandbox, use pre-filled credentials
  and `123456` as the digipass response.
- Use Authorization Bearer token for accessing endpoints
- API uses certificate-based authentication
- Requires signing of payment HTTP requests for live applications
- Requires client certificates for authentication.
- 'Requires access token provided in the form Authorization: Bearer {accessToken}'
- Requires setup of API keys for access
- Asynchronous data synchronization may experience timeouts and delays.
- Some financial institutions may return nulls for certain fields
- 'Authorization: Bearer {accessToken} is required.'
- Authorization is required in the form of Bearer token.
- Ensure to provide a valid access token in the Authorization header.
- Asynchronous data synchronization is used for account and transaction data.
- Requires setup of certificates for authentication
- Requires valid access token in the Authorization header
- Requires setup of access token for authentication
- Uses OAuth2 with Bearer token for authentication.
- These sandbox accounts are available only to the related organization, and can be
  authorized in the Ponto dashboard.
- 'Uses Bearer token for authorization in the format Authorization: Bearer {accessToken}'
- Use client certificate for authentication.
- Use correct UUID format for accountId and transaction ID in the endpoint.
- For sandbox payments, use pre-filled credentials and 123456 as the digipass response.
- When authorizing payment requests in the sandbox, use the credentials shown in the
  Ponto dashboard.
- Requires setup of API access and OAuth2 authentication
- Responses include links for pagination.
- Requires client certificates for authentication
- Uses OAuth2 with bearer token for authorization
- Uses client certificate for authentication — generated in Developer Portal
- Asynchronous data synchronization may cause delays
- The onboarding details object will only be available for five minutes following
  its creation.
- Ensure to handle authorization and token management as per OAuth2 standards.
- The API is HTTPS only and follows JSON API conventions.
- Asynchronous data synchronization may result in timeouts and delays.
- Uses OAuth2 for authorization — requires access token for requests.
- Requires an access token in the Authorization header.
- 'Authorization token should be provided in the format: Authorization: Bearer {accessToken}'
- Requires setup of connected app
- Sandbox environment available for testing
- Requires valid access token for authorization
- Requires setup of OAuth2 with access token
- 'Requires access token in the format ''Authorization: Bearer {accessToken}'''
- Requires the use of certificate and private key for authentication.
- Access token is required for API calls.
- Some endpoints require accountId to be specified.
- Requires client access token for authorization.
- Redirection flow works in sandbox but does not prompt for payment activation.
- When using the endpoint in the sandbox, the redirection flow will work but the user
  will not be prompted to request payment activation as this is enabled by default
  in the sandbox.
- The Flowin sandbox interface is identical to the live interface.
- In sandbox, the use of a valid access token is mandatory.
- 'Event types include: pontoConnect.synchronization.succeededWithoutChange, pontoConnect.synchronization.failed,
  pontoConnect.account.detailsUpdated, pontoConnect.account.transactionsCreated, pontoConnect.account.transactionsUpdated,
  pontoConnect.account.pendingTransactionsCreated, pontoConnect.account.pendingTransactionsUpdated.'
- Implement webhooks to receive notifications about new documents or supplier onboarding
  status.
- You will need one certificate to establish an encrypted communication channel with
  Ibanity (TLS with mutual authentication).
- Flowin e-invoicing does not resend documents that previously failed to send.
- It is not possible to download documents sent over the Flowin e-invoicing API.
- New field `rejectReason` that displays the reason code in case a supplier is rejected
  during KYC (only when KYC is outsourced to Flowin).
- It is now possible to onboard **Irish (IE)** and **Swedish (SE)** suppliers.
- Uses OAuth2 with refresh token — requires setup of connected app in Flowin
- Some objects may return nulls in deeply nested fields
- API is HTTPS only and returns JSON payloads
- Only companyNumber or enterpriseIdentification can be provided, preferably enterpriseIdentification.
- Be careful when updating the company names and/or ibans of a supplier.
- When updating the existing company names and/or ibans of a supplier, always start
  with a fresh copy of the existing list.
- Uses Bearer token for authorization
- Format of response should be 'application/vnd.api+json'
- Format of payload being sent should be 'application/xml'
- Uses OAuth2 with client credentials
- The validation artefacts are updated on a regular basis to use the latest version
  available.
- Uses certificate-based authentication — requires management of certificates in the
  Developer Portal
- The invoice and credit note resources are identified by unique IDs.
- The response format for the invoice and credit note includes attributes such as
  createdAt, status, and technicalStatus.
- Ibanity API uses HTTPS only and returns JSON payloads.
- You can manage your certificates in the Developer Portal.
- Belgian participants are registered with the Belgian company number, for which identifier
  0208 can be used.
- Optionally, the customer can be registered with their VAT number, for which identifier
  9925 can be used.
- Zoomit only allows certain characters to be present in the UBL.
- The maximum file size is 100MB.
- Documents retrieved via Peppol will be delivered in UBL BIS 3.0 format and - if
  available - also the PDF format.
- Uses Bearer token for authorization.
- Visit Codabox website for answers to questions related to Codabox
- Supports multiple document formats including JSON and PDF.
- Requires specific headers for content type and acceptance.
- To authenticate, use the certificate you generated for your application.
- 'Authorization string should be provided in the form Authorization: Bearer {accessToken}'
- Format of payload being sent with the request should always be application/xml
- You do not need to specify any redirection URLs for Invoice screening.
- 'Access token provided in the form ''Authorization: Bearer {accessToken}'''
- Format of payload being sent with the request should always be 'application/xml'
errors:
- '400: Bad Request - Something is missing or wrong in your request.'
- '401: Unauthorized - Wrong credentials. Certificate invalid or not provided.'
- '403: Forbidden - Request cannot be executed in the current environment.'
- '404: Not found - Requested resource not found.'
- '409: Conflict - Request conflict with current state of the target resource.'
- '500: Server error - Something went wrong on our side.'
- '503: Service Unavailable - We''re temporarily offline for maintenance.'
- '400 Bad Request: Something is missing or wrong in your request.'
- '401 Unauthorized: Wrong credentials. Certificate invalid or not provided.'
- '403 Forbidden: Request cannot be executed in the current environment.'
- '404 Not found: Requested resource not found.'
- '500 Server error: Something went wrong on our side.'
- '503 Service Unavailable: We''re temporarily offline for maintenance.'
- '401 Unauthorized: Recheck OAuth token.'
- If we do not receive any success responses from your endpoint over multiple days,
  we will contact you via email to warn you.
- 'synchronization.failed: Sync failed'
- 'synchronization.succeededWithoutChange: AccountDetails sync successful with no
  change in details'
- 'account.transactionsUpdated: AccountTransactions sync successful and transactions
  updated'
- 'accepted-customer-profile: Preceding check of technical validation was successful.
  Customer profile check was also successful.'
- 'accepted-settlement-completed: Settlement on the debtor’s account has been completed.'
- 'accepted-settlement-in-process: All preceding checks such as technical validation
  and customer profile were successful.'
- '401 Unauthorized: Check access token validity'
- '403 Forbidden: Verify permissions for the requested operation'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '400 Bad Request: Check the structure of the document being sent.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 'general-error: Usually due to a network error or unexpected response.'
- 'already-registered: Supplier’s identifier has already been registered on another
  Access Point.'
- 'blocked: Registration is blocked due to another identifier of the same Supplier
  being registered.'
- 'account.detailsUpdated: AccountDetails sync successful with changes in details'
- 'account.transactionsUpdated: AccountTransactions sync successful but no transactions
  updated or created'
- 'account.transactionsCreated: AccountTransactions sync successful and transactions
  created'
- synchronization.failed
- synchronization.succeededWithoutChange
- account.detailsUpdated
- account.transactionsUpdated
- account.transactionsCreated
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck your authorization credentials'
- '404: Not Found'
- '400: Bad Request'
- 'Invalid Authorization: Check your customer access token.'
- 'Resource Not Found: Ensure the resource exists before accessing.'
- '401 Unauthorized: Recheck customer access token or its format.'
- '401 Unauthorized: Recheck customer access token.'
- '404 Not Found: Resource not found.'
- '400 Bad Request: Invalid request format or parameters.'
- 'rejected: If the payment initiation is not authorized.'
- 'rejected: Payment initiation not authorized'
- '401 Unauthorized: Recheck Authorization token'
- '404 Not Found: Check if the requested resource exists'
- '404 Not Found: Check if the financial institution account exists.'
- '404 Not Found: Resource does not exist'
- '404 Not Found: Resource not found'
- '400 Bad Request: Invalid request format or parameters'
- '404 Not Found: Check the identifiers for the financial institution holding'
- '400 Bad Request: Ensure the request payload is correctly formatted'
- '401 Unauthorized: Invalid or expired customer access token.'
- '403 Forbidden: Access denied, insufficient permissions.'
- '404: Resource not found'
- '400: Bad request'
- '401: Unauthorized'
- '401 Unauthorized: Recheck customer access token or its expiration'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Resource does not exist.'
- '404 Not Found: The specified transaction does not exist'
- '400 Bad Request: Check request payload and headers'
- '401 Unauthorized: Recheck Authorization Bearer token'
- '404 Not Found: Ensure the endpoint is correct and the resource exists'
- '401 Unauthorized: Recheck Authorization header or token validity'
- '404 Not Found: If the transaction is not found'
- '404: Not Found - Requested resource not found.'
- '401 Unauthorized: Check user authentication and consent status.'
- 'invalidCredentials: Your credentials are invalid.'
- '404 Not Found: Requested resource not found.'
- '404 Not Found: The specified report could not be found.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '401 Unauthorized: Recheck access token validity'
- 'invalid_grant: The refresh token is not valid or already used.'
- 'authorizationInvalid: The authorization is invalid'
- 'authorizationRevoked: The authorization has been revoked by the user'
- 'authorizationExpired: The authorization has expired'
- 'technicalFailure: The synchronization failed due to technical reasons'
- 'integration.revoked: The integration has been revoked by the customer.'
- 'integration.disabled: The integration has been disabled due to an expired refresh
  token.'
- 'authorizationInvalid: The authorization is invalid.'
- 'authorizationRevoked: The authorization has been revoked by the user.'
- 'authorizationExpired: The authorization has expired.'
- 'technicalFailure: The synchronization failed (temporarily), due to technical reasons.'
- 'invalid_grant: Refresh token is not valid or already used'
- '404 Not Found: The specified account was not found.'
- '401 Unauthorized: Invalid access token'
- '401 Unauthorized: Access token is invalid or expired'
- '401 Unauthorized: Recheck OAuth token'
- '401 Unauthorized: Access token is invalid or expired.'
- '401 Unauthorized: Check the access token validity'
- '404 Not Found: Ensure the transaction ID or account ID is correct'
- 'authorizationInvalid: The authorization is invalid, you should ask the user to
  reauthorize the account on their Ponto dashboard'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Ensure the endpoint exists'
- '422 Unprocessable Entity: Validate your request payload'
- '404 Not Found: Check if the resource ID is correct.'
- '400: Bad Request: Something is missing or wrong in your request.'
- '401: Unauthorized: Wrong credentials. Certificate invalid or not provided.'
- '403: Forbidden: Request cannot be executed in the current environment.'
- '404 Not Found: Check the endpoint path and parameters'
- '400 Bad Request: Validate request payload'
- '404 Not Found: Check if the financial institution ID is correct'
- '401 Unauthorized: Check the access token.'
- '401 Unauthorized: Invalid or expired access token'
- '404 Not Found: Check endpoint path or resource id'
- '404 Not Found: Ensure the accountId is correct'
- '400 Bad Request: Invalid request parameters.'
- '404 Not Found: If the transaction is not found.'
- '404 Not Found: Check if the account ID is correct.'
- '401 Unauthorized: Check if the access token is valid.'
- '404 Not Found: Check if the transaction ID is correct'
- '401 Unauthorized: Ensure the access token is valid'
- '401 Unauthorized: Check access token.'
- '403 Forbidden: Ensure permissions are granted for requested operation.'
- 'Unauthorized: Recheck access token or permissions'
- 'authorizationExpired: The authorization has expired, you should ask the user to
  reauthorize the account on their Ponto dashboard'
- '404 Not Found: The specified account does not exist.'
- '404 Not Found: Check the resource ID or account ID.'
- '401 Unauthorized: Check API key or token.'
- '404 Not Found: Ensure endpoint URL is correct.'
- '401 Unauthorized: Check access token validity.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- 'technicalFailure: The synchronization failed (temporarily), due to technical reasons'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: Ensure the endpoint exists.'
- '500 Internal Server Error: Try again later.'
- 'technicalFailure: The synchronization failed due to technical reasons.'
- '404 Not Found: Account not found'
- '403 Forbidden: Invalid access token'
- '403 Forbidden: Request cannot be executed in the current environment. Sent when
  attempting to use sandbox routes with production applications.'
- '404: Not found'
- '401 Unauthorized: Invalid API key or token'
- '400 Bad Request: Check request payload structure'
- '404 Not Found: Check the transaction ID or account ID'
- '400 Bad Request: Verify the request parameters'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Invalid or missing authentication'
- '404: Not found: Requested resource not found.'
- '401 Unauthorized: Recheck OAuth token or client certificate.'
- '404 Not Found: Ensure the accountId and transaction ID are correct.'
- '400 Bad Request: Check the query parameters for correctness.'
- '404 Not Found: Check the resource ID'
- '401 Unauthorized: Invalid token'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Recheck OAuth token or permissions'
- 'authorizationInvalid: The authorization is invalid, reauthorize the account'
- 'authorizationExpired: The authorization has expired, reauthorize the account'
- '404 Not Found: Check if the account ID exists.'
- '404 Not Found: Check if the requested resource exists.'
- '404 Not Found: Check endpoint path or resource ID'
- '422 Unprocessable Entity: Review request payload for errors'
- '404 Not Found: Check if the resource exists'
- '404 Not Found: Check if the resource exists or if the ID is correct'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify OAuth token and permissions'
- '404 Not Found: Ensure endpoint exists and is correct'
- 'Transmission ID not available: Check with the receiving party''s Peppol Access
  Point provider.'
- 'Invalid document format: Ensure compliance with specific format requirements.'
- '403: Forbidden'
- '500: Server error'
- '503: Service Unavailable'
- '403: Forbidden - Request cannot be executed in the current environment. Sent when
  attempting to use sandbox routes with production applications.'
- '500: Server error - Something went wrong on our side... It should not happen often...'
- '503: Service Unavailable - We''re temporarily offline for maintenance. Please try
  again later.'
- Request failed when the array includes objects with unknown id's
- '204 No Content: The request was successful, and the server has fulfilled the request.'
- 'invalid-malicious: The integrity of the document could not be verified.'
- 'invalid-format: The format of the document is not supported.'
- 'invalid-xsd: The XSD validation failed for the document.'
- 'invalid-schematron: The schematron validation failed for the document.'
- 'invalid-identifiers: The supplier data in the document could not be verified.'
- 'invalid-size: The size of the document exceeds 100MB.'
- 'invalid-type: The document is not an xml.'
- '401 Unauthorized: Recheck Authorization token.'
- '409 Conflict: Request conflict with current state of the target resource.'
- '500: Server error: Something went wrong on our side.'
- '503: Service Unavailable: We''re temporarily offline for maintenance.'
- '500 Server error: Something went wrong on our side... It should not happen often...'
- '503 Service Unavailable: We''re temporarily offline for maintenance. Please try
  again later.'
auth_info:
  mentioned_objects:
  - client_id
  - client_secret
  - authorization_code
  - refresh_token
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - ClientCredentials
  - RefreshToken
  - customer access token
  - customerAccessToken
  - customer
  - access token
  - refresh token
  - Access token
  - Authorization
  - token
  - accessToken
  - access_token
  - Access Token
  - Token
  - Bearer
  - eInvoicing.inbound.document.new
  - eInvoicing.supplier.onboarded
  - eInvoicing.supplier.kyc.rejected
client:
  base_url: https://api.ibanity.com/ponto-connect
  auth:
    type: certificate
    location: header
  paginator:
    type: cursor
    page_size_param: page[limit]
    default_page_size: 10
source_metadata: null
