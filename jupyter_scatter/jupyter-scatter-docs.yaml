resources:
- name: scatter.label
  endpoint:
    path: /scatter/label
    method: GET
- name: scatter.annotations
  endpoint:
    path: /scatter/annotations
    method: GET
- name: scatter.tooltip
  endpoint:
    path: /scatter/tooltip
    method: GET
- name: scatter.show_tooltip
  endpoint:
    path: /scatter/show_tooltip
    method: GET
- name: scatter.zoom
  endpoint:
    path: /scatter/zoom
    method: GET
- name: scatter.camera
  endpoint:
    path: /scatter/camera
    method: GET
- name: scatter.mouse
  endpoint:
    path: /scatter/mouse
    method: GET
- name: scatter.lasso
  endpoint:
    path: /scatter/lasso
    method: GET
- name: scatter.reticle
  endpoint:
    path: /scatter/reticle
    method: GET
- name: scatter.background
  endpoint:
    path: /scatter/background
    method: GET
- name: scatter.options
  endpoint:
    path: /scatter/options
    method: GET
- name: scatter.pixels
  endpoint:
    path: /scatter/pixels
    method: GET
- name: okabe_ito
  endpoint:
    path: /okabe_ito
    method: GET
    data_selector: colors
    params: {}
- name: glasbey_light
  endpoint:
    path: /glasbey_light
    method: GET
    data_selector: colors
    params: {}
- name: glasbey_dark
  endpoint:
    path: /glasbey_dark
    method: GET
    data_selector: colors
    params: {}
- name: ColorMap2DBremm
  endpoint:
    path: /ColorMap2DBremm
    method: GET
    data_selector: colors
    params: {}
- name: ColorMap2DCubeDiagonal
  endpoint:
    path: /ColorMap2DCubeDiagonal
    method: GET
    data_selector: colors
    params: {}
- name: ColorMap2DSchumann
  endpoint:
    path: /ColorMap2DSchumann
    method: GET
    data_selector: colors
    params: {}
- name: ColorMap2DSteiger
  endpoint:
    path: /ColorMap2DSteiger
    method: GET
    data_selector: colors
    params: {}
- name: ColorMap2DTeuling2
  endpoint:
    path: /ColorMap2DTeuling2
    method: GET
    data_selector: colors
    params: {}
- name: ColorMap2DZiegler
  endpoint:
    path: /ColorMap2DZiegler
    method: GET
    data_selector: colors
    params: {}
- name: color_maps
  endpoint:
    path: /color_maps
    method: GET
    data_selector: maps
    params: {}
- name: HLine
  endpoint:
    path: /annotations/hline
    method: POST
    data_selector: arguments
    params: {}
- name: VLine
  endpoint:
    path: /annotations/vline
    method: POST
    data_selector: arguments
    params: {}
- name: Line
  endpoint:
    path: /annotations/line
    method: POST
    data_selector: arguments
    params: {}
- name: Rect
  endpoint:
    path: /annotations/rect
    method: POST
    data_selector: arguments
    params: {}
- name: Contour
  endpoint:
    path: /annotations/contour
    method: POST
    data_selector: arguments
    params: {}
- name: LabelPlacement
  endpoint:
    path: /labelplacement
    method: POST
    data_selector: arguments
    params: {}
- name: scatter_widget
  endpoint:
    path: /scatter/widget
    method: POST
- name: scatter
  endpoint:
    path: /scatter
    method: GET
    data_selector: records
- name: scatter
  endpoint:
    path: /scatter
    method: GET
    data_selector: records
- name: scatter_plot
  endpoint:
    path: /api/scatter
    method: GET
    data_selector: data
    params: {}
notes:
- Some objects like Contact may return nulls in deeply nested fields
- Currently only one column can be marked with an exclamation mark. If multiple columns
  are marked, only the first one is treated as containing point labels.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Default value depends on the luminance of the background color.
- This method clears existing labels and tiles to allow spatial properties to be changed.
- This property is read-only after labels have been computed as changing font faces
  may affect spatial placement.
- This property is read-only after labels have been computed as changing font sizes
  may affect spatial placement.
- This property is read-only after labels have been computed as changing zoom ranges
  affects spatial placement.
- By default, Jupyter Scatter references points by their range index.
- If you have bound a DataFrame to the scatter instance, you can use these indices
  to retrieve the original data records.
- For the time scale to work, the data needs to be in the form of timestamps given
  as the number of milliseconds since the beginning of the Unix epoch.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://pypi.org/project/jupyter-scatter/
  headers:
    Accept: application/json
source_metadata: null
