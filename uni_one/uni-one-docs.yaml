resources:
- name: email_send
  endpoint:
    path: /email/send.json
    method: POST
    data_selector: message
    params: {}
- name: send_email
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: status
- name: email_subscribe
  endpoint:
    path: /email/subscribe.json
    method: POST
    data_selector: status
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single.json
    method: POST
    data_selector: status
    params: {}
- name: template_set
  endpoint:
    path: /template/set.json
    method: POST
- name: template
  endpoint:
    path: /templates
    method: POST
    data_selector: template
- name: template
  endpoint:
    path: /template/get.json
    method: POST
    data_selector: template
    params:
      id: string
- name: template_list
  endpoint:
    path: /template/list.json
    method: POST
    data_selector: templates
    params:
      limit: 50
      offset: 0
- name: template_delete
  endpoint:
    path: /template/delete.json
    method: POST
    data_selector: status
    params:
      id: string
- name: webhook_set
  endpoint:
    path: /webhook/set.json
    method: POST
    data_selector: object
    params: {}
- name: webhook_get
  endpoint:
    path: /webhook/get.json
    method: POST
    data_selector: object
    params:
      url: http://example.com
- name: webhook_list
  endpoint:
    path: /webhook/list.json
    method: POST
    data_selector: objects
    params:
      limit: 0
      offset: 0
- name: webhook_delete
  endpoint:
    path: /webhook/delete.json
    method: POST
    data_selector: status
    params:
      url: http://example.com
- name: suppression_set
  endpoint:
    path: /suppression/set.json
    method: POST
    data_selector: status
    params: {}
- name: suppression_get
  endpoint:
    path: /suppression/get.json
    method: POST
    data_selector: suppressions
    params: {}
- name: suppression_list
  endpoint:
    path: /suppression/list.json
    method: POST
    data_selector: suppressions
    params:
      cause: unsubscribed
      source: user
      start_time: '2020-10-14 17:00:00'
      cursor: Ajfb6Hvdkn3hdhhvG57xbdufhG5
      limit: 50
- name: suppression_delete
  endpoint:
    path: /suppression/delete.json
    method: POST
    data_selector: status
    params:
      email: user@example.com
- name: get_dns_records
  endpoint:
    path: /domain/get-dns-records.json
    method: POST
    data_selector: status
    params:
      domain: example.com
- name: validate_verification_record
  endpoint:
    path: /domain/validate-verification-record.json
    method: POST
    data_selector: status
    params:
      domain: example.com
- name: validate_dkim
  endpoint:
    path: /domain/validate-dkim.json
    method: POST
    data_selector: status
    params:
      domain: example.com
- name: domain_list
  endpoint:
    path: /domain/list.json
    method: POST
    data_selector: domains
    params:
      limit: 50
      offset: 0
- name: domain_delete
  endpoint:
    path: /domain/delete.json
    method: POST
    data_selector: message
    params: {}
- name: event_dump_create
  endpoint:
    path: /event-dump/create.json
    method: POST
    data_selector: status
    params:
      limit: 50
      all_projects: false
      filter: {}
- name: event_dump_get
  endpoint:
    path: /event-dump/get.json
    method: POST
    data_selector: event_dump
    params:
      dump_id: Gqfasjh34tlasd
- name: event_dump_list
  endpoint:
    path: /event-dump/list.json
    method: POST
    data_selector: event_dumps
    params: {}
- name: event_dump_delete
  endpoint:
    path: /event-dump/delete.json
    method: POST
    data_selector: status
    params:
      dump_id: Gqfasjh34tlasd
- name: tag_list
  endpoint:
    path: /tag/list.json
    method: POST
    data_selector: tags
    params: {}
- name: tag_delete
  endpoint:
    path: /tag/delete.json
    method: POST
    data_selector: status
    params:
      tag_id: '54'
- name: project_create
  endpoint:
    path: /project/create.json
    method: POST
    data_selector: status
    params: {}
- name: project_update
  endpoint:
    path: /project/update.json
    method: POST
    data_selector: status
    params: {}
- name: project_list
  endpoint:
    path: /project/list.json
    method: POST
    data_selector: projects
    params:
      project_id: string
      project_api_key: string
- name: project_delete
  endpoint:
    path: /project/delete.json
    method: POST
    data_selector: ''
    params:
      project_id: string
      project_api_key: string
- name: system_info
  endpoint:
    path: /system/info.json
    method: POST
    data_selector: ''
    params: {}
- name: unsubscribed_set
  endpoint:
    path: /unsubscribed/set.json
    method: POST
    data_selector: ''
    params: {}
- name: unsubscribed_check
  endpoint:
    path: /unsubscribed/check.json
    method: POST
    data_selector: ''
    params: {}
- name: unsubscribed_list
  endpoint:
    path: /unsubscribed/list.json
    method: POST
    data_selector: unsubscribed
    params:
      date_from: '2020-10-14'
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
    params: {}
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
- name: suppression_list
  endpoint:
    path: /suppression/list
    method: GET
- name: email_send
  endpoint:
    path: /email/send
    method: POST
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
- name: project_create
  endpoint:
    path: /project/create
    method: POST
- name: project_update
  endpoint:
    path: /project/update
    method: POST
- name: project_list
  endpoint:
    path: /project/list
    method: GET
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email/send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params:
      track_read: 1
      track_links: 1
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: result
    params: {}
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: result
    params: {}
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
    params: {}
- name: email_send
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: response
    params: {}
- name: suppression_list
  endpoint:
    path: /suppression/list
    method: GET
    data_selector: suppression_records
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: validation_result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: send_status
- name: suppression/get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: records
- name: suppression/list
  endpoint:
    path: /suppression/list
    method: GET
    data_selector: records
- name: suppression/delete
  endpoint:
    path: /suppression/delete
    method: POST
    data_selector: records
- name: suppression/set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: records
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: tracking_domains
  endpoint:
    path: /api/tracking_domains
    method: GET
- name: email_send
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: response
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: status
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: status
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: status
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email
  endpoint:
    path: /api/v1/email/send
    method: POST
    data_selector: message
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: tracking_domain
  endpoint:
    path: /settings/tracking-domains
    method: POST
    data_selector: status
    params: {}
- name: dedicated_ips
  endpoint:
    path: /settings/dedicated-ips
    method: POST
    data_selector: status
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params:
      track_read: '1'
      track_links: '1'
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params:
      api_key: KEY
- name: non_delivery_report
  endpoint:
    path: /api/non_delivery_report
    method: GET
    data_selector: reports
    params: {}
- name: email_send
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: response
    params: {}
- name: unsubscribe_page
  endpoint:
    path: /en/settings/unsubscribe-pages
    method: GET
    data_selector: unsubscribe_pages
    params: {}
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: delivery_report
  endpoint:
    path: /api/delivery/report
    method: GET
    data_selector: data
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: result
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: data
- name: email_send
  endpoint:
    path: /api/email/send
    method: POST
    data_selector: message
- name: template_engines
  endpoint:
    path: /api/template/engines
    method: GET
    data_selector: engines
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_list
  endpoint:
    path: /suppression/list
    method: GET
    data_selector: addresses
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: suppression
  endpoint:
    path: /suppression/get
    method: GET
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
- name: email_send
  endpoint:
    path: /email/send
    method: POST
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
    params: {}
- name: email_send
  endpoint:
    path: /email/send.json
    method: POST
    data_selector: message
    params: {}
- name: send_email
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: message
    params: {}
- name: email_subscribe
  endpoint:
    path: /email/subscribe.json
    method: POST
    data_selector: status
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single.json
    method: POST
    data_selector: status
    params: {}
- name: template_set
  endpoint:
    path: /template/set.json
    method: POST
    data_selector: template
    params: {}
- name: template
  endpoint:
    path: /templates
    method: POST
    data_selector: template
- name: template
  endpoint:
    path: /template/get.json
    method: POST
    data_selector: template
    params:
      id: string
- name: template_list
  endpoint:
    path: /template/list.json
    method: POST
    data_selector: templates
    params:
      limit: 50
      offset: 0
- name: template_delete
  endpoint:
    path: /template/delete.json
    method: POST
    data_selector: status
    params:
      id: string
- name: webhook_set
  endpoint:
    path: /webhook/set.json
    method: POST
    data_selector: object
    params: {}
- name: webhook_get
  endpoint:
    path: /webhook/get.json
    method: POST
    data_selector: object
    params:
      url: http://example.com
- name: webhook_list
  endpoint:
    path: /webhook/list.json
    method: POST
    data_selector: objects
    params:
      limit: 0
      offset: 0
- name: webhook_delete
  endpoint:
    path: /webhook/delete.json
    method: POST
    data_selector: status
    params:
      url: http://example.com
- name: suppression_set
  endpoint:
    path: /suppression/set.json
    method: POST
    data_selector: status
    params:
      email: user@example.com
      cause: unsubscribed
      created: '2021-12-19 10:15:49'
- name: suppression_get
  endpoint:
    path: /suppression/get.json
    method: POST
    data_selector: status
    params:
      email: user@example.com
      all_projects: false
- name: suppression_list
  endpoint:
    path: /suppression/list.json
    method: POST
    data_selector: suppressions
    params:
      cause: unsubscribed
      source: user
      start_time: '2020-10-14 17:00:00'
      cursor: Ajfb6Hvdkn3hdhhvG57xbdufhG5
      limit: 50
- name: suppression_delete
  endpoint:
    path: /suppression/delete.json
    method: POST
    data_selector: ''
    params:
      email: user@example.com
- name: get_dns_records
  endpoint:
    path: /domain/get-dns-records.json
    method: POST
    data_selector: records
    params:
      domain: example.com
- name: validate_verification_record
  endpoint:
    path: /domain/validate-verification-record.json
    method: POST
    data_selector: records
    params:
      domain: example.com
- name: validate_dkim
  endpoint:
    path: /domain/validate-dkim.json
    method: POST
    data_selector: records
    params:
      domain: example.com
- name: domain_list
  endpoint:
    path: /domain/list.json
    method: POST
    data_selector: domains
    params:
      domain: example.com
      limit: 50
      offset: 0
- name: domain_delete
  endpoint:
    path: /domain/delete.json
    method: POST
    data_selector: ''
    params:
      domain: example.com
- name: event_dump_create
  endpoint:
    path: /event-dump/create.json
    method: POST
    data_selector: status
    params:
      start_time: '2022-07-20 00:00:00'
      end_time: '2022-07-21 00:00:00'
      limit: 50
      all_projects: false
      filter:
        job_id: 1ZymBc-00041N-9X
        status: sent
        delivery_status: string
        email: david@example.org
        email_from: sender@example.com
        domain: example.org
        campaign_id: c77f4f4e-3561-49f7-9f07-c35be01b4f43
      dump_fields:
      - string1
      aggregate: day_status
      delimiter: ;
      format: csv
- name: event_dump_get
  endpoint:
    path: /event-dump/get.json
    method: POST
    data_selector: event_dump
    params:
      dump_id: Gqfasjh34tlasd
- name: event_dump_list
  endpoint:
    path: /event-dump/list.json
    method: POST
    data_selector: event_dumps
    params: {}
- name: event_dump_delete
  endpoint:
    path: /event-dump/delete.json
    method: POST
    data_selector: status
    params:
      dump_id: Gqfasjh34tlasd
- name: tag_list
  endpoint:
    path: /tag/list.json
    method: POST
    data_selector: tags
- name: tag_delete
  endpoint:
    path: /tag/delete.json
    method: POST
    data_selector: status
    params:
      tag_id: 54
- name: project
  endpoint:
    path: /project/create.json
    method: POST
    data_selector: status
    params: {}
- name: project_update
  endpoint:
    path: /project/update.json
    method: POST
    data_selector: status
    params:
      project_id: string
      project_api_key: string
      project:
        name: Project 1A
        country: ES
        send_enabled: true
        custom_unsubscribe_url_enabled: true
        backend_domain_id: 1234
        unsubscribe_page_id: 1
        email_counter: 0
        email_counter_limit: 0
        email_counter_mode: default
- name: project_list
  endpoint:
    path: /project/list.json
    method: POST
    data_selector: projects
    params:
      project_id: string
      project_api_key: string
- name: project_delete
  endpoint:
    path: /project/delete.json
    method: POST
    data_selector: status
    params:
      project_id: string
      project_api_key: string
- name: system_info
  endpoint:
    path: /system/info.json
    method: POST
    data_selector: status
    params: {}
- name: unsubscribed_set
  endpoint:
    path: /unsubscribed/set.json
    method: POST
    data_selector: status
    params:
      address: user@example.com
- name: unsubscribed_check
  endpoint:
    path: /unsubscribed/check.json
    method: POST
    data_selector: status
    params:
      address: user@example.com
- name: unsubscribed_list
  endpoint:
    path: /unsubscribed/list.json
    method: POST
    data_selector: unsubscribed
    params:
      date_from: '2020-10-14'
- name: email_send
  endpoint:
    path: /api/email/send
    method: POST
    data_selector: message
- name: unsubscribe_page
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: records
- name: suppression_list
  endpoint:
    path: /suppression/list
    method: GET
    data_selector: records
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: project_create
  endpoint:
    path: /project/create
    method: POST
    data_selector: result
- name: project_update
  endpoint:
    path: /project/update
    method: POST
    data_selector: result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: response
    params: {}
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: ''
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: campaign
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: records
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params:
      track_read: 1
      track_links: 1
- name: non_delivery_report
  endpoint:
    path: /non-delivery-report
    method: GET
    data_selector: report
- name: delivery_report
  endpoint:
    path: /delivery-report
    method: GET
    data_selector: report
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: status
    params: {}
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
    params: {}
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: status
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: status
    params:
      bypass_global: '0'
      bypass_unavailable: '0'
      bypass_unsubscribed: '0'
      bypass_complained: '0'
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: suppression
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: records
- name: email_validation
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: validation_results
- name: send_email
  endpoint:
    path: /email/send
    method: POST
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: data
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: campaign_report
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
- name: email/send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: delivery_info
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: non_delivery_report
  endpoint:
    path: /non-delivery-report
    method: GET
    data_selector: reports
    params: {}
- name: delivery_report
  endpoint:
    path: /delivery-report
    method: GET
    data_selector: reports
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /api/email/send
    method: POST
    data_selector: message
- name: campaign
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: response
    params: {}
- name: suppression
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: data
- name: email_validation
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: non_delivery_report
  endpoint:
    path: /api/non-delivery-report
    method: GET
    data_selector: data
    params: {}
- name: non_delivery_report
  endpoint:
    path: /non-delivery-report
    method: GET
    data_selector: events
- name: delivery_report
  endpoint:
    path: /delivery-report
    method: GET
    data_selector: events
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params:
      api_key: KEY
- name: delivery_report
  endpoint:
    path: /api/delivery-report
    method: GET
    data_selector: data
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: status
    params: {}
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
    params: {}
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: result
    params: {}
- name: suppression_list
  endpoint:
    path: /suppression/list
    method: GET
    data_selector: addresses
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: non_delivery_report
  endpoint:
    path: /non-delivery-report
    method: GET
    data_selector: report
    params: {}
- name: delivery_report
  endpoint:
    path: /delivery-report
    method: GET
    data_selector: report
    params: {}
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: POST
    data_selector: result
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: result
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
    data_selector: result
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: result
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
- name: suppression_list
  endpoint:
    path: /suppression/list
    method: GET
- name: email_send
  endpoint:
    path: /email/send
    method: POST
- name: delivery_report
  endpoint:
    path: /delivery-report
    method: GET
    data_selector: events
- name: non_delivery_report
  endpoint:
    path: /non-delivery-report
    method: GET
    data_selector: events
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: unsubscribed_addresses
- name: suppression_list
  endpoint:
    path: /suppression/list
    method: GET
    data_selector: unsubscribed_addresses
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
- name: email_send
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
- name: email
  endpoint:
    path: /email/send
    method: POST
    data_selector: message
    params: {}
- name: email_send
  endpoint:
    path: /api/email/send
    method: POST
    data_selector: message
    params: {}
- name: template_set
  endpoint:
    path: /api/template/set
    method: POST
    data_selector: template
    params: {}
- name: campaign_report
  endpoint:
    path: /en/transactional/api/v1/email/send.json
    method: POST
    data_selector: campaigns
    params: {}
- name: email_validation_single
  endpoint:
    path: /email-validation/single
    method: GET
    data_selector: status
- name: suppression_get
  endpoint:
    path: /suppression/get
    method: GET
    data_selector: source
- name: suppression_set
  endpoint:
    path: /suppression/set
    method: POST
- name: email_send
  endpoint:
    path: /email/send
    method: POST
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: response
    params: {}
notes:
- Uses X-API-KEY for authentication
- maximum request size is 10 MB
- maximum number of recipients is 500
- The symbol ‘/’ is not allowed in attachment names
- A maximum of two concurrent requests are allowed.
- The maximum request size is 10 MB.
- The number of templates is limited to 10000.
- Gets template properties by its id.
- Webhook status, 'active' by default. 'disabled' means that webhook has been disabled
  by the user, 'stopped' means that webhook has been stopped by the system after 24h
  of failed calls.
- Webhook returns success or error status.
- Webhook status can be active, disabled, or stopped.
- Adds an email address to the suppression list.
- Gets a reason and date of email suppression.
- Deletes an email from suppression list (only records with is_deletable=true). If
  there are no entries of this email in the suppression list, API error 3003 is returned.
- 'Deletes a domain. Attention: you should use project’s API key to delete a project’s
  domain.'
- The number of dump files created or stored is limited to 10; to order more files,
  you have to delete one of the previous ones or wait until they will be deleted automatically.
- A newly created dump file is kept for 8 hours.
- If the request period is more than a day or there are too many events then several
  files will be generated and each file will contain no more than 100,000 events.
- This method returns the full list of user-defined tags. Does not receive any parameters.
- Removes tag.
- You should identify project to update either with project_id or with project_api_key
  field. But we recommend usage of project_id as a more secure option.
- After registering an email as unsubscribed all future attempts to send a message
  to this email will be rejected.
- Returns a list of all unsubscribed emails since provided date.
- Sandbox domains are created exclusively for testing purposes and cannot be used
  for marketing or transactional mailings.
- Emails sent from sandbox domains are limited to 100 emails per day.
- A maximum of two simultaneous requests are allowed.
- 'The check must be quick, so we limit the checking time: if a recipient’s mail server
  does not respond in 5 seconds, the validation result may be undefined.'
- If the status changes to 'Error', contact our support team to find out what's wrong
  and be advised on possible fixes.
- UniOne provides automatic spam blocking.
- To maintain good delivery rates, be sure to never send emails to unsubscribed addresses.
- Uses API key for authentication.
- If you see an exclamation mark in the upper left corner of your account screen along
  with a notice 'Sending disabled', or you receive an API error 215 error 'The user
  is not allowed to send email', this means mailing has been disabled for your account.
- All UniOne API methods require an HTTPS connection.
- Maximum accepted email size is 10 megabytes.
- Please note that unsubscribe link is automatically added to the footer of your email.
- Emails are charged according to your current plan and limited to 100 emails per
  day.
- Maximum of two simultaneous requests are allowed for email validation.
- Dedicated IP addresses allow you to build your own reputation scores for your campaigns.
- IP warmup is carried out automatically following a proven procedure.
- During the IP warmup period, it is highly recommended that you send the required
  number of emails each day.
- Uses OAuth2 for authentication
- Spam blocking may occur based on user sending behavior
- Ensure to provide valid API key in the request.
- You can send emails with UniOne using Web API or SMTP API.
- If you see an exclamation mark in the upper left corner of your account screen along
  with a notice 'Sending disabled', this means mailing has been disabled for your
  account.
- 'When you send an email via API, you use a specific URL for the request, for example:
  /en/transactional/api/v1/email/send.json.'
- The unsubscribe reasons can be obtained either via webhooks or by using the event-dump
  API method.
- Validation result may be undefined if a recipient’s mail server does not respond
  in 5 seconds.
- Dedicated IP addresses allow you to build your own reputation scores for your campaigns,
  totally independent from other clients who use our common pool of IPs.
- UniOne provides automatic spam blocking and may restrict sending to certain domains.
- Requires API key for authentication
- If you see an exclamation mark in the upper left corner of your account screen along
  with a notice 'Sending disabled', or you receive an API error 215 error 'The user
  is not allowed to send email', this means that mailing has been disabled for your
  account.
- A sandbox domain is valid for 31 days.
- Sending is allowed to confirmed addresses only.
- Emails sent from sandbox domains are charged according to your current plan, limited
  to 100 emails per day.
- If user’s emails are rejected as spam by the recipient's server for 10 times, the
  system will block the sending of messages from the current SMTP server.
- If you see an exclamation mark in the upper left corner of your account screen along
  with a notice “Sending disabled”, or you receive an API error 215 error “The user
  is not allowed to send email”, this means that mailing has been disabled for your
  account.
- The default plan allows sending up to 100 emails per day.
- The sandbox domain is valid for 31 days.
- A maximum of two simultaneous requests are allowed for email validation.
- If a recipient’s mail server does not respond in 5 seconds, the validation result
  may be undefined.
- Information about outgoing UniOne SMTP servers and recipient domains blocking can
  be obtained by a webhook.
- The API key must be included in the request.
- Substitutions can be used in various parameters for dynamic content.
- Requires setup of your sender domain and DNS records.
- Check must be quick; if a recipient’s mail server does not respond in 5 seconds,
  the validation result may be undefined.
- If you’ve set up multiple tracking domains, specify the 'custom_backend_id' value
  in email/send API call to use a particular one.
- The warm-up procedure is initiated automatically following a proven procedure.
- If user’s emails are rejected as spam by the recipient's server for 10 times, the
  system will block the sending from the current SMTP server.
- The default plan allows sending up to 100 emails per day to any verified domain.
- UniOne provides automatic spam blocking. Sending from your account to some domains
  may be blocked.
- Substitutions (merge tags) are now supported in header values.
- The domain is ready for sending when all the checkmarks show up.
- Emails sent from sandbox domains are charged according to your current plan and
  are limited to 100 emails per day.
- Maximum of two simultaneous requests are allowed.
- The warm-up procedure is initiated automatically.
- The approximate hourly limits for Gmail and Yahoo Mail are shown in the warmup limits
  table.
- 'This may happen due to the following reasons: You have not paid one or more bills,
  and a number of charging attempts we’ve made were unsuccessful.'
- Using a sandbox domain allows instant onboarding and testing without verifying your
  primary domain.
- If the mail server does not respond in 5 seconds, the validation result may be undefined.
- If emails are blocked by a server, the system will attempt to send from other servers.
- Emails sent from sandbox domains are charged according to your current plan and
  limited to 100 emails per day.
- Validation result may be undefined if the recipient’s mail server does not respond
  in 5 seconds.
- Two-factor authentication is available for account security.
- Requires setup of DNS records for domain verification.
- Sending emails from sandbox domains is limited to 100 emails per day.
- Uses OAuth2 for authentication — requires setup of connected app in UniOne
- Be sure to never send emails to unsubscribed addresses
- Requires an API key for authentication
- Requires setup of domain DNS records for authentication
- Free plan allows sending up to 100 emails per day
- If you need to disable the unsubscribe link for certain emails only, add the skip_unsubscribe
  parameter.
- Requires API key for authentication.
- An unsubscribe link is added to every letter by default.
- Sandbox domain is a temporary domain that you can obtain immediately following your
  signup.
- Dedicated IPs require warmup procedure to build reputation.
- Tracking requires specific parameters in API calls.
- Anti-spam systems take into account the unsubscribe link when deciding if the letter
  is SPAM.
- The unsubscribe footer contains a reference to the original target address.
- If you see an exclamation mark in the upper left corner of your account screen along
  with a notice “Sending disabled”, this means that mailing has been disabled for
  your account.
- Delivery rates may vary based on various factors.
- All clients must verify domain ownership.
- A maximum of 10 addresses is allowed, including your primary account email.
- Statistics for the current day may be a little late as it takes some time to process
  and index the data. Usually, this delay will not exceed an hour.
- If you see an exclamation mark in the upper left corner of your account screen along
  with a notice 'Sending disabled', this means that mailing has been disabled for
  your account.
- Uses API key for authentication
- Only confirmed addresses can receive emails when using a sandbox domain
- If user’s emails are rejected as spam for 10 times, the system blocks the sending
  from the current SMTP server.
- 'You can send emails with UniOne using one of the following methods: Web API, SMTP
  API.'
- Requires setup of sender domain and DNS records.
- A maximum of two simultaneous requests for email validation are allowed.
- 'When sending an email via API, use a specific URL for the request, for example:
  /en/transactional/api/v1/email/send.json.'
- The domain’s status will be 'Awaiting DNS setup', and you’ll need to add a few DNS
  records for your domain.
- After the records are added, you’ll need to wait until they propagate and are updated
  in our system.
- During the next 48 hours our specialists will perform the necessary setup, and the
  status will change to 'Active'.
- If the status changes to 'Error', contact our support team to find out what’s wrong
  and be advised on possible fixes.
- 'You can send emails with UniOne using one of the following methods: Web API - fast,
  efficient, and with many features allowing you to integrate it with your site through
  programming.'
- SMTP API - less throughput, but all you need to do is enter the host, login, and
  password - and you're ready to go.
- Emails sent from sandbox domains are charged according to your current plan.
- The system might mistakenly restrict sending if actions are considered suspicious.
- The domain’s status will be “Awaiting DNS setup”
- If the status changes to “Error”, contact our support team to find out what’s wrong
  and be advised on possible fixes.
- If user’s emails are rejected as spam, the system may block the current SMTP server.
- All headers should be encoded according to MIME standard.
- The time it takes varies from a few minutes to a couple of hours, depending on your
  provider’s settings.
- In the following 48 hours, our specialists will perform the required system setup.
- If user’s emails are rejected as spam for 10 times, the system will block the sending
  from the current SMTP server.
- API POST request size limit was incremented to 10MB, HTTP code 413 / API code 199
  is returned in case of a larger request.
- A default restriction limits subscription renewals to once a day.
- To use track_links = 0, you need to ask support to enable this feature.
- To use track_read = 0, you need to ask support to enable this feature.
- Webhook status is 'active' by default.
- Only ASCII characters are supported for now in URL.
- Webhook URL must respond with 200 OK within 3 seconds or the call will be retried.
- You can also temporarily deactivate webhook without deleting it by setting its status
  to 'disabled' in webhook/set method.
- Deletes an email from suppression list (only records with is_deletable=true). If
  there are no entries of this email in the suppression list, API error 3003 is returned.
  If such entries exist but no one can be deleted, API error 3004 is returned. If
  daily limit of deletes exceeded, API error 906 is returned.
- First record value should contain 'verification-record' field returned by get-dns-records
  method 'as is'.
- Second record value should contain 'dkim' field value after 'p='. Mind the name
  of this record! 'us._domainkey.' prefix is important for DKIM selector of UniOne
  to work properly.
- When custom_unsubscribe_url_enabled is skipped on creating a project, its value
  is taken from user
- The project will be moved to the 'trash bin' before being permanently deleted.
- Sandbox domains are valid for 31 days and can only send to confirmed addresses.
- Use dynamic disabling for unsubscribe links for flexibility.
- Delivery rates as high as 99.8%.
- The maximum number of email addresses allowed for testing is 10.
- The number of saved campaigns per day is limited to a maximum of 1000.
- If user’s emails, sent from one UniOne server (SMTP), are rejected as spam by the
  recipient's server for 10 times, the system will block the sending of messages from
  the current SMTP server.
- 'You can send emails with UniOne using one of the following methods: Web API, SMTP
  API, Integrations.'
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The check must be quick, with a 5 seconds response time limit.
- To add a new tracking domain, go to the Settings – Tracking domains page and click
  the plus icon alongside the page title.
- The domain’s status will be “Awaiting DNS setup” and you’ll need to add a few DNS
  records for your domain.
- Automatic spam blocking occurs after 10 rejections from the same SMTP server.
- If 5 UniOne servers are blocked for a domain, sending to that domain will be restricted.
- Only confirmed addresses are allowed for sending emails in sandbox domain.
- Sandbox domains are valid for 31 days.
- A maximum of 10 addresses is allowed for testing.
- Uses OAuth2 with refresh token — requires setup of connected app in UniOne
- This may happen due to unpaid bills or suspicious activity detected by the spam
  prevention system.
- Free plan allows sending up to 100 emails per day to verified domains.
- Sandbox domain is valid for 31 days.
- Campaign information is disabled by default for all users and projects.
- The domain status changes to 'Awaiting DNS setup' after adding.
- If user’s emails are rejected as spam for 10 times, the system will block sending
  from the current SMTP server.
- Free plan allows sending up to 100 emails per day to verified domains
- The check must be quick, with a 5 seconds limit for mail server response.
- To add a new domain, go to the Settings – Tracking domains page and click the plus
  icon.
- If the status changes to Error, contact support to find out what’s wrong and be
  advised on possible fixes.
- The required number of IPs for each domain or project is defined by the number of
  messages you’re intending to send.
- Requires an API key for authentication.
- You can create a new sandbox domain every 31 days.
- Projects are a convenient way of managing subscriptions with different themes.
- Ensure to verify your domain ownership by adding the required DNS records.
- Statistics for the current day may be a little late as it takes some time to process
  and index the data.
- You can create a new sandbox domain after the previous one is deleted.
- The warm-up procedure is initiated automatically and takes approximately 40 days.
- You need to contact support to disable the unsubscribe link.
- A sandbox domain is a temporary domain that you can obtain immediately following
  your signup with UniOne.
- Sandbox domains are valid for 31 days and cannot be used for marketing or transactional
  mailings.
- Emails sent from sandbox domains are charged according to the current plan, limited
  to 100 emails per day.
- The check must respond within 5 seconds.
- If everything’s ok, the domain status will change to “Setup in progress”.
- During the next 48 hours our specialists will perform the necessary setup, and the
  status will change to “Active”.
- After doing this you will see a page without the enabled function and with the 'Configure'
  button.
- If 5 UniOne servers are blocked for the particular domain, the system restricts
  sending to this domain.
- A sandbox domain is available for immediate testing without domain verification.
- A maximum of two simultaneous requests are allowed for email validation
- Consistency, gradualness and regularity are vital for a proper warmup.
- Automatic spam blocking may occur if sending limits are exceeded.
- All emails must include an unsubscribe link to comply with anti-spam regulations.
- When sending an email via API, use a specific URL for the request, e.g., /en/transactional/api/v1/email/send.json.
- If the API request URL includes /en/, the unsubscribe page will be in English.
- To add a new domain, go to the Settings – Tracking domains page and click the plus
  icon alongside the page title.
- The domain’s status will be 'Awaiting DNS setup'.
- The time it takes for DNS records to propagate varies from a few minutes to a couple
  of hours.
- Currently we guarantee no less than 70 000 messages per hour from each fully warmed-up
  IP.
- Uses OAuth2 for authentication.
- The domain status will be 'Awaiting DNS setup' after adding a new tracking domain.
- The status will change to 'Setup in progress' after DNS records are added.
- In the following 48 hours, the status will change to 'Ready' after system setup.
- You can limit the report to certain recipient and sender addresses, campaign IDs,
  etc. using filters.
- Sending is allowed to confirmed addresses only when using a sandbox domain.
- Sending limits for your account may be decreased if actions are considered suspicious.
- Consistency, gradualness and regularity are vital for a proper warmup, so the mailings
  need to be done in smaller chunks.
- Automatic spam blocking may occur if emails are rejected as spam multiple times.
- Sending limits may vary based on user account and API usage.
- Ensure to use valid API keys and check rate limits.
errors:
- '400: Bad Request – Your request is invalid. Please check request format and parameters.'
- '401: Unauthorized – Your API key is wrong.'
- '403: Forbidden – Not enough rights to process the request.'
- '404: Not Found – The specified endpoint not found.'
- '413: Request Entity Too Large – Request size is too large, reduce size to 10 MB.'
- '429: Too Many Requests – Please slow down request rate.'
- '50x: Internal Server Error – We had a problem with our server (might be 500, 502,
  503 etc.). Please try again later.'
- '400 Bad Request: Check request body for errors'
- '401 Unauthorized: Check API key'
- '500 Internal Server Error: Check server status'
- '204: All emails in failed_emails, sending will not be carried out'
- '200: Email successfully accepted for sending.'
- 'default: Error occurred.'
- 'error: Human-readable error message in English.'
- 'code: API Error code.'
- '3003: No entries of this email in the suppression list.'
- '3004: Existing entries but none can be deleted.'
- '906: Daily limit of deletes exceeded.'
- 'default: An error occurred'
- 'HTTP Code default: Error occurred.'
- '401 Unauthorized: Recheck API key or permissions'
- '500 Internal Server Error: Аn unknown internal error occurred'
- '401: API key is not passed or empty. Make sure you have passed correct X-API-KEY
  header or ‘api_key’ JSON parameter.'
- '401: Invalid key ‘$apiKey’. Use correct user API-key or project API key.'
- '403: API is turned OFF. You can turn API on here.'
- '403: User is inactive. To solve this problem, contact support.'
- '400: JSON parsing error. Check your JSON request syntax.'
- 400 | 1555 | Error in ‘headers[‘Cc’]’ field. Email in “Cc” must not differ from
  recipient emails. Use only emails from the ‘recipient’ parameter.
- 400 | 1556 | Error in ‘headers[‘Cc’]’ field. “Cc” header allows only with non empty
  “To” header. Make sure that the ‘headers[‘To’]’ is passed.
- 400 | 1557 | Error in ‘headers[‘To’]’ field. The number of emails in “To” must not
  exceed %d. Make sure that the number of emails in ‘headers[‘To’]’ is not exceeded.
- 400 | 1558 | Error in ‘headers[‘To’]’ field. Email in “To” must not differ from
  recipient emails. Use only emails from the ‘recipient’ parameter.
- 400 | 1559 | Error in ‘recipients’ field. Email not exist in headers “To” or “Cc”
  or email domain is not confirmed BCC may contain only addresses on your verified
  domain.
- 400 | 1560 | Error in ‘recipients’ field. Limit of ‘recipients’ must not be more
  then limit of sum of “To” and “Cc” emails. Make sure that the number of emails in
  “To” and “Cc” headers is not exceeded.
- 400 | 1561 | Error in ‘headers[‘Cc’]’ field. Header ‘example’ is not valid Сc. Make
  sure the headers is passed correctly.
- 400 | 1562 | Error in ‘headers[‘To’]’ field. Header ‘example’ is not valid To. Make
  sure the headers is passed correctly.
- 400 | 1572 | Error in ‘idempotence_key’ field. This value is too long. It should
  have 64 characters or less. The key must be shorter. Please correct this value.
- '400 | 1574 | Error in ‘from_email’ field. Denied ‘from_email’: [example.com](http://example.com)
  - use address from a confirmed domain. To avoid this error please use an email on
  a verified domain.'
- 400 | 1576 | Error in ‘subject’ field. This value should not be blank. Enter the
  subject.
- 400 | 1577 | Error in ‘body’ field. No message body passed. Check that your message
  body is being passed properly.
- 400 | 2520 | Error in ‘from_name’ field. This value should be of type string. Use
  string type for ‘from_name’ parameter.
- 400 | 2521 | Error in ‘from_name’ field. Substitutions contain invalid values. Check
  the correct substitutions in the ‘from_name’ field.
- 'unsubscribed: The addressee has unsubscribed by following the link in the email
  body or List-Unsubscribe header.'
- 'temporary_unavailable: One or more previous attempts for this address were unsuccessful.'
- 'permanent_unavailable: Address is permanently unavailable, as verified by multiple
  sending attempts.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Maximum of two simultaneous requests exceeded.'
- 'QUERY_TIMEOUT: Validation result may be undefined if mail server does not respond
  in 5 seconds.'
- 'SMTP_BLOCKED: Sending blocked due to spam complaints'
- 'UNSUBSCRIBED: Address is unsubscribed from receiving emails'
- '400 Bad Request: Check the request parameters and body format.'
- '401 Unauthorized: Ensure the API key is valid.'
- '500 Internal Server Error: Try again later.'
- '215: The user is not allowed to send email'
- 'invalid: The target address is invalid.'
- '400 Bad Request: Validate input data'
- 'REQUEST_LIMIT_EXCEEDED: A maximum of two simultaneous requests are allowed.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check your API key'
- 'temporary_unavailable: Address has been tagged as temporarily unavailable.'
- If they do not show up after two days, please ask our support to check the issue.
- '401 Unauthorized: Check API key validity'
- '400 Bad Request: Check required fields in the request body'
- '401 Unauthorized: Recheck API key or authentication setup'
- '401 Unauthorized: Check API key or token.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Recheck API key or token expiration'
- 'unsubscribed: The addressee has unsubscribed.'
- 'temporary_unavailable: Address is temporarily unavailable.'
- 'permanent_unavailable: Address is permanently unavailable.'
- 'API code 199: Request size limit exceeded'
- 'API error 215: The user is not allowed to send email'
- '401 Unauthorized: Check API key or authentication setup.'
- 'sending is restricted: The automated anti-spam control system considered some of
  your actions suspicious.'
- 'TIMEOUT: If a recipient’s mail server does not respond in 5 seconds.'
- '401 Unauthorized: Check API key and permissions.'
- 'EMAIL_ADDRESS_INVALID: The provided email address is invalid'
- 'API error 215: The user is not allowed to send email.'
- If the status changes to Error, contact our support team to find out what's wrong
  and be advised on possible fixes.
- 'sending is restricted: Automated anti-spam control system considered some actions
  suspicious.'
- 'unsubscribed: The addressee has unsubscribed'
- 'temporary_unavailable: Address tagged as temporarily unavailable'
- 'permanent_unavailable: Address is permanently unavailable'
- 'temporary_unavailable: The address is temporarily unavailable.'
- 'permanent_unavailable: The address is permanently unavailable.'
- '401 Unauthorized: Invalid API key.'
- '400 Bad Request: Invalid parameters provided'
- 'REQUEST_LIMIT_EXCEEDED: Maximum of two simultaneous requests allowed.'
- 'TIMEOUT: Validation result may be undefined if the mail server does not respond
  in 5 seconds.'
- '400 Bad Request: Check the request parameters'
- '403 Forbidden: You do not have permission for this action'
- 'sending is restricted: The automated anti-spam control system considered some of
  your actions exclusively suspicious.'
- 'REQUEST_LIMIT_EXCEEDED: Maximum simultaneous requests exceeded.'
- '204: All emails failed, sending will not be carried out'
- 'duplicate: The email already exists in the request'
- 'invalid: The email does not exist or has been entered incorrectly'
- API Error code
- 'error: Human-readable error message in English'
- 'status: error, message: Human-readable error message in English.'
- 'code: API Error code'
- '200: Email has been added to the suppression list.'
- '3003: No entries of this email in the suppression list'
- '3004: Entries exist but none can be deleted'
- '906: Daily limit of deletes exceeded'
- '200 Response: Domain DNS info returned successfully.'
- 'default: Error occurred or record is invalid.'
- '200: Method call has succeeded.'
- 'status: error - Human-readable error message in English.'
- 'status: error, message: Human-readable error message in English, code: API Error
  code'
- '150: Аn unknown internal error occurred'
- '401: 101: API key is not passed or empty. Make sure you have passed correct X-API-KEY
  header or ‘api_key’ JSON parameter.'
- '401: 102: Invalid key ‘$apiKey’. Use correct user API-key or project API key.'
- '403: 105: API is turned OFF. You can turn API on here.'
- '403: 106: User is inactive. To solve this problem, contact support.'
- '400: 111: JSON parsing error. Check your JSON request syntax.'
- 400 | 1565 | Error in ‘body.html’ field. Invalid velocity substitution format. Substitution
  name in body should contain latin characters, numbers or ‘_’ character and start
  with a letter.
- 400 | 1566 | Error in ‘subject’ field. Invalid velocity substitution format. Substitution
  name in body should contain latin characters, numbers or ‘_’ character and start
  with a letter.
- 400 | 1567 | Error in ‘from_name’ field. Invalid velocity substitution format. Substitution
  name in body should contain latin characters, numbers or ‘_’ character and start
  with a letter.
- 400 | 1568 | Error in ‘reply_to_name’ field. Invalid velocity substitution format.
  Substitution name in body should contain latin characters, numbers or ‘_’ character
  and start with a letter.
- 400 | 1569 | Error in ‘body.plaintext’ field. Invalid velocity substitution format.
  Substitution name in body should contain latin characters, numbers or ‘_’ character
  and start with a letter.
- 400 | 1570 | Error in ‘body.amp’ field. Invalid velocity substitution format. Substitution
  name in body should contain latin characters, numbers or ‘_’ character and start
  with a letter.
- 400 | 1571 | Error in ‘options.unsubscribe_url’ field. Invalid velocity substitution
  format. Substitution name in body should contain latin characters, numbers or ‘_’
  character and start with a letter.
- 400 | 1573 | Error in ‘idempotence_key’ field. Error sending duplicate message with
  the same idempotence_key=‘xxxxxxxxxx’. Make sure the key is correct.
- '400 | 1574 | Error in ‘from_email’ field. Denied ‘from_email’: [example.com] -
  use address from a confirmed domain. To avoid this error please use an email on
  a verified domain.'
- 400 | 1575 | User is not allowed to send. Try contacting [support](https://cp.unione.io/en/support).
- '400 | 1578 | Error in ‘body.html’ field. No validtag format: tag is not valid or
  do not exist. Add the html <body> tag inside the <html> tag. The <body> tag is required
  to display HTML content.'
- 400 | 1579 | Error in ‘global_substitutions’ field. Maximum 2 substitutions allowed.
  The possible maximum substitutions number has been exceeded.
- 400 | 1580 | Error in ‘global_substitutions’ field. Substitution name should contain
  latin characters, numbers or ‘_’ character and start with a letter. Make sure the
  substitution name is passed correctly.
- 400 | 1581 | Error in ‘global_metadata’ field. This collection should contain 10
  elements or less. Maximum 10 metadata fields allowed.
- 400 | 1582 | Error in ‘global_substitutions’ field. Recipients passed improperly.
  ‘Metadata’ value should be a string or integer.
- 400 | 1583 | Error in ‘global_metadata’ field. Global metadata key should not be
  blank. Make sure the metadata key is passed.
- 400 | 1584 | Error in ‘global_metadata’ field. Global metadata key length should
  less than 64. Make sure the metadata key is passed correctly.
- 400 | 1585 | Error in ‘global_metadata’ field. This value is too long. It should
  have 1024 characters or less.
- 400 | 1586 | Error in ‘force_send’ field. No rights to use ‘force_send’ option.
  Try contacting [support](https://cp.unione.io/en/support).
- 400 | 1587 | Error in ‘skip_unsubscribe’ field. No right for ‘skip_unsubscribe =
  1’. Try contacting [support](https://cp.unione.io/en/support).
- '400 | 1590 | Error in ‘[attachments.name](http://attachments.name)’ field. Invalid
  filename: ‘IMG/1’. Forbidden symbol ‘/’. Rename files with the forbidden symbols.'
- '400 | 1591 | Error in ‘attachments’ field. Duplicated filename: ‘IMG1’. Rename
  files with the same names.'
- '400 | 1592 | Error in ‘attachments.content’ field. No attachment content passed,
  attachment filename: IMG1. Add the ‘content’ and specify a value for it.'
- 400 | 1593 | Error in ‘attachments.type’ field. Mime type of file IMG1 is skipped
  or empty. Check the file and the file type again.
- '400 | 1594 | Error in ‘inline_attachments.name’ field. Invalid filename: ‘IMG/1’.
  Forbidden symbol ‘/’. Rename files with the forbidden symbols.'
- '400 | 1595 | Error in ‘inline_attachments’ field. Duplicated filename: ‘IMG1’.
  Rename files with the same names.'
- '400 | 1596 | Error in ‘inline_attachments.content’ field. No attachment content
  passed, attachment filename: IMG1. Add the ‘content’ and specify a value for it.'
- 400 | 1597 | Error in ‘inline_attachments.type’ field. Mime type of file IMG1 is
  skipped or empty. Check the file and the file type again.
- 403 | 1598 | Error in ‘from_email’ field. Sandbox domain in ‘from_email’ used with
  unconfirmed email ‘test@example.com’. To avoid this error please use only confirmed
  email addresses.
- 403 | 1599 | Error in ‘from_email’ field. The daily sending limit for the sandbox
  domain has been exceeded. Try to repeat the call the next day.
- 400 | 1601, 1701 | Error in the ‘project’ field. Project section is absent. Correct
  JSON structure.
- 400 | 1602, 1702 | Error in the ‘name’ field. This value should not be blank. Use
  non-blank name.
- 400 | 1603, 1703 | Error in the ‘name’ field. It should have ‘string’ type. Use
  string type for ‘name’ parameter.
- 400 | 1604, 1704 | Error in the ‘name’ field. This value is too long. It should
  have 255 characters or less. Use shorter name.
- 400 | 1605, 1705 | Error in the ‘name’ field. Project with such a name already exists.
  Use unique project name or delete existing project first.
- 400 | 1606 | Error in the ‘send_enabled’ field. This value should be of type bool.
  Set parameter value to true or false only.
- 400 | 1607 | Error in ‘custom_unsubscribe_url_enabled’ field. This value should
  be of type bool. Set parameter value to true or false only.
- 400 | 1608, 1711 | Forbidden to use field ‘custom_unsubscribe_url_enabled’. Please
  [contact support](https://cp.unione.io/en/support).
- 400 | 1609, 1716 | Error in ‘country’ field. This value should be of type string.
  Use string type for ‘country’ parameter.
- 400 | 1610, 1717 | Error in ‘country’ field. This value is not a valid country.
  Make sure the ISO-3166 alpha-2 country code is passed correctly.
- 400 | 1611, 1718 | Error in ‘backend_domain_id’ field. This value should be of type
  int. Use int type for ‘backend_domain_id’ parameter.
- 400 | 1612, 1719 | Error in ‘backend_domain_id’ field. The backend domain does not
  belong to the user. Please enter a valid ‘backend_domain_id’ parameter.
- 400 | 1613, 1720 | Error in ‘backend_domain_id’ field. Backend domain is not active.
  Please enter a valid ‘backend_domain_id’ parameter.
- 400 | 1614, 1726 | Error in ‘unsubscribe_page_id’ field. This value should be of
  type int. Use int type for ‘unsubscribe_page_id’ parameter.
- 400 | 1706 | Error in ‘project_api_key’ field. One of the two properties [‘project_api_key’
  or ‘project_id’] is required. Don’t forget to send either project_id or project_api_key.
- 400 | 1707, 1802 | Error in the ‘project_api_key’ field. Project not found. Use
  correct project_api_key. You can get a list of projects with their keys with [project/list](#project-list)
  method.
- 400 | 1708 | Error in the ‘project_api_key’ field. The value should have a string
  type. Use string type for ‘project_api_key’.
- 400 | 1709 | Error in the ‘send_enabled’ field. The value should have a bool type.
  Set parameter value to true or false only.
- 400 | 1710 | Error in the ‘custom_unsubscribe_url_enabled’ field. The value should
  have a bool type. Set parameter value to true or false only.
- 400 | 1712, 1805, 1905 | Error in the ‘project_id’ field. This value should be of
  type string. Please use string type for project_id field.
- '400 | 1713, 1804 | Error in the ‘project_api_key’ field. One of the two properties
  [‘project_api_key’ or ‘project_id’] must be empty Please pass only one of the two
  parameters: either project_id or project_api_key, not both.'
- 400 | 1714, 1806 | Error in the ‘project_id’ field. Project with ID:‘NNNN’ not exists.
  Project id is invalid. Maybe it was deleted or never existed?
- 400 | 1715, 1807 | Error in the ‘project_id’ field. This value is not valid. Please
  check that you pass the project_id you have received by calling [project/create](#project-create)
  method.
- 400 | 1721 | Error in ‘email_counter’ field. This value should be of type int. Use
  int type for ‘email_counter’ parameter.
- 400 | 1722 | Error in ‘email_counter’ field. This value should be equal to 0. Set
  parameter value equal to 0.
- 400 | 1723 | Error in ‘email_counter_limit’ field. This value should be of type
  int. Use int type for ‘email_counter_limit’ parameter.
- 400 | 1724 | Error in ‘email_counter_limit’ field. This value should be greater
  than or equal to 0. Set parameter value greater than or equal to 0.
- 400 | 1725 | Error in ‘email_counter_mode’ field. This value should be of type bool.
  Set parameter value to default or permanent only.
- 400 | 1801 | Error in ‘project_api_key’ field. One of the two properties [‘project_api_key’
  or ‘project_id’] is required. Don’t forget to send either project_id or project_api_key.
- 400 | 1803, 1902 | Error in the ‘project_api_key’ field. The value should have a
  string type. Use string type for ‘project_api_key’.
- 400 | 1904 | Error in the ‘project_id’ field. This value is not valid. The value
  should contain digits only. Use correct numbers-only format for ‘project_id’.
- 400 | 2306 | Error in ‘recipients’ field. This value should not be blank. Make sure
  the ‘recipients’ is passed.
- 400 | 2307 | Error in ‘recipients’ field. This value should be of type string. Use
  string type for ‘recipients’ parameter.
- 400 | 2500 | Error in ‘editor_type’ field. ‘html’ is required. Make sure the ‘editor_type’
  field is passed ‘html’.
- 400 | 2501 | The template was created in a visual editor. Make sure the template
  is created in HTML editor.
- 400 | 2502 | Error in ‘editor_type’ field. This value should not be blank. Pass
  ‘html’ in ‘editor_type’ field.
- 400 | 2503 | Error in ‘id’ field. There is no template with this ID. Make sure the
  template ID is correct.
- 400 | 2504 | Error in ‘headers’ field. This value should have object type. Please
  check your JSON and use object for ‘headers’ field, not array or string or whatever.
- 400 | 2505 | Error in ‘headers’ field. This container should contain 50 elements
  or less. Please limit headers to no more than 50 elements.
- 400 | 2514 | Error in ‘reply_to’ field. This value should be of type string. Use
  string type for ‘reply_to’ parameter.
- 400 | 2515 | Error in ‘reply_to’ field. This value is not a valid email address.
  Check if the email is correct.
- '400 | 2516 | Error in ‘template_engine’ field. Invalid value, template_engine could
  be one of ‘simple’, ‘liquid’, ‘velocity’ or ‘none’. Please pass one of the following
  values: ‘simple’, ‘liquid’, ‘velocity’ or ‘none’.'
- 400 | 2517 | Error in ‘subject’ field. This value should be of type string. Use
  string type for ‘subject’ parameter.
- 400 | 2518 | Error in ‘subject’ field. Substitutions contain invalid values. Check
  the correct substitutions in the ‘subject’ field.
- 400 | 2519 | Error in ‘from_name’ field. This value should be of type string. Use
  string type for ‘from_name’ parameter.
- 400 | 2520 | Error in ‘from_name’ field. Substitutions contain invalid values. Check
  the correct substitutions in the ‘from_name’ field.
- 400 | 2521 | Error in ‘from_name’ field. Invalid velocity substitution format .
  Substitution name in body should contain latin characters, numbers or ‘_’ character
  and start with a letter.
- 400 | 2522 | Error in ‘subject’ field. Invalid velocity substitution format . Substitution
  name in body should contain latin characters, numbers or ‘_’ character and start
  with a letter.
- 400 | 2523 | Error in ‘reply_to_name’ field. Invalid velocity substitution format.
  Substitution name in body should contain latin characters, numbers or ‘_’ character
  and start with a letter.
- 400 | 2524 | Error in ‘options’ field. This value should be of type string. Use
  string type for ‘options’ parameter.
- 400 | 2525 | Error in ‘options.unsubscribe_url’ field. Invalid substitution format.
  Substitution name in body should contain latin characters, numbers or ‘_’ character
  and start with a letter.
- 400 | 2526 | Error in ‘options.unsubscribe_url’ field. Invalid velocity substitution
  format. Substitution name in body should contain latin characters, numbers or ‘_’
  character and start with a letter.
- 400 | 2528, 10002 | Error in ‘[attachments.name](http://attachments.name)’ field.
  Attachment name cannot be longer than 255 bytes. Use shorter name.
- 400 | 2529, 10001 | Error in ‘inline_attachments.name’ field. Attachment name cannot
  be longer than 255 bytes. Use shorter name.
- 400 | 2530, 10003 | Error in ‘body.html’ field. Invalid Liquid substitution format.
  Substitution name should contain latin characters, numbers or ‘_’ character and
  start with a letter.
- 400 | 2531, 10004 | Error in ‘subject’ field. Invalid Liquid substitution format.
  Substitution name should contain latin characters, numbers or ‘_’ character and
  start with a letter.
- 400 | 2532, 10005 | Error in ‘from_name’ field. Invalid Liquid substitution format.
  Substitution name should contain latin characters, numbers or ‘_’ character and
  start with a letter.
- 400 | 2533, 10006 | Error in ‘reply_to_name’ field. Invalid Liquid substitution
  format. Substitution name should contain latin characters, numbers or ‘_’ character
  and start with a letter.
- 400 | 2534, 10007 | Error in ‘body.plaintext’ field. Invalid Liquid substitution
  format. Substitution name should contain latin characters, numbers or ‘_’ character
  and start with a letter.
- 400 | 2535, 10008 | Error in ‘body.amp’ field. Invalid Liquid substitution format.
  Substitution name should contain latin characters, numbers or ‘_’ character and
  start with a letter.
- '413: Request Entity Too Large'
- '400 Bad Request: Check the request body for formatting errors'
- '401 Unauthorized: Ensure the API key is valid'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- 'temporary_unavailable: Address is temporarily unavailable'
- '413: Request Entity Too Large - The request size exceeds the limit.'
- '215: The user is not allowed to send email - Check account status.'
- 'INVALID_EMAIL: The email address is invalid.'
- '401 Unauthorized: Check API key or authentication method.'
- '429 Too Many Requests: Reduce the number of simultaneous requests.'
- '408 Request Timeout: The validation result may be undefined if the server does
  not respond in 5 seconds.'
- If the status changes to 'Error', contact our support team to find out what's wrong
  and be advised on possible fixes.
- '413: Request size limit exceeded'
- '401 Unauthorized: Recheck API key or authentication.'
- 'temporary_unavailable: One or more previous attempts for this address were unsuccessful,
  and the address has been tagged as “temporarily unavailable”.'
- 'INVALID_EMAIL_FORMAT: The email address format is invalid.'
- 'ADDRESS_SUPPRESSED: The email address is on the suppression list.'
- '400 Bad Request: Ensure all required fields are included'
- 'unsubscribed: The addressee has unsubscribed by following the link in the email
  body or List-Unsubscribe header, or was added to the list with suppression/set API
  call.'
- 'temporary_unavailable: One or more previous attempts for this address were unsuccessful,
  and the address has been tagged as ''temporarily unavailable''.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'temporary_unavailable: Address tagged as temporarily unavailable.'
- 'unsubscribed: The addressee has unsubscribed from your messages.'
- 'temporary_unavailable: The address has been tagged as temporarily unavailable.'
- '401 Unauthorized: Recheck API key or permissions.'
- 'INVALID_EMAIL: The target address is invalid.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle requests to stay within the limit.'
- 'INVALID_EMAIL: The email address format is incorrect.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Recheck your authentication credentials.'
- '403 Forbidden: You do not have permission for this action.'
- 'sending is restricted: automated anti-spam control system considered some actions
  suspicious'
- '429 Too Many Requests: Limit exceeded for simultaneous requests.'
- '408 Request Timeout: The recipient''s mail server did not respond in time.'
- '215 The user is not allowed to send email: Check if mailing has been disabled for
  your account.'
- 'temporary_unavailable: Address has been tagged as temporarily unavailable'
- '400 Bad Request: Check the API request parameters.'
- '401 Unauthorized: Ensure that the API key is valid.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'INVALID_API_KEY: Check if the API key is correct.'
- 'MISSING_RECIPIENT: Ensure that at least one recipient is provided.'
- '400 Bad Request: Check the request payload for errors.'
- '401 Unauthorized: Verify your API key.'
- '403 Forbidden: You do not have permission to access this resource.'
- 'REQUEST_LIMIT_EXCEEDED: Maximum of two simultaneous requests are allowed'
- 'TIMEOUT: Mail server did not respond in 5 seconds'
- 'UNSUBSCRIBE_ERROR: Check if the email address is already unsubscribed'
- 'INVALID_API_KEY: Check the API key provided.'
- 'EMAIL_SEND_FAILED: Verify email addresses and message format.'
- 'API code 215: The user is not allowed to send email'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://cp.unione.io
  headers:
    Accept: application/json
source_metadata: null
