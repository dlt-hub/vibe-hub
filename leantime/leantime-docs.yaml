resources:
- name: json_rpc
  endpoint:
    path: /api/jsonrpc
    method: POST
    data_selector: null
    params: {}
- name: leantime
  endpoint:
    path: /api/usage
    method: GET
- name: mysql_leantime
  endpoint:
    path: /installation/docker?id=docker-run
    method: POST
    data_selector: records
    params: {}
- name: leantime
  endpoint:
    path: /installation/docker?id=docker-compose
    method: POST
    data_selector: records
    params: {}
- name: HelloWorld
  endpoint:
    path: /hello-world/show
    method: GET
- name: Calendar
  endpoint:
    path: leantime.rpc.Calendar
    method: POST
- name: Canvas
  endpoint:
    path: leantime.rpc.Canvas
    method: POST
- name: Clients
  endpoint:
    path: leantime.rpc.Clients
    method: POST
- name: Comments
  endpoint:
    path: leantime.rpc.Comments
    method: POST
- name: Files
  endpoint:
    path: leantime.rpc.Files
    method: POST
- name: Goalcanvas
  endpoint:
    path: leantime.rpc.Goalcanvas
    method: POST
- name: Ideas
  endpoint:
    path: leantime.rpc.Ideas
    method: POST
- name: Notifications
  endpoint:
    path: leantime.rpc.Notifications
    method: POST
- name: Oidc
  endpoint:
    path: leantime.rpc.Oidc
    method: POST
- name: Plugins
  endpoint:
    path: leantime.rpc.Plugins
    method: POST
- name: Projects
  endpoint:
    path: leantime.rpc.Projects
    method: POST
- name: Queue
  endpoint:
    path: leantime.rpc.Queue
    method: POST
- name: Reactions
  endpoint:
    path: leantime.rpc.Reactions
    method: POST
- name: Reports
  endpoint:
    path: leantime.rpc.Reports
    method: POST
- name: Setting
  endpoint:
    path: leantime.rpc.Setting
    method: POST
- name: Sprints
  endpoint:
    path: leantime.rpc.Sprints
    method: POST
- name: Tags
  endpoint:
    path: leantime.rpc.Tags
    method: POST
- name: Tickets
  endpoint:
    path: leantime.rpc.Tickets
    method: POST
- name: Timesheets
  endpoint:
    path: leantime.rpc.Timesheets
    method: POST
- name: Users
  endpoint:
    path: leantime.rpc.Users
    method: POST
- name: Widgets
  endpoint:
    path: leantime.rpc.Widgets
    method: POST
- name: Wiki
  endpoint:
    path: leantime.rpc.Wiki
    method: POST
- name: ticketStatusUpdate
  endpoint:
    path: /technical/hooks?id=leantimedomainticketsrepositoriesticketspatchticketticketstatusupdate
    method: GET
    data_selector: arguments
- name: updateTicketStatus
  endpoint:
    path: /technical/hooks?id=leantimedomainticketsrepositoriesticketsupdateticketstatusticketstatusupdate
    method: GET
    data_selector: arguments
- name: showAllMilestones
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatesshowallmilestonestplallticketstablebeforeRowEnd
    method: GET
    data_selector: tickets
    params: {}
- name: showTicketModal
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatesshowticketmodaltpltickettabs
    method: GET
    data_selector: ticket
    params: {}
- name: ticketDetails
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatessubmodulesticketdetailssubbeforesubtasks
    method: GET
    data_selector: ticketId
    params: {}
- name: ticketFilter
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatessubmodulesticketfiltersubfiltersbeforefirstbarfield
    method: GET
    data_selector: filters
    params: {}
- name: ticketHeader
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatessubmodulesticketheadersubbeforepageheaderopen
    method: GET
    data_selector: header
    params: {}
- name: portfolioHeader
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatessubmodulesportfolioheadersubbeforepageheaderopen
    method: GET
    data_selector: header
    params: {}
- name: timelineHeader
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatessubmodulestimelineheadersubbeforepageheaderopen
    method: GET
    data_selector: header
    params: {}
- name: showList
  endpoint:
    path: /technical/hooks?id=leantimedomainticketstemplatesshowlisttplfiltersafterlefthandsectionopen
    method: GET
    data_selector: filters
    params: {}
- name: tickets
  endpoint:
    path: /Domain/Tickets/Templates/showList.tpl.php
    method: GET
    data_selector: tickets
    params: {}
- name: calendar
  endpoint:
    path: /Domain/Tickets/Templates/calendar.tpl.php
    method: GET
    data_selector: calendar
    params: {}
- name: statusLabels
  endpoint:
    path: /Domain/Tickets/Services/Tickets.php
    method: POST
    data_selector: statusLabels_updated
    params: {}
- name: quickAddTicket
  endpoint:
    path: /Domain/Tickets/Services/Tickets.php
    method: POST
    data_selector: ticket_created
    params: {}
- name: quickAddMilestone
  endpoint:
    path: /Domain/Tickets/Services/Tickets.php
    method: POST
    data_selector: milestone_created
    params: {}
- name: addTicket
  endpoint:
    path: /Domain/Tickets/Services/Tickets/addTicket
    method: POST
- name: updateTicket
  endpoint:
    path: /Domain/Tickets/Services/Tickets/updateTicket
    method: PUT
- name: moveTicket
  endpoint:
    path: /Domain/Tickets/Services/Tickets/moveTicket
    method: POST
- name: deleteTicket
  endpoint:
    path: /Domain/Tickets/Services/Tickets/delete
    method: DELETE
- name: showProject
  endpoint:
    path: /Domain/Projects/Templates/showProject
    method: GET
- name: notifyProjectUsers
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsnotifyprojectusersnotificationfilter
    method: GET
- name: getProjectHierarchyAssignedToUser
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsgetprojecthierarchyassignedtouserafterloadingprojects
    method: GET
- name: getProjectHierarchyAssignedToUserAfterPopulating
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsgetprojecthierarchyassignedtouserafterpopulatingprojecthierarchy
    method: GET
- name: getProjectHierarchyAssignedToUserAfterPopulatingFavorites
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsgetprojecthierarchyassignedtouserafterpopulatingprojectfavorites
    method: GET
- name: getProjectHierarchyAvailableToUser
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsgetprojecthierarchyavailabletouserafterloadingprojects
    method: GET
- name: getProjectHierarchyAvailableToUserAfterPopulating
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsgetprojecthierarchyavailabletouserafterpopulatingprojecthierarchy
    method: GET
- name: getAllClientsAvailableToUser
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsgetallclientsavailabletouserafterloadingprojects
    method: GET
- name: getProjectAvatar
  endpoint:
    path: /technical/hooks?id=leantimedomainprojectsservicesprojectsgetprojectavataraftergettingavatar
    method: GET
- name: customUpdatePage
  endpoint:
    path: /technical/hooks?id=leantimedomaininstallcontrollersupdategetcustomupdatepage
    method: GET
- name: loadProviders
  endpoint:
    path: /technical/hooks?id=leantimedomainconnectorservicesprovidersloadprovidersproviderlist
    method: GET
- name: addTime
  endpoint:
    path: /technical/hooks?id=leantimedomaintimesheetsrepositoriestimesheetsaddtimesql
    method: GET
- name: upsertTimesheetEntry
  endpoint:
    path: /technical/hooks?id=leantimedomaintimesheetsrepositoriestimesheetsupserttimesheetentrysql
    method: GET
- name: updateHours
  endpoint:
    path: /technical/hooks?id=leantimedomaintimesheetsrepositoriestimesheetsupdatehourssql
    method: GET
- name: getPluginCss
  endpoint:
    path: /technical/hooks?id=leantimedomainpluginscontrollerscssloadergetplugincss
    method: GET
- name: getAllPlugins
  endpoint:
    path: /technical/hooks?id=leantimedomainpluginsservicespluginsgetallpluginsbeforereturnallplugins
    method: GET
- name: getEnabledPlugins
  endpoint:
    path: /technical/hooks?id=leantimedomainpluginsservicespluginsgetenabledpluginsbeforereturncachedplugins
    method: GET
- name: getFilteredRoles
  endpoint:
    path: /technical/hooks?id=leantimedomainauthmodelsrolesgetfilteredrolesavailable_roles
    method: GET
- name: dashboardRedirect
  endpoint:
    path: /technical/hooks?id=leantimedomaindashboardcontrollershowgetdashboardredirect
    method: GET
- name: buildMenuStructure
  endpoint:
    path: /technical/hooks?id=leantimedomainmenurepositoriesmenubuildmenustructurefilter
    method: GET
- name: getMenuStructure
  endpoint:
    path: /technical/hooks?id=leantimedomainmenurepositoriesmenugetmenustructuremenustructures
    method: GET
- name: getSectionMenuType
  endpoint:
    path: /technical/hooks?id=leantimedomainmenurepositoriesmenugetsectionmenutypemenusections
    method: GET
- name: reactions
  endpoint:
    path: /Leantime.Domain.Reactions.Models.Reactions.getReactions.available_reactions
    method: GET
- name: reactions_by_type
  endpoint:
    path: /Leantime.Domain.Reactions.Models.Reactions.getReactionsByType.available_reactions
    method: GET
- name: helper_modal
  endpoint:
    path: /Leantime.Domain.Help.Services.Helper.__construct.addHelperModal
    method: GET
- name: first_login_steps
  endpoint:
    path: /Leantime.Domain.Help.Services.Helper.getFirstLoginSteps.filterSteps
    method: GET
- name: complete_onboarding
  endpoint:
    path: /Leantime.Domain.Setting.Services.Setting.onboardingHandler.completeOnboardingHandler
    method: GET
- name: anonymous_telemetry
  endpoint:
    path: /Leantime.Domain.Reports.Services.Reports.getAnonymousTelemetry.beforeReturnTelemetry
    method: GET
- name: available_widgets
  endpoint:
    path: /Leantime.Domain.Widgets.Services.Widgets.__construct.availableWidgets
    method: GET
- name: default_widgets
  endpoint:
    path: /Leantime.Domain.Widgets.Services.Widgets.__construct.defaultWidgets
    method: GET
- name: get_all_widgets
  endpoint:
    path: /Leantime.Domain.Widgets.Services.Widgets.getAll.availableWidgets
    method: GET
- name: get_all_users
  endpoint:
    path: /Leantime.Domain.Users.Services.Users.getAll.getAll
    method: GET
- name: module_availability
  endpoint:
    path: /Leantime.Domain.Modulemanager.Services.Modulemanager.isModuleAvailable.moduleAvailability
    method: GET
- name: public_files_path
  endpoint:
    path: /Leantime.Core.Fileupload.getPublicFilesPath.relative_path
    method: GET
- name: sendMail.mailBodyParams
  endpoint:
    path: /technical/hooks?id=leantimecoremailersendmailmailbodyparams-1
    method: GET
    data_selector: arguments
- name: sendMail.bodyContent
  endpoint:
    path: /technical/hooks?id=leantimecoremailersendmailbodycontent-1
    method: GET
    data_selector: arguments
- name: sendMail.altBody
  endpoint:
    path: /technical/hooks?id=leantimecoremailersendmailaltbody-1
    method: GET
    data_selector: arguments
- name: HttpKernel.sendRequestThroughRouter.middleware
  endpoint:
    path: /technical/hooks?id=leantimecorehttphttpkernelsendrequestthroughroutermiddleware
    method: GET
    data_selector: arguments
- name: HttpKernel.sendRequestThroughRouter.plugins_middleware
  endpoint:
    path: /technical/hooks?id=leantimecorehttphttpkernelsendrequestthroughrouterplugins_middleware
    method: GET
    data_selector: arguments
- name: HttpKernel.handle.beforeSendResponse
  endpoint:
    path: /technical/hooks?id=leantimecorehttphttpkernelhandlebeforesendresponse
    method: GET
    data_selector: arguments
- name: Template.assign.var.{$name}
  endpoint:
    path: /technical/hooks?id=leantimecoreuitemplateassignvarname
    method: GET
    data_selector: arguments
- name: Template.display.template
  endpoint:
    path: /technical/hooks?id=leantimecoreuitemplatedisplaytemplate
    method: GET
    data_selector: arguments
- name: Template.confirmLayoutName.layout
  endpoint:
    path: /technical/hooks?id=leantimecoreuitemplateconfirmlayoutnamelayout
    method: GET
    data_selector: arguments
- name: Language.readIni.language_resources
  endpoint:
    path: /technical/hooks?id=leantimecorelanguagereadinilanguage_resources
    method: GET
    data_selector: arguments
- name: Language.getLanguageList.languages
  endpoint:
    path: /technical/hooks?id=leantimecorelanguagegetlanguagelistlanguages
    method: GET
    data_selector: arguments
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
notes:
- Pacakge based installation requires a Linux Distribution, preferably Ubuntu 20.04+.
- Docker-based installation requires a system with Docker installed and docker-compose.
- The Leantime folder should be writeable by the server user (usually apache or www-data).
- Strict mode is currently not supported.
- Ensure the following changes are made to the file, in order to create and configure
  a new MySQL container
- Volumes are used to store permanent data on the host of your docker container.
- To run the cron tab you MUST set `$appURL` in your config file. Otherwise links
  within the email will not work properly.
- The session folder was removed or does not have the appropriate permissions to write
  sessions.
- LEAN_SESSION_SECURE is set to true but requests are served via http.
- Make sure userfiles/ and public/userfiles/ are writeable by the server user.
- 'You installed Leantime in a subfolder but forgot one of the steps outlined in:
  https://docs.leantime.io/#/installation/advanced'
- You are running Leantime using PHP7.X Leantime required PHP8 to run.
- Uses OAuth2 with refresh token — requires setup of connected app in api
errors:
- 404 error when going to domain/install
- 'mkdir(): No such file or directory at … after update'
- I can’t upload files
- Folder ‘vendor’ cannot be found
- Leantime looks ‘weird’ after installation
- 'PHP Parse error: syntax error, unexpected ''|'', expecting '';'' or ''{'''
- HX, PATCH, PUT, DELETE methods return 404
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://hub.docker.com/r/leantime/leantime
  headers:
    Accept: application/json
source_metadata: null
