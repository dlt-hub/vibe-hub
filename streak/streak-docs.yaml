resources:
- name: boxes
  endpoint:
    path: /pipelines/{pipelineKey}/boxes/batch
    method: POST
    data_selector: ''
    params: {}
- name: snippets
  endpoint:
    path: /snippets
    method: GET
- name: user
  endpoint:
    path: /users/me
    method: GET
- name: snippet
  endpoint:
    path: /api/v1/snippets/{key}
    method: DELETE
- name: meetings
  endpoint:
    path: /boxes//meetings
    method: POST
- name: field_value
  endpoint:
    path: /api/v1/boxes/{boxKey}/fields/{fieldKey}
    method: GET
- name: update_stagepost
  endpoint:
    path: /api/v1/pipelines/{pipelineKey}/stages/{stageKey}
    method: PATCH
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
- name: boxpost
  endpoint:
    path: /pipelines/{pipelineKey}/boxes
    method: POST
- name: stage
  endpoint:
    path: /pipelines/{pipelineKey}/stages/{stageKey}
    method: GET
- name: meeting
  endpoint:
    path: /meetings/{key}
    method: POST
- name: fields
  endpoint:
    path: /pipelines//fields
    method: PUT
- name: delete_comment
  endpoint:
    path: /api/v2/comments/{key}
    method: DELETE
- name: fields
  endpoint:
    path: /boxes/{boxKey}/fields
    method: GET
- name: pipelines
  endpoint:
    path: /pipelines/
    method: DELETE
- name: boxes_batch
  endpoint:
    path: /pipelines//boxes/batch
    method: POST
- name: delete_task
  endpoint:
    path: /tasks/{key}
    method: DELETE
- name: comments
  endpoint:
    path: /boxes/{key}/comments
    method: GET
- name: pipelines
  endpoint:
    path: /pipelines
    method: PUT
- name: threads
  endpoint:
    path: /boxes/{key}/threads
    method: GET
- name: snippet
  endpoint:
    path: /snippets/{key}
    method: POST
- name: webhooks
  endpoint:
    path: /webhooks/
    method: GET
- name: teams
  endpoint:
    path: /teams/
    method: GET
- name: contact
  endpoint:
    path: /contacts/{key}
    method: GET
- name: comments
  endpoint:
    path: /boxes//comments
    method: POST
- name: fields
  endpoint:
    path: /api/v1/pipelines//fields
    method: GET
    data_selector: fields
- name: boxes
  endpoint:
    path: /pipelines//boxes
    method: GET
    data_selector: records
    params: {}
- name: boxes
  endpoint:
    path: /boxes/{boxKey}
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    params:
      query: '[email protected]'
- name: organization
  endpoint:
    path: /api/v2/organizations/
    method: DELETE
    data_selector: null
    params: {}
- name: tasks
  endpoint:
    path: /tasks/
    method: POST
- name: webhooks
  endpoint:
    path: /api/v2/pipelines//webhooks
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks/
    method: POST
    data_selector: event, targetUrl
- name: organizations
  endpoint:
    path: /organizations/
    method: POST
- name: teams
  endpoint:
    path: /api/v2/users/me/teams
    method: GET
- name: current_user
  endpoint:
    path: /users/me
    method: GET
- name: files
  endpoint:
    path: /files/
    method: POST
- name: contacts
  endpoint:
    path: /contacts
    method: POST
- name: webhooks
  endpoint:
    path: /teams//webhooks
    method: GET
- name: delete_meeting
  endpoint:
    path: /meetings/{key}
    method: DELETE
    data_selector: ''
    params: {}
- name: meetings
  endpoint:
    path: /boxes/{key}/meetings
    method: GET
- name: user
  endpoint:
    path: /users/{userKey}
    method: GET
- name: file_contents
  endpoint:
    path: /files//contents
    method: GET
    data_selector: binary_contents
- name: task
  endpoint:
    path: /tasks/{key}
    method: GET
- name: pipeline
  endpoint:
    path: /api/v1/pipelines/{pipelineKey}
    method: GET
    data_selector: pipeline
- name: stages
  endpoint:
    path: /pipelines//stages
    method: PUT
- name: thread
  endpoint:
    path: /threads/{key}
    method: GET
- name: user
  endpoint:
    path: /users/me
    method: GET
    data_selector: user
    params: {}
- name: stages
  endpoint:
    path: /pipelines//stages
    method: GET
    data_selector: stages
    params: {}
- name: contacts
  endpoint:
    path: /api/v2/contacts/
    method: DELETE
- name: files
  endpoint:
    path: /api/v1/boxes//files
    method: GET
    data_selector: contents
    params: {}
- name: threads
  endpoint:
    path: /boxes/{key}/threads
    method: GET
    data_selector: ''
- name: organizations
  endpoint:
    path: /api/v2/organizations/
    method: GET
- name: newsfeed
  endpoint:
    path: /boxes//newsfeed
    method: GET
    data_selector: events
- name: field
  endpoint:
    path: /pipelines/{pipelineKey}/fields/{fieldKey}
    method: GET
- name: task
  endpoint:
    path: /boxes/{key}/tasks
    method: POST
- name: delete_field
  endpoint:
    path: /pipelines/{pipelineKey}/fields/{fieldKey}
    method: DELETE
    data_selector: null
    params: {}
- name: box
  endpoint:
    path: /api/v1/boxes/{boxKey}
    method: GET
- name: boxes
  endpoint:
    path: /boxes/
    method: POST
- name: comment
  endpoint:
    path: /api/v2/comments/{key}
    method: GET
- name: snippet
  endpoint:
    path: /snippets/{key}
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: ''
    params: {}
- name: delete_box
  endpoint:
    path: /boxes/{boxKey}
    method: DELETE
- name: file
  endpoint:
    path: /files/{key}
    method: GET
- name: search_boxes
  endpoint:
    path: /api/v1/search
    method: GET
    data_selector: boxes
- name: newsfeed
  endpoint:
    path: /pipelines//newsfeed
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks/
    method: DELETE
- name: organizations
  endpoint:
    path: /teams//organizations
    method: POST
    data_selector: ''
    params:
      getIfExisting: 'true'
- name: newsfeed
  endpoint:
    path: /newsfeed
    method: GET
notes:
- Make sure to include your authorization in any request you make on your own.
- All requests must be made over HTTPS; HTTP requests will be ignored.
- The user making the request must have access to the team in order to make the request
  successfully
- You must include a name OR a website (domains) in your request, or your organization
  will fail to create.
- You may not have duplicated websites.
- You must have permissions to create an organization for the team or you will not
  be able to complete this request.
- The timeline endpoint provides a consolidated view of all the timestamped contents
  of a box.
- Tokens returned have the parameters you supplied encoded within them.
- You can not update a pipeline-based webhook to become a team-based webhook or vice-versa.
- The post data for this request must be a well formed JSON object.
- 'Make sure to include -H "Content-Type: application/json" and your authorization
  in any request you make on your own.'
- Including the parameter getIfExisting limits the parameters you can include in the
  call.
- You must be part of the team on which a contact is created in order to delete it.
- All calls must be over HTTPS.
- You can only get the contents of files that are of the type GMAIL_API.
- 'This call lets you delete a field defined in a pipeline. Note: this will also remove
  the values of this field for every box in the pipeline.'
- 'Make sure to include -H ''Content-Type: application/json'' and your authorization
  in any request you make on your own.'
- All POST requests should set the Content-Type header to application/json and set
  the post data to a valid JSON object.
- The Streak API always returns a JSON object with the Content-Type set to application/json.
errors:
- 'Missing parameters: You might be missing the teamKey, emailAddresses, givenName,
  or familyName'
- Incorrect teamKey, API path has something mis-spelled or missing
- We can't find the teamKey you've provided.
- 'Need more information on the contact: We require one of the following to create
  a contact.'
- 'Need appropriate header: If you do not have the header.'
- 'Duplicate email addresses: You can not pass duplicate email addresses.'
- Can't change the type of a field
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.streak.com/api/v1
  headers:
    Authorization: Bearer {token}
    Content-Type: application/json
    Accept: application/json
  paginator:
    type: cursor
    cursor_param: nextPage
  auth:
    type: Basic
    location: header
    header_name: Authorization
source_metadata: null
