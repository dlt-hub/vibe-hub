resources:
- name: Context
  endpoint:
    path: /v1/context
    method: POST
    data_selector: cid
- name: Refresh
  endpoint:
    path: /v1/mobile/auth
    method: POST
    data_selector: token
- name: bettor
  endpoint:
    path: /v1/bettors/<internalID>/refresh
    method: POST
- name: bettorId
  endpoint:
    path: /v1/bettors/<BTTR_ID>/refresh
    method: POST
- name: bettorAccountId
  endpoint:
    path: /v1/bettorAccounts/<BACT_ID>/refresh
    method: POST
- name: reverify
  endpoint:
    path: /v1/bettorAccounts/<BACT_ID>/refresh
    method: POST
    params:
      reverify: true
- name: book
  endpoint:
    path: /book-list
    method: GET
    data_selector: books
- name: bettorAccount
  endpoint:
    path: /v1/bettorAccounts/{id}/refresh
    method: POST
    data_selector: ''
    params:
      reverify: 'true'
- name: marketSelection
  endpoint:
    path: /marketselection
    method: GET
    data_selector: marketSelections
- name: betPlace Context
  endpoint:
    path: /reference/betplace-context
    method: GET
- name: Game Prop Correct Score
  endpoint:
    path: /game-props/correct-score
    method: GET
- name: bets
  endpoint:
    path: /api/v1/bets
    method: GET
    data_selector: market_name
- name: team_props
  endpoint:
    path: /team-props
    method: GET
    data_selector: market_name
- name: futures
  endpoint:
    path: /futures
    method: GET
- name: team_props
  endpoint:
    path: /team-props
    method: GET
    data_selector: market_name
    params: {}
- name: bestPrice Context
  endpoint:
    path: /reference/bestprice-context
    method: POST
- name: auth tokens
  endpoint:
    path: /reference/browser-extension-auth-token
    method: POST
- name: successful_verification_no_delay
  endpoint:
    path: /successful-verification-no-delay
    method: GET
    data_selector: user
    params: {}
- name: successful_verification_delayed
  endpoint:
    path: /successful-verification-delayed
    method: GET
    data_selector: user
    params: {}
- name: failed_verification
  endpoint:
    path: /failed-verification
    method: GET
    data_selector: user
    params: {}
- name: failed_bet_refresh
  endpoint:
    path: /failed-bet-refresh
    method: GET
    data_selector: user
    params: {}
- name: user_changed_password
  endpoint:
    path: /user-changed-password
    method: GET
    data_selector: user
    params: {}
- name: user_2fa_enabled
  endpoint:
    path: /user-2fa-enabled
    method: GET
    data_selector: user
    params: {}
- name: invalid_password
  endpoint:
    path: /invalid-password
    method: GET
    data_selector: user
    params: {}
- name: bettorAccounts
  endpoint:
    path: /reference/bettoraccounts-list
    method: GET
    data_selector: records
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccount-detail
    method: GET
    data_selector: records
- name: bettorAccount Metadata
  endpoint:
    path: /reference/bettoraccount-metadata
    method: GET
    data_selector: records
- name: refresh bettorAccount
  endpoint:
    path: /reference/refresh-bettoraccount
    method: POST
    data_selector: records
- name: pause
  endpoint:
    path: /reference/pause-bettoraccount
    method: PUT
    data_selector: records
- name: remove access
  endpoint:
    path: /reference/remove-access-for-bettoraccount
    method: PUT
    data_selector: records
- name: bettorAccounts
  endpoint:
    path: /reference/bettoraccounts-list
    method: GET
    data_selector: records
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccount-detail
    method: GET
    data_selector: record
- name: bettorAccount Metadata
  endpoint:
    path: /reference/bettoraccount-metadata
    method: GET
    data_selector: metadata
- name: refresh bettorAccount
  endpoint:
    path: /reference/refresh-bettoraccount
    method: POST
- name: pause
  endpoint:
    path: /reference/pause-bettoraccount
    method: PUT
- name: remove access
  endpoint:
    path: /reference/remove-access-for-bettoraccount
    method: PUT
- name: bettorAccounts
  endpoint:
    path: /reference/bettoraccounts-list
    method: GET
- name: betSlips
  endpoint:
    path: /reference/betslip-list
    method: GET
    data_selector: betSlips
- name: betSlipDetail
  endpoint:
    path: /reference/betslip-detail
    method: GET
    data_selector: betSlip
- name: betSlipsByBettorAccounts
  endpoint:
    path: /reference/betslips-list-copy
    method: GET
    data_selector: betSlips
- name: betSlipsByBettor
  endpoint:
    path: /reference/betslips-by-bettor
    method: GET
    data_selector: betSlips
- name: bet
  endpoint:
    path: /reference/bet
    method: GET
- name: bettor
  endpoint:
    path: /reference/bettor
    method: GET
- name: bettorAccount
  endpoint:
    path: /reference/bettorAccount
    method: GET
- name: book
  endpoint:
    path: /reference/book
    method: GET
- name: event
  endpoint:
    path: /reference/event
    method: GET
- name: team
  endpoint:
    path: /reference/team
    method: GET
- name: betSlips
  endpoint:
    path: /reference/betslip-list
    method: GET
    data_selector: betSlips
    params: {}
- name: betSlipDetail
  endpoint:
    path: /reference/betslip-detail
    method: GET
    data_selector: betSlip
    params: {}
- name: betSlipsByBettorAccounts
  endpoint:
    path: /reference/betslips-list-copy
    method: GET
    data_selector: betSlips
    params: {}
- name: betSlipsByBettor
  endpoint:
    path: /reference/betslips-by-bettor
    method: GET
    data_selector: betSlips
    params: {}
- name: refreshResponse
  endpoint:
    path: /reference/refreshresponse-list
    method: GET
    data_selector: records
    params: {}
- name: bettor
  endpoint:
    path: /reference/bettor
    method: GET
    data_selector: records
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccount
    method: GET
    data_selector: records
- name: refreshResponse
  endpoint:
    path: /reference/refresh-response
    method: GET
    data_selector: records
- name: betSlip
  endpoint:
    path: /reference/betslip
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /reference/event
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection
    method: GET
    data_selector: records
- name: marketOffer
  endpoint:
    path: /reference/marketoffer
    method: GET
    data_selector: records
- name: market
  endpoint:
    path: /reference/market
    method: GET
    data_selector: records
- name: segment
  endpoint:
    path: /reference/segment
    method: GET
    data_selector: records
- name: metric
  endpoint:
    path: /reference/metric
    method: GET
    data_selector: records
- name: sport
  endpoint:
    path: /reference/sport
    method: GET
    data_selector: records
- name: league
  endpoint:
    path: /reference/league
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /reference/team
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /reference/player
    method: GET
    data_selector: records
- name: injuries
  endpoint:
    path: /reference/injuries
    method: GET
    data_selector: records
- name: book
  endpoint:
    path: /book-list
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /books
    method: GET
    data_selector: books
    params:
      status: active
- name: article
  endpoint:
    path: /reference/article-list
    method: GET
    data_selector: records
    params: {}
- name: article
  endpoint:
    path: /articles
    method: GET
    data_selector: object
    params:
      league: string
      dateCreated: string
- name: bookRegions
  endpoint:
    path: /reference/bookregion-list
    method: GET
    data_selector: bookRegions
    params: {}
- name: bookRegionDetail
  endpoint:
    path: /reference/bookregion-detail
    method: GET
    data_selector: bookRegion
    params: {}
- name: bookRegions
  endpoint:
    path: /bookRegions
    method: GET
    data_selector: object
    params:
      status: active
- name: bookRegion
  endpoint:
    path: /v1/bookRegions/{id}
    method: GET
    data_selector: object
    params: {}
- name: bettor
  endpoint:
    path: /bettor-list
    method: GET
    data_selector: records
    params: {}
- name: bettor_detail
  endpoint:
    path: /bettor-detail
    method: GET
    data_selector: records
    params: {}
- name: bettor_metadata
  endpoint:
    path: /bettor-metadata
    method: GET
    data_selector: records
    params: {}
- name: refresh_bettor
  endpoint:
    path: /refresh-bettor
    method: POST
    data_selector: records
    params: {}
- name: bettor
  endpoint:
    path: /reference/bettor-list
    method: GET
    data_selector: records
    params: {}
- name: bettor detail
  endpoint:
    path: /reference/bettor-detail
    method: GET
    data_selector: records
    params: {}
- name: bettor metadata
  endpoint:
    path: /reference/bettor-metadata
    method: GET
    data_selector: records
    params: {}
- name: refresh bettor
  endpoint:
    path: /reference/refresh-bettor
    method: POST
    data_selector: records
    params: {}
- name: bettor
  endpoint:
    path: /bettors
    method: GET
    data_selector: object
    params:
      limit: int32
      pageSize: int32
      pageNum: int32
- name: bettor_detail
  endpoint:
    path: /bettors/{id}
    method: GET
    data_selector: object
    params: {}
- name: bettor_list
  endpoint:
    path: /bettors
    method: GET
    data_selector: records
    params: {}
- name: bettor_metadata
  endpoint:
    path: /bettors/{id}/metadata
    method: GET
    data_selector: object
- name: refresh_bettor
  endpoint:
    path: /v1/bettors/{id}/refresh
    method: POST
- name: context
  endpoint:
    path: /context
    method: POST
- name: betPlace Context
  endpoint:
    path: /v1/context/selection
    method: POST
- name: bestPrice
  endpoint:
    path: /bestPrice
    method: POST
- name: bettorAccounts
  endpoint:
    path: /bettorAccounts
    method: GET
    data_selector: object
    params: {}
- name: bettorAccounts by bettor
  endpoint:
    path: /bettors/{id}/bettorAccounts
    method: GET
- name: bettorAccount
  endpoint:
    path: /bettorAccounts/{id}
    method: GET
    data_selector: object
    params: {}
- name: bettorAccountMetadata
  endpoint:
    path: /bettorAccounts/{bettorAccountId}/metadata
    method: GET
    data_selector: object
    params: {}
- name: bettorAccount
  endpoint:
    path: /bettorAccounts/{bettorAccountId}/refresh
    method: POST
- name: bettorAccounts
  endpoint:
    path: /bettorAccounts
    method: GET
    data_selector: records
    params: {}
- name: refreshResponse
  endpoint:
    path: /refreshResponse
    method: GET
    data_selector: records
    params: {}
- name: bettorAccount
  endpoint:
    path: /v1/bettorAccounts/{bettorAccountId}/access
    method: PUT
    data_selector: object
    params:
      access: boolean
- name: refreshResponse
  endpoint:
    path: /refreshresponse-list
    method: GET
- name: bettor
  endpoint:
    path: /bettor-list
    method: GET
- name: refreshResponse
  endpoint:
    path: /reference/refreshresponse-list
    method: GET
    data_selector: records
- name: refreshResponsesByBettor
  endpoint:
    path: /reference/refreshresponses-by-bettor
    method: GET
    data_selector: records
- name: refreshResponsesByBettorAccount
  endpoint:
    path: /reference/refreshresponses-by-bettoraccount
    method: GET
    data_selector: records
- name: refreshResponseDetail
  endpoint:
    path: /reference/refreshresponse-detail
    method: GET
    data_selector: records
- name: refreshResponse
  endpoint:
    path: /v1/refreshResponses
    method: GET
    data_selector: object
- name: refreshResponses by bettorAccount
  endpoint:
    path: /bettorAccounts/{bettorAccountID}/refreshResponses
    method: GET
    data_selector: object
    params: {}
- name: refreshResponses
  endpoint:
    path: /v1/bettors/{id}/refreshResponses
    method: GET
    data_selector: object
    params: {}
- name: refreshResponse
  endpoint:
    path: /v1/refreshResponses/{refreshResponseID}
    method: GET
- name: bet
  endpoint:
    path: /reference/bet
    method: GET
    data_selector: records
    params: {}
- name: bet
  endpoint:
    path: /reference/bet
    method: GET
    data_selector: records
    params: {}
- name: betSlip
  endpoint:
    path: /reference/betslip
    method: GET
- name: betSlips list
  endpoint:
    path: /reference/betslip-list
    method: GET
- name: betSlips
  endpoint:
    path: /v1/betSlips
    method: GET
    data_selector: object
    params: {}
- name: betSlips
  endpoint:
    path: /betSlips
    method: GET
    params:
      limit: '50'
- name: betSlip
  endpoint:
    path: /v1/betSlips/{betSlipId}
    method: GET
    data_selector: object
    params: {}
- name: betSlips
  endpoint:
    path: /betSlips/betSlipId
    method: GET
- name: betSlips by bettorAccounts
  endpoint:
    path: /bettorAccounts/{id}/betSlips
    method: GET
- name: betSlips
  endpoint:
    path: /v1/bettors/{id}/betSlips
    method: GET
- name: betSlipAvailability
  endpoint:
    path: /v1/betSlips/{id}/betPlaceAvailability
    method: GET
- name: betSlips_summary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: summary
    params: {}
- name: betSlipsSummary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: yesterday
    params: {}
- name: betSlipsSummary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: yesterday
    params: {}
- name: betSlipsSummary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: summary
- name: betSlips summary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: betslips
    params: {}
- name: betSlips summary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: summary
    params: {}
- name: betSlips summary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: summary
    params: {}
- name: betSlipsSummary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: summary
    params: {}
- name: betSlips_summary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: summary
    params: {}
- name: betSlips summary
  endpoint:
    path: /reference/betslips-summary
    method: GET
    data_selector: summary
    params: {}
- name: betSlips_summary_by_bettor
  endpoint:
    path: /v1/bettors/{id}/betSlips/summary
    method: GET
- name: betSlips statistics
  endpoint:
    path: /reference/betslips-statistics
    method: GET
    data_selector: total
    params: {}
- name: betSlipsStatistics
  endpoint:
    path: /reference/betslips-statistics
    method: GET
    data_selector: total
    params: {}
- name: betSlips statistics
  endpoint:
    path: /reference/betslips-statistics
    method: GET
    data_selector: total
    params: {}
- name: betSlips statistics
  endpoint:
    path: /reference/betslips-statistics
    method: GET
    data_selector: total
    params: {}
- name: betSlips statistics
  endpoint:
    path: /reference/betslips-statistics
    method: GET
    data_selector: total
    params: {}
- name: bet_slips_statistics
  endpoint:
    path: /reference/betslips-statistics
    method: GET
    data_selector: total
    params: {}
- name: betSlips_statistics_by_bettor
  endpoint:
    path: /v1/bettors/{id}/betSlips/statistics
    method: GET
- name: events
  endpoint:
    path: /reference/events-list
    method: GET
    data_selector: events
- name: event_detail
  endpoint:
    path: /reference/event-detail
    method: GET
    data_selector: event
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: event_detail
  endpoint:
    path: /events/{id}
    method: GET
- name: marketSelection
  endpoint:
    path: /marketselection-list
    method: GET
    data_selector: records
- name: marketSelectionDetail
  endpoint:
    path: /marketselection-detail
    method: GET
    data_selector: record
- name: marketSelection
  endpoint:
    path: /marketselection-list
    method: GET
    data_selector: records
- name: marketSelectionDetail
  endpoint:
    path: /marketselection-detail
    method: GET
    data_selector: records
- name: lineAvailability
  endpoint:
    path: /lineAvailability
    method: GET
    data_selector: lineAvailability
- name: marketSelection
  endpoint:
    path: /v1/marketSelections
    method: GET
- name: marketSelection
  endpoint:
    path: /marketSelections/{marketSelectionId}
    method: GET
- name: market_selection_metadata
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: marketSelection
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: event
    params: {}
- name: events
  endpoint:
    path: /reference/events-list
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: data
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: data
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: event
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /reference/events-list
    method: GET
    data_selector: events
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: event
    params: {}
- name: market_selection_metadata
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: metadata
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: data
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: event
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: marketSelection
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: marketSelection
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: marketSelection
- name: marketSelectionMetadata
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: data
- name: bestPrice
  endpoint:
    path: /reference/bestPrice
    method: GET
    data_selector: bestPrice
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
    params: {}
- name: marketSelections_metadata
  endpoint:
    path: /v1/marketSelections/{id}/metadata
    method: GET
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: marketSelection
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
    params: {}
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
    params: {}
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-metadata
    method: GET
    data_selector: records
- name: marketSelection historicData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: historicData
    params: {}
- name: market_selection_metadata
  endpoint:
    path: /v1/marketSelections/{id}/metadata
    method: GET
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: historicData
- name: market_selection_historic_data
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: data
    params: {}
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: historicData
    params: {}
- name: market_selection_historic_data
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
    params: {}
- name: historicData
  endpoint:
    path: /v1/marketSelections/{id}/historicData
    method: GET
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
    params: {}
- name: prices
  endpoint:
    path: /reference/prices-list
    method: GET
    data_selector: prices
    params: {}
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
- name: prices
  endpoint:
    path: /prices
    method: GET
- name: marketSelection_historic_data
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: event
    params: {}
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: gameStats
    params: {}
- name: marketOffer
  endpoint:
    path: /reference/marketselection-list-copy
    method: GET
    data_selector: marketOffer
- name: marketOfferDetail
  endpoint:
    path: /reference/marketselection-detail-copy
    method: GET
    data_selector: marketOffer
- name: marketSelectionHistoricData
  endpoint:
    path: /reference/marketselection-historicdata
    method: GET
    data_selector: historicData
    params: {}
- name: marketOffer
  endpoint:
    path: /marketOffers
    method: GET
- name: historicData
  endpoint:
    path: /v1/marketSelections/{id}/historicData
    method: GET
- name: marketOffer
  endpoint:
    path: /marketOffers/{marketOfferId}
    method: GET
- name: prices
  endpoint:
    path: /reference/prices-list
    method: GET
    data_selector: prices
- name: market
  endpoint:
    path: /reference/marketselection-list-copy
    method: GET
    data_selector: market
    params: {}
- name: market_detail
  endpoint:
    path: /reference/marketselection-detail-copy
    method: GET
    data_selector: market_detail
    params: {}
- name: prices
  endpoint:
    path: /prices
    method: GET
- name: market
  endpoint:
    path: /markets
    method: GET
- name: marketOffer
  endpoint:
    path: /reference/marketselection-list-copy
    method: GET
    data_selector: marketOffer
- name: marketOfferDetail
  endpoint:
    path: /reference/marketselection-detail-copy
    method: GET
    data_selector: marketOffer
- name: marketOffer
  endpoint:
    path: /marketOffers
    method: GET
- name: market
  endpoint:
    path: /v1/markets/{marketId}
    method: GET
- name: marketOffer
  endpoint:
    path: /marketOffers/{marketOfferId}
    method: GET
- name: segment
  endpoint:
    path: /segment-list
    method: GET
    data_selector: segments
- name: segment_detail
  endpoint:
    path: /segment-detail
    method: GET
    data_selector: segment
- name: market
  endpoint:
    path: /reference/marketselection-list-copy
    method: GET
    data_selector: records
- name: market_detail
  endpoint:
    path: /reference/marketselection-detail-copy
    method: GET
    data_selector: record
- name: segment
  endpoint:
    path: /segments
    method: GET
- name: market
  endpoint:
    path: /markets
    method: GET
- name: segment
  endpoint:
    path: /segments/{segmentsID}
    method: GET
- name: market
  endpoint:
    path: /markets/{marketId}
    method: GET
- name: metric
  endpoint:
    path: /v1/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: segment
  endpoint:
    path: /segment-list
    method: GET
    data_selector: segments
    params: {}
- name: segment_detail
  endpoint:
    path: /segment-detail
    method: GET
    data_selector: segment
    params: {}
- name: metric_detail
  endpoint:
    path: /v1/metrics/{metricId}
    method: GET
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: response
- name: sport
  endpoint:
    path: /sport-list
    method: GET
    data_selector: records
- name: sports
  endpoint:
    path: /v1/sports
    method: GET
- name: segment
  endpoint:
    path: /v1/segments/{segmentsID}
    method: GET
- name: sport
  endpoint:
    path: /v1/sports/{sportID}
    method: GET
- name: metric
  endpoint:
    path: /metric-list
    method: GET
    data_selector: metrics
- name: metric_detail
  endpoint:
    path: /metric-detail
    method: GET
    data_selector: metric
- name: metric
  endpoint:
    path: /v1/metrics
    method: GET
- name: league
  endpoint:
    path: /reference/league-list
    method: GET
    data_selector: leagues
- name: league_detail
  endpoint:
    path: /reference/league-detail
    method: GET
    data_selector: league
- name: leagues
  endpoint:
    path: /leagues
    method: GET
    data_selector: response
    params: {}
- name: metric
  endpoint:
    path: /metrics/{metricId}
    method: GET
    data_selector: data
    params: {}
- name: league
  endpoint:
    path: /v1/leagues/{leagueId}
    method: GET
- name: sport
  endpoint:
    path: /sport-list
    method: GET
    data_selector: sports
    params: {}
- name: team
  endpoint:
    path: /team-list
    method: GET
    data_selector: teams
- name: sport
  endpoint:
    path: /v1/sports
    method: GET
    data_selector: ''
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: records
    params: {}
- name: sport
  endpoint:
    path: /v1/sports/{sportID}
    method: GET
- name: team
  endpoint:
    path: /v1/teams/{teamID}
    method: GET
- name: trades
  endpoint:
    path: /reference/trades-by-team
    method: GET
    data_selector: trades
    params: {}
- name: league
  endpoint:
    path: /reference/league-list
    method: GET
    data_selector: leagues
- name: league_detail
  endpoint:
    path: /reference/league-detail
    method: GET
    data_selector: league
- name: trades
  endpoint:
    path: /v1/trades/{team_id}
    method: GET
    data_selector: players
    params:
      limit: '5'
      injuries: 'true'
- name: league
  endpoint:
    path: /leagues
    method: GET
- name: trades
  endpoint:
    path: /v1/trades/{id}
    method: GET
- name: league
  endpoint:
    path: /v1/leagues/{leagueId}
    method: GET
- name: teams_aggregate_stats_list
  endpoint:
    path: /reference/teams-aggregatestats-list
    method: GET
    data_selector: null
    params: {}
- name: team_aggregate_stats_detail
  endpoint:
    path: /reference/team-aggregatestats-detail
    method: GET
    data_selector: null
    params: {}
- name: team
  endpoint:
    path: /reference/team-list
    method: GET
    data_selector: teams
- name: teams aggregate stats list
  endpoint:
    path: /reference/teams-aggregatestats-list
    method: GET
- name: team aggregate stats detail
  endpoint:
    path: /reference/team-aggregatestats-detail
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
- name: team_aggregate_statistics
  endpoint:
    path: /v1/teams/aggregateStats
    method: GET
- name: team
  endpoint:
    path: /teams/{teamID}
    method: GET
- name: team_detail_aggregate_statistics
  endpoint:
    path: /v1/teams/{id}/aggregateStats
    method: GET
- name: trades
  endpoint:
    path: /reference/trades-by-team
    method: GET
    data_selector: trades
- name: player
  endpoint:
    path: /player-list
    method: GET
    data_selector: records
- name: player_detail
  endpoint:
    path: /player-detail
    method: GET
    data_selector: records
- name: trades
  endpoint:
    path: /trades/TEAM_{team_id}
    method: GET
    data_selector: players
    params:
      injuries: 'true'
- name: player
  endpoint:
    path: /players
    method: GET
- name: trades
  endpoint:
    path: /v1/trades/{id}
    method: GET
- name: player
  endpoint:
    path: /v1/players/{playerID}
    method: GET
    data_selector: ''
- name: teams_aggregate_stats_list
  endpoint:
    path: /reference/teams-aggregatestats-list
    method: GET
    data_selector: records
- name: team_aggregate_stats_detail
  endpoint:
    path: /reference/team-aggregatestats-detail
    method: GET
    data_selector: records
- name: player_aggregate_stats_detail
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
    data_selector: player_stats
- name: teams_aggregate_stats
  endpoint:
    path: /reference/teams-aggregatestats-list
    method: GET
    data_selector: records
- name: team_aggregate_stats_detail
  endpoint:
    path: /reference/team-aggregatestats-detail
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /reference/team-list-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-list-w-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
    data_selector: records
- name: team_aggregate_statistics
  endpoint:
    path: /v1/teams/aggregateStats
    method: GET
    data_selector: response
- name: team
  endpoint:
    path: /reference/team-list-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-list-w-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
    data_selector: player
    params: {}
- name: team_detail_aggregate_statistics
  endpoint:
    path: /v1/teams/{id}/aggregateStats
    method: GET
- name: currentTeams
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
    data_selector: currentTeams
- name: player
  endpoint:
    path: /player-list
    method: GET
    data_selector: records
- name: player_detail
  endpoint:
    path: /player-detail
    method: GET
    data_selector: records
- name: seasonStats
  endpoint:
    path: /seasonStats
    method: GET
    data_selector: seasonStats
    params: {}
- name: player
  endpoint:
    path: /players
    method: GET
- name: player_aggregate_statistics
  endpoint:
    path: /v1/players/aggregateStats
    method: GET
- name: player
  endpoint:
    path: /v1/players/{playerID}
    method: GET
- name: player_detail_aggregate_statistics
  endpoint:
    path: /v1/players/{id}/aggregateStats
    method: GET
- name: team
  endpoint:
    path: /reference/team-list-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-list-w-aggregate-statistics
    method: GET
- name: player_historic_data
  endpoint:
    path: /reference/player-historicdata-detail
    method: GET
    data_selector: events
    params: {}
- name: player_aggregate_stats_detail
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
- name: player_historic_data
  endpoint:
    path: /reference/player-historicdata-detail
    method: GET
    data_selector: events
- name: team
  endpoint:
    path: /reference/team-list-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-list-w-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
    data_selector: player
    params: {}
- name: historicData
  endpoint:
    path: /v1/players/{id}/historicData
    method: GET
- name: injuries
  endpoint:
    path: /reference/injuries-list
    method: GET
    data_selector: '[]'
- name: team
  endpoint:
    path: /reference/team-list-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-list-w-aggregate-statistics
    method: GET
- name: player
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
    data_selector: player
- name: injuries
  endpoint:
    path: /reference/injuries-list
    method: GET
    data_selector: injuries
- name: injuries
  endpoint:
    path: /v1/injuries
    method: GET
- name: bettor
  endpoint:
    path: /reference/bettor
    method: GET
    data_selector: data
    params: {}
- name: bettor
  endpoint:
    path: /reference/bettor-list
    method: GET
    data_selector: records
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccounts-list
    method: GET
    data_selector: records
- name: betSlip
  endpoint:
    path: /reference/betslip-list
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /reference/events-list
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /reference/team-list
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /reference/player-list
    method: GET
    data_selector: records
- name: currentTeams
  endpoint:
    path: /reference/player-aggregatestats-detail
    method: GET
    data_selector: currentTeams
- name: seasonStats
  endpoint:
    path: /seasonStats
    method: GET
    data_selector: seasonStats
    params: {}
- name: bettorAccount
  endpoint:
    path: /bettoraccount
    method: GET
    data_selector: data
- name: refreshResponse
  endpoint:
    path: /refresh-response
    method: GET
    data_selector: data
- name: bettorAccount
  endpoint:
    path: /bettoraccount/inaccessible
    method: GET
    data_selector: data
    params: {}
- name: player_aggregate_statistics
  endpoint:
    path: /v1/players/aggregateStats
    method: GET
    data_selector: records
- name: refresh_response
  endpoint:
    path: /reference/refreshresponse-list
    method: GET
    data_selector: data
    params: {}
- name: refreshResponse
  endpoint:
    path: /subscribe
    method: POST
- name: player_detail_aggregate_statistics
  endpoint:
    path: /v1/players/{id}/aggregateStats
    method: GET
- name: player_historic_data
  endpoint:
    path: /reference/player-historicdata-detail
    method: GET
    data_selector: events
    params: {}
- name: subscribe
  endpoint:
    path: /v1/hooks/
    method: POST
- name: logs
  endpoint:
    path: /reference/logs
    method: GET
    data_selector: logs
- name: player_historic_data
  endpoint:
    path: /reference/player-historicdata-detail
    method: GET
    data_selector: events
- name: logs
  endpoint:
    path: /v1/hooks/logs
    method: GET
- name: historicData
  endpoint:
    path: /v1/players/{id}/historicData
    method: GET
    data_selector: historicData
    params: {}
- name: injuries
  endpoint:
    path: /reference/injuries-list
    method: GET
    data_selector: '[].player'
    params: {}
- name: injuries
  endpoint:
    path: /reference/injuries-list
    method: GET
    data_selector: injuries
- name: injuries
  endpoint:
    path: /v1/injuries
    method: GET
- name: refresh by bettorAccount
  endpoint:
    path: /refresh-bettoraccount
    method: POST
- name: refresh by bettor
  endpoint:
    path: /refresh-bettor
    method: POST
- name: bettor
  endpoint:
    path: /reference/bettor
    method: GET
    data_selector: data
    params: {}
- name: bettor detail
  endpoint:
    path: /reference/bettor-detail
    method: GET
    data_selector: data
    params: {}
- name: bettorAccount
  endpoint:
    path: /bettoraccount.verified
    method: GET
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccount
    method: GET
    data_selector: data
    params: {}
- name: refreshResponse
  endpoint:
    path: /reference/refresh-response
    method: GET
    data_selector: data
    params: {}
- name: bettorAccount
  endpoint:
    path: /bettoraccounts
    method: GET
    data_selector: data
- name: refresh_response
  endpoint:
    path: /reference/refresh-response
    method: GET
    data_selector: data
    params: {}
- name: subscribe
  endpoint:
    path: /subscribe
    method: POST
- name: bookRegion
  endpoint:
    path: /reference/bookregion-list
    method: GET
    data_selector: records
    params: {}
- name: subscribe
  endpoint:
    path: /v1/hooks/
    method: POST
- name: book
  endpoint:
    path: /reference/book-list
    method: GET
    data_selector: books
- name: logs
  endpoint:
    path: /reference/logs
    method: GET
    data_selector: logs
    params: {}
- name: logs
  endpoint:
    path: /v1/hooks/logs
    method: GET
- name: refresh by bettorAccount
  endpoint:
    path: /refresh-bettoraccount
    method: POST
- name: refresh by bettor
  endpoint:
    path: /refresh-bettor
    method: POST
- name: book
  endpoint:
    path: /reference/book
    method: GET
- name: article
  endpoint:
    path: /reference/article
    method: GET
- name: bookregion
  endpoint:
    path: /reference/bookregion
    method: GET
- name: bettor
  endpoint:
    path: /reference/bettor
    method: GET
- name: context
  endpoint:
    path: /reference/context
    method: POST
- name: bettoraccount
  endpoint:
    path: /reference/bettoraccount
    method: GET
- name: refreshresponse
  endpoint:
    path: /reference/refresh-response
    method: GET
- name: betslip
  endpoint:
    path: /reference/betslip
    method: GET
- name: event
  endpoint:
    path: /reference/event
    method: GET
- name: marketselection
  endpoint:
    path: /reference/marketselection
    method: GET
- name: prices
  endpoint:
    path: /reference/prices
    method: GET
- name: marketoffer
  endpoint:
    path: /reference/marketoffer
    method: GET
- name: market
  endpoint:
    path: /reference/market
    method: GET
- name: segment
  endpoint:
    path: /reference/segment
    method: GET
- name: metric
  endpoint:
    path: /reference/metric
    method: GET
- name: sport
  endpoint:
    path: /reference/sport
    method: GET
- name: league
  endpoint:
    path: /reference/league
    method: GET
- name: team
  endpoint:
    path: /reference/team
    method: GET
- name: player
  endpoint:
    path: /reference/player
    method: GET
- name: injuries
  endpoint:
    path: /reference/injuries
    method: GET
- name: bookRegions
  endpoint:
    path: /reference/bookregion-list
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /reference/book-list
    method: GET
    data_selector: records
    params: {}
- name: article
  endpoint:
    path: /reference/article-list
    method: GET
    data_selector: records
    params: {}
- name: bookRegion
  endpoint:
    path: /reference/bookregion-list
    method: GET
    data_selector: records
    params: {}
- name: bettor
  endpoint:
    path: /reference/bettor-list
    method: GET
    data_selector: records
    params: {}
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccounts-list
    method: GET
    data_selector: records
    params: {}
- name: refreshResponse
  endpoint:
    path: /reference/refreshresponse-list
    method: GET
    data_selector: records
    params: {}
- name: betSlip
  endpoint:
    path: /reference/betslip-list
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /reference/events-list
    method: GET
    data_selector: records
    params: {}
- name: marketSelection
  endpoint:
    path: /reference/marketselection-list
    method: GET
    data_selector: records
    params: {}
- name: prices
  endpoint:
    path: /reference/prices-list
    method: GET
    data_selector: records
    params: {}
- name: marketOffer
  endpoint:
    path: /reference/marketoffer-list
    method: GET
    data_selector: records
    params: {}
- name: market
  endpoint:
    path: /reference/market-list
    method: GET
    data_selector: records
    params: {}
- name: segment
  endpoint:
    path: /reference/segment-list
    method: GET
    data_selector: records
    params: {}
- name: metric
  endpoint:
    path: /reference/metric-list
    method: GET
    data_selector: records
    params: {}
- name: sport
  endpoint:
    path: /reference/sport-list
    method: GET
    data_selector: records
    params: {}
- name: league
  endpoint:
    path: /reference/league-list
    method: GET
    data_selector: records
    params: {}
- name: team
  endpoint:
    path: /reference/team-list
    method: GET
    data_selector: records
    params: {}
- name: player
  endpoint:
    path: /reference/player-list
    method: GET
    data_selector: records
    params: {}
- name: injuries
  endpoint:
    path: /reference/injuries-list
    method: GET
    data_selector: records
    params: {}
- name: book
  endpoint:
    path: /reference/book
    method: GET
- name: article
  endpoint:
    path: /reference/article
    method: GET
- name: bookRegion
  endpoint:
    path: /reference/bookregion
    method: GET
- name: bettor
  endpoint:
    path: /reference/bettor
    method: GET
- name: context
  endpoint:
    path: /reference/context
    method: POST
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccount
    method: GET
- name: refreshResponse
  endpoint:
    path: /reference/refresh-response
    method: GET
- name: betSlip
  endpoint:
    path: /reference/betslip
    method: GET
- name: event
  endpoint:
    path: /reference/event
    method: GET
- name: marketSelection
  endpoint:
    path: /reference/marketselection
    method: GET
- name: price
  endpoint:
    path: /reference/prices
    method: GET
- name: marketOffer
  endpoint:
    path: /reference/marketoffer
    method: GET
- name: market
  endpoint:
    path: /reference/market
    method: GET
- name: segment
  endpoint:
    path: /reference/segment
    method: GET
- name: metric
  endpoint:
    path: /reference/metric
    method: GET
- name: sport
  endpoint:
    path: /reference/sport
    method: GET
- name: league
  endpoint:
    path: /reference/league
    method: GET
- name: team
  endpoint:
    path: /reference/team
    method: GET
- name: player
  endpoint:
    path: /reference/player
    method: GET
- name: injuries
  endpoint:
    path: /reference/injuries
    method: GET
- name: bettor
  endpoint:
    path: /v1/bettors/<internalID>/refresh
    method: POST
- name: bettorAccount
  endpoint:
    path: /v1/bettorAccounts/<BACT_ID>/refresh
    method: POST
- name: mobile_auth
  endpoint:
    path: /v1/mobile/auth
    method: POST
    data_selector: token
    params: {}
- name: refresh_bettor
  endpoint:
    path: /v1/bettors/<internalID>/refresh
    method: POST
    data_selector: ''
    params: {}
- name: refresh_bettor_id
  endpoint:
    path: /v1/bettors/<BTTR_ID>/refresh
    method: POST
    data_selector: ''
    params: {}
- name: refresh_bettor_account_id
  endpoint:
    path: /v1/bettorAccounts/<BACT_ID>/refresh
    method: POST
    data_selector: ''
    params: {}
- name: mobile_auth
  endpoint:
    path: /v1/mobile/auth
    method: POST
    data_selector: token
    params: {}
- name: context
  endpoint:
    path: /v1/context
    method: POST
    data_selector: cid
    params: {}
- name: refresh
  endpoint:
    path: /v1/bettors/<internalID>/refresh
    method: POST
    data_selector: data
    params: {}
- name: bettor
  endpoint:
    path: /reference/bettor-list
    method: GET
    data_selector: records
- name: bettorAccount
  endpoint:
    path: /reference/bettoraccounts-list
    method: GET
    data_selector: records
- name: refreshResponse
  endpoint:
    path: /reference/refreshresponse-list
    method: GET
    data_selector: records
- name: betSlip
  endpoint:
    path: /reference/betslip-list
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /reference/events-list
    method: GET
    data_selector: records
- name: marketSelection
  endpoint:
    path: /reference/marketselection-list
    method: GET
    data_selector: records
- name: price
  endpoint:
    path: /reference/prices-list
    method: GET
    data_selector: records
- name: marketOffer
  endpoint:
    path: /reference/marketoffer-list
    method: GET
    data_selector: records
- name: market
  endpoint:
    path: /reference/market-list
    method: GET
    data_selector: records
- name: segment
  endpoint:
    path: /reference/segment-list
    method: GET
    data_selector: records
- name: metric
  endpoint:
    path: /reference/metric-list
    method: GET
    data_selector: records
- name: sport
  endpoint:
    path: /reference/sport-list
    method: GET
    data_selector: records
- name: league
  endpoint:
    path: /reference/league-list
    method: GET
    data_selector: records
- name: team
  endpoint:
    path: /reference/team-list
    method: GET
    data_selector: records
- name: player
  endpoint:
    path: /reference/player-list
    method: GET
    data_selector: records
- name: injuries
  endpoint:
    path: /reference/injuries-list
    method: GET
    data_selector: records
- name: bettor
  endpoint:
    path: /v1/bettors/<internalID>/refresh
    method: POST
- name: bettorAccount
  endpoint:
    path: /v1/bettorAccounts/<BACT_ID>/refresh
    method: POST
- name: mobile_auth
  endpoint:
    path: /v1/mobile/auth
    method: POST
    data_selector: token
    params: {}
- name: bettor_refresh
  endpoint:
    path: /v1/bettors/<internalID>/refresh
    method: POST
    data_selector: ''
    params: {}
- name: bettor_refresh_by_id
  endpoint:
    path: /v1/bettors/<BTTR_ID>/refresh
    method: POST
    data_selector: ''
    params: {}
- name: bettor_account_refresh
  endpoint:
    path: /v1/bettorAccounts/<BACT_ID>/refresh
    method: POST
    data_selector: ''
    params: {}
- name: mobile_auth
  endpoint:
    path: /v1/mobile/auth
    method: POST
    data_selector: token
- name: context
  endpoint:
    path: /v1/context
    method: POST
    data_selector: cid
- name: refresh
  endpoint:
    path: /v1/bettors/<internalID>/refresh
    method: POST
    data_selector: response
notes:
- Be sure to enable the Native SDK toggle under Settings->Account in the SharpSports
  dashboard to enable SDK Required books in the Linking UI.
- iOS deployment target must be >=13.0
- Some sportsbooks may have limitations on how far back bets can be synced.
- Certain SportsBook accounts require 2FA codes to be entered on every refresh.
- When the 2FA toggle is set to off, any BettorAccount that requires 2FA will return
  an error when being linked or refreshed.
- Users can manually refresh, pause, remove and see the status of linked accounts.
- Market data is available for various football leagues.
- Sandbox mode requires use of private and public api keys
- Accounts with access=false will not count towards billable usage.
- Bet slips are pulled from a bettor's sportsbook account on refresh.
- SharpSports utilizes webhooks to let users know when certain async events have taken
  place.
- Public API Key required for authorization
- The abbreviation of the desired league i.e. 'NFL'
- The date the article was generated in the format YYYY-MM-DD
- Public API Key required for authorization.
- Use either the internalId or SharpSports assigned bettorId for bettor detail.
- Requires setup of Private API Key
- Inquire about a betPlace subscription for access to this endpoint
- To allow user to link SDK Required books, generate an auth token (see security section).
  Utilize a random string in sandbox mode.
- Requires setup of API keys for access.
- Include bettorAccount metadata in response
- Filters metadata to betslips placed after this datetime - %Y-%m-%dT%H:%M:%S OR %Y-%m-%d
- Filters metadata to betslips placed before this datetime - %Y-%m-%dT%H:%M:%S OR
  %Y-%m-%d
- Uses Public API Key for authorization
- once access is set to false, it can only be set to true through a new linking session
- Rate limiting is enforced on API calls
- A refresh is an asynchronous process.
- If a bet was graded automatically, then autograde will be true.
- Requires Private API Key for authorization
- Authorization requires a Private API Key
- Statistical summary of completed bet slips
- Statistics are aggregated across all leagues, books, and bet types for the specified
  date range.
- Overall betting statistics aggregated across all leagues, books, and bet types for
  the specified date range.
- A MarketSelection is an object representing a wager/selection for a specific betting
  market.
- Event details for the game where this market selection applies.
- Provides metadata for market selections and related events.
- Historical performance statistics are available for players against specific opponents.
- Event details include home and away team statistics.
- Log in to use your API keys
- Includes best pricing information for market selections.
- Public API Key is required for authorization
- Public API Key
- Public API Key required
- Public API Key required for access
- This endpoint returns players who have joined or left a specific team within the
  last 30 days, not traditional trade transaction records.
- In order to use our API it is essential that you store the bettorID next to your
  internalId that you use to uniquely identify this bettor in your database.
- Webhook fires whenever a new bettorAccount is verified in the BookLink UI
- This event will fire whenever a bettorAccount becomes unverified.
- A BettorAccount can become unverified when a Refresh is unsuccessful for a variety
  of reasons.
- This event fires when access has been revoked from a bettoraccount either through
  the account management widget or the access endpoint.
- Requires API key for access
- Whenever the bets for a specific bettorAccount are refreshed we fire a webhook event.
- Ensure requests are spaced appropriately, and add handling for the rate-limited
  response to all high-traffic endpoints.
- A refresh is limited to one per 60 seconds on each bettorAccount.
- Refreshes can also take up to 2 minutes.
- SharpSports takes security very seriously and has a best-in-class security infrastructure
  that includes encryption of all sensitive data in-transit and at-rest.
- API keys are meant for use in the client. They can only be used for POST requests
  and are only viable when made with a valid internalId. Be sure to keep your internalIds
  secure.
- Only use your private key in your backend. All get requests that return data must
  be made with a private key.
- A BettorAccount can become unverified when a Refresh is unsuccessful for a variety
  of reasons including a password change, a sportsbook Terms of Service Update, or
  a sportsbook identity verification request.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses Private API Key for authorization
- Certain Books require an SDK implementation path to sync bets.
- Use the SDK Supported query param on the book list endpoint to stay up to date on
  supported SDKs and platforms.
- Certain endpoints have the potential to return large datasets and are throttled
  more aggressively than other endpoints.
- Only use your private key in your backend.
- Since the sandbox key can only be used with test data, the same key can be used
  for public and private API calls.
- Initialization of the SharpSports object no longer requires your private API key.
  This parameter is replaced by a bettor specific authentication token for enhanced
  security.
- Version 3.2.0 contains a required alert message that appears when the Refresh method
  is called for particular books.
- Ensure to generate a Personal Access Token with the permission scope 'read:packages'.
- The call to '/v1/mobile/auth' should be made from your own server to keep the private
  API key secure.
- Be sure to enable the `Native SDK` toggle under Settings->Account in the SharpSports
  dashboard to enable `SDK Required` books in the Linking UI.
- Use the auth tokens endpoint to generate an extension authentication token.
- Include the sharpSportsExtensionVersion in requests even if it is not available.
- Ensure to create API endpoint in your backend to retrieve a mobileAuthToken.
- mobileAuthToken is unique by internalId but does not have a time to live.
- The authentication token can be re-used and is the same as those generated for the
  mobile packages if you are integrating on multiple platforms.
errors:
- 'Unauthorized: Recheck API key'
- '404: Not Found'
- '200: OK'
- '400: Bad Request'
- '400: Bad Request - Check for required parameters'
- '401: Unauthorized - Ensure your API key is correct'
- '400'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid API key'
- '401: Unauthorized - Check API key'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 401 refresh unsuccessful - handled error
- 403 refresh not attempted - access for this bettorAccount has been revoked
- 406 refresh unsuccessful - incorrect OTP
- 424 refresh not attempted - book down for maintenance
- 429 refresh not attempted - rate limiting
- 500 refresh unsuccessful - unhandled error
- 400 Bad Request
- '401 Unauthorized: Check API key or token'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '429: Request was throttled.'
- 429 Rate Limiting - Refresh for a given bettorAccount must be at least 1 minute
  apart
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429: Rate Limiting - Refresh for a given bettorAccount must be at least 1 minute
  apart'
- 'sdkRequired=true: Prompt users to download the SharpSports extension.'
- '401 Unauthorized: Ensure your private API key is valid.'
auth_info:
  mentioned_objects:
  - bettor
  - book
  - bookRegion
  - latestRefreshResponse
  - Public API Key
  - OauthToken
  - AuthProvider
  - NamedCredential
  - mobileAuthToken
client:
  base_url: https://api.sharpsports.io
  auth:
    type: Token
    location: header
    header_name: Authorization
source_metadata: null
