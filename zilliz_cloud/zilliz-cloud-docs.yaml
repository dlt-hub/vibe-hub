resources:
- name: custom_setup
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: custom_setup
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params:
      filter: id in [5, 6, 7, 8, 9]
- name: drop_collection
  endpoint:
    path: /collections/drop
    method: POST
    data_selector: data
    params: {}
- name: delete_entities
  endpoint:
    path: /entities/delete
    method: POST
    data_selector: data
    params: {}
- name: custom_setup
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: custom_setup
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params:
      filter: id in [5, 6, 7, 8, 9]
- name: custom_setup_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collection_name: custom_setup
      filter: 4 < id < 8
      limit: 3
- name: custom_setup
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: drop_collection
  endpoint:
    path: /v2/vectordb/collections/drop
    method: POST
    data_selector: data
    params: {}
- name: delete_entities
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params: {}
- name: custom_setup_delete_by_filter
  endpoint:
    path: /entities/delete
    method: POST
    data_selector: data
    params:
      filter: id in [5, 6, 7, 8, 9]
- name: custom_setup_delete_by_ids
  endpoint:
    path: /entities/delete
    method: POST
    data_selector: data
    params:
      ids:
      - 0
      - 1
      - 2
      - 3
      - 4
- name: custom_setup_search_with_filter
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      filter: 4 < id < 8
      limit: 3
- name: custom_setup_search_with_custom_fields
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      filter: $meta["color"] like "red%"
      limit: 3
      output_fields:
      - color
- name: custom_setup
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: custom_setup
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params:
      filter: id in [5, 6, 7, 8, 9]
- name: custom_setup
  endpoint:
    path: /v2/vectordb/collections/drop
    method: POST
    data_selector: data
    params: {}
- name: customized_setup
  endpoint:
    path: /v2/vectordb/collections/drop
    method: POST
    data_selector: data
    params: {}
- name: delete_entities_by_filter
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params:
      filter: id in [5, 6, 7, 8, 9]
- name: delete_entities_by_ids
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params:
      ids:
      - 0
      - 1
      - 2
      - 3
      - 4
- name: custom_setup
  endpoint:
    path: /v2/vectordb/collections/drop
    method: POST
    data_selector: data
    params: {}
- name: medium_articles
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params: {}
- name: list_projects
  endpoint:
    path: /list_projects
    method: GET
    data_selector: projects
- name: list_clusters
  endpoint:
    path: /list_clusters
    method: GET
    data_selector: clusters
- name: create_free_cluster
  endpoint:
    path: /create_free_cluster
    method: POST
    data_selector: cluster
- name: describe_cluster
  endpoint:
    path: /describe_cluster
    method: GET
    data_selector: cluster_info
- name: suspend_cluster
  endpoint:
    path: /suspend_cluster
    method: POST
    data_selector: suspend_status
- name: resume_cluster
  endpoint:
    path: /resume_cluster
    method: POST
    data_selector: resume_status
- name: query_cluster_metrics
  endpoint:
    path: /query_cluster_metrics
    method: GET
    data_selector: metrics
- name: list_databases
  endpoint:
    path: /list_databases
    method: GET
    data_selector: databases
- name: list_collections
  endpoint:
    path: /list_collections
    method: GET
    data_selector: collections
- name: create_collection
  endpoint:
    path: /create_collection
    method: POST
    data_selector: collection
- name: describe_collection
  endpoint:
    path: /describe_collection
    method: GET
    data_selector: collection_info
- name: insert_entities
  endpoint:
    path: /insert_entities
    method: POST
    data_selector: insert_status
- name: delete_entities
  endpoint:
    path: /delete_entities
    method: DELETE
    data_selector: delete_status
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: search_results
- name: query
  endpoint:
    path: /query
    method: POST
    data_selector: query_results
- name: hybrid_search
  endpoint:
    path: /hybrid_search
    method: POST
    data_selector: hybrid_results
- name: list_projects
  endpoint:
    path: /list_projects
    method: GET
    data_selector: projects
- name: list_clusters
  endpoint:
    path: /list_clusters
    method: GET
    data_selector: clusters
- name: create_free_cluster
  endpoint:
    path: /create_free_cluster
    method: POST
    data_selector: cluster
- name: describe_cluster
  endpoint:
    path: /describe_cluster
    method: GET
    data_selector: cluster_info
- name: suspend_cluster
  endpoint:
    path: /suspend_cluster
    method: POST
    data_selector: suspend_status
- name: resume_cluster
  endpoint:
    path: /resume_cluster
    method: POST
    data_selector: resume_status
- name: query_cluster_metrics
  endpoint:
    path: /query_cluster_metrics
    method: GET
    data_selector: metrics
- name: list_databases
  endpoint:
    path: /list_databases
    method: GET
    data_selector: databases
- name: list_collections
  endpoint:
    path: /list_collections
    method: GET
    data_selector: collections
- name: create_collection
  endpoint:
    path: /create_collection
    method: POST
    data_selector: collection
- name: describe_collection
  endpoint:
    path: /describe_collection
    method: GET
    data_selector: collection_info
- name: insert_entities
  endpoint:
    path: /insert_entities
    method: POST
    data_selector: insert_status
- name: delete_entities
  endpoint:
    path: /delete_entities
    method: DELETE
    data_selector: delete_status
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: search_results
- name: query
  endpoint:
    path: /query
    method: GET
    data_selector: query_results
- name: hybrid_search
  endpoint:
    path: /hybrid_search
    method: GET
    data_selector: hybrid_results
- name: collection
  endpoint:
    path: /docs/byoc/collection
    method: GET
- name: Insert Entities
  endpoint:
    path: /docs/byoc/insert-entities
    method: GET
- name: Upsert Entities
  endpoint:
    path: /docs/byoc/upsert-entities
    method: GET
- name: Delete Entities
  endpoint:
    path: /docs/byoc/delete-entities
    method: GET
- name: data_import
  endpoint:
    path: /docs/byoc/data-import
    method: GET
- name: data_export
  endpoint:
    path: /docs/byoc/data-export
    method: GET
- name: create_stage
  endpoint:
    path: /v2/stages/create
    method: POST
    data_selector: data
    params: {}
- name: delete_stage
  endpoint:
    path: /v2/stages/{stage_name}
    method: DELETE
    data_selector: data
    params: {}
- name: stage_file_manager
  endpoint:
    path: /stage_file_manager
    method: POST
    data_selector: results
    params:
      cloud_endpoint: https://api.cloud.zilliz.com
      api_key: YOUR_API_KEY
      stage_name: my_stage
- name: create_stage
  endpoint:
    path: /v2/stages/create
    method: POST
    data_selector: stage
    params: {}
- name: delete_stage
  endpoint:
    path: /v2/stages/{stageName}
    method: DELETE
    data_selector: null
    params: {}
- name: stage_file_manager
  endpoint:
    path: /stage-file-manager
    method: POST
    data_selector: result
    params:
      cloud_endpoint: https://api.cloud.zilliz.com
      api_key: YOUR_API_KEY
      stage_name: my_stage
- name: upload_files
  endpoint:
    path: /upload-files
    method: POST
    data_selector: result
    params:
      source_file_path: /path/to/your/local/data/file
      target_stage_path: data/
- name: create_cluster
  endpoint:
    path: /v2/clusters/createDedicated
    method: POST
    data_selector: data
    params: {}
- name: create_cluster
  endpoint:
    path: /v2/clusters/createDedicated
    method: POST
    data_selector: data
    params: {}
- name: modify_cluster
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/modify
    method: POST
    data_selector: data
    params: {}
- name: modify_replica
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modifyReplica
    method: POST
    data_selector: null
    params:
      replica: '2'
- name: modify_cluster
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/modify
    method: POST
    data_selector: data
    params: {}
- name: modify_replica
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modifyReplica
    method: POST
    data_selector: null
    params:
      replica: '2'
- name: drop_database
  endpoint:
    path: /v2/vectordb/databases/drop
    method: POST
    data_selector: null
    params: {}
- name: drop_database
  endpoint:
    path: /v2/vectordb/databases/drop
    method: POST
    data_selector: null
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: alerts
  endpoint:
    path: /alerts
    method: GET
- name: notification_channel
  endpoint:
    path: /api/v1/notification_channels
    method: GET
    data_selector: channels
- name: notification_channels
  endpoint:
    path: /api/notification_channels
    method: POST
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/create
    method: POST
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /docs/byoc/create-snapshot
    method: GET
- name: schedule_automatic_backups
  endpoint:
    path: /docs/byoc/schedule-automatic-backups
    method: GET
- name: restore_from_backup_files
  endpoint:
    path: /docs/byoc/restore-from-snapshot
    method: GET
- name: manage_backup_files
  endpoint:
    path: /docs/byoc/manage-backup-files
    method: GET
- name: backup_policy
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/policy
    method: POST
    data_selector: data
    params: {}
- name: restore_collection
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/${BACKUP_ID}/restoreCollection
    method: POST
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/create
    method: POST
    data_selector: data
- name: backup_policy
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/policy
    method: POST
    data_selector: data
- name: delete_backup
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/${BACKUP_ID}
    method: DELETE
    data_selector: data
    params: {}
- name: restore_collection
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/${BACKUP_ID}/restoreCollection
    method: POST
    data_selector: data
    params: {}
- name: delete_backup
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/${BACKUP_ID}
    method: DELETE
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /reference/restful/describe-job-v2
    method: GET
    data_selector: job_details
    params: {}
- name: organizations_and_projects_limits
  endpoint:
    path: /organizations/projects/limits
    method: GET
    data_selector: limits
    params: {}
- name: collections_limits
  endpoint:
    path: /collections/limits
    method: GET
    data_selector: limits
    params: {}
- name: shards_limits
  endpoint:
    path: /shards/limits
    method: GET
    data_selector: limits
    params: {}
- name: rate_limits
  endpoint:
    path: /rate/limits
    method: GET
    data_selector: limits
    params: {}
- name: insert_limits
  endpoint:
    path: /insert/limits
    method: GET
    data_selector: limits
    params: {}
- name: upsert_limits
  endpoint:
    path: /upsert/limits
    method: GET
    data_selector: limits
    params: {}
- name: search_limits
  endpoint:
    path: /search/limits
    method: GET
    data_selector: limits
    params: {}
- name: organizations_and_projects_limits
  endpoint:
    path: /limits/organizations_projects
    method: GET
    data_selector: limits
- name: collections_limits
  endpoint:
    path: /limits/collections
    method: GET
    data_selector: limits
- name: shards_limits
  endpoint:
    path: /limits/shards
    method: GET
    data_selector: limits
- name: rate_limits
  endpoint:
    path: /limits/rate
    method: GET
    data_selector: limits
- name: operations_limits
  endpoint:
    path: /limits/operations
    method: GET
    data_selector: limits
- name: migration_limits
  endpoint:
    path: /limits/migration
    method: GET
    data_selector: limits
- name: pipelines_limits
  endpoint:
    path: /limits/pipelines
    method: GET
    data_selector: limits
- name: my_array
  endpoint:
    path: /docs/byoc/use-array-fields
    method: POST
    data_selector: fields
    params: {}
- name: index
  endpoint:
    path: /index
    method: POST
    data_selector: index_params
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: search_params
    params: {}
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: state
    params: {}
- name: load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: state
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: collectionName
    params: {}
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: schema
  endpoint:
    path: /path/to/schema
    method: POST
    data_selector: fields
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      collectionName: customized_setup_2
      schema: $schema
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: state
    params:
      collectionName: customized_setup_2
- name: index
  endpoint:
    path: /autoindex
    method: POST
    data_selector: index_params
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: search_params
    params: {}
- name: search_params
  endpoint:
    params:
      level: 1
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection
    params: {}
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
    data_selector: load_state
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: collectionName
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      collection_name: customized_setup_2
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: res
    params:
      collection_name: customized_setup_2
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: null
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: null
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: null
    params:
      mmap.enabled: false
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: null
    params:
      mmap.enabled: true
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      shardsNum: 1
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: state
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      ttlSeconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      consistencyLevel: Bounded
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: collectionName
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      consistencyLevel: Bounded
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params: {}
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
    data_selector: ''
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params: {}
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/loadstate
    method: GET
    data_selector: ''
    params: {}
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params:
      ttlSeconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params:
      consistencyLevel: Bounded
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection_name
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection_name
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection_name
    params:
      mmap.enabled: true
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
    data_selector: state
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params: {}
- name: get_load_state_customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: state
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      consistencyLevel: Bounded
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: error_code
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: error_code
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: error_code
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: error_code
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: error_code
    params:
      consistencyLevel: Bounded
- name: collection
  endpoint:
    path: /docs/manage-collections-sdks
    method: POST
    data_selector: data
    params: {}
- name: backup
  endpoint:
    path: /docs/create-snapshot
    method: POST
    data_selector: data
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      consistencyLevel: Bounded
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: response
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res.error_code
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      num_shards: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      consistencyLevel: Bounded
- name: list_projects
  endpoint:
    path: /mcp/list_projects
    method: GET
- name: list_clusters
  endpoint:
    path: /mcp/list_clusters
    method: GET
- name: create_free_cluster
  endpoint:
    path: /mcp/create_free_cluster
    method: POST
- name: describe_cluster
  endpoint:
    path: /mcp/describe_cluster
    method: GET
- name: suspend_cluster
  endpoint:
    path: /mcp/suspend_cluster
    method: POST
- name: resume_cluster
  endpoint:
    path: /mcp/resume_cluster
    method: POST
- name: query_cluster_metrics
  endpoint:
    path: /mcp/query_cluster_metrics
    method: GET
- name: list_databases
  endpoint:
    path: /mcp/list_databases
    method: GET
- name: list_collections
  endpoint:
    path: /mcp/list_collections
    method: GET
- name: create_collection
  endpoint:
    path: /mcp/create_collection
    method: POST
- name: describe_collection
  endpoint:
    path: /mcp/describe_collection
    method: GET
- name: insert_entities
  endpoint:
    path: /mcp/insert_entities
    method: POST
- name: delete_entities
  endpoint:
    path: /mcp/delete_entities
    method: POST
- name: search
  endpoint:
    path: /mcp/search
    method: POST
- name: query
  endpoint:
    path: /mcp/query
    method: POST
- name: hybrid_search
  endpoint:
    path: /mcp/hybrid_search
    method: POST
- name: clusters
- name: database
- name: collection
- name: partitions
- name: index
- name: user
- name: collection
  endpoint:
    path: /collections
    method: GET
    data_selector: records
- name: list_projects
  endpoint:
    path: /list_projects
    method: GET
    data_selector: projects
- name: list_clusters
  endpoint:
    path: /list_clusters
    method: GET
    data_selector: clusters
- name: create_free_cluster
  endpoint:
    path: /create_free_cluster
    method: POST
    data_selector: cluster
- name: describe_cluster
  endpoint:
    path: /describe_cluster
    method: GET
    data_selector: clusterDetails
- name: suspend_cluster
  endpoint:
    path: /suspend_cluster
    method: POST
    data_selector: status
- name: resume_cluster
  endpoint:
    path: /resume_cluster
    method: POST
    data_selector: status
- name: query_cluster_metrics
  endpoint:
    path: /query_cluster_metrics
    method: GET
    data_selector: metrics
- name: list_databases
  endpoint:
    path: /list_databases
    method: GET
    data_selector: databases
- name: list_collections
  endpoint:
    path: /list_collections
    method: GET
    data_selector: collections
- name: create_collection
  endpoint:
    path: /create_collection
    method: POST
    data_selector: collection
- name: describe_collection
  endpoint:
    path: /describe_collection
    method: GET
    data_selector: collectionDetails
- name: insert_entities
  endpoint:
    path: /insert_entities
    method: POST
    data_selector: insertedEntities
- name: delete_entities
  endpoint:
    path: /delete_entities
    method: DELETE
    data_selector: deletedCount
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: searchResults
- name: query
  endpoint:
    path: /query
    method: GET
    data_selector: queryResults
- name: hybrid_search
  endpoint:
    path: /hybrid_search
    method: POST
    data_selector: hybridSearchResults
- name: stage
  endpoint:
    path: /v2/stages/create
    method: POST
    data_selector: ''
    params: {}
- name: delete_stage
  endpoint:
    path: /v2/stages/{STAGE_NAME}
    method: DELETE
    data_selector: ''
    params: {}
- name: stage_file_manager
  endpoint:
    path: /stage_file_manager
    method: POST
    data_selector: results
    params: {}
- name: clusters
  endpoint:
    path: /clusters
    method: GET
- name: databases
  endpoint:
    path: /databases
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: partitions
  endpoint:
    path: /partitions
    method: GET
- name: indexes
  endpoint:
    path: /indexes
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: roles
  endpoint:
    path: /roles
    method: GET
- name: createFreeCluster
  endpoint:
    path: /v2/clusters/createFree
    method: POST
    data_selector: data
    params: {}
- name: createServerlessCluster
  endpoint:
    path: /v2/clusters/createServerless
    method: POST
    data_selector: data
    params: {}
- name: createDedicatedCluster
  endpoint:
    path: /v2/clusters/createDedicated
    method: POST
    data_selector: data
    params: {}
- name: cluster
  endpoint:
    path: /createCluster
    method: POST
- name: modify_replica
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modifyReplica
    method: POST
    data_selector: null
    params:
      replica: '2'
- name: drop_database
  endpoint:
    path: /v2/vectordb/databases/drop
    method: POST
    data_selector: dbName
    params: {}
- name: stage
  endpoint:
    path: /v2/stages/create
    method: POST
    data_selector: stage
    params: {}
- name: stage_file_manager
  endpoint:
    path: /stage_file_manager
    method: POST
    data_selector: results
- name: upload_file
  endpoint:
    path: /upload_files
    method: POST
    data_selector: results
- name: Zilliz Cloud service IP addresses
  endpoint:
    path: /zilliz-cloud-service-ips
    method: GET
    data_selector: IP Addresses
    params: {}
- name: Target cluster region IP addresses
  endpoint:
    path: /target-cluster-region-ips
    method: GET
    data_selector: IP Addresses
    params: {}
- name: create_free_cluster
  endpoint:
    path: /v2/clusters/createFree
    method: POST
    data_selector: data
    params: {}
- name: create_serverless_cluster
  endpoint:
    path: /v2/clusters/createServerless
    method: POST
    data_selector: data
    params: {}
- name: create_dedicated_cluster
  endpoint:
    path: /v2/clusters/createDedicated
    method: POST
    data_selector: data
    params: {}
- name: Metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: Alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: Custom alert targets
  endpoint:
    path: /docs/manage-project-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: cluster_metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: Modify Cluster
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/modify
    method: POST
    data_selector: data
    params: {}
- name: alertRules
  endpoint:
    path: /v2/alertRules
    method: GET
    data_selector: alerts
    params: {}
- name: modify_replica
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modifyReplica
    method: POST
    data_selector: null
    params:
      replica: '2'
- name: notification_channel
  endpoint:
    path: /manage-notification-channels
    method: POST
    data_selector: data
    params: {}
- name: drop_database
  endpoint:
    path: /v2/vectordb/databases/drop
    method: POST
    data_selector: null
    params: {}
- name: create_backup
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/create
    method: POST
    data_selector: data
    params: {}
- name: restoreCollection
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/${BACKUP_ID}/restoreCollection
    method: POST
    data_selector: data
    params: {}
- name: export_backup_files
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/export
    method: POST
    data_selector: data
    params: {}
- name: organization_users
  endpoint:
    path: /api/v2/organization/users
    method: POST
    data_selector: data
- name: custom_alert_targets
  endpoint:
    path: /custom_alert_targets
    method: GET
    data_selector: alerts
    params: {}
- name: alert_rules
  endpoint:
    path: /v2/alertRules
    method: GET
    data_selector: alertRules
    params: {}
- name: create_alert_rule
  endpoint:
    path: /v2/alertRules
    method: POST
    data_selector: alertRule
    params: {}
- name: project_users
  endpoint:
    path: /v2/project/users
    method: GET
    data_selector: users
    params: {}
- name: notification_channels
  endpoint:
    path: /manage/notification_channels
    method: GET
    data_selector: channels
    params: {}
- name: job
  endpoint:
    path: /reference/restful/describe-job-v2
    method: GET
    data_selector: job_details
    params: {}
- name: create_backup
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/create
    method: POST
    data_selector: data
    params: {}
- name: restore_collection
  endpoint:
    path: /v2/clusters/${CLUSTER_ID}/backups/${BACKUP_ID}/restoreCollection
    method: POST
    data_selector: data
    params: {}
- name: export_backup_files
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/export
    method: POST
    data_selector: data
    params: {}
- name: organization_users
  endpoint:
    path: /organization-users
    method: GET
- name: my_ingestion_pipeline
  endpoint:
    path: /v1/pipelines
    method: POST
    data_selector: data
    params:
      projectId: your PROJECT_ID
      clusterId: your CLUSTER_ID
      collectionName: my_text_collection
- name: my_search_pipeline
  endpoint:
    path: /v1/pipelines
    method: POST
    data_selector: data
    params:
      projectId: your PROJECT_ID
      clusterId: your CLUSTER_ID
      collectionName: my_text_collection
- name: search_pipeline
  endpoint:
    path: /v1/pipelines/{search_pipe_id}/run
    method: POST
    data_selector: data.result
    params:
      limit: top_k
      offset: 0
      outputFields:
      - text
      - title
      filter: title == 'Milvus Lite'
- name: project_users
  endpoint:
    path: /v2/projects/users
    method: POST
    data_selector: data
    params: {}
- name: ingestion_pipeline
  endpoint:
    path: /v1/pipelines
    method: POST
    data_selector: data
    params: {}
- name: search_pipeline
  endpoint:
    path: /v1/pipelines
    method: POST
    data_selector: data
    params: {}
- name: run_ingestion_pipeline
  endpoint:
    path: /v1/pipelines/{pipeline_id}/run
    method: POST
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /v2/invoices
    method: GET
    data_selector: data.invoices
- name: search_pipeline
  endpoint:
    path: /v1/pipelines/{search_pipe_id}/run
    method: POST
    data_selector: data.result
    params:
      limit: top_k
      offset: 0
      outputFields:
      - text
      - title
      filter: title == "Milvus Lite"
- name: daily_usage
  endpoint:
    path: /v2/usage/query
    method: POST
    data_selector: usage_data
- name: invoices
  endpoint:
    path: /v2/invoices
    method: GET
    data_selector: data.invoices
    params: {}
- name: daily_usage
  endpoint:
    path: /v2/usage/query
    method: POST
    data_selector: usage
    params: {}
- name: organizations_projects
  endpoint:
    path: /limits/organizations_projects
    method: GET
    data_selector: organizations_projects
- name: users_roles
  endpoint:
    path: /limits/users_roles
    method: GET
    data_selector: users_roles
- name: api_keys
  endpoint:
    path: /limits/api_keys
    method: GET
    data_selector: api_keys
- name: clusters
  endpoint:
    path: /limits/clusters
    method: GET
    data_selector: clusters
- name: cUs
  endpoint:
    path: /limits/cus
    method: GET
    data_selector: cus
- name: replicas
  endpoint:
    path: /limits/replicas
    method: GET
    data_selector: replicas
- name: databases
  endpoint:
    path: /limits/databases
    method: GET
    data_selector: databases
- name: collections_partitions
  endpoint:
    path: /limits/collections_partitions
    method: GET
    data_selector: collections_partitions
- name: shards
  endpoint:
    path: /limits/shards
    method: GET
    data_selector: shards
- name: rate_limit
  endpoint:
    path: /limits/rate_limit
    method: GET
    data_selector: rate_limit
- name: operations
  endpoint:
    path: /limits/operations
    method: GET
    data_selector: operations
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: customized_setup_2_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: state
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
    data_selector: state
    params: {}
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      shardsNum: 1
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      num_shards: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      consistencyLevel: Bounded
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params: {}
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
    data_selector: state
    params: {}
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      mmap.enabled: false
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      mmap.enabled: true
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      shardsNum: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection created
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      ttlSeconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: Success
    params:
      consistencyLevel: Bounded
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: customized_setup_2_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: state
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: results
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
    data_selector: state
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: state
    params: {}
- name: collection_create
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params:
      collectionName: customized_setup_2
      schema: $schema
- name: collection_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: ''
    params:
      collectionName: customized_setup_2
- name: collection_create_with_shard
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params:
      collectionName: customized_setup_3
      schema: $schema
      shardsNum: 1
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      num_shards: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      consistencyLevel: Bounded
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: state
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params: {}
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      num_shards: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      ttlSeconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      consistencyLevel: Bounded
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: error_code
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      num_shards: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params:
      consistencyLevel: Bounded
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: state
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/load_state
    method: GET
    data_selector: state
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      collection_name: customized_setup_2
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      collection_name: customized_setup_3
      num_shards: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      collection_name: customized_setup_4
      enable_mmap: false
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: res
    params:
      collection_name: customized_setup_5
      mmap.enabled: true
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: customized_setup_1
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
      output_fields:
      - color
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection.ttl.seconds
    params:
      ttlSeconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: consistencyLevel
    params:
      consistencyLevel: Bounded
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: result
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/loadstate
    method: GET
    data_selector: state
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: results
    params:
      collectionName: quick_setup
      data:
      - - 0.3580376395471989
        - -0.6023495712049978
        - 0.18414012509913835
        - -0.26286205330961354
        - 0.9029438446296592
      limit: 3
      outputFields:
      - color
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params:
      collection_name: customized_setup_2
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params:
      collection_name: customized_setup_5
      properties:
        collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: success
    params:
      collection_name: customized_setup_6
      properties:
        consistencyLevel: Bounded
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
- name: search_results
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params: {}
- name: customized_setup_2
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params: {}
- name: customized_setup_3
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params:
      num_shards: 1
- name: customized_setup_4
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params:
      mmap.enabled: true
- name: customized_setup_5
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params:
      collection.ttl.seconds: 86400
- name: customized_setup_6
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params:
      consistencyLevel: Bounded
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: bulk_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: search_results
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search_results
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      data:
      - - 0.3580376395471989
        - -0.6023495712049978
        - 0.18414012509913835
        - -0.26286205330961354
        - 0.9029438446296592
      limit: 3
      outputFields:
      - color
- name: quick_setup
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
      output_fields:
      - color
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: '3'
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: results
    params: {}
- name: search
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: results
    params:
      collectionName: quick_setup
      limit: 3
      outputFields:
      - color
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params: {}
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      data:
      - - 0.3580376395471989
        - -0.6023495712049978
        - 0.18414012509913835
        - -0.26286205330961354
        - 0.9029438446296592
      limit: 3
      outputFields:
      - color
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: search_results
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: results
    params:
      collectionName: quick_setup
      limit: 3
      outputFields:
      - color
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: '3'
- name: search_results
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: search_results
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: results
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
      outputFields:
      - color
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
      outputFields:
      - color
- name: search
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
      output_fields:
      - color
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: bulk_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params:
      outputFields: count(*)
- name: quick_setup_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
      offset: 10
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: '3'
      level: '10'
      enable_recall_calculation: 'true'
- name: vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: schema
  endpoint:
    path: /create/schema
    method: POST
    data_selector: schema
- name: my_array
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      max_capacity: 5
      max_length: 512
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: search_results
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: single_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: bulk_vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: my_varchar
  endpoint:
    path: /add-scalar-fields
    method: POST
    data_selector: fields
    params: {}
- name: my_int64
  endpoint:
    path: /add-number-fields
    method: POST
    data_selector: fields
    params: {}
- name: my_bool
  endpoint:
    path: /add-boolean-fields
    method: POST
    data_selector: fields
    params: {}
- name: my_json
  endpoint:
    path: /add-json-fields
    method: POST
    data_selector: fields
    params: {}
- name: my_array
  endpoint:
    path: /add-array-fields
    method: POST
    data_selector: fields
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: vector_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
      annsField: vector
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
      output_fields:
      - color
- name: insert
  endpoint:
    path: /entities/insert
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params: {}
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collection
    params: {}
- name: insert
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
- name: sparse_vector
  endpoint:
    path: /api/sparse_vector
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      limit: 3
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
      outputFields:
      - count(*)
      filter: ''
      limit: 100
      offset: 0
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: insert_data
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: similarity_search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: quick_setup
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      limit: 3
      level: 10
      enable_recall_calculation: true
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: collection_schema
  endpoint:
    path: /create_schema
    method: POST
    data_selector: schema
- name: add_primary_field
  endpoint:
    path: /add_primary_field
    method: POST
    data_selector: field
- name: add_vector_field
  endpoint:
    path: /add_vector_field
    method: POST
    data_selector: field
- name: add_scalar_field
  endpoint:
    path: /add_scalar_field
    method: POST
    data_selector: field
- name: insert_entities
  endpoint:
    path: /entities/insert
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
- name: search_entities
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
      limit: 5
      outputFields:
      - varchar_field1
      - varchar_field2
- name: query_entities
  endpoint:
    path: /entities/query
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
      outputFields:
      - varchar_field1
      - varchar_field2
- name: my_array
  endpoint:
    data_selector: array
    params:
      max_capacity: 5
      max_length: 512
- name: search
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      filter: varchar_field2 == "Best seller"
      limit: 5
      outputFields:
      - varchar_field1
      - varchar_field2
      params:
        nprobe: 10
- name: schema
  endpoint:
    path: /create-schema
    method: POST
    data_selector: schema
    params: {}
- name: primary_field
  endpoint:
    path: /add-primary-field
    method: POST
    data_selector: primary_field
    params: {}
- name: vector_field
  endpoint:
    path: /add-vector-field
    method: POST
    data_selector: vector_field
    params: {}
- name: scalar_field
  endpoint:
    path: /add-scalar-field
    method: POST
    data_selector: scalar_field
    params: {}
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: records
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params: {}
- name: my_varchar
  endpoint:
    path: /schema/add_field
    method: POST
    data_selector: field
    params:
      field_name: my_varchar
      datatype: DataType.VARCHAR
      max_length: 512
- name: my_int64
  endpoint:
    path: /schema/add_field
    method: POST
    data_selector: field
    params:
      field_name: my_int64
      datatype: DataType.INT64
- name: my_bool
  endpoint:
    path: /schema/add_field
    method: POST
    data_selector: field
    params:
      field_name: my_bool
      datatype: DataType.BOOL
- name: my_json
  endpoint:
    path: /schema/add_field
    method: POST
    data_selector: field
    params:
      field_name: my_json
      datatype: DataType.JSON
- name: my_array
  endpoint:
    path: /schema/add_field
    method: POST
    data_selector: field
    params:
      field_name: my_array
      datatype: DataType.ARRAY
      element_type: DataType.VARCHAR
      max_capacity: 5
      max_length: 512
- name: product_catalog
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: primary_field
  endpoint:
    path: /docs/primary-field-auto-id
    method: GET
    data_selector: records
- name: category_index
  endpoint:
    path: metadata["category"]
    method: AUTOINDEX
    data_selector: varchar
- name: tags_array_index
  endpoint:
    path: metadata["tags"]
    method: AUTOINDEX
    data_selector: array_varchar
- name: string_to_double_index
  endpoint:
    path: metadata["string_price"]
    method: AUTOINDEX
    data_selector: double
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: ''
    params: {}
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
- name: insert_data
  endpoint:
    path: /vectordb/entities/insert
    method: POST
    data_selector: data
- name: perform_similarity_search
  endpoint:
    path: /vectordb/entities/search
    method: POST
    data_selector: data
- name: insert
  endpoint:
    path: /insert
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: data
    params: {}
- name: query
  endpoint:
    path: /query
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: null
    params: {}
- name: my_collection
  endpoint:
    path: /create_collection
    method: POST
    data_selector: collection_response
- name: insert
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
      annsField: binary_vector
      limit: 5
      searchParams:
        params:
          nprobe: 10
      outputFields:
      - pk
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params:
      enable_dynamic_field: true
- name: insert_entities
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
- name: sparse_vector
  endpoint:
    path: /api/sparse_vector
    method: POST
    data_selector: sparse_vectors
- name: overview_index
  endpoint:
    path: /dynamic_json/overview
    method: POST
    data_selector: overview
    params:
      index_type: AUTOINDEX
      json_cast_type: varchar
      json_path: overview
- name: words_index
  endpoint:
    path: /dynamic_json/words
    method: POST
    data_selector: words
    params:
      index_type: AUTOINDEX
      json_cast_type: double
      json_path: words
- name: json_varchar_index
  endpoint:
    path: /dynamic_json/varchar
    method: POST
    data_selector: dynamic_json['varchar']
    params:
      index_type: AUTOINDEX
      json_cast_type: varchar
      json_path: dynamic_json['varchar']
- name: json_nested_index
  endpoint:
    path: /dynamic_json/nested
    method: POST
    data_selector: dynamic_json['nested']['value']
    params:
      index_type: AUTOINDEX
      json_cast_type: double
      json_path: dynamic_json['nested']['value']
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: insert_data
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: insert_entities
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params: {}
- name: overview_index
  endpoint:
    params:
      json_path: overview
      json_cast_type: varchar
    index_type: AUTOINDEX
- name: words_index
  endpoint:
    params:
      json_path: words
      json_cast_type: double
    index_type: AUTOINDEX
- name: json_varchar_index
  endpoint:
    params:
      json_path: dynamic_json['varchar']
      json_cast_type: varchar
    index_type: AUTOINDEX
- name: json_nested_index
  endpoint:
    params:
      json_path: dynamic_json['nested']['value']
      json_cast_type: double
    index_type: AUTOINDEX
- name: json_string_price_index
  endpoint:
    params:
      json_path: dynamic_json['string_price']
      json_cast_type: double
      json_cast_function: STRING_TO_DOUBLE
    index_type: AUTOINDEX
- name: my_collection
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params:
      filter: varchar_field2 == "Best seller"
      output_fields:
      - varchar_field1
      - varchar_field2
      limit: 5
      searchParams:
        params:
          nprobe: 10
- name: my_collection
  endpoint:
    path: /v2/vectordb/indexes/create
    method: POST
    data_selector: collectionName
    params: {}
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
- name: product_catalog
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: collectionName
    params: {}
- name: category_index
  endpoint:
    path: /v2/vectordb/indexes/create
    method: POST
- name: tags_array_index
  endpoint:
    path: /v2/vectordb/indexes/create
    method: POST
- name: string_to_double_index
  endpoint:
    path: /v2/vectordb/indexes/create
    method: POST
- name: entities_search
  endpoint:
    path: /vectordb/entities/search
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
      data:
      - - 0.1
        - 0.2
        - 0.3
        - 0.4
        - 0.5
      annsField: vector
      limit: 10
      filter: age == 18
      outputFields:
      - id
      - age
      - status
- name: entities_query
  endpoint:
    path: /vectordb/entities/query
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
      expr: ''
      outputFields:
      - id
      - age
      limit: 10
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: null
    params: {}
- name: my_collection
  endpoint:
    path: /entities/insert
    method: POST
    data_selector: data
    params: {}
- name: alter_collection_field
  endpoint:
    path: /v2/collections/fields/alter_properties
    method: POST
    data_selector: properties
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params:
      enable_dynamic_field: true
- name: insert_entities
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params:
      collectionName: my_collection
- name: overview_index
  endpoint:
    params:
      index_type: AUTOINDEX
      json_cast_type: varchar
      json_path: dynamic_json["overview"]
- name: words_index
  endpoint:
    params:
      index_type: AUTOINDEX
      json_cast_type: double
      json_path: dynamic_json["words"]
- name: json_varchar_index
  endpoint:
    params:
      index_type: AUTOINDEX
      json_cast_type: varchar
      json_path: dynamic_json["varchar"]
- name: json_nested_index
  endpoint:
    params:
      index_type: AUTOINDEX
      json_cast_type: double
      json_path: dynamic_json["nested"]["value"]
- name: article_id
  endpoint:
    path: /services/data/vXX.X/sobjects/ArticleId
    method: POST
    data_selector: records
    params:
      incremental: updated_at
- name: title
  endpoint:
    path: /services/data/vXX.X/sobjects/Title
    method: POST
    data_selector: records
    params: {}
- name: timestamp
  endpoint:
    path: /services/data/vXX.X/sobjects/Timestamp
    method: POST
    data_selector: records
    params: {}
- name: text
  endpoint:
    path: /services/data/vXX.X/sobjects/Text
    method: POST
    data_selector: records
    params: {}
- name: text_dense_vector
  endpoint:
    path: /services/data/vXX.X/sobjects/TextDenseVector
    method: POST
    data_selector: records
    params: {}
- name: text_sparse_vector
  endpoint:
    path: /services/data/vXX.X/sobjects/TextSparseVector
    method: POST
    data_selector: records
    params: {}
- name: create_index
  endpoint:
    path: /indexes/create
    method: POST
    data_selector: null
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params:
      enable_dynamic_field: true
- name: insert_entities
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: index_building
  endpoint:
    path: /api/v1/index_building
    method: POST
    data_selector: results
- name: search
  endpoint:
    path: /api/v1/search
    method: POST
    data_selector: results
- name: overview
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      json_cast_type: varchar
      json_path: overview
- name: words
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      json_cast_type: double
      json_path: words
- name: dynamic_json
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      json_cast_type: varchar
      json_path: dynamic_json['varchar']
- name: dynamic_json_nested
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      json_cast_type: double
      json_path: dynamic_json['nested']['value']
- name: string_price
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      json_cast_type: double
      json_cast_function: STRING_TO_DOUBLE
      json_path: dynamic_json['string_price']
- name: index_building
  endpoint:
    path: /index/building
    method: POST
    data_selector: results
    params:
      index_type: AUTOINDEX
      metric_type: L2
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: results
    params:
      level: 1
- name: my_collection
  endpoint:
    path: /v2/vectordb/indexes/create
    method: POST
    data_selector: collectionName
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: collectionName
    params: {}
- name: cloud_providers
  endpoint:
    path: /v2/clouds
    method: GET
    data_selector: data
    params: {}
- name: collections
  endpoint:
    path: /v2/vectordb/collections/list
    method: GET
    data_selector: data
    params: {}
- name: collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: entities
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /v2/vectordb/search
    method: POST
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /entities/search
    method: POST
    data_selector: data
    params: {}
- name: query
  endpoint:
    path: /entities/query
    method: POST
    data_selector: data
    params: {}
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
- name: my_collection
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
- name: clouds
  endpoint:
    path: /v2/clouds
    method: GET
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
- name: alter_var_char_field
  endpoint:
    path: /v2/collections/fields/alter_properties
    method: POST
    data_selector: properties
    params: {}
- name: alter_array_field
  endpoint:
    path: /v2/collections/fields/alter_properties
    method: POST
    data_selector: properties
    params: {}
- name: alter_field_level_mmap_settings
  endpoint:
    path: /v2/collections/fields/alter_properties
    method: POST
    data_selector: properties
    params: {}
- name: collection
  endpoint:
    path: /api/v1/collections
    method: GET
    data_selector: data
    params: {}
- name: List Cloud Providers
  endpoint:
    path: /reference/restful/list-cloud-providers-v2
    method: GET
- name: List Cloud Regions
  endpoint:
    path: /reference/restful/list-cloud-regions-v2
    method: GET
- name: Create Import Jobs
  endpoint:
    path: /reference/restful/create-import-jobs-v2
    method: POST
- name: Get Import Job Progress
  endpoint:
    path: /reference/restful/get-import-job-progress-v2
    method: POST
- name: List Import Jobs
  endpoint:
    path: /reference/restful/list-import-jobs-v2
    method: POST
- name: Merge Data
  endpoint:
    path: /reference/restful/merge-data-v2
    method: POST
- name: Create Stage
  endpoint:
    path: /reference/restful/create-stage-v2
    method: POST
- name: Delete Stage
  endpoint:
    path: /reference/restful/delete-stage-v2
    method: DELETE
- name: List Stages
  endpoint:
    path: /reference/restful/list-stages-v2
    method: GET
- name: Create Dedicated Cluster
  endpoint:
    path: /reference/restful/create-dedicated-cluster-v2
    method: POST
- name: Get Cluster
  endpoint:
    path: /reference/restful/describe-cluster-v2
    method: GET
- name: List Clusters
  endpoint:
    path: /reference/restful/list-clusters-v2
    method: GET
- name: List Projects
  endpoint:
    path: /reference/restful/list-projects-v2
    method: GET
- name: Create Backup
  endpoint:
    path: /reference/restful/create-backup-v2
    method: POST
- name: Delete Backup
  endpoint:
    path: /reference/restful/delete-backup-v2
    method: DELETE
- name: List Invoices
  endpoint:
    path: /reference/restful/list-invoices-v2
    method: GET
- name: article_id
  endpoint:
    path: /services/data/vXX.X/sobjects/ArticleId
    method: GET
    data_selector: records
- name: title
  endpoint:
    path: /services/data/vXX.X/sobjects/Title
    method: GET
    data_selector: records
- name: timestamp
  endpoint:
    path: /services/data/vXX.X/sobjects/Timestamp
    method: GET
    data_selector: records
- name: text
  endpoint:
    path: /services/data/vXX.X/sobjects/Text
    method: GET
    data_selector: records
- name: text_dense_vector
  endpoint:
    path: /services/data/vXX.X/sobjects/TextDenseVector
    method: GET
    data_selector: records
- name: text_sparse_vector
  endpoint:
    path: /services/data/vXX.X/sobjects/TextSparseVector
    method: GET
    data_selector: records
- name: cloud_meta
  endpoint:
    path: /reference/restful/cloud-meta-v2
    method: GET
- name: import_operations
  endpoint:
    path: /reference/restful/import-operations-v2
    method: POST
- name: extract_load_transform
  endpoint:
    path: /reference/restful/extract-load-and-transform-v2
    method: POST
- name: stage
  endpoint:
    path: /reference/restful/stage-v2
    method: POST
- name: cluster_operations
  endpoint:
    path: /reference/restful/cluster-operations-v2
    method: POST
- name: cloud_migration
  endpoint:
    path: /reference/restful/cloud-migration-v2
    method: POST
- name: backup_restore
  endpoint:
    path: /reference/restful/backup-and-restore-v2
    method: POST
- name: metrics_alerts
  endpoint:
    path: /reference/restful/metrics-and-alerts-v2
    method: POST
- name: cloud_job
  endpoint:
    path: /reference/restful/cloud-job-v2
    method: GET
- name: invoices
  endpoint:
    path: /reference/restful/invoices-v2
    method: GET
- name: usage
  endpoint:
    path: /reference/restful/usage-v2
    method: POST
- name: list_cloud_providers
  endpoint:
    path: /reference/restful/list-cloud-providers-v2
    method: GET
- name: list_cloud_regions
  endpoint:
    path: /reference/restful/list-cloud-regions-v2
    method: GET
- name: index-building
  endpoint:
    path: /index-building
    method: POST
    data_selector: results
- name: search-settings
  endpoint:
    path: /search-settings
    method: GET
    data_selector: results
- name: clouds
  endpoint:
    path: /v2/clouds
    method: GET
    data_selector: data
    params: {}
- name: index_building
  endpoint:
    path: /index/building
    method: POST
    data_selector: result
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: results
- name: AUTOINDEX
  endpoint:
    path: /api/autoindex
    method: POST
    data_selector: results
- name: cloud_regions
  endpoint:
    path: /v2/regions
    method: GET
    data_selector: data
    params:
      cloudId: aws
- name: create_import_jobs
  endpoint:
    path: /reference/restful/create-import-jobs-v2
    method: POST
- name: get_import_job_progress
  endpoint:
    path: /reference/restful/get-import-job-progress-v2
    method: POST
- name: list_import_jobs
  endpoint:
    path: /reference/restful/list-import-jobs-v2
    method: POST
- name: cloud_providers
  endpoint:
    path: /v2/clouds
    method: GET
- name: collections
  endpoint:
    path: /v2/vectordb/collections/list
    method: GET
- name: create_import_jobs
  endpoint:
    path: /v2/vectordb/jobs/import/create
    method: POST
    data_selector: data
    params: {}
- name: import_job_progress
  endpoint:
    path: /v2/vectordb/jobs/import/getProgress
    method: POST
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /v2/vectordb/jobs/import/list
    method: POST
    data_selector: data.records
    params:
      clusterId: clusterId
      pageSize: pageSize
      currentPage: currentPage
      dbName: dbName
- name: merge_data
  endpoint:
    path: /v2/etl/merge
    method: POST
    data_selector: data
    params: {}
- name: stage
  endpoint:
    path: /reference/restful/stage-v2
    method: POST
    data_selector: stages
    params: {}
- name: create_stage
  endpoint:
    path: /v2/stages/create
    method: POST
    data_selector: data
    params: {}
- name: List Cloud Providers
  endpoint:
    path: /reference/restful/list-cloud-providers-v2
    method: GET
- name: List Cloud Regions
  endpoint:
    path: /reference/restful/list-cloud-regions-v2
    method: GET
- name: Create Import Jobs
  endpoint:
    path: /reference/restful/create-import-jobs-v2
    method: POST
- name: Get Import Job Progress
  endpoint:
    path: /reference/restful/get-import-job-progress-v2
    method: POST
- name: List Import Jobs
  endpoint:
    path: /reference/restful/list-import-jobs-v2
    method: POST
- name: Merge Data
  endpoint:
    path: /reference/restful/merge-data-v2
    method: POST
- name: Create Stage
  endpoint:
    path: /reference/restful/create-stage-v2
    method: POST
- name: Delete Stage
  endpoint:
    path: /reference/restful/delete-stage-v2
    method: DELETE
- name: List Stages
  endpoint:
    path: /reference/restful/list-stages-v2
    method: GET
- name: Create Dedicated Cluster
  endpoint:
    path: /reference/restful/create-dedicated-cluster-v2
    method: POST
- name: Describe Cluster
  endpoint:
    path: /reference/restful/describe-cluster-v2
    method: GET
- name: List Clusters
  endpoint:
    path: /reference/restful/list-clusters-v2
    method: GET
- name: List Projects
  endpoint:
    path: /reference/restful/list-projects-v2
    method: GET
- name: Create backup
  endpoint:
    path: /reference/restful/create-backup-v2
    method: POST
- name: Describe Backup
  endpoint:
    path: /reference/restful/describe-backup-v2
    method: GET
- name: List Backups
  endpoint:
    path: /reference/restful/list-backups-v2
    method: GET
- name: Query Daily Usage
  endpoint:
    path: /reference/restful/query-daily-usage-v2
    method: POST
- name: delete_stage
  endpoint:
    path: /v2/stages/{STAGE_NAME}
    method: DELETE
    data_selector: data
    params:
      STAGE_NAME: my_stage
- name: cloud_meta
  endpoint:
    path: /reference/restful/cloud-meta-v2
    method: GET
- name: import_operations
  endpoint:
    path: /reference/restful/import-operations-v2
    method: POST
- name: extract_load_transform
  endpoint:
    path: /reference/restful/extract-load-and-transform-v2
    method: POST
- name: stage
  endpoint:
    path: /reference/restful/stage-v2
    method: POST
- name: cluster_operations
  endpoint:
    path: /reference/restful/cluster-operations-v2
    method: POST
- name: cloud_migration
  endpoint:
    path: /reference/restful/cloud-migration-v2
    method: POST
- name: backup_restore
  endpoint:
    path: /reference/restful/backup-and-restore-v2
    method: POST
- name: metrics_alerts
  endpoint:
    path: /reference/restful/metrics-and-alerts-v2
    method: POST
- name: cloud_job
  endpoint:
    path: /reference/restful/cloud-job-v2
    method: GET
- name: invoices
  endpoint:
    path: /reference/restful/invoices-v2
    method: GET
- name: usage
  endpoint:
    path: /reference/restful/usage-v2
    method: POST
- name: stages
  endpoint:
    path: /v2/stages
    method: GET
    data_selector: data.stages
    params:
      projectId: proj-xxxxxxxxxxxxxxxxx
- name: list_cloud_providers
  endpoint:
    path: /reference/restful/list-cloud-providers-v2
    method: GET
- name: list_cloud_regions
  endpoint:
    path: /reference/restful/list-cloud-regions-v2
    method: GET
- name: clouds
  endpoint:
    path: /v2/clouds
    method: GET
    data_selector: data
- name: create_dedicated_cluster
  endpoint:
    path: /reference/restful/create-dedicated-cluster-v2
    method: POST
- name: create_free_cluster
  endpoint:
    path: /reference/restful/create-free-cluster-v2
    method: POST
- name: create_serverless_cluster
  endpoint:
    path: /reference/restful/create-serverless-cluster-v2
    method: POST
- name: describe_cluster
  endpoint:
    path: /reference/restful/describe-cluster-v2
    method: GET
- name: drop_cluster
  endpoint:
    path: /reference/restful/drop-cluster-v2
    method: DELETE
- name: list_clusters
  endpoint:
    path: /reference/restful/list-clusters-v2
    method: GET
- name: list_projects
  endpoint:
    path: /reference/restful/list-projects-v2
    method: GET
- name: modify_cluster_replica
  endpoint:
    path: /reference/restful/modify-cluster-replica-v2
    method: POST
- name: modify_cluster
  endpoint:
    path: /reference/restful/modify-cluster-v2
    method: POST
- name: resume_cluster
  endpoint:
    path: /reference/restful/resume-cluster-v2
    method: POST
- name: suspend_cluster
  endpoint:
    path: /reference/restful/suspend-cluster-v2
    method: POST
- name: cloud_regions
  endpoint:
    path: /v2/regions
    method: GET
    data_selector: data
    params:
      cloudId: ''
- name: create_dedicated_cluster
  endpoint:
    path: /v2/clusters/createDedicated
    method: POST
    data_selector: data
    params: {}
- name: import_jobs
  endpoint:
    path: /restful/list-import-jobs-v2
    method: POST
- name: import_job_progress
  endpoint:
    path: /restful/get-import-job-progress-v2
    method: POST
- name: create_import_jobs
  endpoint:
    path: /restful/create-import-jobs-v2
    method: POST
- name: create_free_cluster
  endpoint:
    path: /v2/clusters/createFree
    method: POST
    data_selector: data
    params: {}
- name: create_import_jobs
  endpoint:
    path: /v2/vectordb/jobs/import/create
    method: POST
- name: create_serverless_cluster
  endpoint:
    path: /v2/clusters/createServerless
    method: POST
    data_selector: data
    params:
      clusterName: Serverless-05
      projectId: proj-xxxxxxxxxxxxxxxxxxxxxxx
      regionId: gcp-us-west1
- name: get_import_job_progress
  endpoint:
    path: /v2/vectordb/jobs/import/getProgress
    method: POST
    data_selector: data
    params: {}
- name: describe_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}
    method: GET
    data_selector: data
    params:
      Authorization: Bearer {{TOKEN}}
      CLUSTER_ID: '{CLUSTER_ID}'
- name: drop_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/drop
    method: DELETE
    data_selector: data
    params:
      Authorization: Bearer {{TOKEN}}
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: import_jobs
  endpoint:
    path: /v2/vectordb/jobs/import/list
    method: POST
    data_selector: data.records
    params:
      clusterId: required
      pageSize: optional
      currentPage: optional
      dbName: optional
- name: merge_data
  endpoint:
    path: /reference/restful/merge-data-v2
    method: POST
- name: clusters
  endpoint:
    path: /v2/clusters
    method: GET
    data_selector: data.clusters
- name: merge_data
  endpoint:
    path: /v2/etl/merge
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v2/projects
    method: GET
    data_selector: data
- name: create_stage
  endpoint:
    path: /reference/restful/create-stage-v2
    method: POST
- name: delete_stage
  endpoint:
    path: /reference/restful/delete-stage-v2
    method: DELETE
- name: list_stages
  endpoint:
    path: /reference/restful/list-stages-v2
    method: GET
- name: modify_cluster_replica
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modifyReplica
    method: POST
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: stage
  endpoint:
    path: /v2/stages/create
    method: POST
    data_selector: data
    params: {}
- name: modify_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modify
    method: POST
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: stage
  endpoint:
    path: /v2/stages/{STAGE_NAME}
    method: DELETE
    data_selector: data
    params: {}
- name: resume_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/resume
    method: POST
    data_selector: data
    params: {}
- name: stages
  endpoint:
    path: /v2/stages
    method: GET
    data_selector: data.stages
    params:
      projectId: proj-xxxxxxxxxxxxxxxxx
- name: suspend_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/suspend
    method: POST
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: Migrate to Existing Cluster
  endpoint:
    path: /reference/restful/migrate-to-existing-cluster-v2
    method: POST
- name: Migrate to New Dedicated Cluster
  endpoint:
    path: /reference/restful/migrate-to-new-dedicated-cluster-v2
    method: POST
- name: migrate_to_existing_cluster
  endpoint:
    path: /v2/migrations/toExisting
    method: POST
    data_selector: data
    params: {}
- name: Create Dedicated Cluster
  endpoint:
    path: /reference/restful/create-dedicated-cluster-v2
    method: POST
- name: Create Free Cluster
  endpoint:
    path: /reference/restful/create-free-cluster-v2
    method: POST
- name: Create Serverless Cluster
  endpoint:
    path: /reference/restful/create-serverless-cluster-v2
    method: POST
- name: Describe Cluster
  endpoint:
    path: /reference/restful/describe-cluster-v2
    method: GET
- name: Drop Cluster
  endpoint:
    path: /reference/restful/drop-cluster-v2
    method: DELETE
- name: List Clusters
  endpoint:
    path: /reference/restful/list-clusters-v2
    method: GET
- name: List Projects
  endpoint:
    path: /reference/restful/list-projects-v2
    method: GET
- name: Modify Cluster Replica
  endpoint:
    path: /reference/restful/modify-cluster-replica-v2
    method: POST
- name: Modify Cluster
  endpoint:
    path: /reference/restful/modify-cluster-v2
    method: POST
- name: Resume Cluster
  endpoint:
    path: /reference/restful/resume-cluster-v2
    method: POST
- name: Suspend Cluster
  endpoint:
    path: /reference/restful/suspend-cluster-v2
    method: POST
- name: migrate_to_new_dedicated
  endpoint:
    path: /v2/migrations/toNewDedicated
    method: POST
    data_selector: data
    params: {}
- name: create_dedicated_cluster
  endpoint:
    path: /v2/clusters/createDedicated
    method: POST
    data_selector: data
    params: {}
- name: create_free_cluster
  endpoint:
    path: /v2/clusters/createFree
    method: POST
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /reference/restful/create-backup-v2
    method: POST
- name: delete_backup
  endpoint:
    path: /reference/restful/delete-backup-v2
    method: DELETE
- name: describe_backup
  endpoint:
    path: /reference/restful/describe-backup-v2
    method: GET
- name: export_backup_files
  endpoint:
    path: /reference/restful/export-backup-files-v2
    method: POST
- name: get_backup_policy
  endpoint:
    path: /reference/restful/get-backup-policy-v2
    method: GET
- name: list_backups
  endpoint:
    path: /reference/restful/list-backups-v2
    method: GET
- name: restore_cluster_backup
  endpoint:
    path: /reference/restful/restore-cluster-backup-v2
    method: POST
- name: restore_collection_backup
  endpoint:
    path: /reference/restful/restore-collection-backup-v2
    method: POST
- name: set_backup_policy
  endpoint:
    path: /reference/restful/set-backup-policy-v2
    method: POST
- name: create_serverless_cluster
  endpoint:
    path: /v2/clusters/createServerless
    method: POST
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/create
    method: POST
    data_selector: data
    params: {}
- name: describe_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}
    method: GET
    data_selector: data
    params: {}
- name: delete_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}
    method: DELETE
    data_selector: data
    params: {}
- name: drop_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/drop
    method: DELETE
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: describe_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}
    method: GET
    data_selector: data
    params:
      CLUSTER_ID: string
      BACKUP_ID: string
- name: clusters
  endpoint:
    path: /v2/clusters
    method: GET
    data_selector: data.clusters
    params:
      pageSize: 10
      currentPage: 1
- name: export_backup_files
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/export
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v2/projects
    method: GET
    data_selector: data
- name: get_backup_policy
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/policy
    method: GET
    data_selector: data
    params:
      CLUSTER_ID: string
- name: modify_cluster_replica
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modifyReplica
    method: POST
    data_selector: data
    params: {}
- name: backups
  endpoint:
    path: /v2/backups
    method: GET
    data_selector: data.backups
    params: {}
- name: restore_cluster_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/restoreCluster
    method: POST
    data_selector: data
    params: {}
- name: modify_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/modify
    method: POST
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: resume_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/resume
    method: POST
    data_selector: data
    params: {}
- name: restore_collection_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/restoreCollection
    method: POST
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
      BACKUP_ID: Dedicated-01_backup3
- name: set_backup_policy
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/policy
    method: POST
    data_selector: data
    params: {}
- name: suspend_cluster
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/suspend
    method: POST
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: Migrate to Existing Cluster
  endpoint:
    path: /reference/restful/migrate-to-existing-cluster-v2
    method: POST
- name: Migrate to New Dedicated Cluster
  endpoint:
    path: /reference/restful/migrate-to-new-dedicated-cluster-v2
    method: POST
- name: create_alert_rule
  endpoint:
    path: /reference/restful/create-alert-rule-v2
    method: POST
- name: delete_alert_rule
  endpoint:
    path: /reference/restful/delete-alert-rule-v2
    method: DELETE
- name: list_alert_rules
  endpoint:
    path: /reference/restful/list-alert-rules-v2
    method: GET
- name: query_cluster_metrics
  endpoint:
    path: /reference/restful/query-cluster-metrics-v2
    method: POST
- name: update_alert_rule
  endpoint:
    path: /reference/restful/update-alert-rule-v2
    method: PUT
- name: migrate_to_existing_cluster
  endpoint:
    path: /v2/migrations/toExisting
    method: POST
    data_selector: data
    params: {}
- name: create_alert_rule
  endpoint:
    path: /reference/restful/create-alert-rule-v2
    method: POST
- name: delete_alert_rule
  endpoint:
    path: /reference/restful/delete-alert-rule-v2
    method: DELETE
- name: list_alert_rules
  endpoint:
    path: /reference/restful/list-alert-rules-v2
    method: GET
- name: query_cluster_metrics
  endpoint:
    path: /reference/restful/query-cluster-metrics-v2
    method: POST
- name: update_alert_rule
  endpoint:
    path: /reference/restful/update-alert-rule-v2
    method: PUT
- name: migrate_to_new_dedicated_cluster
  endpoint:
    path: /v2/migrations/toNewDedicated
    method: POST
    data_selector: data
    params: {}
- name: alert_rule
  endpoint:
    path: /v2/alertRules
    method: POST
    data_selector: data
    params: {}
- name: alert_rule
  endpoint:
    path: /v2/alertRules/{ALERT_RULE_ID}
    method: DELETE
    data_selector: data
    params: {}
- name: create_backup
  endpoint:
    path: /reference/restful/create-backup-v2
    method: POST
- name: delete_backup
  endpoint:
    path: /reference/restful/delete-backup-v2
    method: DELETE
- name: describe_backup
  endpoint:
    path: /reference/restful/describe-backup-v2
    method: GET
- name: export_backup_files
  endpoint:
    path: /reference/restful/export-backup-files-v2
    method: POST
- name: get_backup_policy
  endpoint:
    path: /reference/restful/get-backup-policy-v2
    method: GET
- name: list_backups
  endpoint:
    path: /reference/restful/list-backups-v2
    method: GET
- name: restore_cluster_backup
  endpoint:
    path: /reference/restful/restore-cluster-backup-v2
    method: POST
- name: restore_collection_backup
  endpoint:
    path: /reference/restful/restore-collection-backup-v2
    method: POST
- name: set_backup_policy
  endpoint:
    path: /reference/restful/set-backup-policy-v2
    method: POST
- name: create_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/create
    method: POST
    data_selector: data
    params: {}
- name: alert_rules
  endpoint:
    path: /v2/alertRules
    method: GET
    data_selector: data.alertRules
    params:
      projectId: proj-xxxxxxxxxxxxxxxxxxxxxx
- name: query_cluster_metrics
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/metrics/query
    method: POST
    data_selector: results
    params: {}
- name: delete_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}
    method: DELETE
    data_selector: data
    params: {}
- name: alert_rule
  endpoint:
    path: /reference/restful/update-alert-rule-v2
    method: PUT
- name: alert_rule
  endpoint:
    path: /v2/alertRules/{ALERT_RULE_ID}
    method: PUT
- name: describe_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}
    method: GET
    data_selector: data
    params: {}
- name: describe_job
  endpoint:
    path: /reference/restful/describe-job-v2
    method: GET
- name: export_backup_files
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/export
    method: POST
    data_selector: data
    params: {}
- name: describe_job
  endpoint:
    path: /v2/jobs/{JOB_ID}
    method: GET
    data_selector: data
    params:
      Authorization: Bearer {{TOKEN}}
      JOB_ID: job-xxxxxxxxxxxxxxxxxx
- name: backup_policy
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/policy
    method: GET
    data_selector: data
    params:
      CLUSTER_ID: inxx-xxxxxxxxxxxxxxx
- name: describe_invoice
  endpoint:
    path: /reference/restful/describe-invoice-v2
    method: GET
- name: list_invoices
  endpoint:
    path: /reference/restful/list-invoices-v2
    method: GET
- name: backups
  endpoint:
    path: /v2/backups
    method: GET
    data_selector: backups
    params: {}
- name: invoice
  endpoint:
    path: /v2/invoices/{INVOICE_ID}
    method: GET
    data_selector: data
    params:
      INVOICE_ID: ''
- name: invoices
  endpoint:
    path: /v2/invoices
    method: GET
    data_selector: data.invoices
    params:
      pageSize: 10
      currentPage: 1
- name: restore_cluster_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/restoreCluster
    method: POST
    data_selector: data
    params: {}
- name: daily_usage
  endpoint:
    path: /reference/restful/query-daily-usage-v2
    method: POST
    data_selector: daily_usage_records
- name: restore_collection_backup
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/{BACKUP_ID}/restoreCollection
    method: POST
    data_selector: data
    params: {}
- name: query_daily_usage
  endpoint:
    path: /v2/usage/query
    method: POST
    data_selector: results
    params: {}
- name: Set Backup Policy
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/backups/policy
    method: POST
    data_selector: data
    params: {}
- name: alert_rule
  endpoint:
    path: /reference/restful/list-alert-rules-v2
    method: GET
    data_selector: alert_rules
- name: cluster_metrics
  endpoint:
    path: /reference/restful/query-cluster-metrics-v2
    method: POST
    data_selector: metrics
- name: Vector Operations
  endpoint:
    path: /reference/restful/vector-operations-v2
    method: POST
- name: Collection Operations
  endpoint:
    path: /reference/restful/collection-operations-v2
    method: POST
- name: Database Operations
  endpoint:
    path: /reference/restful/database-operations-v2
    method: POST
- name: Index Operations
  endpoint:
    path: /reference/restful/index-operations-v2
    method: POST
- name: Partition Operations
  endpoint:
    path: /reference/restful/partition-operations-v2
    method: POST
- name: Role Operations
  endpoint:
    path: /reference/restful/role-operations-v2
    method: POST
- name: Alias Operations
  endpoint:
    path: /reference/restful/alias-operations-v2
    method: POST
- name: User Operations
  endpoint:
    path: /reference/restful/user-operations-v2
    method: POST
- name: create_alert_rule
  endpoint:
    path: /reference/restful/create-alert-rule-v2
    method: POST
- name: delete_alert_rule
  endpoint:
    path: /reference/restful/delete-alert-rule-v2
    method: DELETE
- name: list_alert_rules
  endpoint:
    path: /reference/restful/list-alert-rules-v2
    method: GET
- name: query_cluster_metrics
  endpoint:
    path: /reference/restful/query-cluster-metrics-v2
    method: POST
- name: update_alert_rule
  endpoint:
    path: /reference/restful/update-alert-rule-v2
    method: PUT
- name: vector_operations
  endpoint:
    path: /reference/restful/vector-operations-v2
    method: POST
- name: collection_operations
  endpoint:
    path: /reference/restful/collection-operations-v2
    method: POST
- name: database_operations
  endpoint:
    path: /reference/restful/database-operations-v2
    method: POST
- name: index_operations
  endpoint:
    path: /reference/restful/index-operations-v2
    method: POST
- name: partition_operations
  endpoint:
    path: /reference/restful/partition-operations-v2
    method: POST
- name: role_operations
  endpoint:
    path: /reference/restful/role-operations-v2
    method: POST
- name: alias_operations
  endpoint:
    path: /reference/restful/alias-operations-v2
    method: POST
- name: user_operations
  endpoint:
    path: /reference/restful/user-operations-v2
    method: POST
- name: alert_rule
  endpoint:
    path: /v2/alertRules
    method: POST
    data_selector: data
    params: {}
- name: entities_delete
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params: {}
- name: alert_rule
  endpoint:
    path: /v2/alertRules/{ALERT_RULE_ID}
    method: DELETE
    params: {}
- name: entities_get
  endpoint:
    path: /v2/vectordb/entities/get
    method: POST
    data_selector: data
    params: {}
- name: alert_rules
  endpoint:
    path: /v2/alertRules
    method: GET
    data_selector: alertRules
    params:
      projectId: proj-xxxxxxxxxxxxxxxxxxxxxx
- name: hybrid_search
  endpoint:
    path: /v2/vectordb/entities/hybrid_search
    method: POST
    data_selector: data
    params: {}
- name: query_cluster_metrics
  endpoint:
    path: /v2/clusters/{CLUSTER_ID}/metrics/query
    method: POST
    data_selector: data.results
    params: {}
- name: insert
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
    params: {}
- name: update_alert_rule
  endpoint:
    path: /reference/restful/update-alert-rule-v2
    method: PUT
- name: query
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params: {}
- name: Describe Job
  endpoint:
    path: /reference/restful/describe-job-v2
    method: GET
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
- name: describe_job
  endpoint:
    path: /v2/jobs/{JOB_ID}
    method: GET
    data_selector: data
- name: upsert
  endpoint:
    path: /v2/vectordb/entities/upsert
    method: POST
    data_selector: data
- name: describe_invoice
  endpoint:
    path: /reference/restful/describe-invoice-v2
    method: GET
- name: list_invoices
  endpoint:
    path: /reference/restful/list-invoices-v2
    method: GET
- name: list_collections
  endpoint:
    path: /reference/restful/list-collections-v2
    method: POST
    data_selector: collections
- name: describe_collection
  endpoint:
    path: /reference/restful/describe-collection-v2
    method: POST
    data_selector: collection_details
- name: invoice
  endpoint:
    path: /v2/invoices/{INVOICE_ID}
    method: GET
    data_selector: data
    params:
      Authorization: Bearer {{TOKEN}}
      INVOICE_ID: inv-12312io23810o291
- name: alter_properties
  endpoint:
    path: /v2/vectordb/collections/alter_properties
    method: POST
    data_selector: data
    params: {}
- name: alter_field_properties
  endpoint:
    path: /v2/vectordb/collections/fields/alter_properties
    method: POST
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /v2/invoices
    method: GET
    data_selector: data.invoices
    params:
      pageSize: 10
      currentPage: 1
- name: usage
  endpoint:
    path: /reference/restful/query-daily-usage-v2
    method: POST
- name: compact_collection
  endpoint:
    path: /v2/vectordb/collections/compact
    method: POST
    data_selector: data
    params: {}
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
    params: {}
- name: daily_usage
  endpoint:
    path: /v2/usage/query
    method: POST
    data_selector: data.results
    params: {}
- name: describe_collection
  endpoint:
    path: /v2/vectordb/collections/describe
    method: POST
    data_selector: data
    params: {}
- name: drop_properties
  endpoint:
    path: /v2/vectordb/collections/drop_properties
    method: POST
    data_selector: data
    params: {}
- name: vector_operations
  endpoint:
    path: /reference/restful/vector-operations-v2
    method: POST
- name: collection_operations
  endpoint:
    path: /reference/restful/collection-operations-v2
    method: POST
- name: database_operations
  endpoint:
    path: /reference/restful/database-operations-v2
    method: POST
- name: index_operations
  endpoint:
    path: /reference/restful/index-operations-v2
    method: POST
- name: partition_operations
  endpoint:
    path: /reference/restful/partition-operations-v2
    method: POST
- name: role_operations
  endpoint:
    path: /reference/restful/role-operations-v2
    method: POST
- name: alias_operations
  endpoint:
    path: /reference/restful/alias-operations-v2
    method: POST
- name: user_operations
  endpoint:
    path: /reference/restful/user-operations-v2
    method: POST
- name: drop_collection
  endpoint:
    path: /v2/vectordb/collections/drop
    method: POST
    data_selector: data
    params: {}
- name: flush_collection
  endpoint:
    path: /v2/vectordb/collections/flush
    method: POST
    data_selector: data
    params:
      collectionName: test_collection
- name: vector_operations
  endpoint:
    path: /reference/restful/vector-operations-v2
    method: POST
- name: collection_operations
  endpoint:
    path: /reference/restful/collection-operations-v2
    method: POST
- name: database_operations
  endpoint:
    path: /reference/restful/database-operations-v2
    method: POST
- name: index_operations
  endpoint:
    path: /reference/restful/index-operations-v2
    method: POST
- name: partition_operations
  endpoint:
    path: /reference/restful/partition-operations-v2
    method: POST
- name: role_operations
  endpoint:
    path: /reference/restful/role-operations-v2
    method: POST
- name: alias_operations
  endpoint:
    path: /reference/restful/alias-operations-v2
    method: POST
- name: user_operations
  endpoint:
    path: /reference/restful/user-operations-v2
    method: POST
- name: get_collection_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
- name: delete_entities
  endpoint:
    path: /v2/vectordb/entities/delete
    method: POST
    data_selector: data
    params: {}
- name: get_collection_stats
  endpoint:
    path: /v2/vectordb/collections/get_stats
    method: POST
    data_selector: data
    params:
      collectionName: required
- name: entities_get
  endpoint:
    path: /v2/vectordb/entities/get
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      id: []
      outputFields: []
      partitionNames: []
- name: has_collection
  endpoint:
    path: /v2/vectordb/collections/has
    method: POST
    data_selector: data
    params: {}
- name: hybrid_search
  endpoint:
    path: /v2/vectordb/entities/hybrid_search
    method: POST
    data_selector: data
    params: {}
- name: list_collections
  endpoint:
    path: /v2/vectordb/collections/list
    method: POST
    data_selector: data
    params: {}
- name: insert
  endpoint:
    path: /v2/vectordb/entities/insert
    method: POST
    data_selector: data
- name: load_collection
  endpoint:
    path: /v2/vectordb/collections/load
    method: POST
    data_selector: data
    params: {}
- name: query_entities
  endpoint:
    path: /v2/vectordb/entities/query
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
      filter: color like "red_%"
      limit: 3
- name: refresh_load
  endpoint:
    path: /v2/vectordb/collections/refresh_load
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
- name: search
  endpoint:
    path: /v2/vectordb/entities/search
    method: POST
    data_selector: data
- name: release_collection
  endpoint:
    path: /v2/vectordb/collections/release
    method: POST
    data_selector: data
    params:
      collectionName: quick_setup
- name: upsert
  endpoint:
    path: /v2/vectordb/entities/upsert
    method: POST
    data_selector: data
    params: {}
- name: rename_collection
  endpoint:
    path: /v2/vectordb/collections/rename
    method: POST
    data_selector: data
    params: {}
- name: collection_operations
  endpoint:
    path: /reference/restful/collection-operations-v2
    method: POST
- name: database_operations
  endpoint:
    path: /reference/restful/database-operations-v2
    method: POST
- name: alter_collection_properties
  endpoint:
    path: /v2/vectordb/collections/alter_properties
    method: POST
    data_selector: data
    params: {}
- name: alter_database_properties
  endpoint:
    path: /v2/vectordb/databases/alter
    method: POST
    data_selector: data
    params:
      Authorization: Bearer {{TOKEN}}
- name: alter_field_properties
  endpoint:
    path: /v2/vectordb/collections/fields/alter_properties
    method: POST
    data_selector: data
- name: create_database
  endpoint:
    path: /v2/vectordb/databases/create
    method: POST
    data_selector: data
    params: {}
- name: describe_database
  endpoint:
    path: /v2/vectordb/databases/describe
    method: POST
    data_selector: data
    params:
      dbName: my_database
- name: compact_collection
  endpoint:
    path: /v2/vectordb/collections/compact
    method: POST
    data_selector: data
- name: create_collection
  endpoint:
    path: /v2/vectordb/collections/create
    method: POST
    data_selector: data
- name: drop_database_properties
  endpoint:
    path: /v2/vectordb/databases/drop_properties
    method: POST
    data_selector: data
    params: {}
- name: drop_database
  endpoint:
    path: /v2/vectordb/databases/drop
    method: POST
    data_selector: data
    params:
      dbName: my_database
- name: describe_collection
  endpoint:
    path: /v2/vectordb/collections/describe
    method: POST
    data_selector: data
    params: {}
- name: list_databases
  endpoint:
    path: /v2/vectordb/databases/list
    method: POST
    data_selector: data
    params: {}
- name: drop_collection_properties
  endpoint:
    path: /v2/vectordb/collections/drop_properties
    method: POST
    data_selector: data
    params: {}
- name: index_operations
  endpoint:
    path: /reference/restful/index-operations-v2
    method: GET
    data_selector: records
- name: drop_collection
  endpoint:
    path: /v2/vectordb/collections/drop
    method: POST
    data_selector: data
    params: {}
- name: alter_index_properties
  endpoint:
    path: /v2/vectordb/indexes/alter_properties
    method: POST
    data_selector: data
- name: create_index
  endpoint:
    path: /v2/vectordb/indexes/create
    method: POST
    data_selector: data
    params: {}
- name: flush_collection
  endpoint:
    path: /v2/vectordb/collections/flush
    method: POST
    data_selector: data
    params:
      collectionName: test_collection
- name: get_load_state
  endpoint:
    path: /v2/vectordb/collections/get_load_state
    method: POST
    data_selector: data
    params: {}
- name: get_collection_stats
  endpoint:
    path: /v2/vectordb/collections/get_stats
    method: POST
    data_selector: data
    params:
      collectionName: required
- name: has_collection
  endpoint:
    path: /v2/vectordb/collections/has
    method: POST
    data_selector: data
    params: {}
- name: list_collections
  endpoint:
    path: /v2/vectordb/collections/list
    method: POST
    data_selector: data
    params: {}
- name: load_collection
  endpoint:
    path: /v2/vectordb/collections/load
    method: POST
    data_selector: data
- name: refresh_load
  endpoint:
    path: /v2/vectordb/collections/refresh_load
    method: POST
    data_selector: data
    params: {}
- name: release_collection
  endpoint:
    path: /v2/vectordb/collections/release
    method: POST
    data_selector: data
    params: {}
- name: rename_collection
  endpoint:
    path: /v2/vectordb/collections/rename
    method: POST
    data_selector: data
    params: {}
- name: databases
  endpoint:
    path: /reference/restful/list-databases-v2
    method: POST
    data_selector: records
- name: alter_database_properties
  endpoint:
    path: /v2/vectordb/databases/alter
    method: POST
    data_selector: data
    params: {}
- name: create_database
  endpoint:
    path: /v2/vectordb/databases/create
    method: POST
    data_selector: data
    params: {}
- name: describe_database
  endpoint:
    path: /v2/vectordb/databases/describe
    method: POST
    data_selector: data
    params:
      dbName: my_database
- name: drop_properties
  endpoint:
    path: /v2/vectordb/databases/drop_properties
    method: POST
    data_selector: ''
    params: {}
- name: drop_database
  endpoint:
    path: /v2/vectordb/databases/drop
    method: POST
    data_selector: data
    params:
      dbName: my_database
- name: list_databases
  endpoint:
    path: /v2/vectordb/databases/list
    method: POST
    data_selector: data
- name: index_operations
  endpoint:
    path: /reference/restful/index-operations-v2
    method: GET
    data_selector: operations
- name: alter_index_properties
  endpoint:
    path: /v2/vectordb/indexes/alter_properties
    method: POST
    data_selector: data
    params: {}
- name: create_index
  endpoint:
    path: /v2/vectordb/indexes/create
    method: POST
    data_selector: data
notes:
- When using the Control Plane APIs, you need to use a valid API key to authenticate
  your requests.
- When using the Data Plane APIs, you can use either a valid API key or a valid pair
  of cluster username and password to authenticate your requests.
- A valid token could be either an API key, or a colon-joined cluster username and
  password.
- A valid token could be either an API key, or a colon-joined cluster username and
  password, as in `user:pass`.
- Zilliz BYOC is currently available in General Availability. For access and implementation
  details, please contact Zilliz Cloud sales.
- Zilliz BYOC is currently available in General Availability.
- To use the BYOC solution, you need to deploy data plane components in your VPC.
- Zilliz Cloud services are available on Azure, starting with the East US region.
- This release includes a variety of enhancements and features, including expanded
  region support and enhanced usability features.
- Contact Zilliz Support to request access to these features.
- Contact Zilliz Cloud support for access and implementation details.
- Supports new cloud regions and allows secure cluster access through private links.
- Enhanced usability features, including migration and serverless instance management.
- Bring Your Own Cloud (BYOC) is a deployment option for organizations to host applications
  and data in their own cloud accounts instead of using Zilliz Cloud's infrastructure.
- For access and implementation details, please contact Zilliz Cloud sales.
- Contact Sales to Enable BYOC
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Proper environment isolation and access control are essential in enterprise application
  development and deployment.
- Ensure that you have obtained a Zilliz Cloud API key.
- Requires setup of Zilliz Cloud API key with sufficient permissions
- Zilliz Cloud implements vector-based similarity searches and provides multiple optimizations
  to improve search efficiency and performance.
- Ensure that the stage and the cluster are within the same cloud region.
- To import, merge, or migrate data from a stage to a cluster, ensure that the stage
  and the cluster are within the same cloud region.
- Only the AWS us-west-2 region is currently supported for cluster deployment.
- To create a cluster with more than 32 CUs, contact Zilliz.
- Scaling may cause slight service jitter.
- A scale-down request only succeeds if current data volume < 80% of the CU capacity
  of the new CU size.
- This feature is currently exclusively available to Dedicated (Enterprise) clusters.
- Updating the replica configurations may lead to slight service jitter.
- Dynamic and scheduled scaling settings are not included in backups.
- RESTful API does not support persistent connections.
- RESTful API does not support switching databases without disconnecting.
- Zilliz to Zilliz migration allows you to transfer data between Zilliz Cloud clusters.
- Zilliz Cloud offers Milvus as a fully managed, cloud-hosted solution for users who
  want to use the Milvus vector database without the need to manage the infrastructure
  themselves.
- Zilliz Cloud pulls data from your data sources and sends it to target clusters using
  a set of fixed IP addresses.
- Zilliz Cloud provides migration options from external sources such as Milvus, Elasticsearch,
  and PostgreSQL, as well as cross-cluster migrations within the same or different
  organizations, enabling efficient data integration and management.
- Users must be organization owners or project admins to manage notification channels.
- For organization alerts, creating new alert targets is not supported.
- Data backup and restore for your data stored in Zilliz Cloud clusters.
- Zilliz Cloud offers a dashboard for observing cluster-specific metrics.
- For organization alerts, you can only edit existing alert targets; creating new
  ones is not supported.
- Only one manual backup can be active or pending at a time.
- If automatic backups are enabled, manual backups cannot start while an automatic
  backup is in progress.
- Automatic backups apply to the entire cluster—backing up individual collections
  automatically is not supported.
- Backup duration depends on the size of your data.
- RBAC restoration is currently supported only via the web console; the RESTful API
  does not support it yet.
- Manual backups cannot start while an automatic backup is in progress.
- Automatic backups are disabled by default.
- Manual backups are retained permanently, even if the cluster is deleted.
- Automatic backups are deleted automatically after their retention period ends.
- You must be an Organization Owner to manage organization settings.
- Deleting an organization cannot be undone.
- Automatic backups are deleted automatically after their retention period ends or
  when the associated cluster is deleted.
- Ensure that the time span between your chosen start date and end date does not exceed
  30 days.
- You must be an Organization Owner to use recycle bin.
- Each organization can have up to 100 users.
- Projects serve as a logical container within an organization, grouping clusters
  and related resources.
- You can create a maximum of 100 projects in each organization.
- Each organization contains a default project. The default project cannot be deleted.
- Default maintenance window is between 2 AM and 4 AM local time
- Deleting an organization cannot be undone
- Each time you can invite one or more users with the same role to join the project.
- To use recycle bin, you must be an Organization Owner.
- Currently, you can only cancel jobs that are in the state of Pending or In Progress.
- Currently, you can only retry failed import jobs.
- Once you leave a project, your access to the project and associated resources will
  be revoked.
- Two-way TLS (mTLS) is currently not available.
- Authentication serves as a gateway to verify one's identity during the login process.
- MFA is an effective measure against unauthorized access and is recommended for all
  users.
- To cancel a job, you must be an Organization Owner or a Project Admin.
- Contact sales to enable BYOC.
- For the maximum token usage of all pipelines in an organization, the token usage
  of a dropped pipeline is still included in the overall count.
- Potential issues related to data security on the Zilliz Cloud platform, including
  certificate authority, certificate validity period, procedures for checking certificate
  expiration, supported Transport Layer Security (TLS) versions, and authentication
  methods.
- Zilliz Cloud clusters come with TLS enabled, so to connect successfully to your
  cluster, ensure that you include secure in the connect parameters and set it to
  true.
- The number of collections allowed in a cluster varies with the cluster CU size.
- Currently, the rate limit for loading collection requests on Zilliz Cloud is 1 per
  second.
- Can use short-term credentials when importing data from an object storage service.
- When inserting or upserting data, you will receive this error because your data
  exceeds the cluster CU capacity.
- Zilliz Cloud clusters come with TLS enabled.
- Zilliz Cloud currently supports only one-way TLS authentication and does not support
  two-way TLS authentication.
- The failure is caused due to insufficient memory in your cluster.
- Partition name can contain only letters, numbers, underscores (“_”), and hyphens(“-”),
  and cannot start with a number or a hyphen.
- A well-designed schema is essential as it abstracts the data model and decides if
  you can achieve the business objectives through a search.
- Every row of data inserted into the collection must follow the schema, it helps
  maintain data consistency and long-term quality.
- Uses session tokens for importing data from object storage services.
- When migrating your Milvus codebase to Zilliz Cloud, you do not need to change the
  index type used manually. Zilliz Cloud automatically applies AUTOINDEX when creating
  indexes.
- Zilliz Cloud supports integration with LangChain.
- Zilliz Cloud uses Let's Encrypt to issue and sign the certificates for Zilliz Cloud
  clusters hosted on AWS, Google Cloud Platform (GCP), and Microsoft Azure.
- Zilliz Cloud employs AWS Certificate Manager (ACM) to issue and rotate certificates
  for Zilliz Cloud clusters on AWS.
- The certificate issued for any of your Zilliz Cloud clusters will be valid for 90
  days from the date of issue and will be automatically rotated 30 days before the
  expiration date.
- For security reasons, Zilliz Cloud supports only TLS 1.2 and TLS 1.2+. TLS 1.0 and
  TLS 1.1 are not supported.
- You can create a maximum of 16,384 collections depending on your cluster plan.
- For large-scale multi-tenancy, consider using partition-based or partition-key-based
  multi-tenancy.
- A collection schema assembles a table in a relational database.
- A well-designed schema is essential for data consistency and long-term quality.
- An array field stores a list of elements. The data types of all elements in an array
  field should be the same.
- Collections can be created with or without index parameters.
- You can only create a maximum of 16,384 collections depending on your cluster plan.
- Zilliz Cloud enables mmap on all collections by default, allowing raw field data
  to be mapped into memory.
- Zilliz Cloud does not load the collection upon its creation if created without index
  parameters.
- You can create a collection by defining its schema, index parameters, metric type,
  and whether to load it upon creation.
- Zilliz Cloud provides a fully managed Milvus service.
- Backups can be created manually or automatically.
- To avoid unintentional usage of your credits, you are recommended to manually suspend
  clusters that are not in use.
- Zilliz Cloud provides a range of cluster plans to suit diverse requirements.
- Always use the same method you chose for registration when logging in to your Zilliz
  Cloud account.
- Selecting the right Compute Unit (CU) is a crucial step when creating a cluster
  in Zilliz Cloud.
- A collection is a table used to hold vector embeddings and their metadata.
- Uses OAuth2 for authentication.
- ZILLIZ_CLOUD_TOKEN must be replaced with a valid Zilliz Cloud API key with sufficient
  permissions.
- MCP_SERVER_PORT defaults to 8000 when using HTTP/SSE transports.
- Zilliz Cloud implements vector-based similarity searches.
- This chapter covers the common procedures for you to extract, transform, and load
  data from external data sources and use it with Zilliz Cloud.
- Each user is permitted one free cluster.
- For additional clusters, opt for the Serverless or Dedicated plans.
- The `upsert` operation provides a convenient way to insert or update entities in
  a collection.
- Default databases cannot be dropped.
- Before dropping a database, you need to drop all collections in the database first.
- Common procedures for you to extract, transform, and load data from external data
  sources and use it with Zilliz Cloud.
- To drop a database, include the database name in the request body.
- External migration simplifies the process of moving your vector databases and search
  systems to Zilliz Cloud.
- Zilliz Cloud provides various cluster plan tiers to accommodate the distinct business
  needs of users.
- Alert notifications in Zilliz Cloud keep you informed about events occurring within
  your clusters.
- To unlock a range of advanced metrics, upgrade your plan tier.
- A continuous connection cannot be established using RESTful APIs due to the HTTP
  protocol's unidirectional communication mode.
- This feature is exclusively available to clusters in the Standard and Enterprise
  plans.
- Scheduled scaling is only available on the web console.
- Updating the replica configurations may lead to slight service jitter. Please exercise
  caution.
- Reliable way to recover from incidents, revert unintended changes, or clone a cluster
  for testing with minimal disruption.
- Uses Bearer token for authorization
- The backup and restore feature is exclusively available to Dedicated clusters.
- Zilliz Cloud provides migration options from external sources such as Milvus, Elasticsearch,
  and PostgreSQL, as well as cross-cluster migrations within the same or different
  organizations.
- Migrating from a free-tier cluster to a paid plan.
- Sharing data across organizations securely.
- Reorganizing infrastructure for performance optimization.
- This feature is in Private Preview for clusters on the Dedicated-Enterprise plan.
- Alert notifications can be sent to specified user email addresses.
- Custom notification channels using webhooks can be set up.
- Currently, the maintenance window setting is global and applies to all clusters
  hosted on Zilliz Cloud.
- The default maintenance window is between 2 AM and 4 AM local time.
- For free clusters, only read & write vCUs are available.
- The time difference between the start and the end time should be greater than 10
  minutes.
- The load status of the collections in the cluster will be retained.
- You can create multiple projects tailored to different aspects of your business.
- 'Currently, you can only cancel the following types of jobs that are in the state
  of Pending or In Progress: Backup jobs, Migration jobs (excluding zero downtime
  migration), Export backup file jobs.'
- Whitelisting on Zilliz Cloud serves as a robust security layer at the project level.
- Zilliz Cloud offers private access to your cluster through a private link.
- Zilliz Cloud authenticates your identity using a token.
- Audit logging allows administrators to track and monitor user-driven operations
  and API calls on Zilliz Cloud clusters.
- Zilliz Cloud Pipelines will be discontinued by the end of Q2 2025 and replaced by
  a new feature, 'Data In, Data Out,' to streamline embedding generation in both Milvus
  and Zilliz Cloud.
- As of December 24, 2024, new user registrations are no longer accepted.
- You can only join other users' organizations by invitation.
- To restore a cluster in the recycle bin, you need to add a payment method.
- Zilliz Cloud Pipelines will be discontinued by the end of Q2 2025.
- One Ingestion pipeline maps to exactly one vector database collection on Zilliz
  Cloud.
- Uses an API key for authentication.
- Zilliz Cloud allows you to integrate with third-party services.
- Zilliz Cloud Pipelines will be discontinued by the end of Q2 2025 and replaced by
  a new feature, “Data In, Data Out,” to streamline embedding generation in both Milvus
  and Zilliz Cloud.
- Current users can continue using the service within the $20 monthly free allowance
  until the sunset date; however, no SLA is provided.
- Whitelisting on Zilliz Cloud serves as a robust security layer at the project level,
  extending its benefits to every cluster within a specified project.
- Uses OAuth0 for secure user authentication
- Two-way TLS (mTLS) is currently not available
- Zilliz Cloud implements Role-Based Access Control (RBAC) to finely control access
  to resources in Zilliz Cloud.
- The Marketplace subscription is only a payment method and does not affect the cloud
  service provider when creating a cluster.
- Taxes on the invoices are calculated based on the billing address you provide.
- If you are unable to complete the signup process, you can retry by navigating to
  Your Orders page in the GCP Marketplace.
- When auto-renew is on, you will be automatically subscribed to Zilliz Cloud on Azure
  at the end of the contract duration.
- When auto-renew is off, your subscription will end at the end of the contract duration
  and your Zilliz Cloud organization and account will be automatically unlinked from
  this Azure Marketplace subscription.
- Currently, you can only contact us to add funds to your Advance Pay balance.
- By default, monitoring for advance pay balance is disabled.
- The List Invoices RESTful API is currently in public preview.
- Uses OpenAI gpt-3.5-turbo for LLM capabilities
- Charges calculated with 10 decimal places
- All numeric values returned with exactly 10 decimal places
- Usage details obtained from the RESTful API are precise to 8 decimal places.
- No SLA is provided for the service.
- Zilliz Cloud automatically creates 1 organization upon successful account registration.
  If you need more organizations, please create a support ticket.
- A user can join multiple organizations.
- Each user can create up to 100 projects in 1 organization.
- An organization can have up to 100 organization users in total.
- A cluster can have up to 100 users in total.
- A cluster can have up to 20 custom roles in total.
- Each organization can contain a maximum of 100 customized API keys for optimal resource
  utilization and security.
- Only 1 cluster is available for the Free cluster plan. You can drop an existing
  cluster and replace it with a new one if required.
- The maximum number of clusters in an organization depends on the total amount of
  cluster CUs.
- The upper limits for dedicated cluster capacity depend on the CU type and size used.
- The maximum retention period for automatically created backups is 30 days.
- In order to manage payment and billing, you need to be an Organization Owner.
- Credits and Advance Pay can be combined with either a credit card or a Marketplace
  subscription (AWS/GCP/Azure). However, it is not possible to set both a credit card
  and a Marketplace subscription simultaneously.
- Cloud service prices often vary across providers and regions.
- Currently, Zilliz Cloud does not support removing payment credit card on the web
  console.
- Free clusters can handle 1 million 768-dimensional vectors.
- When suspended, you will only be charged for storage, not computing.
- Please rest assured that canceling the subscription will not delete your Zilliz
  Cloud data.
- We recommend completing the operations within 1 hour to avoid service interruption.
- A free cluster can have up to 5 collections.
- A Serverless cluster can have up to 100 collections.
- The rate limit for loading collection requests on Zilliz Cloud is 1 per second.
- Can use short-term credentials when importing data from an object storage service
- When auto-renew is on, you will be automatically subscribed to Zilliz Cloud on Azure
  at the end of the contract duration. When auto-renew is off, your subscription will
  end at the end of the contract duration and your Zilliz Cloud organization and account
  will be automatically unlinked from this Azure Marketplace subscription.
- Currently, Ingestion Pipelines support local files and files stored on AWS S3 and
  Google Cloud Storage.
- You can easily migrate data from Elasticsearch on the Zilliz Cloud via the Zilliz
  Cloud web console.
- All numeric values (e.g., Unit Price, Usage, Usage Amount) are always returned with
  exactly 10 decimal places.
- Usage details obtained from the RESTful API are precise to 10 decimal places.
- OAuth 2.0 is available for the Serverless, Dedicated (Standard), Dedicated (Enterprise),
  and BYOC plans.
- Data encryption in transit and at rest is available across all plans.
- Only 1 cluster is available for the Free cluster plan.
- The maximum number of organizations is 1.
- Each organization can have a maximum of 100 API keys.
- Please submit a request at the Zilliz cloud support portal for technical support.
- Uses OAuth2 with refresh token — requires setup of connected app in Zilliz Cloud
- The number of collections allowed in a Dedicated cluster varies with the cluster
  CU size.
- You can have a maximum of 64 fields in 1 collection.
- Uses basic authentication with username and password
- Pipelines help create high-quality vector embeddings, which serve as the foundation
  for relevant semantic search results.
- We recommend suspending unused clusters to save computing costs.
- Your account will be locked after 5 failed login attempts.
- If you are a free-trial user, your organization can be frozen due to insufficient
  or expired free credits.
- For large-scale multi-tenancy, consider using partition-based strategies.
- Designed for organizations prioritizing custom infrastructure, enhanced data protection,
  and compliance.
- Zilliz Cloud supports data import from various storage options, including AWS S3,
  GCP Storage, and Azure Blob Storage, as well as formats such as Parquet (recommended),
  JSON, and NumPy files.
- ANN searches depend on pre-built indexes, and the search throughput, memory usage,
  and search correctness may vary with the index types you choose.
- To reduce the learning curve, Zilliz Cloud provides AUTOINDEX.
- Uses API key for authentication
- Using multiple vectors may improve search performance.
- You can create a collection without any index parameters and add them afterward.
- Search results are ranked by similarity scores in descending order.
- You can create a separate collection for each tenant.
- Zilliz Cloud provides AUTOINDEX for optimized index parameters.
- Search results are ranked by similarity scores.
- Limiting the number of partitions involved in the search improves search performance.
- Search results are ranked by their similarity scores to the query vector in descending
  order.
- Reduce the number of partitions involved in the search improves search performance.
- Milvus ranks the search results by their similarity scores to the query vector in
  descending order.
- Reducing the number of partitions involved in the search improves search performance.
- Reduces search scope to specific partitions improves search performance.
- Search results are ranked by similarity scores to the query vector in descending
  order.
- Includes support for partitioned searches.
- To improve search performance, specify target partition names in the search request.
- Uses vector data for search requests
- The limit parameter specifies the number of results to return
- Uses API key for authentication — ensure to include in the header.
- Search can be performed with multiple vectors.
- Output fields can be specified to include additional data.
- Uses API key for authentication — requires setup of cluster endpoint
- Zilliz Cloud provides AUTOINDEX for optimized indexing.
- Reducing the number of partitions improves search performance.
- Search can be restricted to specific partitions for performance.
- Uses API key for authentication — requires setup of cluster
- Search performance improves when limiting the search scope to specific partitions.
- Search performance improves by narrowing the search scope to specific partitions.
- Authorization token must be provided in the header as a Bearer token.
- The similarity score is also termed the distance to the query vector.
- The number of results to return is defined by the limit parameter.
- Supports searching with multiple vectors.
- Performance improves when searching within specific partitions.
- Search performance improves when specifying partition names.
- Zilliz Cloud provides AUTOINDEX functionality for optimized index parameters.
- Using Bearer Token for authorization
- Search performance improves by reducing the number of partitions involved in the
  search.
- Search can be limited to specific partitions to improve performance
- Output fields can be specified to include additional entity information
- Includes primary field values and similarity distances/scores by default.
- コレクションスキーマがリレーショナルデータベース内のテーブルを組み立て、Zilliz Cloudがコレクション内のデータをどのように整理するかを定義します。
- よく設計されたスキーマは、データモデルを抽象化し、検索を通じてビジネス目標を達成できるかどうかを決定するために不可欠です。
- Search can be performed on multiple vectors or single vectors.
- Search performance improves by specifying partitions.
- A standard insert operation with a primary key that already exists in the collection
  will not overwrite the old entry. Instead, it will create a new, separate entity
  with the same primary key. This can lead to unexpected search results and data redundancy.
- If your use case involves updating existing data or you suspect that the data you
  are inserting may already exist, it is highly recommended to use the upsert operation.
- Uses OAuth2 for authentication
- Dense vectors are used for semantic search and recommendation systems.
- An index must be created for the vector field to accelerate semantic searches.
- Ensure that the dimensionality of the dense vectors being inserted matches the `dim`
  value defined when adding the dense vector field.
- Uses an API key for authentication
- Binary vectors must have dimensions that are multiples of 8.
- Binary vectors must be provided in the form of a byte array.
- Reduces search performance by limiting search scope to specific partitions.
- Zilliz Cloud supports sparse vectors, dense vectors, and binary vectors.
- To enable Zilliz Cloud to generate sparse vector embeddings from a specified text
  field during data insertion, an additional step involving a function must be taken.
- Limit parameter controls the number of results returned.
- The sum of limit and offset in a single ANN search should be less than 16,384.
- Collection name must be unique within the database.
- Ensure proper index parameters are set before inserting data.
- Zilliz Cloud supports null values and default values for VARCHAR fields.
- Use 'Bearer' token for authentication
- Ensure collection name is specified in requests
- Uses a filter expression to query data based on conditions.
- Zilliz Cloud supports null values and default values for boolean and number fields.
- If you set enable_dynamic_fields=True when defining the schema, Zilliz Cloud allows
  you to insert scalar fields that were not defined in advance.
- You can also enable the dynamic field feature to store undeclared fields flexibly,
  but it's not required for JSON fields to function.
- A standard insert operation with a primary key that already exists in the collection
  will not overwrite the old entry.
- Besides dense vectors, Zilliz Cloud also supports sparse vectors and binary vectors.
- Indexing is mandatory for vector fields but optional for scalar fields.
- Ensure the dimensionality of the dense vectors matches the defined dim value.
- Binary vectors must be a multiple of 8 as they are packed into bytes.
- Dynamic field allows flexible data structure.
- Indexing dynamic field keys is optional.
- Dynamic field allows evolving structures without altering schema.
- In addition to sparse vectors, Zilliz Cloud also supports dense vectors and binary
  vectors.
- Uses Bearer token for authentication.
- Uses dynamic field to store fields not explicitly defined in the schema
- Dynamic field keys are not included in results by default and must be explicitly
  requested.
- Supports null values and default values for boolean and number fields.
- Only scalar fields, excluding the primary field, support default values and the
  nullable attribute.
- JSON and Array fields do not support default values.
- Default values or the nullable attribute can only be configured during collection
  creation and cannot be modified afterward.
- Scalar fields with the nullable attribute enabled cannot be used as group_by_field
  in Grouping Search.
- Fields marked as nullable cannot be used as partition keys.
- When creating an index on a scalar field with the nullable attribute enabled, null
  values will be excluded from the index.
- The query method, when used without any filtering conditions, retrieves all entities
  in the collection, including those with null values.
- To restrict the number of returned entities, the limit parameter must be specified.
- Uses default values when fields are omitted or set to null.
- Each collection consists of only one primary field. Once set during collection creation,
  you cannot change the primary field or alter its properties.
- Each collection can have only one partition key. Once set during collection creation,
  you cannot change the partition key.
- Zilliz Cloud allows you to specify the search data model through a collection schema.
- Designing the right fields within a collection schema is key to enabling effective
  retrieval.
- Dynamic field allows for flexible data structures
- Indexing dynamic field keys is optional
- Dynamic field is a hidden JSON field named $meta that stores fields not explicitly
  defined in the schema.
- AUTOINDEX is a proprietary index type available on Zilliz Cloud that can help you
  achieve better search performance.
- Zilliz Cloud automatically applies AUTOINDEX during index creation.
- AUTOINDEXは、Zilliz Cloud上で利用可能な独自のインデックスタイプであり、検索パフォーマンスを向上させるのに役立ちます。
- MilvusのコードベースをZilliz Cloudに移行する際、インデックスの種類を手動で変更する必要はありません。Zilliz Cloudはインデックス作成時に自動的にAUTOINDEXを適用します。
- The `query` method, when used without any filtering conditions, retrieves all entities
  in the collection, including those with null values.
- Uses OAuth2 — requires setup of connected app in Zilliz Cloud
- Use the V2 Version of these API endpoints, and new features and improvements will
  be added to the V2 version later on.
- The V1 version will be deprecated soon.
- Each collection consists of only one primary field.
- Each collection can have only one partition key.
- The endpoints on the control plane currently supports up to 20 requests per second
  per user per endpoint.
- AUTOINDEX is automatically applied when migrating Milvus codebase to Zilliz Cloud.
- No need to manually change index types during migration.
- AUTOINDEX is automatically applied during index creation on Zilliz Cloud.
- New connectors for easy data ingestion from sources like Object Storage
- Improved user experience for data import functionalities
- You are advised to use the V2 Version of these API endpoints, and new features and
  improvements will be added to the V2 version later on.
- This set of APIs provides a way to extract, load, and transform data.
- The current user should be an organization owner or a billing admin
- You need to fill in `${CLUSTER_ENDPOINT}` with that of your Zilliz Cloud cluster.
- To get the endpoint, use the Describe Cluster V2 API to extract the values from
  the responses.
- It is recommended to call compact collection after inserting a large amount of data.
- The current user should be an organization owner or a billing admin.
- You need to fill in '${CLUSTER_ENDPOINT}' with that of your Zilliz Cloud cluster.
- Setting the collection name to a non-existing collection results in an error.
- Setting the database name to a non-existing database results in an error.
errors:
- '401 Unauthorized: Check API key or token'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or credentials'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key or token validity'
- '0: successfully submitted. Cluster is being upgraded.'
- '400 Bad Request: Check your request format or parameters.'
- '401 Unauthorized: Recheck your auth token.'
- 'Unauthorized: Recheck OAuth token.'
- 'WARNING: Deleting an organization cannot be undone'
- Currently, you can only cancel the following types of jobs that are in the state
  of Pending or In Progress
- quota exceeded[reason=disk quota exceeded, please allocate more resources
- connection timeout error
- Insufficient memory in your cluster.
- 'ECONNRESET: Upgrade to the latest version of Milvus NodeJS SDK which supports channelOptions.'
- Non-whitelisted local IP addresses
- '1 REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '2 QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the request parameters and try again.'
- '401 Unauthorized: Ensure your token is valid.'
- '404 Not Found: The specified collection does not exist.'
- 'Error 400: Invalid request format.'
- 'Error 404: Collection not found.'
- 'Error 500: Internal server error.'
- 'Error creating collection: check schema and index parameters.'
- '400 Bad Request: Check request parameters for correctness.'
- '404 Not Found: Verify the collection name or endpoint.'
- 'Unauthorized: Recheck API Key or token expiration'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Recheck API key or permissions'
- Manual backups cannot start while an automatic backup is in progress.
- Notifications of payment failures or other system malfunctions requiring immediate
  attention or action.
- Action cannot be undone when deleting an organization.
- 'Unauthorized: Check your authentication token.'
- 'ECONNRESET: Upgrade to the latest version of Milvus NodeJS SDK which supports channelOptions'
- 'Insufficient Permissions: This can happen when you do not have sufficient privileges.'
- 'Marketplace Linked: This can happen when all your organizations are already linked
  to Marketplace subscriptions.'
- 'LoadStateNotLoad: The collection has not been loaded.'
- 'Success: Collection created successfully.'
- 'LoadStateLoaded: Collection has been loaded'
- 'LoadStateNotLoad: Collection has not been loaded'
- '400 Bad Request: Check the request format or parameters.'
- '401 Unauthorized: Ensure valid token is provided.'
- '404 Not Found: Verify the endpoint exists.'
- '401 Unauthorized: Recheck token or permissions'
- '401 Unauthorized: Recheck API token or permissions'
- '401 Unauthorized: Recheck API token.'
- '401 Unauthorized: Recheck API key or token.'
- '401 Unauthorized: Recheck API key validity.'
- '400 Bad Request: Check request format and parameters.'
- '400 Bad Request: Check the request parameters and JSON format.'
- '401 Unauthorized: Ensure the token is valid and included.'
- '429 Too Many Requests: Rate limit exceeded; try again later.'
- '401 Unauthorized: Check API Key or token'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck OAuth token'
- '401 Unauthorized: Recheck token expiration'
- '401 Unauthorized: Recheck token or authentication setup'
- '401 Unauthorized: Recheck API key or token'
- 'Error in search: check collection name and parameters.'
- '401 Unauthorized: Recheck token.'
- '401 Unauthorized: Recheck API token or endpoint.'
- 'Error: handle error'
- Handle error when search request fails.
- '400 Bad Request: Check the request format and required fields'
- '401 Unauthorized: Recheck API token validity'
- '500 Internal Server Error: Try again later or contact support'
- '401 Unauthorized: Recheck API keys or token expiration'
- Handle errors during search operation.
- '401 Unauthorized: Recheck token or authorization setup'
- '401 Unauthorized: Check token validity'
- '400 Bad Request: Check your request parameters and body.'
- '401 Unauthorized: Recheck OAuth token.'
- '0: Successful operation'
- '1: Failed operation'
- '401 Unauthorized: Recheck token validity'
- '401 Unauthorized: Recheck Bearer token validity.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your authentication token.'
- '404 Not Found: Ensure the resource exists.'
- '400 Bad Request: Check request format and parameters'
- '400 Bad Request: Check the data format and required fields.'
- '401 Unauthorized: Recheck token or endpoint.'
- '401 Unauthorized: Recheck your token.'
- 'ERROR: Throttle API calls or reduce frequency'
- 'ERROR: Break down filters or add selectivity'
- '400 Bad Request: Verify request structure and parameters'
- Returns an error message.
- Error message for non-existing cluster, database, or collection.
- 'code: integer, messages: string'
- '21119: The apikey is illegal.'
- '200: SUCCESS'
- 'FAILURE: Returns an error message.'
- '200: SUCCESS - Returns a list of stages.'
- 'code: integer, Error message.'
- 'code: integer'
- code integer
- messages string
- 'FAILURE: A failure response.'
- Error message.
- Response code.
- 'code: 0 - SUCCESS'
- 'code: integer - Error message.'
- 'code integer: Response code.'
- 'messagestring: Error message.'
- '401 Unauthorized: Error message.'
- 200 - SUCCESS
- FAILURE - Returns an error message.
- 'code: integer - FAILURE'
- SUCCESS
- FAILURE
- 'SUCCESS: Returns an empty response.'
- 'ERROR: Returns an error message.'
- 'code: integer - Response code.'
- 'messages: string - Error message.'
- 'code: 0, SUCCESS'
- '401 Unauthorized: Recheck API key or privileges'
- 'code: integer, message: string'
- 'SUCCESS: Code 0 indicates a successful request.'
- 'FAILURE: Returns an error message with response code.'
- '401 Unauthorized: Recheck API key privileges'
- Setting this to a non-existing database results in an error.
- Setting this to a non-existing collection results in an error.
- messagestring - Error message.
- Returns an error message if the specified database or collection does not exist.
- Returns an error message if the database or collection does not exist.
- Returns an error message if setting dbName or collectionName to a non-existing database
  or collection.
- 'SUCCESS: Successful response with results.'
- 'Code: 0 - SUCCESS'
- 'Code: integer - Error message.'
- 'FAILURE: Error message.'
- 'SUCCESS: Response code 0, empty response.'
- Setting collectionName to a non-existing collection results in an error.
- Setting dbName to a non-existing database results in an error.
- Returns an error message if the collection or database does not exist.
- 'SUCCESS: { "code": 0, "data": {} }'
- 'SUCCESS: code 0, data {}'
- 'message: string - Error message.'
- Setting dbName or collectionName to a non-existing value results in an error.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - Bearer
  - NamedCredential
client:
  base_url: https://api.cloud.zilliz.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    accept: application/json
    content-type: application/json
source_metadata: null
