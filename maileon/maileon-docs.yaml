resources:
- name: article_editor
  endpoint:
    path: /api/article_editor
    method: GET
    data_selector: articles
    params: {}
- name: media_templates
  endpoint:
    path: /api/media_templates
    method: GET
    data_selector: media
    params: {}
- name: dispatching
  endpoint:
    path: /1.0/mailings/:mailingid/dispatching
    method: GET
- name: active_triggers
  endpoint:
    path: /mailings/active-triggers
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: mailings
  endpoint:
    path: /mailings
    method: GET
- name: webhook
  endpoint:
    path: /1.0/webhooks/:id
    method: PUT
    data_selector: null
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: mailings
  endpoint:
    path: /mailings
    method: GET
- name: ratings
  endpoint:
    path: /{MerchantId}.rss
    method: GET
    data_selector: items
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: mailings
  endpoint:
    path: /mailings
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: contactfilters
  endpoint:
    path: /contactfilters
    method: GET
- name: targetgroups
  endpoint:
    path: /targetgroups
    method: GET
- name: reports
  endpoint:
    path: /reports
    method: GET
- name: mailings
  endpoint:
    path: /1.0/mailings
    method: POST
- name: mailings_copy
  endpoint:
    path: /1.0/mailings/:mailingid/copy
    method: POST
- name: mailings_delete
  endpoint:
    path: /1.0/mailings/:mailingId
    method: DELETE
- name: mailings_filter_schedule_time
  endpoint:
    path: /1.0/mailings/filter/scheduletime
    method: GET
- name: mailings_filter_states
  endpoint:
    path: /1.0/mailings/filter/states
    method: GET
- name: mailings_filter_types
  endpoint:
    path: /1.0/mailings/filter/types
    method: GET
- name: mailings_filter_subject
  endpoint:
    path: /1.0/mailings/filter/subject
    method: GET
- name: mailings_filter_creator_name
  endpoint:
    path: /1.0/mailings/filter/creatorname
    method: GET
- name: mailings_filter_keywords
  endpoint:
    path: /1.0/mailings/filter/keywords
    method: GET
- name: mailings_name_by_name
  endpoint:
    path: /1.0/mailings/name/:mailingName
    method: GET
- name: mailings_get_by_id
  endpoint:
    path: /1.0/mailings/:mailingid/name
    method: GET
- name: mailings_set_name
  endpoint:
    path: /1.0/mailings/:mailingid/name
    method: POST
- name: mailings_get_state
  endpoint:
    path: /1.0/mailings/:mailingid/state
    method: GET
- name: mailings_is_sealed
  endpoint:
    path: /1.0/mailings/:mailingid/sealed
    method: GET
- name: mailings_send_now
  endpoint:
    path: /1.0/mailings/:mailingid/sendnow
    method: POST
- name: mailings_get_tracking_strategy
  endpoint:
    path: /1.0/mailings/:mailingid/settings/trackingstrategy
    method: GET
- name: mailings_set_tracking_strategy
  endpoint:
    path: /1.0/mailings/:mailingid/settings/trackingstrategy
    method: POST
- name: mailings_get_max_content_size
  endpoint:
    path: /1.0/mailings/:mailingid/settings/maxcontentsize
    method: GET
- name: mailings_get_speed_level
  endpoint:
    path: /1.0/mailings/:mailingid/settings/speedlevel
    method: GET
- name: mailings_set_speed_level
  endpoint:
    path: /1.0/mailings/:mailingid/settings/speedlevel
    method: POST
- name: mailings_get_tags
  endpoint:
    path: /1.0/mailings/:mailingid/settings/tags
    method: GET
- name: mailings_set_tags
  endpoint:
    path: /1.0/mailings/:mailingid/settings/tags
    method: POST
- name: mailings_get_locale
  endpoint:
    path: /1.0/mailings/:mailingid/settings/locale
    method: GET
- name: mailings_get_subject
  endpoint:
    path: /1.0/mailings/:mailingid/contents/subject
    method: GET
- name: mailings_set_subject
  endpoint:
    path: /1.0/mailings/:mailingid/contents/subject
    method: POST
- name: mailings_get_preview_text
  endpoint:
    path: /1.0/mailings/:mailingid/contents/previewtext
    method: GET
- name: mailings_set_preview_text
  endpoint:
    path: /1.0/mailings/:mailingid/contents/previewtext
    method: POST
- name: mailings_get_sender_address
  endpoint:
    path: /1.0/mailings/:mailingid/contents/sender
    method: GET
- name: mailings_set_sender_address
  endpoint:
    path: /1.0/mailings/:mailingid/contents/sender
    method: POST
- name: mailings_get_sender_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/senderalias
    method: GET
- name: mailings_set_sender_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/senderalias
    method: POST
- name: mailings_get_reply_to_address
  endpoint:
    path: /1.0/mailings/:mailingid/settings/replyto
    method: GET
- name: mailings_set_reply_to_address
  endpoint:
    path: /1.0/mailings/:mailingid/settings/replyto
    method: POST
- name: mailings_get_recipient_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/recipientalias
    method: GET
- name: mailings_set_recipient_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/recipientalias
    method: POST
- name: mailings_get_html_content
  endpoint:
    path: /1.0/mailings/:mailingid/contents/html
    method: GET
- name: mailings_set_html_content
  endpoint:
    path: /1.0/mailings/:mailingid/contents/html
    method: POST
- name: mailings_get_text_content
  endpoint:
    path: /1.0/mailings/:mailingid/contents/text
    method: GET
- name: mailings_set_text_content
  endpoint:
    path: /1.0/mailings/:mailingid/contents/text
    method: POST
- name: create_contact
  endpoint:
    path: /1.0/contacts/email/:email
    method: POST
    data_selector: contact
    params:
      permission: 1
      sync_mode: 2
      doi: true
      doiplus: true
- name: basic_merge_tags
  endpoint:
    path: /merge_tags/basic
    method: GET
- name: transaction_merge
  endpoint:
    path: /merge_tags/transaction
    method: GET
- name: string_functions
  endpoint:
    path: /merge_tags/string_functions
    method: GET
- name: property_parameters
  endpoint:
    params:
      prefix: 'true'
      fallback: fb
      onmissingvalue: fail
      separator: '#'
      htmltag: 'false'
      backup: 'false'
      inline: 'false'
      striphtml: 'true'
      backupimages: 'false'
      tracklinks: 'false'
- name: ping
  endpoint:
    path: /1.0/ping
    method: POST
- name: feed_properties
  endpoint:
    path: /feed/properties
    method: GET
    data_selector: properties
- name: feed_author
  endpoint:
    path: /feed/author
    method: GET
    data_selector: author
- name: feed_categories
  endpoint:
    path: /feed/categories
    method: GET
    data_selector: categories
- name: feed_image
  endpoint:
    path: /feed/image
    method: GET
    data_selector: image
- name: feed_link
  endpoint:
    path: /feed/link
    method: GET
    data_selector: link
- name: feed_title
  endpoint:
    path: /feed/title
    method: GET
    data_selector: title
- name: item_properties
  endpoint:
    path: /feed/item/properties
    method: GET
    data_selector: item_properties
- name: loop_feed_items
  endpoint:
    path: /feed/loop
    method: GET
    data_selector: loop
- name: contacts
  endpoint:
    path: /1.0/contacts
    method: GET
    params:
      page_index: 1
      page_size: 10
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: ping
  endpoint:
    path: /1.0/ping
    method: PUT
- name: unsubscribe_reason
  endpoint:
    path: /1.0/contacts/contact/unsubscribe/reasons
    method: PUT
    data_selector: none
    params: {}
- name: count_contacts_by_filter_id
  endpoint:
    path: /1.0/contacts/filter/{contactFilterId}/count
    method: GET
    data_selector: count
- name: active_contacts_count
  endpoint:
    path: /1.0/contacts/filter/{contactFilterId}/count/active
    method: GET
    data_selector: count
- name: contacts
  endpoint:
    path: /1.0/contacts/email/:email
    method: POST
    data_selector: ''
- name: create_custom_field
  endpoint:
    path: /1.0/contacts/fields/custom/:name
    method: POST
    data_selector: null
    params:
      type: string
- name: contact_preference_category
  endpoint:
    path: /1.0/contacts/preference_categories/
    method: POST
    data_selector: preference_category
- name: create_contact_by_external_id
  endpoint:
    path: /1.0/contacts/externalid/:value
    method: POST
    data_selector: contact
    params:
      permission: 1
      sync_mode: 2
      doi: true
      doiplus: true
- name: contacts
  endpoint:
    path: /1.0/contacts/externalid/:value
    method: POST
    data_selector: '{}'
    params:
      permission: '1'
      sync_mode: '2'
      doi: 'true'
      doiplus: 'true'
- name: contact_preference
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName/preferences
    method: POST
    data_selector: preference
    params: {}
- name: delete_all_contacts
  endpoint:
    path: /1.0/contacts
    method: DELETE
    params:
      authorized: 'yes'
- name: delete_contact_by_maileon_id
  endpoint:
    path: /1.0/contacts/contact
    method: DELETE
    params:
      id: The maileon ID of the contact to remove.
- name: delete_contact_preference
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName/preferences/:preferenceName
    method: DELETE
- name: delete_contacts_by_email
  endpoint:
    path: /1.0/contacts/email/:email
    method: DELETE
- name: delete_custom_field
  endpoint:
    path: /1.0/contacts/fields/custom/:field
    method: DELETE
- name: delete_standard_field_values
  endpoint:
    path: /1.0/contacts/fields/standard/:field/values
    method: DELETE
    data_selector: null
    params: {}
- name: copy_mailing
  endpoint:
    path: /1.0/mailings/:mailingid/copy
    method: POST
- name: delete_contact_preference_category
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName
    method: DELETE
    data_selector: null
    params: {}
- name: contact
  endpoint:
    path: /1.0/contacts/email/:value
    method: GET
    data_selector: contact
- name: delete_contact_by_external_id
  endpoint:
    path: /1.0/contacts/externalid/:value
    method: DELETE
- name: delete_custom_field_values
  endpoint:
    path: /1.0/contacts/fields/custom/:field/values
    method: DELETE
- name: blocked_contacts
  endpoint:
    path: /1.0/contacts/blocked
    method: GET
    params:
      page_index: '1'
- name: delete_unsubscription_marker
  endpoint:
    path: /contacts/email/:email/unsubscription
    method: DELETE
- name: contact
  endpoint:
    path: /1.0/contacts/contact
    method: GET
    data_selector: contact
    params: {}
- name: get_contact_preference
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName/preferences/:preferenceName
    method: GET
- name: contact_preference_category
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName
    method: GET
    data_selector: preference_category
- name: contacts_by_email
  endpoint:
    path: /1.0/contacts/emails/:value
    method: GET
    data_selector: contacts
- name: contacts
  endpoint:
    path: /1.0/contacts/externalid/:value
    method: GET
    data_selector: contacts
- name: contacts_by_filter_id
  endpoint:
    path: /1.0/contacts/filter/{contactFilterId}
    method: GET
    data_selector: contacts
    params:
      page_index: 1
      page_size: 100
- name: contact_preference_categories
  endpoint:
    path: /1.0/contacts/preference_categories/
    method: GET
    data_selector: preference_categories
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params:
      page_index: 1
      page_size: 100
- name: count_contacts
  endpoint:
    path: /1.0/contacts/count
    method: GET
    data_selector: count_contacts
- name: contact_preference_category
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName/preferences
    method: GET
    data_selector: preferences
    params: {}
- name: set_unsubscription_marker
  endpoint:
    path: /contacts/email/:email/unsubscription
    method: PUT
- name: rename_custom_field
  endpoint:
    path: /1.0/contacts/fields/custom/:oldname/:newname
    method: PUT
- name: unsubscribe_contact
  endpoint:
    path: /1.0/contacts/contact/unsubscribe
    method: DELETE
    params:
      id: The ID of the Maileon contact
      mailingId: Optional parameter. If filled, the unsubscription event will be counted
        for the mailing with the given ID.
      reason: Optional multivalued array. If filled, the unsubscription reason will
        be submitted to maileon.
- name: custom_fields
  endpoint:
    path: /1.0/contacts/fields/custom
    method: GET
    data_selector: custom_fields
- name: unsubscription_marker
  endpoint:
    path: /contacts/email/:email/unsubscription
    method: GET
    data_selector: unsubscription_marker
    params: {}
- name: unsubscribe_contact_by_email
  endpoint:
    path: /1.0/contacts/email/:email/unsubscribe
    method: DELETE
- name: contacts
  endpoint:
    path: /1.0/contacts
    method: POST
    data_selector: contacts
    params: {}
- name: contact_preference_category
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName
    method: PUT
    data_selector: preference_category
- name: update_contact_by_email
  endpoint:
    path: /1.0/contacts/email/:email
    method: PUT
- name: update_contact_preference
  endpoint:
    path: /1.0/contacts/preference_categories/:categoryName/preferences/:preferenceName
    method: PUT
    data_selector: preference
    params: {}
- name: contact_filter_lock_state
  endpoint:
    path: /1.0/contactfilters/contactfilter/:contactFilterId/lock
    method: GET
    data_selector: locked
    params: {}
- name: contactfilters_count
  endpoint:
    path: /1.0/contactfilters/count
    method: GET
    data_selector: count
    params: {}
- name: update_contact
  endpoint:
    path: /1.0/contacts/contact
    method: PUT
    data_selector: contact
    params: {}
- name: contactfilter
  endpoint:
    path: /1.0/contactfilters/v2
    method: POST
- name: contactfilters
  endpoint:
    path: /1.0/contactfilters
    method: GET
    data_selector: contactfilters
    params:
      page_index: '1'
      page_size: '100'
- name: contact_filter
  endpoint:
    path: /1.0/contactfilters/contactfilter/{contactFilterId}
    method: DELETE
    data_selector: null
    params: {}
- name: contactfilter
  endpoint:
    path: /contactfilters/contactfilter/{contactFilterId}
    method: GET
- name: lock_contact_filter
  endpoint:
    path: /1.0/contactfilters/contactfilter/:contactFilterId/lock
    method: POST
    params: {}
- name: targetgroup
  endpoint:
    path: /targetgroups/targetgroup/{targetgroupId}
    method: GET
    data_selector: targetgroup
- name: unsubscription_reasons
  endpoint:
    path: /1.0/reports/unsubscriptions/reasons
    method: GET
    data_selector: unsubscription_reasons
    params:
      page_index: 1
- name: contact_filter_refresh
  endpoint:
    path: /1.0/contactfilters/contactfilter/{contactFilterId}/refresh
    method: GET
    params:
      time: '-1'
      async: 'false'
- name: contact_filter
  endpoint:
    path: /1.0/contactfilters/contactfilter/{contactFilterId}
    method: POST
- name: targetgroup
  endpoint:
    path: /1.0/targetgroups/targetgroup/{targetgroupId}
    method: PUT
- name: get_blocks
  endpoint:
    path: /1.0/reports/blocks
    method: GET
    data_selector: blocks
    params: {}
- name: get_blocks_count
  endpoint:
    path: /1.0/reports/blocks/count
    method: GET
    data_selector: count
    params: {}
- name: target_group
  endpoint:
    path: /1.0/targetgroups
    method: POST
    data_selector: id
    params: {}
- name: targetgroup
  endpoint:
    path: /1.0/targetgroups/targetgroup/{targetgroupId}
    method: DELETE
- name: targetgroups
  endpoint:
    path: /1.0/targetgroups
    method: GET
    data_selector: targetgroups
    params:
      page_index: 1
      page_size: 100
- name: targetgroups_count
  endpoint:
    path: /1.0/targetgroups/count
    method: GET
    data_selector: count
- name: bounces
  endpoint:
    path: /1.0/reports/bounces
    method: GET
    data_selector: bounces
    params:
      page_size: 100
- name: bounces_count
  endpoint:
    path: /1.0/reports/bounces/count
    method: GET
- name: unique_opens
  endpoint:
    path: /1.0/reports/opens/unique
    method: GET
    data_selector: opens
    params: {}
- name: unique_opens_count
  endpoint:
    path: /1.0/reports/opens/unique/count
    method: GET
    data_selector: count
    params: {}
- name: conversions
  endpoint:
    path: /1.0/reports/analytics/conversions
    method: GET
    data_selector: conversions
    params:
      page_index: '1'
      page_size: '100'
- name: conversions_count
  endpoint:
    path: /1.0/reports/analytics/conversions/count
    method: GET
    data_selector: count
    params: {}
- name: get_opens
  endpoint:
    path: /reports/opens
    method: GET
    data_selector: opens
    params:
      page_size: 100
- name: unique_conversions
  endpoint:
    path: /1.0/reports/analytics/conversions/unique
    method: GET
    data_selector: unique_conversions
    params:
      page_index: '1'
      page_size: '100'
- name: unique_conversions_count
  endpoint:
    path: /1.0/reports/analytics/conversions/unique/count
    method: GET
    data_selector: count
- name: clicks
  endpoint:
    path: /1.0/reports/clicks
    method: GET
    data_selector: clicks
    params:
      page_size: 100
- name: filtered_contacts
  endpoint:
    path: /1.0/reports/filtered_contacts
    method: GET
    data_selector: filtered_contacts
    params:
      exclude_anonymous_contacts: 'false'
      page_index: '1'
      page_size: '100'
- name: filtered_contacts_count
  endpoint:
    path: /1.0/reports/filtered_contacts/count
    method: GET
    data_selector: filtered_contacts
    params:
      exclude_anonymous_contacts: 'false'
      page_index: '1'
      page_size: '100'
- name: recipients
  endpoint:
    path: /1.0/reports/recipients
    method: GET
    data_selector: recipients
    params:
      exclude_deleted_recipients: 'false'
      page_index: '1'
      page_size: '100'
- name: recipients_count
  endpoint:
    path: /1.0/reports/recipients/count
    method: GET
    data_selector: count
    params: {}
- name: revenue
  endpoint:
    path: /1.0/reports/analytics/conversions/revenue
    method: GET
    params: {}
- name: subscribers
  endpoint:
    path: /1.0/reports/subscribers
    method: GET
    data_selector: subscribers
    params:
      exclude_anonymous_contacts: 'true'
      page_index: 1
      page_size: 100
- name: mailing_blacklist
  endpoint:
    path: /1.0/mailings/:mailingid/mailingblacklists/:blacklistid
    method: POST
- name: unique_clicks
  endpoint:
    path: /1.0/reports/clicks/unique
    method: GET
    data_selector: clicks
    params:
      page_index: 1
      page_size: 100
      exclude_anonymous_clicks: true
- name: unique_clicks_count
  endpoint:
    path: /1.0/reports/clicks/unique/count
    method: GET
    data_selector: count
    params: {}
- name: unsubscriptions
  endpoint:
    path: /1.0/reports/unsubscriptions
    method: GET
    data_selector: unsubscriptions
    params:
      page_size: 100
- name: unsubscriptions_count
  endpoint:
    path: /1.0/reports/unsubscriptions/count
    method: GET
    data_selector: count
    params: {}
- name: mailing
  endpoint:
    path: /1.0/mailings
    method: POST
    data_selector: id
- name: delete_mailing
  endpoint:
    path: /1.0/mailings/:mailingId
    method: DELETE
- name: delete_trigger
  endpoint:
    path: /1.0/mailings/:mailingid/dispatching
    method: DELETE
- name: get_mailings_by_schedule_time
  endpoint:
    path: /1.0/mailings/filter/scheduletime
    method: GET
    params:
      page_index: 1
      orderBy: id
      order: ASC
- name: dispatching
  endpoint:
    path: /1.0/mailings/:mailingid/dispatching
    method: PUT
    data_selector: null
    params: {}
- name: delete_mailing_blacklist
  endpoint:
    path: /1.0/mailings/:mailingid/mailingblacklists/:blacklistid
    method: DELETE
    data_selector: null
    params: {}
- name: contacts_limit
  endpoint:
    path: /1.0/mailings/:mailingid/settings/contacts_limit
    method: GET
    data_selector: contacts_limit
    params: {}
- name: Get CMS2 Mailing As Zip
  endpoint:
    path: /1.0/mailings/:mailingId/cms2/contents
    method: GET
    data_selector: byte array
    params:
      removeTemplateLanguageMarkup: 'false'
- name: mailing_id_by_name
  endpoint:
    path: /1.0/mailings/name/:mailingName
    method: GET
    data_selector: id
    params: {}
- name: mailing_blacklists
  endpoint:
    path: /1.0/mailings/:mailingid/mailingblacklists/
    method: GET
    data_selector: mailing_blacklists
    params:
      mailingid: The ID of the mailing
- name: mailing_report
  endpoint:
    path: /1.0/mailings/:mailingId/reporturl
    method: GET
    data_selector: url
- name: mailing_summaries
  endpoint:
    path: /1.0/reports/mailing_summaries
    method: GET
    data_selector: mailing_summaries
    params:
      mailing_id: The Maileon mailing id. Multivalued parameter, use …mailing_id=1&mailing_id=2
- name: mailing_thumbnail
  endpoint:
    path: /1.0/mailings/:mailingId/contents/thumbnail
    method: GET
    params:
      thumbSize: zoom
- name: mailing_thumbnail
  endpoint:
    path: /1.0/mailings/:mailingId/thumbnailurl
    method: GET
    data_selector: thumbnailurl
    params: {}
- name: mailings_by_keywords
  endpoint:
    path: /mailings/filter/keywords
    method: GET
    params:
      page_index: 1
      orderBy: id
      order: ASC
- name: mailings_by_creator_name
  endpoint:
    path: /1.0/mailings/filter/creatorname
    method: GET
    data_selector: mailings
    params:
      page_index: 1
      orderBy: id
      order: ASC
- name: mailings_by_subject
  endpoint:
    path: /1.0/mailings/filter/subject
    method: GET
    data_selector: mailings
    params:
      page_index: 1
      orderBy: id
      order: ASC
- name: mailings_by_states
  endpoint:
    path: /1.0/mailings/filter/states
    method: GET
    params:
      page_index: 1
      orderBy: id
      order: ASC
- name: get_preview
  endpoint:
    path: /1.0/mailings/:mailingid/preview
    method: GET
    data_selector: html
- name: get_preview_text
  endpoint:
    path: /1.0/mailings/:mailingid/contents/previewtext
    method: GET
    data_selector: previewtext
- name: reply_to_settings
  endpoint:
    path: /1.0/mailings/:mailingid/settings/replyto
    method: GET
    data_selector: reply_to
- name: mailings_filter_types
  endpoint:
    path: /1.0/mailings/filter/types
    method: GET
    params:
      page_index: 1
      orderBy: id
      order: ASC
- name: mailing_copy_attachments
  endpoint:
    path: /1.0/mailings/:targetmailingid/attachments
    method: PUT
    data_selector: null
    params:
      src_mailing_id: id of the source mailing.
- name: delete_attachment
  endpoint:
    path: /1.0/mailings/:mailingid/attachments/:attachmentid
    method: DELETE
    data_selector: null
    params: {}
- name: delete_attachments
  endpoint:
    path: /1.0/mailings/:mailingid/attachments
    method: DELETE
    data_selector: null
    params: {}
- name: template
  endpoint:
    path: /1.0/mailings/:mailingId/template
    method: GET
    data_selector: templateid
- name: templates
  endpoint:
    path: /1.0/media/templates/mailings/cms2
    method: GET
    data_selector: '[]'
- name: mailing_attachment
  endpoint:
    path: /1.0/mailings/:mailingid/attachments
    method: POST
- name: Create Schedule
  endpoint:
    path: /1.0/mailings/:mailingid/schedule
    method: PUT
    params: {}
- name: mailing_properties
  endpoint:
    path: /1.0/mailings/:mailingid/settings/properties
    method: POST
- name: target_group_update
  endpoint:
    path: /1.0/mailings/:mailingid/settings/targetgroup_update
    method: POST
- name: ignore_permission
  endpoint:
    path: /1.0/mailings/:mailingid/settings/ignorepermission
    method: GET
    data_selector: ignore_permission
    params: {}
- name: delete_schedule
  endpoint:
    path: /1.0/mailings/:mailingid/schedule
    method: DELETE
- name: disable_qos_checks
  endpoint:
    path: /1.0/mailings/:mailingid/settings/disableQosChecks
    method: PUT
- name: post_sendout_cleanup
  endpoint:
    path: /1.0/mailings/:mailingid/settings/post_sendout_cleanup
    method: GET
    data_selector: cleanup
- name: count_attachments
  endpoint:
    path: /1.0/mailings/:mailingid/attachments/count
    method: GET
    data_selector: count_attachments
- name: attachments
  endpoint:
    path: /1.0/mailings/:mailingid/attachments
    method: GET
    data_selector: attachments
- name: mailing_html
  endpoint:
    path: /1.0/mailings/:mailingid/contents/html
    method: GET
    data_selector: content
    params: {}
- name: mailing_archival_duration
  endpoint:
    path: /1.0/mailings/:mailingid/settings/archivalduration
    method: GET
    data_selector: archival_duration
- name: Get Attachment
  endpoint:
    path: /1.0/mailings/:mailingid/attachments/:attachmentid
    method: GET
    data_selector: ''
    params: {}
- name: doi_mailing_key
  endpoint:
    path: /1.0/mailings/:mailingid/settings/doi_key
    method: GET
    data_selector: doi_key
    params:
      mailingid: optional
- name: mailing_custom_properties
  endpoint:
    path: /1.0/mailings/:mailingid/settings/properties
    method: GET
    data_selector: properties
- name: mailing_domain
  endpoint:
    path: /1.0/mailings/:mailingid/domain
    method: GET
    data_selector: domain
- name: max_attachment_size
  endpoint:
    path: /1.0/mailings/:mailingid/settings/maxattachmentsize
    method: GET
    data_selector: max_attachment_size
    params: {}
- name: message_size_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/messagesize
    method: GET
    data_selector: messagesizecheck
    params: {}
- name: sender_address
  endpoint:
    path: /1.0/mailings/:mailingid/contents/sender
    method: GET
    data_selector: sender
- name: mailing_locale
  endpoint:
    path: /1.0/mailings/:mailingid/settings/locale
    method: GET
    data_selector: locale
- name: max_content_size
  endpoint:
    path: /1.0/mailings/:mailingid/settings/maxcontentsize
    method: GET
    data_selector: max_content_size
    params: {}
- name: mailing_name
  endpoint:
    path: /1.0/mailings/:mailingid/name
    method: GET
    data_selector: name
- name: recipient_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/recipientalias
    method: GET
    data_selector: recipientalias
- name: link_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/link
    method: GET
    data_selector: imagecheck
- name: personalization_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/personalization
    method: GET
- name: mailing_speed_level
  endpoint:
    path: /1.0/mailings/:mailingid/settings/speedlevel
    method: GET
    data_selector: speed_level
- name: spam_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/spam
    method: GET
- name: attention_quality_check
  endpoint:
    path: /1.0/mailings/{mailingId}/checks/attention
    method: GET
    data_selector: attentioncheck
    params: {}
- name: bounce_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/bounce
    method: GET
- name: image_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/image
    method: GET
    data_selector: imagecheck
    params: {}
- name: test_mail_sendout
  endpoint:
    path: /1.0/mailings/:mailingid/checks/testsendout
    method: GET
    data_selector: sendoutcheck
    params: {}
- name: mailing_schedule
  endpoint:
    path: /1.0/mailings/:mailingid/schedule
    method: GET
    data_selector: schedule
    params: {}
- name: approval_sendout_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/approvalprocess
    method: GET
    data_selector: sendoutcheck
    params: {}
- name: display_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/display
    method: GET
    data_selector: displaycheck
    params: {}
- name: sender_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/senderalias
    method: GET
    data_selector: senderalias
- name: mailing_subject
  endpoint:
    path: /1.0/mailings/:mailingid/contents/subject
    method: GET
    data_selector: subject
- name: mailing_tags
  endpoint:
    path: /1.0/mailings/:mailingid/settings/tags
    method: GET
    data_selector: tags
- name: tracking_strategy
  endpoint:
    path: /1.0/mailings/:mailingid/settings/trackingstrategy
    method: GET
    data_selector: tracking_strategy
- name: mailing_send_now
  endpoint:
    path: /1.0/mailings/:mailingid/sendnow
    method: POST
- name: mailing_state
  endpoint:
    path: /1.0/mailings/:mailingid/state
    method: GET
    data_selector: state
    params: {}
- name: target_group_id
  endpoint:
    path: /1.0/mailings/:mailingid/targetgroupid
    method: GET
    data_selector: targetgroupid
- name: target_group_update_status
  endpoint:
    path: /1.0/mailings/:mailingid/settings/targetgroup_update
    method: GET
    data_selector: targetgroup_update
- name: mailing_text
  endpoint:
    path: /1.0/mailings/{id}/contents/text
    method: GET
    data_selector: text
    params: {}
- name: tracking_duration
  endpoint:
    path: /1.0/mailings/:mailingid/settings/trackingduration
    method: GET
    data_selector: tracking_duration
- name: mailing_type
  endpoint:
    path: /1.0/mailings/:mailingid/type
    method: GET
    data_selector: type
    params: {}
- name: mailing_is_sealed
  endpoint:
    path: /1.0/mailings/:mailingid/sealed
    method: GET
    data_selector: sealed
    params: {}
- name: remove_custom_mailing_property
  endpoint:
    path: /1.0/mailings/:mailingid/settings/properties
    method: DELETE
    data_selector: status
    params: {}
- name: delete_webhook
  endpoint:
    path: /1.0/webhooks/:id
    method: DELETE
- name: send_test_email
  endpoint:
    path: /1.0/mailings/:mailingid/sendtestemail
    method: POST
    data_selector: null
    params:
      email: null
      format: auto
      txAuto: 'false'
      body: null
- name: set_doi_mailing_key
  endpoint:
    path: /1.0/mailings/{id}/settings/doi_key
    method: POST
    data_selector: null
    params: {}
- name: set_html
  endpoint:
    path: /1.0/mailings/:mailingid/contents/html
    method: POST
- name: set_locale
  endpoint:
    path: /1.0/mailings/:mailingid/settings/locale
    method: POST
    data_selector: null
    params: {}
- name: mailing_set_name
  endpoint:
    path: /1.0/mailings/:mailingid/name
    method: POST
- name: mailing_test_sendout
  endpoint:
    path: /1.0/mailings/:mailingid/checks/testsendout
    method: POST
    data_selector: null
    params:
      test_targetgroup_id: test_targetgroup_id
- name: mailing_ignore_permission
  endpoint:
    path: /1.0/mailings/:mailingid/settings/ignorepermission
    method: POST
- name: recipient_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/recipientalias
    method: POST
- name: set_sender_address
  endpoint:
    path: /1.0/mailings/:mailingid/contents/sender
    method: POST
- name: post_sendout_cleanup
  endpoint:
    path: /1.0/mailings/:mailingid/settings/post_sendout_cleanup
    method: POST
    data_selector: null
    params: {}
- name: set_sender_alias
  endpoint:
    path: /1.0/mailings/:mailingid/contents/senderalias
    method: POST
- name: set_speed_level
  endpoint:
    path: /1.0/mailings/:mailingid/settings/speedlevel
    method: POST
- name: mailing_set_tags
  endpoint:
    path: /1.0/mailings/:mailingid/settings/tags
    method: POST
    data_selector: null
    params: {}
- name: mailing_target_group
  endpoint:
    path: /1.0/mailings/:mailingid/targetgroupid
    method: POST
    data_selector: targetgroupid
    params: {}
- name: bounce_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/bounce
    method: POST
    data_selector: null
    params: {}
- name: mailing_subject
  endpoint:
    path: /1.0/mailings/{id}/contents/subject
    method: POST
    data_selector: subject
- name: mailing_set_text
  endpoint:
    path: /1.0/mailings/:mailingid/contents/text
    method: POST
    data_selector: null
    params: {}
- name: mailing_tracking_strategy
  endpoint:
    path: /1.0/mailings/:mailingid/settings/trackingstrategy
    method: POST
- name: mailing_attention_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/attention
    method: POST
- name: link_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/link
    method: POST
    data_selector: response
- name: mailing_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/spam
    method: POST
- name: start_image_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/image
    method: POST
- name: message_size_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/messagesize
    method: POST
    data_selector: response
    params: {}
- name: personalization_quality_check
  endpoint:
    path: /1.0/mailings/:mailingid/checks/personalization
    method: POST
- name: update_custom_mailing_property
  endpoint:
    path: /1.0/mailings/:mailingid/settings/properties
    method: PUT
    data_selector: response
    params: {}
- name: mailing_update_schedule
  endpoint:
    path: /1.0/mailings/:mailingid/schedule
    method: POST
    params:
      date: YYYY-MM-DD
      hours: HH
      minutes: MM
      dispatchOption: '{''hour'', ''weekdayhour'', ''uniform''}'
      dispatchEndInHours: '[2..24]'
      dispatchEndInDays: '[1..7]'
      dispatchEndExactDatetime: yyyy-MM-dd HH:mm
      clicksAsResponseReference: true/false
      dispatchWavesGroup: '{1, 2, 3}'
      dispatchUniformInterval: '{''hour'', ’30m’, ’20m’, ’15m’, ’10m’}'
      allowedHours: 0..23
- name: set_template_for_cms2_mailing
  endpoint:
    path: /1.0/mailings/:mailingId/cms2/contents
    method: PUT
    params:
      templatePath: default folder/My Example
- name: save_cms2_mailing
  endpoint:
    path: /1.0/mailings/:mailingId/cms2/contents
    method: POST
    data_selector: template_path
    params: {}
- name: contacts_limit
  endpoint:
    path: /1.0/mailings/:mailingid/settings/contacts_limit
    method: POST
    data_selector: null
    params: {}
- name: reset_contents_to_template
  endpoint:
    path: /1.0/mailings/:mailingid/contents/reset
    method: PUT
- name: set_template
  endpoint:
    path: /1.0/mailings/:mailingId/template
    method: PUT
- name: transaction_type
  endpoint:
    path: /transactions/types
    method: POST
    data_selector: transaction_type_id
- name: set_preview_text
  endpoint:
    path: /1.0/mailings/:mailingid/contents/previewtext
    method: POST
- name: set_reply_to_address
  endpoint:
    path: /1.0/mailings/:mailingid/settings/replyto
    method: POST
    params:
      auto: 'true'
      customEmail: The email of the customer all replies should be forwarded when
        automatic processing is deactivated.
- name: upload_cms2_mailing_contents
  endpoint:
    path: /1.0/mailings/:mailingId/cms2/contents
    method: PUT
    data_selector: content
- name: transaction_types
  endpoint:
    path: /1.0/transactions/types
    method: GET
    data_selector: transaction_types
    params:
      page_index: 1
      page_size: 100
- name: get_transaction
  endpoint:
    path: /1.0/transactions/:transactionTypeId/transaction_id/:transactionId
    method: GET
    data_selector: transaction
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: reports
- name: delete_transaction
  endpoint:
    path: /1.0/transactions/:transactionTypeId/transaction_id/:transactionId
    method: DELETE
- name: delete_transaction_type
  endpoint:
    path: /1.0/transactions/types/:transactionTypeId
    method: DELETE
- name: delete_transactions
  endpoint:
    path: /1.0/transactions
    method: DELETE
    params:
      type_id: ''
      before_timestamp: '9223372036854775807'
- name: transaction_type
  endpoint:
    path: /1.0/transactions/types/:transactionTypeId
    method: PUT
    data_selector: transaction_type_id
- name: transaction_types_count
  endpoint:
    path: /1.0/transactions/types/count
    method: GET
    data_selector: count
- name: mailing_templates
  endpoint:
    path: /1.0/media/templates/mailings
    method: GET
    data_selector: ''
- name: blacklists
  endpoint:
    path: /1.0/blacklists
    method: GET
    data_selector: blacklists
- name: transaction_type
  endpoint:
    path: /1.0/transactions/types/:transactionTypeId
    method: GET
    data_selector: transaction_type
    params: {}
- name: marketing_automation
  endpoint:
    path: /1.0/marketing-automation/:programId
    method: POST
    data_selector: emails
- name: add_entries_to_blacklist
  endpoint:
    path: /1.0/blacklists/:blacklistId/actions
    method: POST
    data_selector: null
    params: {}
- name: blacklist
  endpoint:
    path: /1.0/blacklists/:blacklistId
    method: GET
    data_selector: blacklist
    params: {}
- name: mailing_blacklist_expressions
  endpoint:
    path: /1.0/mailingblacklists/:id/expressions
    method: POST
    data_selector: null
    params: {}
- name: mailing_blacklist
  endpoint:
    path: /1.0/mailingblacklists/:id
    method: DELETE
- name: mailing_blacklist
  endpoint:
    path: /1.0/mailingblacklists/:id
    method: GET
    data_selector: mailing_blacklist
- name: account_placeholders
  endpoint:
    path: /1.0/account/placeholders
    method: PUT
    data_selector: null
    params: {}
- name: account_mailing_domains
  endpoint:
    path: /1.0/account/mailing_domains
    method: GET
    data_selector: records
- name: mailing_blacklist
  endpoint:
    path: /1.0/mailingblacklists
    method: POST
    data_selector: <id>
    params:
      name: api test
- name: mailing_blacklists
  endpoint:
    path: /1.0/mailingblacklists
    method: GET
    data_selector: mailing_blacklists
- name: account_info
  endpoint:
    path: /1.0/account/info
    method: GET
    data_selector: mailing_domain
    params: {}
- name: mailing_blacklist_expressions
  endpoint:
    path: /1.0/mailingblacklists/:blacklistId/expressions
    method: GET
    params:
      page_index: '1'
- name: mailing_blacklist
  endpoint:
    path: /1.0/mailingblacklists/:id
    method: PUT
    data_selector: null
    params:
      name: new name of the mailing blocklist
- name: account_placeholders
  endpoint:
    path: /1.0/account/placeholders
    method: POST
- name: account_placeholders
  endpoint:
    path: /1.0/account/placeholders
    method: GET
    data_selector: account_placeholders
- name: remove_account_placeholder
  endpoint:
    path: /1.0/account/placeholders
    method: DELETE
    data_selector: null
    params:
      name: Name of the account placeholder to remove
- name: webhook
  endpoint:
    path: /1.0/webhooks
    method: POST
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /1.0/webhook/:id
    method: GET
    data_selector: '[0]'
    params: {}
- name: webhooks
  endpoint:
    path: /1.0/webhooks
    method: GET
    data_selector: '[]'
- name: data_extension
  endpoint:
    path: /1.0/dataextensions
    method: POST
    data_selector: id
- name: delete_data_extension
  endpoint:
    path: /1.0/dataextensions/:dataExtensionId
    method: DELETE
- name: delete_data_extension_records
  endpoint:
    path: /1.0/dataextensions/:dataExtensionId/records
    method: DELETE
    params:
      authorized: 'yes'
- name: data_extension
  endpoint:
    path: /1.0/dataextensions/:dataExtensionId
    method: GET
    data_selector: content
    params: {}
- name: data_extension
  endpoint:
    path: /1.0/dataextension/:dataExtensionId
    method: POST
    data_selector: null
    params:
      importOption: INSERT
- name: data_extension_records
  endpoint:
    path: /1.0/dataextensions/:dataExtensionId/records
    method: GET
    data_selector: records
    params:
      page_index: 1
      page_size: 100
- name: data_types
  endpoint:
    path: /1.0/dataextensions/datatypes
    method: GET
    data_selector: Content-Type
- name: data_extension
  endpoint:
    path: /1.0/dataextensions/:dataExtensionId
    method: PUT
    data_selector: null
    params: {}
- name: domains
  endpoint:
    path: /partner/domains
    method: GET
- name: validate_domain
  endpoint:
    path: /partner/domains/validate
    method: GET
- name: locales
  endpoint:
    path: /partner/locales
    method: GET
- name: customer_accounts
  endpoint:
    path: /partner/customer-accounts
    method: GET
- name: customer_accounts_count
  endpoint:
    path: /partner/customer-accounts/count
    method: GET
- name: newsletter_accounts
  endpoint:
    path: /partner/newsletter-accounts
    method: GET
- name: newsletter_accounts_count
  endpoint:
    path: /partner/newsletter-accounts/count
    method: GET
- name: distributor_report_checks
  endpoint:
    path: /partner/distributor/reports/checks
    method: GET
- name: distributor_report_csa
  endpoint:
    path: /partner/distributor/reports/csa
    method: GET
- name: account_jobs
  endpoint:
    path: /partner/account-jobs
    method: GET
- name: newsletter_account_setup
  endpoint:
    path: /partner/newsletter-accounts/{newsletterAccountId}
    method: GET
- name: mailing_domains
  endpoint:
    path: /partner/newsletter-accounts/{accountId}/mailing-domains/
    method: GET
- name: prepaid_settings_status
  endpoint:
    path: /partner/settings/prepaids/status
    method: GET
- name: webhooks
  endpoint:
    path: /partner/settings/webhooks
    method: GET
- name: partner_blacklists
  endpoint:
    path: /partner/blacklists
    method: GET
- name: distributor_volume_report
  endpoint:
    path: /partner/report/accounts_volume
    method: GET
- name: distributor_sms_report
  endpoint:
    path: /partner/report/sms
    method: GET
- name: create_contact
  endpoint:
    path: /webhooks/contacts/email
    method: POST
    data_selector: error
    params:
      key: Required
      email: Required
      external_id: Optional
      sync_mode: '2'
- name: webhooks
  endpoint:
    path: /webhooks/outgoing
    method: POST
    data_selector: data
    params: {}
- name: update_contact_filter
  endpoint:
    path: /1.0/contactfilters/v2/contactfilter/{:contactFilterId}
    method: PUT
- name: display_quality_check
  endpoint:
    path: /1.0/mailings/{id}/checks/display
    method: POST
    data_selector: response
notes:
- Alle Änderungen, die Sie an Ihren erweiterten DNS-Einstellungen vornehmen, können
  Ihren Dienst unterbrechen. Wenn Sie kein fortgeschrittener Benutzer sind, empfehlen
  wir Ihnen dringend, diese Einstellungen nicht zu ändern.
- Sie müssen überprüfen, ob Ihre Domäne freigeschaltet ist, bevor Sie Ihre Name-Server
  aktualisieren. Nur der Kontoinhaber kann eine Domäne entsperren.
- Änderungen an den Name-Servern Ihrer Domäne können bis zu 72 Stunden dauern, um
  sich vollständig zu verbreiten.
- Bei Website Builder-Plänen gibt es keinen Link Domains im Dashboard, wenn keine
  Domain mit Ihrer Website verbunden ist.
- Service-Team erreichbar von Montag bis Freitag von 8:30 Uhr bis 17:30 Uhr
- Vertrieb-Team erreichbar von Montag bis Freitag von 9:00 Uhr bis 17:00 Uhr
- Buchhaltungs-Team erreichbar von Montag bis Freitag von 8:00 Uhr bis 16:00 Uhr (Dienstag
  von 8:00 Uhr bis 11:00 Uhr)
- Some smartphones may not support the content table function.
- Im Bereich „API-Keys“ werden alle existierbaren API-Keys dieses Kontos aufgelistet.
- Per Klick auf den Button „neuen API-Key erstellen“ gelangen Sie in das Menü „API-Key-Management“.
- Kundendaten werden in Maileon im Einklang mit unserer IT-Sicherheits-Leitlinie,
  IT-Sicherheits-Richtlinien und mithilfe von standardisierten und erprobten Verfahren
  geschützt.
- Online-Datenströme, z.B. vom Web-Browser eines Anwenders oder aus dem kundeneigenen
  Shopsystem zu den Maileon Servern erfolgen dabei immer verschlüsselt nach dem zertifizierten
  SSL/TLS-Standard.
- XQueue stellt eine Systemverfügbarkeit von 99 Prozent pro Jahr.
- Die geplante Downtime für System-Updates und Maintenance beträgt maximal 24 Stunden
  pro Jahr.
- Für die Nutzung des Widgets ist dessen Freischaltung notwendig, zusätzlich ist es
  aktuell nur auf Deutsch verfügbar.
- Custom contact fields are currently not supported properly and will be fixed.
- It is recommended to use a script to reformat the feed for customization.
- The preview function saves the mailing, so it is advised to save drafts as templates
  first.
- In der Basisversion sind die Wetterdaten kostenfrei verfügbar, die Anzahl der Anfragen
  an den Wetterdienst sind jedoch limitiert (100/Minute oder 60.000/Tag).
- Changing a transaction type in Maileon can be a problem, once a transaction is used
  in live systems, as there is no possibility to update an existing type.
- Merge Tags are used inside mailing contents as placeholders for personalized output.
- Make sure to use UTF-8 as input encoding for all transferred data.
- Elements with NIL (or NULL) values must be provided with the nil attribute.
- The size must be between 1 (inclusive) and 1000 (inclusive).
- Test for put requests to the API resources, i.e., this tests whether the API is
  configured properly and the provided API key is authorized for create access to
  it.
- None of the attributes is required. A custom contact field value must not be empty
  or null.
- This method does not unsubscribe the contacts from your newsletter, it completely
  removes all contacts from your Maileon account.
- This method does not unsubscribe the contacts from a newsletter account, it completely
  removes them from Maileon.
- Deletes the values of the given standard contact field for all contacts.
- Blocked contacts are contacts with available permission but that are blocked for
  sendouts because of blacklist matches or similar reasons such as bounce policy.
- This resource does not return anonymized contacts but removes them after assembling
  the pages.
- This call does not return an error code, you should display that the contact has
  been unsubscribed.
- The unsubscription event will be counted for the mailing with the given ID if specified.
- This call is asynchronous, and there may be a delay before the contact is fully
  unsubscribed.
- The maximum size of the request body is limited to 10 MB.
- Duplicates are not allowed in one call and will be ignored.
- The permission parameter should only be used if the permission of the contact should
  be updated.
- Returns a page of unsubscriptions.
- You cannot update the same filter twice at the same time using asynchronous mode
  (response 429)
- You cannot update more than 5 filters at the same time using synchronous mode
- Returns a page of block status changes.
- Returns the total count of targetgroups in the account.
- Bounces are collected when they are final.
- If set to true, the bounces that cannot be mapped to contacts are omitted in the
  results.
- If provided, only the opens after or equal (including) the given date will be returned
  for from_date.
- If provided, only the opens before (excluding) the given date will be returned for
  to_date.
- The maximum count of items in the result page must be in the range 1 to 1000
- Currently no external ID is returned.
- Only with DOI+ permission, clicks can be linked to a user, otherwise all clicks
  will be linked to anonymous contacts.
- Not all clicks will have a URL assigned, e.g. MAILTO links are not tracked.
- Returns a page of contacts that subscribed for the given account.
- If set to true, the attribute 'transaction_id' will be returned that caused this
  click, if available.
- If set to true, anonymized contacts will be annotated with a random number.
- This method can only be applied to mailings of type TRIGGER
- Once a trigger mailing is active (state = ‘sealed’) it cannot be deleted by using
  the usual ‘delete Mailing‘ method.
- The body has the media type `application/vnd.maileon.api+xml`.
- The maximum count of items in the result page must be in the range 1 to 1000.
- This indicates if autorecognition of manual unsubscribers is activated in this account.
  This should always be true.
- The target mailing should not be sealed.
- The resulting total count of attachments in the target mailing should not exceed
  10.
- The mailing is not sealed
- The mime type of the attachment should be set as Content-Type header
- The content in the body must be base64 encoded
- The header Content-Length must be set correctly
- The size of the attachment does not exceed the max allowed attachment size
- The total count of attachments in the mailing does not exceed 10 (including the
  new one)
- This method can only be applied to mailings of type REGULAR
- Mailings created with the new mailing editor v2 are currently not supporting doImageGrabbing
  and doLinkTracking parameters.
- To send text-only mails, set a simple space character as HTML content.
- Sets the text content of the mailing with the provided id.
- A linebreak can be realized using 'carriage return' (\r) wherever a linebreak is
  expected.
- The XML request offers more options for configuring transaction attributes.
- It is impossible to create mandatory attributes using JSON.
- A size limit of 9M (9,000,000 bytes) for the request entity is enforced by the API.
- If the submitted entity was larger than 9M, a 413 Request Entity Too Large error
  will occur.
- If deleting a transaction that triggered a marketing automation, the marketing automation
  will be terminated.
- Due to backwards compatibility of the types with regard to mailings or filters,
  you cannot change existing attributes or delete them.
- Returns the total count of all transaction types in the account.
- Results can be returned either as XML or JSON
- This resource returns only the DEFAULT mailing domain.
- The body must contain a list of data extension fields.
- Returns a list of supported data types.
- The webhook requires only the URL.
- If nothing further is specified, Maileon will trigger a POST request to the given
  URL without sending any data.
- For submitting simple data, URL-Parameters can be passed.
- Maileon allows submitting data in the body of the POST request with content type
  set to 'application/json; charset=UTF-8'.
- This portal is currently not complete as work on the API continues and new releases
  are published regularly.
errors:
- Sie können den Nameserver-Eintrag nicht bearbeiten wenn ein eigener MX-Record, ein
  eigener A-Record, ein SPF-Record oder ein DynDNS-Account zugewiesen wurde. Der NS-Record
  wird in diesem Fall als inaktiv ausgewiesen.
- '201 Created: Category created successfully'
- '400 Bad Request: If there was an error in the submitted body.'
- '400 Bad Request: If there was an error in the submitted body or the maximum amount
  of preferences in a category has been exceeded.'
- '404 Not Found: If the contact preference category with the given name was not found.'
- '404 Not Found: If the contact preference category or the preference with the given
  name were not found.'
- 'Status: 200 OK'
- '200 OK: Found an unsubscription marker and removed it'
- '400 Bad Request: Invalid email address'
- '404 Not Found: No unsubscription marker found'
- '404 Not found: Category not found'
- '200 Ok: Retrieved list of contact preference categories successfully'
- '200 Ok: Retrieved contact preference category successfully'
- '400 – Bad Request: If you specify a mailing that has not been sent yet.'
- '400 Bad Request: If specifying a mailing that has not been sent yet.'
- '400 Bad Request: Returned when ''use_external_id'' and ''prefer_maileon_id'' are
  both set to true.'
- '404: No contact with the given email address was found.'
- '409: If the contact’s new email address is not unique.'
- 'duplicate email: An error occurs if an email already exists.'
- '400 – Bad request: If the submitted json contactfilter has an invalid format or
  invalid data types'
- '404 – Not Found: If a rule based on contactfilter affiliation is submitted and
  the specified filter does not exist'
- '204 No content: Default status when everything worked well.'
- '404 Not found: There was no filter found with the given ID.'
- '409 Conflict: The filter could not be deleted. Reasons are usually: the filter
  is used in a target group or in an active trigger mailing.'
- '5xx Server error: An unexpected error occurred.'
- '429: Too Many Requests - You cannot update the same filter twice at the same time'
- '423: Locked - Filter is locked and cannot be refreshed'
- '400 Bad request: Something with the request is wrong, e.g. wrong xml syntax or
  missing values.'
- '404 Not found: The contact filter with the given ID does not exist.'
- '409 Conflict: A filter with the given name already exists.'
- '500 Conflict: An unexpected error occurred.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or authentication method'
- '200 OK: success'
- '404 Not found: Mailing ID cannot be found'
- '404 Not found: Mailing cannot be found'
- '409 Conflict: Archive URL does not exist'
- '404 Not found: If there was no such mailing with that name found'
- '200 OK: If everything was ok.'
- '404 Not Found: mailing not found'
- '400 Bad request: if the request was invalid: planned date is already in the past
  or planned date is not a date'
- '405 Method not allowed: if the mailing has already been sent out (sealed)'
- '409 Conflict: if the mailing already has an associated schedule'
- '201 Created: If everything was ok.'
- '400 Bad request: Property or value can not be accepted'
- '404 Not found: Mailing ID can not be found'
- '409 Conflict: Mailing is sealed and can not be changed'
- '404 Not found: Mailing with provided ID cannot be found'
- '409 Conflict: Mailing is sealed'
- '404 Not found: Mailing ID cannot be found or property is not available'
- '200 OK: if there is a schedule set for this mailing and it was removed'
- '404 Not found: in case there is no schedule set for this particular mailing'
- '404 Not found: There was no mailing found with the given ID.'
- '409 Conflict: The settings cannot be applied as the mailing is sealed (already
  sent).'
- '5xx Server Error: if the mailing already has an unexpected error occurred'
- '404 Not found: If the mailing cannot be found'
- '409 Conflict: If the mailing is sealed (has already been sent)'
- '400 Bad Request: If you specify a mailing that has not been sent yet (i.e. has
  not the state ’sealed‘ and is still a draft)'
- '404 Not found: Mailing ID cannot be found or results are not available'
- '200 OK: if there is a schedule set for this mailing; the body will contain detailed
  information in this case'
- '200 OK: Successful response'
- '400 Bad request: Property name not acceptable'
- '400 Bad Request: If the given targetgroup is not test targetgroup'
- '404 Not Found: If the target group cannot be found'
- '400 Bad Request: If the given email address is invalid, e.g. contains no @'
- '400 Bad Request: If a body was provided with Content-Type: ''application/json''
  and txAuto == false and the body is not a Json Object or the backend cannot successfully
  fill the required transaction fields and render the email from the body provided.'
- '400 Bad Request: If the given targetgroup is no test targetgroup'
- '204 No Content: If everything was ok.'
- '400 Bad Request: Property or value can not be accepted'
- '400 Bad Request: The domain ''test.de'' does not exist in your Maileon account.
  Use a valid domain.'
- '400 Bad Request: If check is already running'
- '412 Precondition Failed: Check is not enabled'
- '400 Bad Request: if the request was invalid: planned date is already in the past
  or planned date is not a date'
- '204 No Content: Success'
- '500 Internal Server Error: Check is not enabled'
- '400 Bad Request: if page_index < 1 or page_size < 1 or page_size > 1000'
- '404 Not Found: if the page referenced by page_index does not exist'
- '413 Request Entity Too Large: If the submitted entity was larger than 9M (9,000,000
  bytes).'
- '204 No Content: transaction type successfully deleted'
- '404 Not Found: transaction type not found'
- '400 Bad Request: If there was an error in the query parameters'
- '200 OK: If everything was ok'
- '400 Bad Request: transaction type is not defined'
- '201 Created: The entries were successfully added to the blacklist.'
- '403 Forbidden: The supplied blacklistId does not identify a blacklist that belongs
  to your account.'
- '403 Forbidden: The supplied blacklistId does not identify a blocklist that belongs
  to your account.'
- '201 Created: The entries were successfully added to the blocklist.'
- '400 Bad Request: Something with the request is wrong, e.g. wrong xml syntax or
  missing values.'
- '500 Internal Error: An unexpected error occurred.'
- '200 Ok: Default status when everything worked well.'
- '500 Internal Error: An unexpected error occured.'
- '400 Bad request: Account placeholder name or content invalid or wrong XML structure.'
- '404 Not found: Account placeholder not found'
- '404 Not Found: If no data extension with the given dataExtensionId can be found.'
- '400 Bad Request: If there was an error in the submitted body. See response body
  for details.'
- '401 Not Authorized: Invalid API-key'
- '400 Bad Request: Invalid email or non-existing custom field'
- 500 Internal Server error
- '404 – Not Found: If e.g. a rule based on contactfilter affiliation is submitted
  and the specified filter does not exist'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.maileon.com
  headers:
    Accept: application/json
    Content-type: application/vnd.maileon.api+xml
    Content-Type: application/json
    Authorization: Basic XXXXXXXXXXXXXXX
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    location: URL-parameters
    header_name: Authorization
  paginator:
    type: page
    page_size_param: page_size
    default_page_size: 100
    page_index: 1
    page_size: 100
    page_index_param: page_index
  resources:
  - name: mailing_archive
    endpoint:
      path: /1.0/mailings/:mailingid/archiveurl
      method: GET
  - name: fill_rss_smartmailing_tags
    endpoint:
      path: /1.0/mailings/:mailingid/contents/smartmailing/rss
      method: POST
  - name: mailing_approval_process
    endpoint:
      path: /1.0/mailings/:mailingid/checks/approvalprocess
      method: POST
      params:
        test_targetgroup_id: The targetgroup of the test group the testmail should
          be sent to.
source_metadata: null
