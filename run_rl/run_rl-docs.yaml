resources:
- name: user_data
  endpoint:
    path: /user/data
    method: GET
    data_selector: user_info
- name: runs
  endpoint:
    path: /runs
    method: GET
    data_selector: runs
- name: prompt_files
  endpoint:
    path: /prompt/files
    method: GET
    data_selector: prompt_files
- name: reward_files
  endpoint:
    path: /reward/files
    method: GET
    data_selector: reward_files
- name: user_data
  endpoint:
    path: /get_user_data
    method: GET
    data_selector: user_info
- name: runs
  endpoint:
    path: /list_runs
    method: GET
    data_selector: runs
- name: prompt_files
  endpoint:
    path: /list_prompt_files
    method: GET
    data_selector: prompt_files
- name: reward_files
  endpoint:
    path: /list_reward_files
    method: GET
    data_selector: reward_files
- name: prompt_file
  endpoint:
    path: /upload_prompt_file
    method: POST
    data_selector: prompt_file
    params: {}
- name: reward_file
  endpoint:
    path: /upload_reward_file
    method: POST
    data_selector: reward_file
    params: {}
- name: run
  endpoint:
    path: /create_run
    method: POST
    data_selector: run
    params:
      model_name: Qwen/Qwen3-4B
      prompt_file: file-123
      reward_file: file-456
      epochs: 3
      learning_rate: 1.0e-05
- name: prompt_file
  endpoint:
    path: /upload_prompt_file
    method: POST
    data_selector: prompt_file
- name: reward_file
  endpoint:
    path: /upload_reward_file
    method: POST
    data_selector: reward_file
- name: run
  endpoint:
    path: /create_run
    method: POST
    data_selector: run
- name: prompt_file
  endpoint:
    path: /upload_prompt_file
    method: POST
    data_selector: prompt_file['id']
- name: reward_file
  endpoint:
    path: /upload_reward_file
    method: POST
    data_selector: reward_file['id']
- name: run
  endpoint:
    path: /create_run
    method: POST
    data_selector: run['id']
- name: list_runs
  endpoint:
    path: /list_runs
    method: GET
    data_selector: runs
- name: run_details
  endpoint:
    path: /get_run_details
    method: GET
    data_selector: run_details['id']
- name: prompt_file
  endpoint:
    method: POST
    data_selector: id
- name: reward_file
  endpoint:
    method: POST
    data_selector: id
- name: run
  endpoint:
    method: POST
    data_selector: id
- name: prompt_file
  endpoint:
    path: /upload_prompt_file
    method: POST
    data_selector: ''
    params: {}
- name: reward_file
  endpoint:
    path: /upload_reward_file
    method: POST
    data_selector: ''
    params: {}
- name: run
  endpoint:
    path: /create_run
    method: POST
    data_selector: ''
    params: {}
- name: list_runs
  endpoint:
    path: /list_runs
    method: GET
    data_selector: ''
    params: {}
- name: run_details
  endpoint:
    path: /get_run_details
    method: GET
    data_selector: ''
    params: {}
- name: cancel_run
  endpoint:
    path: /cancel_run
    method: POST
    data_selector: ''
    params: {}
- name: download_model
  endpoint:
    path: /download_model
    method: POST
    data_selector: ''
    params: {}
- name: list_deployments
  endpoint:
    path: /list_deployments
    method: GET
    data_selector: ''
    params: {}
- name: get_stored_metrics
  endpoint:
    path: /get_stored_metrics
    method: GET
    data_selector: ''
    params: {}
- name: get_stored_logs
  endpoint:
    path: /get_stored_logs
    method: GET
    data_selector: ''
    params: {}
- name: prompt_file
  endpoint:
    path: /upload_prompt_file
    method: POST
    data_selector: id
- name: reward_file
  endpoint:
    path: /upload_reward_file
    method: POST
    data_selector: id
- name: run
  endpoint:
    path: /create_run
    method: POST
    data_selector: id
- name: run_details
  endpoint:
    path: /get_run_details
    method: GET
    data_selector: id
- name: model
  endpoint:
    path: /download_model
    method: GET
    data_selector: path
notes:
- Store your API key as an environment variable rather than hardcoding it.
- Each line must be a complete, valid JSON object
- No trailing commas are allowed
- The file should contain a wide distribution of prompts that your model may potentially
  encounter
- Generally, aim to have at least 100 distinct examples, but this depends on your
  specific task
- Requires setting up an API key for authentication.
errors:
- 'AuthenticationError: Authentication failed'
- 'PermissionError: Permission denied'
- 'NotFoundError: Resource not found'
- 'APIServerError: Server error'
- 'RequestError: Client request error'
- 'AuthenticationError: Handle authentication failure (e.g., prompt for a new API
  key)'
- 'NotFoundError: Handle the error (e.g., prompt for a valid run ID)'
- 'AuthenticationError: Invalid API key provided.'
- 'NotFoundError: Resource not found.'
- 'APIServerError: Server error occurred during the request.'
- 'AuthenticationError: Invalid API Key'
- 'ValueError: Missing Required Parameters'
- 'FileNotFoundError: File not found'
- 'Authentication failed: Unauthorized'
- Missing required arguments
- Resource not found
- Permission denied
- Turbo mode requires 8xH100 GPUs
- HTTP request failed
- Server error
auth_info:
  mentioned_objects: []
client:
  base_url: https://runrlusercontent.com
  auth:
    type: apikey
source_metadata: null
