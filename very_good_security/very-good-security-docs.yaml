resources:
- name: Account Updater
  endpoint:
    path: /card-management/services/account-updater
    method: GET
    data_selector: records
- name: Network Tokens
  endpoint:
    path: /card-management/services/network-tokens
    method: GET
    data_selector: records
- name: Card Art
  endpoint:
    path: /card-management/services/network-tokens/card-art
    method: GET
    data_selector: records
- name: Card Attributes
  endpoint:
    path: /card-management/services/card-attributes
    method: GET
    data_selector: records
- name: Notifications
  endpoint:
    path: /card-management/services/notifications
    method: GET
    data_selector: records
- name: card
  endpoint:
    path: /cards
    method: GET
    data_selector: data
- name: card_update_subscriptions
  endpoint:
    path: /cards/{CardID}/card-update-subscriptions
    method: POST
- name: check_account_updater
  endpoint:
    path: /cards/{CardID}/check
    method: POST
- name: network_token_provisioning
  endpoint:
    path: /cards/{CardID}/network-tokens
    method: POST
- name: network_token_deletion
  endpoint:
    path: /cards/{CardID}/network-tokens
    method: DELETE
- name: cryptogram_request
  endpoint:
    path: /cards/{CardID}/cryptogram
    method: POST
- name: network_token_provisioning
  endpoint:
    path: /cards/{CardID}/network-tokens
    method: POST
    data_selector: result
- name: network_token_deletion
  endpoint:
    path: /cards/{CardID}/network-tokens
    method: DELETE
    data_selector: result
- name: request_cryptogram
  endpoint:
    path: /cards/{CardID}/cryptogram
    method: POST
    data_selector: cryptogram
- name: get_card_object
  endpoint:
    path: /cards/{CardID}
    method: GET
    data_selector: card
- name: account_updater_events
  endpoint:
    path: /card-management/services/account-updater
    method: POST
    data_selector: events
    params: {}
- name: network_tokens_events
  endpoint:
    path: /card-management/services/network-tokens
    method: POST
    data_selector: events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: get_card
  endpoint:
    path: /get-card
    method: GET
    data_selector: response
    params: {}
- name: get_card
  endpoint:
    path: /get_card
    method: GET
    data_selector: response
    params: {}
- name: delete_card
  endpoint:
    path: /delete/card
    method: GET
    data_selector: success_response
    params: {}
- name: Network Tokens Status
  endpoint:
    path: /card-management/api/network-tokens
    method: GET
- name: CryptoFetch
  endpoint:
    path: /card-management/api/network-tokens/cryptogram
    method: POST
- name: Network Tokens
  endpoint:
    path: /card-management/api/network-tokens
    method: POST
- name: Card
  endpoint:
    path: /card-management/api/card
    method: GET
- name: CryptoFetch
  endpoint:
    path: /card-management/api/network-tokens/cryptogram
    method: POST
- name: account_updater_notifications
  endpoint:
    path: /card-management/api/account-updater
    method: GET
    data_selector: notifications
    params: {}
- name: card_notifications
  endpoint:
    path: /card-management/services/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: card_update
  endpoint:
    path: /card-management/services/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: create_card
  endpoint:
    path: /card-management/services/card-attributes
    method: POST
- name: get_card
  endpoint:
    path: /card-management/services/card-attributes
    method: GET
- name: create_card
  endpoint:
    path: /cards
    method: POST
    data_selector: data
    params: {}
- name: get_card
  endpoint:
    path: /cards/{card_id}
    method: GET
    data_selector: data
    params: {}
- name: create_card
  endpoint:
    path: /cards
    method: POST
    data_selector: data
    params:
      attributes:
        pan: '4111111111111111'
        cvc: '123'
        exp_month: 4
        exp_year: 28
- name: get_card
  endpoint:
    path: /cards/{card_id}
    method: GET
    data_selector: data
    params: {}
- name: card_update_subscriptions
  endpoint:
    path: /cards/{card_id}/card-update-subscriptions
    method: POST
    data_selector: data
    params: {}
- name: unsubscribe_card_update
  endpoint:
    path: /cards/{card_id}/card-update-subscriptions
    method: DELETE
    data_selector: data
    params: {}
- name: on_demand_updates
  endpoint:
    path: /cards/{card_id}/check
    method: POST
    data_selector: data
    params: {}
- name: card_update_subscriptions
  endpoint:
    path: /cards/{card_id}/card-update-subscriptions
    method: POST
- name: unsubscribe_card_update_subscriptions
  endpoint:
    path: /cards/{card_id}/card-update-subscriptions
    method: DELETE
- name: on_demand_card_updates
  endpoint:
    path: /cards/{card_id}/check
    method: POST
- name: network_token_provision
  endpoint:
    path: /cards/{card_id}/network-tokens
    method: POST
- name: network_token_delete
  endpoint:
    path: /cards/{card_id}/network-tokens
    method: DELETE
- name: request_cryptogram
  endpoint:
    path: /cards/{card_id}/cryptogram
    method: POST
- name: network_tokens_provision
  endpoint:
    path: /cards/{card_id}/network-tokens
    method: POST
    data_selector: data
    params: {}
- name: network_tokens_delete
  endpoint:
    path: /cards/{card_id}/network-tokens
    method: DELETE
    data_selector: data
    params: {}
- name: request_cryptogram
  endpoint:
    path: /cards/{card_id}/cryptogram
    method: POST
    data_selector: data
    params: {}
- name: account_updater_events
  endpoint:
    path: /card-management/api/account-updater-events
    method: GET
    data_selector: records
- name: network_token_events
  endpoint:
    path: /card-management/api/network-token-events
    method: GET
    data_selector: events
    params: {}
notes:
- CMP simplifies card data management, allowing you to focus on driving growth and
  improving customer satisfaction.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- access_token is valid only for 20 minutes
- This feature is disabled by default for all Card Management Platform accounts; however,
  clients have the option to adjust this setting during onboarding.
- American Express and Discover support is available only for direct merchants.
- Real-time Account Updater is supported only for Visa and Mastercard.
- Enable Push Updates to automatically receive information about the COF services
  (Account Updater and Network Tokens) without manual checks.
- Webhook notification is sent with the result of the network token provisioning,
  whether it succeeds or fails.
- Some objects like Contact may return nulls in deeply nested fields
- 5XX errors cannot be triggered using this method. Please use the fixed card numbers
  from Method 1 to trigger 5XX errors.
- Static test cards will return static cardholder information.
- We recommend reviewing our Forward-Compatible API Integration Guidelines to ensure
  your integration remains stable as CMP evolves. Avoid strict schema validation or
  exact JSON comparisons, as new fields may be added to request and response payloads
  over time.
- When your account is set to manual mode, automatic Account Updater (AU) and Network
  Tokenization (NT) processes are not triggered when a card is created. For sandbox
  cards, you must first manually enroll them in AU. After enrollment, performing a
  GET request by card ID will return the updated AU and NT values.
- 5XX errors cannot be triggered using the Get Card API mock.
- The Card ID generated using the static BIN method will remain valid until deleted
  via the Delete by Card ID API and can be tested using the Get Card mock.
- Alternatively, the static card 5100260000099208 will consistently return a GET card
  response that includes Network Token and Account Updater details.
- The static card 5100260000099208 will consistently return a GET card response that
  includes Network Token and Account Updater details.
- Valid Card IDs are required for successful deletion.
- Invalid Card IDs will return a 404 error.
- Valid Card IDs are returned when a card object is successfully created using the
  Create Card API mock.
- Using an invalid cardID will return a 404 error response.
- For CMP accounts with ON-CREATE enrollment type, Network Tokens are automatically
  provisioned when the card is created.
- Do not use mock test cards for CryptoFetch testing.
- For CMP accounts with MANUAL enrollment type, Network Tokens are not provisioned
  by default.
- In the mock environment, the synchronous response from the Create Card API returns
  the expected cardID—which matches the Account Updater notifications—and accurately
  replicates the card number, BIN, first 8 digits, and last 4 digits as provided in
  the request. However, the address and expiration date fields in the mock response
  will not match the values from the original request.
- In the mock environment, the synchronous response from the Create Card API returns
  the expected cardID which matches the Account Updater notifications.
- Visa, Amex and Discover cannot be tested for Account Updater notifications.
- You will receive event notifications only for cards that generate a 201 - Card Created
  Successfully response.
- Account Updater notifications cannot be tested for Visa, Amex, and Discover networks
  as they do not provide a mock environment.
- You will only receive event notifications for cards that generate a 201 - Card Created
  Successfully response.
- In the mock environment, the synchronous response from the Create Card API returns
  the expected cardID—which matches the Network Token notifications—and accurately
  replicates the card number, BIN, first 8 digits, and last 4 digits as provided in
  the request. However, the address and expiration date fields in the mock response
  will not match the values from the original request.
- Card enrollment in account updater is dependent on the configured workflow.
- Requires management of enrollment based on specific needs.
- 'Note: The ''card_first8'' field will be returned in the card notifications only
  for Visa and Mastercard cards.'
- Network Tokens do not automatically re-provision upon expiration.
- Transactions will fail if either the network token or PAN is expired.
errors:
- '400: bad-request'
- '401: unauthorized'
- '403: forbidden'
- '415: unsupported-media-type'
- '422: missing-required-field'
- '422: validation-failed'
- '422: failed-dependency'
- '500: server-error'
- '502: bad-gateway'
- '503: service-unavailable'
- '504: gateway-timeout'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- data.meta keys must not be longer than 50 characters
- data.meta values must not be longer than 500 characters
- user defined metadata must not contain more than 50 items
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Invalid Token: Check if the token is correctly provisioned or manually invoked.'
- 'Unauthorized: Verify OAuth scopes or token expiration.'
- '401 Unauthorized: Card Object Creation Failed (Unauthorized)'
- '403 Forbidden: Card Object Creation Failed (Forbidden)'
- '422 Unprocessable Entity: Card Object Creation Failed - 422 Unprocessable Entity'
- '400 Bad Request: Card Object Creation Failed - 400 Bad Request'
- '401 Unauthorized: Request payload is sent with incorrect auth token (token has
  incorrect creds)'
- '403 Forbidden: Request payload sent without a required field or an invalid value
  such as 13 as the month in the request'
- '422 Unprocessable Entity: Request payload sent with malformed json such as without
  a comma'
- '404: Using an invalid cardID will return a 404 error response.'
- 4XX errors can be triggered depending on the credentials used and the syntax of
  the request URL.
- Other error messages (e.g., 4XX errors) can be triggered depending on the credentials
  used and the syntax of the request URL.
- '404: Card ID not found.'
- '4XX: Depending on the request syntax and credentials.'
- '404: Card ID not found'
- '4XX: Depending on the credentials used and the syntax of the request URL'
- 'card-brand-not-supported: XXX card brand is not supported. Currently, only Visa
  and Mastercard cards are supported.'
- 'declined: Vgs merchant not found.'
- 'internal-server-error: Something went wrong.'
- 'declined: Vgs merchant not found. This error typically indicates that the customer
  has not been onboarded to use the account updater with the provided vault credentials.'
- 'card_enrollment_failed: Invalid payment instrument or data associated with the
  payment instrument'
- 'card_not_allowed: Card cannot be used for tokenization at this moment. Please try
  again later'
- 'declined: This card is not eligible for tokenization at this moment with the Network;
  Retry at a later time'
- 'service_unavailable: Downstream service unavailable; retry later'
- 'rejected: This card is not eligible for tokenization at this moment with the Network;
  Retry later'
- '400: The request was invalid.'
- '401: No credentials were provided, or the provided credentials were expired.'
- '403: Valid credentials were provided, but they do not permit access to this resource.'
- '404: Resource not found.'
- '500: Internal Server Error.'
- '503: Service Unavailable.'
- '201: Card created'
- '303: The card you are trying to create already exists within the system.'
- '422: The server was unable to process the request because it contains invalid data.'
- '500: Internal Server Error'
- '503: Service Unavailable'
- 'card-brand-not-supported: Only Visa and Mastercard cards are supported.'
- 'declined: VGS merchant not found.'
- 'card-brand-not-supported: XXX card brand is not supported. Currently, only Visa
  and Mastercard cards are supported. This error will be returned if an Amex, Discover,
  or any other card scheme is used.'
- 'declined: VGS merchant not found. This error typically indicates that the customer
  has not been onboarded to use the account updater with the provided vault credentials.'
- 'provisioning_failed: Invalid payment instrument or data associated with the payment
  instrument'
- 'declined: This card is not eligible for tokenization at this moment with the Network;
  Retry at a later time.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Service Account
  - CLIENT_ID
  - CLIENT_SECRET
client:
  base_url: https://sandbox.vgsapi.com
  auth:
    type: bearerAuth
  headers:
    Content-Type: application/vnd.api+json
    Accept: '*/*'
source_metadata: null
