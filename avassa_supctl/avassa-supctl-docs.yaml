resources:
- name: ticket-deployment
  endpoint:
    path: /applications-and-deployments
    method: GET
    data_selector: applications
    params: {}
- name: ticket-manager
  endpoint:
    path: /applications/ticket-manager
    method: GET
    data_selector: services
    params: {}
- name: startup_probe
  endpoint:
    path: /services/containers/probes/startup
    method: POST
- name: liveness_probe
  endpoint:
    path: /services/containers/probes/liveness
    method: POST
- name: readiness_probe
  endpoint:
    path: /services/containers/probes/readiness
    method: POST
- name: transform
  endpoint:
    path: /transformation
    method: POST
    data_selector: transformation_results
- name: consume_topic
  endpoint:
    path: /api/v1/state/volga/topics/{topic-name}/consume
    method: POST
- name: produce_topic
  endpoint:
    path: /api/v1/state/volga/topics/{topic-name}/produce
    method: POST
- name: create_topic
  endpoint:
    path: /api/v1/state/volga/topics/{topic-name}/create-topic
    method: POST
- name: producer
  endpoint:
    path: /open-producer
    method: POST
- name: consumer
  endpoint:
    path: /open-consumer
    method: POST
- name: messages
  endpoint:
    path: /more
    method: POST
- name: infra_producer
  endpoint:
    path: /open-infra-producer
    method: POST
    data_selector: result
    params: {}
- name: query_topics
  endpoint:
    path: /query-topics
    method: POST
    data_selector: result
    params: {}
- name: topics
  endpoint:
    path: /api/v1/state/volga/topics/{topic-name}/create-topic
    method: POST
- name: consume
  endpoint:
    path: /api/v1/state/volga/topics/{topic-name}/consume
    method: POST
- name: produce
  endpoint:
    path: /api/v1/state/volga/topics/{topic-name}/produce
    method: POST
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: records
- name: producer
  endpoint:
    path: /open-producer
    method: POST
    data_selector: result
    params:
      location: local
      topic: mytopic
      name: myprod
      create-options:
        replication-factor: 1
        persistence: disk
- name: consumer
  endpoint:
    path: /open-consumer
    method: POST
    data_selector: result
    params:
      location: local
      topic: mytopic
      position: unread
      name: mycons
      mode: exclusive
      create-options:
        replication-factor: 1
        persistence: disk
- name: container_image
  endpoint:
    path: /fundamentals/image-handling
    method: GET
    data_selector: images
- name: host_metrics
  endpoint:
    path: /reference/volga-topics#topic-systemhost-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: application_metrics
  endpoint:
    path: /reference/volga-topics#topic-systemapplication-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: host_metrics
  endpoint:
    path: /reference/volga-topics#topic-systemhost-metrics
    method: GET
    data_selector: metrics
- name: application_metrics
  endpoint:
    path: /reference/volga-topics#topic-systemapplication-metrics
    method: GET
    data_selector: metrics
- name: system:scheduler-events
  endpoint:
    path: /system/scheduler-events
    method: GET
- name: system:deployment-events
  endpoint:
    path: /system/deployment-events
    method: GET
- name: system:config-events
  endpoint:
    path: /system/config-events
    method: GET
- name: system:events
  endpoint:
    path: /system/events
    method: GET
- name: system:application-metrics
  endpoint:
    path: /system/application-metrics
    method: GET
- name: system:audit-trail-log
  endpoint:
    path: /system/audit-trail-log
    method: GET
- name: system:container-logs:CONTAINER-ID
  endpoint:
    path: /system/container-logs/CONTAINER-ID
    method: GET
- name: system:logs
  endpoint:
    path: /system/logs
    method: GET
- name: system:alerts
  endpoint:
    path: /system/alerts
    method: GET
- name: system:all-scheduler-events
  endpoint:
    path: /system/all-scheduler-events
    method: GET
- name: system:unauthenticated-audit-trail-log
  endpoint:
    path: /system/unauthenticated-audit-trail-log
    method: GET
- name: system:host-metrics
  endpoint:
    path: /system/host-metrics
    method: GET
- name: system:supd-metrics
  endpoint:
    path: /system/supd-metrics
    method: GET
- name: system:site-alerts
  endpoint:
    path: /system/site-alerts
    method: GET
- name: system:scheduler-events
  endpoint:
    path: /system/scheduler-events
    method: GET
    data_selector: records
- name: system:deployment-events
  endpoint:
    path: /system/deployment-events
    method: GET
    data_selector: records
- name: system:config-events
  endpoint:
    path: /system/config-events
    method: GET
    data_selector: records
- name: system:events
  endpoint:
    path: /system/events
    method: GET
    data_selector: records
- name: system:application-metrics
  endpoint:
    path: /system/application-metrics
    method: GET
    data_selector: records
- name: system:audit-trail-log
  endpoint:
    path: /system/audit-trail-log
    method: GET
    data_selector: records
- name: system:container-logs:CONTAINER-ID
  endpoint:
    path: /system/container-logs/CONTAINER-ID
    method: GET
    data_selector: records
- name: system:logs
  endpoint:
    path: /system/logs
    method: GET
    data_selector: records
- name: system:alerts
  endpoint:
    path: /system/alerts
    method: GET
    data_selector: records
- name: system:all-scheduler-events
  endpoint:
    path: /system/all-scheduler-events
    method: GET
    data_selector: records
- name: system:unauthenticated-audit-trail-log
  endpoint:
    path: /system/unauthenticated-audit-trail-log
    method: GET
    data_selector: records
- name: system:host-metrics
  endpoint:
    path: /system/host-metrics
    method: GET
    data_selector: records
- name: system:supd-metrics
  endpoint:
    path: /system/supd-metrics
    method: GET
    data_selector: records
- name: system:site-alerts
  endpoint:
    path: /system/site-alerts
    method: GET
    data_selector: records
- name: application-status-changed
  endpoint:
    path: /system/scheduler-events/application-status-changed
    method: GET
    data_selector: application-status-changed
- name: container-completed
  endpoint:
    path: /system/scheduler-events/container-completed
    method: GET
    data_selector: container-completed
- name: container-exited
  endpoint:
    path: /system/scheduler-events/container-exited
    method: GET
    data_selector: container-exited
- name: container-failed
  endpoint:
    path: /system/scheduler-events/container-failed
    method: GET
    data_selector: container-failed
- name: container-ready
  endpoint:
    path: /system/scheduler-events/container-ready
    method: GET
    data_selector: container-ready
- name: container-starting
  endpoint:
    path: /system/scheduler-events/container-starting
    method: GET
    data_selector: container-starting
- name: container-stopped
  endpoint:
    path: /system/scheduler-events/container-stopped
    method: GET
    data_selector: container-stopped
- name: container-unready
  endpoint:
    path: /system/scheduler-events/container-unready
    method: GET
    data_selector: container-unready
- name: service-instance-creation-failed
  endpoint:
    path: /system/scheduler-events/service-instance-creation-failed
    method: GET
    data_selector: service-instance-creation-failed
- name: service-instance-failed
  endpoint:
    path: /system/scheduler-events/service-instance-failed
    method: GET
    data_selector: service-instance-failed
- name: service-instance-ready
  endpoint:
    path: /system/scheduler-events/service-instance-ready
    method: GET
    data_selector: service-instance-ready
- name: service-instance-updated
  endpoint:
    path: /system/scheduler-events/service-instance-updated
    method: GET
    data_selector: service-instance-updated
- name: application_metrics
  endpoint:
    path: /system/application-metrics
    method: GET
    data_selector: entries
- name: audit_trail_log
  endpoint:
    path: /system/audit-trail-log
    method: GET
    data_selector: logs
- name: container_logs
  endpoint:
    path: /system/container-logs
    method: GET
    data_selector: logs
- name: system_logs
  endpoint:
    path: /system/logs
    method: GET
    data_selector: logs
- name: application-status-changed
  endpoint:
    path: /events/application-status-changed
    method: GET
    data_selector: records
- name: container-completed
  endpoint:
    path: /events/container-completed
    method: GET
    data_selector: records
- name: container-exited
  endpoint:
    path: /events/container-exited
    method: GET
    data_selector: records
- name: container-failed
  endpoint:
    path: /events/container-failed
    method: GET
    data_selector: records
- name: container-ready
  endpoint:
    path: /events/container-ready
    method: GET
    data_selector: records
- name: container-starting
  endpoint:
    path: /events/container-starting
    method: GET
    data_selector: records
- name: container-stopped
  endpoint:
    path: /events/container-stopped
    method: GET
    data_selector: records
- name: container-unready
  endpoint:
    path: /events/container-unready
    method: GET
    data_selector: records
- name: service-instance-creation-failed
  endpoint:
    path: /events/service-instance-creation-failed
    method: GET
    data_selector: records
- name: service-instance-failed
  endpoint:
    path: /events/service-instance-failed
    method: GET
    data_selector: records
- name: service-instance-ready
  endpoint:
    path: /events/service-instance-ready
    method: GET
    data_selector: records
- name: service-instance-starting
  endpoint:
    path: /events/service-instance-starting
    method: GET
    data_selector: records
- name: service-instance-stopped
  endpoint:
    path: /events/service-instance-stopped
    method: GET
    data_selector: records
- name: service-instance-unready
  endpoint:
    path: /events/service-instance-unready
    method: GET
    data_selector: records
- name: service-instance-updated
  endpoint:
    path: /events/service-instance-updated
    method: GET
    data_selector: records
- name: application-error
  endpoint:
    path: /system/alerts/application-error
    method: GET
    data_selector: alert-specific-data
- name: bound-cidrs-violation
  endpoint:
    path: /system/alerts/bound-cidrs-violation
    method: GET
    data_selector: alert-specific-data
- name: container-layer-threshold-reached
  endpoint:
    path: /system/alerts/container-layer-threshold-reached
    method: GET
    data_selector: alert-specific-data
- name: custom-alert
  endpoint:
    path: /system/alerts/custom-alert
    method: GET
    data_selector: alert-specific-data
- name: ephemeral-volume-threshold-reached
  endpoint:
    path: /system/alerts/ephemeral-volume-threshold-reached
    method: GET
    data_selector: alert-specific-data
- name: failed-login-attempts
  endpoint:
    path: /system/alerts/failed-login-attempts
    method: GET
    data_selector: alert-specific-data
- name: invalid-auto-cert-configuration
  endpoint:
    path: /system/alerts/invalid-auto-cert-configuration
    method: GET
    data_selector: alert-specific-data
- name: os-upgrade-failed
  endpoint:
    path: /system/alerts/os-upgrade-failed
    method: GET
    data_selector: alert-specific-data
- name: persistent-volume-threshold-reached
  endpoint:
    path: /system/alerts/persistent-volume-threshold-reached
    method: GET
    data_selector: alert-specific-data
- name: suspected-security-breach
  endpoint:
    path: /system/alerts/suspected-security-breach
    method: GET
    data_selector: alert-specific-data
- name: unwrap-failure
  endpoint:
    path: /system/alerts/unwrap-failure
    method: GET
    data_selector: alert-specific-data
- name: volga-topic-integrity
  endpoint:
    path: /system/alerts/volga-topic-integrity
    method: GET
    data_selector: alert-specific-data
- name: supd_metrics
  endpoint:
    path: /system/supd-metrics
    method: GET
    data_selector: metrics
- name: site_alerts
  endpoint:
    path: /system/site-alerts
    method: GET
    data_selector: alerts
- name: change-options
  endpoint:
    path: /change-options
    method: POST
    data_selector: response
    params: {}
- name: open-infra-producer
  endpoint:
    path: /open-infra-producer
    method: POST
    data_selector: response
    params: {}
- name: infra-produce
  endpoint:
    path: /infra-produce
    method: POST
    data_selector: response
    params: {}
- name: open-infra-consumer
  endpoint:
    path: /open-infra-consumer
    method: POST
    data_selector: response
    params: {}
- name: infra-sync
  endpoint:
    path: /infra-sync
    method: POST
    data_selector: response
    params: {}
- name: application-summary-status-changed
  endpoint:
    path: /system/deployment-events/application-summary-status-changed
    method: GET
    data_selector: event-specific-data
    params: {}
- name: deployment-failed
  endpoint:
    path: /system/deployment-events/deployment-failed
    method: GET
    data_selector: event-specific-data
    params: {}
- name: deployment-initiated
  endpoint:
    path: /system/deployment-events/deployment-initiated
    method: GET
    data_selector: event-specific-data
    params: {}
- name: deployment-sites-removed
  endpoint:
    path: /system/deployment-events/deployment-sites-removed
    method: GET
    data_selector: event-specific-data
    params: {}
- name: deployment-succeeded
  endpoint:
    path: /system/deployment-events/deployment-succeeded
    method: GET
    data_selector: event-specific-data
    params: {}
- name: config-created
  endpoint:
    path: /system/config-events/config-created
    method: GET
    data_selector: event-specific-data
    params: {}
- name: config-deleted
  endpoint:
    path: /system/config-events/config-deleted
    method: GET
    data_selector: event-specific-data
    params: {}
- name: config-updated
  endpoint:
    path: /system/config-events/config-updated
    method: GET
    data_selector: event-specific-data
    params: {}
- name: site-connected
  endpoint:
    path: /system/events/site-connected
    method: GET
    data_selector: event-specific-data
    params: {}
- name: site-disconnected
  endpoint:
    path: /system/events/site-disconnected
    method: GET
    data_selector: event-specific-data
    params: {}
- name: supd-download
  endpoint:
    path: /system/events/supd-download
    method: GET
    data_selector: event-specific-data
    params: {}
- name: supd-upgrade-announcement
  endpoint:
    path: /system/events/supd-upgrade-announcement
    method: GET
    data_selector: event-specific-data
    params: {}
- name: supd-upgraded
  endpoint:
    path: /system/events/supd-upgraded
    method: GET
    data_selector: event-specific-data
    params: {}
- name: ui-upgrade-announcement
  endpoint:
    path: /system/events/ui-upgrade-announcement
    method: GET
    data_selector: event-specific-data
    params: {}
- name: ui-upgrade-failed
  endpoint:
    path: /system/events/ui-upgrade-failed
    method: GET
    data_selector: event-specific-data
    params: {}
- name: ui-upgraded
  endpoint:
    path: /system/events/ui-upgraded
    method: GET
    data_selector: event-specific-data
    params: {}
- name: query-topics
  endpoint:
    path: /query-topics
    method: POST
    data_selector: response
- name: application_metrics
  endpoint:
    path: /system/application-metrics
    method: GET
    data_selector: entries
- name: audit_trail_log
  endpoint:
    path: /system/audit-trail-log
    method: GET
    data_selector: logs
- name: container_logs
  endpoint:
    path: /system/container-logs
    method: GET
    data_selector: logs
- name: tenant_logs
  endpoint:
    path: /system/logs
    method: GET
    data_selector: logs
- name: tenant_alerts
  endpoint:
    path: /system/alerts
    method: GET
    data_selector: alerts
- name: initial-site-config
  endpoint:
    path: /initial-site-config
    method: GET
    data_selector: config
    params: {}
- name: call-home
  endpoint:
    path: /call-home
    method: GET
    data_selector: config
    params: {}
- name: network
  endpoint:
    path: /network
    method: GET
    data_selector: config
    params: {}
- name: userns
  endpoint:
    path: /userns
    method: GET
    data_selector: config
    params: {}
- name: specific-pools
  endpoint:
    path: /specific-pools
    method: GET
    data_selector: config
    params: {}
- name: top-site-config
  endpoint:
    path: /top-site-config
    method: GET
    data_selector: config
    params: {}
- name: registry
  endpoint:
    path: /registry
    method: GET
    data_selector: config
    params: {}
- name: host
  endpoint:
    path: /host
    method: GET
    data_selector: config
    params: {}
- name: application_error_alert
  endpoint:
    path: /system/alerts/application-error
    method: GET
    data_selector: alert-data
- name: bound_cidrs_violation_alert
  endpoint:
    path: /system/alerts/bound-cidrs-violation
    method: GET
    data_selector: alert-data
- name: container_layer_threshold_reached_alert
  endpoint:
    path: /system/alerts/container-layer-threshold-reached
    method: GET
    data_selector: alert-data
- name: custom_alert
  endpoint:
    path: /system/alerts/custom-alert
    method: GET
    data_selector: alert-data
- name: ephemeral_volume_threshold_reached_alert
  endpoint:
    path: /system/alerts/ephemeral-volume-threshold-reached
    method: GET
    data_selector: alert-data
- name: failed_login_attempts_alert
  endpoint:
    path: /system/alerts/failed-login-attempts
    method: GET
    data_selector: alert-data
- name: invalid_auto_cert_configuration_alert
  endpoint:
    path: /system/alerts/invalid-auto-cert-configuration
    method: GET
    data_selector: alert-data
- name: os_upgrade_failed_alert
  endpoint:
    path: /system/alerts/os-upgrade-failed
    method: GET
    data_selector: alert-data
- name: persistent_volume_threshold_reached_alert
  endpoint:
    path: /system/alerts/persistent-volume-threshold-reached
    method: GET
    data_selector: alert-data
- name: suspected_security_breach_alert
  endpoint:
    path: /system/alerts/suspected-security-breach
    method: GET
    data_selector: alert-data
- name: unwrap_failure_alert
  endpoint:
    path: /system/alerts/unwrap-failure
    method: GET
    data_selector: alert-data
- name: volga_topic_integrity_alert
  endpoint:
    path: /system/alerts/volga-topic-integrity
    method: GET
    data_selector: alert-data
- name: supd_metrics
  endpoint:
    path: /system/supd-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: site_alerts
  endpoint:
    path: /system/site-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: credentials
  endpoint:
    path: /credentials
    method: GET
    data_selector: data
- name: pg
  endpoint:
    path: /services/data/vXX.X/sobjects/pg
    method: GET
    data_selector: records
    params: {}
- name: pgpool
  endpoint:
    path: /services/data/vXX.X/sobjects/pgpool
    method: GET
    data_selector: records
    params: {}
- name: open-producer
  endpoint:
    path: /open-producer
    method: POST
    data_selector: response
    params: {}
- name: produce
  endpoint:
    path: /produce
    method: POST
    data_selector: response
    params: {}
- name: open-consumer
  endpoint:
    path: /open-consumer
    method: POST
    data_selector: response
    params: {}
- name: more
  endpoint:
    path: /more
    method: POST
    data_selector: response
    params: {}
- name: ack
  endpoint:
    path: /ack
    method: POST
    data_selector: response
    params: {}
- name: delete-topic
  endpoint:
    path: /delete-topic
    method: POST
    data_selector: response
    params: {}
- name: db
  endpoint:
    path: /data/db
    method: GET
    data_selector: records
    params: {}
- name: express
  endpoint:
    path: /data/configdb
    method: GET
    data_selector: records
    params: {}
- name: change-options
  endpoint:
    path: /change-options
    method: POST
    data_selector: response
    params: {}
- name: open-infra-producer
  endpoint:
    path: /open-infra-producer
    method: POST
    data_selector: response
    params: {}
- name: infra-produce
  endpoint:
    path: /infra-produce
    method: POST
    data_selector: response
    params: {}
- name: open-infra-consumer
  endpoint:
    path: /open-infra-consumer
    method: POST
    data_selector: response
    params: {}
- name: infra-sync
  endpoint:
    path: /infra-sync
    method: POST
    data_selector: response
    params: {}
- name: influxdb
  endpoint:
    path: /services/data/vXX.X/sobjects/influxdb
    method: GET
    data_selector: records
    params: {}
- name: query-topics
  endpoint:
    path: /query-topics
    method: POST
    data_selector: response
- name: credentials
  endpoint:
    data_selector: data
- name: nginx-svs
  endpoint:
    path: /nginx-svs
    method: GET
    data_selector: services
- name: pg
  endpoint:
    path: /services/data/vXX.X/sobjects/pg
    method: GET
    data_selector: records
- name: pgpool
  endpoint:
    path: /services/data/vXX.X/sobjects/pgpool
    method: GET
    data_selector: records
- name: mqtt-bridge
  endpoint:
    path: /mqtt-bridge
    method: POST
- name: admin-api
  endpoint:
    path: /admin-api
    method: GET
- name: credentials
  endpoint:
    path: /api/v2/authorize
    method: POST
    data_selector: authorization
    params: {}
- name: db
  endpoint:
    path: /data/db
    method: GET
    data_selector: records
    params: {}
- name: express
  endpoint:
    path: /data/configdb
    method: GET
    data_selector: records
    params: {}
- name: influxdb
  endpoint:
    path: /var/lib/influxdb2
    method: POST
    data_selector: data
    params: {}
- name: db
  endpoint:
    path: /data/db
    method: GET
    data_selector: records
    params: {}
- name: express
  endpoint:
    path: /data/configdb
    method: GET
    data_selector: records
    params: {}
- name: mqtt
  endpoint:
    path: /mqtt
    method: GET
- name: mqtt_consumer
  endpoint:
    path: /v1/alert
    method: GET
    data_selector: records
    params: {}
- name: credentials
  endpoint:
    path: /api/v2/credentials
    method: GET
    data_selector: data
- name: db
  endpoint:
    path: /data/db
    method: GET
    data_selector: records
- name: express
  endpoint:
    path: /data/configdb
    method: GET
    data_selector: records
- name: flows
  endpoint:
    path: /tmp/flows.json
    method: GET
    data_selector: flows
    params: {}
- name: credentials
  endpoint:
    path: /credentials
    method: GET
    data_selector: data
- name: influxdb
  endpoint:
    path: /var/lib/influxdb2
    method: GET
    data_selector: records
- name: mqtt
  endpoint:
    path: /services/data/vXX.X/sobjects/mqtt
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /v1/alert
    method: GET
    data_selector: ''
    params: {}
- name: clear
  endpoint:
    path: /v1/clear
    method: GET
    data_selector: ''
    params: {}
- name: db
  endpoint:
    path: /data/db
    method: GET
    data_selector: records
- name: express
  endpoint:
    path: /data/configdb
    method: GET
    data_selector: records
- name: influxdb
  endpoint:
    path: /var/lib/influxdb2
    method: GET
- name: telegraf
  endpoint:
    path: /etc/telegraf/telegraf.conf
    method: GET
    data_selector: data
    params: {}
- name: node-red
  endpoint:
    path: /tmp/flows.json
    method: GET
    data_selector: data
    params: {}
- name: sensor
  endpoint:
    path: /flows.json
    method: GET
- name: mqtt-broker
  endpoint:
    path: /mqtt-broker
    method: GET
    data_selector: records
- name: mqtt in
  endpoint:
    path: /mqtt-in
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /function
    method: GET
    data_selector: records
- name: mqtt out
  endpoint:
    path: /mqtt-out
    method: GET
    data_selector: records
- name: credentials
  endpoint:
    path: /credentials
    method: GET
    data_selector: data
- name: influxdb
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: credentials
  endpoint:
    path: /mosquitto/config/password
    method: GET
    data_selector: data
    params: {}
- name: sensor
  endpoint:
    path: /flows.json
    method: GET
    data_selector: services
notes:
- Secrets are automatically shared to sites where they are required, and policies
  are applied across the entire system.
- Local secrets are not propagated upward to avoid poisoning from a potential breach.
- Avassa is an application management platform for distributed container applications.
- Secrets are automatically shared to sites where they are required.
- Backups of this data is outside the scope of the Edge Enforcer and care should be
  taken to backup important data from the edge nodes.
- If a readiness probe is not configured, a running container is always considered
  ready.
- If all readiness probes in a service are non ready, the applications will be set
  into error state.
- Most operations towards the Avassa API require an access token.
- Different identity services may assign different policies and restrictions to the
  token.
- Uses a unique AES key for each tenant's Strongbox data
- Supports Format Preserving Encryption (FPE) for data masking
- Each produced message can be either asynchronous or synchronous.
- Consumer must send 'more' command to receive more data.
- User code produces into the Infra per specified JSON structure.
- Volga requires no configuration from the end user.
- Topics are automatically created the first time they are opened.
- The Edge Enforcer starts its own DNS name server on each host in an edge.
- Each site in an environment is given its own domain by combining the site name with
  the global domain of the environment.
- In most places the default name server will block private addresses to protect against
  DNS rebinding attacks, thus if your sites only have private addresses delegation
  may not work.
- Avassa does not have a default registry, if no registry address is specified one
  also has to configure a default remote registry.
- User code produces into the Infra per above.
- Volga infra is thus just an application built on top of regular Volga topics.
- When a host starts up the very first time, it calls home to its configured parent
  site.
- For security reasons, the site bundle can only be unwrapped once.
- Initial edge site communication involves host-specific API certificate and site-specific
  access token.
- Communication paths include volga infrastructure and container image registry.
- Uses DNS server on each host for application networking
- Supports custom domains for tenant-specific configurations
- The Avassa Volga WebSocket API enables real-time, bidirectional communication for
  producing and consuming messages using websockets.
- If dry-run is true, the response is a query-topics-dry-run object.
- If count-matches is true, the response is a simple JSON object containing the number
  of matches.
- The websocket API enables real-time communication.
- Topics must be unique for each site for each tenant.
- Some objects may return nulls in deeply nested fields
- Uses vault for secrets management
- If `payload-only` is `false`, the messages will come in the form of `query-topics-message`
  objects, but if `payload-only` is `true`, they will be raw volga messages.
- The default value for `auto-more` is `true`.
- In production, this should be a persistent-volume to prevent accidental deletion
  of the database file
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Note, you may want a persistent volume here. In case this application is removed
  from a site, an ephemeral volume will be removed.
- Uses MongoDB with specified username and password.
- Get credentials from Strongbox
- Maximum number of rotated archives to keep is 5
- Uses MQTT for communication
- Requires setup of credentials for MQTT access
- NOTE, this must match the telegraf config below
- Auto renew the CA when there are 30 days left
- Uses replicated mode with 1 replica
- Outbound access allows all
- Displays the summary of all volumes scheduled in the system with the information
  on the sites each volume is scheduled on and whether it is in use.
errors:
- Transient errors may occur when opening a topic due to majority not being established.
- 'result error: Some error description ...'
- '401 Unauthorized: Provide valid authentication credentials.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- no-such-site
- no-such-topic
- mode-error
- log-corrupt
- not-enough-nodes
- bad-name
- no-exists
- policy-violation
- bad-pattern
- no-such-infra
- infra-topic
- system-topic
- bad-topic-name
- bad-format
- bad-options
- bad-direction
- bad-json
- bad-request
- internal-error
- too-big-message
- drop
- archived-topic
- bad-transit-key
- '401 Unauthorized: Recheck API key or token expiration'
- The response varies depending on the input.
- If an error occurs, the response will be a `response` object.
- 'no-such-site: A nonexistent site was requested'
- 'no-such-topic: A nonexistent topic was requested'
- 'mode-error: Not all consumers have the same mode'
- 'log-corrupt: Topic files are corrupt and cannot be opened'
- 'not-enough-nodes: The requested replication-factor cannot be fulfilled'
- 'bad-name: Topic names can only contain specific characters'
- 'no-exists: Operation attempted towards a nonexistent topic over the REST API'
- 'policy-violation: Strongbox policy made the operation fail'
- 'bad-pattern: A bad regular expression was provided'
- 'no-such-infra: A nonexistent infra was requested'
- 'internal-error: An internal error occurred, check logs for more info'
- '401 Unauthorized: Check your API token'
- '404 Not Found: Ensure the endpoint exists'
- '401 Unauthorized: Recheck username or password.'
- '401 Unauthorized: Recheck credentials'
- '401 Unauthorized: Recheck credentials or authorization'
- '404 Not Found: Check endpoint path or resource availability'
auth_info:
  mentioned_objects:
  - Strongbox
  - credentials
  - USERNAME
  - PASSWORD
  - ADMIN_TOKEN
  - ORGANIZATION
  - InfluxDBToken
  - User
  - USER
  - admin-token
  - username
  - password
  - organization
  - mqtt-bridge-username
  - mqtt-bridge-password
  - admin-username
  - admin-password
  - MQTT_USERNAME
  - MQTT_PASSWORD
client:
  base_url: https://avassa-api.redoc.ly
  auth:
    type: oauth2
source_metadata: null
