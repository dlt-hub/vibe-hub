resources:
- name: Path2D
  endpoint:
    path: /path2d
    method: POST
    data_selector: path_value
    params: {}
- name: Pattern
  endpoint:
    path: /pattern
    method: POST
    data_selector: image
    params: {}
- name: LinearGradient
  endpoint:
    path: /linear_gradient
    method: POST
    data_selector: gradient
    params: {}
- name: RadialGradient
  endpoint:
    path: /radial_gradient
    method: POST
    data_selector: gradient
    params: {}
- name: Canvas
  endpoint:
    path: /canvas
    method: POST
    data_selector: canvas
    params: {}
- name: stroke_styled_polygons
  endpoint:
    path: /stroke_styled_polygons
    method: POST
- name: stroke_line
  endpoint:
    path: /stroke_line
    method: POST
- name: stroke_lines
  endpoint:
    path: /stroke_lines
    method: POST
- name: stroke_styled_line_segments
  endpoint:
    path: /stroke_styled_line_segments
    method: POST
- name: stroke_line_segments
  endpoint:
    path: /stroke_line_segments
    method: POST
- name: begin_path
  endpoint:
    path: /begin_path
    method: POST
- name: close_path
  endpoint:
    path: /close_path
    method: POST
- name: stroke
  endpoint:
    path: /stroke
    method: POST
- name: fill
  endpoint:
    path: /fill
    method: POST
- name: move_to
  endpoint:
    path: /move_to
    method: POST
- name: line_to
  endpoint:
    path: /line_to
    method: POST
- name: rect
  endpoint:
    path: /rect
    method: POST
- name: arc
  endpoint:
    path: /arc
    method: POST
- name: ellipse
  endpoint:
    path: /ellipse
    method: POST
- name: arc_to
  endpoint:
    path: /arc_to
    method: POST
- name: quadratic_curve_to
  endpoint:
    path: /quadratic_curve_to
    method: POST
- name: bezier_curve_to
  endpoint:
    path: /bezier_curve_to
    method: POST
- name: fill_text
  endpoint:
    path: /fill_text
    method: POST
- name: stroke_text
  endpoint:
    path: /stroke_text
    method: POST
- name: get_line_dash
  endpoint:
    path: /get_line_dash
    method: GET
- name: set_line_dash
  endpoint:
    path: /set_line_dash
    method: POST
- name: draw_image
  endpoint:
    path: /draw_image
    method: POST
- name: put_image_data
  endpoint:
    path: /put_image_data
    method: POST
- name: create_image_data
  endpoint:
    path: /create_image_data
    method: POST
- name: clip
  endpoint:
    path: /clip
    method: POST
- name: save
  endpoint:
    path: /save
    method: POST
- name: restore
  endpoint:
    path: /restore
    method: POST
- name: translate
  endpoint:
    path: /translate
    method: POST
- name: rotate
  endpoint:
    path: /rotate
    method: POST
- name: scale
  endpoint:
    path: /scale
    method: POST
- name: transform
  endpoint:
    path: /transform
    method: POST
- name: set_transform
  endpoint:
    path: /set_transform
    method: POST
- name: reset_transform
  endpoint:
    path: /reset_transform
    method: POST
- name: clear
  endpoint:
    path: /clear
    method: POST
- name: flush
  endpoint:
    path: /flush
    method: POST
- name: on_client_ready
  endpoint:
    path: /on_client_ready
    method: POST
- name: on_mouse_move
  endpoint:
    path: /on_mouse_move
    method: POST
- name: on_mouse_down
  endpoint:
    path: /on_mouse_down
    method: POST
- name: on_mouse_up
  endpoint:
    path: /on_mouse_up
    method: POST
- name: on_mouse_out
  endpoint:
    path: /on_mouse_out
    method: POST
- name: on_mouse_wheel
  endpoint:
    path: /on_mouse_wheel
    method: POST
- name: MultiRoughCanvas
  endpoint:
    path: /MultiRoughCanvas
    method: GET
- name: MultiCanvas
  endpoint:
    path: /MultiCanvas
    method: GET
- name: canvas
  endpoint:
    path: /canvas
    method: GET
    data_selector: shapes
    params: {}
- name: polygons
  endpoint:
    path: /polygons
    method: POST
    data_selector: records
- name: RoughCanvas
  endpoint:
    path: /roughcanvas
    method: GET
    data_selector: canvas
    params: {}
- name: drawing_text
  endpoint:
    path: /drawing/text
    method: GET
    data_selector: methods
    params: {}
- name: styles_and_colors
  endpoint:
    path: /styles/colors
    method: GET
    data_selector: attributes
    params: {}
- name: canvas_image
  endpoint:
    path: /retrieve_canvas_image
    method: GET
    data_selector: image_data
    params: {}
- name: animation_loop
  endpoint:
    path: /animation/loop
    method: GET
    data_selector: steps_number
    params: {}
- name: canvas_state
  endpoint:
    path: /canvas/state
    method: GET
    data_selector: state
    params: {}
- name: mouse_events
  endpoint:
    path: /mouse_events
    method: GET
    data_selector: events
    params: {}
- name: touch_events
  endpoint:
    path: /touch_events
    method: GET
    data_selector: events
    params: {}
- name: keyboard_events
  endpoint:
    path: /keyboard_events
    method: GET
    data_selector: events
    params: {}
notes:
- The Canvas is an interactive widget
- You can display it multiple times in the Notebook
- You can observe some of its attributes and call functions when they change
- Applying a filter can be slow, especially if you draw many shapes.
- This property is not supported by Safari and Internet Explorer.
- This property is **not supported by Safari and Internet Explorer**
- The RoughCanvas does not support yet applying the hand-drawn style to custom path
  commands.
- Image state of the Canvas is not synchronized between the TypeScript front-end and
  the Python back-end by default.
- You cannot make an infinite animation using this approach.
- Please open an issue or a Pull Request if you want more events to be supported by
  ipycanvas
- Canvas is a stateless widget, actual state is not saved nor synchronized.
- Limitations with Voil√†, need to use on_client_ready method for drawings.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://github.com/jupyter-widgets-contrib/ipycanvas
source_metadata: null
