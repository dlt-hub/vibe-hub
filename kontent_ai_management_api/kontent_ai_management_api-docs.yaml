resources:
- name: upload_binary_file
  endpoint:
    path: /projects/{environment_id}/files/{file_name}
    method: POST
- name: add_asset
  endpoint:
    path: /projects/{environment_id}/assets
    method: POST
- name: list_assets
  endpoint:
    path: /projects/{environment_id}/assets
    method: GET
    data_selector: assets
    params: {}
- name: retrieve_asset
  endpoint:
    path: /projects/{environment_id}/assets/{asset_identifier}
    method: GET
    data_selector: ''
    params: {}
- name: upsert_asset
  endpoint:
    path: /projects/{environment_id}/assets/{asset_identifier}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_asset
  endpoint:
    path: /projects/{environment_id}/assets/{asset_identifier}
    method: DELETE
    data_selector: ''
    params: {}
- name: retrieve_asset_folders
  endpoint:
    path: /projects/{environment_id}/folders
    method: GET
    data_selector: folders
    params: {}
- name: add_asset_folders
  endpoint:
    path: /projects/{environment_id}/folders
    method: POST
- name: modify_asset_folders
  endpoint:
    path: /projects/{environment_id}/folders
    method: PATCH
- name: list_renditions
  endpoint:
    path: /projects/{environment_id}/assets/{asset_identifier}/renditions
    method: GET
- name: add_rendition
  endpoint:
    path: /projects/{environment_id}/assets/{asset_identifier}/renditions
    method: POST
- name: retrieve_rendition
  endpoint:
    path: /projects/{environment_id}/assets/{asset_identifier}/renditions/{rendition_identifier}
    method: GET
- name: modify_rendition
  endpoint:
    path: /projects/{environment_id}/assets/{asset_identifier}/renditions/{rendition_identifier}
    method: PUT
    data_selector: rendition
    params: {}
- name: list_collections
  endpoint:
    path: /projects/{environment_id}/collections
    method: GET
    data_selector: collections
    params: {}
- name: modify_collections
  endpoint:
    path: /projects/{environment_id}/collections
    method: PATCH
    data_selector: collections
    params: {}
- name: add_content_item
  endpoint:
    path: /projects/{environment_id}/items
    method: POST
    data_selector: content_item
    params: {}
- name: content_types
  endpoint:
    path: /projects/{environment_id}/types
    method: POST
    data_selector: types
    params: {}
- name: list_content_types
  endpoint:
    path: /projects/{environment_id}/types
    method: GET
    data_selector: types
    params: {}
- name: content_items
  endpoint:
    path: /projects/{environment_id}/items
    method: GET
    data_selector: items
    params:
      environment_id: 975bf280-fd91-488c-994c-2f04416e5ee3
- name: content_item
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}
    method: GET
    data_selector: id
    params:
      environment_id: 975bf280-fd91-488c-994c-2f04416e5ee3
- name: upsert_content_item
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}
    method: PUT
    data_selector: id
    params:
      environment_id: 975bf280-fd91-488c-994c-2f04416e5ee3
- name: delete_content_item
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}
    method: DELETE
    data_selector: id
    params:
      environment_id: 975bf280-fd91-488c-994c-2f04416e5ee3
- name: retrieve_content_type
  endpoint:
    path: /projects/{environment_id}/types/{type_identifier}
    method: GET
    data_selector: content_type
    params: {}
- name: modify_content_type
  endpoint:
    path: /projects/{environment_id}/types/{type_identifier}
    method: PATCH
    data_selector: modified_content_type
    params: {}
- name: delete_content_type
  endpoint:
    path: /projects/{environment_id}/types/{type_identifier}
    method: DELETE
    data_selector: delete_response
    params: {}
- name: content_type_snippet
  endpoint:
    path: /projects/{environment_id}/snippets
    method: GET
    data_selector: snippets
    params: {}
- name: add_content_type_snippet
  endpoint:
    path: /projects/{environment_id}/snippets
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_content_type_snippet
  endpoint:
    path: /projects/{environment_id}/snippets/{snippet_identifier}
    method: GET
    data_selector: ''
    params: {}
- name: custom_app
  endpoint:
    path: /projects/{environment_id}/custom-apps
    method: GET
    data_selector: custom_apps
- name: custom_app
  endpoint:
    path: /projects/{environment_id}/custom-apps/{custom_app_identifier}
    method: GET
    data_selector: custom_app
    params: {}
- name: modify_custom_app
  endpoint:
    path: /projects/{environment_id}/custom-apps/{custom_app_identifier}
    method: PATCH
    data_selector: custom_app
    params: {}
- name: delete_custom_app
  endpoint:
    path: /projects/{environment_id}/custom-apps/{custom_app_identifier}
    method: DELETE
    data_selector: custom_app
    params: {}
- name: Linked items type element
  endpoint:
    path: /path/to/linked/items
    method: GET
    data_selector: items
    params: {}
- name: Number type element
  endpoint:
    path: /path/to/number/type
    method: GET
    data_selector: items
    params: {}
- name: Multiple choice type element
  endpoint:
    path: /path/to/multiple/choice
    method: GET
    data_selector: items
    params: {}
- name: Rich text type element
  endpoint:
    path: /path/to/rich/text
    method: GET
    data_selector: items
    params: {}
- name: Subpages type element
  endpoint:
    path: /path/to/subpages
    method: GET
    data_selector: items
    params: {}
- name: rich_text_element
  endpoint:
    path: /learn/docs/apis/openapi/management-api-v2/#tag/References
    method: GET
    data_selector: elements
    params: {}
- name: taxonomy_type_element
  endpoint:
    path: /taxonomy/type/element
    method: GET
    data_selector: elements
- name: text_type_element
  endpoint:
    path: /text/type/element
    method: GET
    data_selector: elements
- name: url_slug_type_element
  endpoint:
    path: /url/slug/type/element
    method: GET
    data_selector: elements
- name: mark_environment_as_production
  endpoint:
    path: /put/projects/{environment_id}/mark-environment-as-production
    method: PUT
- name: retrieve_latest_language_variant
  endpoint:
    path: /get/projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}
    method: GET
- name: clone_environment
  endpoint:
    path: /projects/{environment_id}/clone-environment
    method: POST
    data_selector: id
    params:
      name: Development
      roles_to_activate:
      - ee483b59-5a24-4010-b277-ae224c34bc71
      copy_data_options:
        content_items_assets: true
        content_item_version_history: true
- name: get_environment_cloning_state
  endpoint:
    path: /projects/{environment_id}/environment-cloning-state
    method: GET
    data_selector: cloning_state
- name: retrieve_environment_information
  endpoint:
    path: /projects/{environment_id}
    method: GET
    data_selector: id
- name: rename_environment
  endpoint:
    path: /projects/{environment_id}
    method: PATCH
    data_selector: id
    params:
    - op: rename_environment
      value: Production
- name: delete_environment
  endpoint:
    path: /projects/{environment_id}
    method: DELETE
- name: language_variant_upsert
  endpoint:
    path: put/projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}
    method: PUT
    data_selector: elements
- name: language_variant_delete
  endpoint:
    path: delete/projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}
    method: DELETE
- name: language_variant_retrieve_published
  endpoint:
    path: get/projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}/published
    method: GET
- name: language_variant_retrieve
  endpoint:
    path: get/projects/{environment_id}/items/{item_identifier}/variants
    method: GET
- name: language_variants_by_type
  endpoint:
    path: /projects/{environment_id}/types/{type_identifier}/variants
    method: GET
    data_selector: variants
- name: language_variants_by_collection
  endpoint:
    path: /projects/{environment_id}/collections/{collection_identifier}/variants
    method: GET
    data_selector: variants
- name: language_variants_by_space
  endpoint:
    path: /projects/{environment_id}/spaces/{space_identifier}/variants
    method: GET
    data_selector: variants
- name: Create a new version of a language variant
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}/new-version
    method: PUT
- name: Change the workflow of a language variant
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}/change-workflow
    method: PUT
- name: Add a language
  endpoint:
    path: /projects/{environment_id}/languages
    method: POST
- name: List languages
  endpoint:
    path: /projects/{environment_id}/languages
    method: GET
- name: Retrieve a language
  endpoint:
    path: /projects/{environment_id}/languages/{language_identifier}
    method: GET
- name: modify_language
  endpoint:
    path: /patch/projects/{environment_id}/languages/{language_identifier}
    method: PATCH
    data_selector: operations
    params: {}
- name: retrieve_preview_configuration
  endpoint:
    path: /get/projects/{environment_id}/preview-configuration
    method: GET
    data_selector: space_domains
    params: {}
- name: change_live_preview_status
  endpoint:
    path: /put/projects/{environment_id}/live-preview-configuration
    method: PUT
    data_selector: status
    params: {}
- name: publish_language_variant
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}/publish
    method: PUT
- name: cancel_scheduled_publish
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}/cancel-scheduled-publish
    method: PUT
- name: unpublish_language_variant
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}/unpublish-and-archive
    method: PUT
- name: cancel_scheduled_unpublish
  endpoint:
    path: /projects/{environment_id}/items/{item_identifier}/variants/{language_identifier}/cancel-scheduled-unpublish
    method: PUT
- name: roles
  endpoint:
    path: /projects/{environment_id}/roles
    method: GET
- name: spaces
  endpoint:
    path: /projects/{environment_id}/spaces
    method: GET
- name: taxonomy_group
  endpoint:
    path: /projects/{environment_id}/taxonomies
    method: GET
    data_selector: taxonomies
    params: {}
- name: add_taxonomy_group
  endpoint:
    path: /projects/{environment_id}/taxonomies
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_taxonomy_group
  endpoint:
    path: /projects/{environment_id}/taxonomies/{taxonomy_group_identifier}
    method: GET
    data_selector: ''
    params: {}
- name: modify_taxonomy_group
  endpoint:
    path: /projects/{environment_id}/taxonomies/{taxonomy_group_identifier}
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_taxonomy_group
  endpoint:
    path: /projects/{environment_id}/taxonomies/{taxonomy_group_identifier}
    method: DELETE
    data_selector: ''
    params: {}
- name: invite_user
  endpoint:
    path: /projects/{environment_id}/users
    method: POST
    data_selector: user_id
    params: {}
- name: change_user_role
  endpoint:
    path: /projects/{environment_id}/users/{user_identifier}/roles
    method: PUT
    data_selector: user_id
    params: {}
- name: validate_content
  endpoint:
    path: /projects/{environment_id}/validate
    method: POST
    data_selector: project
    params: {}
- name: check_content_validation_progress
  endpoint:
    path: /projects/{environment_id}/validate-async/tasks/{task_id}
    method: GET
    data_selector: id
    params: {}
- name: list_content_validation_results
  endpoint:
    path: /projects/{environment_id}/validate-async/tasks/{task_id}/issues
    method: GET
    data_selector: issues
    params: {}
- name: webhook
  endpoint:
    path: /projects/{environment_id}/webhooks-vnext
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks-vnext/{webhook_identifier}
    method: GET
- name: delete_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks-vnext/{webhook_identifier}
    method: DELETE
- name: enable_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks-vnext/{webhook_identifier}/enable
    method: PUT
- name: disable_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks-vnext/{webhook_identifier}/disable
    method: PUT
- name: workflows
  endpoint:
    path: /projects/{environment_id}/workflows
    method: GET
    data_selector: workflows
    params: {}
- name: add_workflow
  endpoint:
    path: /projects/{environment_id}/workflows
    method: POST
    data_selector: workflow
    params: {}
- name: add_legacy_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: retrieve_legacy_webhooks
  endpoint:
    path: /projects/{environment_id}/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: retrieve_legacy_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks/{webhook_identifier}
    method: GET
    data_selector: webhook
    params: {}
- name: delete_legacy_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks/{webhook_identifier}
    method: DELETE
    data_selector: webhook
    params: {}
- name: enable_legacy_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks/{webhook_identifier}/enable
    method: PUT
    data_selector: webhook
    params: {}
- name: disable_legacy_webhook
  endpoint:
    path: /projects/{environment_id}/webhooks/{webhook_identifier}/disable
    method: PUT
    data_selector: webhook
    params: {}
- name: update_workflow
  endpoint:
    path: /projects/{environment_id}/workflows/{workflow_identifier}
    method: PUT
- name: delete_workflow
  endpoint:
    path: /projects/{environment_id}/workflows/{workflow_identifier}
    method: DELETE
- name: activate_web_spotlight
  endpoint:
    path: /projects/{environment_id}/web-spotlight/activate
    method: PUT
- name: deactivate_web_spotlight
  endpoint:
    path: /projects/{environment_id}/web-spotlight/deactivate
    method: PUT
- name: check_web_spotlight_status
  endpoint:
    path: /projects/{environment_id}/web-spotlight/status
    method: GET
- name: collections
  endpoint:
    path: /learn/docs/collections
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /learn/docs/users
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /learn/docs/assets
    method: GET
    data_selector: records
- name: content_status
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentStatus
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /learn/docs/projects
    method: GET
    data_selector: projects
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: content_items
  endpoint:
    path: /content_items
    method: GET
    data_selector: records
- name: audit_log
  endpoint:
    path: /learn/docs/security/audit-log
    method: GET
    data_selector: events
    params: {}
- name: content_item
  endpoint:
    path: /v1/items
    method: GET
    data_selector: items
- name: content_type
  endpoint:
    path: /v1/types
    method: GET
    data_selector: types
- name: event_participants
  endpoint:
    path: /events/participants
    method: GET
    data_selector: participants
    params: {}
- name: customer_personal_data
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomerPersonalData
    method: GET
    data_selector: records
    params: {}
- name: data_subject
  endpoint:
    path: /services/data/vXX.X/sobjects/DataSubject
    method: GET
    data_selector: records
    params: {}
- name: pricing
  endpoint:
    path: /pricing
    method: GET
- name: features
  endpoint:
    path: /features
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: resources
  endpoint:
    path: /resources
    method: GET
- name: company
  endpoint:
    path: /company
    method: GET
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: items
- name: integration
  endpoint:
    path: /services/data/vXX.X/integration
    method: GET
    data_selector: records
    params: {}
- name: website
  endpoint:
    path: /dkms-website
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: items
- name: Code of Business Ethics
  endpoint:
    path: /code-of-business-ethics/
    method: GET
    data_selector: records
- name: Code of Conduct & Social Responsibility
  endpoint:
    path: /code-of-conduct-and-social-responsibility/
    method: GET
    data_selector: records
- name: Platinum partners
  endpoint:
    path: /partners/platinum
    method: GET
    data_selector: partners
    params: {}
- name: Gold partners
  endpoint:
    path: /partners/gold
    method: GET
    data_selector: partners
    params: {}
- name: Silver partners
  endpoint:
    path: /partners/silver
    method: GET
    data_selector: partners
    params: {}
- name: Bronze partners
  endpoint:
    path: /partners/bronze
    method: GET
    data_selector: partners
    params: {}
- name: partners
  endpoint:
    path: /partners
    method: GET
    data_selector: records
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: records
    params: {}
- name: content_items
  endpoint:
    path: /v1/projects/{{project_id}}/items
    method: GET
    data_selector: items
    params: {}
notes:
- Maximum size limit for binary files is 100 MB.
- Requires setting up API authentication with Bearer token.
- Requires BearerAuthentication.
- Operations include addInto, move, remove, and replace for modifying content types.
- Uses Bearer Authentication for secure access.
- Uses HTTP Bearer Authentication for API requests.
- The rich text value can contain specific HTML elements, tags, and attributes and
  must form a valid HTML5 fragment.
- The API follows the workflow transition limitations present in the UI.
- Scheduling a published language variant has no effect.
- The API follows workflow transition restrictions based on the variant's workflow.
- Requires API key for permissions to manage users.
- Endpoint usage requires Enterprise or Flex plan
- Requires Personal API key with the Invite and manage project members permission
- Legacy webhooks have been deprecated
- Legacy webhooks have been deprecated on September 1, 2024.
- Your subscription must include Web Spotlight.
- You need to use API keys with specific permissions. Either a Management API key
  with the Create, edit, and delete content and Manage environments permissions, or
  a Personal API key of a Project manager.
- Learn how to use and set up Kontent.ai and its features.
- Legacy webhooks will stop working on September 1, 2025
- Manage API keys to control access.
- This feature isn’t available for some legacy plan subscriptions. Contact us to find
  out your options.
- Custom apps are HTML applications loaded in an <iframe>.
- Never store your API keys or any other sensitive data in the JSON object.
- Custom elements are HTML applications loaded in an <iframe>.
- Never store your API keys or any other sensitive data in the JSON parameters field.
- By default, cloning a new environment means creating an exact copy of the source
  environment, including content & assets, content model, and environment settings.
- Webhooks are set as disabled in the new environment to ensure they don't trigger
  your production apps and services.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires a paid plan for certain features.
- Free trial plan automatically stores data in the default East US data center.
- Notifications are sent for workflow updates and task statuses.
- Uses OAuth2 with refresh token.
- Any information you provide to Kontent is safeguarded and secure.
- The Agreement is concluded for an indefinite period of time.
- The Customer may terminate the Agreement any time via the Service using admin account.
- Some objects may return nulls in deeply nested fields
- All plans are fully customizable.
- Enterprise plans include a dedicated Customer Success Manager and customized onboarding
  support.
- 'Kontent.ai offers two types of free trials to match your needs: Content persona
  trial and Developer trial. You can get free access to all Kontent.ai features and
  APIs for 30 days, no credit card required.'
- Uses OAuth2 with refresh token — requires setup of connected app in Kontent.ai
- Content creation has been significantly sped up from months to minutes.
- Focus on content first to enhance scalability.
- Separation of content from layout and design improves update efficiency.
- The integration successfully connects with multiple external systems.
- Structured workflows and Mission Control streamlined reviews and improved visibility
  into content operations.
- The APIs and the webhooks were key for us, front and centre.
- Content was spread across multiple CMSs, leading to high maintenance and inconsistent
  branding
- Flexibility to accommodate different requirements across six countries was a challenge
- Previous fragmented setup wasn’t scalable, making it harder to maintain consistent
  digital experiences
- DKMS is a non-profit organization focused on connecting blood cancer patients with
  potential stem cell donors.
- Requires setup of connected app in Kontent.ai
- Integrating Kontent.ai with other platforms creates the connections that help you
  to achieve an unparalleled return on your content.
- Compliance with laws and regulations is mandatory.
- Commitment to protecting personal information in line with GDPR.
- Ensure personal data is handed over in compliance with GDPR.
- All data is encrypted by default.
- Data is backed up daily and stored for 30 days.
- Information here is for informational purposes only and does not constitute legal
  advice.
- Customers are responsible for their own compliance with APP and any other regulations.
- Web Spotlight availability changes starting on April 29, 2025, new subscriptions
  will not include Web Spotlight.
- Web Spotlight will transition entirely to live preview by the end of October 2025.
- All plans are fully customizable
- All plans include 24/7 in-app chat support from our excellent support team
- Some objects like Contact may return nulls in deeply nested fields
- Utilizing a third-party search provider for their product catalog, Algolia.
- MACH architecture is a technological framework that enables enterprises to stay
  in step with customer demands and behaviors.
- Choosing the right technology partner for your business does not only depend on
  ticking all the feature boxes.
- Utilize your Builder app to create great-looking landing pages and other content
  on your site in seconds.
errors:
- '400 Bad Request: The request was not understood.  Check if your request is missing
  a required parameter or contains an invalid query parameter value.'
- '401 Unauthorized: The provided API key is doesn''t provide access to the requested
  resource. The error can also occur if the API key is malformed or missing.  Try
  copying and  pasting your current API key to avoid typos.'
- '403 Forbidden: The provided API key is valid but doesn''t provide permission for
  the specified resource.'
- '404 Not Found: The requested resource doesn''t exist.  Try checking the resource
  name for typos.'
- '405 Method Not Allowed: The requested HTTP method is not supported for the specified
  resource.'
- '429 Too Many Requests: The rate limit for the API has been exceeded. Try your request
  again after a few seconds as specified in the `Retry-After` header.'
- '5xx Internal Error or Service Unavailable: Something went wrong on our side. Try
  your request again after a few seconds and use a retry policy.'
- '400: The specified request body is invalid.'
- '401: Unauthorized access.'
- '400: The specified continuation token is incorrect.'
- '404: The specified content item was not found.'
- '404: The specified content type was not found.'
- '404: The specified content type snippet was not found.'
- '404: The specified custom app was not found.'
- '404: The specified collection was not found.'
- '404: The specified space was not found.'
- '400: The specified set of operations is invalid.'
- '404: The specified language was not found.'
- '400: Selected schedule publish date is in the past'
- '404: The specified language variant was not found.'
- '404 Not Found: The specified taxonomy group was not found.'
- '400: The specified request body is invalid, or the user has already been invited.'
- '404: The specified user was not found.'
- '404: The specified webhook was not found.'
- '404: The specified legacy webhook was not found.'
- '400: The specified content type cannot be used for Web Spotlight root.'
- '400: The used API key doesn''t provide the necessary permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://app.kontent.ai
  headers:
    Accept: application/json
source_metadata: null
