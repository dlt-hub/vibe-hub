resources:
- name: meter_status
  endpoint:
    path: /v2/meter/status
    method: GET
- name: meter_status
  endpoint:
    path: /v2/meter/status
    method: GET
- name: meter_status
  endpoint:
    path: /v2/meter/status
    method: GET
- name: meter_status
  endpoint:
    path: /v2/meter/status
    method: GET
- name: meter_reader_status
  endpoint:
    path: /v2/meterreader/status
    method: GET
- name: meter_reader_status
  endpoint:
    path: /v2/meterreader/status
    method: GET
- name: optical_smart_bridge_status
  endpoint:
    path: /v2/opticalsmartbridge/status
    method: GET
- name: optical_smart_bridge_status
  endpoint:
    path: /v2/opticalsmartbridge/status
    method: GET
- name: commission
  endpoint:
    path: /v2/meterreader/commission
    method: PUT
- name: registration_onboard
  endpoint:
    path: /v2/registration/onboard/{eui64}/{force}
    method: PUT
- name: registration_onboard
  endpoint:
    path: /v2/registration/onboard/{eui64}/{force}
    method: PUT
- name: registration_no_gateway
  endpoint:
    path: /v2/registration/no-gateway
    method: POST
- name: registration_no_gateway
  endpoint:
    path: /v2/registration/no-gateway
    method: POST
- name: registration_online
  endpoint:
    path: /v2/registration/online
    method: GET
- name: registration_online
  endpoint:
    path: /v2/registration/online
    method: GET
- name: delete_account
  endpoint:
    path: /v2/registration/delete-account
    method: POST
- name: delete_account
  endpoint:
    path: /v2/registration/delete-account
    method: POST
- name: migrate_sso_user
  endpoint:
    path: /v2/registration/introspection/migrate-sso-user
    method: POST
- name: migrate_sso_user
  endpoint:
    path: /v2/registration/introspection/migrate-sso-user
    method: POST
- name: sso_user
  endpoint:
    path: /registration/introspection/sso-user
    method: POST
- name: sso_user
  endpoint:
    path: /v2/registration/introspection/sso-user
    method: POST
- name: mfa_status
  endpoint:
    path: /v2/mfa/status
    method: GET
- name: mfa_status
  endpoint:
    path: /v2/mfa/status
    method: GET
- name: mfa_enable
  endpoint:
    path: /v2/mfa/enable
    method: POST
- name: mfa_enable
  endpoint:
    path: /v2/mfa/enable
    method: POST
- name: disable_mfa
  endpoint:
    path: /v2/mfa/disable
    method: POST
- name: mfa_disable
  endpoint:
    path: /v2/mfa/disable
    method: POST
- name: verify_software_token
  endpoint:
    path: /v2/mfa/verify-software-token
    method: POST
- name: verify_software_token
  endpoint:
    path: /v2/mfa/verify-software-token
    method: POST
- name: migrate_user
  endpoint:
    path: /v2/migrate/user
    method: POST
- name: migrate_user
  endpoint:
    path: /v2/migrate/user
    method: POST
- name: registration_email
  endpoint:
    path: /v2/registration/email
    method: PUT
- name: registration_email
  endpoint:
    path: /v2/registration/email
    method: PUT
- name: set_password
  endpoint:
    path: /v2/registration/setpassword
    method: PUT
- name: set_password
  endpoint:
    path: /v2/registration/setpassword
    method: PUT
- name: sso_exchange_token
  endpoint:
    path: /v2/sso/exchange-token
    method: POST
- name: sso_exchange_token
  endpoint:
    path: /v2/sso/exchange-token
    method: POST
- name: token
  endpoint:
    path: /v2/token
    method: POST
- name: token
  endpoint:
    path: /v2/token
    method: POST
- name: bill_prediction
  endpoint:
    path: /v2/bill/{energyType}/prediction
    method: GET
    data_selector: ''
- name: bill_prediction
  endpoint:
    path: /v2/bill/{energyType}/prediction
    method: GET
- name: dashboard_configuration
  endpoint:
    path: /v2/configuration/dashboard
    method: GET
- name: dashboard_configuration
  endpoint:
    path: /v2/configuration/dashboard
    method: GET
- name: dashboard_configuration
  endpoint:
    path: /v2/configuration/dashboard
    method: POST
- name: dashboard_configuration
  endpoint:
    path: /v2/configuration/dashboard
    method: POST
- name: configuration
  endpoint:
    path: /v2/configuration
    method: GET
- name: configuration
  endpoint:
    path: /v2/configuration
    method: GET
    data_selector: dashboard configuration
- name: configuration
  endpoint:
    path: /v2/configuration
    method: POST
- name: configuration
  endpoint:
    path: /v2/configuration
    method: POST
- name: service_type
  endpoint:
    path: /v2/customer/service-type
    method: GET
- name: service_type
  endpoint:
    path: /v2/customer/service-type
    method: GET
- name: datahub_subscription
  endpoint:
    path: /v2/datahub/subscription
    method: GET
- name: datahub_mandate
  endpoint:
    path: /v2/datahub/mandate
    method: GET
- name: datahub_subscription
  endpoint:
    path: /v2/datahub/subscription
    method: GET
- name: mandate
  endpoint:
    path: /v2/datahub/mandate
    method: POST
- name: mandate
  endpoint:
    path: /v2/datahub/mandate
    method: GET
    data_selector: status
    params: {}
- name: details_user
  endpoint:
    path: /v2/debug/details-user
    method: GET
- name: is_admin
  endpoint:
    path: /v2/debug/is-admin
    method: GET
    data_selector: ''
- name: mandate
  endpoint:
    path: /v2/datahub/mandate
    method: POST
- name: export
  endpoint:
    path: /v2/export
    method: GET
- name: details_user
  endpoint:
    path: /v2/debug/details-user
    method: GET
- name: feedtype
  endpoint:
    path: /v2/feedtype
    method: GET
- name: is_admin
  endpoint:
    path: /v2/debug/is-admin
    method: GET
- name: initialisation
  endpoint:
    path: /v2/initialisation
    method: GET
- name: export
  endpoint:
    path: /v2/export
    method: GET
- name: installations
  endpoint:
    path: /v2/installations
    method: GET
- name: label
  endpoint:
    path: /v2/installation/{externalInstallationId}/label
    method: PUT
- name: feedtype
  endpoint:
    path: /v2/feedtype
    method: GET
- name: initialisation
  endpoint:
    path: /v2/initialisation
    method: GET
- name: primary_installation
  endpoint:
    path: /v2/primary-installation
    method: GET
- name: installations
  endpoint:
    path: /v2/installations
    method: GET
    data_selector: records
- name: primary_installation
  endpoint:
    path: /v2/installation/{externalInstallationId}/primary-installation
    method: PUT
- name: installation_label
  endpoint:
    path: /installation/{externalInstallationId}/label
    method: PUT
- name: meter_info
  endpoint:
    path: /v2/meter/info
    method: GET
- name: primary_installation
  endpoint:
    path: /v2/primary-installation
    method: GET
- name: optin
  endpoint:
    path: /v2/optin/{operationCode}
    method: GET
    data_selector: value
    params: {}
- name: primary_installation
  endpoint:
    path: /installation/{externalInstallationId}/primary-installation
    method: PUT
- name: meter_info
  endpoint:
    path: /v2/meter/info
    method: GET
- name: optin
  endpoint:
    path: /v2/optin/{operationCode}
    method: PUT
    data_selector: null
    params: {}
- name: registration_opt_in
  endpoint:
    path: /v2/registration/opt-in
    method: GET
- name: optin
  endpoint:
    path: /v2/optin/{operationCode}
    method: GET
- name: registration_opt_in
  endpoint:
    path: /v2/registration/opt-in
    method: PUT
- name: optin
  endpoint:
    path: /v2/optin/{operationCode}
    method: PUT
- name: smartbridge_status
  endpoint:
    path: /v2/smartbridge/status
    method: GET
- name: registration_opt_in
  endpoint:
    path: /v2/registration/opt-in
    method: GET
- name: timezone
  endpoint:
    path: /v2/timezone
    method: POST
- name: appliance_categories_mapping
  endpoint:
    path: /v2/appliances/categories/mapping
    method: GET
    data_selector: records
- name: registration_opt_in
  endpoint:
    path: /v2/registration/opt-in
    method: PUT
- name: appliance_definitions
  endpoint:
    path: /v2/appliances/definitions
    method: GET
- name: smartbridge_status
  endpoint:
    path: /v2/smartbridge/status
    method: GET
- name: timezone
  endpoint:
    path: /v2/timezone
    method: POST
- name: budget_definition
  endpoint:
    path: /v2/billing/budget-definition
    method: GET
- name: appliance_categories_mapping
  endpoint:
    path: /v2/appliances/categories/mapping
    method: GET
- name: budget_definition
  endpoint:
    path: /v2/billing/budget-definition
    method: POST
- name: appliance_definitions
  endpoint:
    path: /v2/appliances/definitions
    method: GET
- name: tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: GET
- name: tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: POST
- name: budget_definition
  endpoint:
    path: /v2/billing/budget-definition
    method: GET
- name: profile_properties
  endpoint:
    path: /v2/profile/properties
    method: GET
- name: budget_definition
  endpoint:
    path: /v2/billing/budget-definition
    method: POST
- name: profile_complete
  endpoint:
    path: /v2/profile/complete
    method: GET
- name: tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: GET
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: GET
    data_selector: attributes
- name: tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: POST
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: POST
- name: profile_properties
  endpoint:
    path: /v2/profile/properties
    method: GET
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: DELETE
- name: profile_complete
  endpoint:
    path: /v2/profile/complete
    method: GET
- name: capacity_peak
  endpoint:
    path: /v2/capacity-peak/electricity/mains/{year}/{month}
    method: GET
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/{interval}/{startDate}/{endDate}
    method: GET
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: GET
    data_selector: attributes
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: POST
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/weeks/{year}/{quarter}
    method: GET
    data_selector: energy_measurements
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: DELETE
- name: energy_measurements_months
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/months/{startMonth}/{endMonth}
    method: GET
    data_selector: energy measurements
- name: capacity_peak
  endpoint:
    path: /v2/capacity-peak/electricity/mains/{year}/{month}
    method: GET
- name: instantaneous
  endpoint:
    path: /v2/instantaneous
    method: GET
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/{interval}/{startDate}/{endDate}
    method: GET
- name: instantaneous_power
  endpoint:
    path: /instantaneous/power/{startDate}/{endDate}/{interval}/{max}
    method: GET
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/weeks/{year}/{quarter}
    method: GET
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/months/{startMonth}/{endMonth}
    method: GET
- name: instantaneous_phases
  endpoint:
    path: /v2/instantaneous/phases/{startDate}/{endDate}
    method: GET
- name: instantaneous
  endpoint:
    path: /instantaneous
    method: GET
- name: metric_range
  endpoint:
    path: /v2/metric/range/{energyType}/{phase}/{metricType}
    method: GET
- name: instantaneous_power
  endpoint:
    path: /v2/instantaneous/power/{startDate}/{endDate}/{interval}/{max}
    method: GET
- name: consumption_appliances
  endpoint:
    path: /consumption/{energyType}/appliances/{periodType}/{periodValue1}/{periodValue2}
    method: GET
- name: instantaneous_phases
  endpoint:
    path: /instantaneous/phases/{startDate}/{endDate}
    method: GET
- name: always_on_breakdown
  endpoint:
    path: /v2/consumption/electricity/alwayson/breakdown/{year}/{month}
    method: GET
- name: metric_range
  endpoint:
    path: /v2/metric/range/{energyType}/{phase}/{metricType}
    method: GET
- name: disaggregation
  endpoint:
    path: /v2/disaggregation/year/{year}/week/{week}
    method: GET
- name: energy_appliances
  endpoint:
    path: /consumption/{energyType}/appliances/{periodType}/{periodValue1}/{periodValue2}
    method: GET
- name: disaggregation
  endpoint:
    path: /v2/disaggregation/year/{year}/month/{month}
    method: GET
- name: electricity_alwayson_breakdown
  endpoint:
    path: /v2/consumption/electricity/alwayson/breakdown/{year}/{month}
    method: GET
- name: appliance_events_hourly
  endpoint:
    path: /v2/events/hourly/{year}/{month}/{day}/{hour}
    method: GET
- name: disaggregation_week
  endpoint:
    path: /v2/disaggregation/year/{year}/week/{week}
    method: GET
- name: events_daily
  endpoint:
    path: /v2/events/daily/{year}/{month}/{day}
    method: GET
- name: disaggregation
  endpoint:
    path: /v2/disaggregation/year/{year}/month/{month}
    method: GET
- name: events_summary
  endpoint:
    path: /v2/events/summary/{startDate}/{endDate}
    method: GET
- name: appliance_events
  endpoint:
    path: /v2/events/hourly/{year}/{month}/{day}/{hour}
    method: GET
- name: nilm_status
  endpoint:
    path: /v2/nilm/status
    method: GET
- name: events_daily
  endpoint:
    path: /v2/events/daily/{year}/{month}/{day}
    method: GET
- name: nilm_retraining
  endpoint:
    path: /v2/nilm/retraining
    method: POST
- name: events_summary
  endpoint:
    path: /v2/events/summary/{startDate}/{endDate}
    method: GET
- name: solar_production_daily
  endpoint:
    path: /v2/solar/production/daily/{year}/{month}/{day}
    method: GET
- name: nilm_status
  endpoint:
    path: /v2/nilm/status
    method: GET
- name: solar_production
  endpoint:
    path: /solar/production/{periodType}/{year}/{monthOrWeek}
    method: GET
- name: nilm_retraining
  endpoint:
    path: /v2/nilm/retraining
    method: POST
- name: monthly_insights
  endpoint:
    path: /v2/insights/year/{year}/month/{month}
    method: GET
- name: weekly_insights
  endpoint:
    path: /v2/insights/year/{year}/week/{week}
    method: GET
- name: solar_production_daily
  endpoint:
    path: /v2/solar/production/daily/{year}/{month}/{day}
    method: GET
- name: weekly_recommendations
  endpoint:
    path: /v2/recommendations/weekly
    method: GET
- name: solar_production
  endpoint:
    path: /v2/solar/production/{periodType}/{year}/{monthOrWeek}
    method: GET
- name: monthly_recommendations
  endpoint:
    path: /v2/recommendations/monthly
    method: GET
    data_selector: recommendation_attributes
- name: monthly_insights
  endpoint:
    path: /v2/insights/year/{year}/month/{month}
    method: GET
- name: notification_channel_enable
  endpoint:
    path: /v2/notification/channel/enable
    method: PUT
- name: insights_week
  endpoint:
    path: /insights/year/{year}/week/{week}
    method: GET
- name: weekly_recommendations
  endpoint:
    path: /v2/recommendations/weekly
    method: GET
- name: notification_channel_disable
  endpoint:
    path: /v2/notification/channel/disable
    method: PUT
- name: monthly_recommendations
  endpoint:
    path: /v2/recommendations/monthly
    method: GET
    data_selector: records
- name: mute_topic
  endpoint:
    path: /v2/notification/channel/mute_topic
    method: PUT
- name: notification_channel_enable
  endpoint:
    path: /v2/notification/channel/enable
    method: PUT
- name: notification_channel_status
  endpoint:
    path: /v2/notification/channel/status/{channelType}
    method: GET
- name: notification_channel_disable
  endpoint:
    path: /v2/notification/channel/disable
    method: PUT
- name: notification_dispatch
  endpoint:
    path: /v2/notification/dispatch
    method: POST
- name: mute_topic
  endpoint:
    path: /v2/notification/channel/mute_topic
    method: PUT
- name: messages
  endpoint:
    path: /v2/messages
    method: GET
- name: notification_read
  endpoint:
    path: /notification/{inboxNotificationId}/read
    method: PUT
- name: notification_channel_status
  endpoint:
    path: /notification/channel/status/{channelType}
    method: GET
- name: notification_unread
  endpoint:
    path: /notification/{inboxNotificationId}/unread
    method: PUT
- name: notification_dispatch
  endpoint:
    path: /v2/notification/dispatch
    method: POST
- name: delete_notification
  endpoint:
    path: /v2/notification/{inboxNotificationId}/delete
    method: DELETE
- name: stop_repetitive_alarm
  endpoint:
    path: /v2/notification/stop-repetitive-alarm
    method: PUT
- name: messages
  endpoint:
    path: /v2/messages
    method: GET
- name: capacity_peaks_config
  endpoint:
    path: /v2/capacitypeaks/config
    method: GET
- name: notification_read
  endpoint:
    path: /notification/{inboxNotificationId}/read
    method: PUT
- name: capacity_peaks_config
  endpoint:
    path: /v2/capacitypeaks/config
    method: PUT
- name: notification_unread
  endpoint:
    path: /notification/{inboxNotificationId}/unread
    method: PUT
- name: homestate_config
  endpoint:
    path: /v2/homestate/config
    method: GET
- name: delete_notification
  endpoint:
    path: /v2/notification/{inboxNotificationId}/delete
    method: DELETE
- name: homestate_current
  endpoint:
    path: /v2/homestate/current
    method: GET
- name: stop_repetitive_alarm
  endpoint:
    path: /v2/notification/stop-repetitive-alarm
    method: PUT
- name: instantaneous_appliances
  endpoint:
    path: /v2/instantaneous/appliances
    method: GET
- name: power_thresholds_config
  endpoint:
    path: /v2/power-thresholds/config
    method: GET
    data_selector: power_thresholds
    params: {}
- name: capacity_peaks_config
  endpoint:
    path: /v2/capacitypeaks/config
    method: PUT
- name: power_thresholds_config
  endpoint:
    path: /v2/power-thresholds/config
    method: PUT
- name: authentication_settings
  endpoint:
    path: /v2/smartbridge/authentication/settings
    method: POST
- name: homestate_config
  endpoint:
    path: /v2/homestate/config
    method: GET
- name: token
  endpoint:
    path: /v2/lan/token
    method: GET
- name: homestate_current
  endpoint:
    path: /v2/homestate/current
    method: GET
- name: meter_connect
  endpoint:
    path: /v2/meter/connect
    method: PUT
- name: instantaneous_appliances
  endpoint:
    path: /v2/instantaneous/appliances
    method: GET
- name: plug_relay
  endpoint:
    path: /v2/plug/relay
    method: GET
- name: power_thresholds_config
  endpoint:
    path: /v2/power-thresholds/config
    method: GET
    data_selector: thresholds
- name: plug_relay
  endpoint:
    path: /v2/plug/relay
    method: PUT
- name: power_thresholds_config
  endpoint:
    path: /v2/power-thresholds/config
    method: PUT
- name: report_mode_settings
  endpoint:
    path: /v2/smartbridge/report-mode/settings
    method: GET
- name: authentication_settings
  endpoint:
    path: /v2/smartbridge/authentication/settings
    method: POST
- name: report_mode_settings
  endpoint:
    path: /v2/smartbridge/report-mode/settings
    method: PUT
- name: token
  endpoint:
    path: /v2/lan/token
    method: GET
- name: real_time_report_mode
  endpoint:
    path: /v2/smartbridge/report-mode/real-time
    method: PUT
- name: meter_connect
  endpoint:
    path: /v2/meter/connect
    method: PUT
- name: smartbridge_replace
  endpoint:
    path: /v2/smartbridge/replace/{newEui64}
    method: PUT
- name: plug_relay
  endpoint:
    path: /v2/plug/relay
    method: GET
- name: bill_prediction
  endpoint:
    path: /v2/{energyType}/bill/prediction
    method: GET
- name: relay
  endpoint:
    path: /v2/plug/relay
    method: PUT
- name: daily_consumption
  endpoint:
    path: /v2/consumption/{energyType}/daily
    method: GET
- name: report_mode_settings
  endpoint:
    path: /v2/smartbridge/report-mode/settings
    method: GET
- name: compare_consumption
  endpoint:
    path: /v2/consumption/{energyType}/compare/{periodType}
    method: GET
- name: report_mode_settings
  endpoint:
    path: /v2/smartbridge/report-mode/settings
    method: PUT
- name: disaggregation_forecast
  endpoint:
    path: /v2/disaggregation/forecast
    method: GET
    data_selector: disaggregation data
- name: report_mode_real_time
  endpoint:
    path: /v2/smartbridge/report-mode/real-time
    method: PUT
- name: disaggregation
  endpoint:
    path: /v2/disaggregation/{year}/{month}
    method: GET
- name: smartbridge_replace
  endpoint:
    path: /v2/smartbridge/replace/{newEui64}
    method: PUT
- name: disaggregation_history
  endpoint:
    path: /v2/disaggregation/history/{year}/{month}
    method: GET
- name: bill_prediction
  endpoint:
    path: /{energyType}/bill/prediction
    method: GET
- name: daily_consumption
  endpoint:
    path: /consumption/{energyType}/daily
    method: GET
- name: feedin_daily
  endpoint:
    path: /feedin/{energyType}/daily
    method: GET
- name: compare_consumption
  endpoint:
    path: /consumption/{energyType}/compare/{periodType}
    method: GET
- name: feedin
  endpoint:
    path: /v2/feedin/{energyType}/{periodType}/{startDate}/{endDate}
    method: GET
- name: disaggregation_forecast
  endpoint:
    path: /v2/disaggregation/forecast
    method: GET
- name: feedin_compare
  endpoint:
    path: /v2/feedin/{energyType}/compare/{periodType}
    method: GET
- name: insights
  endpoint:
    path: /v2/insights/{year}/{month}
    method: GET
- name: disaggregation
  endpoint:
    path: /v2/disaggregation/{year}/{month}
    method: GET
- name: push_notification_check
  endpoint:
    path: /v2/notification/push/check/{device_id}/{channel}
    method: GET
- name: disaggregation_history
  endpoint:
    path: /v2/disaggregation/history/{year}/{month}
    method: GET
- name: push_check
  endpoint:
    path: /v2/push/check/{device_id}
    method: GET
- name: feedin_daily
  endpoint:
    path: /feedin/{energyType}/daily
    method: GET
- name: push_enable
  endpoint:
    path: /v2/push/enable
    method: PUT
- name: feedin
  endpoint:
    path: /v2/feedin/{energyType}/{periodType}/{startDate}/{endDate}
    method: GET
- name: push_disable
  endpoint:
    path: /v2/push/disable
    method: PUT
- name: feedin_comparison
  endpoint:
    path: /v2/feedin/{energyType}/compare/{periodType}
    method: GET
- name: notification_push
  endpoint:
    path: /v2/notification/push
    method: POST
- name: insights
  endpoint:
    path: /insights/{year}/{month}
    method: GET
- name: profile
  endpoint:
    path: /v2/profile
    method: GET
- name: notification_push_check
  endpoint:
    path: /v2/notification/push/check/{device_id}/{channel}
    method: GET
- name: profile
  endpoint:
    path: /v2/profile
    method: POST
- name: push_check_device
  endpoint:
    path: /v2/push/check/{device_id}
    method: GET
- name: recommendations
  endpoint:
    path: /v2/recommendations
    method: GET
- name: push_enable
  endpoint:
    path: /v2/push/enable
    method: PUT
- name: push_disable
  endpoint:
    path: /v2/push/disable
    method: PUT
- name: notification_push
  endpoint:
    path: /v2/notification/push
    method: POST
- name: profile
  endpoint:
    path: /v2/profile
    method: GET
- name: profile
  endpoint:
    path: /v2/profile
    method: POST
- name: recommendations
  endpoint:
    path: /v2/recommendations
    method: GET
    data_selector: recommendation attributes
- name: registration
  endpoint:
    path: /v2/registration/no-gateway
    method: POST
    data_selector: ''
    params: {}
- name: reset_password
  endpoint:
    path: /v2/registration/resetpassword/<EMAIL_ADDRESS>
    method: POST
    data_selector: ''
    params: {}
- name: set_password
  endpoint:
    path: /registration/setpassword
    method: POST
    data_selector: ''
    params: {}
- name: change_email
  endpoint:
    path: /registration/email
    method: POST
    data_selector: ''
    params: {}
- name: email_verification
  endpoint:
    path: /v2/registration/provision
    method: POST
    data_selector: response
    params: {}
- name: email_verification
  endpoint:
    path: /v2/registration/provision
    method: POST
    data_selector: status
    params: {}
- name: enable_mfa
  endpoint:
    path: /mfa/enable
    method: POST
    data_selector: data
    params: {}
- name: verify_software_token
  endpoint:
    path: /MFA/verify-software-token
    method: POST
    data_selector: data
    params: {}
- name: disable_mfa
  endpoint:
    path: /mfa/disable
    method: POST
    data_selector: data
    params: {}
- name: primary_installation
  endpoint:
    path: /primary-installation
    method: GET
- name: installations
  endpoint:
    path: /installations
    method: GET
- name: put_primary_installation
  endpoint:
    path: /installation/{external-installation-id}/primary-installation
    method: PUT
- name: put_label
  endpoint:
    path: /installation/{external-installation-id}/label
    method: PUT
- name: enable_mfa
  endpoint:
    path: /mfa/enable
    method: POST
    data_selector: data.secret_code
- name: verify_software_token
  endpoint:
    path: /MFA/verify-software-token
    method: POST
- name: disable_mfa
  endpoint:
    path: /mfa/disable
    method: POST
- name: onboard_meter
  endpoint:
    path: /v2/registration/onboard/<EUI64>
    method: PUT
    data_selector: status
    params: {}
- name: installation_profile
  endpoint:
    path: /docs/managing-installation-profile-information
    method: GET
- name: energy_contract
  endpoint:
    path: /docs/managing-energy-contract-information
    method: GET
- name: notification_settings
  endpoint:
    path: /docs/channels
    method: GET
- name: primary_installation
  endpoint:
    path: /primary-installation
    method: GET
- name: installations
  endpoint:
    path: /installations
    method: GET
- name: put_primary_installation
  endpoint:
    path: /installation/{external-installation-id}/primary-installation
    method: PUT
- name: put_label
  endpoint:
    path: /installation/{external-installation-id}/label
    method: PUT
- name: installation_profile
  endpoint:
    path: /v2/profile/attributes
    method: POST
    data_selector: Attributes
    params: {}
- name: onboard_meter
  endpoint:
    path: /v2/registration/onboard/<EUI64>/false
    method: PUT
    data_selector: status
    params: {}
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: GET
    data_selector: data
    params: {}
- name: installation_profile
  endpoint:
    path: /api/installation_profile
    method: POST
    data_selector: data
- name: energy_contract
  endpoint:
    path: /api/energy_contract
    method: POST
    data_selector: data
- name: notification_settings
  endpoint:
    path: /api/notification_settings
    method: POST
    data_selector: data
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: POST
    data_selector: attributes
- name: profile_properties
  endpoint:
    path: /v2/profile/properties
    method: GET
    data_selector: properties
- name: appliance_definitions
  endpoint:
    path: /definitions
    method: GET
    data_selector: data
- name: installation_profile
  endpoint:
    path: /v2/profile/attributes
    method: POST
    data_selector: Attributes
    params: {}
- name: profile_attributes
  endpoint:
    path: /v2/profile/attributes
    method: GET
    data_selector: data.Attributes
    params: {}
- name: tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: GET
    data_selector: data
- name: set_tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: POST
    data_selector: tariff_definition
- name: profile_attributes
  endpoint:
    path: /v2/profile/properties
    method: GET
    data_selector: PropertyType
    params: {}
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metric_type}/{feed_type}/{interval}/{start_date}/{end_date}
    method: GET
    data_selector: data
    params: {}
- name: appliance_definitions
  endpoint:
    path: /v2/appliances/definitions
    method: GET
    data_selector: data
- name: current_power
  endpoint:
    path: /v2/instantaneous
    method: GET
    data_selector: data.electricity.power
- name: historical_power_data
  endpoint:
    path: /v2/instantaneous/power/{startDate}/{endDate}/{interval}/max
    method: GET
    data_selector: data.results
- name: phase_power
  endpoint:
    path: /v2/instantaneous/phases/{startDate}/{endDate}
    method: GET
    data_selector: data
- name: tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: GET
    data_selector: data
- name: set_tariff_definition
  endpoint:
    path: /v2/billing/tariff-definition
    method: POST
    data_selector: tariff_definition
- name: capacity_peak
  endpoint:
    path: /v2/capacity-peak/electricity/mains/{year}/{month}
    method: GET
    data_selector: data
    params: {}
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metric_type}/{feed_type}/{interval}/{start_date}/{end_date}
    method: GET
    data_selector: data
    params: {}
- name: current_power
  endpoint:
    path: /v2/instantaneous
    method: GET
    data_selector: data.electricity.power
- name: historical_power_data
  endpoint:
    path: /v2/instantaneous/power/{startDate}/{endDate}/{interval}/max
    method: GET
    data_selector: data.results
- name: phase_power
  endpoint:
    path: /v2/instantaneous/phases/{startDate}/{endDate}
    method: GET
    data_selector: data
- name: capacity_peak
  endpoint:
    path: /v2/capacity-peak/electricity/mains/{year}/{month}
    method: GET
    data_selector: data
    params: {}
- name: monthly_disaggregation
  endpoint:
    path: /reference/v2getmonthlydisaggregation
    method: GET
    data_selector: records
    params: {}
- name: weekly_disaggregation
  endpoint:
    path: /reference/v2getweeklydisaggregation
    method: GET
    data_selector: records
    params: {}
- name: daily_appliance_events
  endpoint:
    path: /v2/events/daily/{year}/{month}/{day}
    method: GET
    data_selector: data
- name: hourly_appliance_events
  endpoint:
    path: /v2/events/daily/{year}/{month}/{day}/{hour}
    method: GET
    data_selector: data
- name: period_appliance_events
  endpoint:
    path: /v2/events/summary/{startDate}/{endDate}
    method: GET
    data_selector: data
- name: always_on_breakdown
  endpoint:
    path: /v2/consumption/electricity/alwayson/breakdown/{year}/{month}
    method: GET
- name: Monthly Disaggregation
  endpoint:
    path: /reference/v2getmonthlydisaggregation
    method: GET
    data_selector: records
- name: Weekly Disaggregation
  endpoint:
    path: /reference/v2getweeklydisaggregation
    method: GET
    data_selector: records
- name: daily_solar_production
  endpoint:
    path: /v2/solar/production/daily/{year}/{month}/{day}
    method: GET
    data_selector: data
    params: {}
- name: monthly_solar_production
  endpoint:
    path: /v2/solar/production/{periodType}/{year}/{monthOrWeek}
    method: GET
    data_selector: data
    params: {}
- name: nilm_status
  endpoint:
    path: /v2/nilm/status
    method: GET
    data_selector: data
- name: daily_appliance_events
  endpoint:
    path: /v2/events/daily/{year}/{month}/{day}
    method: GET
    data_selector: data
- name: hourly_appliance_events
  endpoint:
    path: /v2/events/daily/{year}/{month}/{day}/{hour}
    method: GET
    data_selector: data
- name: period_appliance_events
  endpoint:
    path: /v2/events/summary/{startDate}/{endDate}
    method: GET
    data_selector: data
- name: always_on_breakdown
  endpoint:
    path: /v2/consumption/electricity/alwayson/breakdown/{year}/{month}
    method: GET
- name: monthly_insights
  endpoint:
    path: /v2/insights/{year}/{month}
    method: GET
    data_selector: data
- name: daily_solar_production
  endpoint:
    path: /v2/solar/production/daily/{year}/{month}/{day}
    method: GET
    data_selector: data
    params: {}
- name: monthly_solar_production
  endpoint:
    path: /v2/solar/production/{periodType}/{year}/{monthOrWeek}
    method: GET
    data_selector: data
    params: {}
- name: monthly_appliance_efficiency
  endpoint:
    path: /v2/insights/{year}/{month}
    method: GET
    data_selector: data
- name: nilm_status
  endpoint:
    path: /v2/nilm/status
    method: GET
    data_selector: data
- name: weekly_recommendations
  endpoint:
    path: /v2/recommendations/weekly
    method: GET
    data_selector: data
- name: monthly_recommendations
  endpoint:
    path: /v2/recommendations/monthly
    method: GET
    data_selector: data
- name: monthly_insights
  endpoint:
    path: /v2/insights/{year}/{month}
    method: GET
    data_selector: data
- name: monthly_appliance_efficiency
  endpoint:
    path: /v2/insights/{year}/{month}
    method: GET
    data_selector: data
- name: enable_notification_channel
  endpoint:
    path: /notification/channel/enable
    method: PUT
- name: disable_notification_channel
  endpoint:
    path: /notification/channel/disable
    method: PUT
- name: check_channel_status
  endpoint:
    path: /notification/channel/status
    method: GET
- name: weekly_recommendations
  endpoint:
    path: /v2/recommendations/weekly
    method: GET
    data_selector: data
- name: monthly_recommendations
  endpoint:
    path: /v2/recommendations/monthly
    method: GET
    data_selector: data
- name: inbox_notifications
  endpoint:
    path: /reference/v2getinboxmessages
    method: GET
- name: mark_message_as_read
  endpoint:
    path: /reference/v2putinboxmessagesread
    method: PUT
- name: mark_message_as_unread
  endpoint:
    path: /reference/v2putinboxmessagesunread
    method: PUT
- name: delete_message
  endpoint:
    path: /reference/v2deleteinboxmessage
    method: DELETE
- name: notifications
  endpoint:
    path: /notifications
    method: GET
- name: enable_notification_channel
  endpoint:
    path: /notification/channel/enable
    method: PUT
- name: disable_notification_channel
  endpoint:
    path: /notification/channel/disable
    method: PUT
- name: check_channel_status
  endpoint:
    path: /notification/channel/status
    method: GET
- name: mute_notification_topic
  endpoint:
    path: /reference/v2putnotificationtopicmute
    method: PUT
    data_selector: channel
    params: {}
- name: unmute_notification_topic
  endpoint:
    path: /reference/v2putnotificationtopicunmute
    method: PUT
    data_selector: channel
    params: {}
- name: get_current_notification_channel_state
  endpoint:
    path: /docs/channels#get-current-notification-channel-state
    method: GET
    data_selector: state
    params: {}
- name: inbox_notifications
  endpoint:
    path: /v2getinboxmessages
    method: GET
- name: mark_message_as_read
  endpoint:
    path: /v2putinboxmessagesread
    method: PUT
- name: mark_message_as_unread
  endpoint:
    path: /v2putinboxmessagesunread
    method: PUT
- name: delete_message
  endpoint:
    path: /v2deleteinboxmessage
    method: DELETE
- name: device_availability
  endpoint:
    path: /notifications/device_availability
    method: GET
    data_selector: notifications
    params: {}
- name: battery_level_alert
  endpoint:
    path: /notifications/battery_level_alert
    method: GET
    data_selector: notifications
    params: {}
- name: stop_repetitive_alarm
  endpoint:
    path: /v2/notification/stop-repetitive-alarm
    method: PUT
    data_selector: ok
    params: {}
- name: device_availability
  endpoint:
    path: /smartbridge/device-availability
    method: GET
    data_selector: notifications
    params: {}
- name: battery_level_alert
  endpoint:
    path: /smartbridge/battery-level-alert
    method: GET
    data_selector: notifications
    params: {}
- name: stop_repetitive_alarm
  endpoint:
    path: /v2/notification/stop-repetitive-alarm
    method: PUT
    data_selector: ok
- name: power_thresholds_config
  endpoint:
    path: /power-thresholds/config
    method: GET
    data_selector: data
- name: update_power_thresholds_config
  endpoint:
    path: /power-thresholds/config
    method: PUT
    data_selector: data
- name: firmware_update_notifications
  endpoint:
    path: /firmware-update-notifications
    method: GET
    data_selector: notifications
    params: {}
- name: power_thresholds_config
  endpoint:
    path: /power-thresholds/config
    method: GET
    data_selector: data.mains
    params: {}
- name: power_thresholds_config
  endpoint:
    path: /power-thresholds/config
    method: GET
    data_selector: data
    params: {}
- name: capacity_peak
  endpoint:
    path: /capacitypeaks/config
    method: PUT
- name: capacity_peak_retrieval
  endpoint:
    path: /capacitypeaks/config
    method: GET
- name: power_thresholds_config
  endpoint:
    path: /power-thresholds/config
    method: GET
    data_selector: data.mains
    params: {}
- name: disable_threshold
  endpoint:
    path: /power-thresholds/config
    method: PUT
    data_selector: ''
    params: {}
- name: energy_monitors_config
  endpoint:
    path: /energy/monitors/config
    method: PUT
- name: get_energy_monitors_config
  endpoint:
    path: /energy/monitors/config
    method: GET
- name: capacity_peaks
  endpoint:
    path: /capacitypeaks/config
    method: PUT
    data_selector: notifications
    params: {}
- name: capacity_peaks_config
  endpoint:
    path: /capacitypeaks/config
    method: GET
    data_selector: config
    params: {}
- name: current_homestate
  endpoint:
    path: /reference/v2gethomestatecurrent
    method: GET
- name: homestate_configuration
  endpoint:
    path: /reference/v2gethomestateconfig
    method: GET
- name: bill_prediction_alerts
  endpoint:
    path: /billing/notifications
    method: GET
- name: energy_monitors_config
  endpoint:
    path: /energy/monitors/config
    method: PUT
    data_selector: thresholds
    params: {}
- name: get_energy_monitors_config
  endpoint:
    path: /energy/monitors/config
    method: GET
    data_selector: thresholds
    params: {}
- name: current_homestate
  endpoint:
    path: /reference/v2gethomestatecurrent
    method: GET
- name: homestate_configuration
  endpoint:
    path: /reference/v2gethomestateconfig
    method: GET
- name: test_notification
  endpoint:
    path: /v2/notification/dispatch
    method: POST
    data_selector: notification
    params: {}
- name: instantaneous_appliances
  endpoint:
    path: /v2/getinstantaneousdemandandappliances
    method: GET
    data_selector: data
- name: washing_machine_activity_detection
  endpoint:
    path: /appliance/activity/detection
    method: GET
- name: bill_prediction_alerts
  endpoint:
    path: /billing/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: service_type
  endpoint:
    path: /customer/service-type
    method: GET
    data_selector: data
    params: {}
- name: feedtype
  endpoint:
    path: /feedtype
    method: GET
    data_selector: data
    params: {}
- name: test_notifications
  endpoint:
    path: /v2/notification/dispatch
    method: POST
    data_selector: code
- name: instantaneous_appliances
  endpoint:
    path: /v2/getinstantaneousdemandandappliances
    method: GET
    data_selector: data
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/{interval}/{startDate}/{endDate}
    method: GET
- name: instantaneous_power
  endpoint:
    path: /instantaneous/power/{startDate}/{endDate}/{interval}/{max}
    method: GET
- name: customer_service_type
  endpoint:
    path: /customer/service-type
    method: GET
- name: feed_type
  endpoint:
    path: /feedtype
    method: GET
- name: mandate
  endpoint:
    path: /datahub/mandate
    method: GET
    data_selector: renewal_status
- name: energy_measurements
  endpoint:
    path: /energy-measurements/{metricType}/{feedType}/{interval}/{startDate}/{endDate}
    method: GET
- name: instantaneous
  endpoint:
    path: /instantaneous
    method: GET
- name: recommendations
  endpoint:
    path: /v2/recommendations/weekly
    method: GET
    data_selector: records
    params: {}
- name: disaggregation
  endpoint:
    path: /disaggregation/year/{year}/month/{month}
    method: GET
    data_selector: records
    params: {}
- name: insights
  endpoint:
    path: /insights/year/{year}/month/{month}
    method: GET
    data_selector: records
    params: {}
- name: registration_no_gateway
  endpoint:
    path: /registration/no-gateway
    method: POST
- name: registration_set_password
  endpoint:
    path: /registration/setpassword
    method: PUT
- name: service_type
  endpoint:
    path: /customer/service-type
    method: GET
    data_selector: data
    params: {}
- name: mandate
  endpoint:
    path: /datahub/mandate
    method: GET
    data_selector: renewal_status
    params: {}
- name: service_type
  endpoint:
    path: /customer/service-type
    method: GET
    data_selector: data
- name: tariff_definition
  endpoint:
    path: /billing/tariff-definition
    method: POST
    data_selector: ''
    params: {}
- name: budget_definition
  endpoint:
    path: /billing/budget-definition
    method: POST
    data_selector: ''
    params: {}
- name: tariff_definition
  endpoint:
    path: /billing/tariff-definition
    method: POST
    data_selector: response
    params: {}
- name: budget_definition
  endpoint:
    path: /billing/budget-definition
    method: POST
    data_selector: response
    params: {}
- name: tariff_definition_get
  endpoint:
    path: /billing/tariff-definition
    method: GET
    data_selector: response
    params: {}
- name: budget_definition_get
  endpoint:
    path: /billing/budget-definition
    method: GET
    data_selector: response
    params: {}
notes:
- Checks if the gateway of the user is connected to the platform.
- If none of these URLs is provided then the Label Partner default configurations
  are going to be used.
- If no URLs are specified in this endpoint and the default URLs are not specified
  at the Label Partner configuration, then no URLs will be sent to the datahub at
  all.
- If only one of the URLs is provided in the request, the request will return an error.
- The validation process checks whether the provided string follows the URL format
  but does not perform domain validation.
- Fluvius is required to whitelist these URLs for them to be accepted from their end.
  If a URL is not whitelisted, any request to Fluvius will fail.
- Returns if the profile is complete or not and informs about the fraction of profile's
  completion.
- Returns the most recently available training status of NILM service.
- Mutes a topic for a specified channel. Within a channel, topics are used to distinguish
  between separate notification needs.
- The hardware device may not be able to store the value immediately.
- It can take a few seconds until the new capacity peaks configuration is visible.
- The capacity peaks functionality has been enabled for the platform or labelpartner
  of the user
- A NET2GRID device is connected to the user’s account and the device is online
- The hardware device may not be able to update immediately. It can take a few seconds
  until changes are visible by this call.
- Sets capacity peaks thresholds to alert the end user when exceeded.
- To successfully set the capacity peaks configuration, it is required that the capacity
  peaks functionality has been enabled for the platform or label partner of the user.
- A NET2GRID device must be connected to the user’s account and the device must be
  online.
- This API call has a cooldown period of 30 seconds before the user is able to execute
  it again.
- The hardware device may not be able to store the value immediately, and it can take
  a few seconds until the new capacity peaks configuration is visible.
- The power thresholds functionality has to be enabled for the platform or labelpartner
  of the user.
- Cooldown period of 5 seconds before the user can execute the API call again.
- It may take a few seconds until the new power thresholds configuration is visible.
- It can take a few seconds until the new power thresholds configuration is visible.
- To be deprecated, please use the disaggregation/monthly endpoint.
- Tariff values returned are expected to have up to 6 decimal digits.
- Disables push notifications for the device.
- NET2GRID is specialized in energy insights and EnergyAI is not a billing platform.
- Used to test push notifications. Sends the specified notification to all enabled
  channels.
- Be aware of the granularity of your data source
- Some CE-API calls are only suitable for input data with high granularity, derived
  via NET2GRID IoT hardware.
- No authorization required for the email verification endpoint.
- To get started, request client-id and client_secret for your client to connect with
  your dedicated customer instance of the NET2GRID platform.
- Separate API keys are needed for the production and for the staging environment.
- Customers may prefer to use their own identity providers (IDP) for end-user authentication.
- The access token is short-lived (1 hour).
- Refresh tokens are configured to expire in 30 days by default.
- Access token is short-lived (1 hour).
- The API key that should be used to execute the call will be provided to the customer
  once the dedicated instance of the NET2GRID Insight Platform has been setup and/or
  when a new labelpartner is added in the platform.
- Important to explain benefits of sharing household data to motivate users.
- The endpoint performs delta updates on the currently configured profile of an end
  user.
- The request to get the current profile attributes uses the GET method.
- It is important to clearly explain the benefits of sharing the household data as
  this will motivate users to give a complete picture.
- The request to get the current profile attributes requires a valid access token.
- This endpoint returns the tariff definition that is currently applicable for the
  end user.
- The `metric_type` can be electricity-offtake, electricity-feedin, or gas.
- The `feed_type` can be smart-meter or real-time.
- The `interval` can be quarter-hours, hours, days, weeks, or months.
- Monthly capacity peak is calculated by taking the nett offtake.
- Historical measurements can be requested using different zoom or abstraction levels.
- The interval parameter describes the granularity of the measurements, i.e. the interval
  between measurements.
- The Training Statistical Appliances process requires at least seven (7) days of
  good-quality data.
- The Training Energy Intensive Appliances process requires 30 days of good-quality
  data.
- The monthly capacity peak is calculated by taking the nett offtake.
- Capacity peaks indicate when many appliances are turned on at the same time.
- The Monthly Disaggregation Categories report provides monthly activity breakdowns,
  delivered as a daily updated batch for each examined monthly period.
- The Weekly Disaggregation Categories report provides weekly activity breakdowns,
  delivered on the first day of the week (Monday) for the previous week.
- The start and the end date parameters should be in a yyyy-MM-dd format.
- Always On consumption is a special case calculated as a daily appliance event.
- The response contains the standard JSON structure containing the status field.
- The NILM Status Report retrieves customer profile and installation model information.
- The monthly Insights Service provides a comparative overview of the household’s
  activities/appliances and the overall consumption for the past month.
- Always On consumption corresponds to the energy consumed within a residence because
  appliances continuously consume energy.
- Monthly consumption is attributed to the Always On activity.
- Authorization requires a Bearer token
- The month or the week of the year for which the solar production metrics are requested
  must be in specific formats.
- The NILM Status Report is responsible for retrieving the customer profile and installation
  model.
- The response includes various statuses for services and appliances.
- The API provides weekly and monthly recommendations.
- Recommendations are based on peer benchmarking and historical (Weekly & Monthly)
  consumption.
- Notifications can be customized with various configuration options and delivered
  by EnergyAI to Customers' users through various channels.
- The insights details can then be used within the customer's solution.
- 'For each application that is expected to support mobile PUSH notifications, the
  following credentials need to be provided to NET2GRID by the Customer: Firebase
  Cloud Messaging (FCM) Google API key, Apple Push Notification Service (APNs) TLS
  certificate. Certificates expire after one year.'
- Users can enable or disable specific channels (email, PUSH etc.)
- Users can enable/disable specific notifications and their channels or groups of
  notifications
- The API provides weekly and monthly recommendations based on peer benchmarking and
  historical consumption.
- Notifications can be customized with various configuration options and delivered
  by EnergyAI to Customers' users through email, PUSH, in-app inbox, REST API.
- Users can enable or disable notifications on specific channels.
- 'For each application that is expected to support mobile PUSH notifications, the
  following credentials need to be provided to NET2GRID by the Customer: Firebase
  Cloud Messaging (FCM) Google API key, Apple Push Notification Service (APNs) TLS
  certificate. Certificates expire after one year, Apple certificate in .p12 format,
  Apple private key.'
- Users can receive notifications at the email address associated with their account,
  which is also used for logging into the app through the CE-API.
- The Notification Structure applies to email notifications, as it does for all other
  channels.
- REST API notifications are managed on Customer's side
- The REST API notifications are not exposed by any CE-API endpoint once triggered
  by EnergyAI
- Notifications can be triggered automatically as part of specific processes and features
  enabled in NET2GRID EnergyAI.
- Notifications for device online status and battery level alerts are supported.
- CE-API will be used only to enable/disable this channel
- This endpoint currently works only for the 'connection lost' recurring notification
  (notification code OL002.1R).
- The relevant SmartBridge devices (SBLR / SPLR) should be updated to the 2.30.X firmware
  version or later.
- Topics configuration is optional.
- Topics are defined & agreed between NET2GRID & the Customer.
- By default all topics are unmuted.
- EnergyAI supports notifications to inform the user about the outcome of the firmware
  upgrade process of a Optical Smart Reader (SRLR4302).
- This upgrade process usually happens during onboarding and can be lengthy, due to
  the limited bandwidth available in the LoRa communication channel.
- This endpoint will return an 'ok' response when a recurring notification is currently
  active or not active.
- The Power Thresholds functionality needs to be enabled on EnergyAI instance (Customer
  Platform) level.
- If the original, user-configured optional field values need to be kept when disabling
  and re-enabling a threshold, then they should be specified in the PUT /power-thresholds/config
  call in which the thresholds are disabled.
- End users can set daily thresholds to monitor their total energy consumption.
- NET2GRID SmartBridge devices are able to identify if activity has been detected
  for a washing machine.
- The notifications that will be triggered will be dispatched in all eligible channels
  and devices if user consent has been given
- NET2GRID has developed pre-trained detection models that recognizes appliances from
  the power curves in the household based on limited history.
- A clear example is EV charging and washing machine detection.
- Historical Smart Meter data retention until mandates are revoked or expired.
- The combination of the Smart Meter & Real Time timeseries/streams can be managed
  only on the Application side.
- Disaggregation on the edge is real-time available directly at the moment the user
  requests it from the app.
- Smart Bridges report one value every 15 minutes in Low Resolution mode.
- Real-time Override mode enables high-resolution power consumption feed for a limited
  period.
- This mechanism can be applied to the appropriate end users only in a B2B way.
- Breaking changes on existing endpoints will be rare
- Endpoint returns the status of the consumer's consent from the Fluvius data hub.
- Renewal status is reported by the renewal_status field.
- Deprecation calendar includes resources and their replacement guides.
- New attributes are added in the response of the GET service-type call.
- The POST /profile endpoint is deprecated and should no longer be used.
- The self-provisioning flow is deprecated and should no longer be used
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- It is important that applications do not store the username and password for end-users.
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth token'
- A recurring notification is not active. In this case, the endpoint will not do anything.
- 'FWUPD.01: The firmware update was successful.'
- 'FWUPD.02: An issue occurred during the firmware update. The firmware update failed'
- '117: Gateway is processing the last configuration. Please try again in a few seconds.'
- '152: User does not have a valid household object.'
- '153: No valid meter found for user.'
- '422: Invalid input.'
- '425: Real Time power alerts are disabled.'
- '999: Unspecified error.'
- 'CP001: Consumption exceeded the capacity peak set by the user'
- 'EML1D.01: Consumption exceeded daily threshold for level 1 yesterday.'
- 'EML2D.01: Consumption exceeded daily threshold for level 2 yesterday.'
- 'EML1W.01: Consumption exceeded weekly threshold for level 1.'
- 'EML2W.01: Consumption exceeded weekly threshold for level 2.'
- 'EML1M.01: Consumption exceeded monthly threshold for level 1.'
- 'EML2M.01: Consumption exceeded monthly threshold for level 2.'
- 'EML1Y.01: Consumption exceeded yearly threshold for level 1.'
- 'EML2Y.01: Consumption exceeded yearly threshold for level 2.'
- '264: Invalid password'
- '295: Password is too short'
- '296: Password is too long'
- '297: Password must include at least one lowercase letter'
- '298: Password must include at least one uppercase letter'
- '299: Password must include at least one special character'
- '300: Password contains forbidden characters'
- '301: Password must include at least one number'
- '400: An error response will be thrown in case the ''false'' value is provided'
- '400: An error response will be thrown in case the ''false'' value will be provided
  for the ''imported'' parameter'
auth_info:
  mentioned_objects: []
client:
  base_url: https://CE_API_BASE_URL
  auth:
    type: Bearer
    flow: JWT
    location: header
    header_name: Authorization
source_metadata: null
