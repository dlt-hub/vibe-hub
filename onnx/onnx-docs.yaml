resources:
- name: linear_regression
  endpoint:
    path: /api/onnx/linear_regression
    method: POST
    data_selector: model
    params: {}
- name: X
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: A
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: B
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Y
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: X
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: A
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: B
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Y
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: initializers
  endpoint:
    path: /api/initializers
    method: POST
    data_selector: initializers
    params: {}
- name: outputs
  endpoint:
    path: /api/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: attributes
  endpoint:
    path: /api/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: subgraph
  endpoint:
    path: /api/subgraph
    method: POST
    data_selector: subgraph
    params: {}
- name: lr
  endpoint:
    path: /linear_regression
    method: GET
- name: model
  endpoint:
    path: /model
    method: POST
    data_selector: model
    params: {}
- name: model
  endpoint:
    path: /models
    method: GET
    data_selector: models
- name: Scan
  endpoint:
    path: /operators/onnx__Scan.html
    method: GET
- name: TopK
  endpoint:
    path: /operators/onnx__TopK.html
    method: GET
- name: X
  endpoint:
    path: /X
    method: GET
    data_selector: tensor_type
    params: {}
- name: A
  endpoint:
    path: /A
    method: GET
    data_selector: tensor_type
    params: {}
- name: B
  endpoint:
    path: /B
    method: GET
    data_selector: tensor_type
    params: {}
- name: Y
  endpoint:
    path: /Y
    method: GET
    data_selector: tensor_type
    params: {}
- name: model
  endpoint:
    path: /models
    method: GET
    data_selector: models
    params: {}
- name: X
  endpoint:
    path: /X
    method: GET
    data_selector: tensor_type
    params: {}
- name: A
  endpoint:
    path: /A
    method: GET
    data_selector: tensor_type
    params: {}
- name: B
  endpoint:
    path: /B
    method: GET
    data_selector: tensor_type
    params: {}
- name: Y
  endpoint:
    path: /Y
    method: GET
    data_selector: tensor_type
    params: {}
- name: initializers
  endpoint:
    path: /onnx/initializers
    method: GET
    data_selector: records
    params: {}
- name: attributes
  endpoint:
    path: /onnx/attributes
    method: GET
    data_selector: records
    params: {}
- name: evaluation
  endpoint:
    path: /onnx/evaluation
    method: GET
    data_selector: records
    params: {}
- name: subgraph
  endpoint:
    path: /onnx/subgraph
    method: GET
    data_selector: records
    params: {}
- name: X
  endpoint:
    path: /X
    method: GET
    data_selector: records
- name: A
  endpoint:
    path: /A
    method: GET
    data_selector: records
- name: B
  endpoint:
    path: /B
    method: GET
    data_selector: records
- name: Y
  endpoint:
    path: /Y
    method: GET
    data_selector: records
- name: merge_graphs
  endpoint:
    path: /onnx/compose/merge_graphs
    method: POST
    data_selector: GraphProto
- name: merge_models
  endpoint:
    path: /onnx/compose/merge_models
    method: POST
    data_selector: ModelProto
- name: add_prefix_graph
  endpoint:
    path: /onnx/compose/add_prefix_graph
    method: POST
    data_selector: GraphProto
- name: add_prefix
  endpoint:
    path: /onnx/compose/add_prefix
    method: POST
    data_selector: ModelProto
- name: KNN regressor
  endpoint:
    path: /KNN/regressor
    method: POST
    data_selector: variable
- name: expand_out_dim
  endpoint:
    path: /onnx/compose/expand_out_dim
    method: POST
    data_selector: ModelProto
    params: {}
- name: expand_out_dim_graph
  endpoint:
    path: /onnx/compose/expand_out_dim_graph
    method: POST
    data_selector: GraphProto
    params: {}
- name: example
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: constants
  endpoint:
    path: /onnx/defs/constants
    method: GET
    data_selector: constants
    params: {}
- name: model
  endpoint:
    path: /model
    method: POST
    data_selector: model
    params: {}
- name: linear_regression
  endpoint:
    path: /linear_regression
    method: GET
    data_selector: results
- name: linear_regression_improved
  endpoint:
    path: /linear_regression_improved
    method: GET
    data_selector: results
- name: converting_library
  endpoint:
    path: /converting-library
    method: GET
    data_selector: libraries
    params: {}
- name: opsets
  endpoint:
    path: /opsets
    method: GET
    data_selector: opsets
    params: {}
- name: convert_model_from_external_data
  endpoint:
    path: /onnx/external_data_helper/convert_model_from_external_data
    method: POST
    data_selector: None
    params: {}
- name: convert_model_to_external_data
  endpoint:
    path: /onnx/external_data_helper/convert_model_to_external_data
    method: POST
    data_selector: None
    params:
      all_tensors_to_one_file: true
      location: null
      size_threshold: 1024
      convert_attribute: false
- name: load_external_data_for_model
  endpoint:
    path: /onnx/external_data_helper/load_external_data_for_model
    method: POST
    data_selector: None
    params: {}
- name: load_external_data_for_tensor
  endpoint:
    path: /onnx/external_data_helper/load_external_data_for_tensor
    method: POST
    data_selector: None
    params: {}
- name: remove_external_data_field
  endpoint:
    path: /onnx/external_data_helper/remove_external_data_field
    method: POST
    data_selector: None
    params: {}
- name: save_external_data
  endpoint:
    path: /onnx/external_data_helper/save_external_data
    method: POST
    data_selector: None
    params: {}
- name: set_external_data
  endpoint:
    path: /onnx/external_data_helper/set_external_data
    method: POST
    data_selector: None
    params: {}
- name: uses_external_data
  endpoint:
    path: /onnx/external_data_helper/uses_external_data
    method: POST
    data_selector: None
    params: {}
- name: write_external_data_tensors
  endpoint:
    path: /onnx/external_data_helper/write_external_data_tensors
    method: POST
    data_selector: None
    params: {}
- name: download_model_with_test_data
  endpoint:
    path: /download_model_with_test_data
    method: GET
    data_selector: model
    params:
      repo: onnx/models:main
      opset: null
      force_reload: false
      silent: false
- name: get_model_info
  endpoint:
    path: /get_model_info
    method: GET
    data_selector: model
    params:
      repo: onnx/models:main
      opset: null
- name: list_models
  endpoint:
    path: /list_models
    method: GET
    data_selector: models
    params:
      repo: onnx/models:main
      model: null
      tags: null
- name: load
  endpoint:
    path: /load
    method: GET
    data_selector: model
    params:
      repo: onnx/models:main
      opset: null
      force_reload: false
      silent: false
- name: load_composite_model
  endpoint:
    path: /load_composite_model
    method: GET
    data_selector: composite_model
    params:
      network_repo: onnx/models:main
      preprocessing_repo: onnx/models:main
      opset: null
      force_reload: false
      silent: false
- name: set_dir
  endpoint:
    path: /set_dir
    method: POST
    data_selector: new_dir
- name: get_dir
  endpoint:
    path: /get_dir
    method: GET
    data_selector: current_dir
- name: inline_local_functions
  endpoint:
    path: /onnx/inliner/inline_local_functions
    method: GET
    data_selector: ModelProto
    params: {}
- name: inline_selected_functions
  endpoint:
    path: /onnx/inliner/inline_selected_functions
    method: GET
    data_selector: ModelProto
    params: {}
- name: AttributeProto
  endpoint:
    path: /onnx/AttributeProto
    method: GET
    data_selector: records
- name: FunctionProto
  endpoint:
    path: /onnx/FunctionProto
    method: GET
    data_selector: records
- name: GraphProto
  endpoint:
    path: /onnx/GraphProto
    method: GET
    data_selector: records
- name: MapProto
  endpoint:
    path: /onnx/MapProto
    method: GET
    data_selector: records
- name: ModelProto
  endpoint:
    path: /onnx/ModelProto
    method: GET
    data_selector: records
- name: NodeProto
  endpoint:
    path: /onnx/NodeProto
    method: GET
    data_selector: records
- name: OperatorProto
  endpoint:
    path: /onnx/OperatorProto
    method: GET
    data_selector: records
- name: OperatorSetIdProto
  endpoint:
    path: /onnx/OperatorSetIdProto
    method: GET
    data_selector: records
- name: OperatorSetProto
  endpoint:
    path: /onnx/OperatorSetProto
    method: GET
    data_selector: records
- name: OptionalProto
  endpoint:
    path: /onnx/OptionalProto
    method: GET
    data_selector: records
- name: SequenceProto
  endpoint:
    path: /onnx/SequenceProto
    method: GET
    data_selector: records
- name: SparseTensorProto
  endpoint:
    path: /onnx/SparseTensorProto
    method: GET
    data_selector: records
- name: StringStringEntryProto
  endpoint:
    path: /onnx/StringStringEntryProto
    method: GET
    data_selector: records
- name: TensorProto
  endpoint:
    path: /onnx/TensorProto
    method: GET
    data_selector: records
- name: TensorShapeProto
  endpoint:
    path: /onnx/TensorShapeProto
    method: GET
    data_selector: records
- name: TrainingInfoProto
  endpoint:
    path: /onnx/TrainingInfoProto
    method: GET
    data_selector: records
- name: TypeProto
  endpoint:
    path: /onnx/TypeProto
    method: GET
    data_selector: records
- name: ValueInfoProto
  endpoint:
    path: /onnx/ValueInfoProto
    method: GET
    data_selector: records
- name: ModelContainer
  endpoint:
    path: /onnx/model_container
    method: GET
    data_selector: ModelContainer
    params: {}
- name: ModelProto
  endpoint:
    path: /modelproto
    method: GET
    data_selector: records
- name: NodeProto
  endpoint:
    path: /nodeproto
    method: GET
    data_selector: records
- name: TensorProto
  endpoint:
    path: /tensorproto
    method: GET
    data_selector: records
- name: from_array
  endpoint:
    path: /onnx/numpy_helper/from_array
    method: GET
    data_selector: tensor
    params: {}
- name: to_array
  endpoint:
    path: /onnx/numpy_helper/to_array
    method: GET
    data_selector: array
    params: {}
- name: from_list
  endpoint:
    path: /onnx/numpy_helper/from_list
    method: GET
    data_selector: sequence
    params: {}
- name: to_list
  endpoint:
    path: /onnx/numpy_helper/to_list
    method: GET
    data_selector: list
    params: {}
- name: from_dict
  endpoint:
    path: /onnx/numpy_helper/from_dict
    method: GET
    data_selector: map
    params: {}
- name: to_dict
  endpoint:
    path: /onnx/numpy_helper/to_dict
    method: GET
    data_selector: dict
    params: {}
- name: from_optional
  endpoint:
    path: /onnx/numpy_helper/from_optional
    method: GET
    data_selector: optional
    params: {}
- name: to_optional
  endpoint:
    path: /onnx/numpy_helper/to_optional
    method: GET
    data_selector: optional
    params: {}
- name: merge_graphs
  endpoint:
    path: /onnx/compose/merge_graphs
    method: GET
    data_selector: None
- name: merge_models
  endpoint:
    path: /onnx/compose/merge_models
    method: GET
    data_selector: None
- name: parse_node
  endpoint:
    path: /onnx/parser/parse_node
    method: POST
    data_selector: NodeProto
    params: {}
- name: parse_function
  endpoint:
    path: /onnx/parser/parse_function
    method: POST
    data_selector: FunctionProto
    params: {}
- name: parse_graph
  endpoint:
    path: /onnx/parser/parse_graph
    method: POST
    data_selector: GraphProto
    params: {}
- name: parse_model
  endpoint:
    path: /onnx/parser/parse_model
    method: POST
    data_selector: ModelProto
    params: {}
- name: expand_out_dim
  endpoint:
    path: /onnx/compose/expand_out_dim
    method: GET
    data_selector: ModelProto
    params: {}
- name: expand_out_dim_graph
  endpoint:
    path: /onnx/compose/expand_out_dim_graph
    method: GET
    data_selector: GraphProto
    params: {}
- name: DefaultNone
  endpoint:
    path: /onnx/reference/op_run/DefaultNone
    method: GET
    data_selector: records
    params: {}
- name: ReferenceEvaluator
  endpoint:
    path: /onnx/reference/ReferenceEvaluator
    method: GET
    data_selector: records
    params: {}
- name: OpFunction
  endpoint:
    path: /onnx/reference/op_run/OpFunction
    method: GET
    data_selector: records
    params: {}
- name: OpRun
  endpoint:
    path: /onnx/reference/op_run
    method: GET
    data_selector: records
- name: RuntimeTypeError
  endpoint:
    path: /onnx/reference/op_run/RuntimeTypeError
    method: GET
    data_selector: records
- name: SparseTensor
  endpoint:
    path: /onnx/reference/op_run/SparseTensor
    method: GET
    data_selector: records
- name: convert_model_from_external_data
  endpoint:
    path: /onnx/external_data_helper/convert_model_from_external_data
    method: GET
    data_selector: None
    params: {}
- name: convert_model_to_external_data
  endpoint:
    path: /onnx/external_data_helper/convert_model_to_external_data
    method: GET
    data_selector: None
    params:
      all_tensors_to_one_file: true
      size_threshold: 1024
      convert_attribute: false
- name: load_external_data_for_model
  endpoint:
    path: /onnx/external_data_helper/load_external_data_for_model
    method: GET
    data_selector: None
    params: {}
- name: load_external_data_for_tensor
  endpoint:
    path: /onnx/external_data_helper/load_external_data_for_tensor
    method: GET
    data_selector: None
    params: {}
- name: remove_external_data_field
  endpoint:
    path: /onnx/external_data_helper/remove_external_data_field
    method: GET
    data_selector: None
    params: {}
- name: save_external_data
  endpoint:
    path: /onnx/external_data_helper/save_external_data
    method: GET
    data_selector: None
    params: {}
- name: set_external_data
  endpoint:
    path: /onnx/external_data_helper/set_external_data
    method: GET
    data_selector: None
    params: {}
- name: uses_external_data
  endpoint:
    path: /onnx/external_data_helper/uses_external_data
    method: GET
    data_selector: None
    params: {}
- name: write_external_data_tensors
  endpoint:
    path: /onnx/external_data_helper/write_external_data_tensors
    method: GET
    data_selector: None
    params: {}
- name: infer_shapes
  endpoint:
    path: /onnx/shape_inference/infer_shapes
    method: POST
    data_selector: model
    params: {}
- name: infer_shapes_path
  endpoint:
    path: /onnx/shape_inference/infer_shapes_path
    method: POST
    data_selector: model_path
    params: {}
- name: infer_node_outputs
  endpoint:
    path: /onnx/shape_inference/infer_node_outputs
    method: POST
    data_selector: schema
    params: {}
- name: infer_function_output_types
  endpoint:
    path: /onnx/shape_inference/infer_function_output_types
    method: POST
    data_selector: function
    params: {}
- name: extract_model
  endpoint:
    path: /extract_model
    method: POST
    data_selector: model
    params: {}
- name: convert_version
  endpoint:
    path: /onnx/version_converter/convert_version
    method: POST
    data_selector: ModelProto
- name: make_sparse_tensor_value_info
  endpoint:
    path: /onnx/helper/make_sparse_tensor_value_info
    method: GET
    data_selector: ValueInfoProto
- name: make_tensor
  endpoint:
    path: /onnx/helper/make_tensor
    method: GET
    data_selector: TensorProto
- name: make_tensor_sequence_value_info
  endpoint:
    path: /onnx/helper/make_tensor_sequence_value_info
    method: GET
    data_selector: ValueInfoProto
- name: make_tensor_type_proto
  endpoint:
    path: /onnx/helper/make_tensor_type_proto
    method: GET
    data_selector: TypeProto
- name: make_training_info
  endpoint:
    path: /onnx/helper/make_training_info
    method: GET
    data_selector: TrainingInfoProto
- name: make_tensor_value_info
  endpoint:
    path: /onnx/helper/make_tensor_value_info
    method: GET
    data_selector: ValueInfoProto
- name: make_value_info
  endpoint:
    path: /onnx/helper/make_value_info
    method: GET
    data_selector: ValueInfoProto
- name: download_model_with_test_data
  endpoint:
    path: /download_model_with_test_data
    method: GET
    data_selector: model
    params:
      repo: onnx/models:main
      opset: null
      force_reload: false
      silent: false
- name: get_model_info
  endpoint:
    path: /get_model_info
    method: GET
    data_selector: model
    params:
      repo: onnx/models:main
      opset: null
- name: list_models
  endpoint:
    path: /list_models
    method: GET
    data_selector: models
    params:
      repo: onnx/models:main
      model: null
      tags: null
- name: load
  endpoint:
    path: /load
    method: GET
    data_selector: model
    params:
      repo: onnx/models:main
      opset: null
      force_reload: false
      silent: false
- name: load_composite_model
  endpoint:
    path: /load_composite_model
    method: GET
    data_selector: composite_model
    params:
      network_repo: onnx/models:main
      preprocessing_repo: onnx/models:main
      opset: null
      force_reload: false
      silent: false
- name: set_dir
  endpoint:
    path: /set_dir
    method: POST
    data_selector: new_dir
    params: {}
- name: get_dir
  endpoint:
    path: /get_dir
    method: GET
    data_selector: current_dir
    params: {}
- name: inline_local_functions
  endpoint:
    path: /onnx/inliner/inline_local_functions
    method: POST
    data_selector: ModelProto
    params: {}
- name: inline_selected_functions
  endpoint:
    path: /onnx/inliner/inline_selected_functions
    method: POST
    data_selector: ModelProto
    params: {}
- name: ModelContainer
  endpoint:
    path: /onnx/model_container
    method: GET
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: tensor
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: tensor
    params: {}
- name: Inputs
  endpoint:
    path: /Inputs
    method: GET
    data_selector: tensor
    params: {}
- name: Outputs
  endpoint:
    path: /Outputs
    method: GET
    data_selector: tensor
    params: {}
- name: from_array
  endpoint:
    path: /onnx/numpy_helper/from_array
    method: GET
    data_selector: TensorProto
- name: from_dict
  endpoint:
    path: /onnx/numpy_helper/from_dict
    method: GET
    data_selector: MapProto
- name: from_list
  endpoint:
    path: /onnx/numpy_helper/from_list
    method: GET
    data_selector: SequenceProto
- name: from_optional
  endpoint:
    path: /onnx/numpy_helper/from_optional
    method: GET
    data_selector: OptionalProto
- name: to_array
  endpoint:
    path: /onnx/numpy_helper/to_array
    method: GET
    data_selector: ndarray
- name: to_dict
  endpoint:
    path: /onnx/numpy_helper/to_dict
    method: GET
    data_selector: dict
- name: to_list
  endpoint:
    path: /onnx/numpy_helper/to_list
    method: GET
    data_selector: list
- name: to_optional
  endpoint:
    path: /onnx/numpy_helper/to_optional
    method: GET
    data_selector: Any
- name: Acos
  endpoint:
    path: /Acos
    method: GET
    data_selector: output
- name: parse_node
  endpoint:
    path: /parse_node
    method: POST
    data_selector: NodeProto
    params: {}
- name: parse_function
  endpoint:
    path: /parse_function
    method: POST
    data_selector: FunctionProto
    params: {}
- name: parse_graph
  endpoint:
    path: /parse_graph
    method: POST
    data_selector: GraphProto
    params: {}
- name: parse_model
  endpoint:
    path: /parse_model
    method: POST
    data_selector: ModelProto
    params: {}
- name: Add
  endpoint:
    path: /Add
    method: GET
    data_selector: results
- name: Inputs
  endpoint:
    path: /Inputs
    method: GET
    data_selector: operand
    params: {}
- name: Outputs
  endpoint:
    path: /Outputs
    method: GET
    data_selector: result
    params: {}
- name: OpRun
  endpoint:
    path: /onnx/reference/op_run
    method: GET
    data_selector: records
- name: RuntimeTypeError
  endpoint:
    path: /onnx/reference/op_run/RuntimeTypeError
    method: GET
    data_selector: records
- name: SparseTensor
  endpoint:
    path: /onnx/reference/op_run/SparseTensor
    method: GET
    data_selector: records
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: Type Constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: infer_shapes
  endpoint:
    path: /onnx/shape_inference/infer_shapes
    method: POST
    data_selector: model
- name: infer_shapes_path
  endpoint:
    path: /onnx/shape_inference/infer_shapes_path
    method: POST
    data_selector: model_path
- name: infer_node_outputs
  endpoint:
    path: /onnx/shape_inference/infer_node_outputs
    method: POST
    data_selector: node_outputs
- name: infer_function_output_types
  endpoint:
    path: /onnx/shape_inference/infer_function_output_types
    method: POST
    data_selector: function_output_types
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: records
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: records
- name: Type Constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: records
- name: GetPydotGraph
  endpoint:
    path: /onnx/tools/net_drawer/GetPydotGraph
    method: GET
    data_selector: Dot
    params: {}
- name: update_inputs_outputs_dims
  endpoint:
    path: /onnx/tools/update_model_dims/update_inputs_outputs_dims
    method: GET
    data_selector: ModelProto
    params: {}
- name: replace_initializer_by_constant_of_shape
  endpoint:
    path: /onnx/tools/replace_constants/replace_initializer_by_constant_of_shape
    method: GET
    data_selector: ModelProto
    params: {}
- name: Inputs
  endpoint:
    path: /Add/Inputs
    method: GET
    data_selector: inputs
- name: Outputs
  endpoint:
    path: /Add/Outputs
    method: GET
    data_selector: outputs
- name: extract_model
  endpoint:
    path: /onnx/utils/extract_model
    method: POST
    data_selector: model
    params: {}
- name: convert_version
  endpoint:
    path: /onnx/version_converter/convert_version
    method: POST
    data_selector: model
    params:
      target_version: int
- name: grid
  endpoint:
    path: /operators/AffineGrid
    method: GET
    data_selector: outputs
    params: {}
- name: And
  endpoint:
    path: /onnx/and
    method: GET
    data_selector: tensor
    params: {}
- name: argmax
  endpoint:
    path: /argmax
    method: GET
    data_selector: outputs
    params: {}
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: data
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: reduced
- name: Abs
  endpoint:
    path: /onnx/Abs
    method: GET
- name: Acos
  endpoint:
    path: /onnx/Acos
    method: GET
- name: Acosh
  endpoint:
    path: /onnx/Acosh
    method: GET
- name: Add
  endpoint:
    path: /onnx/Add
    method: GET
- name: AffineGrid
  endpoint:
    path: /onnx/AffineGrid
    method: GET
- name: And
  endpoint:
    path: /onnx/And
    method: GET
- name: ArgMax
  endpoint:
    path: /onnx/ArgMax
    method: GET
- name: ArgMin
  endpoint:
    path: /onnx/ArgMin
    method: GET
- name: Asin
  endpoint:
    path: /onnx/Asin
    method: GET
- name: Asinh
  endpoint:
    path: /onnx/Asinh
    method: GET
- name: Atan
  endpoint:
    path: /onnx/Atan
    method: GET
- name: Atanh
  endpoint:
    path: /onnx/Atanh
    method: GET
- name: Attention
  endpoint:
    path: /onnx/Attention
    method: GET
- name: AveragePool
  endpoint:
    path: /onnx/AveragePool
    method: GET
- name: BatchNormalization
  endpoint:
    path: /onnx/BatchNormalization
    method: GET
- name: Bernoulli
  endpoint:
    path: /onnx/Bernoulli
    method: GET
- name: BitShift
  endpoint:
    path: /onnx/BitShift
    method: GET
- name: BitwiseAnd
  endpoint:
    path: /onnx/BitwiseAnd
    method: GET
- name: BitwiseNot
  endpoint:
    path: /onnx/BitwiseNot
    method: GET
- name: BitwiseOr
  endpoint:
    path: /onnx/BitwiseOr
    method: GET
- name: BitwiseXor
  endpoint:
    path: /onnx/BitwiseXor
    method: GET
- name: BlackmanWindow
  endpoint:
    path: /onnx/BlackmanWindow
    method: GET
- name: Cast
  endpoint:
    path: /onnx/Cast
    method: GET
- name: CastLike
  endpoint:
    path: /onnx/CastLike
    method: GET
- name: argmax
  endpoint:
    path: /argmax
    method: GET
    data_selector: indices
    params: {}
- name: ArgMax
  endpoint:
    path: /argmax
    method: GET
    data_selector: outputs
    params:
      axis: 0
      keepdims: 1
- name: argmin
  endpoint:
    path: /argmin
    method: GET
    data_selector: outputs
- name: ArgMin
  endpoint:
    path: /argmin
    method: GET
- name: input
  endpoint:
    path: /input
    method: GET
    data_selector: tensor
    params: {}
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: tensor
    params: {}
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: tensor
    params: {}
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: tensor
    params: {}
- name: Add
  endpoint:
    path: /onnx/Add
    method: GET
    data_selector: records
    params: {}
- name: Inputs
  endpoint:
    path: /Inputs
    method: GET
    data_selector: C
    params: {}
- name: Outputs
  endpoint:
    path: /Outputs
    method: GET
    data_selector: C
    params: {}
- name: AveragePool
  endpoint:
    path: /averagepool
    method: GET
    data_selector: outputs
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: Type Constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
    data_selector: outputs
    params: {}
- name: X
  endpoint:
    path: /X
    method: GET
    data_selector: tensor
    params: {}
- name: Y
  endpoint:
    path: /Y
    method: GET
    data_selector: tensor
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
    data_selector: outputs
- name: AffineGrid
  endpoint:
    path: /onnx/affinegrid
    method: GET
    data_selector: grid
    params: {}
- name: attributes
  endpoint:
    path: /averagepool/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /averagepool/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /averagepool/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /averagepool/type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
- name: argmax
  endpoint:
    path: /argmax
    method: GET
    data_selector: outputs
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
- name: ArgMax
  endpoint:
    path: /argmax
    method: GET
    data_selector: outputs
    params: {}
- name: ArgMax
  endpoint:
    path: /argmax
    method: GET
    data_selector: outputs
    params: {}
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
    data_selector: attributes
    params: {}
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
    data_selector: records
- name: argmin
  endpoint:
    path: /ArgMin
    method: GET
    data_selector: outputs
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: argmin
  endpoint:
    path: /argmin
    method: GET
    data_selector: outputs
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
- name: X
  endpoint:
    data_selector: input data tensor from the previous operator
    params:
      dimensions: (N x C x H x W)
- name: Y
  endpoint:
    data_selector: output data tensor from average or max pooling
    params:
      dimensions: varies based on various kernel, stride, and pad sizes
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
- name: BlackmanWindow
  endpoint:
    path: /BlackmanWindow
    method: GET
    data_selector: output
    params: {}
- name: Cast
  endpoint:
    path: /Cast
    method: GET
    data_selector: ''
    params: {}
- name: input
  endpoint:
    path: /input
    method: POST
    data_selector: output
    params: {}
- name: input
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: output
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: Type Constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: CastOperator
  endpoint:
    path: /cast_operator
    method: GET
    data_selector: outputs
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
- name: input_tensor
  endpoint:
    path: /cast/input
    method: POST
    data_selector: output
    params: {}
- name: output_tensor
  endpoint:
    path: /cast/output
    method: GET
    data_selector: output
    params: {}
- name: Cast
  endpoint:
    path: /cast
    method: GET
    data_selector: output
    params: {}
- name: attributes
  endpoint:
    path: /AveragePool/attributes
    method: GET
    data_selector: records
- name: inputs
  endpoint:
    path: /AveragePool/inputs
    method: GET
    data_selector: records
- name: outputs
  endpoint:
    path: /AveragePool/outputs
    method: GET
    data_selector: records
- name: type_constraints
  endpoint:
    path: /AveragePool/type_constraints
    method: GET
    data_selector: records
- name: input_tensor
  endpoint:
    path: /cast/input
    method: POST
    data_selector: output
    params: {}
- name: AveragePool
  endpoint:
    path: /averagepool
    method: GET
    data_selector: attributes
- name: AveragePool
  endpoint:
    path: /AveragePool
    method: GET
- name: Cast
  endpoint:
    path: /cast
    method: POST
    data_selector: output
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
- name: Cast Operator
  endpoint:
    path: /cast/operator
    method: GET
    data_selector: attributes
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: inputs
  endpoint:
    path: /BatchNormalization/inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /BatchNormalization/outputs
    method: GET
    data_selector: outputs
- name: CastLike
  endpoint:
    path: /CastLike
    method: GET
    data_selector: output
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
- name: CastLike
  endpoint:
    path: /CastLike
    method: GET
    data_selector: attributes
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
    params: {}
- name: BatchNormalization
  endpoint:
    path: /BatchNormalization
    method: GET
    data_selector: outputs
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: BlackmanWindow
  endpoint:
    path: /BlackmanWindow
    method: GET
    data_selector: output
    params:
      size: T1
      output_datatype: T2
      periodic: INT
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: tensor
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: tensor
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: X
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: Y
- name: Celu
  endpoint:
    path: /Celu
    method: GET
    data_selector: attributes
    params: {}
- name: Clip
  endpoint:
    path: /Clip
    method: GET
    data_selector: output
- name: output
  endpoint:
    path: /clip/output
    method: GET
    data_selector: output
    params: {}
- name: inputs
  endpoint:
    path: /clip/inputs
    method: GET
    data_selector: input
    params: {}
- name: outputs
  endpoint:
    path: /clip/outputs
    method: GET
    data_selector: output
    params: {}
- name: input
  endpoint:
    path: /clip/input
    method: POST
    data_selector: output
    params: {}
- name: output
  endpoint:
    path: /clip/output
    method: GET
    data_selector: output
    params: {}
- name: Cast21ToCast23
  endpoint:
    path: /Cast21ToCast23
    method: GET
    data_selector: records
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: Compress
  endpoint:
    path: /onnx/Compress
    method: GET
- name: concat_result
  endpoint:
    path: /concat
    method: POST
    data_selector: result
    params:
      inputs: list of tensors
      axis: INT
- name: Cast
  endpoint:
    path: /cast
    method: GET
    data_selector: output
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: concat_result
  endpoint:
    path: /concat/result
    method: POST
    data_selector: concat_result
    params:
      axis: required
- name: concat_result
  endpoint:
    path: /concat
    method: POST
    data_selector: concat_result
- name: Concat1
  endpoint:
    path: /Concat1
    method: GET
- name: Concat4
  endpoint:
    path: /Concat4
    method: GET
- name: constant_tensor
  endpoint:
    path: /constant_tensor
    method: GET
    data_selector: tensor
    params: {}
- name: constant_tensor
  endpoint:
    path: /constant/tensor
    method: GET
- name: constant_tensor
  endpoint:
    path: /constant_tensor
    method: GET
    data_selector: attributes
- name: Cast
  endpoint:
    path: /cast
    method: GET
    data_selector: output
    params: {}
- name: constant_tensor
  endpoint:
    path: /constant/tensor
    method: GET
- name: Cast
  endpoint:
    path: /api/cast
    method: POST
    data_selector: output
    params: {}
- name: constant_tensor
  endpoint:
    path: /constant_tensor
    method: GET
    data_selector: tensor
    params: {}
- name: constant_tensor
  endpoint:
    path: /constant/tensor
    method: GET
    data_selector: attributes
- name: constant_tensor
  endpoint:
    path: /constant_tensor
    method: GET
    data_selector: output
    params: {}
- name: CastLike
  endpoint:
    path: /onnx/docs/Operators.md#CastLike
    method: GET
    data_selector: ''
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: Conv
  endpoint:
    path: /Conv
    method: GET
    data_selector: records
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: ConvTranspose
  endpoint:
    path: /ConvTranspose
    method: GET
    data_selector: attributes
    params: {}
- name: ConvTranspose
  endpoint:
    path: /ConvTranspose
    method: GET
- name: Inputs
  endpoint:
    path: /Inputs
    method: GET
    data_selector: tensor
    params: {}
- name: Outputs
  endpoint:
    path: /Outputs
    method: GET
    data_selector: tensor
    params: {}
- name: ConvTranspose
  endpoint:
    path: /ConvTranspose
    method: GET
    data_selector: outputs
- name: input
  endpoint:
    path: /cos/input
    method: GET
    data_selector: tensor
    params: {}
- name: output
  endpoint:
    path: /cos/output
    method: GET
    data_selector: tensor
    params: {}
- name: Inputs
  endpoint:
    path: /ceil/inputs
    method: GET
- name: Outputs
  endpoint:
    path: /ceil/outputs
    method: GET
- name: CumSum
  endpoint:
    path: /onnx/Operators.md#CumSum
    method: GET
    data_selector: outputs
- name: Celu
  endpoint:
    path: /Celu
    method: GET
    data_selector: records
    params: {}
- name: Clip
  endpoint:
    path: /Clip
    method: GET
- name: CumSum
  endpoint:
    path: /cumsum
    method: POST
    data_selector: output
    params: {}
- name: input
  endpoint:
    path: /dft/input
    method: GET
    data_selector: records
- name: output
  endpoint:
    path: /dft/output
    method: GET
    data_selector: records
- name: input
  endpoint:
    path: /clip/input
    method: GET
    data_selector: tensor
    params: {}
- name: output
  endpoint:
    path: /clip/output
    method: GET
    data_selector: tensor
    params: {}
- name: attributes
  endpoint:
    path: /deformconv/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /deformconv/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /deformconv/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /deformconv/type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: ClipOperator
  endpoint:
    path: /clip/operator
    method: POST
    data_selector: output
    params:
      min: numeric_limits::lowest()
      max: numeric_limits::max()
- name: Attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: Type Constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: DepthToSpace
  endpoint:
    path: /DepthToSpace
    method: GET
- name: clip
  endpoint:
    path: /clip
    method: GET
    data_selector: attributes
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: compress
  endpoint:
    path: /Compress
    method: GET
    data_selector: output
    params:
      axis: INT
- name: dequantize_linear
  endpoint:
    path: /DequantizeLinear
    method: POST
    data_selector: outputs
    params: {}
- name: concat_result
  endpoint:
    path: /concat/result
    method: POST
    data_selector: result
    params: {}
- name: attributes
  endpoint:
    path: /dequantizelinear/attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /dequantizelinear/inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /dequantizelinear/outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /dequantizelinear/type_constraints
    method: GET
    data_selector: type_constraints
- name: concat
  endpoint:
    path: /concat
    method: POST
    data_selector: concat_result
    params:
      axis: INT
- name: inputs
  endpoint:
    data_selector: N-D quantized input tensor to be de-quantized.
- name: outputs
  endpoint:
    data_selector: N-D full precision output tensor.
- name: concat
  endpoint:
    path: /api/concat
    method: POST
    data_selector: concat_result
- name: DequantizeLinear
  endpoint:
    path: /DequantizeLinear
    method: GET
    data_selector: attributes
    params: {}
- name: concat_result
  endpoint:
    data_selector: concat_result
- name: inputs
  endpoint:
    path: /inputs
    method: GET
- name: outputs
  endpoint:
    path: /outputs
    method: GET
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
- name: concat
  endpoint:
    path: /Concat
    method: GET
    data_selector: concat_result
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: DequantizeLinear
  endpoint:
    path: /DequantizeLinear
    method: GET
    data_selector: records
- name: attributes
  endpoint:
    path: /dequantizelinear/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /dequantizelinear/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /dequantizelinear/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /dequantizelinear/type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: DequantizeLinear
  endpoint:
    path: /DequantizeLinear
    method: GET
    data_selector: output
    params: {}
- name: DequantizeLinear
  endpoint:
    path: /DequantizeLinear
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /DequantizeLinear/inputs
    method: GET
    data_selector: records
- name: outputs
  endpoint:
    path: /DequantizeLinear/outputs
    method: GET
    data_selector: records
- name: type_constraints
  endpoint:
    path: /DequantizeLinear/type_constraints
    method: GET
    data_selector: records
- name: determinant
  endpoint:
    path: /determinant
    method: POST
    data_selector: output_tensor
    params: {}
- name: A
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: B
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: C
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Constant
  endpoint:
    path: /Constant19
    method: GET
    data_selector: attributes
- name: Inputs
  endpoint:
    path: /perform-division
    method: POST
    data_selector: inputs
    params: {}
- name: Outputs
  endpoint:
    path: /result
    method: GET
    data_selector: result
    params: {}
- name: constant_tensor
  endpoint:
    path: /constant_tensor
    method: GET
    data_selector: attributes
- name: Inputs
  endpoint:
    path: /Div/Inputs
    method: GET
    data_selector: records
- name: Outputs
  endpoint:
    path: /Div/Outputs
    method: GET
    data_selector: records
- name: Type Constraints
  endpoint:
    path: /Div/TypeConstraints
    method: GET
    data_selector: records
- name: Inputs
  endpoint:
    data_selector: A, B
    params: {}
- name: Outputs
  endpoint:
    data_selector: C
    params: {}
- name: Type Constraints
  endpoint:
    data_selector: T
    params: {}
- name: constant_tensor
  endpoint:
    path: /constant_tensor
    method: GET
    data_selector: tensor
    params: {}
- name: Constant1
  endpoint:
    path: /constant1
    method: GET
- name: Constant11
  endpoint:
    path: /constant11
    method: GET
- name: Constant1
  endpoint:
    path: /constant1
    method: GET
    data_selector: output
- name: Constant9
  endpoint:
    path: /constant9
    method: GET
    data_selector: output
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: output
    params:
      optional: ratio, training_mode
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: outputs
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: outputs
- name: attributes
  endpoint:
    path: /conv/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /conv/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /conv/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /conv/type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: output
  endpoint:
    path: /dropout/output
    method: GET
    data_selector: output
- name: mask
  endpoint:
    path: /dropout/mask
    method: GET
    data_selector: mask
- name: conv1
  endpoint:
    path: /Conv/1
    method: GET
- name: conv22
  endpoint:
    path: /Conv/22
    method: GET
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: attributes
  endpoint:
    path: /conv/attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /conv/inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /conv/outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /conv/type_constraints
    method: GET
    data_selector: type_constraints
- name: Dropout
  endpoint:
    path: /dropout
    method: POST
    data_selector: output
    params: {}
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: output
    params: {}
- name: ConvTranspose
  endpoint:
    path: /ConvTranspose
    method: GET
    data_selector: attributes
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: outputs
    params: {}
- name: ConvTranspose
  endpoint:
    path: /convtranspose
    method: GET
    data_selector: outputs
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: ConvTranspose
  endpoint:
    path: /ConvTranspose
    method: GET
    data_selector: attributes
- name: Dropout
  endpoint:
    path: /dropout
    method: POST
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Inputs
  endpoint:
    path: /Cos/Inputs
    method: GET
    data_selector: input
    params: {}
- name: Outputs
  endpoint:
    path: /Cos/Outputs
    method: GET
    data_selector: output
    params: {}
- name: CumSum
  endpoint:
    path: /CumSum
    method: GET
    data_selector: outputs
- name: input
  endpoint:
    path: /dft/input
    method: GET
    data_selector: input
    params: {}
- name: output
  endpoint:
    path: /dft/output
    method: GET
    data_selector: output
    params: {}
- name: attributes
  endpoint:
    path: /deformconv/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /deformconv/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /deformconv/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /deformconv/type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: DepthToSpace
  endpoint:
    path: /onnx/DepthToSpace
    method: GET
    data_selector: outputs
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: dequantize_linear
  endpoint:
    path: /DequantizeLinear
    method: GET
    data_selector: results
- name: dequantization
  endpoint:
    path: /DequantizeLinear
    method: GET
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: attributes
  endpoint:
    path: /dequantizelinear/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: inputs
  endpoint:
    path: /dequantizelinear/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /dequantizelinear/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /dequantizelinear/type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: DequantizeLinear
  endpoint:
    path: /DequantizeLinear
    method: GET
    data_selector: records
- name: inputs
  endpoint:
    path: /DequantizeLinear/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: outputs
  endpoint:
    path: /DequantizeLinear/outputs
    method: GET
    data_selector: outputs
    params: {}
- name: type_constraints
  endpoint:
    path: /DequantizeLinear/type_constraints
    method: GET
    data_selector: type_constraints
    params: {}
- name: DequantizeLinear
  endpoint:
    path: /DequantizeLinear
    method: GET
- name: dequantize_linear
  endpoint:
    path: /DequantizeLinear
    method: GET
- name: attributes
  endpoint:
    path: /attributes
    method: GET
    data_selector: attributes
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: type_constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: dequantize_linear
  endpoint:
    path: /dequantize_linear
    method: GET
    data_selector: outputs
- name: determinant
  endpoint:
    path: /determinant
    method: POST
    data_selector: output_tensor
- name: inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: records
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: records
- name: Inputs
  endpoint:
    data_selector: A, B
- name: Outputs
  endpoint:
    data_selector: C
- name: Type Constraints
  endpoint:
    data_selector: T
- name: Inputs
  endpoint:
    path: /inputs
    method: GET
    data_selector: inputs
- name: Outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: outputs
- name: Type Constraints
  endpoint:
    path: /type_constraints
    method: GET
    data_selector: type_constraints
- name: dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
- name: Dropout
  endpoint:
    path: /Dropout
    method: GET
    data_selector: outputs
    params:
      inputs: data, ratio, training_mode
- name: Dropout
  endpoint:
    path: /dropout
    method: POST
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: output
  endpoint:
    path: /dropout/output
    method: GET
    data_selector: output
- name: mask
  endpoint:
    path: /dropout/mask
    method: GET
    data_selector: mask
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
- name: dropout
  endpoint:
    path: /dropout
    method: POST
    data_selector: outputs
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
- name: dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: outputs
    params: {}
- name: Dropout
  endpoint:
    path: /dropout
    method: GET
    data_selector: output
    params: {}
notes:
- ONNX is built on the top of protobuf.
- It minimizes the space needed to save the graph on disk.
- The tensor type is an integer value (=1 for FLOAT).
- An empty shape (None) means any shape.
- The ONNX standard allows frameworks to export trained models in ONNX format.
- An empty shape (None) means any shape
- A shape defined as [None, None] tells this object is a tensor with two dimensions
  without any further precision
- The model needs to be saved to be deployed.
- Opset defines the version of operators being used.
- Without any precision, ONNX uses the latest version available coming from the installed
  package.
- Empty shape means any shape, a shape defined as [None, None] tells this object is
  a tensor with two dimensions.
- onnx provides a function to check the model is valid.
- 'Shape inference serves one purpose: estimate the shape and the type of intermediate
  results.'
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The model uses ONNX opsets.
- Graph includes operations such as MatMul and Add.
- Uses latest opset available from the installed package
- All operators must be defined as per ONNX specifications
- onnxruntime is one efficient option available in many platforms.
- Uses ONNX for model evaluation and inference
- Uses optimized nodes for performance improvements
- Every ONNX graph should define the opset it follows.
- ONNX is strongly typed and optimizes for float32, the most common type in deep learning.
- Parallelization changes the order of computation. It is usually not significant
  but it may explain some weird discrepancies.
- Combines two ONNX graphs into a single one.
- Combines two ONNX models into a single one.
- When the extracted model size is larger than 2GB, the extra data will be saved in
  'output_path.data'.
- RuntimeError when some necessary conversion is not supported.
- Supports multidirectional (i.e., Numpy-style) broadcasting.
- Constrain input and output types to all numeric tensors.
- Performs element-wise binary addition (with Numpy-style broadcasting support).
- This operator supports multidirectional (i.e., Numpy-style) broadcasting; for more
  details please check Broadcasting in ONNX.
- This operator supports multidirectional (i.e., Numpy-style) broadcasting.
- 1-dim expansion doesn't work yet.
- If align_corners=1, consider -1 and 1 to refer to the centers of the corner pixels.
- If align_corners=0, consider -1 and 1 to refer to the outer edge of the corner pixels.
- If keepdims equals 0, then the resulting tensor has the reduced dimension pruned.
- If select_last_index is True (default False), the index of the last occurrence of
  the max is selected if the max appears more than once in the input.
- The type of the output tensor is integer.
- select_last_index is True (default False), the index of the last occurrence of the
  max is selected if the max appears more than once in the input.
- The input tensor must not be empty.
- If select_last_index is True (default False), the index of the last occurrence of
  the min is selected if the min appears more than once in the input. Otherwise the
  index of the first occurrence is selected.
- If select_last_index is True (default False), the index of the last occurrence of
  the min is selected if the min appears more than once in the input.
- Calculates the arccosine (inverse of cosine) of the given input tensor, element-wise.
- Constrain input and output types to float tensors.
- auto_pad is a DEPRECATED attribute
- The output of each pooling window is divided by the number of elements exclude pad
- auto_pad is a DEPRECATED attribute.
- The output of each pooling window is divided by the number of elements.
- Extend supported types to include uint8, int8, uint16, and int16.
- The output of each pooling window is divided by the number of elements (exclude
  pad when attribute count_include_pad is zero).
- This operator supports multidirectional (i.e., Numpy-style) broadcasting
- Output spatial shape is calculated differently depending on whether explicit padding
  is used
- Dilation defaults to 1 along each spatial axis if not present
- This operator supports multidirectional (i.e., Numpy-style) broadcasting; for more
  details please check Broadcasting in ONNX
- auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID. Where default value
  is NOTSET, which means explicit padding is used. SAME_UPPER or SAME_LOWER mean pad
  the input so that output_shape[i] = ceil(input_shape[i] / strides[i]) for each axis
  i. The padding is split between the two sides equally or almost equally (depending
  on whether it is even or odd). In case the padding is an odd number, the extra padding
  is added at the end for SAME_UPPER and at the beginning for SAME_LOWER.
- Stride along each spatial axis. If not present, the stride defaults to 1 along each
  spatial axis.
- auto_pad is a DEPRECATED attribute. If you are using them currently, the output
  spatial shape will be following when ceil_mode is enabled
- If not present, the stride defaults to 1 along each spatial axis.
- Output dimensions depend on kernel size, stride, and padding.
- 'auto_pad is a DEPRECATED attribute. If you are using them currently, the output
  spatial shape will be following: VALID: output_spatial_shape[i] = ceil((input_spatial_shape[i]
  - kernel_spatial_shape[i] + 1) / strides_spatial_shape[i])'
- SAME_UPPER or SAME_LOWER means pad the input so that the output spatial size match
  the input.
- select_last_index attribute added, default is False
- auto_pad is a DEPRECATED attribute. If you are using them currently, the output
  spatial shape will be following when ceil_mode is enabled.
- 'SAME_UPPER or SAME_LOWER: output_spatial_shape[i] = ceil(input_spatial_shape[i]
  / strides_spatial_shape[i])'
- 'pad_shape will be following if SAME_UPPER or SAME_LOWER: pad_shape[i] = (output_spatial_shape[i]
  - 1) * strides_spatial_shape[i] + kernel_spatial_shape[i] - input_spatial_shape[i]'
- This operator has optional inputs/outputs. See ONNX IR for more details about the
  representation of optional arguments.
- There are five required inputs 'X', 'scale', 'B', 'input_mean' and 'input_var'.
- When training_mode=False, extra outputs are invalid.
- This operator has **optional** inputs/outputs. See [ONNX IR](https://github.com/onnx/onnx/blob/main/docs/IR.md)
  for more details about the representation of optional arguments. An empty string
  may be used in the place of an actual argument's name to indicate a missing argument.
  Trailing optional arguments (those not followed by an argument that is present)
  may also be simply omitted.
- Input tensor types updated to include tensor(bfloat16)
- Computes scaled dot product attention on query, key and value tensors, using an
  optional attention mask if passed.
- This operator covers self and cross variants of the attention operation based on
  sequence lengths of K, Q and V.
- This operator has optional inputs/outputs.
- The computation of ReduceMean and ReduceVar uses float to avoid overflow for float16
  inputs.
- Constrain mean and variance types to float tensors.
- The output of each pooling window is divided by the number of elements (exclude
  pad when attribute count_include_pad is zero)
- For previous (depreciated) non-spatial cases, implementors are suggested to flatten
  the input shape to (N x C*D1*D2 ..*Dn) before a BatchNormalization Op.
- Carries out batch normalization as described in the paper
- Generates a Blackman window as described in the paper https://ieeexplore.ieee.org/document/1455106.
- 'auto_pad is a DEPRECATED attribute. If you are using them currently, the output
  spatial shape will be following when ceil_mode is enabled: VALID: output_spatial_shape[i]
  = ceil((input_spatial_shape[i] - ((kernel_spatial_shape[i] - 1) * dilations[i] +
  1) + 1) / strides_spatial_shape[i])'
- Casting to and from strings is not supported yet.
- Conversion from a numerical type to any numerical type is always allowed.
- Casting from complex is not supported.
- Converting non-numerical-literal string such as 'Hello World!' is an undefined behavior.
- Cases of converting string representing floating-point arithmetic value, such as
  '2.718', to INT is an undefined behavior.
- Casting from string tensor in plain and scientific numeric representations to float
  types is supported.
- Casting from string tensor in plain (e.g., "3.14" and "1000") and scientific numeric
  representations (e.g., "1e-5" and "1E8") to float types is supported.
- User must be aware of precision loss and value change caused by range difference
  between two types.
- Converting non-numerical-literal string such as "Hello World!" is an undefined behavior.
- The parameter 'saturate' defines how the conversion behaves if an input value is
  out of range of the destination type.
- The parameter defines how the conversion behaves if an input value is out of range
  of the destination type.
- Cases of converting string representing floating-point arithmetic value, such as
  "2.718", to INT is an undefined behavior.
- The behavior changes if the parameter 'saturate' is set to False.
- Converting non-numerical-literal string is an undefined behavior.
- Casting from strings and complex are not supported.
- An empty string may be used in the place of an actual argument's name to indicate
  a missing argument.
- This version of the operator has been available since version 24.
- Rounding mode for conversion to float8e8m0 is up by default.
- 'Rounding mode for conversion to float8e8m0. It only applies to casting to float8e8m0
  and is up by default. up: round to nearest value away from zero, down: round to
  nearest value towards zero, nearest: round to nearest value and ties round up.'
- The parameter defines how the conversion behaves if an input value is out of range
  of the destination type. It only applies for float 8 conversion (float8e4m3fn, float8e4m3fnuz,
  float8e5m2, float8e5m2fnuz, float8e8m0). It is true by default.
- Depending on the mode it is being run, there are multiple cases for the number of
  outputs
- This operator is non-deterministic and may not produce the same values in different
  implementations (even if a seed is specified).
- The operator casts the elements of a given input tensor to the same data type as
  the elements of the second input tensor.
- Please refer to operator Cast description for further details.
- It only applies for float 8 conversion (float8e4m3fn, float8e4m3fnuz, float8e5m2,
  float8e5m2fnuz).
- It is true by default.
- The Alpha value in Celu formula which control the shape of the unit. The default
  value is 1.0.
- When 'min' is greater than 'max', the clip operator sets all the 'input' values
  to the value of 'max'.
- Casting from string tensor in plain (e.g., '3.14' and '1000') and scientific numeric
  representations (e.g., '1e-5' and '1E8') to float types is supported.
- When 'min' is greater than 'max', the clip operator sets all the 'input' values
  to the value of 'max'. Thus, this is equivalent to 'Min(max, Max(input, min))'.
- Clip operator limits the given input within an interval.
- The parameter defines how the conversion behaves if an input value is out of range
  of the destination type. It only applies for float 8 conversion (float8e4m3fn, float8e4m3fnuz,
  float8e5m2, float8e5m2fnuz, float8e8m0). It is true by default. All cases are fully
  described in the tables inserted in the operator description.
- The operator casts the elements of a given input tensor to a data type specified
  by the 'to' argument and returns an output tensor of the same size in the converted
  type.
- The parameter defines how the conversion behaves if an input value is out of range
  of the destination type. It only applies for float 8 conversion (float8e4m3fn, float8e4m3fnuz,
  float8e5m2, float8e5m2fnuz). It is true by default.
- The parameter defines how the conversion behaves if an input value is out of range
  of the destination type. It only applies for float 8 conversion (float8e4m3fn, float8e4m3fnuz,
  float8e5m2, float8e5m2fnuz). It is true by default. All cases are fully described
  in two tables inserted in the operator description.
- All input tensors must have the same shape, except for the dimension size of the
  axis to concatenate on.
- A negative value means counting dimensions from the back. Accepted range is [-r,
  r-1] where r = rank(inputs).
- Constrain output types to any tensor type.
- This operator produces a constant tensor.
- Conversion from complex is not supported.
- This operator produces a constant tensor. Exactly one of the provided attributes,
  either value, sparse_value, or value_* must be specified.
- Rounding mode for conversion to float8e8m0. It only applies to casting to float8e8m0
  and is up by default.
- The convolution operator consumes an input tensor and a filter, and computes the
  output.
- Constrain input types. Casting from complex is not supported.
- Constrain output types. Casting to complex is not supported.
- If not present, the dilation defaults is 1 along each spatial axis.
- If not present, the stride defaults is 1 along each spatial axis.
- This attribute cannot be used simultaneously with auto_pad attribute. If not present,
  the padding defaults to 0 along start and end of each spatial axis.
- auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID.
- 'If (auto_pads == SAME_UPPER): pads[start_i] = total_padding[i]/2; pads[end_i] =
  total_padding[i] - (total_padding[i]/2)'
- If output_shape is specified pads values are ignored.
- If x is integral, +0, -0, NaN, or infinite, x itself is returned.
- Output shape can be explicitly set which will cause pads values to be auto generated.
- By default, it will do the sum inclusively meaning the first element is copied as
  is.
- Through an exclusive attribute, this behavior can change to exclude the first element.
- It can also perform summation in the opposite direction of the axis.
- The default value for alpha is 1.0
- Input and output types are constrained to float32 tensors.
- Perform cumulative sum of the input elements along the given axis.
- DCR (default) for depth-column-row order re-arrangement. Use CRD for column-row-depth
  order.
- Minimum value must be a scalar(tensor of empty shape).
- Maximum value must be a scalar(tensor of empty shape).
- The interval is specified by the inputs 'min' and 'max'.
- Between 1 and 3 inputs.
- By default, mode = DCR.
- Max default is '(3.402823e+38)'
- Min default is '(-3.402823e+38)'
- A negative value for axis means counting dimensions from the back. Accepted range
  is [-r, r-1] where r = rank(inputs).
- Between 1 and 2147483647 inputs are allowed.
- Zero point is 0 when it's not specified.
- Between 1 and 2147483647 inputs.
- Which axis to concat on
- The linear dequantization operator consumes a quantized tensor, a scale, and a zero
  point to compute the full precision tensor.
- Constrain input and output types to floating-point tensors.
- Supports multidirectional (Numpy-style) broadcasting
- Extend supported types to include uint8, int8, uint16, and int16
- A constant tensor. Exactly one of the two attributes, either value or sparse_value,
  must be specified.
- Performs element-wise binary division (with Numpy-style broadcasting support).
- RENAMED
- If training_mode is false, ratio is ignored and the operation mimics inference mode
  where nothing will be dropped from the input data.
- If training_mode is false, ratio is ignored.
- The ratio of random dropout is in the range [0, 1). Default is 0.5.
- The output mask is optional.
- Output shape depends on kernel size, stride size, and pad lengths.
- If training_mode is false, the operation mimics inference mode where nothing will
  be dropped from the input data.
- The convolution transpose operator consumes an input tensor and a filter.
- The ratio of random dropout
- auto_pad must be either NOTSET, SAME_UPPER, SAME_LOWER or VALID. Where default value
  is NOTSET, which means explicit padding is used. SAME_UPPER or SAME_LOWER mean pad
  the input so that output_shape[i] = input_shape[i] * strides[i] for each axis i.
  The padding is split between the two sides equally or almost equally (depending
  on whether it is even or odd). In case the padding is an odd number, the extra padding
  is added at the end for SAME_UPPER and at the beginning for SAME_LOWER.
- If not present, the dilation defaults to 1 along each spatial axis.
- Padding for the beginning and ending along each spatial axis, it can take any value
  greater than or equal to 0.
- This version of the operator has been available since version 14.
- DequantizeLinear23 → DequantizeLinear24 RENAMED
- The output type is determined by the attribute output_dtype.
- If output_dtype is not supplied then the output type is the same as x_scale.
- The linear dequantization operator consumes a quantized tensor, a scale, and a zero
  point to compute the full-precision tensor.
- The dequantization formula is y = (x - x_zero_point) * x_scale. x_scale and x_zero_point
  must have the same shape.
- For per-tensor/layer dequantization the scale is a scalar, for per-axis dequantization
  it is a 1-D Tensor and for blocked dequantization it has the same shape as the input,
  except for one dimension in which blocking is performed.
- The dequantization formula is y = (x - x_zero_point) * x_scale.
- x_scale and x_zero_point must have the same shape.
- The linear dequantization operator. It consumes a quantized tensor, a scale, and
  a zero point to compute the full precision tensor.
- The dequantization formula is y = (x - x_zero_point) * x_scale. x_scale and x_zero_point
  must have same shape, and can be either a scalar for per-tensor / per layer quantization,
  or a 1-D tensor for per-axis quantization.
- x_zero_point and x must have same type. x and y must have same shape. In the case
  of dequantizing int32, there's no zero point (zero point is supposed to be 0).
- The axis of the dequantizing dimension of the input tensor. Ignored for per-tensor
  quantization. Negative value means counting dimensions from the back. Accepted range
  is [-r, r-1] where r = rank(input).
- Between 2 and 3 inputs.
- N-D quantized input tensor to be de-quantized.
- Scale for input 'x'. It can be a scalar, which means a per-tensor/layer dequantization,
  or a 1-D tensor for per-axis dequantization.
- Zero point for input 'x'. Shape must match x_scale. It's optional. Zero point is
  0 when it's not specified.
- N-D full precision output tensor. It has same shape as input 'x'.
- Constrain 'x_zero_point' and 'x' to 8-bit/32-bit integer tensor.
- Supports multidirectional broadcasting.
- Extends supported types to include uint8, int8, uint16, and int16.
- Attribute broadcast=1 needs to be passed to enable broadcasting.
- Dropout takes an input floating-point tensor, an optional input ratio (floating-point
  scalar) and an optional input training_mode (boolean scalar).
- Dropout takes an input floating-point tensor, an optional input ratio (floating-point
  scalar) and an optional input training_mode (boolean scalar). It produces two tensor
  outputs.
- The ratio of random dropout has a default value of 0.5.
- The ratio is optional and defaults to 0.5 if not specified.
- training_mode is optional and defaults to false if not specified.
- If training_mode is true then the output Y will be a random dropout.
- If set to true then it indicates dropout is being used for training.
- Constrain output mask types to boolean tensors.
- This operator has optional inputs/outputs. See ONNX IR for more details about the
  representation of optional arguments. An empty string may be used in the place of
  an actual argument's name to indicate a missing argument. Trailing optional arguments
  (those not followed by an argument that is present) may also be simply omitted.
- If training_mode is false, ratio is ignored and the operation mimics inference mode.
errors:
- 'ParseError: Expected character ) not found.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Model size limit is 2 Gb.
- 'Invalid input shape: Ensure input dimensions match expected shapes.'
- 'Unsupported operation: Check if the operation is included in the ONNX opset.'
- 'ShapeInferenceError: Input tensors of wrong rank'
- 'ValidationError: Field ''shape'' of ''type'' is required but missing'
- RuntimeError when some necessary conversion is not supported.
- Casting to and from strings is not supported yet.
- Casting from strings and complex are not supported.
- Casting from non-numerical-literal string is an undefined behavior.
- Casting negative values to FLOAT8E8M0 gives undefined behavior.
- Casting from complex is not supported.
- T1 must be in (tensor(float4e2m1), tensor(float8e4m3fn), tensor(float8e4m3fnuz),
  tensor(float8e5m2), tensor(float8e5m2fnuz), tensor(int16), tensor(int32), tensor(int4),
  tensor(int8), tensor(uint16), tensor(uint4), tensor(uint8))
- 'Invalid blocksize: Ensure blocksize is a positive integer.'
- 'Unsupported type: Ensure inputs are of numeric tensor types.'
auth_info:
  mentioned_objects:
  - CheckerContext
  - ValidationError
client:
  base_url: https://onnxruntime.ai
source_metadata: null
