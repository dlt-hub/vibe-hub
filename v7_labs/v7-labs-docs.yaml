resources:
- name: workspace
  endpoint:
    path: /workspaces
    method: POST
- name: start_file_upload
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id}/start_file_upload
    method: POST
    data_selector: success
    params: {}
- name: start_file_upload
  endpoint:
    path: /api/workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id}/start_file_upload
    method: POST
    data_selector: success
    params: {}
- name: integration_connections
  endpoint:
    path: /reference/integration-connections-list
    method: GET
- name: folders
  endpoint:
    path: /reference/folder-tree-get
    method: GET
- name: cases
  endpoint:
    path: /reference/case-list-cases
    method: GET
- name: entities
  endpoint:
    path: /reference/entity-id-list
    method: GET
- name: automations
  endpoint:
    path: /reference/trigger-list
    method: GET
- name: tools
  endpoint:
    path: /reference/tools-list-integrations
    method: GET
- name: hubs
  endpoint:
    path: /reference/hub-list
    method: GET
- name: billing
  endpoint:
    path: /reference/billing-project-usage
    method: GET
- name: projects
  endpoint:
    path: /reference/properties
    method: GET
- name: secrets
  endpoint:
    path: /reference/secrets-list
    method: GET
- name: users
  endpoint:
    path: /reference/user-project-member-delete
    method: GET
- name: workspaces
  endpoint:
    path: /reference/workspace-list
    method: GET
- name: project_invitations
  endpoint:
    path: /reference/project-invitation-accept
    method: POST
- name: skills
  endpoint:
    path: /reference/skill-list
    method: GET
- name: api_keys
  endpoint:
    path: /reference/api-keys-list
    method: GET
- name: templates
  endpoint:
    path: /reference/template-import-projects
    method: POST
- name: library
  endpoint:
    path: /reference/library-entity-list
    method: GET
- name: exports
  endpoint:
    path: /reference/export-list
    method: GET
- name: imports
  endpoint:
    path: /reference/import-list-project
    method: GET
- name: URL
  endpoint:
    path: /docs/using-the-url-property
    method: GET
    data_selector: content
- name: yearly_revenue
  endpoint:
    path: /docs/using-the-collection-property/yearly_revenue
    method: GET
    data_selector: records
- name: management_team
  endpoint:
    path: /docs/using-the-collection-property/management_team
    method: GET
    data_selector: records
- name: api_keys
  endpoint:
    path: /reference/apikeys
    method: GET
    data_selector: api_keys
- name: create_entities
  endpoint:
    path: /reference/create-entities-programmatically
    method: POST
    data_selector: entities
- name: upload_files
  endpoint:
    path: /reference/uploading-files-to-collections-1
    method: POST
    data_selector: files
- name: integration_connections
  endpoint:
    path: /reference/integrationconnections
    method: GET
    data_selector: connections
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
    data_selector: projects
- name: page_splitter
  endpoint:
    path: /docs/using-the-page-splitter-property
    method: GET
    data_selector: documents
    params: {}
- name: Single Select Property
  endpoint:
    path: /docs/using-the-single-select-property
    method: GET
    data_selector: content
    params: {}
- name: Multi Select Property
  endpoint:
    path: /docs/using-the-multi-select-property
    method: GET
    data_selector: content
    params: {}
- name: Text
  endpoint:
    path: /docs/using-the-text-property
    method: GET
    data_selector: Example
    params: {}
- name: File
  endpoint:
    path: /docs/using-the-file-property
    method: GET
    data_selector: Example
    params: {}
- name: Single Select
  endpoint:
    path: /docs/using-the-singlemulti-select-properties
    method: GET
    data_selector: Example
    params: {}
- name: Multi Select
  endpoint:
    path: /docs/using-the-singlemulti-select-properties
    method: GET
    data_selector: Example
    params: {}
- name: Number
  endpoint:
    path: /docs/using-the-number-property
    method: GET
    data_selector: Example
    params: {}
- name: URL
  endpoint:
    path: /docs/using-the-url-property
    method: GET
    data_selector: Example
    params: {}
- name: JSON
  endpoint:
    path: /docs/using-the-json-property
    method: GET
    data_selector: Example
    params: {}
- name: Collection
  endpoint:
    path: /docs/using-the-collection-property
    method: GET
    data_selector: Example
    params: {}
- name: Reference
  endpoint:
    path: /docs/using-the-reference-property
    method: GET
    data_selector: Example
    params: {}
- name: Page Splitter
  endpoint:
    path: /docs/using-the-page-splitter-property
    method: GET
    data_selector: Example
    params: {}
- name: page_splitter
  endpoint:
    path: /path/to/page/splitter
    method: POST
    data_selector: documents
    params:
      split_pages: 5
- name: file_bundles
  endpoint:
    path: /docs/file-bundles
    method: GET
    data_selector: files
    params: {}
- name: email_to_cases
  endpoint:
    path: /email_to_cases
    method: POST
- name: Complete Entity
  endpoint:
    path: /triggers/complete-entity
    method: GET
    data_selector: records
- name: Complete Field
  endpoint:
    path: /triggers/complete-field
    method: GET
    data_selector: records
- name: New Entity
  endpoint:
    path: /triggers/new-entity
    method: GET
    data_selector: records
- name: Create Entity
  endpoint:
    path: /actions/create-entity
    method: POST
    data_selector: records
- name: Create Project
  endpoint:
    path: /actions/create-project
    method: POST
    data_selector: records
- name: Update Entity
  endpoint:
    path: /actions/update-entity
    method: PATCH
    data_selector: records
- name: Concierge Case
  endpoint:
    path: /email-to-cases
    method: POST
    data_selector: case
    params: {}
- name: Complete Entity
  endpoint:
    path: ''
    method: Trigger
    data_selector: ''
    params: {}
- name: Complete Field
  endpoint:
    path: ''
    method: Trigger
    data_selector: ''
    params: {}
- name: New Entity
  endpoint:
    path: ''
    method: Trigger
    data_selector: ''
    params: {}
- name: Create Entity
  endpoint:
    path: ''
    method: Action
    data_selector: ''
    params: {}
- name: Create Project
  endpoint:
    path: ''
    method: Action
    data_selector: ''
    params: {}
- name: Update Entity
  endpoint:
    path: ''
    method: Action
    data_selector: ''
    params: {}
- name: entity
  endpoint:
    path: /api/workspaces/{workspace_id}/projects/{project_id}/entities
    method: POST
    data_selector: id
    params: {}
- name: create_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities
    method: POST
    data_selector: id
    params: {}
- name: integration_connections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: folders
  endpoint:
    path: /reference/folders
    method: GET
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
- name: entities
  endpoint:
    path: /reference/entities
    method: GET
- name: automations
  endpoint:
    path: /reference/automations
    method: GET
- name: tools
  endpoint:
    path: /reference/tools
    method: GET
- name: hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: billing
  endpoint:
    path: /reference/billing
    method: GET
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
- name: properties
  endpoint:
    path: /reference/properties
    method: GET
- name: secrets
  endpoint:
    path: /reference/secrets
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: integration_connections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
- name: folders
  endpoint:
    path: /reference/folders
    method: GET
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
- name: entities
  endpoint:
    path: /reference/entities
    method: GET
- name: automations
  endpoint:
    path: /reference/automations
    method: GET
- name: tools
  endpoint:
    path: /reference/tools
    method: GET
- name: hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: billing
  endpoint:
    path: /reference/billing
    method: GET
- name: workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: integration_connections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: folders
  endpoint:
    path: /reference/folders
    method: GET
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
- name: entities
  endpoint:
    path: /reference/entities
    method: GET
- name: automations
  endpoint:
    path: /reference/automations
    method: GET
- name: tools
  endpoint:
    path: /reference/tools
    method: GET
- name: hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: billing
  endpoint:
    path: /reference/billing
    method: GET
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
- name: properties
  endpoint:
    path: /reference/properties
    method: GET
- name: secrets
  endpoint:
    path: /reference/secrets
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: IntegrationConnections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: Folders
  endpoint:
    path: /reference/folders
    method: GET
- name: Cases
  endpoint:
    path: /reference/cases
    method: GET
- name: Entities
  endpoint:
    path: /reference/entities
    method: GET
- name: Automations
  endpoint:
    path: /reference/automations
    method: GET
- name: Tools
  endpoint:
    path: /reference/tools
    method: GET
- name: Hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: Billing
  endpoint:
    path: /reference/billing
    method: GET
- name: Projects
  endpoint:
    path: /reference/projects
    method: GET
- name: Users
  endpoint:
    path: /reference/users
    method: GET
- name: Workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: ProjectInvitations
  endpoint:
    path: /reference/projectinvitations
    method: GET
- name: Skills
  endpoint:
    path: /reference/skills
    method: GET
- name: ApiKeys
  endpoint:
    path: /reference/apikeys
    method: GET
- name: Templates
  endpoint:
    path: /reference/templates
    method: GET
- name: Library
  endpoint:
    path: /reference/library
    method: GET
- name: Exports
  endpoint:
    path: /reference/exports
    method: GET
- name: Imports
  endpoint:
    path: /reference/imports
    method: GET
- name: integration_connections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: folders
  endpoint:
    path: /reference/folders
    method: GET
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
- name: entities
  endpoint:
    path: /reference/entities
    method: GET
- name: automations
  endpoint:
    path: /reference/automations
    method: GET
- name: tools
  endpoint:
    path: /reference/tools
    method: GET
- name: hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: billing
  endpoint:
    path: /reference/billing
    method: GET
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
- name: properties
  endpoint:
    path: /reference/properties
    method: GET
- name: secrets
  endpoint:
    path: /reference/secrets
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: Get a project
  endpoint:
    path: /reference/project-get
    method: GET
- name: IntegrationConnections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: Folders
  endpoint:
    path: /reference/folders
    method: GET
- name: Cases
  endpoint:
    path: /reference/cases
    method: GET
- name: Entities
  endpoint:
    path: /reference/entities
    method: GET
- name: Automations
  endpoint:
    path: /reference/automations
    method: GET
- name: Tools
  endpoint:
    path: /reference/tools
    method: GET
- name: Hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: Billing
  endpoint:
    path: /reference/billing
    method: GET
- name: Projects
  endpoint:
    path: /reference/projects
    method: GET
- name: Properties
  endpoint:
    path: /reference/properties
    method: GET
- name: Secrets
  endpoint:
    path: /reference/secrets
    method: GET
- name: Users
  endpoint:
    path: /reference/users
    method: GET
- name: Workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: WorkspaceInvitations
  endpoint:
    path: /reference/workspaceinvitations
    method: GET
- name: ProjectInvitations
  endpoint:
    path: /reference/projectinvitations
    method: GET
- name: Skills
  endpoint:
    path: /reference/skills
    method: GET
- name: ApiKeys
  endpoint:
    path: /reference/apikeys
    method: GET
- name: Templates
  endpoint:
    path: /reference/templates
    method: GET
- name: Library
  endpoint:
    path: /reference/library
    method: GET
- name: Exports
  endpoint:
    path: /reference/exports
    method: GET
- name: Imports
  endpoint:
    path: /reference/imports
    method: GET
- name: project
  endpoint:
    path: /reference/project-get
    method: GET
- name: integration_connections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: folders
  endpoint:
    path: /reference/folders
    method: GET
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
- name: entities
  endpoint:
    path: /reference/entities
    method: GET
- name: automations
  endpoint:
    path: /reference/automations
    method: GET
- name: tools
  endpoint:
    path: /reference/tools
    method: GET
- name: hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: billing
  endpoint:
    path: /reference/billing
    method: GET
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
- name: properties
  endpoint:
    path: /reference/properties
    method: GET
- name: secrets
  endpoint:
    path: /reference/secrets
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: workspace_invitations
  endpoint:
    path: /reference/workspaceinvitations
    method: GET
- name: project_invitations
  endpoint:
    path: /reference/projectinvitations
    method: GET
- name: skills
  endpoint:
    path: /reference/skills
    method: GET
- name: api_keys
  endpoint:
    path: /reference/apikeys
    method: GET
- name: templates
  endpoint:
    path: /reference/templates
    method: GET
- name: library
  endpoint:
    path: /reference/library
    method: GET
- name: exports
  endpoint:
    path: /reference/exports
    method: GET
- name: imports
  endpoint:
    path: /reference/imports
    method: GET
- name: integration_connections
  endpoint:
    path: /reference/integrationconnections
    method: GET
- name: folders
  endpoint:
    path: /reference/folders
    method: GET
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
- name: entities
  endpoint:
    path: /reference/entities
    method: GET
- name: automations
  endpoint:
    path: /reference/automations
    method: GET
- name: tools
  endpoint:
    path: /reference/tools
    method: GET
- name: hubs
  endpoint:
    path: /reference/hubs
    method: GET
- name: billing
  endpoint:
    path: /reference/billing
    method: GET
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
- name: properties
  endpoint:
    path: /reference/properties
    method: GET
- name: secrets
  endpoint:
    path: /reference/secrets
    method: GET
- name: users
  endpoint:
    path: /reference/users
    method: GET
- name: workspaces
  endpoint:
    path: /reference/workspaces
    method: GET
- name: integration_connections
  endpoint:
    path: /workspaces/{workspace_id}/integrations/all/connections
    method: GET
    data_selector: data
    params:
      include_public: 'false'
- name: List all integration connections
  endpoint:
    path: /workspaces/{workspace_id}/integrations/all/connections
    method: GET
    data_selector: data
    params:
      include_public: 'false'
- name: confirm_connection
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/confirm
    method: POST
- name: integration_connection_confirm
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/confirm
    method: POST
    data_selector: object
    params: {}
- name: Confirm creation of the connection
  endpoint:
    path: /workspaces/workspace_id/integrations/google_drive/connections/confirm
    method: POST
    data_selector: null
    params: {}
- name: List all integration connections
  endpoint:
    path: /integration-connections-list
    method: GET
    data_selector: null
    params: {}
- name: integration_connection
  endpoint:
    path: /workspaces/workspace_id/integrations/google_drive/connections/confirm
    method: POST
    data_selector: null
    params: {}
- name: Confirm creation of the connection
  endpoint:
    path: /api/workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/confirm
    method: POST
- name: integration_connections
  endpoint:
    path: /api/workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/confirm
    method: POST
- name: Confirm creation of a new connection
  endpoint:
    path: /api/workspaces/workspace_id/integrations/google_drive/connections/connection_id/confirm
    method: POST
    data_selector: response
    params: {}
- name: start_file_picker_session
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/start_file_picker_session
    method: POST
- name: start_file_picker_session
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/start_file_picker_session
    method: POST
- name: integration_connections
  endpoint:
    path: /workspaces/workspace_id/integrations/google_drive/connections/connection_id/start_file_picker_session
    method: POST
- name: start_file_picker_session
  endpoint:
    path: /workspaces/workspace_id/integrations/google_drive/connections/connection_id/start_file_picker_session
    method: POST
- name: create_connect_session
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections
    method: POST
- name: create_connect_session
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections
    method: POST
- name: resume_connection_syncs
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/start_sync
    method: POST
- name: resume_connection_syncs
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/start_sync
    method: POST
- name: Delete the connection
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}
    method: DELETE
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
- name: integrations
  endpoint:
    path: /integrations
    method: GET
- name: google_drive
  endpoint:
    path: /integrations/google_drive
    method: GET
- name: integration_connection_start
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/start
    method: POST
- name: integration_connections
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}/start
    method: POST
- name: integration_connections
  endpoint:
    path: /api/workspaces/workspace_id/integrations/google_drive/connections/connection_id/start
    method: POST
    data_selector: response
    params: {}
- name: folders
  endpoint:
    path: /reference/folders
    method: GET
    data_selector: response
    params: {}
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
    data_selector: response
    params: {}
- name: entities
  endpoint:
    path: /reference/entities
    method: POST
    data_selector: response
    params: {}
- name: projects
  endpoint:
    path: /reference/projects
    method: GET
    data_selector: response
    params: {}
- name: integration_connections
  endpoint:
    path: /api/workspaces/workspace_id/integrations/google_drive/connections/connection_id/pause_sync
    method: POST
    data_selector: response
    params: {}
- name: Update connection visibility
  endpoint:
    path: /api/workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}
    method: PUT
    params:
      public: boolean
- name: Update connection visibility
  endpoint:
    path: /workspaces/{workspace_id}/integrations/{integration_id}/connections/{connection_id}
    method: PUT
    data_selector: Integrations.ConnectionResponse
    params:
      public: boolean
- name: folder_tree
  endpoint:
    path: /workspaces/{workspace_id}/folders/tree
    method: GET
    data_selector: Folders.FolderTreeResponse
    params:
      include_membership_info: 'false'
- name: folder_tree
  endpoint:
    path: /workspaces/{workspace_id}/folders/tree
    method: GET
    params:
      include_membership_info: 'false'
- name: folders_tree
  endpoint:
    path: /workspaces/workspace_id/folders/tree
    method: GET
- name: folders
  endpoint:
    path: /workspaces/workspace_id/folders/tree
    method: GET
- name: Delete folder
  endpoint:
    path: /api/workspaces/{workspace_id}/folders/{folder_id}
    method: DELETE
    params:
      recursive: boolean
- name: delete_folder
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}
    method: DELETE
    data_selector: ''
    params:
      recursive: 'true'
- name: folder_details
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}
    method: GET
    data_selector: Folders.FolderResponse
    params: {}
- name: folder
  endpoint:
    path: /workspaces/workspace_id/folders/folder_id
    method: DELETE
- name: folder_tree
  endpoint:
    path: /folder-tree
    method: GET
- name: folders
  endpoint:
    path: /workspaces/workspace_id/folders/folder_id
    method: GET
- name: folder_details
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}
    method: GET
    data_selector: Folders.FolderResponse
    params: {}
- name: update_folder
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}
    method: PUT
- name: folders
  endpoint:
    path: /workspaces/workspace_id/folders/folder_id
    method: GET
- name: update_folder
  endpoint:
    path: /api/workspaces/{workspace_id}/folders/{folder_id}
    method: PUT
    data_selector: Folders.FolderResponse
    params: {}
- name: folders
  endpoint:
    path: /workspaces/{workspace_id}/folders
    method: GET
    data_selector: data
    params:
      include_membership_info: 'false'
- name: folders
  endpoint:
    path: /workspaces/workspace_id/folders
    method: GET
- name: folders
  endpoint:
    path: /workspaces/{workspace_id}/folders
    method: GET
    data_selector: data
    params: {}
- name: folders
  endpoint:
    path: /workspaces/{workspace_id}/folders
    method: POST
- name: folders
  endpoint:
    path: /workspaces/workspace_id/folders
    method: GET
- name: folders
  endpoint:
    path: /workspaces/workspace_id/folders
    method: POST
- name: list_folders
  endpoint:
    path: /folders
    method: GET
- name: folders
  endpoint:
    path: /workspaces/{workspace_id}/folders
    method: POST
- name: cases
  endpoint:
    path: /workspaces/{workspace_id}/cases
    method: GET
    data_selector: data
    params:
      limit: 100
- name: folders
  endpoint:
    path: /workspaces/workspace_id/folders
    method: POST
- name: list_folders
  endpoint:
    path: /folders
    method: GET
- name: cases
  endpoint:
    path: /workspaces/workspace_id/cases
    method: GET
- name: cases
  endpoint:
    path: /workspaces/{workspace_id}/cases
    method: GET
    data_selector: data
    params: {}
- name: mark_case_as_read
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}/mark_as_read
    method: POST
- name: cases
  endpoint:
    path: /cases
    method: GET
- name: case
  endpoint:
    path: /workspaces/workspace_id/cases/case_id/mark_as_read
    method: POST
- name: list_cases
  endpoint:
    path: /cases
    method: GET
- name: cases
  endpoint:
    path: /workspaces/workspace_id/cases/case_id/mark_as_read
    method: POST
- name: case
  endpoint:
    path: /workspaces/{workspace_id}/cases
    method: POST
- name: case
  endpoint:
    path: /api/workspaces/workspace_id/cases/case_id/start_file_upload
    method: POST
    data_selector: object
    params: {}
- name: case_query
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}/queries/{message_id}
    method: PUT
- name: edit_case_query
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}/queries/{message_id}
    method: PUT
- name: delete_file_linked_to_case
  endpoint:
    path: /api/workspaces/{workspace_id}/cases/{case_id}/files/{file_id}
    method: DELETE
    data_selector: uuid
    params:
      workspace_id: uuid
      case_id: uuid
      file_id: uuid
- name: cases
  endpoint:
    path: /api/workspaces/workspace_id/cases
    method: GET
    data_selector: records
- name: case
  endpoint:
    path: /api/workspaces/workspace_id/cases
    method: DELETE
    data_selector: object
    params: {}
- name: restart_case
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}/restart
    method: POST
- name: cases
  endpoint:
    path: /api/workspaces/workspace_id/cases
    method: DELETE
    data_selector: object
- name: cases
  endpoint:
    path: /api/workspaces/workspace_id/cases
    method: GET
    data_selector: records
- name: case
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}
    method: GET
- name: case
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}
    method: GET
    data_selector: Cases.CaseResponse
    params:
      workspace_id: uuid
      case_id: uuid
- name: cases
  endpoint:
    path: /workspaces/workspace_id/cases/case_id
    method: GET
- name: update_case
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}
    method: POST
- name: update_case
  endpoint:
    path: /workspaces/{workspace_id}/cases/{case_id}
    method: POST
- name: cases
  endpoint:
    path: /workspaces/workspace_id/cases/case_id
    method: POST
- name: entity_ids
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entity_ids
    method: GET
    params:
      parent_entity_id: null
      active_view_id: null
      order_by: null
      order_directions: null
      limit: null
      offset: null
      first: null
      last: null
      after: null
      before: null
- name: entity_ids
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entity_ids
    method: GET
    data_selector: data
    params:
      parent_entity_id: null
      active_view_id: null
      order_by: null
      order_directions: null
      limit: null
      offset: null
      first: null
      last: null
      after: null
      before: null
- name: projects
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/entity_ids
    method: GET
- name: confirm_files_upload
  endpoint:
    path: /api/workspaces/{workspace_id}/projects/{project_id}/properties/{property_id_or_slug}/bulk_confirm_file_upload
    method: POST
    data_selector: affected_count
    params: {}
- name: confirm_files
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties/{property_id_or_slug}/bulk_confirm_file_upload
    method: POST
- name: list_entities_in_a_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/filter
    method: POST
    params:
      limit: 0
      offset: 0
- name: entities_in_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/filter
    method: POST
    data_selector: data
    params: {}
- name: skips_a_field
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/skip
    method: POST
- name: skips_a_field
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/skip
    method: POST
- name: set_field_metadata
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/set_metadata
    method: PUT
    data_selector: metadata
    params: {}
- name: entity
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/entities/entity_id/properties/property_id_or_slug/skip
    method: POST
- name: entity_list
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/entities
    method: GET
- name: sync_integration_files
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/sync_integration_files
    method: POST
- name: set_metadata
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/set_metadata
    method: PUT
- name: entities
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities
    method: GET
- name: projects
  endpoint:
    path: /api/workspaces/workspace_id/projects
    method: GET
- name: cases
  endpoint:
    path: /api/workspaces/workspace_id/cases
    method: GET
- name: entity_ids
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entity_ids/filter
    method: POST
    data_selector: data
    params: {}
- name: set_ground_truth
  endpoint:
    path: /api/workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/ground_truth
    method: PUT
    data_selector: ''
    params: {}
- name: list_all_entity_ids_in_a_project_filtered
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entity_ids/filter
    method: POST
- name: set_review_status
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/review_status
    method: PUT
- name: triggers
  endpoint:
    path: /api/workspaces/workspace_id/triggers/trigger_id
    method: DELETE
    data_selector: object
    params: {}
- name: set_review_status
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/review_status
    method: PUT
- name: trigger
  endpoint:
    path: /workspaces/{workspace_id}/triggers/{trigger_id}
    method: GET
- name: Set Ground Truth status
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities/entity_id/properties/property_id_or_slug/review_status
    method: PUT
    data_selector: response
- name: triggers
  endpoint:
    path: /workspaces/{workspace_id}/triggers
    method: GET
    params:
      limit: 1000
- name: trigger
  endpoint:
    path: /workspaces/{workspace_id}/triggers/{trigger_id}
    method: GET
- name: triggers
  endpoint:
    path: /workspaces/workspace_id/triggers/trigger_id
    method: GET
- name: triggers
  endpoint:
    path: /workspaces/{workspace_id}/triggers
    method: GET
    data_selector: data
- name: tool_integration
  endpoint:
    path: /workspaces/{workspace_id}/tool_integrations/toggle
    method: POST
- name: tool_integrations
  endpoint:
    path: /workspaces/workspace_id/tool_integrations/toggle
    method: POST
    data_selector: object
    params: {}
- name: create_trigger
  endpoint:
    path: /workspaces/{workspace_id}/triggers
    method: POST
- name: tool_integrations
  endpoint:
    path: /workspaces/{workspace_id}/tool_integrations
    method: GET
- name: triggers
  endpoint:
    path: /workspaces/workspace_id/triggers
    method: POST
- name: tool_integrations
  endpoint:
    path: /workspaces/workspace_id/tool_integrations
    method: GET
- name: tool_integrations
  endpoint:
    path: /workspaces/workspace_id/tool_integrations/toggle
    method: POST
- name: tool_integration
  endpoint:
    path: /api/workspaces/{workspace_id}/tool_integrations
    method: GET
- name: integration_connections
  endpoint:
    path: /integration-connections-list
    method: GET
- name: folders
  endpoint:
    path: /folder-tree-get
    method: GET
- name: cases
  endpoint:
    path: /case-list-cases
    method: GET
- name: entities
  endpoint:
    path: /entity-id-list
    method: GET
- name: automations
  endpoint:
    path: /trigger-list
    method: GET
- name: tools
  endpoint:
    path: /tools-list-integrations
    method: GET
- name: hubs
  endpoint:
    path: /hub-list
    method: GET
- name: billing
  endpoint:
    path: /billing-project-usage
    method: GET
- name: projects
  endpoint:
    path: /project-list
    method: GET
- name: secrets
  endpoint:
    path: /secrets-list
    method: GET
- name: users
  endpoint:
    path: /user-project-members-list
    method: GET
- name: workspaces
  endpoint:
    path: /workspace-list
    method: GET
- name: project_invitations
  endpoint:
    path: /project-invitation-accept
    method: POST
- name: skills
  endpoint:
    path: /skill-list
    method: GET
- name: api_keys
  endpoint:
    path: /api-keys-list
    method: GET
- name: templates
  endpoint:
    path: /template-import-projects
    method: POST
- name: library
  endpoint:
    path: /library-entity-list
    method: GET
- name: exports
  endpoint:
    path: /export-list
    method: GET
- name: imports
  endpoint:
    path: /import-list-project
    method: GET
- name: tool_keys
  endpoint:
    path: /workspaces/workspace_id/tool_keys/tool_key_id/model_configs
    method: GET
- name: integration_connections
  endpoint:
    path: /integration-connections-list
    method: GET
- name: folders
  endpoint:
    path: /folder-tree-get
    method: GET
- name: cases
  endpoint:
    path: /case-list-cases
    method: GET
- name: entities
  endpoint:
    path: /entity-id-list
    method: GET
- name: automations
  endpoint:
    path: /trigger-list
    method: GET
- name: tools
  endpoint:
    path: /tools-list-model-configs
    method: GET
- name: hubs
  endpoint:
    path: /hub-list
    method: GET
- name: billing
  endpoint:
    path: /billing-project-usage
    method: GET
- name: projects
  endpoint:
    path: /project-list
    method: GET
- name: secrets
  endpoint:
    path: /secrets-list
    method: GET
- name: users
  endpoint:
    path: /user-project-member-list
    method: GET
- name: workspaces
  endpoint:
    path: /workspace-list
    method: GET
- name: tool_keys
  endpoint:
    path: /workspaces/{workspace_id}/tool_keys
    method: GET
    data_selector: data
- name: tool_keys
  endpoint:
    path: /workspaces/workspace_id/tool_keys/tool_key_id/model_configs
    method: GET
- name: tool_keys
  endpoint:
    path: /workspaces/workspace_id/tool_keys
    method: GET
- name: tool_keys
  endpoint:
    path: /workspaces/{workspace_id}/tool_keys
    method: POST
- name: tool_keys
  endpoint:
    path: /workspaces/{workspace_id}/tool_keys
    method: GET
    data_selector: data
    params: {}
- name: tool_keys
  endpoint:
    path: /workspaces/workspace_id/tool_keys
    method: POST
    data_selector: integration
- name: tool_keys
  endpoint:
    path: /workspaces/workspace_id/tool_keys
    method: GET
- name: model_configuration
  endpoint:
    path: /workspaces/{workspace_id}/tool_keys/{tool_key_id}/model_configs/{tool}
    method: POST
- name: tool_keys
  endpoint:
    path: /workspaces/{workspace_id}/tool_keys
    method: POST
- name: tool_keys
  endpoint:
    path: /workspaces/workspace_id/tool_keys
    method: POST
    data_selector: tool_keys
    params: {}
- name: delete_tool_key
  endpoint:
    path: /workspaces/{workspace_id}/tool_keys/{tool_key_id}
    method: DELETE
- name: Upserts custom model configuration
  endpoint:
    path: /api/workspaces/{workspace_id}/tool_keys/{tool_key_id}/model_configs/{tool}
    method: POST
- name: hubs
  endpoint:
    path: /workspaces/{workspace_id}/hubs
    method: GET
    data_selector: Hubs.HubsResponse
- name: hubs
  endpoint:
    path: /workspaces/workspace_id/hubs
    method: GET
- name: files
  endpoint:
    path: /hub/list-files
    method: GET
- name: move_files_in_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}/files/move
    method: POST
- name: hubs
  endpoint:
    path: /workspaces/{workspace_id}/hubs
    method: GET
- name: move_files_in_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}/files/move
    method: POST
- name: hubs
  endpoint:
    path: /workspaces/{workspace_id}/hubs
    method: POST
- name: delete_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}
    method: DELETE
    data_selector: ''
    params:
      hub_id: uuid
      workspace_id: uuid
- name: hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}
    method: GET
    data_selector: Hubs.HubResponse
    params: {}
- name: create_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs
    method: POST
- name: add_files_to_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}/files/add
    method: POST
- name: hub
  endpoint:
    path: /workspaces/workspace_id/hubs/hub_id/files/add
    method: POST
- name: hubs
  endpoint:
    path: /api/workspaces/{workspace_id}/hubs/{hub_id}
    method: GET
    data_selector: Hubs.HubResponse
    params: {}
- name: list_files_in_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}/files
    method: GET
    data_selector: folders
    params:
      folder_ids: null
- name: add_files_to_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}/files/add
    method: POST
- name: files
  endpoint:
    path: /workspaces/workspace_id/hubs/hub_id/files
    method: GET
- name: reindex_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}/reindex
    method: POST
- name: billing_usage
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/billing/usage
    method: GET
    data_selector: limits
    params:
      workspace_id: required
      project_id: required
- name: billing_usage
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/billing/usage
    method: GET
- name: hub_reindex
  endpoint:
    path: /workspaces/workspace_id/hubs/hub_id/reindex
    method: POST
- name: list_files
  endpoint:
    path: /hubs
    method: GET
- name: list_files_in_hub
  endpoint:
    path: /workspaces/{workspace_id}/hubs/{hub_id}/files
    method: GET
    data_selector: folders
- name: billing_plans
  endpoint:
    path: /workspaces/{workspace_id}/billing/plans
    method: GET
- name: files
  endpoint:
    path: /workspaces/workspace_id/hubs/hub_id/files
    method: GET
- name: billing_plans
  endpoint:
    path: /workspaces/workspace_id/billing/plans
    method: GET
- name: billing_workspace_usage
  endpoint:
    path: /billing/workspace-usage
    method: GET
- name: billing_effective_plan
  endpoint:
    path: /billing/get-effective-plan
    method: GET
- name: billing_project_usage
  endpoint:
    path: /billing/project-usage
    method: GET
- name: billing_plan_list
  endpoint:
    path: /billing/plan-list
    method: GET
- name: billing_project_usage
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/billing/usage
    method: GET
    data_selector: limits
    params:
      workspace_id: uuid
      project_id: uuid
- name: billing_usage
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/billing/usage
    method: GET
- name: effective_plan
  endpoint:
    path: /workspaces/{workspace_id}/billing/effective-plan
    method: GET
- name: billing_plans
  endpoint:
    path: /workspaces/{workspace_id}/billing/plans
    method: GET
- name: billing_effective_plan
  endpoint:
    path: /workspaces/workspace_id/billing/effective-plan
    method: GET
- name: billing_plan_list
  endpoint:
    path: /billing-plan-list
    method: GET
- name: billing_workspace_usage
  endpoint:
    path: /billing-workspace-usage
    method: GET
- name: billing_plans
  endpoint:
    path: /workspaces/workspace_id/billing/plans
    method: GET
- name: billing_workspace_usage
  endpoint:
    path: /billing/workspace-usage
    method: GET
- name: billing_effective_plan
  endpoint:
    path: /billing/get-effective-plan
    method: GET
- name: billing_workspace_usage
  endpoint:
    path: /workspaces/{workspace_id}/billing/usage
    method: GET
- name: billing_usage
  endpoint:
    path: /workspaces/workspace_id/billing/usage
    method: GET
- name: effective_plan
  endpoint:
    path: /workspaces/{workspace_id}/billing/effective-plan
    method: GET
    data_selector: billing.Plan
    params:
      workspace_id: uuid
- name: properties
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties
    method: GET
- name: billing_usage
  endpoint:
    path: /workspaces/workspace_id/billing/usage
    method: GET
- name: properties
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties
    method: GET
    params: {}
- name: properties
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties
    method: GET
- name: properties
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties
    method: GET
- name: remove_property
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties/{property_id_or_slug}
    method: DELETE
    data_selector: id
    params: {}
- name: Add a property to a project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties
    method: POST
- name: property
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties/{property_id_or_slug}
    method: GET
    data_selector: Projects.PropertyResponse
    params:
      workspace_id: uuid
      project_id: uuid
      property_id_or_slug: string
- name: update_property
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties/{property_id_or_slug}
    method: PUT
- name: property
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties/{property_id_or_slug}
    method: GET
- name: update_property
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties/{property_id_or_slug}
    method: PUT
- name: properties_from_prompt
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties/from_prompt
    method: POST
- name: start_file_upload
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/start_file_upload
    method: POST
    data_selector: confirm_upload_url
- name: project_hierarchy
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/hierarchy
    method: GET
- name: Generate property configuration
  endpoint:
    path: /api/workspaces/{workspace_id}/projects/{project_id}/properties/from_prompt
    method: POST
- name: properties
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/properties/from_prompt
    method: POST
- name: project_hierarchy
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/hierarchy
    method: GET
- name: previous_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/previous
    method: GET
    data_selector: data
- name: confirm_file_upload
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/properties/{property_id_or_slug}/confirm_file_upload
    method: POST
- name: next_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/next
    method: GET
- name: previous_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/previous
    method: GET
    data_selector: data
    params: {}
- name: next_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/next
    method: GET
    params: {}
- name: workspace_icon
  endpoint:
    path: /workspaces/{workspace_id}/icon
    method: DELETE
- name: bulk_delete
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities/bulk_delete
    method: POST
    headers:
      accept: application/json
      content-type: application/json
- name: remove_workspace_icon
  endpoint:
    path: /workspaces/{workspace_id}/icon
    method: DELETE
- name: recalculate_entity_fields
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/recalculate
    method: POST
    data_selector: affected_count
    params:
      force: false
- name: recalculate_entity
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities/entity_id/recalculate
    method: POST
    data_selector: object
    params: {}
- name: delete_entity
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities/entity_id/delete
    method: DELETE
    data_selector: object
    params: {}
- name: entity
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities/entity_id
    method: DELETE
    data_selector: object
    params: {}
- name: recalculate_entity_fields
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}/recalculate
    method: POST
    data_selector: affected_count
    params: {}
- name: delete_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}
    method: DELETE
- name: entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}
    method: PUT
- name: entities
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities
    method: GET
- name: entity
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/entities/entity_id
    method: GET
- name: entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}
    method: GET
    data_selector: object
    params: {}
- name: Set Field Values on an Entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities/{entity_id}
    method: PUT
- name: list_all_entities_in_a_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities
    method: GET
    data_selector: data
- name: update_project_cover_image
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/cover_image
    method: POST
    data_selector: Projects.ProjectResponse
    params:
      file: file
- name: entities_in_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities
    method: GET
    data_selector: data
    params:
      parent_entity_id: null
      active_view_id: null
      only_property_ids: null
      truncate_data_bytes: null
      include_source_data: true
      order_by: null
      order_directions: null
      limit: null
      offset: null
      first: null
      last: null
      after: null
      before: null
- name: create_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities
    method: POST
- name: update_project_cover_image
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/cover_image
    method: POST
    data_selector: Projects.ProjectResponse
    params: {}
- name: projects
  endpoint:
    path: /workspaces/{workspace_id}/projects
    method: GET
    data_selector: projects
    params:
      project_type: regular
      only_parents: false
      include_membership_info: false
      without_properties: false
- name: projects
  endpoint:
    path: /workspaces/workspace_id/projects
    method: GET
- name: create_entity
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entities
    method: POST
- name: create_project
  endpoint:
    path: /workspaces/{workspace_id}/projects
    method: POST
- name: projects
  endpoint:
    path: /workspaces/{workspace_id}/projects
    method: GET
    params:
      project_type: regular
      only_parents: false
      include_membership_info: false
      without_properties: false
- name: clone_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/clone
    method: POST
- name: projects
  endpoint:
    path: /workspaces/workspace_id/projects
    method: GET
- name: clone_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/clone
    method: POST
- name: project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}
    method: GET
    data_selector: Projects.ProjectResponse
    params: {}
- name: update_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}
    method: PUT
- name: project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}
    method: GET
- name: projects
  endpoint:
    path: /workspaces/workspace_id/projects
    method: GET
- name: move_project_to_folder
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/move_to_folder
    method: POST
    params: {}
- name: update_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}
    method: PUT
    data_selector: Projects.ProjectResponse
- name: public_template_projects
  endpoint:
    path: /project_templates
    method: GET
    data_selector: response
    params: {}
- name: project
  endpoint:
    path: /workspaces/workspace_id/projects/project_id
    method: PUT
- name: project_templates
  endpoint:
    path: /project_templates
    method: GET
- name: move_project_to_folder
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/move_to_folder
    method: POST
- name: public_template_projects
  endpoint:
    path: /project_templates
    method: GET
    data_selector: response
    params:
      limit: 0
      offset: 0
- name: secrets
  endpoint:
    path: /api/workspaces/workspace_id/secrets/secret_name
    method: DELETE
    data_selector: object
    params: {}
- name: list_secret_names
  endpoint:
    path: /api/workspaces/workspace_id/secrets
    method: GET
    data_selector: array
    params: {}
- name: project_templates
  endpoint:
    path: /project_templates
    method: GET
- name: Create or update a secret by name
  endpoint:
    path: /api/workspaces/{workspace_id}/secrets/{secret_name}
    method: PUT
    data_selector: null
    params: {}
- name: secrets
  endpoint:
    path: /workspaces/{workspace_id}/secrets
    method: GET
    data_selector: data
    params: {}
- name: secrets
  endpoint:
    path: /workspaces/workspace_id/secrets
    method: GET
- name: project_member
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members/{user_id}
    method: GET
- name: user_project_member
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/members/user_id
    method: GET
- name: create_or_update_secret
  endpoint:
    path: /workspaces/{workspace_id}/secrets/{secret_name}
    method: PUT
- name: user_project_member_update
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members/{user_id}
    method: PUT
- name: update_project_access_type
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members/access_type
    method: PUT
- name: delete_user_role_folder
  endpoint:
    path: /api/workspaces/{workspace_id}/folders/{folder_id}/members/{user_id}
    method: DELETE
    data_selector: Users.ResourceMemberResponse
    params: {}
- name: user_project_member
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/members/user_id
    method: GET
- name: user_project_member_add
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members/{user_id}
    method: POST
- name: update_user_role
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members/{user_id}
    method: PUT
- name: folder_member
  endpoint:
    path: /api/workspaces/{workspace_id}/folders/{folder_id}/members/{user_id}
    method: GET
    data_selector: Users.ResourceEffectiveMemberResponse
    params:
      workspace_id: uuid
      folder_id: uuid
      user_id: Common.UUID
- name: update_project_access_type
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members/access_type
    method: PUT
    params: {}
- name: user_folder_member_add
  endpoint:
    path: /api/workspaces/{workspace_id}/folders/{folder_id}/members/{user_id}
    method: POST
- name: update_user_role_in_folder
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}/members/{user_id}
    method: PUT
- name: folders
  endpoint:
    path: /api/workspaces/workspace_id/folders
    method: GET
- name: members
  endpoint:
    path: /api/workspaces/workspace_id/folders/folder_id/members
    method: GET
- name: folder_access_type
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}/members/access_type
    method: PUT
    data_selector: access_type
    params: {}
- name: add_user_role_in_folder
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}/members/{user_id}
    method: POST
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: Users.RegularUser
    params: {}
- name: update_user_role_in_folder
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}/members/{user_id}
    method: PUT
    data_selector: Users.ResourceMemberResponse
    params:
      role: string
- name: users
  endpoint:
    path: /users/user_id
    method: GET
- name: Update folder's access type
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}/members/access_type
    method: PUT
    data_selector: data
    params:
      access_type: string
- name: user
  endpoint:
    path: /reference/user-get
    method: GET
- name: user
  endpoint:
    path: /users/me
    method: GET
    data_selector: Users.UserMeResponse
- name: users
  endpoint:
    path: /users/user_id
    method: GET
- name: update_user
  endpoint:
    path: /users/me
    method: PUT
- name: members_in_folder
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}/members
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /users/me
    method: GET
    data_selector: UserMeResponse
    params: {}
- name: user
  endpoint:
    path: /users/me
    method: PUT
    data_selector: object
- name: delete_user_role_workspace
  endpoint:
    path: /api/workspaces/{workspace_id}/members/{user_id}
    method: DELETE
    data_selector: Users.ResourceMemberResponse
- name: workspace_member
  endpoint:
    path: /api/workspaces/workspace_id/members/user_id
    method: DELETE
    data_selector: object
    params: {}
- name: members_in_folder
  endpoint:
    path: /workspaces/{workspace_id}/folders/{folder_id}/members
    method: GET
    data_selector: data
    params:
      show_missing_access: 'false'
- name: members
  endpoint:
    path: /workspaces/workspace_id/folders/folder_id/members
    method: GET
- name: workspace_member
  endpoint:
    path: /workspaces/{workspace_id}/members/{user_id}
    method: GET
- name: service_account
  endpoint:
    path: /workspaces/{workspace_id}/service_accounts
    method: POST
    data_selector: Users.ServiceAccount
    params:
      name: string
      pem_certificate: string
- name: update_user_role
  endpoint:
    path: /workspaces/{workspace_id}/members/{user_id}
    method: PUT
- name: members
  endpoint:
    path: /workspaces/{workspace_id}/members
    method: GET
    data_selector: data
- name: workspace_member
  endpoint:
    path: /workspaces/{workspace_id}/members/{user_id}
    method: GET
    data_selector: Users.ResourceEffectiveMemberResponse
    params: {}
- name: project_members
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members
    method: GET
    data_selector: data
- name: list_workspace_members
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/members
    method: GET
- name: update_user_role
  endpoint:
    path: /workspaces/{workspace_id}/members/{user_id}
    method: PUT
    data_selector: Users.ResourceMemberResponse
    params: {}
- name: field_errors
  endpoint:
    path: /workspaces/{workspace_id}/field_errors
    method: GET
    data_selector: data
- name: members
  endpoint:
    path: /workspaces/{workspace_id}/members
    method: GET
    data_selector: data
- name: update_workspace_icon
  endpoint:
    path: /workspaces/{workspace_id}/icon
    method: POST
    data_selector: object
    params: {}
- name: project_members
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/members
    method: GET
    data_selector: data
- name: list_workspace_members
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/members
    method: GET
- name: field_errors
  endpoint:
    path: /workspaces/{workspace_id}/field_errors
    method: GET
    data_selector: data
    params: {}
- name: update_workspace_icon
  endpoint:
    path: /workspaces/{workspace_id}/icon
    method: POST
- name: workspace
  endpoint:
    path: /workspaces/{workspace_id}
    method: GET
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: data
- name: workspaces
  endpoint:
    path: /workspaces/workspace_id
    method: GET
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
- name: verify_invitation
  endpoint:
    path: /workspaces/{workspace_id}/invitations/verify
    method: GET
    data_selector: object
    params:
      invite_token: string
      email: string
- name: workspaces
  endpoint:
    path: /api/workspaces
    method: GET
- name: workspace
  endpoint:
    path: /api/workspaces/workspace_id
    method: DELETE
    headers:
      accept: application/json
- name: invitations
  endpoint:
    path: /workspaces/{workspace_id}/invitations
    method: GET
    data_selector: data
    params: {}
- name: workspaces
  endpoint:
    path: /workspaces/{workspace_id}
    method: GET
- name: workspaces
  endpoint:
    path: /workspaces/workspace_id
    method: GET
- name: verify_invitation
  endpoint:
    path: /workspaces/{workspace_id}/invitations/verify
    method: GET
    params:
      invite_token: string
      email: string
- name: workspace_invitations
  endpoint:
    path: /workspaces/workspace_id/invitations/verify
    method: GET
- name: invitations
  endpoint:
    path: /workspaces/{workspace_id}/invitations
    method: GET
    data_selector: data
    params: {}
- name: workspace_invitations
  endpoint:
    path: /workspaces/workspace_id/invitations
    method: GET
- name: workspace_invitation
  endpoint:
    path: /workspaces/{workspace_id}/invitations/accept
    method: POST
- name: workspaces
  endpoint:
    path: /workspaces/{workspace_id}
    method: PUT
- name: delete_pending_invitation
  endpoint:
    path: /api/workspaces/{workspace_id}/invitations/{invitation_id}
    method: DELETE
    data_selector: object
    params: {}
- name: accept_invitation
  endpoint:
    path: /workspaces/{workspace_id}/invitations/accept
    method: POST
- name: AcceptInvitation
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations/accept
    method: POST
- name: workspace
  endpoint:
    path: /workspaces/{workspace_id}
    method: PUT
- name: workspace_invitations
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/invitations/invitation_id
    method: DELETE
    data_selector: object
    params: {}
- name: accept_invitation
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations/accept
    method: POST
    params: {}
- name: verify_invitation
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations/verify
    method: GET
    data_selector: object
    params:
      invite_token: string
      email: string
- name: project_invitations
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/invitations/verify
    method: GET
- name: project_invitation
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations
    method: GET
    data_selector: data
    params: {}
- name: workspace_invitations
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/invitations/invitation_id
    method: DELETE
    data_selector: object
    params: {}
- name: workspace_invitations
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/invitations
    method: GET
- name: verify_invitation
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations/verify
    method: GET
    data_selector: invitation_response
    params:
      invite_token: string
      email: string
- name: verify_invitation
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/invitations/verify
    method: GET
- name: project_invitations
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/invitations
    method: POST
- name: invitations
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations
    method: GET
    data_selector: data
    params: {}
- name: create_global_skill
  endpoint:
    path: /skills
    method: POST
- name: project_invitations
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/invitations
    method: GET
- name: skills
  endpoint:
    path: /skills
    method: POST
    data_selector: null
    params: {}
- name: project_invitation
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations
    method: POST
- name: skills
  endpoint:
    path: /workspaces/{workspace_id}/skills
    method: GET
    data_selector: data
    params: {}
- name: create_global_skill
  endpoint:
    path: /skills
    method: POST
- name: skills
  endpoint:
    path: /skills
    method: GET
- name: skills
  endpoint:
    path: /skills
    method: POST
    data_selector: null
    params: {}
- name: skills
  endpoint:
    path: /workspaces/{workspace_id}/skills
    method: POST
- name: skills
  endpoint:
    path: /workspaces/{workspace_id}/skills
    method: GET
    data_selector: data
    params: {}
- name: skills
  endpoint:
    path: /workspaces/workspace_id/skills
    method: GET
- name: create_skill
  endpoint:
    path: /workspaces/{workspace_id}/skills
    method: POST
- name: update_global_skill
  endpoint:
    path: /skills/{skill_id}
    method: PUT
- name: skills
  endpoint:
    path: /api/workspaces/workspace_id/skills
    method: POST
    data_selector: null
    params: {}
- name: delete_global_skill
  endpoint:
    path: /api/skills/{skill_id}
    method: DELETE
    data_selector: object
    params: {}
- name: skill
  endpoint:
    path: /api/skills/skill_id
    method: DELETE
    data_selector: ''
    params: {}
- name: execute_skill
  endpoint:
    path: /workspaces/{workspace_id}/skills/{skill_id}/runs
    method: POST
- name: update_global_skill
  endpoint:
    path: /skills/{skill_id}
    method: PUT
- name: skills
  endpoint:
    path: /skills/skill_id
    method: PUT
    data_selector: null
    params: {}
- name: execute_skill
  endpoint:
    path: /workspaces/{workspace_id}/skills/{skill_id}/runs
    method: POST
- name: skill
  endpoint:
    path: /workspaces/{workspace_id}/skills/{skill_id}
    method: GET
- name: skills
  endpoint:
    path: /workspaces/workspace_id/skills/skill_id
    method: GET
- name: update_skill
  endpoint:
    path: /workspaces/{workspace_id}/skills/{skill_id}
    method: PUT
- name: skill
  endpoint:
    path: /workspaces/{workspace_id}/skills/{skill_id}
    method: GET
- name: delete_api_key
  endpoint:
    path: /api/api_keys/{api_key_id}
    method: DELETE
    data_selector: object
    params:
      api_key_id: uuid
- name: skills
  endpoint:
    path: /workspaces/workspace_id/skills/skill_id
    method: GET
- name: api_key
  endpoint:
    path: /api/api_keys/api_key_id
    method: DELETE
    data_selector: object
    params: {}
- name: skill
  endpoint:
    path: /workspaces/{workspace_id}/skills/{skill_id}
    method: PUT
- name: api_key
  endpoint:
    path: /api_keys/{api_key_id}
    method: GET
- name: api_keys
  endpoint:
    path: /api_keys
    method: GET
    data_selector: data
    params: {}
- name: api_keys
  endpoint:
    path: /api/api_keys
    method: GET
    data_selector: object
    params: {}
- name: api_key
  endpoint:
    path: /api/api_keys
    method: GET
    data_selector: object
    params: {}
- name: api_key
  endpoint:
    path: /api_keys/{api_key_id}
    method: GET
    data_selector: object
    params:
      api_key_id: uuid
- name: api_keys
  endpoint:
    path: /api_keys
    method: GET
    data_selector: data
- name: export_projects
  endpoint:
    path: /workspaces/{workspace_id}/projects/export_to_template
    method: POST
- name: api_keys
  endpoint:
    path: /api_keys
    method: GET
- name: library_entities
  endpoint:
    path: /workspaces/{workspace_id}/library/entities
    method: GET
    data_selector: data
- name: entities
  endpoint:
    path: /workspaces/workspace_id/library/entities
    method: GET
- name: library_entities
  endpoint:
    path: /workspaces/{workspace_id}/library/entities
    method: GET
    data_selector: data
- name: entities
  endpoint:
    path: /workspaces/workspace_id/library/entities
    method: GET
- name: library
  endpoint:
    path: /library
    method: GET
- name: library_entity
  endpoint:
    path: /workspaces/{workspace_id}/library/entities/{entity_id}
    method: PUT
- name: library_project
  endpoint:
    path: /workspaces/{workspace_id}/library
    method: GET
- name: export
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/exports/{export_id}
    method: GET
- name: library
  endpoint:
    path: /workspaces/workspace_id/library
    method: GET
- name: exports
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/exports/export_id
    method: GET
- name: delete_export
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/exports/{export_id}
    method: DELETE
- name: export
  endpoint:
    path: /api/workspaces/workspace_id/projects/project_id/exports/export_id
    method: DELETE
    data_selector: response
    params: {}
- name: exports
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/exports
    method: GET
    data_selector: data
    params: {}
- name: exports
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/exports
    method: GET
    data_selector: object
    params: {}
- name: export
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/exports/{export_id}
    method: GET
- name: exports
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/exports
    method: GET
    data_selector: data
    params: {}
- name: exports
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/exports
    method: GET
- name: imports
  endpoint:
    path: /workspaces/{workspace_id}/imports/{import_id}/start
    method: POST
- name: create_export
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/exports
    method: POST
- name: exports
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/exports
    method: POST
- name: imports
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/imports
    method: GET
    data_selector: data
- name: starts_an_import
  endpoint:
    path: /workspaces/{workspace_id}/imports/{import_id}/start
    method: POST
- name: imports
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/imports
    method: GET
- name: imports
  endpoint:
    path: /workspaces/workspace_id/imports/import_id/start
    method: POST
- name: import
  endpoint:
    path: /workspaces/{workspace_id}/imports/{import_id}
    method: GET
- name: imports
  endpoint:
    path: /workspaces/workspace_id/imports/import_id
    method: GET
- name: imports
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/imports
    method: GET
    data_selector: data
    params: {}
- name: Get upload URL
  endpoint:
    path: /workspaces/{workspace_id}/imports/{import_id}/sign_upload
    method: POST
    data_selector: upload_url
    params: {}
- name: import
  endpoint:
    path: /workspaces/{workspace_id}/imports/{import_id}
    method: GET
- name: imports
  endpoint:
    path: /workspaces/workspace_id/imports/import_id
    method: GET
- name: imports
  endpoint:
    path: /workspaces/{workspace_id}/imports
    method: GET
    data_selector: data
- name: imports
  endpoint:
    path: /workspaces/{workspace_id}/imports
    method: POST
- name: imports
  endpoint:
    path: /workspaces/{workspace_id}/imports
    method: GET
    data_selector: data
    params: {}
- name: integration_connections
  endpoint:
    path: /workspaces/{workspace_id}/integrations/all/connections
    method: GET
    params:
      include_public: 'false'
- name: imports
  endpoint:
    path: /workspaces/{workspace_id}/imports
    method: POST
- name: folder_tree
  endpoint:
    path: /workspaces/{workspace_id}/folders/tree
    method: GET
    params:
      include_membership_info: 'false'
- name: integration_connections
  endpoint:
    path: /workspaces/{workspace_id}/integrations/all/connections
    method: GET
    data_selector: data
    params:
      include_public: 'false'
- name: folders_tree
  endpoint:
    path: /workspaces/workspace_id/folders/tree
    method: GET
- name: folder_tree
  endpoint:
    path: /workspaces/{workspace_id}/folders/tree
    method: GET
    data_selector: Folders.FolderTreeResponse
    params:
      include_membership_info: 'false'
- name: folders_tree
  endpoint:
    path: /workspaces/workspace_id/folders/tree
    method: GET
- name: cases
  endpoint:
    path: /workspaces/{workspace_id}/cases
    method: GET
    data_selector: data
    params:
      agent_ids: null
      name_contains: null
      owner_ids: null
      is_unread: null
      limit: null
      offset: null
      first: null
      last: null
      after: null
      before: null
- name: cases
  endpoint:
    path: /workspaces/{workspace_id}/cases
    method: GET
    data_selector: data
    params: {}
- name: cases
  endpoint:
    path: /cases
    method: GET
- name: cases
  endpoint:
    path: /workspaces/workspace_id/cases
    method: GET
- name: entity_ids
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entity_ids
    method: GET
    data_selector: data
    params: {}
- name: entity_ids
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/entity_ids
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/entity_ids
    method: GET
- name: delete_trigger
  endpoint:
    path: /workspaces/{workspace_id}/triggers/{trigger_id}
    method: DELETE
    data_selector: id
    params: {}
- name: trigger
  endpoint:
    path: /api/workspaces/workspace_id/triggers/trigger_id
    method: DELETE
    data_selector: object
    params: {}
- name: tool_integration
  endpoint:
    path: /workspaces/{workspace_id}/tool_integrations/toggle
    method: POST
- name: tool_integration
  endpoint:
    path: /workspaces/{workspace_id}/tool_integrations/toggle
    method: POST
- name: trigger
  endpoint:
    path: /workspaces/workspace_id/tool_integrations/toggle
    method: POST
    data_selector: enabled
    params: {}
- name: hubs
  endpoint:
    path: /workspaces/{workspace_id}/hubs
    method: GET
- name: hubs
  endpoint:
    path: /workspaces/{workspace_id}/hubs
    method: GET
- name: hubs
  endpoint:
    path: /workspaces/workspace_id/hubs
    method: GET
- name: files
  endpoint:
    path: /hub/files
    method: GET
- name: integration_connections
  endpoint:
    path: /integrationconnections
    method: GET
- name: hubs
  endpoint:
    path: /workspaces/workspace_id/hubs
    method: GET
- name: billing_project_usage
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/billing/usage
    method: GET
    data_selector: limits
    params:
      workspace_id: uuid
      project_id: uuid
- name: billing_usage
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/billing/usage
    method: GET
- name: billing_usage
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/billing/usage
    method: GET
- name: billing_usage
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/billing/usage
    method: GET
- name: properties
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties
    method: GET
- name: properties
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/properties
    method: GET
    data_selector: properties
    params:
      workspace_id: uuid
      project_id: uuid
- name: secrets
  endpoint:
    path: /workspaces/{workspace_id}/secrets
    method: GET
- name: field_errors
  endpoint:
    path: /workspaces/{workspace_id}/field_errors
    method: GET
    data_selector: data
    params: {}
- name: field_errors
  endpoint:
    path: /workspaces/{workspace_id}/field_errors
    method: GET
    params: {}
- name: verify_invitation
  endpoint:
    path: /workspaces/{workspace_id}/invitations/verify
    method: GET
    params:
      invite_token: string
      email: string
- name: workspace_invitations
  endpoint:
    path: /workspaces/workspace_id/invitations/verify
    method: GET
- name: accept_invitation
  endpoint:
    path: /api/workspaces/{workspace_id}/projects/{project_id}/invitations/accept
    method: POST
    data_selector: Invitations.ProjectInvitationResponse
    params:
      invite_token: string
- name: Accept an invitation
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/invitations/accept
    method: POST
    params: {}
- name: create_global_skill
  endpoint:
    path: /skills
    method: POST
- name: create_global_skill
  endpoint:
    path: /skills
    method: POST
- name: skills
  endpoint:
    path: /skills
    method: POST
    data_selector: null
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: POST
    data_selector: null
    params: {}
- name: api_key
  endpoint:
    path: /api/api_keys/api_key_id
    method: DELETE
    data_selector: object
    params: {}
- name: api_key
  endpoint:
    path: /api/api_keys/api_key_id
    method: DELETE
    data_selector: object
    params: {}
- name: projects_import_from_template
  endpoint:
    path: /workspaces/{workspace_id}/projects/import_from_template
    method: POST
- name: create_project
  endpoint:
    path: /workspaces/{workspace_id}/projects/import_from_template
    method: POST
- name: projects_import_from_template
  endpoint:
    path: /workspaces/workspace_id/projects/import_from_template
    method: POST
    data_selector: null
    params: {}
- name: api_keys_list
  endpoint:
    path: /api-keys-list
    method: GET
    data_selector: null
    params: {}
- name: library_entities
  endpoint:
    path: /workspaces/{workspace_id}/library/entities
    method: GET
    data_selector: data
- name: library_entities
  endpoint:
    path: /workspaces/{workspace_id}/library/entities
    method: GET
    data_selector: data
- name: delete_export
  endpoint:
    path: /workspaces/{workspace_id}/projects/{project_id}/exports/{export_id}
    method: DELETE
    data_selector: id
    params: {}
- name: import
  endpoint:
    path: /workspaces/{workspace_id}/imports/{import_id}/start
    method: POST
- name: export
  endpoint:
    path: /workspaces/workspace_id/projects/project_id/exports/export_id
    method: DELETE
- name: imports
  endpoint:
    path: /api/workspaces/workspace_id/imports/import_id/start
    method: POST
    data_selector: null
    params: {}
- name: exports
  endpoint:
    path: /api/workspaces/workspace_id/exports
    method: GET
    data_selector: null
    params: {}
- name: import_start
  endpoint:
    path: /workspaces/{workspace_id}/imports/{import_id}/start
    method: POST
    data_selector: ''
    params:
      workspace_id: uuid
      import_id: uuid
notes:
- Creates a new workspace
- Web Search Tool does not currently output citations or sources, but this is on the
  roadmap.
- Cases allow anyone to tap into the capabilities of existing Agents without technical
  know-how.
- Newly created agents are by default public.
- Use the variable `result =` rather than `print` to output results in **JSON**, **Single
  Select**, **Multiple Select**, and **User** type properties.
- 'The **Python Tool** includes all the standard python libraries, as well as: NumPy,
  pandas, beautifulsoup4'
- When using the **Text** property type, results are output as text rather than integers,
  so when working with numbers it will be necessary to convert them to integers.
- Make sure that you configure a key for Azure OCR, as all files in Go are OCRed on
  upload.
- It is recommended that Content filter is set to NoJailbreakProtenction.
- If you want to use only your own models/API keys, make sure that you configure a
  key for Azure OCR, as all files in Go are OCRed on upload.
- V7 will not use and does not intend to use your data to fine-tune models.
- V7 will collect behavioural analytics data to improve Go's user experience.
- Send or Forward an Email to chat@concierge.v7labs.com
- While the vast majority of projects in Go should run without a hitch, projects and
  workspaces have a handful of limits that, when hit, can cause degraded performance.
- Effectively managing token usage is essential due to its direct impact on both cost
  and performance.
- Token efficiency is crucial because it directly influences the cost and quality
  of your projects in Go.
- Be sure to store your created key in a password manager, as it will only be possible
  to copy the full, unencrypted key once.
- All data is securely stored on V7's S3 bucket which is hosted in AWS eu-west-1 (Ireland)
  and complies with all of AWS's wider security requirements.
- We offer the ability to use Azure OpenAI which would allow you to process your data
  in Europe (This feature is available on our Enterprise plan).
- Most of V7 Go's APIs requires a Workspace ID to operate.
- Best practice to use the slug for easier parsing and debugging.
- project_id is the same as agent_id
- user_id parameter must be a valid user's UUID.
- project_id is the same as agent_id.
- Supports pagination using limit/offset or cursors. Maximum page size is 1000.
- Maximum page size is 1000.
errors:
- '401 Unauthorized: Check your API key'
- '400: Common.APIError'
- '401: Common.APIError'
- '403: Common.APIError'
- '404: Common.APIError'
- '409: Common.APIError'
- '422: Common.APIError'
- 400 Common.APIError
- 401 Common.APIError
- 403 Common.APIError
- 404 Common.APIError
- 409 Common.APIError
- 422 Common.APIError
- '200'
- '400'
- '401'
- '403'
- '404'
- '409'
- '422'
- '500'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '409: Conflict'
- '422: Unprocessable Entity'
- '500: Internal Server Error'
- '200: Success'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 409 Conflict
- 422 Unprocessable Entity
- 500 Internal Server Error
- '400 Common.APIError: Required parameters are missing or invalid.'
- '401 Common.APIError: Unauthorized access.'
- '403 Common.APIError: Forbidden access.'
- '404 Common.APIError: Resource not found.'
- '409 Common.APIError: Conflict error.'
- '422 Common.APIError: Unprocessable entity.'
- '400 Common.APIError: code and message are required'
- '401 Common.APIError: code and message are required'
- '403 Common.APIError: code and message are required'
- '404 Common.APIError: code and message are required'
- '409 Common.APIError: code and message are required'
- '422 Common.APIError: code and message are required'
- '400 Common.APIError: Bad Request'
- '401 Common.APIError: Unauthorized'
- '403 Common.APIError: Forbidden'
- '404 Common.APIError: Not Found'
- '409 Common.APIError: Conflict'
- '422 Common.APIError: Unprocessable Entity'
- '400 Common.APIError: Invalid request'
- '400 Common.APIError: Invalid request parameters'
- '401 Common.APIError: Unauthorized access'
- '403 Common.APIError: Forbidden access'
- '404 Common.APIError: Resource not found'
- '409 Common.APIError: Conflict in request'
- '422 Common.APIError: Unprocessable entity'
- '404 Common.APIError: Not found'
- '400 Common.APIError: Required fields missing'
- '409 Common.APIError: Conflict occurred'
- 500 Common.APIError
- '400 Common.APIError: code, message required'
- '401 Common.APIError: code, message required'
- '403 Common.APIError: code, message required'
- '404 Common.APIError: code, message required'
- '409 Common.APIError: code, message required'
- '422 Common.APIError: code, message required'
- '400 Common.APIError: Required code and message'
- '401 Common.APIError: Required code and message'
- '403 Common.APIError: Required code and message'
- '404 Common.APIError: Required code and message'
- '409 Common.APIError: Required code and message'
- '422 Common.APIError: Required code and message'
- '400 Common.APIError: Required parameters missing'
- '409 Common.APIError: Conflict error'
- '422 Common.APIError: Validation error'
- '401 Common.APIError: Authentication failed'
- '403 Common.APIError: Access denied'
- '409 Common.APIError: Conflict with current state'
- '400 Common.APIError: Bad request'
- '400 Common.APIError: code and message required'
- '401 Common.APIError: code and message required'
- '403 Common.APIError: code and message required'
- '404 Common.APIError: code and message required'
- '409 Common.APIError: code and message required'
- '422 Common.APIError: code and message required'
- '400 Common.APIError: Check request parameters'
- '401 Common.APIError: Check authentication'
- '403 Common.APIError: Check permissions'
- '415: Common.APIError'
- '415'
- 415 Common.APIError
- '400 Common.APIError: Required fields missing or invalid'
- '403 Common.APIError: Forbidden action'
- '400 Common.APIError: Code and message are required.'
- '401 Common.APIError: Code and message are required.'
- '403 Common.APIError: Code and message are required.'
- '404 Common.APIError: Code and message are required.'
- '409 Common.APIError: Code and message are required.'
- '422 Common.APIError: Code and message are required.'
- '403 Common.APIError: Forbidden request'
- '400 Common.APIError: Required fields are missing'
- '401 Common.APIError: Authentication credentials are invalid'
- '403 Common.APIError: Access to the requested resource is forbidden'
- '404 Common.APIError: The requested resource could not be found'
- '409 Common.APIError: Conflict with current state of resource'
- '415 Common.APIError: Unsupported media type'
- '415: Unsupported Media Type'
- '400 Common.APIError: Bad request, check your input data'
- '401 Common.APIError: Unauthorized, recheck authentication'
- '403 Common.APIError: Forbidden, check permissions'
- '404 Common.APIError: Not found, check resource identifiers'
- '409 Common.APIError: Conflict, resource already exists'
- '422 Common.APIError: Unprocessable entity, validation failed'
- '400 Common.APIError: Error processing the request'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Common.APIError: code is required, message is required'
- '401 Common.APIError: code is required, message is required'
- '403 Common.APIError: code is required, message is required'
- '404 Common.APIError: code is required, message is required'
- '409 Common.APIError: code is required, message is required'
- '422 Common.APIError: code is required, message is required'
- '201400401422'
- '400 Common.APIError: required'
- '401 Common.APIError: required'
- '403 Common.APIError: required'
- '404 Common.APIError: required'
- '409 Common.APIError: required'
- '422 Common.APIError: required'
- internal_server_error
- system_limits_exceeded
- billing_limits_exceeded
- bad_request
- invalid_import_file
- '400 Bad Request: Invalid request format'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Resource not found'
- '400 Common.APIError: Check required fields'
- '401 Common.APIError: Recheck authentication'
- '403 Common.APIError: Insufficient permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://go.v7labs.com/api
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
