resources:
- name: images
  endpoint:
    path: /v1_1/{cloud_name}/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/{cloud_name}/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: Product Gallery
  endpoint:
    path: /services/data/vXX.X/sobjects/ProductGallery
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: Product Gallery
  endpoint:
    path: /galleryWidget
    method: GET
    data_selector: mediaAssets
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: assets
- name: AccessibilityProps
  endpoint:
    path: /accessibilityprops
    method: GET
    data_selector: accessibilityProps
- name: Ar3dProps
  endpoint:
    path: /ar3dprops
    method: GET
    data_selector: ar3dProps
- name: BreakpointProps
  endpoint:
    path: /breakpointprops
    method: GET
    data_selector: breakpointProps
- name: Color
  endpoint:
    path: /color
    method: GET
    data_selector: color
- name: DisplayProps
  endpoint:
    path: /displayprops
    method: GET
    data_selector: displayProps
- name: IndicatorProps
  endpoint:
    path: /indicatorprops
    method: GET
    data_selector: indicatorProps
- name: LoaderProps
  endpoint:
    path: /loaderprops
    method: GET
    data_selector: loaderProps
- name: NavigationButtonProps
  endpoint:
    path: /navigationbuttonprops
    method: GET
    data_selector: navigationButtonProps
- name: SortProps
  endpoint:
    path: /sortprops
    method: GET
    data_selector: sortProps
- name: SpinProps
  endpoint:
    path: /spinprops
    method: GET
    data_selector: spinProps
- name: ThemeProps
  endpoint:
    path: /themeprops
    method: GET
    data_selector: themeProps
- name: ThumbnailProps
  endpoint:
    path: /thumbnailprops
    method: GET
    data_selector: thumbnailProps
- name: TipProps
  endpoint:
    path: /tipprops
    method: GET
    data_selector: tipProps
- name: VideoProps
  endpoint:
    path: /videoprops
    method: GET
    data_selector: videoProps
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video_tutorial
  endpoint:
    path: /video/tutorial
    method: GET
    data_selector: video
    params: {}
- name: accessibility_features
  endpoint:
    path: /accessibility/features
    method: GET
    data_selector: features
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params:
      incremental: updated_at
- name: image_transformations
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformation
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: image
- name: raw
  endpoint:
    path: /raw/upload
    method: GET
    data_selector: raw
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: resources
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: resources
    params: {}
- name: image_upload
  endpoint:
    path: /v1_1/{cloud_name}/image/upload
    method: POST
    data_selector: result
    params: {}
- name: video_upload
  endpoint:
    path: /v1_1/{cloud_name}/video/upload
    method: POST
    data_selector: result
    params: {}
- name: video
  endpoint:
    path: /video/upload
    method: GET
    data_selector: video
- name: audio
  endpoint:
    path: /audio/upload
    method: GET
    data_selector: audio
- name: video_transformation
  endpoint:
    path: /video/upload
    method: POST
    data_selector: transformation
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /v1/images
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /resources
    method: GET
    data_selector: resources
- name: image
  endpoint:
    path: /image/upload
    method: POST
    data_selector: resources
    params: {}
- name: image_transformations
  endpoint:
    path: /apply_common_image_transformations
    method: GET
    data_selector: transformations
    params: {}
- name: responsive_image_settings
  endpoint:
    path: /responsive_image_settings
    method: GET
    data_selector: responsive
    params: {}
- name: image_asset
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video_asset
  endpoint:
    path: /v1/assets/videos
    method: GET
    data_selector: resources
    params: {}
- name: image
  endpoint:
    path: /image/upload
    method: POST
- name: video
  endpoint:
    path: /video/upload
    method: POST
- name: images
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
    params: {}
- name: videos
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/video
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: video_transformation
  endpoint:
    path: /video/transformation
    method: GET
    data_selector: transformation_options
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: assets
  endpoint:
    path: /resources/image/upload
    method: GET
    data_selector: resources
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
    params: {}
- name: advanced-image
  endpoint:
    path: /image/upload
    method: GET
    data_selector: transformed assets
- name: assets
  endpoint:
    path: /v1_1/my_account/resources
    method: GET
    data_selector: resources
    params: {}
- name: images
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/image
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources/video
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1_1/YOUR_CLOUD_NAME/resources
    method: GET
    data_selector: resources
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
- name: upload
  endpoint:
    path: /v1_1/{cloudName}/auto/upload
    method: POST
    data_selector: response
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token - requires setup of connected app in Cloudinary
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Uses OAuth2 with refresh token — requires setup of connected app in Cloudinary
- For in-depth information, see the Product Gallery guide.
- Use the Product Gallery Demo to try out some of the widget customization options.
- Uses OAuth2 with refresh token.
- Only include parameters to override default values.
- Requires setup of connected app in Cloudinary
- Uses OAuth2 with refresh token
- Some objects may return nulls in deeply nested fields
- Utilizes keyboard accessibility features extensively.
- Requires setup of a Cloudinary account to obtain credentials.
- Some API responses may be paginated.
- Uses automatic optimizations for images
- Uses Cloudinary's Ruby gem to simplify image management
- Ensure to replace {cloud_name} with your actual Cloudinary cloud name.
- Supports video transformations such as resizing, cropping, and adding overlays.
- The video is cropped to 360X480 using the pad cropping method.
- Generated at 70% quality to control file size.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api.
- Ensure to replace YOUR_CLOUD_NAME with your actual Cloudinary cloud name
- Supports lazy loading and image placeholders.
- The transformation reference shows all transformation options using snake_case,
  but the Angular SDK transformation attributes support kebab-case.
- If you find that any of the Cloudinary transformation attributes conflict with attribute
  directives from another package, you can prefix the transformation attributes with
  cl.
- Some responses may contain null values for optional fields
- Some resources may return nulls in specific fields
- The video transformation reference shows all transformation options using snake_case,
  but the Angular SDK transformation attributes support kebab-case.
- The video is cropped to 360X480 using the pad cropping method, and it is generated
  at 70% quality to control file size.
- Some API responses may vary based on account settings
- Using @cloudinary/url-gen you can also set configuration parameters on a per asset
  instance.
- Requires setup of a Cloudinary account
- Rate limiting is applied to the API calls
- Requires setup of Cloudinary account and connected app.
- Some resources may have size limits.
- Each of the upload options described above can also be performed as a signed upload,
  but in this case, an authentication signature must be generated on your backend
  server.
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '404 Not Found: Check the endpoint path'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'RESOURCE_NOT_FOUND: Verify the requested resource exists.'
- 'VIDEO_NOT_FOUND: Check the publicId provided.'
- 'INVALID_TRANSFORMATION: Ensure transformation parameters are correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'INVALID_CLOUD_NAME: Check the cloud name in your configuration'
- 'AUTHENTICATION_FAILED: Verify API key and secret'
- 'Invalid transformation: Check if the transformation string is formatted correctly.'
- 'IMAGE_NOT_FOUND: Make sure the public ID is correct.'
- 'TRANSFORMATION_NOT_FOUND: Ensure the transformation exists in the Cloudinary account.'
- 'UNAUTHORIZED: Check API keys or permissions'
- '401 Unauthorized: Recheck OAuth token or credentials'
- 'INVALID_API_KEY: Check your API key'
- 'UNAUTHORIZED: Check your OAuth token or credentials'
- 'RESOURCE_NOT_FOUND: Ensure the resource ID is correct'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
client:
  base_url: https://api.cloudinary.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
