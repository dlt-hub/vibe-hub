resources:
- name: property_price
  endpoint:
    path: /add_on/property_price
    method: POST
    data_selector: fields
    params: {}
- name: property_location
  endpoint:
    path: /add_on/property_location
    method: POST
    data_selector: fields
    params: {}
- name: product_export
  endpoint:
    path: /export/google-merchant-center
    method: GET
    data_selector: products
- name: Importing ACF Repeater Data
  endpoint:
    path: /importing-acf-repeater-data
    method: GET
    data_selector: data
    params: {}
- name: Adding ACF Repeater Field
  endpoint:
    path: /adding-acf-repeater-field
    method: GET
    data_selector: data
    params: {}
- name: Required Add-Ons for ACF Import
  endpoint:
    path: /required-addons-acf-import
    method: GET
    data_selector: data
    params: {}
- name: repeater_fields
  endpoint:
    path: /import/repeater-fields
    method: POST
    data_selector: fields
    params: {}
- name: Gravity Forms Entries
  endpoint:
    path: /all-export/new-export
    method: GET
    data_selector: records
    params: {}
- name: trigger_url
  endpoint:
    path: http://YOUR-WEBSITE.com/wp-load.php?import_key=[YOUR_SECRET_KEY]&import_id=[YOUR_IMPORT_ID]&action=trigger
    method: GET
- name: processing_url
  endpoint:
    path: http://YOUR-WEBSITE.com/wp-load.php?import_key=[YOUR_SECRET_KEY]&import_id=[YOUR_IMPORT_ID]&action=processing
    method: GET
- name: cancel_url
  endpoint:
    path: http://YOUR-WEBSITE.com/wp-load.php?import_key=[YOUR_SECRET_KEY]&import_id=[YOUR_IMPORT_ID]&action=cancel
    method: GET
- name: product_export
  endpoint:
    path: /all-export/new-export
    method: GET
    data_selector: products
    params: {}
- name: my_first_add_on
  endpoint:
    path: /wp-content/plugins/my_first_add_on/rapid-addon.php
    method: POST
    data_selector: fields
    params: {}
- name: customer_export
  endpoint:
    path: /woocommerce/customers/export
    method: GET
    data_selector: customers
    params: {}
- name: customer_import
  endpoint:
    path: /woocommerce/customers/import
    method: POST
    data_selector: imported_customers
    params: {}
- name: product_import
  endpoint:
    path: /all-import/new-import
    method: POST
    data_selector: imported_products
    params: {}
- name: import
  endpoint:
    path: /all-import
    method: POST
    data_selector: imports
    params: {}
- name: export
  endpoint:
    path: /wp-json/wp/v2/export
    method: POST
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /wp-json/wp/v2/categories
    method: GET
    data_selector: categories
- name: tags
  endpoint:
    path: /wp-json/wp/v2/tags
    method: GET
    data_selector: tags
- name: jetengine_map_fields
  endpoint:
    path: /jetengine/map-fields
    method: POST
    data_selector: fields
    params: {}
- name: export_order
  endpoint:
    path: /tester.phtml
    method: POST
    data_selector: payload
    params: {}
- name: Download a file
  endpoint:
    path: /download/file
    method: GET
    data_selector: file
    params: {}
- name: Use existing file
  endpoint:
    path: /wp-content/uploads/wpallimport/files/
    method: GET
    data_selector: files
    params: {}
- name: user_import
  endpoint:
    path: /wp-json/wp/v2/users
    method: POST
    data_selector: users
    params: {}
- name: posts
  endpoint:
    path: /wp-json/wp/v2/posts
    method: POST
    data_selector: posts
    params: {}
- name: taxonomies
  endpoint:
    path: /export/taxonomies
    method: GET
    data_selector: taxonomies
    params: {}
- name: posts_with_taxonomies
  endpoint:
    path: /export/posts
    method: GET
    data_selector: posts
    params: {}
- name: WooCommerce Products
  endpoint:
    path: /All Export/New Export
    method: GET
    data_selector: products
    params: {}
- name: order
  endpoint:
    path: /woocommerce/orders
    method: GET
    data_selector: orders
- name: acf_export
  endpoint:
    path: /export/acf
    method: POST
    data_selector: exported_data
- name: customers
  endpoint:
    path: /wp-json/wc/v3/customers
    method: POST
    data_selector: customers
    params: {}
- name: custom_function
  endpoint:
    path: /function-editor
    method: POST
    data_selector: function
    params: {}
- name: customers
  endpoint:
    path: /wp-json/wc/v3/customers
    method: GET
    data_selector: customers
- name: products
  endpoint:
    path: /wp-json/wc/v3/products
    method: GET
    data_selector: products
    params: {}
- name: property_featured_img
  endpoint:
    path: /add_field
    method: POST
    data_selector: attachment_id
    params: {}
- name: property_images
  endpoint:
    path: /import_images
    method: POST
    data_selector: attachment_id
    params: {}
- name: property_attachments
  endpoint:
    path: /import_files
    method: POST
    data_selector: attachment_id
    params: {}
- name: bulk_edit_posts
  endpoint:
    path: /bulk-edit-posts
    method: POST
- name: serialized_fields
  endpoint:
    path: /serialized-fields
    method: POST
    data_selector: fields
    params: {}
- name: export_field
  endpoint:
    path: /export/field
    method: POST
    data_selector: fields
    params: {}
- name: custom_xml_feed
  endpoint:
    path: /export/custom_xml_feed
    method: POST
    data_selector: xmlFeeds
    params: {}
- name: google_merchant_center_export
  endpoint:
    path: /export/google_merchant_center
    method: POST
    data_selector: gmcExports
    params: {}
- name: property_listings
  endpoint:
    path: /wp-json/wp/v2/properties
    method: POST
    data_selector: records
    params:
      matcher: mls_value
- name: soflyy_field
  endpoint:
    path: /wp_all_import_acf_field_class
    method: GET
- name: product_attributes
  endpoint:
    path: /products/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: users
  endpoint:
    path: /wp-json/wp/v2/users
    method: GET
    data_selector: data
    params: {}
- name: geocode
  endpoint:
    path: /geocode/json
    method: GET
    data_selector: results
    params:
      address: 1600 Amphitheatre Parkway, Mountain View, CA
      key: YOUR_API_KEY
- name: import_file
  endpoint:
    path: /wp-content/uploads/files-to-import/
    method: GET
    data_selector: files
    params: {}
- name: export_order
  endpoint:
    path: /tester.phtml
    method: POST
    data_selector: payload
    params: {}
- name: Product Categories
  endpoint:
    path: /wp-json/wp/v2/product_categories
    method: POST
    data_selector: categories
    params: {}
- name: Products
  endpoint:
    path: /wp-json/wp/v2/products
    method: POST
    data_selector: products
    params: {}
- name: import_posts
  endpoint:
    path: /all-import/new-import
    method: POST
    data_selector: imported_posts
    params: {}
- name: real_time_export
  endpoint:
    path: /wp-json/wp-all-export/v1/export
    method: POST
    data_selector: exported_data
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: image
    params: {}
- name: WooCommerce Orders
  endpoint:
    path: /all-export/new-export
    method: GET
- name: WooCommerce Products
  endpoint:
    path: /all-export/new-export
    method: GET
- name: WooCommerce Customers
  endpoint:
    path: /all-export/new-export
    method: GET
- name: WooCommerce Coupons
  endpoint:
    path: /all-export/new-export
    method: GET
- name: WooCommerce Reviews
  endpoint:
    path: /all-export/new-export
    method: GET
- name: posts
  endpoint:
    path: /export/posts
    method: GET
    data_selector: exported_posts
    params: {}
- name: wordpress_pages
  endpoint:
    path: /wp-json/wp/v2/pages
    method: GET
    data_selector: data
    params: {}
- name: reviews
  endpoint:
    path: /AllImport/NewImport
    method: POST
    data_selector: reviews
    params: {}
- name: meta_box_fields
  endpoint:
    path: /export/meta-box-fields
    method: GET
    data_selector: fields
    params: {}
- name: orders
  endpoint:
    path: /wp-json/wc/v3/orders
    method: GET
    data_selector: orders
- name: listings
  endpoint:
    path: /wp-json/wp/v2/listings
    method: POST
    data_selector: data
    params: {}
- name: owners
  endpoint:
    path: /wp-json/wp/v2/owners
    method: POST
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /wp-json/wc/v3/customers
    method: GET
    data_selector: customers
    params: {}
- name: products
  endpoint:
    path: /wp-json/wc/v3/products
    method: GET
    data_selector: products
    params: {}
- name: orders
  endpoint:
    path: /wp-json/wc/v3/orders
    method: GET
    data_selector: orders
    params: {}
- name: coupons
  endpoint:
    path: /wp-json/wc/v3/coupons
    method: GET
    data_selector: coupons
    params: {}
- name: reviews
  endpoint:
    path: /wp-json/wc/v3/products/reviews
    method: GET
    data_selector: reviews
    params: {}
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: products
    params: {}
- name: export_data
  endpoint:
    path: /export
    method: POST
    data_selector: export_details
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: saved_post
  endpoint:
    path: /pmxi_saved_post
    method: POST
    data_selector: records
- name: before_xml_import
  endpoint:
    path: /pmxi_before_xml_import
    method: POST
    data_selector: records
- name: after_xml_import
  endpoint:
    path: /pmxi_after_xml_import
    method: POST
    data_selector: records
- name: update_post_meta
  endpoint:
    path: /pmxi_update_post_meta
    method: POST
    data_selector: records
- name: gallery_image
  endpoint:
    path: /pmxi_gallery_image
    method: POST
    data_selector: records
- name: export_settings
  endpoint:
    path: /manage_exports/settings
    method: GET
    data_selector: settings
    params: {}
- name: posts
  endpoint:
    path: /wp-json/wp/v2/posts
    method: GET
    data_selector: posts
- name: custom_xml_feed
  endpoint:
    path: /wp-json/wp/v2/custom_xml_feed
    method: POST
    data_selector: feed_data
- name: import_xml
  endpoint:
    path: /wp-json/wp/v2/import_xml
    method: POST
    data_selector: import_data
- name: posts
  endpoint:
    path: /wp-json/wp/v2/posts
    method: GET
    data_selector: posts
- name: pages
  endpoint:
    path: /wp-json/wp/v2/pages
    method: GET
    data_selector: pages
- name: users
  endpoint:
    path: /wp-json/wp/v2/users
    method: GET
    data_selector: users
- name: products
  endpoint:
    path: /products
    method: GET
- name: import_order
  endpoint:
    path: /wp_all_import/order
    method: POST
    data_selector: order_data
    params: {}
- name: export_jet_engine_relations
  endpoint:
    path: /wp_all_export/jet_engine_relations
    method: GET
    data_selector: relations_data
    params: {}
- name: post_type_query
  endpoint:
    path: /wp/v2/posts
    method: GET
    data_selector: posts
    params:
      post_type: post
      post_status: publish
- name: user_query
  endpoint:
    path: /wp/v2/users
    method: GET
    data_selector: users
    params: {}
- name: comment_query
  endpoint:
    path: /wp/v2/comments
    method: GET
    data_selector: comments
    params: {}
- name: post_seo_settings
  endpoint:
    path: /yoast/wpseo_post_settings
    method: POST
    data_selector: settings
    params: {}
- name: taxonomy_seo_settings
  endpoint:
    path: /yoast/wpseo_taxonomy_settings
    method: POST
    data_selector: settings
    params: {}
- name: password_protected_file
  endpoint:
    path: /soflyy/feed.xml
    method: GET
- name: users_import
  endpoint:
    path: /wp-json/wp/v2/users
    method: POST
    data_selector: users
    params: {}
- name: trigger
  endpoint:
    path: /wp-load.php
    method: GET
    params:
      export_key: '[YOUR_SECRET_KEY]'
      export_id: '[YOUR_EXPORT_ID]'
      action: trigger
- name: processing
  endpoint:
    path: /wp-load.php
    method: GET
    params:
      export_key: '[YOUR_SECRET_KEY]'
      export_id: '[YOUR_EXPORT_ID]'
      action: processing
- name: cancel
  endpoint:
    path: /wp-load.php
    method: GET
    params:
      export_key: '[YOUR_SECRET_KEY]'
      export_id: '[YOUR_EXPORT_ID]'
      action: cancel
- name: property_location
  endpoint:
    path: /services/data/vXX.X/sobjects/PropertyLocation
    method: GET
    data_selector: records
- name: property_address
  endpoint:
    path: /services/data/vXX.X/sobjects/PropertyAddress
    method: GET
    data_selector: records
- name: Users Export
  endpoint:
    path: /AllExport/NewExport
    method: GET
    data_selector: users
    params: {}
- name: Users Import
  endpoint:
    path: /AllImport/NewImport
    method: GET
    data_selector: users
    params: {}
- name: exports
  endpoint:
    path: /manage_exports
    method: GET
- name: settings
  endpoint:
    path: /settings
    method: GET
- name: variable_product_import
  endpoint:
    path: /wp-json/wc/v3/products
    method: POST
    data_selector: products
    params: {}
- name: gutenberg_blocks
  endpoint:
    path: /import/gutenberg_blocks
    method: POST
    data_selector: blocks
    params: {}
- name: text_input_field
  endpoint:
    path: /add_field
    method: POST
    data_selector: null
    params: {}
- name: textarea_field
  endpoint:
    path: /add_textarea_field
    method: POST
    data_selector: null
    params: {}
- name: add_title
  endpoint:
    path: /add_title
    method: POST
    data_selector: null
    params: {}
- name: add_text
  endpoint:
    path: /add_text
    method: POST
    data_selector: null
    params: {}
- name: import_meta_box
  endpoint:
    path: /import/meta-box
    method: POST
    data_selector: data
- name: export_file
  endpoint:
    path: /export
    method: POST
    data_selector: export_data
    params: {}
- name: variable_products
  endpoint:
    path: /wp-json/wc/v3/products
    method: GET
    data_selector: products
    params:
      type: variable
- name: meta_box_fields
  endpoint:
    path: /import/meta_box_fields
    method: POST
    data_selector: fields
    params: {}
notes:
- Most import files should work with WP All Import.
- You can test your own import files at http://www.wpallimport.com/try/.
- Export to Google Merchant Center requires setup of WooCommerce and WP All Export.
- All of the data for a repeater field must be present in the same record.
- Dragging & dropping won’t generate the correct XPath expressions when using Variable
  Repeater Mode (XML).
- Supports importing JetEngine fields from CSV, Excel, and XML.
- Requires WP All Import Pro and JetEngine Import Add-On.
- currently, we do not support appending repeater data from multiple import records
  into a single post. All of the repeating data for a single post needs to be in the
  same post record.
- Default export file type is CSV.
- To export to Excel, select either Excel File XLS or Excel File XLSX.
- Each import has two cron URLs – a trigger URL and a processing URL.
- The processing URL should be run every two minutes because it may not finish your
  import in one run.
- To export WooCommerce products with images, include fields from Media › Images in
  your export.
- Requires WP All Import (Free) v3.7.5 or lower, or WP All Import Pro v4.8.7 or lower.
- For a customer to appear in WooCommerce Customers, they must have placed an order.
- Migrated customers appear under the WordPress user list.
- WP All Import will automatically configure itself based on the bundle file.
- Imports run with WP-CLI tend to process about 50% faster than those run through
  the WordPress admin panel.
- You still need to create and edit imports in the WordPress admin panel.
- If you're using WP Engine, they do not allow PHP code to be executed from the /wp-content/uploads/
  folder, meaning that your Function Editor will be blanked out after a while. You
  can solve this by saving code in your theme's child functions.php file.
- If your imports complete successfully, your server is properly configured. If you’re
  not able to successfully complete an import, it may be that your server is missing
  the necessary components.
- The File Was Deleted From the Server.
- The Encoding Has Been Changed in the File.
- The Permissions for the Uploads Folder or the File Has Changed
- The Local Cache File Has Been Corrupted or Has Had its Permissions Changed
- The XPath Has Been Changed
- Memory / Disk Space / Server Errors
- Sessions / Database Schema
- You can enable the checkbox Use Custom Google Maps API Key to use Google Geocoding
  services when available.
- This specific example works strictly for CSV exports.
- When using Upload a file, you won't be able to set up any schedules for that import.
- Custom PHP code is required to retain old user IDs during imports.
- If old user ID is in use, a new ID will be assigned.
- Can import posts from various file types including XML, CSV, and JSON
- Allows scheduling of imports using manual cron jobs or an automatic scheduling service
- WP All Export automatically detects the ACF fields in the posts you've chosen to
  export.
- The bulk edit process requires certain columns to be present in your exported file.
- Make sure to keep the exact same file structure and format to ensure that the import
  program can correctly parse the data.
- Uses Drag & Drop interface for column selection
- Export types include CSV, Excel, XML, and Google Sheets
- Use images currently uploaded in wp-content/uploads/wpallimport/files/
- Data is stored in plain text for CSV exports.
- Each record will be stored as a row and each export element will be a column in
  your file.
- Zapier integration can only process the export file, not the data inside.
- You need WP All Export Pro to access the Zapier integration.
- ACF stores data in post_meta table.
- Use ACF functions like get_field() for better data formatting.
- All WooCommerce customers are also WordPress users.
- Imported customers will have new IDs unless custom code is used.
- You may request a refund within 90 days of purchase for any reason.
- Access to support is limited to a single person or organization.
- Your purchase entitles you to 'lifetime' updates for any websites owned or operated
  by you or your current clients.
- You must use double quotes when executing PHP functions from within WP All Import.
- Exporting passwords yields a hash code, not the actual password.
- 'Default Export File Format: CSV'
- Handles image fields for importing single or multiple images.
- Supports any file type for import and attachment.
- Ensure all column names and file structure remain unchanged from the original export
  to avoid import errors.
- You can add as many filter rules as required. Use the AND or OR operators to specify
  how rules should interact with each other.
- When exporting data that contains dates, you can use relative dates.
- When the element selected to filter is a taxonomy or an attribute, the only two
  rules available are In and Not In.
- You can use PHP functions to process WordPress exports in WP All Export
- You must disable CDATA tags when outputting your own XML via PHP
- Only the fields that are mapped in the import template will be updated.
- Uses custom class FieldSoflyyField to handle the 'soflyy_field' type.
- Exporting user data may include custom fields added by plugins.
- Exported user passwords are hashes, not plaintext.
- Google disabled keyless access, so key is required.
- Only trusted users should have access to WP All Import.
- Changing permissions to give other user roles access is a custom workaround and
  not officially supported.
- If typing text into the import configuration with literal curly braces, the opening
  curly brace must be escaped with a backslash – \{something
- Ensure to install and activate WPML core plugin, WPML String Translation, WooCommerce
  Multilingual & Multicurrency, WPML Export and Import, and WooCommerce.
- Make sure to save imported products as drafts to avoid mixing languages on the front-end.
- Uses direct URLs to download images.
- CSV is the default export format.
- To filter data, use the Add Filtering Options section.
- You can include images with your post export or any other post type that has images
  or attachments.
- You cannot export the entire Media Library out of the box; you have to export the
  post type or custom post type and then include its associated images.
- Mapping is used when the value you need to import to your site differs from the
  value in your file.
- A visual interface is available for mapping Custom Fields and custom taxonomies.
- Default file format for exports is CSV.
- Reviews are stored in the wp_comments table along with other comments.
- Support for WooCommerce reviews is enabled via the WooCommerce Import Add-On.
- Supports everything in WooCommerce
- Order status, Billing & shipping, Taxes, Easy order matching
- XPath syntax can be quite complex.
- Some servers may experience issues with not(text()) to check for empty fields.
- You can import a single product with a single image, or you can import multiple
  products, each with multiple images.
- You can include any type of static text or data required in your export.
- Please note that you need to use double quotes when passing static data to any PHP
  function.
- Only details from the export can be added to the spreadsheet.
- Filling the Google Sheet rows with the data from the exported file is not possible
  with this integration.
- To migrate orders, you must at least select the columns needed to support a successful
  import on the destination site.
- If no match found, import as guest customer option must be enabled and all fields
  are filled in.
- Exports can be run automatically on a schedule in a few different ways.
- Exports are processed in batches. Each batch, or iteration, processes a certain
  number of records.
- CSV is the default file format for all exports using WP All Export.
- You can use custom or native PHP functions on export elements in a Custom XML Feed.
- CSV is the default file format.
- You cannot export the media library out of the box.
- This will work with your import using the current tax rates, it won't work for any
  past rates.
- Ensure the featured image is not considered for deletion.
- WP_Query allows complex queries for posts, users, and comments.
- All Meta Box fields are supported.
- To import your fields, install both WP All Import Pro and the Meta Box Import Add-On.
- Keep the Block email notifications during import option enabled to avoid sending
  WordPress email notifications to the imported users.
- User passwords remain the same during migration using hashed versions.
- Custom user meta is supported during the migration.
- Client Mode allows users to run exports and download export files for the exports
  made available to them.
- Users cannot edit any settings related to exports.
- Use a New Items import type to add/remove variations for variable products.
- 'Braces or opening brackets that are unrelated to the XPath for the WP All Import
  template will need to be escaped: ''\{'', ''\}'' and ''\[''.'
- The Yoast SEO Add-On requires WP All Import Pro to be installed and active.
- The Yoast SEO Add-On requires the Yoast WordPress SEO plugin to be installed and
  active.
- This setting is enabled by default in new imports created with WP All Import v4.6.2
  (released in July 2020) and above.
- Downloading external images is one of the most common reasons for slow imports.
- If you're using a plugin like EWWW Image Optimizer or Smush Pro, you should disable
  them before starting your import.
- If your database tables are using MyISAM, you should switch to InnoDB.
- Zapier integration can only process your export file, not the data contained inside
  the file.
- 'Export variable products using the option to filter by Product Type: variable.'
- Scheduled exports can be set up using manual or automatic scheduling options.
- XML files can be saved with any character encoding.
- CSV files must be UTF-8 or UTF-8 compatible.
- You can use either search by address, search by coordinates, or manual input for
  geocoding.
errors:
- Running into a Security Check error? Clear your browser cache or try using a different
  browser.
- File uploads acting weird? Strange caching issues?
- 'SKIPPED: Search customer by email. Existing customer not found for Order.'
- Migrated Order Skipped Due to Product Match Not Found.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects: []
client:
  base_url: https://your-instance.api-name.com
  headers:
    Content-Type: application/json
    Accept: application/json
  auth:
    type: http
    location: url
    header_name: Authorization
  paginator: {}
source_metadata: null
