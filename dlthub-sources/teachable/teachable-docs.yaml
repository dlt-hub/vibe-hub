resources:
- name: course_progress
  endpoint:
    path: /v1/courses/{course_id}/progress
    method: GET
- name: webhook_events
  endpoint:
    path: /v1/webhooks/{webhook_id}/events
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: post
- name: current_user
  endpoint:
    path: /v1/current_user/me
    method: get
- name: enroll
  endpoint:
    path: /v1/enroll
    method: post
- name: courses
  endpoint:
    path: /v1/courses
    method: get
- name: users
  endpoint:
    path: /v1/users
    method: post
- name: current_user
  endpoint:
    path: /v1/current_user/me
    method: get
- name: transactions
  endpoint:
    path: transactions
    method: GET
    data_selector: transactions
    params: {}
- name: enrollments
  endpoint:
    path: /courses//enrollments
    method: GET
- name: courses
  endpoint:
    path: /v1/courses
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: POST
- name: current_user_courses
  endpoint:
    path: /v1/current_user/courses
    method: GET
- name: current_user
  endpoint:
    path: /v1/current_user/me
    method: GET
- name: current_user_courses_lectures_videos
  endpoint:
    path: /current_user/courses//lectures//videos/
    method: GET
- name: courses
  endpoint:
    path: /v1/courses
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: course_progress
  endpoint:
    path: /courses/{course_id}/progress
    method: GET
- name: mark_lecture_complete
  endpoint:
    path: /courses/{course_id}/lectures/{lecture_id}/mark_complete
    method: POST
- name: quizzes
  endpoint:
    path: /v1/courses/{course_id}/lectures/{lecture_id}/quizzes
    method: GET
- name: current_user_course_progress
  endpoint:
    path: /v1/current_user/courses/{course_id}/progress
    method: GET
- name: webhook
  endpoint:
    path: /settings/webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: enroll_in_course
  endpoint:
    path: /v1/enroll
    method: POST
    data_selector: ''
    params: {}
- name: lecture
  endpoint:
    path: /v1/current_user/courses/{course_id}/lectures/{lecture_id}
    method: GET
- name: current_user_courses
  endpoint:
    path: /v1/current_user/courses/{course_id}
    method: GET
- name: courses
  endpoint:
    path: /v1/courses
    method: GET
- name: course_details
  endpoint:
    path: /v1/courses/{course_id}
    method: GET
- name: lecture
  endpoint:
    path: /v1/courses/{course_id}/lectures/{lecture_id}
    method: GET
    data_selector: content
    params: {}
- name: course_progress
  endpoint:
    path: /current_user/courses//progress
    method: GET
- name: quizzes
  endpoint:
    path: /v1/courses/{course_id}/lectures/{lecture_id}/quizzes
    method: GET
- name: pricing_plans
  endpoint:
    path: /pricing_plans
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: response.body
- name: pricing_plan
  endpoint:
    path: /v1/pricing_plans/
    method: GET
- name: transactions
  endpoint:
    path: transactions
    method: GET
    params: {}
- name: courses
  endpoint:
    path: /v1/courses
    method: get
- name: users
  endpoint:
    path: /v1/users
    method: post
- name: unenroll
  endpoint:
    path: /v1/unenroll
    method: post
- name: users
  endpoint:
    path: /users
    method: POST
- name: current_user
  endpoint:
    path: /v1/current_user/me
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: quizzes
  endpoint:
    path: /v1/courses/{course_id}/lectures/{lecture_id}/quizzes/{quiz_id}
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
    params:
      per: number of results per page
      page: page number to return
- name: users
  endpoint:
    path: /users
    method: GET
    params:
      search_after: ID of the last user on the first request
- name: users
  endpoint:
    path: /v1/users
    method: get
- name: courses
  endpoint:
    path: /v1/courses
    method: get
- name: current_user_courses
  endpoint:
    path: /v1/current_user/courses
    method: get
- name: current_user
  endpoint:
    path: /v1/current_user/me
    method: get
- name: course
  endpoint:
    path: /v1/courses/{course_id}
    method: GET
    data_selector: records
    params: {}
- name: current_user_courses
  endpoint:
    path: /v1/current_user/courses
    method: GET
- name: webhook_events
  endpoint:
    path: /webhooks
    method: GET
    data_selector: events
    params: {}
- name: video
  endpoint:
    path: /courses//lectures//videos/
    method: GET
- name: current_user
  endpoint:
    path: /v1/current_user/me
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: post
- name: courses
  endpoint:
    path: /v1/courses
    method: get
- name: current_user_courses
  endpoint:
    path: /v1/current_user/courses
    method: get
- name: current_user_me
  endpoint:
    path: /v1/current_user/me
    method: get
- name: quiz_responses
  endpoint:
    path: /v1/courses/{course_id}/lectures/{lecture_id}/quizzes/{quiz_id}/responses
    method: GET
- name: courses
  endpoint:
    path: /v1/courses
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: GET
- name: admission_created
  endpoint:
    path: /webhooks/admission.created
    method: POST
    data_selector: object
- name: admission_disabled
  endpoint:
    path: /webhooks/admission.disabled
    method: POST
    data_selector: object
- name: comment_created
  endpoint:
    path: /webhooks/comment.created
    method: POST
    data_selector: object
- name: email_lead_created
  endpoint:
    path: /webhooks/emailLead.created
    method: POST
    data_selector: object
- name: enrollment_completed
  endpoint:
    path: /webhooks/enrollment.completed
    method: POST
    data_selector: object
- name: enrollment_created
  endpoint:
    path: /webhooks/enrollment.created
    method: POST
    data_selector: object
- name: enrollment_disabled
  endpoint:
    path: /webhooks/enrollment.disabled
    method: POST
    data_selector: object
- name: lecture_progress_created
  endpoint:
    path: /webhooks/lectureProgress.created
    method: POST
    data_selector: object
- name: response_created
  endpoint:
    path: /webhooks/response.created
    method: POST
    data_selector: object
- name: sale_created
  endpoint:
    path: /webhooks/sale.created
    method: POST
    data_selector: object
- name: sale_subscription_canceled
  endpoint:
    path: /webhooks/sale.subscription_canceled
    method: POST
    data_selector: object
- name: transaction_created
  endpoint:
    path: /webhooks/transaction.created
    method: POST
    data_selector: object
- name: transaction_refunded
  endpoint:
    path: /webhooks/transaction.refunded
    method: POST
    data_selector: object
- name: user_created
  endpoint:
    path: /webhooks/user.created
    method: POST
    data_selector: object
- name: user_subscribe_to_marketing_emails
  endpoint:
    path: /webhooks/user.subscribe_to_marketing_emails
    method: POST
    data_selector: object
- name: user_unsubscribe_from_marketing_emails
  endpoint:
    path: /webhooks/user.unsubscribe_from_marketing_emails
    method: POST
    data_selector: object
- name: user_updated
  endpoint:
    path: /webhooks/user.updated
    method: POST
    data_selector: object
- name: user_tag_created
  endpoint:
    path: /webhooks/userTag.created
    method: POST
    data_selector: object
- name: user_tag_removed
  endpoint:
    path: /webhooks/userTag.removed
    method: POST
    data_selector: object
- name: abandoned_order_created
  endpoint:
    path: /webhooks/abandonedOrder.created
    method: POST
    data_selector: object
- name: webhook_events
  endpoint:
    path: /webhooks
    method: GET
    data_selector: events
notes:
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- API key is required for authentication.
- You can revoke OAuth access for an app at any time.
- When you revoke OAuth access, it means that the application can no longer retrieve
  data.
- The Teachable OAuth API has a rate limit of 360 requests per minute for every school.
- You will receive a 429 HTTP response if you reached the limit.
- Duplicate webhooks cannot be created.
- Webhooks with the same url can be created, however, they cannot subscribe to the
  same webhook events.
- Add your ngrok hostname to the development.rb file to avoid any 403 forbidden errors.
- End date is defaulted to today’s date.
- If there is no data that fits your filter search, you will receive an alert and
  the script will end.
- The Teachable Admin API has a rate limit of 100 requests per minute for every school.
- You will receive a `429` HTTP response if you reached the limit.
- In the headers of the 429 HTTP response, you can find the RateLimit-Limit, RateLimit-Remaining,
  and RateLimit-Reset.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Access tokens expire after 7200 seconds (i.e., 2 hours).
- New transactions can take up to two minutes to be returned via API call from the
  time of sale.
- By default, an endpoint returns 25 items per page.
- If there are more than 10,000 users, switch to using search_after to retrieve any
  results past 10,000.
- The content-type of request body could be either JSON or form-data.
- Uses OAuth2 with refresh token - requires setup of connected app in Teachable.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400: Bad request: The request has an error.'
- '401: Unauthorized: The request did not have proper authentication.'
- '404: Not found: The URL you are making a request to does not exist.'
- '429: Too many requests: You have exceeded the rate limit.'
- '500: Internal server error: The server encountered an unexpected condition that
  prevented it from fulfilling the request.'
- '429: API rate limit exceeded'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: Verify endpoint URL'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://developers.teachable.com/v1
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.teachable.com/oauth/token
    client_id: '{{ dlt.secrets[''teachable_client_id''] }}'
    client_secret: '{{ dlt.secrets[''teachable_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''teachable_refresh_token''] }}'
    redirect_uri: '{{ dlt.secrets[''redirect_uri''] }}'
  headers:
    Accept: application/json
    Referer: ''
    Content-Type: application/json
  paginator:
    type: page
    page_size_param: page
    default_page_size: 100
source_metadata: null
