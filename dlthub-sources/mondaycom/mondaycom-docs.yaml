resources:
- name: items_page
  endpoint:
    path: /boards
    method: POST
    data_selector: items
    params: {}
- name: change_simple_column_value
  endpoint:
    path: /change_simple_column_value
    method: POST
    data_selector: id
    params: {}
- name: change_multiple_column_values
  endpoint:
    path: /change_multiple_column_values
    method: POST
    data_selector: id
    params: {}
- name: email_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: files_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: items_page
  endpoint:
    path: /items_page
    method: POST
    data_selector: items
    params: {}
- name: column_values
  endpoint:
    path: /column_values
    method: POST
    data_selector: column_values
    params: {}
- name: change_simple_column_value
  endpoint:
    path: /change_simple_column_value
    method: POST
    data_selector: id
    params: {}
- name: change_multiple_column_values
  endpoint:
    path: /change_multiple_column_values
    method: POST
    data_selector: id
    params: {}
- name: managed_column
  endpoint:
    path: /
    method: POST
    data_selector: managed_column
    params:
      state: active
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: data.users
    params:
      scope: users:read
- name: audit_event_catalogue
  endpoint:
    path: /audit_event_catalogue
    method: GET
    data_selector: audit_event_catalogue
    params: {}
- name: app_installs
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      account_id: ID
      app_id: ID!
      limit: Int
      page: Int
- name: app_subscription
  endpoint:
    path: /v2
    method: POST
    data_selector: data.app_subscription
    params: {}
- name: set_mock_app_subscription
  endpoint:
    path: /v2
    method: POST
    data_selector: data.set_mock_app_subscription
    params: {}
- name: remove_mock_app_subscription
  endpoint:
    path: /v2
    method: POST
    data_selector: data.remove_mock_app_subscription
    params: {}
- name: app_subscriptions
  endpoint:
    path: /v2
    method: POST
    data_selector: data.app_subscriptions
    params:
      limit: 100
- name: app_subscription_operations
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: increase_app_subscription_operations
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: apps_monetization_info
  endpoint:
    path: ''
    method: POST
    data_selector: data.apps_monetization_info
    params: {}
- name: apps_monetization_status
  endpoint:
    path: ''
    method: POST
    data_selector: data.apps_monetization_status
    params: {}
- name: activity_logs
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      limit: 25
- name: marketplace_app_discounts
  endpoint:
    path: /marketplace_app_discounts
    method: POST
    data_selector: data
    params:
      app_id: '123456'
- name: grant_marketplace_app_discount
  endpoint:
    path: /grant_marketplace_app_discount
    method: POST
    data_selector: granted_discount
    params:
      account_slug: Test
      app_id: '123456'
- name: delete_marketplace_app_discount
  endpoint:
    path: /delete_marketplace_app_discount
    method: POST
    data_selector: deleted_discount
    params:
      account_slug: Test
      app_id: '123456'
- name: batch_extend_trial_period
  endpoint:
    path: /batch_extend_trial_period
    method: POST
- name: app_discount
  endpoint:
    path: /discounts
    method: POST
    data_selector: discounts
    params: {}
- name: custom_activity
  endpoint:
    path: /v2
    method: POST
    data_selector: data.custom_activity
    params: {}
- name: create_custom_activity
  endpoint:
    path: /v2
    method: POST
    data_selector: data.create_custom_activity
    params: {}
- name: delete_custom_activity
  endpoint:
    path: /v2
    method: POST
    data_selector: data.delete_custom_activity
    params: {}
- name: TimelineItemsPage
  endpoint:
    params:
      limit: 25
- name: timeline
  endpoint:
    path: /timeline
    method: POST
    data_selector: timeline_items_page
    params: {}
- name: timeline_item
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: account:read
- name: account_roles
  endpoint:
    path: /
    method: POST
    data_selector: data.account_roles
    params:
      scope: account:read
- name: app
  endpoint:
    path: /
    method: POST
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      query: 'query { boards (ids: 1234567890) { items_page (limit: 100) { items {
        assets { id url name } } } } }'
- name: add_file_to_column
  endpoint:
    path: /v2/file
    method: POST
    data_selector: data
    params:
      item_id: ID!
      column_id: String!
      file: File!
- name: add_file_to_update
  endpoint:
    path: /v2/file
    method: POST
    data_selector: data
    params:
      update_id: ID!
      file: File!
- name: audit_logs
  endpoint:
    path: /audit_logs
    method: POST
    data_selector: logs
    params:
      limit: 100
- name: audit_event_catalogue
  endpoint:
    path: /
    method: POST
    data_selector: audit_event_catalogue
    params: {}
- name: boards
  endpoint:
    path: /v2
    method: POST
    data_selector: data
- name: board_views
  endpoint:
    path: /v2
    method: POST
    data_selector: data.boards.views
    params: {}
- name: boards
  endpoint:
    path: /v2
    method: POST
    data_selector: boards
    params: {}
- name: creation_log
  endpoint:
    path: /items_page
    method: POST
    data_selector: items
    params: {}
- name: column_values
  endpoint:
    path: /items
    method: POST
    data_selector: column_values
    params: {}
- name: supported_columns
  endpoint:
    path: /api/supported_columns
    method: GET
    data_selector: columns
- name: unsupported_columns
  endpoint:
    path: /api/unsupported_columns
    method: GET
    data_selector: columns
- name: button_column
  endpoint:
    path: /items
    method: POST
    data_selector: items
    params: {}
- name: checkbox_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: color_picker_column
  endpoint:
    path: /query
    method: POST
    data_selector: data.items.column_values
    params: {}
- name: connect_boards_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: country_column
  endpoint:
    path: /v2
    method: POST
    data_selector: items
    params: {}
- name: dependency_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: formula_column
  endpoint:
    path: /
    method: POST
    data_selector: data.boards
    params: {}
- name: hour_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: item_id_column
  endpoint:
    path: /items
    method: POST
    data_selector: column_values
- name: items_page
  endpoint:
    path: /items_page
    method: GET
    data_selector: items
    params: {}
- name: link_column
  endpoint:
    path: /v2
    method: POST
    data_selector: items
    params: {}
- name: location_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: change_simple_column_value
  endpoint:
    path: /v2
    method: POST
    data_selector: id
- name: change_multiple_column_values
  endpoint:
    path: /v2
    method: POST
    data_selector: id
- name: mirror_column
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.items.column_values
    params: {}
- name: doc_column
  endpoint:
    path: /v2
    method: POST
    data_selector: id
    params: {}
- name: items_page
  endpoint:
    path: /items_page
    method: POST
    data_selector: items
    params: {}
- name: items_page_by_column_values
  endpoint:
    path: /items_page_by_column_values
    method: POST
    data_selector: items
    params: {}
- name: change_multiple_column_values
  endpoint:
    path: /change_multiple_column_values
    method: POST
    data_selector: id
    params: {}
- name: numbers_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: items_page
  endpoint:
    path: /boards
    method: POST
    data_selector: items
    params: {}
- name: change_simple_column_value
  endpoint:
    path: /change_simple_column_value
    method: POST
    data_selector: id
    params: {}
- name: change_multiple_column_values
  endpoint:
    path: /change_multiple_column_values
    method: POST
    data_selector: id
    params: {}
- name: items_page
  endpoint:
    path: /items
    method: POST
    data_selector: items
    params: {}
- name: change_simple_column_value
  endpoint:
    path: /change_simple_column_value
    method: POST
    data_selector: id
    params: {}
- name: change_multiple_column_values
  endpoint:
    path: /change_multiple_column_values
    method: POST
    data_selector: id
    params: {}
- name: items_page
  endpoint:
    path: /boards
    method: GET
    data_selector: items_page
    params:
      rules:
      - column_id: progress
        compare_value:
        - '80'
        operator: any_of
- name: change_multiple_column_values
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: items_page
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: items_page
  endpoint:
    path: items_page
    method: POST
    data_selector: items
    params: {}
- name: change_multiple_column_values
  endpoint:
    path: change_multiple_column_values
    method: POST
    data_selector: id
    params: {}
- name: items_page
  endpoint:
    path: /items_page
    method: POST
    data_selector: items
    params: {}
- name: timeline_column
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: items_page
  endpoint:
    path: /boards
    method: POST
    data_selector: items
    params:
      query_params:
        rules:
        - column_id: time_tracking
          compare_value:
          - 2
          operator: any_of
- name: column_values
  endpoint:
    path: /items
    method: POST
    data_selector: column_values
    params: {}
- name: items_page
  endpoint:
    path: /items_page
    method: POST
    data_selector: items
    params: {}
- name: column_values
  endpoint:
    path: /column_values
    method: POST
    data_selector: column_values
    params: {}
- name: items_page
  endpoint:
    path: /items_page
    method: POST
    data_selector: items
    params: {}
- name: change_multiple_column_values
  endpoint:
    path: /change_multiple_column_values
    method: POST
    data_selector: id
    params: {}
- name: world_clock
  endpoint:
    path: /v2
    method: POST
    data_selector: items
    params: {}
- name: column_values
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: complexity
  endpoint:
    path: ''
    method: POST
    data_selector: complexity
    params: {}
- name: docs
  endpoint:
    path: /v2
    method: POST
    data_selector: docs
    params:
      scope: docs:read
- name: create_doc
  endpoint:
    path: /v2
    method: POST
    data_selector: create_doc
    params:
      scope: docs:write
- name: create_column
  endpoint:
    path: /v2
    method: POST
    data_selector: create_column
    params:
      board_id: '1234567890'
      column_type: doc
      title: Task info
- name: document_blocks
  endpoint:
    path: /v2
    method: POST
    data_selector: data.blocks
    params:
      scope: docs:read
- name: plan
  endpoint:
    path: /v2
    method: POST
    data_selector: data.account.plan
    params:
      scope: account:read
- name: folders
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      query: 'folders (workspace_ids: 1234567890) { name id children { id name }}'
- name: create_folder
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      query: 'create_folder (name: "New folder", workspace_id: 1234567890) { id }'
- name: update_folder
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      query: 'update_folder (folder_id: 1234567890, name: "Updated folder name") {
        id }'
- name: delete_folder
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      query: 'delete_folder (folder_id: 1234567890) { id }'
- name: items
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:read
- name: create_item
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: duplicate_item
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: move_item_to_group
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: move_item_to_board
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: archive_item
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: delete_item
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: clear_item_updates
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: items_page
  endpoint:
    path: /boards
    method: POST
    data_selector: items_page
    params: {}
- name: items_page_by_column_values
  endpoint:
    path: /items_page_by_column_values
    method: POST
    data_selector: items
    params:
      limit: 50
      board_id: ID!
      columns: '[ItemsPageByColumnValuesQuery!]'
- name: next_items_page
  endpoint:
    path: /next_items_page
    method: POST
    data_selector: items
    params:
      cursor: String
      limit: 50
- name: me
  endpoint:
    path: ''
    method: POST
    data_selector: data.me
    params:
      scope: me:read
- name: create_notification
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params: {}
- name: status_column_settings
  endpoint:
    path: /create_status_managed_column
    method: mutation
    data_selector: labels
- name: update_status_column_settings
  endpoint:
    path: /update_status_managed_column
    method: mutation
    data_selector: labels
- name: daily_analytics
  endpoint:
    path: platform_api
    method: POST
    data_selector: daily_analytics
    params: {}
- name: subitems
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:read
- name: create_subitem
  endpoint:
    path: /v2
    method: POST
    data_selector: data
    params:
      required_scope: boards:write
- name: tags
  endpoint:
    path: /tags
    method: POST
    data_selector: tags
    params:
      incremental: id
- name: create_or_get_tag
  endpoint:
    path: /create_or_get_tag
    method: POST
    data_selector: create_or_get_tag
    params: {}
- name: change_column_value
  endpoint:
    path: /change_column_value
    method: POST
    data_selector: change_column_value
    params: {}
- name: updates
  endpoint:
    path: ''
    method: POST
    data_selector: updates
    params:
      limit: '50'
      to_date: '2025-06-04'
      from_date: '2025-01-01'
- name: version
  endpoint:
    path: ''
    method: POST
    data_selector: data.version
    params: {}
- name: versions
  endpoint:
    path: /versions
    method: POST
    data_selector: data.versions
- name: viewers
  endpoint:
    path: /viewers
    method: POST
    data_selector: viewers
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
- name: workspaces
  endpoint:
    path: /workspaces
    method: POST
    data_selector: workspaces
    params: {}
- name: app
  endpoint:
    path: /apps
    method: POST
    data_selector: data
    params: {}
- name: items_page
  endpoint:
    path: 'boards (ids: 1234567890)'
    method: POST
    data_selector: items_page
- name: next_items_page
  endpoint:
    path: next_items_page
    method: POST
    data_selector: items
- name: delete_marketplace_app_discount
  endpoint:
    path: /graphql
    method: POST
    data_selector: deleted_discount
    params:
      account_slug: Test
      app_id: 123456
- name: boards
  endpoint:
    path: /boards
    method: POST
    data_selector: data.boards
    params: {}
- name: items
  endpoint:
    path: /items
    method: POST
    data_selector: data.items
    params: {}
- name: board_views
  endpoint:
    path: /api/v2/board_views
    method: GET
- name: item_views
  endpoint:
    path: /api/v2/item_views
    method: GET
- name: dashboard_widgets
  endpoint:
    path: /api/v2/dashboard_widgets
    method: GET
- name: custom_objects
  endpoint:
    path: /api/v2/custom_objects
    method: GET
- name: account_settings_view
  endpoint:
    path: /api/v2/account_settings
    method: GET
- name: doc_actions
  endpoint:
    path: /api/v2/doc_actions
    method: GET
- name: ai_assistant
  endpoint:
    path: /api/v2/ai_assistant
    method: GET
- name: integrations
  endpoint:
    path: /api/v2/integrations
    method: GET
- name: workspace_templates
  endpoint:
    path: /api/v2/workspace_templates
    method: GET
- name: board_views
  endpoint:
    path: /views
    method: GET
- name: item_views
  endpoint:
    path: /item_views
    method: GET
- name: board_menu_features
  endpoint:
    path: /board_menu
    method: GET
- name: dashboard_widgets
  endpoint:
    path: /dashboard_widgets
    method: GET
- name: custom_objects
  endpoint:
    path: /custom_objects
    method: GET
- name: account_settings_view
  endpoint:
    path: /account_settings
    method: GET
- name: doc_actions
  endpoint:
    path: /doc_actions
    method: GET
- name: ai_assistant
  endpoint:
    path: /ai_assistant
    method: GET
- name: workspace_templates
  endpoint:
    path: /workspace_templates
    method: GET
- name: issues
  endpoint:
    path: /api/issues
    method: POST
    data_selector: data
    params: {}
- name: activities
  endpoint:
    path: /api/activities
    method: GET
    data_selector: data
    params: {}
- name: queue_message
  endpoint:
    path: /mndy-queue
    method: POST
    data_selector: body
    params: {}
- name: runtime
  endpoint:
    path: .mondaycoderc
    method: CREATE
    data_selector: RUNTIME
    params: {}
- name: static_ips
  endpoint:
    path: /static_ips
    method: GET
    data_selector: ips
    params: {}
- name: network_allowlist
  endpoint:
    path: /network_allowlist
    method: GET
    data_selector: allowlist
    params: {}
- name: Board header AI assistant
  endpoint:
    path: /api/board_header_ai_assistant
    method: GET
    data_selector: features
    params: {}
- name: Update AI assistant
  endpoint:
    path: /api/update_ai_assistant
    method: GET
    data_selector: features
    params: {}
- name: Doc header AI assistant
  endpoint:
    path: /api/doc_header_ai_assistant
    method: GET
    data_selector: features
    params: {}
- name: Doc command AI assistant
  endpoint:
    path: /api/doc_command_ai_assistant
    method: GET
    data_selector: features
    params: {}
- name: Doc toolbar AI assistant
  endpoint:
    path: /api/doc_toolbar_ai_assistant
    method: GET
    data_selector: features
    params: {}
- name: Doc Quickstart AI assistant
  endpoint:
    path: /api/doc_quickstart_ai_assistant
    method: GET
    data_selector: features
    params: {}
- name: doc_action
  endpoint:
    path: /apps/doc_action
    method: POST
    data_selector: result
    params: {}
- name: custom_field
  endpoint:
    path: /integration/sentence_builder/custom_field
    method: POST
    data_selector: custom_fields
    params: {}
- name: action_event
  endpoint:
    path: /run
    method: POST
- name: subscribe
  endpoint:
    path: /automations/apps-events
    method: POST
    data_selector: payload
    params: {}
- name: unsubscribe
  endpoint:
    path: /automations/apps-events
    method: POST
    data_selector: payload
    params: {}
- name: remote_options_url
  endpoint:
    path: /remote/options/url
    method: GET
    data_selector: options
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: dependencies
- name: input_output_fields
  endpoint:
    path: /input/output/fields
    method: GET
    data_selector: fields
- name: options
  endpoint:
    path: /options
    method: GET
    data_selector: options
- name: custom_entity
  endpoint:
    path: /field_definitions
    method: GET
    data_selector: fields
- name: custom_field
  endpoint:
    path: /create_custom_field
    method: POST
    data_selector: field
    params: {}
- name: action_event
  endpoint:
    path: /run
    method: POST
- name: subscribe
  endpoint:
    path: /automations/apps-events/subscribe
    method: POST
- name: unsubscribe
  endpoint:
    path: /automations/apps-events/unsubscribe
    method: POST
- name: trigger
  endpoint:
    path: /automations/apps-events/trigger
    method: POST
- name: socks
  endpoint:
    path: /fields/socks
    method: POST
    data_selector: response
    params: {}
- name: fields_object
  endpoint:
    path: /fields/object
    method: POST
    data_selector: payload
    params: {}
- name: credentials
  endpoint:
    path: /credentials/get
    method: POST
    data_selector: ''
    params: {}
- name: create_credentials
  endpoint:
    path: /credentials/create
    method: GET
    data_selector: ''
    params: {}
- name: delete_credentials
  endpoint:
    path: /credentials/delete
    method: POST
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: sessionToken
  endpoint:
    path: sessionToken
    method: GET
    data_selector: data
    params: {}
- name: settings
  endpoint:
    path: settings
    method: GET
    data_selector: data
    params: {}
- name: context
  endpoint:
    path: context
    method: GET
    data_selector: data
    params: {}
- name: itemIds
  endpoint:
    path: /itemIds
    method: GET
    data_selector: items
- name: filter
  endpoint:
    path: /filter
    method: GET
    data_selector: data
- name: location
  endpoint:
    path: /location
    method: GET
    data_selector: data
- name: addDocBlock
  endpoint:
    path: monday.execute
    method: POST
    data_selector: ''
    params: {}
- name: addMultiBlocks
  endpoint:
    path: monday.execute
    method: POST
    data_selector: ''
    params: {}
- name: addMultiBlocksFromHtml
  endpoint:
    path: monday.execute
    method: POST
    data_selector: ''
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: POST
    data_selector: response
    params: {}
- name: location
  endpoint:
    path: /location
    method: POST
    data_selector: response
    params: {}
- name: tunnel
  endpoint:
    path: /tunnel/create
    method: POST
    params:
      appId: -a
      port: -p
- name: value_created_event
  endpoint:
    path: /execute
    method: POST
    data_selector: promise
    params: {}
- name: apps_monetization_info
  endpoint:
    path: /apps_monetization_info
    method: GET
    data_selector: seats_count
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscription_data
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payment_data
- name: discounts
  endpoint:
    path: /api/discounts
    method: GET
    data_selector: discounts
    params: {}
- name: grant_marketplace_app_discount
  endpoint:
    path: /api/grant_marketplace_app_discount
    method: POST
    data_selector: granted_discount
    params: {}
- name: app_subscription
  endpoint:
    path: /app_subscription
    method: GET
    data_selector: data
- name: apps_monetization_status
  endpoint:
    path: /apps_monetization_status
    method: GET
    data_selector: data
- name: set_mock_app_subscription
  endpoint:
    path: /set_mock_app_subscription
    method: POST
    data_selector: data
- name: remove_mock_app_subscription
  endpoint:
    path: /remove_mock_app_subscription
    method: POST
    data_selector: data
- name: app_lifecycle_events
  endpoint:
    path: /app_lifecycle_events
    method: GET
    data_selector: events
    params: {}
- name: uninstall_reasons
  endpoint:
    path: /uninstall_reasons
    method: GET
    data_selector: reasons
    params: {}
- name: top_line_metrics
  endpoint:
    path: /installs/top_line_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: active_installs_over_time
  endpoint:
    path: /installs/active_over_time
    method: GET
    data_selector: active_installs
    params: {}
- name: installs_and_uninstalls_over_time
  endpoint:
    path: /installs/installs_uninstalls_over_time
    method: GET
    data_selector: installs_uninstalls
    params: {}
- name: accounts_installing_by_plan
  endpoint:
    path: /installs/accounts_by_plan
    method: GET
    data_selector: accounts_by_plan
    params: {}
- name: accounts_installing_by_region
  endpoint:
    path: /installs/accounts_by_region
    method: GET
    data_selector: accounts_by_region
    params: {}
- name: installs_by_max_team_size
  endpoint:
    path: /installs/by_max_team_size
    method: GET
    data_selector: installs_by_size
    params: {}
- name: recent_installs_log
  endpoint:
    path: /installs/recent_log
    method: GET
    data_selector: recent_installs
    params: {}
- name: rating_score
  endpoint:
    path: /api/reviews/rating_score
    method: GET
    data_selector: average_rating
    params: {}
- name: reviews
  endpoint:
    path: /api/reviews
    method: GET
    data_selector: user_reviews
    params: {}
- name: average_rating_score_trend
  endpoint:
    path: /api/reviews/average_rating_trend
    method: GET
    data_selector: rating_trend
    params: {}
- name: funnel_customers
  endpoint:
    path: /funnel_customers
    method: GET
    data_selector: metrics
    params: {}
- name: conversion_rates_trend
  endpoint:
    path: /conversion_rates_trend
    method: GET
    data_selector: metrics
    params: {}
- name: unique_users
  endpoint:
    path: /unique_users
    method: GET
    data_selector: metrics
    params: {}
- name: users_visiting_over_time
  endpoint:
    path: /users_visiting_over_time
    method: GET
    data_selector: metrics
    params: {}
- name: users_visiting_by_source
  endpoint:
    path: /users_visiting_by_source
    method: GET
    data_selector: metrics
    params: {}
- name: users_visiting_by_category
  endpoint:
    path: /users_visiting_by_category
    method: GET
    data_selector: metrics
    params: {}
- name: users_visiting_by_search_keyword
  endpoint:
    path: /users_visiting_by_search_keyword
    method: GET
    data_selector: metrics
    params: {}
- name: top_search_keywords_trend
  endpoint:
    path: /top_search_keywords_trend
    method: GET
    data_selector: metrics
    params: {}
- name: developer_link_clicks
  endpoint:
    path: /developer_link_clicks
    method: GET
    data_selector: metrics
    params: {}
- name: request_status
  endpoint:
    path: /api/v1/request_status
    method: GET
    data_selector: status
    params: {}
notes:
- The analytics dashboard is only available for Enterprise accounts.
- Consider evaluating whether the monday.com platform API is the right tool for your
  use case.
- MCP is currently supported by several agents, with more to come in the future.
- Claude won't take any action without your permission. When needed, it will ask you
  to authorize access via OAuth or API token.
- Both email address and display text are required when updating the email column.
- Requires the boards:write scope to update the files column.
- You can filter, read, update, and clear the status column via the API.
- The status column can have a maximum of 40 labels.
- Deactivating a managed column prevents users from adding it to new boards.
- Requires setup of API key for authentication
- Admins and members have access to their own API tokens.
- Guests cannot access an API key but can utilize API features through other authentication
  methods.
- Can only be queried directly at the root
- Only works for app collaborators using a personal token
- Developer access tokens will not work.
- 'Required scope: account:read'
- Can only be nested within a boards query
- Results are returned in reverse chronological order
- Can only be queried directly at the root.
- Only works for app collaborators.
- Files uploaded can be JPEG, Word/Doc, PDF, XLSX, GIF, MP4, CSV, SVG, TXT, and AI
  files.
- Files must be uploaded as assets and always belong to a parent object (like an item
  or an update).
- The API allows uploading files up to 500 MB in size.
- Access to audit logs is restricted to account admins on the Enterprise plan.
- Users without the correct permissions will receive an error when querying the audit_logs
  object.
- Access to these logs is restricted to account admins on the Enterprise plan.
- Mutation-specific rate limit of 40 mutations per minute.
- 'Required scope: boards:read for reading columns.'
- 'Required scope: boards:write for writing operations.'
- Results depend on the timezone, date format, and first day of the week settings
  configured in the monday.com profile of the user making the API call.
- The API supports most column types to read, filter, delete, and update.
- Checkbox column can be filtered, read, updated, and cleared via the API.
- Simple string updates are not supported for updating dependency columns.
- Using null or an empty object clears the dependency column.
- The address is not verified to match the latitude/longitude and is just used as
  the text displayed in the cell.
- Legal values for latitude are between -90.0 and 90.0 exclusive and between -180.0
  and 180.0 inclusive for longitude.
- You can read the mirror column via the API, but you cannot filter, update, or clear
  it.
- You may see some unexpected and inconsistent results if you try to set up filter
  rules for mirrored content.
- Requires docs:write scope for creating or updating documents
- This section refers to the person column which has been deprecated. If you are trying
  to change the column value of a people column, check out the People column.
- The person column contains the ID of a single user.
- Ensure valid phone numbers and country codes are provided.
- Use the Google Phone Library for validation.
- The team column has been deprecated.
- To assign a team to an item, utilize the people column instead.
- Currently, hosting your app on monday code is offered free of charge, though it
  may be subject to payment in the future.
- Simple string updates are not supported for updating the world clock column.
- Can only be nested within an items query
- Required scope for reading blocks is docs:read
- Required scope for writing blocks is docs:write
- Will return null for users on trial accounts.
- Can only be nested inside an account query.
- 'Required scope: boards:read for queries'
- 'Required scope: boards:write for mutations'
- Cursors are generated when you first request a given board and are cached for 60
  minutes.
- You can only query items_page_by_column_values directly at the root, so it can't
  be nested within another query.
- 'Required scope: me:read'
- 'Required scope: notifications:write'
- This mutation only sends the notification. You can't query back the notification
  ID when running the mutation since notifications are asynchronous.
- Managed columns are useful tools to standardize workflows across your monday.com
  account.
- Subitems can only be nested within another query.
- Requires permission to change the board structure.
- 'Required scope: tags:read for querying tags'
- 'Required scope: boards:write for creating or getting a tag'
- 'Required scope: teams:read'
- 'Required scope: teams:write'
- 'Required scope: boards:write'
- 'Required scope: workspaces:write'
- 'Required scope: updates:read'
- 'Required scope: updates:write'
- Requests sent through our webhook integration will retry once a minute for 30 minutes.
- Every account has a main workspace, but querying its details via the API may not
  be possible until migration is complete.
- Admins and members have access to their own API tokens. Guests cannot access an
  API key but can utilize API features through other authentication methods, like
  OAuth or a shortLivedToken.
- Viewers, users who have been deactivated or disabled, users with unconfirmed emails,
  or users on student accounts cannot access the API.
- Passing a version name makes your app less susceptible to breaking changes and gives
  you more time to migrate to a new version.
- Removed the deprecated items field on boards queries, replaced it with items_page
- Removed the deprecated items field on groups queries, replaced it with items_page
- New column values fields and typed column values
- Removed the deprecated items_by_column_values and items_by_multiple_column_values
  objects, replaced them with items_page_by_column_values
- The column_type field on the create_column mutation is now required
- Empty parentheses are no longer supported
- Quotation marks for strings are now required
- Removed the deprecated pos fields on boards and columns queries
- Column type strings have changed. The type field on columns queries has changed
  from String! to ColumnType!
- Deprecated the newest_first argument on boards queries
- Many of the ID arguments and fields have changed from Int to ID type
- Text field returns empty results for mirror, dependency, and connect boards columns
  when querying through column_values or the specific MirrorValue, DependencyValue
  and BoardRelationValue types. Use the display_value field instead.
- New next_items_page object for cursor-based pagination
- New move_item_to_board mutation
- New linked_items field on items queries
- New edit_update and delete_update webhooks
- The value argument in the change_simple_column_value mutation is now nullable
- The complexity of the text field for mirror, link, and dependency columns increased
- New ids argument on updates queries
- Any views or widgets uploaded to our platform will be publicly-accessible via a
  randomly-generated (and difficult to guess) URL.
- 'Before we start building, it''s important to note the following workspace template
  limits: 50 boards, dashboards, workflows, and docs in each template; 10K items across
  all boards.'
- Some workspace and board settings and permissions don't automatically transfer when
  users install a template.
- All requests count towards the stated limits, even those that fail or return an
  error. You can prevent unnecessary API usage by waiting for the time indicated in
  the `retry_in_seconds` field before retrying the call.
- The API SDK respects the rate-limited responses and waits the appropriate amount
  of time before automatically retrying the request, up to a configurable maximum
  number of retries.
- Each cursor is valid for 60 minutes after the initial request.
- Uses JSON formatting for column values.
- Removing a column value for a File column requires setting the clear_all flag.
- Currently available for Enterprise accounts only
- API call limit helps reduce load on the API
- GraphQL API requires a valid API key for access
- Integrations are the only app features supported on the mobile app.
- An admin must still manually install the app since automated installation requests
  aren't yet supported.
- When building an app, it is important to be aware of key limitations to avoid errors
  and optimize your app's performance.
- Before using the server, make sure you have Node.js v20 or higher installed
- Before using the server, make sure you have NPM v5.2.0 or higher installed
- This feature is in testing and may change as improvements are made.
- Claude won't take any action without your permission.
- Uses OAuth or API token for authorization.
- Join our developer community for support and tips.
- You must be an admin to enable monday code on your account.
- monday code limits are designed to maintain system stability while ensuring fair
  resource allocation for all users.
- Running instance limits are in gradual release.
- When you receive a message, you should respond to the request with a success status
  (HTTP 200) within 10 minutes. If you don't respond in that time, or if you return
  an error, we will attempt to resend the queue item 9 more times. The message will
  disappear after the tenth and final attempt.
- The multi-region feature is available for public monday code apps.
- If you have more than one app, you need to repeat the process for each one.
- The file specifies the language and version required to run your application.
- Enabling networking allows access to static IPs and the network allowlist.
- Allowlist settings take effect from the latest draft version forward.
- OAuth flow does not support refresh tokens.
- Zip file deployment will be deprecated soon. We recommend migrating to the CLI for
  long-term support.
- Your app must also have an integration app feature to receive webhooks containing
  the authorization header for your board column extension.
- The max character limit for a custom trigger or action is 255 characters for each
  one - meaning they can be used together for a total of 510 characters on the entire
  recipe. As a best practice we recommend making recipes short and easily configurable,
  breaking the logic into multiple recipes if necessary.
- Tokens must be encrypted.
- All data is sanitized and HTML is encoded.
- Ensure that your app works with different user types, including member, admin, guest,
  and viewer.
- The app should show relevant messages to each user type (e.g., viewers can't access
  the API).
- Support small and large boards (use techniques like pagination, infinite scroll,
  and bulk operations).
- 'Provide a valid installation link following the format: https://auth.monday.com/oauth2/authorize?client_id=*******'
- Implement the value-created event method in your code.
- Embed a guidance video or link to your How-to-use page in the app.
- Make sure users can set up your app without consulting documentation.
- In order for your app to still have the Back To URL after the monday OAuth flow,
  you'll need to pass it (or the entire authorization token) through the state parameter
  of the monday OAuth request.
- This section allows you to specify the name, description, and type of block.
- Users must configure remote options for custom fields to allow input values.
- Asynchronous action blocks send a 200 response just to acknowledge that the action
  was triggered.
- To report an issue without triggering side effects, use severity code 2000 along
  with a runtime error description.
- monday will send your app a short-lived API token that is valid for five minutes
- Handles authentication flows and credential storage
- Requires setup of connected app in third-party service
- 'Key length limit: 256'
- 'Storage limit per key: 6MB'
- All API calls follow a 60-second timeout policy.
- You cannot create more than 10 to 20 items in real time.
- Each create_item mutation uses 10,000 complexity points.
- You should make all mutations one after the other.
- Only user IDs and account IDs are unique across the entire platform! As such, any
  primary keys used should only include user IDs and account IDs.
- Make sure to always store data using keys that are unique across all of monday.com
  accounts, such as account and user IDs.
- Users will maintain access to the app but it may not work properly until the changes
  are approved.
- You must enable Developer Mode to see app versions and add them to your account.
- Your app’s backend must support the logic of your old versions to account for this.
- Your app name should be unique and not infringe monday.com or any other third-party
  existing trademarks.
- Avoid using 'monday' 'monday.com' or any of monday.com trademarks in your app name
  unless it's descriptive and follows our guidelines.
- Ensure your app name doesn’t contain any unlawful, harmful, threatening, defamatory,
  obscene, or otherwise objectionable text or messaging.
- The icon should be unique and not infringe monday.com or any other third-party trademarks.
- Trial plans enable customers to evaluate your app, understand its value, and decide
  if it's a good fit.
- Free plans are optional but can be leveraged to attract more app users.
- Users create a subscription when they sign up for a trial, free, or paid plan with
  your app.
- Subscriptions automatically renew unless canceled before the renewal date.
- Developers will receive monthly payments through Payoneer in USD.
- To extend up to five trials at a time via the API, use the batch_extend_trial_period
  mutation.
- The *Usage* tab in the Developer Center allows you to track how your app is being
  used across accounts and users.
- Analyzing these insights helps you better understand your app’s adoption, identify
  low usage periods, and monitor user engagement trends.
- The AMP board logs all app lifecycle events as individual items.
- The Uninstall reasons table can be activated through the workspace menu.
- Webhooks containing subscription information are confidential.
- You won't receive any historic webhook information.
- The Payment tab tracks key payment metrics for your app.
- This information is confidential and shared under the Developer Terms!
- It can take up to three hours to start receiving data.
- You can update your app listing at any time by submitting a request through the
  Developer Center.
- Users can discover apps through the marketplace search bar, menu categories, and
  in-platform suggestions.
- Keywords are essential to your app's discoverability, so choose them wisely!
- When promoting your app, use only the approved images, badges, and graphics provided
  by monday.com. Do not alter or misrepresent these assets.
- All promotional content must comply with these marketing and content guidelines
  and any applicable advertisement laws and regulations.
- Apps can qualify for the badge through one of three routes.
- Eligibility is based solely on the information provided in your questionnaire.
errors:
- '401 Unauthorized: Recheck API key or authentication method.'
- '401 Unauthorized: Recheck API key or permissions'
- '400 Bad Request: Check your request syntax'
- '401 Unauthorized: Check your API key'
- '403 Forbidden: You do not have permission to access this resource'
- No active subscription exists for the supplied token.
- '429: Call limit exceeded for CreateBoard'
- '429: Call limit exceeded for DuplicateBoard'
- '401 Unauthorized: Check your API key and permissions.'
- '400 Bad Request: Validate the request format and parameters.'
- Error if the items do not belong to the connected board.
- 'Invalid latitude or longitude: Ensure values are within the defined ranges.'
- '429: Call limit exceeded for DuplicateGroup'
- '400 Bad Request: Check your query syntax or parameters.'
- '401 Unauthorized: Invalid API key or token.'
- '404 Not Found: The requested resource does not exist.'
- 'Unsupported column error: If you query an unsupported column.'
- 'InvalidVersionException: Your request is not formatted properly.'
- 'ComplexityException: You will receive a `ComplexityException` error if you hit
  the limit.'
- 'DAILY_LIMIT_EXCEEDED: You will receive a `DAILY_LIMIT_EXCEEDED` error if you hit
  the limit.'
- 'Minute limit rate exceeded: You will receive a `Minute limit rate exceeded` error
  if you hit the limit.'
- 'Concurrency limit exceeded: You will receive a `Concurrency limit exceeded` error
  if you hit the limit.'
- 'IP_RATE_LIMIT_EXCEEDED: You will receive an `IP_RATE_LIMIT_EXCEEDED` error if you
  hit the limit.'
- 'API_TEMPORARILY_BLOCKED: Check the status page for updates and retry your call
  once the issue has been resolved.'
- 'ColumnValueException: Incorrect column value formatting'
- 'CorrectedValueException: The query is of the wrong type. If you try to update a
  column with simple values (`String` values), ensure the column supports this type
  of value format.'
- 'CreateBoardException: Error in your create board mutation'
- 'InvalidArgumentException: The argument being passed in the query is invalid, you''ve
  hit a pagination limit, you''re querying a subitem board ID, or a board ID is not
  found.'
- 'InvalidBoardIdException: The board ID being passed in the query is invalid. Verify
  that the board ID exists and you have access to it.'
- 'InvalidColumnIdException: The column ID being passed in the query is invalid. Verify
  that the column ID exists and you have access to it.'
- 'InvalidUserIdException: The user ID being passed in the query is invalid. Verify
  that the user ID exists and the user is assigned to your board.'
- 'InvalidVersionException: The requested API version is invalid. Ensure that your
  request follows the proper format.'
- 'ItemNameTooLongException: The item name has exceeded the allotted number of characters.
  Ensure the item name is 1-255 characters.'
- 'ItemsLimitationException: You have exceeded the limit of 10,000 items per board.
  Reduce the number of items on the board.'
- 'missingRequiredPermissions: The operation has exceeded the OAuth permission scopes
  granted for the app. Review your app''s permission scopes to ensure the correct
  ones are requested.'
- 'Parse error on...: Incorrect query string formatting.'
- 'ResourceNotFoundException: The ID being passed in your query is invalid. Verify
  that the ID of the item, group, or board you’re querying exists.'
- 'Bad request: The structure of your query string was passed incorrectly. `query`
  key.'
- 'JsonParseException: Issues interpreting the provided JSON. Verify all JSON is valid
  using a JSON validator (e.g., JSON lint).'
- 'Unauthorized: You don''t have permission to access the data. `Authorization` header.'
- 'Your ip is restricted: An account admin has restricted access to the system from
  specific IP addresses. Confirm that your IP address is not restricted by your account
  admin.'
- 'UserUnauthorizedException: The user doesn''t have the required permission to perform
  the action in question. Verify that the user has permission to access or edit the
  given resource.'
- 'ResourceNotFoundException: The ID being passed in the query is invalid. Verify
  that the ID of the user you are querying exists and is assigned to your board.'
- 'DeleteLastGroupException: The last group on a board is being deleted or archived.
  Verify that you have at least one group on the board.'
- 'RecordInvalidException: Indicates one of the following: - A board has exceeded
  400 individual subscribers or 100 team subscribers - A user or team has subscribed
  to more than 10,000 boards.'
- 'maxConcurrencyExceeded: You exceeded the maximum number of queries allowed at once.'
- 'Rate Limit Exceeded: You made more than 5,000 requests in one minute. Reduce the
  number of requests sent in one minute.'
- 'COMPLEXITY_BUDGET_EXHAUSTED: You have reached the complexity limit. `limits` and
  `page` arguments.'
- 'IP_RATE_LIMIT_EXCEEDED: You have reached the IP limit.'
- 'Internal Server Error: Indicates that something went wrong. Common causes are:
  - Invalid arguments, such as board or item IDs that don''t exist - Malformatted
  JSON column values.'
- '403 Forbidden: Check API key validity'
- '404 Not Found: Ensure the endpoint exists'
- '500 Internal Server Error: Try again later'
- '400: invalid_request'
- '403: unauthorized_client'
- '403: access_denied'
- '403: invalid_scope'
- '500: server_error'
- '500: temporary_unavailable'
- 401 - UNAUTHORIZED
- 402 - PAYMENT_REQUIRED
- 403 - FORBIDDEN
- 404 - NOT_FOUND
- 410 - GONE
- 422 - UNPROCESSABLE_ENTITY
- Failed to grant discount - Check your inputs
- Failed to grant discount - Invalid account details
- Failed to grant discount - App isn't installed on the account
- Failed to grant discount - User cannot grant discounts
- 'Failed to extend trial - Check your inputs: User entered invalid input (e.g. exceeding
  365 days)'
- 'Failed to extend trial - Invalid account details: Account with the provided ID
  doesn’t exist'
- 'Failed to extend trial - Account missing monetized install of application: The
  app is not installed on the account'
- 'Failed to extend trial - Existing app subscription: Account already purchased a
  subscription'
- 'Failed to extend trial - User cannot extend trials: Granting user can''t provide
  trial extensions'
auth_info:
  mentioned_objects:
  - JWT
client:
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    token_url: https://auth.monday.com/oauth2/token
    flow: short-lived token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    redirect_uri: YOUR_URL
  base_url: https://your-instance.api-name.com
  headers:
    Content-Type: application/json
    API-Version: 2023-07
    API-version: 2023-10
    Authorization: shortLivedToken
    Accept: application/json
  paginator:
    type: page
    page_size_param: limit
    default_page_size: 10
    cursor_param: cursor
source_metadata: null
