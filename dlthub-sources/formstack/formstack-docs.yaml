resources:
- name: contact_form
  endpoint:
    path: /contact_form
    method: POST
    data_selector: FormID
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: folders
  endpoint:
    path: /folders
    method: GET
- name: fields
  endpoint:
    path: /fields
    method: GET
- name: submissions
  endpoint:
    path: /submissions
    method: GET
- name: partial_submissions
  endpoint:
    path: /partial_submissions
    method: GET
- name: confirmation_emails
  endpoint:
    path: /confirmation_emails
    method: GET
- name: notification_emails
  endpoint:
    path: /notification_emails
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: form
  endpoint:
    path: /api/v2/form.json
    method: GET
    data_selector: forms
- name: form
  endpoint:
    path: /api/v2/form.json
    method: POST
    data_selector: null
    params: {}
- name: form
  endpoint:
    path: /form/{id}.json
    method: GET
    data_selector: data
- name: form
  endpoint:
    path: /form/{id}.json
    method: PUT
    data_selector: form
    params: {}
- name: form
  endpoint:
    path: /form/{id}
    method: DELETE
- name: form_copy
  endpoint:
    path: /api/v2/form/12345/copy.json
    method: POST
    data_selector: null
    params: {}
- name: form
  endpoint:
    path: /form/12345.json
    method: GET
    data_selector: basic_details
- name: form_html
  endpoint:
    path: /api/v2/form/12345.json
    method: GET
    data_selector: html
- name: short_answer
  endpoint:
    path: /short_answer
    method: GET
- name: long_answer
  endpoint:
    path: /long_answer
    method: GET
- name: name
  endpoint:
    path: /name
    method: GET
- name: address
  endpoint:
    path: /address
    method: GET
- name: email
  endpoint:
    path: /email
    method: GET
- name: phone
  endpoint:
    path: /phone
    method: GET
- name: credit_card
  endpoint:
    path: /credit_card
    method: GET
- name: datetime
  endpoint:
    path: /datetime
    method: GET
- name: file
  endpoint:
    path: /file
    method: GET
- name: number
  endpoint:
    path: /number
    method: GET
- name: select
  endpoint:
    path: /select
    method: GET
- name: radio
  endpoint:
    path: /radio
    method: GET
- name: checkbox
  endpoint:
    path: /checkbox
    method: GET
- name: matrix
  endpoint:
    path: /matrix
    method: GET
- name: richtext
  endpoint:
    path: /richtext
    method: GET
- name: embed
  endpoint:
    path: /embed
    method: GET
- name: product
  endpoint:
    path: /product
    method: GET
- name: section
  endpoint:
    path: /section
    method: GET
- name: form_field
  endpoint:
    path: /form/12345/field.json
    method: GET
    data_selector: fields
- name: form_field
  endpoint:
    path: /form/12345/field.json
    method: POST
    data_selector: field
    params: {}
- name: field
  endpoint:
    path: /field/{id}.json
    method: GET
    data_selector: details
- name: field
  endpoint:
    path: /field/{id}.json
    method: PUT
    data_selector: null
    params: {}
- name: field
  endpoint:
    path: /api/v2/field/{id}.json
    method: DELETE
- name: folder
  endpoint:
    path: /folder
    method: POST
- name: folder_delete
  endpoint:
    path: /folder/:id
    method: DELETE
- name: folder
  endpoint:
    path: /api/v2/folder.json
    method: GET
    data_selector: folders
    params: {}
- name: folder
  endpoint:
    path: /api/v2/folder.json
    method: POST
    data_selector: null
    params: {}
- name: folder
  endpoint:
    path: /folder/{id}.json
    method: GET
    data_selector: folder
- name: folder
  endpoint:
    path: /folder/{id}.json
    method: PUT
    data_selector: ''
    params: {}
- name: folder
  endpoint:
    path: /folder/{id}.json
    method: DELETE
- name: submission
  endpoint:
    path: /api/v2/submission
    method: GET
    data_selector: records
- name: submission
  endpoint:
    path: /form/12345/submission.json
    method: GET
    data_selector: submissions
- name: submission
  endpoint:
    path: /form/12345/submission.json
    method: POST
    data_selector: null
    params: {}
- name: submission
  endpoint:
    path: /submission/{id}.json
    method: GET
    data_selector: submission
- name: submission
  endpoint:
    path: /submission/{id}.json
    method: PUT
    data_selector: submission
    params: {}
- name: submission
  endpoint:
    path: /submission/{id}.json
    method: DELETE
- name: form_submission_count
  endpoint:
    path: /form/12345/count
    method: GET
    data_selector: null
    params: {}
- name: download_file
  endpoint:
    path: /api/v2/download/{submission_id}/{file_id}
    method: GET
- name: delete_portal_avatar
  endpoint:
    path: /api/v2/portal//avatar
    method: DELETE
    data_selector: null
    params: {}
- name: partial_submission
  endpoint:
    path: /form/12345/partialsubmission.json
    method: GET
    data_selector: records
- name: partial_submission
  endpoint:
    path: /partialsubmission/{id}.json
    method: GET
    data_selector: records
- name: partial_submission
  endpoint:
    path: /partialsubmission/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: confirmation
  endpoint:
    path: /form/12345/confirmation.json
    method: GET
    data_selector: confirmation
    params: {}
- name: confirmation
  endpoint:
    path: /api/v2/form/{form_id}/confirmation.json
    method: POST
    data_selector: null
    params: {}
- name: confirmation
  endpoint:
    path: /confirmation/{id}.json
    method: GET
    data_selector: confirmation_details
- name: confirmation
  endpoint:
    path: /confirmation/{id}.json
    method: PUT
    data_selector: confirmation
    params: {}
- name: confirmation
  endpoint:
    path: /confirmation/{id}.json
    method: DELETE
    data_selector: confirmation
    params: {}
- name: notification
  endpoint:
    path: /form/12345/notification.json
    method: GET
    data_selector: notifications
    params: {}
- name: notification
  endpoint:
    path: /form/{form_id}/notification.json
    method: POST
    data_selector: null
    params: {}
- name: notification
  endpoint:
    path: /notification/{id}.json
    method: GET
    data_selector: details
- name: notification
  endpoint:
    path: /api/v2/notification/{id}.json
    method: PUT
    data_selector: data
    params: {}
- name: notification
  endpoint:
    path: /notification/{id}.json
    method: DELETE
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /form/12345/webhook.json
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /form/12345/webhook.json
    method: POST
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /webhook/{id}.json
    method: GET
    data_selector: webhook_details
- name: webhook
  endpoint:
    path: /webhook/{webhook_id}.json
    method: PUT
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /api/v2/webhook/{id}.json
    method: DELETE
- name: logic
  endpoint:
    data_selector: logic
- name: portal
  endpoint:
    path: /portal
    method: GET
    data_selector: records
    params: {}
- name: portalForm
  endpoint:
    path: /portalForm
    method: GET
    data_selector: records
    params: {}
- name: portalUser
  endpoint:
    path: /portalUser
    method: GET
    data_selector: records
    params: {}
- name: portalUserPerformance
  endpoint:
    path: /portalUserPerformance
    method: GET
    data_selector: records
    params: {}
- name: portal
  endpoint:
    path: /api/v2/portal
    method: GET
    data_selector: portals
    params: {}
- name: portal
  endpoint:
    path: /portal/
    method: GET
- name: portal
  endpoint:
    path: /portal/
    method: PUT
- name: portal
  endpoint:
    path: /api/v2/portal/
    method: DELETE
- name: copy_portal
  endpoint:
    path: /api/v2/portal//copy
    method: POST
- name: portal_avatar
  endpoint:
    path: /portal//avatar
    method: POST
- name: user
  endpoint:
    path: /portal//user
    method: POST
    data_selector: updated_portal_representation
    params: {}
- name: user
  endpoint:
    path: /api/v2/portal//user
    method: DELETE
- name: user
  endpoint:
    path: /portal//user
    method: PUT
- name: portal_form
  endpoint:
    path: /form/
    method: PUT
- name: portal_form
  endpoint:
    path: /api/v2/portal//form/
    method: DELETE
- name: SmartListResults
  endpoint:
    path: /smartlist/results
    method: GET
    data_selector: results
    params: {}
- name: SmartList
  endpoint:
    path: /smartlist
    method: GET
    data_selector: results
    params: {}
- name: SmartListOptionResults
  endpoint:
    path: /smartlist/options/results
    method: GET
    data_selector: results
    params: {}
- name: SmartListOption
  endpoint:
    path: /smartlist/options
    method: GET
    data_selector: results
    params: {}
- name: BulkOptions
  endpoint:
    path: /bulk/options
    method: GET
    data_selector: options
    params: {}
- name: BulkOption
  endpoint:
    path: /bulk/option
    method: GET
    data_selector: options
    params: {}
- name: smart_list
  endpoint:
    path: /smartlist
    method: GET
    data_selector: results
    params: {}
- name: smartlist
  endpoint:
    path: /smartlist
    method: POST
- name: smartlist
  endpoint:
    path: /smartlist/
    method: GET
- name: smartlist
  endpoint:
    path: /smartlist/
    method: PUT
- name: smartlist
  endpoint:
    path: /smartlist/{id}
    method: DELETE
- name: smartlist_option
  endpoint:
    path: /smartlist//option
    method: GET
    data_selector: results
    params: {}
- name: smart_list_option
  endpoint:
    path: /smartlist//option
    method: POST
- name: smart_list_option
  endpoint:
    path: /api/v2/smartlist//option/
    method: GET
- name: smart_list_option
  endpoint:
    path: /smartlist//option/
    method: PUT
- name: smartlist_option
  endpoint:
    path: /smartlist//option/
    method: DELETE
- name: option_image_delete
  endpoint:
    path: /smartlist/{id}/option/{optionId}/imageDelete
    method: DELETE
- name: smart_list_option_image
  endpoint:
    path: /api/v2/smartlist//option//image
    method: POST
- name: smartlist_options
  endpoint:
    path: /smartlist//alloptions
    method: DELETE
- name: bulk_options
  endpoint:
    path: /smartlist//bulkoptions
    method: POST
- name: SubaccountListItem
  endpoint:
    path: /subaccountList
    method: GET
    data_selector: records
    params: {}
- name: SmtpCredentials
  endpoint:
    path: /smtpCredentials
    method: GET
    data_selector: records
    params: {}
- name: ApiToken
  endpoint:
    path: /apiTokens
    method: GET
    data_selector: records
    params: {}
- name: subaccount
  endpoint:
    path: /subaccount
    method: GET
- name: theme_copy
  endpoint:
    path: /smartlist//theme//copy
    method: POST
- name: smartlist_copy_form
  endpoint:
    path: /api/v2/smartlist//form//copy
    method: POST
- name: Users
  endpoint:
    path: /Users
    method: get
- name: Groups
  endpoint:
    path: /Groups
    method: get
- name: Forms
  endpoint:
    path: /Forms
    method: get
- name: Folders
  endpoint:
    path: /Folders
    method: get
- name: Users
  endpoint:
    path: /Users
    method: GET
- name: Groups
  endpoint:
    path: /Groups
    method: GET
- name: Forms
  endpoint:
    path: /Forms
    method: GET
- name: Folders
  endpoint:
    path: /Folders
    method: GET
- name: form
  endpoint:
    path: /form
    method: get
- name: submission
  endpoint:
    path: /submission
    method: get
- name: Groups
  endpoint:
    path: /Groups
    method: get
- name: Users
  endpoint:
    path: /Users
    method: get
- name: form
  endpoint:
    path: /form
    method: get
- name: submission
  endpoint:
    path: /submission
    method: get
- name: form
  endpoint:
    path: /form
    method: get
- name: subaccounts
  endpoint:
    path: /subaccounts
    method: GET
    data_selector: records
- name: application_api_keys
  endpoint:
    path: /subaccounts/{subaccount_id}/api_keys
    method: GET
    data_selector: records
- name: sso_config
  endpoint:
    path: /{organizationId}/subaccounts/{subaccountId}/sso/config
    method: GET
- name: subaccounts
  endpoint:
    path: /{organizationId}/subaccounts
    method: GET
    data_selector: ''
    params: {}
- name: app_api_keys
  endpoint:
    path: /{organizationId}/subaccounts/{subaccountId}/app-api-keys
    method: GET
- name: form
  endpoint:
    path: /form
    method: GET
- name: submission
  endpoint:
    path: /submission
    method: GET
- name: user
  endpoint:
    path: /Users
    method: GET
- name: group
  endpoint:
    path: /Groups
    method: GET
- name: subaccount_products
  endpoint:
    path: /organizations/{organizationId}/subaccounts/products
    method: GET
    data_selector: products
    params: {}
- name: subaccount_preview
  endpoint:
    path: /organizations/{organizationId}/subaccounts/preview
    method: POST
    data_selector: subaccountPreview
    params: {}
- name: create_subaccount
  endpoint:
    path: /organizations/{organizationId}/subaccounts
    method: POST
    data_selector: newSubaccount
    params: {}
- name: products
  endpoint:
    path: /{organizationId}/subaccounts/products
    method: GET
- name: subaccount_preview
  endpoint:
    path: /organizations//subaccounts/preview
    method: POST
- name: subaccounts
  endpoint:
    path: /organizations//subaccounts
    method: POST
notes:
- All API calls require authentication using OAuth2 access tokens.
- All of our API calls require authentication.
- Creating an application record will also create an access token.
- Access tokens are tied to a Formstack user and follow Formstack (in-app) user permissions.
- We recommend using SSL/TLS on your webhook endpoint to ensure that data cannot be
  read in transmission.
- Paginate through the forms in your account
- Authorization requires a Bearer token
- Authorization is required in the header using Bearer token.
- Authorization uses Bearer token
- Authorization requires a valid OAuth token.
- File uploads can be performed by base64 encoding the file data.
- Deletes portal avatar
- On success - returns `No content`
- Authorization requires Bearer token
- Requires Bearer token for authorization
- Authorization requires Bearer token in the header
- Our number fields support providing a default value using a calculation.
- All field endpoints that accept or return data use the calculation property.
- The data passed in the calculation property must follow the specified format.
- On success - returns `No content` (`204` http status code)
- Payload must include `emails` key containing an array of emails.
- On success - returns No content (204 http status code)
- This API provides endpoints for listing subaccounts and retrieving their associated
  application API keys.
- The email has already been taken.
errors:
- 401 Unauthorized - Valid OAuth2 credentials were not supplied
- 429 Too Many Requests - The current user has hit the daily rate limit
- '400: Bad Request - The request URI was invalid'
- '401: Unauthorized - Valid OAuth2 credentials were not supplied'
- '403: Forbidden - The current user does not have access to this method'
- '404: Not Found - The resource requested could not be found'
- '405: Method Not Allowed - The requested method does not exist'
- '415: Unsupported Media Type - A valid media type (JSON, XML, HTTP URL encoded)
  was not used'
- '429: Too Many Requests - The current user has hit the daily rate limit'
- '500: Internal Server Error - An error occurred while processing the request'
- '401 Unauthorized: Recheck OAuth token'
- '204: No content'
- '422 Unprocessable entity: The email has already been taken.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://admin.formstack.com/api/v1
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    token_url: https://login.api.com/services/oauth2/token
    client_id: '1234'
    client_secret: abcdefg
  headers:
    Accept: application/json
    Content-Type: application/json
  paginator:
    type: page
    page_size_param: per_page
    default_page_size: 50
source_metadata: null
