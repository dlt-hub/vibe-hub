resources:
- name: delete_many_leads
  endpoint:
    path: /org-storage/leads/delete-many
    method: POST
- name: launch_soonpost
  endpoint:
    path: /agents/launch-soon
    method: POST
- name: fetch_script
  endpoint:
    path: /scripts/fetch
    method: GET
- name: orgs_fetch
  endpoint:
    path: /orgs/fetch
    method: GET
- name: leads_objects
  endpoint:
    path: /org-storage/leads-objects/delete
    method: DELETE
- name: search_identity_event
  endpoint:
    path: /identities/events/search
    method: POST
- name: branches
  endpoint:
    path: /branches/fetch-all
    method: GET
- name: save_crm_contact
  endpoint:
    path: /orgs/save-crm-contact
    method: POST
- name: solveCaptcha
  endpoint:
    path: /solveCaptcha
    method: POST
    data_selector: result
    params: {}
- name: unschedule_all_agents
  endpoint:
    path: /agents/unschedule-all
    method: POST
- name: ai_advice
  endpoint:
    path: /ai/advice
    method: post
- name: org_export_container_usage
  endpoint:
    path: /orgs/export-container-usage
    method: GET
- name: phantombuster_script
  endpoint:
    path: /upload
    method: POST
- name: user
  endpoint:
    path: /userGet
    method: GET
- name: mail
  endpoint:
    path: /mail
    method: POST
    data_selector: response
    params: {}
- name: create_branch
  endpoint:
    path: /branches/create
    method: POST
- name: branches
  endpoint:
    path: /branches/fetch-all
    method: GET
- name: fetch_result_object
  endpoint:
    path: /containers/fetch-result-object
    method: GET
- name: access_list
  endpoint:
    path: /scripts/access-list
    method: POST
- name: captcha
  endpoint:
    path: /solveCaptchaBase64
    method: POST
    data_selector: result
    params: {}
- name: fetch_output
  endpoint:
    path: /api/v2/agents/fetch-output
    method: GET
- name: agent_groups
  endpoint:
    path: /orgs/fetch-agent-groups
    method: GET
- name: export_agent_usage
  endpoint:
    path: /orgs/export-agent-usage
    method: GET
- name: containers
  endpoint:
    path: /containers/fetch-all
    method: GET
- name: save_many_leads
  endpoint:
    path: /org-storage/leads/save-many
    method: POST
- name: agents
  endpoint:
    path: /agents/fetch-all
    method: GET
- name: global_object
  endpoint:
    path: /getGlobalObject
    method: GET
    data_selector: object
- name: progress
  endpoint:
    path: /progressHint
    method: POST
    data_selector: progress
    params: {}
- name: hcaptcha
  endpoint:
    path: /hcaptcha
    method: POST
- name: branches_release
  endpoint:
    path: /branches/release
    method: post
- name: scripts
  endpoint:
    path: /scripts/save
    method: POST
- name: save_identity
  endpoint:
    path: /identities/save-with-token
    method: POST
- name: saveText
  endpoint:
    path: saveText
    method: POST
    data_selector: url
    params: {}
- name: export_agent_usage
  endpoint:
    path: /orgs/export-agent-usage
    method: GET
- name: scripts_fetch
  endpoint:
    path: /scripts/fetch
    method: GET
- name: delete_agent
  endpoint:
    path: /agents/delete
    method: POST
- name: abort_agent
  endpoint:
    path: /api/v1/agent/{id}/abort
    method: POST
- name: fetch_output
  endpoint:
    path: /containers/fetch-output
    method: GET
- name: leads_by_list
  endpoint:
    path: /org-storage/leads/by-list/{listId}
    method: POST
- name: agents
  endpoint:
    path: /agents/fetch
    method: GET
- name: notification
  endpoint:
    path: /messages
    method: POST
    data_selector: notifications
    params: {}
- name: delete_branch
  endpoint:
    path: /branches/delete
    method: POST
- name: leads_objects
  endpoint:
    path: /org-storage/leads-objects/searchpost
    method: GET
- name: ipRetrieve
  endpoint:
    path: /location/ip
    method: GET
    data_selector: data
    params: {}
- name: agent
  endpoint:
    path: /agent/{id}
    method: GET
- name: script
  endpoint:
    path: /script/{name}
    method: POST
- name: completions
  endpoint:
    path: /ai/completions
    method: POST
- name: agent
  endpoint:
    path: /agent/{id}
    method: GET
- name: branches
  endpoint:
    path: /branches/fetch-all
    method: get
- name: scripts
  endpoint:
    path: /scripts/fetch-all
    method: get
- name: orgs
  endpoint:
    path: /orgs/fetch
    method: get
- name: containers
  endpoint:
    path: /containers/fetch-all
    method: get
- name: recaptcha
  endpoint:
    path: /recaptcha
    method: POST
- name: leads_objects_save
  endpoint:
    path: /org-storage/leads-objects/savepost
    method: POST
- name: fetchGet
  endpoint:
    path: /org-storage/lists/fetchget
    method: GET
- name: script
  endpoint:
    path: /scripts
    method: POST
    data_selector: script
    params: {}
- name: agents_stop
  endpoint:
    path: /agents/stop
    method: POST
- name: delete_post
  endpoint:
    path: /org-storage/lists/deletepost
    method: DELETE
- name: save_post_event
  endpoint:
    path: /api/v2/identities/events/savepost
    method: POST
- name: scripts
  endpoint:
    data_selector: scripts
- name: saveFolder
  endpoint:
    path: buster.saveFolder
    method: POST
    data_selector: url
    params: {}
- name: agent_object
  endpoint:
    path: /agent/get
    method: GET
    data_selector: agentObject
    params: {}
- name: global_object
  endpoint:
    path: /global/get
    method: GET
    data_selector: globalObject
    params: {}
- name: orgs
  endpoint:
    path: /orgs/fetch-crm-resources
    method: GET
- name: user
  endpoint:
    path: /userGet
    method: GET
    data_selector: data
- name: save
  endpoint:
    path: save
    method: POST
    data_selector: url
    params: {}
- name: ended_containers
  endpoint:
    path: /agent//containers
    method: GET
- name: containers_fetch
  endpoint:
    path: /containers/fetch
    method: GET
- name: org_crm_access
  endpoint:
    path: /orgs/fetch-crm-access
    method: GET
- name: savepost
  endpoint:
    path: /org-storage/lists/savepost
    method: POST
- name: script_by_name
  endpoint:
    path: /script/by-name/{mode}/{name}
    method: GET
- name: base64String
  endpoint:
    path: /saveBase64
    method: POST
    data_selector: url
    params: {}
- name: fetch_deleted_agents
  endpoint:
    path: /agents/fetch-deleted
    method: GET
- name: agent_object
  endpoint:
    path: /getAgentObject
    method: GET
    data_selector: object
    params: {}
- name: fetch_all_branches
  endpoint:
    path: /branches/fetch-all
    method: GET
- name: noCaptcha
  endpoint:
    path: /solveNoCaptcha
    method: POST
    data_selector: result
- name: launch_agent
  endpoint:
    path: /agents/launch
    method: POST
- name: delete_script
  endpoint:
    path: /scripts/delete
    method: POST
- name: script
  endpoint:
    path: /script/
    method: POST
- name: agent_object
  endpoint:
    path: /setAgentObject
    method: POST
    data_selector: object
    params: {}
- name: agent_output
  endpoint:
    path: /api/v1/agent//output
    method: GET
- name: tasks
  endpoint:
    path: /ai/tasks
    method: POST
- name: solveCaptchaImage
  endpoint:
    path: /solveCaptchaImage
    method: POST
    data_selector: result
    params: {}
- name: getTimeLeft
  endpoint:
    path: /getTimeLeft
    method: GET
    data_selector: timeLeft
- name: orgs
  endpoint:
    path: /orgs/save-agent-groups
    method: POST
- name: branches_diff
  endpoint:
    path: /branches/diff
    method: GET
    data_selector: length_difference
- name: download
  endpoint:
    path: download
    method: GET
    data_selector: 'null'
    params: {}
- name: webpack
  endpoint:
    path: /services/data/vXX.X/sobjects/webpack
    method: GET
    data_selector: records
    params: {}
- name: colors
  endpoint:
    path: /services/data/vXX.X/sobjects/colors
    method: GET
    data_selector: records
    params: {}
- name: save_many_leads
  endpoint:
    path: /org-storage/leads-objects/save-many
    method: POST
- name: visibilitypost
  endpoint:
    path: /scripts/visibilitypost
    method: POST
- name: fetch_resources
  endpoint:
    path: /orgs/fetch-resources
    method: GET
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: screenshot
    params: {}
- name: fetch_running_containers
  endpoint:
    path: /orgs/fetch-running-containers
    method: GET
- name: script_by_name
  endpoint:
    path: /script/by-name/{mode}/{name}
    method: GET
    data_selector: ''
    params: {}
- name: serpGet
  endpoint:
    path: /brightdata/serp
    method: GET
- name: fetch_all_scripts
  endpoint:
    path: /scripts/fetch-all
    method: GET
    data_selector: scripts
- name: agent_launch
  endpoint:
    path: /agent//launch
    method: POST
    data_selector: output
- name: save_lead
  endpoint:
    path: /org-storage/leads/savepost
    method: POST
- name: scripts_code
  endpoint:
    path: /scripts/code
    method: GET
- name: agents
  endpoint:
    path: /agents/save
    method: POST
- name: fetch_all_lists
  endpoint:
    path: /org-storage/lists/fetch-all
    method: GET
notes:
- It is mandatory to specify an image.
- Files written on your agent's disk will be lost when it exits.
- Phantombuster can not execute TypeScript, so you need to compile it into JavaScript
  using tsc.
- When the agent is configured to retry on failure, this Number indicates how many
  times the agent will automatically be restarted in case of failure.
- In case this option is left at its default value (no retries), maxRetries is set
  to 0.
- Requires filling in email and password fields for login
- Beta feature
- This endpoint will return a 200 status code even if an error occurs.
- Webhooks requests are subject to timeouts, limiting the duration of their execution.
  The maximum timeout that can be reached by a webhook is 11 seconds.
- If the request exceeds this time limit, it is cancelled and considered a server
  error.
- When the agent is configured to retry on failure, the 'Number' indicates on which
  retry run the bot is.
- Must have set a Pushover user key in settings
- Requires installation of a Pushover client on at least one device
- API returns the country of the IP address.
- Overrides the execution time limit of the agent.
- Scripts can be private, public, or open source.
- Changes to scripts need to be released for modifications to go live.
- Starting from web-node, injectables are not preloaded on disk anymore, please use
  CDN or external URLs only if you want to inject 3rd party scripts in the page.
- New scripts should start using the new package to benefit from updated software.
- Old scripts will continue working in the previous package.
- Specify the right url
- Save a list - Beta.
- The agentId argument should be used just in case you want another agent's object.
- To get the current agent object just call buster.getAgentObject()
- Contains the proxy address currently being used by your agent as a String.
- Can be an empty string if no proxy is used at the time.
- It's recommended to first fetch the object with getAgentObject() because this method
  overwrites the whole object.
- Never share your API Key, anyone with this key could change code, call bots and
  mess with your work.
- Phantombuster's developer mode adds developer-specific advanced options across the
  app
- A Phantom is a term intended for non-technical users which designates both a script
  and an agent
- Recommended to call the method regularly, about once per minute.
- Result is cached for 10 seconds.
- This file will be only accessible from your script when it is running.
- Phantombuster has a 600kb limit on script upload. Using a bundler with too many
  dependencies might cause your script to exceed this limit.
- Use buster.save() to save screenshots to cloud storage if 'save-folder' flag is
  removed
- Beta version of save one lead API
errors:
- '400: missing parameter or something else wrong with the given parameters'
- '401: missing API key or wrong API key'
- '404: the requested object was not found (bad ID?)'
- '500: for some reason our servers could not handle your request'
- HTTP responses status code between 400 and 499 (client error response).
- Too many redirections (the maximum allowed is 2 redirections).
- Invalid redirection (such as invalid URL, use of credentials or use of IPv6 address).
- 'Could not change agent object: err'
- 'Could not get agent object: err'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.phantombuster.com/api/v2
  auth:
    type: oauth2
    location: header
    header_name: X-Phantom-Token
    flow: refresh_token
  headers:
    Accept: application/json
    Content-Type: application/json
    phantom image: web-node:v1
    User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0
  paginator: {}
source_metadata: null
