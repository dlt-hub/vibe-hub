resources:
- name: new_message
  endpoint:
    path: /messages
    method: POST
    data_selector: event
    params: {}
- name: chat_completion
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: workspace
  endpoint:
    path: /api/v1/workspace
    method: GET
- name: company_data
  endpoint:
    path: /v1/cuf
    method: POST
    data_selector: data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: account
  endpoint:
    path: /accounts/{account_id}
    method: GET
    data_selector: data
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: data
- name: components
  endpoint:
    path: /components
    method: POST
    data_selector: data
- name: event_summaries
  endpoint:
    path: /sources/{id}/event_summaries
    method: GET
    data_selector: data
- name: delete_source_events
  endpoint:
    path: /sources/{id}/events
    method: DELETE
    params:
      start_id: string
      end_id: string
- name: get_current_user_info
  endpoint:
    path: /users/me
    method: GET
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users/me
    method: GET
    data_selector: data
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
- name: workflow
  endpoint:
    path: /workflows
    method: POST
- name: workflow_update
  endpoint:
    path: /workflows/{id}
    method: PUT
- name: workflow_details
  endpoint:
    path: /workflows/{workflow_id}
    method: GET
- name: workflow_event_summaries
  endpoint:
    path: /workflows/{workflow_id}/event_summaries
    method: GET
- name: workflow_errors
  endpoint:
    path: /workflows/{workflow_id}/$errors/event_summaries
    method: GET
- name: workspace
  endpoint:
    path: /v1/workspaces/<org_id>
    method: GET
- name: workspace_accounts
  endpoint:
    path: /workspaces/<org_id>/accounts
    method: GET
- name: workspace_subscriptions
  endpoint:
    path: /workspaces/<org_id>/subscriptions
    method: GET
- name: workspace_sources
  endpoint:
    path: /orgs/<org_id>/sources
    method: GET
- name: data_importer
  endpoint:
    path: /data_importer
    method: POST
- name: data_exporter
  endpoint:
    path: /data_exporter
    method: POST
- name: HTTP Trigger
  endpoint:
    path: /projects/[project_id]/workflows/[workflow_id]/trigger
    method: POST
    data_selector: body
- name: Google Sheets
  endpoint:
    path: /sheets/[sheet_id]/rows
    method: POST
    data_selector: values
- name: New Card
  endpoint:
    path: /components/trello/new-card
    method: POST
- name: New or Modified Files
  endpoint:
    path: /components/google-drive/new-or-modified-files
    method: POST
- name: New Submission
  endpoint:
    path: /components/jotform/new-submission
    method: POST
- name: Add Multiple Rows
  endpoint:
    path: /components/google-sheets/add-multiple-rows
    method: POST
- name: Send Message
  endpoint:
    path: /components/discord/send-message
    method: POST
- name: Append Text
  endpoint:
    path: /components/google-docs/append-text
    method: POST
- name: workspace_settings
  endpoint:
    path: /api/v1/workspaces/settings
    method: GET
    data_selector: settings
    params: {}
- name: membership
  endpoint:
    path: /api/v1/workspaces/membership
    method: POST
    data_selector: members
    params: {}
- name: api_id
  endpoint:
    path: /api/v1/workspaces/api
    method: GET
    data_selector: api
    params: {}
- name: schedule_task
  endpoint:
    path: /schedule
    method: POST
- name: cancel_task
  endpoint:
    path: /cancel
    method: POST
- name: contacts
  endpoint:
    path: /contacts/batch
    method: POST
    data_selector: results
    params: {}
- name: messages
  endpoint:
    path: /getMessages
    method: GET
    params:
      limit: 100
- name: New File
  endpoint:
    path: /path/to/new/file/endpoint
    method: GET
    data_selector: updates
    params: {}
- name: create_associations
  endpoint:
    path: /crm/v3/associations/{fromObjectType}/{toObjectType}/batch/create
    method: POST
    data_selector: results
    params: {}
- name: users
  endpoint:
    path: /v1/users/me
    method: GET
- name: append_block
  endpoint:
    path: /v1/blocks/{block_id}/children
    method: PATCH
    data_selector: results
    params: {}
- name: models
  endpoint:
    path: /models
    method: GET
- name: create_image
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: completions
  endpoint:
    path: /completions
    method: POST
    data_selector: data
    params: {}
- name: create_image
  endpoint:
    path: /images/generate
    method: POST
    data_selector: data
    params: {}
- name: create_record
  endpoint:
    path: /services/data/vXX.X/sobjects/{objectType}
    method: POST
- name: users.profile
  endpoint:
    path: /users.profile.get
    method: GET
    data_selector: ok
- name: auth_test
  endpoint:
    path: /auth.test
    method: POST
    data_selector: response
- name: new_message
  endpoint:
    path: /message
    method: POST
- name: create_issue
  endpoint:
    path: /rest/api/3/issue
    method: POST
    data_selector: fields
    params: {}
- name: destination
  endpoint:
    path: /destinations
    method: POST
    data_selector: data.destination.id
    params: {}
- name: destination_subscription
  endpoint:
    path: /destination_subscriptions
    method: POST
    data_selector: data.destinationSubscription.id
    params: {}
- name: balance_transactions
  endpoint:
    path: /balance_transactions
    method: GET
    data_selector: transactions
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: invoice
    params: {}
- name: schedule_task
  endpoint:
    path: /schedule
    method: POST
- name: cancel_task
  endpoint:
    path: /cancel
    method: POST
- name: messages
  endpoint:
    path: /getMessages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: messages
  endpoint:
    path: /v1/messages
    method: POST
    data_selector: data
- name: getMe
  endpoint:
    path: /bot${this.telegram_bot_api.$auth.token}/getMe
    method: GET
- name: user_account
  endpoint:
    path: /user_account
    method: GET
- name: shop
  endpoint:
    path: /graphql.json
    method: POST
    data_selector: data.shop
    params: {}
- name: account
  endpoint:
    path: /user/account
    method: GET
    data_selector: null
    params: {}
- name: user_me
  endpoint:
    path: /api/v2/users/me/
    method: GET
- name: incident
  endpoint:
    path: /api/now/table/incident
    method: GET
    data_selector: ''
- name: me
  endpoint:
    path: /v1.0/me
    method: GET
    data_selector: ''
- name: messages
  endpoint:
    path: /messages
    method: GET
    params:
      limit: 100
- name: user_me
  endpoint:
    path: /users/@me
    method: GET
    data_selector: null
    params: {}
- name: phone_call
  endpoint:
    path: /calls
    method: POST
    data_selector: resp
- name: add_multiple_rows
  endpoint:
    path: /v4/spreadsheets.values/append
    method: POST
    data_selector: updatedRange
    params: {}
- name: messages
  endpoint:
    path: /getMessages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: user
  endpoint:
    path: /users/@me
    method: GET
    data_selector: ''
- name: send_email
  endpoint:
    path: /send
    method: POST
    data_selector: msg
    params: {}
- name: messages
  endpoint:
    path: /api/channels/{channelId}/messages
    method: GET
    data_selector: messages
    params:
      limit: 100
- name: forum_thread_messages
  endpoint:
    path: /channels/{id}/messages
    method: GET
    params:
      limit: 25
- name: threads
  endpoint:
    path: /threads
    method: GET
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    params:
      limit: 100
- name: forum_thread_message
  endpoint:
    path: /channels/{channelId}/messages
    method: GET
    params:
      limit: 25
notes:
- If the number of events emitted to a workflow exceeds the queue size, events will
  be lost.
- By default, your workflow can hold up to 100 events in its queue at once.
- Step notes are only accessible in Build mode, not in the Inspector.
- Misuse of Sensitive Personal Information is prohibited.
- You must notify us immediately of any unauthorized access to or use of your username
  or password.
- Pipedream does not knowingly collect information from or direct any of our content
  specifically to children under 16.
- Pipedream recommends using OAuth for most use cases.
- Deletion happens asynchronously, you’ll receive a 202 Accepted HTTP status code
  in response to any deletion requests.
- The Authorization header must be included on all requests.
- Free workspaces have a daily limit of free credits that cannot be exceeded
- Active workflows limited on free plan
- Credits are charged for workflow executions
- Pipedream sets limits on runtime, memory, and other execution-related properties.
- On the Free tier, Pipedream imposes a limit on the daily credits across all workflows
  and sources.
- You can increase the memory of your workflow in your workflow’s Settings.
- Paid plans can increase their queue size up to 10,000 for a given workflow.
- Pipedream is an application and workflow services platform.
- Workspace settings can be managed under the Settings navigation menu.
- 2FA can be required for all members by an admin on the Business plan.
- Pipedream securely stores and automatically refreshes the OAuth tokens so you can
  easily authenticate any Airtable API.
- If you enter a secret, pass this value in the `x-pd-secret` HTTP header when making
  requests
- You can use a custom expression that evaluates to an object for each entry in the
  array.
- You can also reference an object exported by a previous step.
- 'Note: one event is emitted for each individual commit, even if they are received
  at the same time.'
- Emit messages as a single event is optional, defaults to false
- Ignore Bot Messages is optional
- We recommend using the Pipedream **Chat** action instead of this one. It supports
  the latest `gpt-3.5-turbo` API, which is faster and 10x cheaper.
- Slack uses OAuth authentication.
- Select one or more channels to monitor for new messages.
- Ignore replies to messages in threads
- Upon confirmation, Stripe will attempt to initiate a payment.
- Webhooks deliver data to publicly accessible URLs
- Ensure sensitive data is transmitted over HTTPS
- Environment variables enable separation of secrets and static configuration data
  from code.
- Variable names are case-sensitive.
- The project-scoped variable will take priority if the same variable key exists at
  both the workspace and project level.
- Google Sheets uses OAuth authentication
- Google cannot give this app access to your account data because Advanced Protection
  is turned on for your Google Account
- Pinterest uses OAuth authentication. Pipedream securely stores and automatically
  refreshes the OAuth tokens.
- Google Calendar uses OAuth authentication. Pipedream securely stores and automatically
  refreshes the OAuth tokens.
- Shopify uses API keys for authentication.
- Create a custom app in Shopify to obtain your Admin API access token.
- MySQL uses API keys for authentication.
- Standard instructions may not apply perfectly to customized or hardened ServiceNow
  instances.
- If you face a 504 Gateway Time-out error, refer to the 'Additional Guidance For
  Hardened or Mature Instances' section for solutions.
- Defaults to emitting each Discord message as its own event in Pipedream
- Pipedream securely stores and automatically refreshes the OAuth tokens
- The default timeout is 60 seconds and the maximum is 600 seconds.
- Reset the formatting of the rows that were added (line style to none, background
  to white, foreground color to black, font size to 10, no bold, no italic, no strikethrough,
  horizontalAlignment to left).
- Discord Bot uses API keys for authentication.
- The bot must have the `MESSAGE_CONTENT` privilege intent to see the message content.
- Enables sending in test mode. For more information, see the Mailgun API documentation
- Enables or disables DKIM signatures. For more information, see the Mailgun API documentation
- Enables or disables tracking. For more information, see the Mailgun API documentation
- If `true`, all messages are emitted as an array, within a single Pipedream event.
  Defaults to `false`, emitting each Discord message as its own event in Pipedream
- You must specify either a file or a folder
errors:
- 'Event Queue Full: Events will be dropped if the queue is full.'
- '4xx: Error due to missing required parameters.'
- '5xx: Error with Pipedream’s server.'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Ensure the endpoint exists.'
- 'Quota Exceeded: Daily credits limit reached on Free tier.'
- 'Runtime Quota Exceeded: Free plan limited to 30 minutes of test runtime per day.'
- 'Timeout: Execution time limit exceeded.'
- 'Out of Memory: Memory limit exceeded.'
- 'Rate Limit Exceeded: Number of events processed exceeds limit.'
- 'Request Entity Too Large: Incoming HTTP payload size limit exceeded.'
- 'Function Payload Limit Exceeded: Combined size of logs, step exports, and event
  data exceeded 6MB.'
- 'JSON Nested Property Limit Exceeded: More than 256 nested objects.'
- 'Event Queue Full: Maximum event queue size exceeded.'
- 'Credit Budget Exceeded: Allocated Credit Budget reached.'
- 'Error parsing record (index {index}) as JSON: {err.message}'
- No Airtable record data passed to step. Please pass at least one record
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Insufficient permissions for the requested API'
- '429 Too Many Requests: Exceeded API rate limits'
- '503 Service Unavailable: HubSpot temporarily unavailable'
- '504 Gateway Timeout: Request timed out'
- Your authorization grant or refresh token is invalid, expired, or mismatched.
- The request body doesn't match the expected parameters schema.
- If your request lacks the required `Notion-Version` header, try adding a new Notion
  step in Pipedream.
- If your API token is invalid, reconnect your Notion account to Pipedream.
- Your API token doesn't have permission to perform this operation.
- The requested resource doesn't exist or isn't shared with your API token.
- A conflict occurred, possibly due to outdated parameters.
- You've exceeded the number of allowed requests.
- An unexpected error has occurred.
- Notion had a problem processing your request.
- Notion is temporarily unavailable.
- Notion's database cannot be queried at the moment.
- Your request to Notion timed out.
- 'REQUEST_LIMIT_EXCEEDED: Pace your requests. Read the OpenAI Rate limit guide.'
- '401 Unauthorized: Ensure the correct API key and requesting organization are being
  used.'
- invalid_parameters
- '404 Not Found: Resource does not exist'
- '405 Method Not Allowed: Check HTTP verb used'
- '422 Unprocessable Entity: Check request payload validity'
- '429 Too Many Requests: Exceeding rate limits'
- '401 Unauthorized: Check API token or permissions'
- '500 Internal Server Error: Contact customer support'
- Google cannot give this app access to your account data because Advanced Protection
  is turned on for your Google Account
- 'Invalid API key: Ensure the API key is copied correctly from your SendGrid console'
- 'Malformed request: Check for missing data or malformed email addresses'
- 'Unverified sender: Use a verified email address or verify the email address'
- Request is missing a required parameter or has an invalid parameter.
- Request is lacking required authentication information.
- The request contains valid authentication information, but does not have permissions
  to perform the specified action.
- The requested resource doesn't exist.
- The requested resource doesn't support the provided HTTP method, e.g., DELETE.
- The request conflicts with the current state of the server.
- The requested content has been permanently deleted from Klaviyo’s server.
- The Content-Type or Content-Encoding header is set incorrectly.
- You hit the rate limit for this endpoint (different endpoints have different rate
  limits).
- Something is wrong with the destination server.
- Something is wrong on Klaviyo’s end leading to service unavailability.
- '403: Permission denied'
- '409: Conflict with resource'
- '422: Unprocessable entity'
- '429: Rate limit exceeded'
- '500: Internal server error'
- '503: Service unavailable'
- Rows data is not an array of arrays.
- You must specify either a file or a folder
auth_info:
  mentioned_objects:
  - Vendor
  - Controller
  - Subprocessor
  - oauth_access_token
  - oauth
  - User.Read
  - email
  - offline_access
  - openid
  - profile
  - Chat.Read
  - Chat.ReadWrite
  - ChatMessage.Send
  - Channel.ReadBasic.All
  - ChannelMessage.Read.All
  - ChannelMessage.Send
  - Team.ReadBasic.All
  - Schedule.Read.All
client:
  base_url: https://discord.com/api
  auth:
    type: apikey
    location: header
    header_name: Authorization
    flow: authorization_code
    token_url: https://discord.com/api/oauth2/token
    client_id: '{{oauth.client_id}}'
    client_secret: '{{oauth.client_secret}}'
    refresh_token: '{{oauth.refresh_token}}'
  headers:
    Accept: application/json
    Content-Type: application/json
    content-type: application/json
    Notion-Version: '2021-08-16'
    Authorization: Bearer ${this.microsoft_teams.$auth.oauth_access_token}
    anthropic-version: '2023-06-01'
    revision: '2023-12-15'
    accept: application/json
  paginator:
    default_page_size: 25
    type: cursor
    page_size_param: limit
  props:
    tableName:
      type: common.props.tableName.type
      label: common.props.tableName.label
      description: common.props.tableName.description
    keyPrimaryAttributeName: common.props.keyPrimaryAttributeName
    keyPrimaryAttributeType: common.props.keyPrimaryAttributeType
    keySecondaryAttributeName:
      reloadProps: true
    billingMode:
      reloadProps: true
    streamSpecificationEnabled:
      reloadProps: true
    parent:
      propDefinition:
      - notion
      - pageId
    title:
      propDefinition:
      - notion
      - title
    metaTypes:
      propDefinition:
      - notion
      - metaTypes
    pageContent:
      propDefinition:
      - notion
      - pageContent
    myPropName:
      type: ''
      optional: true
source_metadata: null
