resources:
- name: devices
  endpoint:
    path: /Devices
    method: GET
- name: device
  endpoint:
    path: /Devices/{deviceId}
    method: GET
- name: device_status
  endpoint:
    path: /Devices/{deviceId}/status
    method: GET
    data_selector: sensorMeasurements
    params: {}
- name: calibration_certificate
  endpoint:
    path: /public/v3/Devices//calibrationCertificate
    method: GET
    data_selector: link
- name: downloadCalibrationCertificate
  endpoint:
    path: /Devices//downloadCalibrationCertificate/
    method: GET
    data_selector: ''
- name: location
  endpoint:
    path: /public/v3/Locations/{locationId}
    method: GET
    data_selector: records
    params: {}
- name: shipment_templates
  endpoint:
    path: /public/v3/ShipmentTemplates
    method: GET
    data_selector: records
- name: shipment_template
  endpoint:
    path: /public/v3/ShipmentTemplates/{shipmentTemplateId}
    method: GET
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: /public/v3/Users/{userId}
    method: GET
    data_selector: user
- name: Users
  endpoint:
    path: /Users
    method: GET
- name: webhook
  endpoint:
    path: /public/v3/Webhooks/{webhookId}
    method: GET
    data_selector: data
    params: {}
- name: shipment
  endpoint:
    path: /Shipments/{shipmentId}
    method: GET
- name: carrier
  endpoint:
    path: /Carriers/{carrierId}
    method: GET
    data_selector: ''
    params: {}
- name: shipment_status
  endpoint:
    path: /Shipments/{shipmentId}/status
    method: GET
    data_selector: ''
- name: shipment_comments
  endpoint:
    path: /public/v3/Shipments/{shipmentId}/comments
    method: GET
    data_selector: comments
    params: {}
- name: user
  endpoint:
    path: /public/v3/Users/{userId}
    method: GET
    data_selector: user
- name: Accounts
  endpoint:
    path: /Accounts
    method: GET
- name: account
  endpoint:
    path: /public/v3/Accounts/{accountId}
    method: GET
    data_selector: account
- name: account_status
  endpoint:
    path: /public/v3/Accounts//status
    method: PATCH
- name: devices
  endpoint:
    path: /public/v3/devices
    method: GET
    data_selector: data
- name: single_device
  endpoint:
    path: /public/v3/devices/{deviceId}
    method: GET
    data_selector: data
- name: update_device
  endpoint:
    path: /public/v3/devices/{deviceId}
    method: PATCH
    data_selector: data
- name: add_alert_presets
  endpoint:
    path: /public/v3/devices/{deviceId}/addAlertPresets
    method: PATCH
    data_selector: data
- name: remove_alert_presets
  endpoint:
    path: /public/v3/devices/{deviceId}/removeAlertPresets
    method: PATCH
    data_selector: data
- name: device_alerts
  endpoint:
    path: /GetDeviceAlerts
    method: GET
- name: device_status
  endpoint:
    path: /RetrieveDeviceStatus
    method: GET
- name: alert_preset
  endpoint:
    path: /public/v3/AlertPresets/{alertPresetId}
    method: GET
    data_selector: ''
    params: {}
- name: shipment_templates
  endpoint:
    path: /public/v3/shipmentTemplates
    method: GET
    data_selector: data
    params:
      incremental: shipmentTemplateId
- name: create_shipment
  endpoint:
    path: /public/v3/shipments
    method: POST
    data_selector: shipment
    params: {}
- name: start_shipment
  endpoint:
    path: /public/v3/shipments/{publicShipmentId}/start
    method: PATCH
    data_selector: start
    params: {}
- name: complete_shipment
  endpoint:
    path: /public/v3/shipments/{publicShipmentId}/complete
    method: POST
    data_selector: complete
    params: {}
- name: list_shipments
  endpoint:
    path: /api/v1/shipments
    method: GET
    data_selector: shipments
    params: {}
- name: retrieve_shipment
  endpoint:
    path: /api/v1/shipments/{publicShipmentId}
    method: GET
    data_selector: shipment
    params: {}
- name: update_shipment
  endpoint:
    path: /api/v1/shipments/{shipmentId}
    method: PUT
    data_selector: updated_shipment
    params: {}
- name: shipment_tracker_data
  endpoint:
    path: /shipment/tracker
    method: GET
    data_selector: sensor_data
    params: {}
- name: shipment_alerts
  endpoint:
    path: /shipment/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: shipment_status
  endpoint:
    path: /shipment/status
    method: GET
    data_selector: status
    params: {}
- name: add_shipment_collaborators
  endpoint:
    path: /public/v3/collaborators/shipments/{publicShipmentId}/add
    method: PUT
    data_selector: collaborators
    params: {}
- name: remove_shipment_collaborators
  endpoint:
    path: /v3/collaborators/shipments/{publicShipmentId}/remove
    method: PUT
    data_selector: emailAddresses
    params: {}
- name: alert_preset
  endpoint:
    path: /public/v3/alertpresets/{alertPresetId}
    method: GET
    data_selector: data
- name: list_alert_presets
  endpoint:
    path: /public/v3/alertpresets
    method: GET
    data_selector: data
- name: update_alert_preset
  endpoint:
    path: /public/v3/alertpresets
    method: PUT
    data_selector: data
- name: standardized_carriers
  endpoint:
    path: /public/v3/carriers/standardizedCarriers
    method: GET
    data_selector: data
    params:
      mode: Ocean
- name: create_carrier
  endpoint:
    path: /v3/carriers
    method: POST
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /api/webhooks
    method: POST
    data_selector: webhook
    params:
      applyToAllTrackers: true
- name: carrier_contact
  endpoint:
    path: /public/v3/CarrierContacts/{carrierContactId}
    method: GET
    data_selector: ''
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
notes:
- Tokens are currently set to have a lifetime of 1 hour.
- Timestamps in the Tive public API are all represented as string (ISO 8601 format)
  in the UTC timezone.
- In some rare instances you may also run into a Unix timestamp.
- Tive API utilizes rate limiting of 100 requests per minute per account per endpoint.
- If over limit, response will be a 429 Too Many Requests error code.
- 'Transmission interval values are limited to the following: 5, 10, 20, 30, 60, 120,
  360, 720 and 1440 minutes'
- 'Measurement interval values are limited to the following: 5, 10, 20, 30, 60, 120,
  360, 720 minutes'
- The Measurement Interval shall be less or equal to the Transmission interval
- Shipment templates only require a template name and mode for each shipment leg specified
  for creation.
- A device must be attached to start a shipment.
- You can specify a device when creating or starting a shipment.
- Role names can be Viewer, Contributor, or Editor.
- Certain alert triggers provide the ability to trigger only once a condition has
  persisted for a certain amount of time.
- A minimum of one of the fields isActiveAtOrigin, isActiveInTransit, or isActiveAtDestination
  must be set to true when adding a trigger to an alert preset.
- Webhook requests will originate from the source IP address 34.195.102.163
- It is recommended to use an HTTPS (SSL) endpoint to receive messages for secure
  delivery
- 'At least one of these fields must be set to true: applyToAllTrackers, applyToAllShipments,
  applyToAllAlertPresets.'
- Custom templates can be created for webhooks. However, it is recommended to create
  these via the Tive Platform, not public API.
- Webhook signatures can be verified to ensure requests are legitimate.
- The x-tive-signature header contains a timestamp and a Base64 encoded HMAC SHA-256
  hash.
- Using our webhook 'test' functionality within the Platform
- Using a HTTP/API debugging tool such as Postman or cURL
errors:
- '401 Unauthorized: The token expired'
- '400: Bad Request. Tive cannot or will not process the request due to a client error.
  Common reasons include malformed requested, size too large, invalid request message
  framing, or deceptive request routing. Omitting the `x-tive-account-id` header on
  an endpoint which requires it will also result in 400 errors.'
- '401: Unauthorized. The request cannot be completed as the user doesn''t have the
  proper permissions.'
- '403: Forbidden. The client does not have access rights to the content. A common
  reason for this is specifying an incorrect account id (an account ID your API credentials
  do not have access to) in the `x-tive-account-id` header.'
- '429: Too Many Requests. You have made too many requests within the allotted time.'
- '5XX: Internal Server Error. Tive servers are currently having an issue.'
- '429 Too Many Requests: You have exceeded rate limits for this endpoint.'
- '400 Bad Request: Check required fields.'
- '401 Unauthorized: Recheck OAuth token.'
- '404 Not Found: Shipment not found.'
- '400 Bad Request: The signature is invalid.'
- '200 OK: The signature is valid.'
- '408: Indicates the URL you''ve specified may have a mistake in it, or network access
  to the server is being blocked'
- '200: The server received the message successfully'
- '401 or 403: There is an authentication issue and your server does not believe the
  message is from a trusted source'
- 'Other 400-499 codes: There''s something else wrong with the request'
- '500-599: Your server is encountering an unexpected error'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.tive.com/public/v3/<endpoint>
  auth:
    type: oauth2
    flow: client_credentials
    token_url: https://api.tive.com/public/v3/authenticate
    client_id: your-client-id
    client_secret: your-client-secret
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Content-Type: multipart/form-data
    x-tive-account-id: ''
    content-type: application/json
  paginator:
    type: page
    page_size_param: pageSize
    default_page_size: 50
source_metadata: null
