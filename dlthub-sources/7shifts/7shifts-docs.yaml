resources:
- name: employment_records
  endpoint:
    path: /v2/company//employment_records
    method: GET
    data_selector: records
    params: {}
- name: labor_settings
  endpoint:
    path: /company//labor_settings
    method: GET
    data_selector: data
    params: {}
- name: inactive_reasons
  endpoint:
    path: /company//inactive_reasons
    method: GET
    data_selector: data
    params: {}
- name: locations
  endpoint:
    path: /company//locations
    method: GET
    data_selector: data
    params: {}
- name: time_punches
  endpoint:
    path: /company/1234/time_punches
    method: GET
    data_selector: data
    params:
      limit: 20
- name: locations
  endpoint:
    path: /company//locations/
    method: GET
    data_selector: data
    params: {}
- name: departments
  endpoint:
    path: /v2/company//departments
    method: GET
    data_selector: data
    params: {}
- name: department
  endpoint:
    path: /company//departments/
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /company//roles
    method: GET
    data_selector: data
- name: roles
  endpoint:
    path: /v2/company//roles/
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /company//users
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /company//users/
    method: GET
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /contacts/{identifier}
    method: GET
- name: authorized_locations
  endpoint:
    path: /company/{company_id}/users/{user_id}/authorized_locations
    method: GET
- name: user_wages
  endpoint:
    path: /company//users//wages
    method: GET
    data_selector: data.current_wages
    params: {}
- name: assignments
  endpoint:
    path: /v2/company//users//assignments
    method: GET
    data_selector: data
    params: {}
- name: location_assignments
  endpoint:
    path: /company//users//location_assignments
    method: GET
    data_selector: data
    params: {}
- name: department_assignments
  endpoint:
    path: /company//users//department_assignments
    method: GET
    data_selector: data
    params: {}
- name: role_assignments
  endpoint:
    path: /v2/company//users//role_assignments
    method: GET
    data_selector: data
    params: {}
- name: shifts
  endpoint:
    path: /company//shifts
    method: GET
    data_selector: data
- name: shifts
  endpoint:
    path: /company//shifts/
    method: GET
    data_selector: data
    params: {}
- name: scheduled_shift
  endpoint:
    path: /company//shifts_scheduled/
    method: GET
    data_selector: data
    params: {}
- name: time_punches
  endpoint:
    path: /company//time_punches
    method: GET
    data_selector: data
    params: {}
- name: time_punches
  endpoint:
    path: /company//time_punches/
    method: GET
    data_selector: data
    params: {}
- name: receipts
  endpoint:
    path: /company//receipts
    method: GET
    data_selector: data
    params: {}
- name: receipts
  endpoint:
    path: /company//receipts/
    method: GET
    data_selector: data
- name: receipts_summary
  endpoint:
    path: /company//receipts_summary
    method: GET
    data_selector: data
    params: {}
- name: external_user_mappings
  endpoint:
    path: /company/{company_id}/external_user_mappings/{identifier}
    method: GET
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /company//events
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /company//events/
    method: GET
    data_selector: data
    params: {}
- name: hours_and_wages
  endpoint:
    path: /v2/reports/hours_and_wages
    method: GET
    data_selector: users
    params:
      location_id: ''
- name: daily_sales_and_labor
  endpoint:
    path: /reports/daily_sales_and_labor
    method: GET
    data_selector: data
    params: {}
- name: daily_stats
  endpoint:
    path: /company/{company_id}/location/{location_id}/daily_stats
    method: GET
- name: day_part_settings
  endpoint:
    path: /company/{company_id}/day_part/settings
    method: GET
- name: time_punches
  endpoint:
    path: /time_punches
    method: GET
    data_selector: data
    params: {}
- name: locations
  endpoint:
    path: /locations/98765
    method: GET
    data_selector: timezone
    params: {}
- name: time_punch
  endpoint:
    path: /time_punches
    method: GET
    data_selector: data
    params: {}
- name: companies
  endpoint:
    path: /v2/companies
    method: GET
    data_selector: records
- name: whoami
  endpoint:
    path: /v2/whoami
    method: GET
    data_selector: identify_id
- name: receipts
  endpoint:
    path: /v2/company/12345/receipts
    method: POST
    data_selector: receipt
    params: {}
- name: receipts
  endpoint:
    path: /v2/company/{company_id}/receipts/ext:{location_id}:{receipt_id}
    method: PUT
    data_selector: 'null'
    params: {}
- name: time_punch
  endpoint:
    path: /time_punches
    method: POST
    data_selector: data
    params: {}
- name: time_punches
  endpoint:
    path: /company/1234/time_punches
    method: PUT
    data_selector: data
- name: time_punch
  endpoint:
    path: /company/1234/time_punches/{id}
    method: PUT
    data_selector: data
    params: {}
- name: shifts_scheduled
  endpoint:
    path: /v2/company/1234/shifts_scheduled
    method: GET
    params: {}
- name: shifts
  endpoint:
    path: /company/1234/shifts
    method: GET
    data_selector: shifts
    params:
      limit: '250'
      start[lte]: '2024-08-20T00:00:00Z'
      start[gte]: '2024-08-21T00:00:00Z'
- name: users
  endpoint:
    path: /v2/company/1234/users
    method: POST
    data_selector: status
    params: {}
- name: role_assignments
  endpoint:
    path: /api/v2/company/1234/users/1111/role_assignments
    method: POST
    data_selector: status
    params: {}
- name: wages
  endpoint:
    path: /v2/company/12345/users/1111/wages
    method: POST
    data_selector: status
    params: {}
- name: users
  endpoint:
    path: /v2/company/{company_id}/users/{user_id}
    method: PUT
    data_selector: ''
    params: {}
- name: location_assignments
  endpoint:
    path: /api/v2/company/{company_id}/users/{user_id}/location_assignments
    method: POST
    data_selector: ''
    params: {}
- name: department_assignments
  endpoint:
    path: /api/v2/company/{company_id}/users/{user_id}/department_assignments
    method: POST
    data_selector: ''
    params: {}
- name: role_assignments
  endpoint:
    path: /api/v2/company/{company_id}/users/{user_id}/role_assignments
    method: POST
    data_selector: ''
    params: {}
- name: wages
  endpoint:
    path: /v2/company/{company_id}/users/{user_id}/wages
    method: POST
    data_selector: ''
    params: {}
- name: remove_department_assignment
  endpoint:
    path: /api/v2/company/{company_id}/users/{user_id}/department_assignments/{assignment_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params:
      limit: 50
- name: user_assignments
  endpoint:
    path: /company/{company_id}/users/{user_id}/assignments
    method: GET
    data_selector: data
    params: {}
- name: wages
  endpoint:
    path: /company/1234/users/{user_id}/wages
    method: GET
    data_selector: data.current_wages
    params: {}
- name: labor_settings
  endpoint:
    path: /company/1234/labor_settings
    method: GET
    data_selector: wage_based_roles_enabled
    params: {}
- name: employment_records
  endpoint:
    path: /company/{company_id}/employment_records
    method: GET
    data_selector: data
    params:
      user_ids: ''
- name: create_employment_record
  endpoint:
    path: /company/{company_id}/employment_records
    method: POST
    data_selector: data
    params: {}
- name: update_employment_record
  endpoint:
    path: /company/{company_id}/employment_record/{uuid}
    method: PUT
    data_selector: data
    params: {}
- name: delete_employment_record
  endpoint:
    path: /company/{company_id}/employment_record/{uuid}
    method: DELETE
    data_selector: ''
- name: bulk_create_employment_records
  endpoint:
    path: /company/{company_id}/bulk_employment_records
    method: POST
    data_selector: data
    params: {}
- name: hours_and_wages
  endpoint:
    path: /reports/hours_and_wages
    method: GET
    params:
      company_id: '1234'
      from: '2022-12-01'
      to: '2022-12-07'
      location_id: '7890'
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
notes:
- The user wage endpoint only shows when it was modified and not by whom.
- The user modified endpoint doesn't provide details on who modified the user and
  what was modified to track this.
- Webhooks are restricted to Gourmet plans.
- This webhook will be triggered when a user is deactivated.
- Access tokens provide admin level access, are long lived, and are simple to implement.
- Bearer authentication scheme is used to send the token.
- 7shifts will release a new API version every 3 months at the beginning of the quarter.
- Stable versions are supported for a minimum of 12 months and will include security
  updates only.
- Set the scope to v1_access companies:read companies:write locations:read locations:write
  users:read users:write departments:read departments:write roles:read roles:write
  sales:read sales:write shifts:read shifts:write time_punches:read time_punches:write
  events:read events:write
- 'Minimum Plan Required: Comp'
- 'Minimum Plan Required: Entr√©e'
- 'Minimum Plan Required: The Works'
- The Hours & Wages reports can take a significant amount of time to create and can
  result in 500 errors due to time outs.
- It is recommended to always include a location_id to minimize the number of locations
  in the report.
- If you still receive a time out error, it is recommended to shorten the report period
  to a single week.
- You will require an HTTP endpoint that can accept unauthenticated webhook requests
  with a POST method.
- Webhooks configured by 7shifts may include header information to help you determine
  which event and event they are for.
- Plan RestrictedCompany level webhooks require a Gourmet plan or higher.
- It is recommend that before you add a webhook your application receiving the notification
  is functional.
- Delays or timeouts can result in delayed delivery of subsequent webhooks.
- Access to 7shifts API is restricted to certain plans.
- A minimum plan check will be conducted based on the data access needs of your integration.
- 7punches app requires Android 5.0 (API level 21)
- You may only make 10 requests per second per token across all API endpoints.
- Schedule synchronization between 08:00:00 UTC and 15:00:00 UTC on the day of or
  the day before payroll processing.
- Integration should calculate hours worked excluding unpaid breaks.
- Admin should have option to include/exclude breaks for payroll processing.
- Bearer tokens expire after 1 hour.
- To confirm your access token is valid, use the test endpoint.
- You may only make 10 requests per second per Access Token across all API endpoints.
- Receipt creation is asynchronous and may take up to 5 minutes before a receipt can
  be updated.
- The request URL requires you to specify the ext prefix and location ID when using
  your systems receipt id.
- We currently don't support deleting a receipt, so a PUT request is used to set the
  receipt total to 0 and receipt status to voided or deleted.
- This service must only be called between 08:00:00 UTC and 15:00:00 UTC following
  the integration being set up and a location being mapped.
- Please do not make more than 10 requests per second per token.
- This tactic should only be used for the historical data push, and not with regular
  receipts being sent over to 7shifts.
- Interval overrides are only available in V1 endpoints.
- The broader the time intervals, hourly or daily, the less accurate the Optimal Labor
  Tool forecasts will be.
- The optional parameters are currently not supported in tip pools.
- Mapping status is unmapped or ignored when the employee‚Äôs profile isn‚Äôt correctly
  mapped to a 7shifts user_id.
- You may only make 10 requests per second per access token across all API endpoints
- You must create time punch data in 7shifts in near-real time for clients to be able
  to use the labor integration to its full extent
- Ensure correct 'department_id' & 'location_id' associated with the 'role_id'.
- The 'date' & 'clocked_in' fields should have the same values used in the original
  POST request to create the punch.
- Employees should not be allowed to start another break if they haven‚Äôt returned
  from their previous break yet.
- You may only make 10 requests per second per access token across all API endpoints.
- You must make these requests in real-time at the time a user tries to clock-in.
- The grace period must be specified as a URL parameter in every request.
- The grace period cannot be defined any higher than 60 minutes.
- You must implement role mapping & employee mapping to implement the following integration.
- You may also want to allow the admin/manager in your system to decide whether to
  prevent late clock-ins or not.
- Use the `deleted=true` query filter to retrieve deleted shifts.
- Use the `draft=true` query filter to retrieve unpublished shifts.
- Do not combine the `deleted=true` and `draft=true` query filters in a single request.
- Only profiles with the 7shifts user type Employee can be created.
- The default limit is 100 users with a maximum of 500
- Active filtering is currently only available on the V1 /users endpoint.
- You might come across some rare cases where a role has a null department_id.
- You may only make 10 requests per second, per access token, across all API endpoints
- The daily sales & labor report requires that you have an active POS sales integration,
  and are using 7punches or have a POS integration with Actual Labor enabled
- Reports are offered as a paid add-on and are subject to plan requirements
- User of this endpoint is restricted to The Works or higher 7shifts plan.
- It is recommended to use a maximum range of 1 or 2 week for the report.
- If the value of `salaried` is `true` then the user has a salaried wage type. If
  the value is `false` the user has an hourly wage type.
- The use of this endpoint is restricted to The Works or higher 7shifts plan.
- HTTP requests have a maximum time of 30 seconds to complete execution.
- It is recommended to use a maximum range of 4 weeks for the report.
errors:
- '400: Missing true or false value for ''approved'''
- '400 Bad Request: Often missing a required parameter.'
- '401 Unauthorized: No valid API key provided.'
- '402 Request failed: Parameters were valid but request failed.'
- '404 Not found: Often missing a required parameter.'
- '429 Too Many Requests: You have exceeded the rate limit of 600 requests per minute.
  If the limit is exceeded you will be blocked for 1 minute.'
- '500, 502, 503, 504 Server errors: Something went wrong on 7shifts'' end.'
- '500: Internal Server Error'
- '502: Bad Gateway'
- '403 Forbidden: Plan requirement check fails.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Duplicate receipt for this date/time: The receipt_id specified is the same as another
  receipt for the same location.'
- 'Duplicate receipt for this date/time: The receipt_date specified has the exact
  same date, hour, minute & second as an existing receipt at the same location.'
- 'validation_error: User with name John Smith or email [email protected] already
  exists'
- 'validation_error: User is assigned to a department without being assigned to that
  department''s location.'
- '500: Request timeout error, try shortening the report time range.'
- '502: Request timeout error, try shortening the report time range.'
- '500: timeout error'
- '502: timeout error'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.7shifts.com/v2
  headers:
    Accept: application/json
    Content-Type: application/json
    x-api-version: '2022-05-01'
    x-company-guid: '{GUID}'
  paginator:
    type: cursor
    cursor_path: meta.cursor.next
    cursor_param: cursor
    page_size_param: limit
    default_page_size: 50
  auth:
    type: oauth2
    token_url: https://app.7shifts.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    flow: client_credentials
    location: header
    header_name: Authorization
  resources:
  - name: locations
    endpoint:
      path: /locations
      method: GET
  - name: departments
    endpoint:
      path: /departments
      method: GET
  - name: roles
    endpoint:
      path: /roles
      method: GET
  - name: users
    endpoint:
      path: /users
      method: GET
  - name: activate_employee
    endpoint:
      path: /company/1234/users/{user_id}
      method: PUT
      data_selector: active
      params: {}
  - name: deactivate_employee
    endpoint:
      path: /company/1234/users/{user_id}
      method: DELETE
      data_selector: inactive_reason
      params: {}
  - name: inactive_reasons
    endpoint:
      path: /company/1234/inactive_reasons
      method: GET
      data_selector: data
      params: {}
source_metadata: null
