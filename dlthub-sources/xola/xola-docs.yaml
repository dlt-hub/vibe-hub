resources:
- name: delete_form
  endpoint:
    path: /api/forms/
    method: DELETE
- name: user_preferences_review
  endpoint:
    path: /api/users/:id/preferences/review
    method: DELETE
- name: check_in_guests
  endpoint:
    path: /orders//checkInGuests
    method: POST
    data_selector: null
    params: {}
- name: schedules
  endpoint:
    path: /experiences//schedules
    method: POST
    data_selector: ''
    params: {}
- name: delete_attachment
  endpoint:
    path: /api/experiences//attachments/
    method: DELETE
- name: guide
  endpoint:
    path: /api/sellers//guides
    method: POST
- name: availability
  endpoint:
    path: /api/experiences/{id}/availability
    method: GET
- name: installation_details
  endpoint:
    path: /installations/
    method: GET
- name: coupon_code
  endpoint:
    path: /coupons//codes/
    method: GET
- name: waiver
  endpoint:
    path: /v1/waivers
    method: GET
    data_selector: data
    params: {}
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
    params: {}
- name: coupon
  endpoint:
    path: /api/coupons/
    method: GET
    data_selector: coupon
- name: buttons
  endpoint:
    path: /buttons
    method: GET
- name: terms
  endpoint:
    path: /api/experiences//terms
    method: DELETE
- name: unassign_guide
  endpoint:
    path: /api/events//guides/
    method: DELETE
- name: coupons
  endpoint:
    path: /api/coupons
    method: POST
- name: add_affiliate
  endpoint:
    path: /api/orders//addAffiliate
    method: POST
- name: experience_demographic
  endpoint:
    path: /path/to/experience_demographic
    method: GET
    data_selector: records
    params: {}
- name: packages
  endpoint:
    path: /packages/
    method: PUT
    data_selector: null
    params: null
- name: resource
  endpoint:
    path: /api/resources/
    method: GET
- name: experience_demographic
  endpoint:
    path: /demographics
    method: POST
- name: plugin_details
  endpoint:
    path: /plugins/{id}
    method: GET
    data_selector: details
    params: {}
- name: buttons
  endpoint:
    path: /api/buttons
    method: GET
    data_selector: buttons
    params:
      seller: <seller-id>
- name: users_me
  endpoint:
    path: /api/users/me
    method: GET
    data_selector: user
- name: preferences_language
  endpoint:
    path: /users//preferences/language
    method: POST
- name: guest_data
  endpoint:
    path: /api/orders/{id}/guestsData/{responseId}
    method: PUT
    data_selector: null
    params: {}
- name: user_preferences
  endpoint:
    path: /api/users/:id/preferences/review
    method: POST
- name: experience
  endpoint:
    path: /api/experiences
    method: GET
    data_selector: experiences
- name: prepare_order
  endpoint:
    path: /orders/prepare
    method: POST
- name: media
  endpoint:
    path: /packages//medias/
    method: GET
- name: payment_methods
  endpoint:
    path: /users//paymentMethods/
    method: PUT
- name: coupons_codes
  endpoint:
    path: /api/coupons//codes
    method: GET
- name: resource_update
  endpoint:
    path: /api
    method: PUT
    data_selector: null
    params: {}
- name: add_on
  endpoint:
    path: /add-ons
    method: GET
    data_selector: add_ons
- name: cancel_order
  endpoint:
    path: /api/orders//cancel
    method: POST
    data_selector: null
    params: {}
- name: inventory
  endpoint:
    path: /inventory
    method: GET
    data_selector: resources
    params: {}
- name: seller_demographic
  endpoint:
    path: /api/demographics/
    method: DELETE
- name: buttons
  endpoint:
    path: /api/buttons/
    method: DELETE
- name: buttons
  endpoint:
    path: /api/buttons
    method: GET
- name: packages
  endpoint:
    path: /packages/{id}
    method: GET
- name: experiences
  endpoint:
    path: /experiences
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: demographics
  endpoint:
    path: /demographics
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: affiliate
  endpoint:
    path: /api/v1/affiliates
    method: GET
    data_selector: affiliates
    params: {}
- endpoint:
    path: /api/gifts/:id/charge
    method: POST
- name: demographic
  endpoint:
    path: /demographics/{id}
    method: GET
- name: capacity
  endpoint:
    path: /api/experiences//capacity/
    method: GET
- name: checkout_preferences
  endpoint:
    path: /users//preferences/checkout
    method: POST
- name: price_scheme
  endpoint:
    path: /priceSchemes
    method: GET
    data_selector: priceSchemes
    params: {}
- name: attachments
  endpoint:
    path: /uploads/documents/experiences
    method: GET
    data_selector: attachments
    params: {}
- name: affiliate_transaction
  endpoint:
    path: /api/users//affiliates//collect
    method: POST
- name: orders
  endpoint:
    path: /{id}/tags
    method: POST
- name: supported_languages
  endpoint:
    path: /users//preferences/language/supportedLanguages
    method: POST
    data_selector: ''
- name: user_metadata
  endpoint:
    path: /api/users/:id/meta
    method: POST
- name: user_metadata_delete
  endpoint:
    path: /api/users/:id/meta/:property
    method: DELETE
- name: user_private
  endpoint:
    path: /api/users/:id
    method: GET
    params:
      private: 'true'
- name: webhook
  endpoint:
    path: /api/users//hooks
    method: POST
- name: orders
  endpoint:
    path: /orders/{id}
    method: GET
- name: media_item
  endpoint:
    path: /media/items
    method: GET
    data_selector: items
    params: {}
- name: decrease_gift_balance
  endpoint:
    path: /api/gifts/:id/decrease
    method: POST
- name: guestsData
  endpoint:
    path: /api/orders/:id/guestsData
    method: POST
- name: questions
  endpoint:
    path: /api/orders/{id}/questions
    method: GET
- name: attachments
  endpoint:
    path: /experiences//attachments
    method: POST
    data_selector: attachment
    params: {}
- name: experiences
  endpoint:
    path: /api/experiences
    method: POST
- name: events
  endpoint:
    path: /events
    method: PUT
    data_selector: null
    params: {}
- name: commit_order_hold
  endpoint:
    path: /api/orders/{id}/commit
    method: POST
    data_selector: ''
    params: {}
- name: media
  endpoint:
    path: /packages//medias
    method: POST
    data_selector: media
    params:
      qqfile: file
- name: checkout_preferences
  endpoint:
    path: /users//preferences/checkout
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: availability
  endpoint:
    path: /availability
    method: GET
    data_selector: availability_info
    params: {}
- name: users
  endpoint:
    path: /users/{userId}
    method: GET
- name: webhooks
  endpoint:
    path: /users/{userId}/hooks/{hookId}
    method: GET
- name: blackoutSchedules
  endpoint:
    path: /users//blackoutSchedules
    method: POST
- name: checkout
  endpoint:
    path: /checkout.js
    method: GET
    data_selector: script
    params: {}
- name: questions
  endpoint:
    path: /orders//questions
    method: POST
    data_selector: questions
    params: {}
- name: package
  endpoint:
    path: /api/packages
    method: POST
- name: blackoutSchedules
  endpoint:
    path: /users//blackoutSchedules/
    method: PUT
    data_selector: ''
    params: {}
- name: decrease_booking
  endpoint:
    path: /orders//decrease
    method: POST
    data_selector: null
    params:
      refund: 'true'
- name: event
  endpoint:
    path: /events/{id}
    method: GET
- name: refund_gift
  endpoint:
    path: /gifts/:id/refund
    method: POST
    data_selector: ''
    params: {}
- name: experiences
  endpoint:
    path: /api/experiences
    method: GET
    data_selector: data
    params:
      seller: SELLER_ID
      waiverPreference_remoteSystem: <plugin_user_id>
- name: waivers
  endpoint:
    path: /api/waivers
    method: POST
    data_selector: data
- name: waiver_templates
  endpoint:
    path: /api/waiver_templates
    method: GET
    data_selector: data
- name: preferences
  endpoint:
    path: /api/users/:id/preferences/review
    method: DELETE
    data_selector: null
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: refund
  endpoint:
    path: /orders//refund
    method: POST
    data_selector: null
    params: {}
- name: event_note
  endpoint:
    data_selector: notes
    params: {}
- name: experiences
  endpoint:
    path: /experiences
    method: GET
- name: payment_methods
  endpoint:
    path: /payment_methods
    method: POST
- name: users
  endpoint:
    path: /users
    method: GET
- name: attachments
  endpoint:
    path: /api/experiences//attachments/
    method: PUT
- name: coupons
  endpoint:
    path: /api/coupons
    method: GET
    data_selector: returns a list of your coupons
    params: {}
- name: schedules
  endpoint:
    path: /experiences//schedules
    method: PUT
- name: triggers
  endpoint:
    path: /triggers
    method: GET
    data_selector: triggers
- name: rewards
  endpoint:
    path: /rewards
    method: GET
    data_selector: rewards
- name: installation
  endpoint:
    path: /installation
    method: GET
    data_selector: installation
    params: {}
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: addOn
  endpoint:
    path: /api/experiences//addOns
    method: POST
- name: order_questions
  endpoint:
    path: /orders//questions
    method: GET
    data_selector: ''
- name: affiliate
  endpoint:
    path: /api/users//affiliates/
    method: DELETE
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: User
  endpoint:
    path: /users
    method: GET
    data_selector: creditCards
    params:
      private: 'true'
- name: demographics
  endpoint:
    path: /demographics/
    method: PUT
    data_selector: ''
    params: {}
- name: form
  endpoint:
    path: /api/forms/{id}
    method: GET
    data_selector: details
    params: {}
- name: guide_status
  endpoint:
    path: /events/guides/
    method: PUT
- name: payment_methods
  endpoint:
    path: /api/payment_methods
    method: GET
    data_selector: payment_methods
- name: custom_payment_methods
  endpoint:
    path: /api/custom_payment_methods
    method: GET
    data_selector: custom_payment_methods
- name: event_note
  endpoint:
    path: /api/events/{eventId}/notes/{noteId}
    method: PUT
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: coupon_code
  endpoint:
    path: /coupon/codes
    method: GET
    data_selector: codes
- name: gifts
  endpoint:
    path: /api/gifts
    method: GET
- name: increase_gift_balance
  endpoint:
    path: /api/gifts/:id/increase
    method: POST
- name: experiences
  endpoint:
    path: /experiences
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: coupons
  endpoint:
    path: /api/coupons//codes
    method: POST
- name: experiences
  endpoint:
    path: /experiences
    method: GET
- name: preferences
  endpoint:
    path: /api/users//preferences/ticket
    method: PUT
- name: media
  endpoint:
    path: /api/experiences//medias/
    method: GET
    data_selector: ''
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: PUT
- name: preferences_gift
  endpoint:
    path: /users//preferences/gift
    method: POST
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: user_preferences
  endpoint:
    path: /users/:id/preferences/review
    method: PUT
- name: attachment
  endpoint:
    path: /api/experiences/{experienceId}/attachments/{attachmentId}
    method: GET
    data_selector: ''
    params: {}
- name: experiences
  endpoint:
    path: /experiences
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: experiences
  endpoint:
    path: /api/experiences/
    method: GET
- name: media
  endpoint:
    path: /api/experiences//medias/
    method: PUT
- name: webhook
  endpoint:
    path: /users/{userId}/hooks/{hookId}
    method: GET
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: events
- name: experiences
  endpoint:
    path: /experiences
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: delete_plugin
  endpoint:
    path: /plugins/
    method: DELETE
- name: accept_order
  endpoint:
    path: /orders//accept
    method: POST
- name: resources
  endpoint:
    path: /api/experiences//resources
    method: POST
    data_selector: ''
    params: {}
- name: blackout_schedules
  endpoint:
    path: /users/:id/blackoutSchedules
    method: GET
- name: experiences
  endpoint:
    path: /experiences
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: demographics
  endpoint:
    path: /demographics
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: delete_experience_resource
  endpoint:
    path: /api/experiences//resources/
    method: DELETE
- name: change_experience
  endpoint:
    path: /api/orders//changeExperience
    method: POST
- name: refresh_order
  endpoint:
    path: /api/orders/:id
    method: GET
- name: arrival_change
  endpoint:
    path: /api/orders/{id}/arrivalChange
    method: POST
    data_selector: ''
    params: {}
- name: paymentMethods
  endpoint:
    path: /users//paymentMethods
    method: POST
- name: schedules
  endpoint:
    path: /experiences//schedules
    method: POST
- name: media_item
  endpoint:
    path: /media/items
    method: GET
    data_selector: media
    params: {}
- name: add_coupon
  endpoint:
    path: /api/orders/:id/addCoupon
    method: POST
- name: changeAddOns
  endpoint:
    path: /orders//changeAddOns
    method: POST
- name: supported_languages
  endpoint:
    path: /users//preferences/language/supportedLanguages/locale
    method: DELETE
- name: gifts
  endpoint:
    path: /api/gifts
    method: POST
- name: experience_demographic
  endpoint:
    path: /api/demographics/
    method: DELETE
- name: add_on
  endpoint:
    path: /api/experiences//addOns/
    method: PUT
- name: guide
  endpoint:
    path: /sellers/{sellerId}/guides/{guideId}
    method: GET
    data_selector: ''
- name: payment_methods
  endpoint:
    path: /users//paymentMethods/
    method: DELETE
- name: assign_guide
  endpoint:
    path: /api/events//guides
    method: POST
- name: review_preference
  endpoint:
    path: /api/users/:id/preferences/review
    method: POST
- name: languages
  endpoint:
    path: /languages
    method: POST
- name: booking
  endpoint:
    path: /users//booking
    method: POST
- name: release_order
  endpoint:
    path: /api/orders/{id}/releaseRelease
    method: POST
    data_selector: ''
- name: rollback_order
  endpoint:
    path: /api/orders/{id}/rollback
    method: POST
    data_selector: ''
- name: delete_resource
  endpoint:
    path: /api/resources/
    method: DELETE
- name: affiliate
  endpoint:
    path: /api/sellers//affiliates
    method: PUT
- name: transaction
  endpoint:
    path: /transactions/{id}
    method: GET
    data_selector: ''
    params: {}
- name: affiliate_remove
  endpoint:
    path: /api/orders/{id}/affiliate
    method: DELETE
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /users/{id}/terms
    method: GET
- name: experience
  endpoint:
    path: /api/experiences/
    method: DELETE
    data_selector: null
    params: {}
- name: guides
  endpoint:
    path: /api/sellers//guides/
    method: PUT
- name: event_note
  endpoint:
    path: /api/events/{id}/notes
    method: POST
    data_selector: ''
    params: {}
- name: seller_demographic
  endpoint:
    path: /api/demographics
    method: POST
- name: buttons
  endpoint:
    path: /buttons
    method: GET
- name: payment_methods
  endpoint:
    path: /payment-methods
    method: GET
    data_selector: methods
- name: demographics
  endpoint:
    path: /demographics/
    method: PUT
- name: increase_order_value
  endpoint:
    path: /api/orders/:id/increase
    method: POST
- name: form
  endpoint:
    path: /api/forms
    method: POST
    data_selector: null
    params: {}
- name: guides
  endpoint:
    path: /api/sellers/{id}/guides
    method: GET
    data_selector: guides
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: POST
- name: schedules
  endpoint:
    path: /experience//schedules/
    method: DELETE
- name: decline_order
  endpoint:
    path: /api/orders/:id/decline
    method: POST
    data_selector: null
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
    params: {}
- name: media
  endpoint:
    path: /api/experiences//medias
    method: POST
    data_selector: null
    params:
      qqfile: null
- name: affiliates
  endpoint:
    path: /users/:id/affiliates
    method: GET
- name: user_preferences_review
  endpoint:
    path: /api/users/:id/preferences/review
    method: PUT
- name: terms
  endpoint:
    path: /experiences//terms
    method: POST
    data_selector: ''
    params: {}
- name: coupon_code
  endpoint:
    path: /api/coupons//codes/
    method: PUT
- name: media_update
  endpoint:
    path: /api/experiences//medias/
    method: PUT
notes:
- Adjustments are one of the key pieces in an order.
- 'Adjustments serve two key purposes: Redundancy check and Audit trail.'
- To perform this action, you must be the account owner, or must be delegated with
  ROLE_CURATOR or ROLE_SELLER_ADMIN.
- To perform this action, you must be the account owner, or must be delegated with
  ROLE_GUIDE_MANAGER or ROLE_SELLER_ADMIN.
- To perform this operation, you must be the account owner, or must be delegated with
  ROLE_MARKETER, or ROLE_SELLER_ADMIN.
- To perform this action, you must be the account owner or be delegated with ROLE_RESERVATION_LITE,
  ROLE_RESERVATION, ROLE_MARKETER, or ROLE_SELLER_ADMIN.
- Click `Try It!` to start a request and see the response here!
- Requires OAuth2 authentication for access.
- All Coupons, with the exception of Vouchers, are applied before taxes & fees.
- Vouchers are applied after taxes & fees; just like a method of payment.
- To perform this action, you must be the account owner, or must be delegated with
  ROLE_MARKETER, or ROLE_SELLER_ADMIN.
- Only a guide manager (`ROLE_GUIDE_MANAGER`) can remove a guide from an event.
- This feature utilizes the triggers and rewards syntax.
- Discount is only applicable for experience_demographic objects.
- Parent demographic is always a seller_demographic.
- To perform this action, you must be the account owner, or must be delegated with
  `ROLE_SELLER_ADMIN`.
- Conditions for booking cancellation.
- 15-minute arrival offset required.
- 120-minute cutoff for new orders.
- To perform this action, you must be the account owner or be delegated with ROLE_RESERVATION_LITE,
  ROLE_RESERVATION, ROLE_MARKETER, or ROLE_SELLER_ADMIN
- To perform this action, you must be the account owner, or must be delegated with
  ROLE_SELLER_ADMIN.
- If the capacity or count is changed and the resource is assigned to one or many
  experiences, Xola will recompute the open count for all Events for those experiences.
- This action cannot be performed on a pending order.
- You must have the inventory feature turned on for this API endpoint to work.
- Each affiliate is given a unique code to track commissions.
- Price schemes support various constraints including price type, privacy, quantity,
  and schedules.
- Updating a plugin puts it back into a pending state which will hide it from the
  Xola App Store.
- A Xola approver will need to re-approve your plugin with the new details before
  it becomes visible again.
- You cannot delete a media if it is designated as the experience's default media.
- Metadata keys cannot contain periods (.)
- Recommend using forward slash (/) to delimit keys
- Namespace keys with company and application name to avoid conflicts
- Currently only supports media type 'photo'.
- To perform this action, you must be the account owner, or must be delegated with
  ROLE_CURATOR or ROLE_SELLER_ADMIN
- To perform this action, you must be the account owner, or be assigned the ROLE_CURATOR
  or ROLE_SELLER_ADMIN role.
- To perform this action, you must be the account owner or must be delegated with
  ROLE_SELLER_ADMIN or ROLE_RESERVATIONIST
- To perform this action, you must be the account owner, or be delegated with ROLE_RESERVATIONIST,
  ROLE_RESERVATIONIST, or ROLE_SELLER_ADMIN.
- Ensure webhooks are configured for events installation.create and installation.delete.
- The API key of the developer account is needed for authentication.
- You cannot delete a media if it is designated as the default media.
- Events are timezone agnostic and should be treated in UTC.
- Credit cards are tokenized references and cannot be accessed directly.
- Credit cards for users of type 'Traveler' are created when payment is made for an
  order.
- Data in Credit Card objects is considered personally identifiable information and
  may have regulations around its usage.
- To create a confirmed order, you need to be logged in and be authorized with the
  reservation role (`ROLE_RESERVATION` or `ROLE_RESERVATION_LITE`) for the seller
  you are creating the order for.
- Only the developer of the plugin has permission to delete it.
- Deleting a plugin will also uninstall it for all Xola accounts. This action is irreversible.
- Always develop using your App API Key issued when creating an application in the
  App Store.
- Xola will not approve new development that was not first built and tested in the
  sandbox environment.
- Redirect preferences can be configured for each reservationist.
- To perform this action, you must be the account owner or must be delegated with
  `ROLE_SELLER_ADMIN` or `ROLE_RESERVATIONIST`.
- To perform this action, you must be the account owner, or must be delegated with
  ROLE_RESERVATIONIST, or ROLE_RESERVATIONIST_LITE, or ROLE_SELLER_ADMIN.
- This action cannot be performed on a previously accepted order. See the cancel endpoint
  to cancel an already accepted order.
- Authorization filters will restrict results based on user credentials.
- This endpoint expects the request body to contain the image being uploaded as multipart/form-data.
errors:
- '302: If the media is found, a redirect response is returned with the location of
  the media asset.'
- '404: The package or media is not found.'
- '204: Successfully deleted.'
- '409: Seller demographic is being used by at least one experience demographic.'
- '409: An inheriting experience demographic cannot be deleted because it is the sole
  demographic for an experience.'
- '200: Event was successfully updated.'
- '204: If no `max` is specified in the request, no action will be taken.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: The request was unacceptable, often due to missing a required parameter.'
- '401: No valid credentials provided.'
- '402: The parameters were valid but the payment collection failed. Typically returned
  when charging a credit card fails.'
- '403: You do not have the access to this resource'
- '404: The requested resource doesn''t exist.'
- '409: The request could not be processed due to a resource mismatch. Typically returned
  when capacity or configuration has changed and the server can no longer honor the
  request.'
- '5xx: Something went wrong on Xola''s end. (These are rare.)'
- '404: The experience or media is not found.'
- '302: If the attachment is found, a redirect response is returned with the location
  of the media asset.'
- '404: The experience or attachment is not found.'
- '201: Successfully assigned resource to the experience.'
- '404: Experience or resource not found.'
- '409: Experience is already assigned to another resource.'
- '409: Experience demographic cannot be deleted because it is the sole demographic
  for its experience.'
- 409 The guide is already assigned to an overlapping event. Details of the overlapping
  event will be included in the response.
- '204: Successfully deleted resource.'
- '409: Resource is assigned to at least one experience. Un-assign the resource from
  all experiences and retry.'
- '201: Event was successfully created, or if an existing event with the same `experience`
  and `start` was present, it was updated.'
- '400: One of the required fields was either not specified, or was invalid.'
- '409: The guide you attempted to assign has already been assigned to an overlapping
  event. The response will contain the conflicting event.'
auth_info:
  mentioned_objects:
  - Installation
  - WaiverTemplate
client:
  base_url: https://sandbox.xola.com/api
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.xola.com/oauth/token
    client_id: '{{ dlt.secrets[''xola_client_id''] }}'
    client_secret: '{{ dlt.secrets[''xola_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''xola_refresh_token''] }}'
  headers:
    Accept: application/json
    Content-Type: application/json
    Authorization: Bearer YOUR_ACCESS_TOKEN
    x-api-version: '2018-09-14'
    X-API-VERSION: yyyy-mm-dd
    X-API-KEY: <API_KEY>
    Content-type: application/json
  paginator:
    type: page
  resources:
  - name: user_preferences
    endpoint:
      path: /users//preferences/datepicker
      method: POST
  - name: affiliate
    endpoint:
      path: /api/sellers/{id}/affiliates/{affiliateId}
      method: GET
      data_selector: ''
      params: {}
  - name: affiliate_payment
    endpoint:
      path: /users//affiliates//pay
      method: POST
  - name: demographics
    endpoint:
      path: /demographics
      method: GET
  - name: change_quantity
    endpoint:
      path: /api/orders/{id}/changeQuantity
      method: POST
source_metadata: null
