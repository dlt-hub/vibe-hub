resources:
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: explain
  endpoint:
    path: /explain
    method: POST
    data_selector: plan
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: pg_stat_replication
  endpoint:
    path: /pg_stat_replication
    method: GET
- name: pg_stat_replication_slots
  endpoint:
    path: /pg_stat_replication_slots
    method: GET
- name: pg_stat_wal_receiver
  endpoint:
    path: /pg_stat_wal_receiver
    method: GET
- name: pg_stat_recovery_prefetch
  endpoint:
    path: /pg_stat_recovery_prefetch
    method: GET
- name: pg_stat_subscription
  endpoint:
    path: /pg_stat_subscription
    method: GET
- name: pg_stat_subscription_stats
  endpoint:
    path: /pg_stat_subscription_stats
    method: GET
- name: pg_stat_ssl
  endpoint:
    path: /pg_stat_ssl
    method: GET
- name: pg_stat_gssapi
  endpoint:
    path: /pg_stat_gssapi
    method: GET
- name: pg_stat_archiver
  endpoint:
    path: /pg_stat_archiver
    method: GET
- name: pg_stat_io
  endpoint:
    path: /pg_stat_io
    method: GET
- name: pg_stat_bgwriter
  endpoint:
    path: /pg_stat_bgwriter
    method: GET
- name: pg_stat_checkpointer
  endpoint:
    path: /pg_stat_checkpointer
    method: GET
- name: pg_stat_wal
  endpoint:
    path: /pg_stat_wal
    method: GET
- name: pg_stat_database
  endpoint:
    path: /pg_stat_database
    method: GET
- name: pg_stat_database_conflicts
  endpoint:
    path: /pg_stat_database_conflicts
    method: GET
- name: pg_stat_all_tables
  endpoint:
    path: /pg_stat_all_tables
    method: GET
- name: pg_stat_all_indexes
  endpoint:
    path: /pg_stat_all_indexes
    method: GET
- name: pg_statio_all_tables
  endpoint:
    path: /pg_statio_all_tables
    method: GET
- name: pg_statio_all_indexes
  endpoint:
    path: /pg_statio_all_indexes
    method: GET
- name: pg_statio_all_sequences
  endpoint:
    path: /pg_statio_all_sequences
    method: GET
- name: pg_stat_user_functions
  endpoint:
    path: /pg_stat_user_functions
    method: GET
- name: pg_stat_slru
  endpoint:
    path: /pg_stat_slru
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: table_access_method
  endpoint:
    path: /pg_am
    method: GET
    data_selector: entries
    params: {}
- name: database
  endpoint:
    path: /pg_dump
    method: GET
    data_selector: data
    params:
      dbname: mydb
- name: pgDay Mexico
  endpoint:
    path: /events/2025/pgday-mexico
    method: GET
    data_selector: event_info
    params:
      date: '2025-08-01'
      location: Toluca, Estado de México, Mexico
      language: Spanish; Castilian
- name: FOSSY
  endpoint:
    path: /events/2025/fossy
    method: GET
    data_selector: event_info
    params:
      date: 2025-07-31 – 2025-08-03
      location: Portland, Oregon, United States
      language: English
- name: Hyderabad PGDay
  endpoint:
    path: /events/2025/hyderabad-pgday
    method: GET
    data_selector: event_info
    params:
      date: 2025-08-21 – 2025-08-22
      location: Hyderabad, Telangana, India
      language: English
- name: PGDay Austria
  endpoint:
    path: /events/2025/pgday-austria
    method: GET
    data_selector: event_info
    params:
      date: '2025-09-04'
      location: Vienna, Austria
      language: English
- name: PGConf.Brazil
  endpoint:
    path: /events/2025/pgconf-brazil
    method: GET
    data_selector: event_info
    params:
      date: 2025-09-03 – 2025-09-05
      location: João Pessoa, Paraiba, Brazil
      language: Portuguese
- name: PGDay UK
  endpoint:
    path: /events/2025/pgday-uk
    method: GET
    data_selector: event_info
    params:
      date: '2025-09-09'
      location: London, United Kingdom
      language: English
- name: pgDay Lowlands
  endpoint:
    path: /events/2025/pgday-lowlands
    method: GET
    data_selector: event_info
    params:
      date: '2025-09-12'
      location: Rotterdam, Netherlands
      language: English
- name: PGDay Napoli
  endpoint:
    path: /events/2025/pgday-napoli
    method: GET
    data_selector: event_info
    params:
      date: '2025-09-25'
      location: Napoli, Italy
      language: English
- name: PGConf NYC
  endpoint:
    path: /events/2025/pgconf-nyc
    method: GET
    data_selector: event_info
    params:
      date: 2025-09-29 – 2025-10-01
      location: New York, NY, United States
      language: English
- name: PG Down Under
  endpoint:
    path: /events/2025/pg-down-under
    method: GET
    data_selector: event_info
    params:
      date: '2025-10-17'
      location: Sydney, NSW, Australia
      language: English
- name: PGDay Israel
  endpoint:
    path: /events/2025/pgday-israel
    method: GET
    data_selector: event_info
    params:
      date: '2025-10-19'
      location: Tel Aviv, Israel
      language: English
- name: PostgreSQL Conference Europe
  endpoint:
    path: /events/2025/postgresql-conference-europe
    method: GET
    data_selector: event_info
    params:
      date: 2025-10-21 – 2025-10-24
      location: Riga, Latvia
      language: English
- name: PostgreSQL Conference Japan
  endpoint:
    path: /events/2025/postgresql-conference-japan
    method: GET
    data_selector: event_info
    params:
      date: '2025-11-21'
      location: Chuo-ku, Tokyo, Japan
      language: Japanese
- name: PostgreSQL Development Conference
  endpoint:
    path: /events/2026/postgresql-development-conference
    method: GET
    data_selector: event_info
    params:
      date: 2026-05-19 – 2026-05-22
      location: Vancouver, BC, Canada
      language: English
- name: PG DATA 2026
  endpoint:
    path: /events/2026/pg-data
    method: GET
    data_selector: event_info
    params:
      date: 2026-06-04 – 2026-06-05
      location: Chicago, IL, United States
      language: English
- name: pg_upgrade_command
  endpoint:
    path: /pg_upgrade
    method: GET
- name: pg_replication_origin
  endpoint:
    path: /pg_replication_origin
    method: GET
    data_selector: origins
    params: {}
- name: pg_replication_origin_status
  endpoint:
    path: /pg_replication_origin_status
    method: GET
    data_selector: status
    params: {}
- name: digest
  endpoint:
    path: digest(data text, type text)
    method: FUNCTION
    data_selector: bytea
- name: hmac
  endpoint:
    path: hmac(data text, key text, type text)
    method: FUNCTION
    data_selector: bytea
- name: crypt
  endpoint:
    path: crypt(password text, salt text)
    method: FUNCTION
    data_selector: text
- name: gen_salt
  endpoint:
    path: gen_salt(type text [, iter_count integer ])
    method: FUNCTION
    data_selector: text
- name: pgp_sym_encrypt
  endpoint:
    path: pgp_sym_encrypt(data text, psw text [, options text ])
    method: FUNCTION
    data_selector: bytea
- name: pgp_sym_decrypt
  endpoint:
    path: pgp_sym_decrypt(msg bytea, psw text [, options text ])
    method: FUNCTION
    data_selector: text
- name: pgp_pub_encrypt
  endpoint:
    path: pgp_pub_encrypt(data text, key bytea [, options text ])
    method: FUNCTION
    data_selector: bytea
- name: pgp_pub_decrypt
  endpoint:
    path: pgp_pub_decrypt(msg bytea, key bytea [, psw text [, options text ]])
    method: FUNCTION
    data_selector: text
- name: pg_upgrade
  endpoint:
    path: /pg_upgrade
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: extensions
  endpoint:
    path: /contrib/extensions
    method: GET
    data_selector: extensions
- name: pg_stat_statements
  endpoint:
    path: /pg_stat_statements
    method: GET
    data_selector: records
- name: pg_stat_statements_info
  endpoint:
    path: /pg_stat_statements_info
    method: GET
    data_selector: records
- name: check_constraint_routine_usage
  endpoint:
    path: /check_constraint_routine_usage
    method: GET
    data_selector: records
- name: check_constraints
  endpoint:
    path: /check_constraints
    method: GET
    data_selector: records
- name: domain_constraints
  endpoint:
    path: /domain_constraints
    method: GET
    data_selector: records
- name: referential_constraints
  endpoint:
    path: /referential_constraints
    method: GET
    data_selector: records
- name: pg_aggregate
- name: pg_am
- name: pg_amop
- name: pg_amproc
- name: pg_attrdef
- name: pg_attribute
- name: pg_authid
- name: pg_auth_members
- name: pg_cast
- name: pg_class
- name: pg_collation
- name: pg_constraint
- name: pg_conversion
- name: pg_database
- name: pg_db_role_setting
- name: pg_default_acl
- name: pg_depend
- name: pg_description
- name: pg_enum
- name: pg_event_trigger
- name: pg_extension
- name: pg_foreign_data_wrapper
- name: pg_foreign_server
- name: pg_foreign_table
- name: pg_index
- name: pg_inherits
- name: pg_init_privs
- name: pg_language
- name: pg_largeobject
- name: pg_largeobject_metadata
- name: pg_namespace
- name: pg_opclass
- name: pg_operator
- name: pg_opfamily
- name: pg_parameter_acl
- name: pg_partitioned_table
- name: pg_policy
- name: pg_proc
- name: pg_publication
- name: pg_publication_namespace
- name: pg_publication_rel
- name: pg_range
- name: pg_replication_origin
- name: pg_rewrite
- name: pg_seclabel
- name: pg_sequence
- name: pg_shdepend
- name: pg_shdescription
- name: pg_shseclabel
- name: pg_statistic
- name: pg_statistic_ext
- name: pg_statistic_ext_data
- name: pg_subscription
- name: pg_subscription_rel
- name: pg_tablespace
- name: pg_transform
- name: pg_trigger
- name: pg_ts_config
- name: pg_ts_config_map
- name: pg_ts_dict
- name: pg_ts_parser
- name: pg_ts_template
- name: pg_type
- name: pg_user_mapping
- name: pg_available_extensions
- name: pg_available_extension_versions
- name: pg_backend_memory_contexts
- name: pg_config
- name: pg_cursors
- name: pg_file_settings
- name: pg_group
- name: pg_hba_file_rules
- name: pg_ident_file_mappings
- name: pg_indexes
- name: pg_locks
- name: pg_matviews
- name: pg_policies
- name: pg_prepared_statements
- name: pg_prepared_xacts
- name: pg_publication_tables
- name: pg_replication_origin_status
- name: pg_replication_slots
- name: pg_roles
- name: pg_rules
- name: pg_seclabels
- name: pg_sequences
- name: pg_settings
- name: pg_shadow
- name: pg_shmem_allocations
- name: pg_stats
- name: pg_stats_ext
- name: pg_stats_ext_exprs
- name: pg_tables
- name: pg_timezone_abbrevs
- name: pg_timezone_names
- name: pg_user
- name: pg_user_mappings
- name: pg_views
- name: pg_wait_events
- name: pg_aggregate
  endpoint:
    path: /pg_aggregate
    method: GET
- name: pg_am
  endpoint:
    path: /pg_am
    method: GET
- name: pg_amop
  endpoint:
    path: /pg_amop
    method: GET
- name: pg_amproc
  endpoint:
    path: /pg_amproc
    method: GET
- name: pg_attrdef
  endpoint:
    path: /pg_attrdef
    method: GET
- name: pg_attribute
  endpoint:
    path: /pg_attribute
    method: GET
- name: pg_authid
  endpoint:
    path: /pg_authid
    method: GET
- name: pg_auth_members
  endpoint:
    path: /pg_auth_members
    method: GET
- name: pg_cast
  endpoint:
    path: /pg_cast
    method: GET
- name: pg_class
  endpoint:
    path: /pg_class
    method: GET
- name: pg_collation
  endpoint:
    path: /pg_collation
    method: GET
- name: pg_constraint
  endpoint:
    path: /pg_constraint
    method: GET
- name: pg_conversion
  endpoint:
    path: /pg_conversion
    method: GET
- name: pg_database
  endpoint:
    path: /pg_database
    method: GET
- name: pg_db_role_setting
  endpoint:
    path: /pg_db_role_setting
    method: GET
- name: pg_default_acl
  endpoint:
    path: /pg_default_acl
    method: GET
- name: pg_depend
  endpoint:
    path: /pg_depend
    method: GET
- name: pg_description
  endpoint:
    path: /pg_description
    method: GET
- name: pg_enum
  endpoint:
    path: /pg_enum
    method: GET
- name: pg_event_trigger
  endpoint:
    path: /pg_event_trigger
    method: GET
- name: pg_extension
  endpoint:
    path: /pg_extension
    method: GET
- name: pg_foreign_data_wrapper
  endpoint:
    path: /pg_foreign_data_wrapper
    method: GET
- name: pg_foreign_server
  endpoint:
    path: /pg_foreign_server
    method: GET
- name: pg_foreign_table
  endpoint:
    path: /pg_foreign_table
    method: GET
- name: pg_index
  endpoint:
    path: /pg_index
    method: GET
- name: pg_inherits
  endpoint:
    path: /pg_inherits
    method: GET
- name: pg_init_privs
  endpoint:
    path: /pg_init_privs
    method: GET
- name: pg_language
  endpoint:
    path: /pg_language
    method: GET
- name: pg_largeobject
  endpoint:
    path: /pg_largeobject
    method: GET
- name: pg_largeobject_metadata
  endpoint:
    path: /pg_largeobject_metadata
    method: GET
- name: pg_namespace
  endpoint:
    path: /pg_namespace
    method: GET
- name: pg_opclass
  endpoint:
    path: /pg_opclass
    method: GET
- name: pg_operator
  endpoint:
    path: /pg_operator
    method: GET
- name: pg_opfamily
  endpoint:
    path: /pg_opfamily
    method: GET
- name: pg_parameter_acl
  endpoint:
    path: /pg_parameter_acl
    method: GET
- name: pg_partitioned_table
  endpoint:
    path: /pg_partitioned_table
    method: GET
- name: pg_policy
  endpoint:
    path: /pg_policy
    method: GET
- name: pg_proc
  endpoint:
    path: /pg_proc
    method: GET
- name: pg_publication
  endpoint:
    path: /pg_publication
    method: GET
- name: pg_publication_namespace
  endpoint:
    path: /pg_publication_namespace
    method: GET
- name: pg_publication_rel
  endpoint:
    path: /pg_publication_rel
    method: GET
- name: pg_range
  endpoint:
    path: /pg_range
    method: GET
- name: pg_replication_origin
  endpoint:
    path: /pg_replication_origin
    method: GET
- name: pg_rewrite
  endpoint:
    path: /pg_rewrite
    method: GET
- name: pg_seclabel
  endpoint:
    path: /pg_seclabel
    method: GET
- name: pg_sequence
  endpoint:
    path: /pg_sequence
    method: GET
- name: pg_shdepend
  endpoint:
    path: /pg_shdepend
    method: GET
- name: pg_shdescription
  endpoint:
    path: /pg_shdescription
    method: GET
- name: pg_shseclabel
  endpoint:
    path: /pg_shseclabel
    method: GET
- name: pg_statistic
  endpoint:
    path: /pg_statistic
    method: GET
- name: pg_statistic_ext
  endpoint:
    path: /pg_statistic_ext
    method: GET
- name: pg_statistic_ext_data
  endpoint:
    path: /pg_statistic_ext_data
    method: GET
- name: pg_subscription
  endpoint:
    path: /pg_subscription
    method: GET
- name: pg_subscription_rel
  endpoint:
    path: /pg_subscription_rel
    method: GET
- name: pg_tablespace
  endpoint:
    path: /pg_tablespace
    method: GET
- name: pg_transform
  endpoint:
    path: /pg_transform
    method: GET
- name: pg_trigger
  endpoint:
    path: /pg_trigger
    method: GET
- name: pg_ts_config
  endpoint:
    path: /pg_ts_config
    method: GET
- name: pg_ts_config_map
  endpoint:
    path: /pg_ts_config_map
    method: GET
- name: pg_ts_dict
  endpoint:
    path: /pg_ts_dict
    method: GET
- name: pg_ts_parser
  endpoint:
    path: /pg_ts_parser
    method: GET
- name: pg_ts_template
  endpoint:
    path: /pg_ts_template
    method: GET
- name: pg_type
  endpoint:
    path: /pg_type
    method: GET
- name: pg_user_mapping
  endpoint:
    path: /pg_user_mapping
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- This documentation is for an unsupported version of PostgreSQL.
- A dump/restore using pg_dumpall or use of pg_upgrade or logical replication is required
  for those wishing to migrate data from any previous release.
- Version 16 contains a number of changes that may affect compatibility with previous
  releases.
- Considerable robustness and security risks in using background worker processes.
- Administrators should exercise extreme caution when enabling modules that include
  background worker processes.
- Only carefully audited modules should be permitted to run background worker processes.
- Do not speculate what you think went wrong, what 'it seemed to do', or which part
  of the program has a fault.
- The least we can do is make the TODO list clearer.
- PostgreSQL offers a number of different client authentication methods.
- PostgreSQL development aims for conformance with the latest official version of
  the standard where such conformance does not contradict traditional features or
  common sense.
- No current version of any database management system claims full conformance to
  Core SQL:2023.
- Client programs that use libpq must include the header file libpq-fe.h
- Client programs must link with the libpq library
- Events are organized by PostgreSQL related associations or third parties.
- The `ANALYZE` option causes the statement to be actually executed, not only planned.
- The command's result is a textual description of the plan selected for the statement,
  optionally annotated with execution statistics.
- COPY moves data between PostgreSQL tables and standard file-system files.
- COPY TO copies the contents of a table to a file, while COPY FROM copies data from
  a file to a table.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- pg_dumpall needs to connect several times to the PostgreSQL server (once per database).
- It is generally recommended to use the -X (--no-psqlrc) option when restoring a
  database from a pg_dumpall script.
- A dump/restore is not required for those running 15.X.
- Avoid one-byte buffer overread when examining invalidly-encoded strings that are
  claimed to be in GB18030 encoding.
- While unlikely, a SIGSEGV crash could occur if an incomplete multibyte character
  appeared at the end of memory.
- To fix this, you should drop and recreate any self-referential foreign keys on partitioned
  tables, if partitions have been created or attached since the constraint was created.
- Bear in mind that violating rows might already be present, in which case recreating
  the constraint will fail, and you'll need to fix up those rows before trying again.
- Fix unexpected 'attribute has wrong type' errors in UPDATE, DELETE, and MERGE queries
  that use whole-row table references to views or functions in FROM.
- Fix MERGE into a partitioned table with DO NOTHING actions.
- Remove `PUBLIC` creation permission on the `public` schema.
- The new default is one of the secure schema usage patterns that Section 5.9.6 has
  recommended since the security release for CVE-2018-1058.
- Disallow zero-length Unicode identifiers, e.g., `U&""`.
- Generate an error if `array_to_tsvector()` is passed an empty-string array element.
- Allow logical replication to run as the owner of the subscription.
- A table access method handler function must be declared to accept a single argument
  of type internal and to return the pseudo-type table_am_handler.
- Change time zone abbreviation handling.
- Deprecate MD5 password authentication.
- Change VACUUM and ANALYZE to process the inheritance children of a parent.
- Prevent COPY FROM from treating \ as an end-of-file marker when reading CSV files.
- Disallow unlogged partitioned tables.
- Remove non-functional support for RULE privileges in GRANT/REVOKE.
- Remove column pg_backend_memory_contexts.parent.
- Change pg_backend_memory_contexts.level to be one-based.
- pg_dump does not block other users accessing the database (readers or writers).
- pg_dump only dumps a single database.
- For parallel dumps, the database server needs to support synchronized snapshots.
- A dump/restore is not required for those running 17.X.
- If you have any self-referential foreign key constraints on partitioned tables,
  it may be necessary to recreate those constraints to ensure that they are being
  enforced correctly.
- This mistake was present back to v14 where BRIN bloom indexes were introduced, but
  this code path was only rarely reached then.
- Add predefined roles pg_read_all_data and pg_write_all_data.
- Allow logical replication to stream long in-progress transactions to subscribers.
- A check constraint is the most generic constraint type.
- PostgreSQL does not support CHECK constraints that reference table data other than
  the new or updated row being checked.
- A not-null constraint is usually written as a column constraint.
- A unique constraint ensures that the data contained in a column, or a group of columns,
  is unique among all the rows in the table.
- Adding a unique constraint will automatically create a unique B-tree index on the
  column or group of columns listed in the constraint.
- A primary key constraint indicates that a column, or group of columns, can be used
  as a unique identifier for rows in the table.
- A foreign key constraint specifies that the values in a column (or a group of columns)
  must match the values appearing in some row of another table.
- The default ON DELETE action is ON DELETE NO ACTION.
- The actions SET NULL and SET DEFAULT can take a column list to specify which columns
  to set.
- A dump/restore is not required for those running 16.X.
- Creating or attaching partitions failed to make the required catalog entries for
  a foreign-key constraint, if the table referenced by the constraint was the same
  partitioned table.
- Minor releases never change the internal storage format and are always compatible
  with earlier and later minor releases of the same major version number.
- New major versions also typically introduce some user-visible incompatibilities,
  so application programming changes might be required.
- Cautious users will want to test their client applications on the new version before
  switching over fully.
- For major releases of PostgreSQL, the internal data storage format is subject to
  change, thus complicating upgrades.
- It is recommended that you use the pg_dump and pg_dumpall programs from the newer
  version of PostgreSQL, to take advantage of enhancements that might have been made
  in these programs.
- 'To back up your database installation, type: pg_dumpall > outputfile'
- The least downtime can be achieved by installing the new server in a different directory
  and running both the old and the new servers in parallel, on different ports.
- psql is a terminal-based front-end to PostgreSQL.
- It enables you to type in queries interactively, issue them to PostgreSQL, and see
  the query results.
- Version 18 contains a number of changes that may affect compatibility with previous
  releases.
- Ensure cached plans are marked as dependent on the calling role when RLS applies
  to a non-top-level table reference
- Disallow ALTER TABLE ATTACH PARTITION if the table to be attached has a foreign
  key referencing the partitioned table
- Avoid possible crashes and 'could not open relation' errors in queries on a partitioned
  table occurring concurrently with a DETACH CONCURRENTLY and immediate drop of a
  partition
- pg_upgrade allows data stored in PostgreSQL data files to be upgraded to a later
  PostgreSQL major version without the data dump/restore typically required for major
  version upgrades.
- pg_upgrade supports upgrades from 9.2.X and later to the current major release of
  PostgreSQL, including snapshot and beta releases.
- Replication origins help track replication progress and prevent loops in bi-directional
  setups.
- pgcrypto requires OpenSSL and won't be installed if OpenSSL support was not selected
  when PostgreSQL was built.
- The functions here implement the encryption part of the OpenPGP (RFC 4880) standard.
- It is important that any external modules are also binary compatible.
- If you have ever detached a partition from a partitioned table that has a foreign-key
  reference to another partitioned table, and not dropped the former partition, then
  you may have catalog and/or data corruption to repair.
- Ensure cached plans are marked as dependent on the calling role when RLS applies
  to a non-top-level table reference.
- Avoid possible crashes and 'could not open relation' errors in queries on a partitioned
  table occurring concurrently with a 'DETACH CONCURRENTLY' and immediate drop of
  a partition.
- Extensions must be registered in the database using CREATE EXTENSION command.
- The maximum number of columns for a table is further reduced as the tuple being
  stored must fit in a single 8192-byte heap page.
- Each table can store a theoretical maximum of 2^32 out-of-line values.
- Indexes are a common way to enhance database performance.
- The module must be loaded by adding pg_stat_statements to shared_preload_libraries
  in postgresql.conf
- Query identifier calculation must be enabled in order for the module to be active
- The PostgreSQL community will stop releasing updates for the 13.X release series
  in November 2025. Users are encouraged to update to a newer release branch soon.
- A dump/restore is not required for those running 13.X.
- Version 13 contains a number of changes that may affect compatibility with previous
  releases.
- Query performance can be affected by many things.
- Some of these can be controlled by the user, while others are fundamental to the
  underlying design of the system.
- The information schema views do not contain information about PostgreSQL-specific
  features.
- Uses OAuth2 with refresh token — requires setup of connected app in api
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'role already exists: harmless error to be ignored'
- 'non-existent objects: additional harmless error messages can occur with --clean
  option'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '00000: successful_completion'
- '01000: warning'
- '08000: connection_exception'
- '23000: integrity_constraint_violation'
- '28000: invalid_authorization_specification'
- '42000: syntax_error_or_access_rule_violation'
- '54000: program_limit_exceeded'
- '55000: object_not_in_prerequisite_state'
- '57000: operator_intervention'
- '58000: system_error'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  headers:
    Accept: application/json
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
  base_url: https://your-instance.api-name.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
source_metadata: null
