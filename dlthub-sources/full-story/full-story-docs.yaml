resources:
- name: custom_properties
  endpoint:
    method: POST
    data_selector: properties
- name: type_inference
  endpoint:
    method: POST
    data_selector: properties
- name: optional_type_declarations
  endpoint:
    method: POST
    data_selector: properties
- name: session_details
  endpoint:
    path: /browser/get-session-details/
    method: GET
    params:
      format:
      - url
      - id
      - url.now
- name: custom_data_capture
  endpoint:
    method: GET
- name: session_replay_urls
  endpoint:
    method: GET
- name: rage_click_hook
  endpoint:
    method: GET
- name: rage_click
  endpoint:
    path: /rageclick
    method: GET
- name: set_page_properties
  endpoint:
    method: POST
    data_selector: properties
- name: fs_js
  endpoint:
    path: /s/fs.js
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: element_definitions
  endpoint:
    path: /element_definitions
    method: GET
    data_selector: element_definitions
- name: event_definitions
  endpoint:
    path: /event_definitions
    method: GET
    data_selector: event_definitions
- name: page_definitions
  endpoint:
    path: /page_definitions
    method: GET
    data_selector: page_definitions
- name: BigQuery
  endpoint:
    method: GET
    params:
      sync_interval: processed_time rounded to the next hour + 1 hour
      timestamps:
      - event_time
      - updated_time
      - processed_time
- name: Redshift
  endpoint:
    method: GET
    params:
      sync_interval: processed_time rounded to the next hour + 1 hour
      timestamps:
      - event_time
      - updated_time
      - processed_time
- name: Snowflake
  endpoint:
    method: GET
    params:
      sync_interval: processed_time rounded to the next hour + 1 hour
      timestamps:
      - event_time
      - updated_time
      - processed_time
- name: user_data
  endpoint:
    path: /v2/users
    method: POST
- name: users
  endpoint:
    path: /v2/users
    method: POST
    data_selector: properties
- name: users_batch
  endpoint:
    path: /v2/users/batch
    method: POST
    data_selector: properties
- name: events
  endpoint:
    path: /v2/events
    method: POST
    data_selector: properties
- name: events_batch
  endpoint:
    path: /v2/events/batch
    method: POST
    data_selector: properties
notes:
- The Promise returned by the FS API may be rejected due to malformed or missing configuration,
  unsupported browser, errors in specific API calls, or org being over quota
- The Promise might never resolve in cases like the FS script being blocked by ad
  blockers
- Using the async API in blocking code is discouraged to avoid unhandledrejection
  warnings
- Type annotations from version 1 are no longer required in version 2; do not include
  them in properties.
- Only supports Rage Click events within the browser environment
- Events can be spoofed by malicious actors
- Allows up to 50 unique properties per page and 500 across all pages
- Limits pageName to 1000 unique values site-wide; excess names are ignored
- If multiple pageName values are set on the same page, only the first is considered
  unless changed
- Events data model is extensible; new fields can be added without breaking integrations.
- Defined objects have unique ids that link to properties in the events table.
- Sync latency to destinations depends on the processed time of events rounded to
  the next hour + 1 hour.
- 'Update Window: Rolling look-back period where events may be updated in the warehouse.'
- 'Duplicate events: We guarantee at least once delivery for each event with less
  than 1% duplication.'
- Fullstory for Mobile Apps uses Private by Default technology to ensure privacy by
  masking data at the source.
- Session re-creation for mobile apps is based on drawing operations and not actual
  screen recording.
- Mobile implementation uses views to detect changes and reconstruct them into frames
  which represent the current state of the app's visible elements.
errors:
- Event Spoofing: Be cautious about behaviors triggered by this event to prevent abuse.
- Minor discrepancies between Fullstory UI and the data warehouse data due to reprocessing
  after the update window.
- 429: API requests that exceed the server event quota will receive a 429 response
    code
auth_info:
  mentioned_objects:
  - Client-Side Ragehooks
client:
  headers:
    Accept: application/json
  base_url: https://developer.fullstory.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
