resources:
- name: boards
  endpoint:
    path: /api/v3/boards
    method: GET
    data_selector: boards
- name: tasks
  endpoint:
    path: /api/v3/tasks
    method: GET
    data_selector: tasks
- name: contextMenu
  endpoint:
    path: /contextMenu
    method: push
    data_selector: items
- name: tasks
  endpoint:
    path: /api/v3/tasks/[TASK_ID]
    method: GET
- name: boards
  endpoint:
    path: /api/v3/boards
    method: GET
- name: comments
  endpoint:
    path: /api/v3/comments
    method: GET
- name: header
  endpoint:
    path: /header
    method: POST
    data_selector: html
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: permissions
- name: filter
  endpoint:
    path: /filter
    method: GET
    data_selector: filter
- name: messages
  endpoint:
    path: /messages
    method: POST
    data_selector: warn
- name: boards
  endpoint:
    path: /api/v3/boards
    method: GET
    data_selector: boards
- name: tasks
  endpoint:
    path: /api/v3/tasks
    method: GET
    data_selector: tasks
- name: boards
  endpoint:
    path: /api/v1/boards.json
    method: GET
    data_selector: ''
    params: {}
- name: board_tasks
  endpoint:
    path: /api/v1/boards/:board_id/tasks.json
    method: GET
    data_selector: ''
    params: {}
- name: board_users
  endpoint:
    path: /api/v1/boards/:board_id/users.json
    method: GET
    data_selector: ''
    params: {}
- name: board_changelog
  endpoint:
    path: /api/v1/boards/:board_id/changelog.json
    method: GET
    data_selector: ''
    params: {}
- name: time_trackers
  endpoint:
    path: /api/v1/time_trackers.json
    method: GET
    data_selector: time_tracker
    params: {}
- name: time_report
  endpoint:
    path: /api/v1/time_report.json
    method: GET
    data_selector: summary
    params: {}
- name: subtasks
  endpoint:
    path: /api/v1/boards/:board_id/tasks/:task_id/subtasks.json
    method: GET
    data_selector: subtask
    params:
      report_type: summary
      board_id: integer
      from: date
      to: date
      group_by: string
      include_filter_options: integer
      expand: integer
      user_id: integer
      task_id: integer
      tasks.card_type_id: integer
      tasks.tags: string
- name: comments
  endpoint:
    path: /api/v1/boards/:board_id/tasks/:task_id/comments.json
    method: GET
    data_selector: comment
    params:
      report_type: summary
      board_id: integer
      from: date
      to: date
      group_by: string
      include_filter_options: integer
      expand: integer
      user_id: integer
      task_id: integer
      tasks.card_type_id: integer
      tasks.tags: string
- name: Changelog
  endpoint:
    path: /changelog
    method: GET
    data_selector: records
- name: Comment
  endpoint:
    path: /comment
    method: GET
    data_selector: records
- name: Subtask
  endpoint:
    path: /subtask
    method: GET
    data_selector: records
- name: Swimlane
  endpoint:
    path: /swimlane
    method: GET
    data_selector: records
- name: Task
  endpoint:
    path: /task
    method: GET
    data_selector: records
- name: TimeTracker
  endpoint:
    path: /time_tracker
    method: GET
    data_selector: listing
- name: TimeTracker.Task
  endpoint:
    path: /time_tracker/task
    method: GET
    data_selector: expanded listing
- name: WorkflowStage
  endpoint:
    path: /workflow_stage
    method: GET
    data_selector: listing
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tasks
  endpoint:
    path: /api/v3/tasks/:task_id.json
    method: PATCH
- name: subtasks
  endpoint:
    path: /api/v3/subtasks.json
    method: POST
- name: attachments
  endpoint:
    path: /api/v3/attachments.json
    method: POST
- name: time_trackers
  endpoint:
    path: /api/v3/time_trackers.json
    method: POST
- name: task
  endpoint:
    path: /task
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v3/users/:user_id.json
    method: GET
- name: current_user
  endpoint:
    path: /api/v3/users/current.json
    method: GET
- name: boards
  endpoint:
    path: /api/v3/boards/:board_id.json
    method: GET
- name: tasks
  endpoint:
    path: /api/v3/tasks/:task_id.json
    method: GET
- name: search_tasks
  endpoint:
    path: /api/v3/tasks/search.json
    method: GET
- name: board
  endpoint:
    path: /boards
    method: GET
    data_selector: boards
- name: changelog
  endpoint:
    path: /changelogs
    method: GET
    data_selector: changelogs
- name: collaborator
  endpoint:
    path: /collaborators
    method: GET
    data_selector: collaborators
- name: comment
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
- name: subtask
  endpoint:
    path: /subtasks
    method: GET
    data_selector: subtasks
notes:
- Use KT.init(subdomain, api_token, options={}) to initialize the SDK.
- Live models allow for automatic synchronization with the data stored on the server.
- You can initialize the SDK for an account with API token using KT.init('YOUR_ACCOUNT_SUBDOMAIN',
  'YOUR_API_TOKEN');
- The SDK works in user's web browser and allows customization of the Kanban Tool
  interface.
- To use the API, you must first obtain your own access token.
- We advise against storing any personal data in any areas of our systems that are
  not explicitly designed for this purposes.
- The use of the Service is payable under the selected Service Plan as assigned to
  the Account, excluding the trial period and the free Service Plan.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- You must obtain your own access token to use the API.
errors:
- '404 Not Found: This command returns a 404 Not Found response when given an invalid
  time_tracker_id.'
- '404 Not Found: response when given an invalid time_tracker_id'
- 404 Not Found
- Failure to select a Service Plan, failure to subscribe to recurring payments, or
  prolonged failure to make a required payment may result in suspension or closure
  of the Account.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: This command returns a 404 response when given an invalid time_tracker_id'
- '404 Not Found: When given an invalid `time_tracker_id`'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://YOUR_DOMAIN.kanbantool.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  headers:
    Authorization: Bearer YOUR_TOKEN
    Accept: application/json
    Content-Type: application/json
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
