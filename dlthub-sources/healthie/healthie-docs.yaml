resources:
- name: apiKeys
  endpoint:
    path: /apiKeys
    method: GET
- name: appointments
  endpoint:
    path: /appointments
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: list_programs
  endpoint:
    path: /courses
    method: GET
    data_selector: Course
    params:
      offset: Optional
      keywords: Optional
      course_type: Optional
      only_available: Optional
- name: retrieve_program
  endpoint:
    path: /course
    method: GET
    data_selector: Course
    params:
      course_id: Required
- name: create_program
  endpoint:
    path: /createCourse
    method: POST
    data_selector: createCoursePayload
    params:
      name: Required
      course_type: Required
      start_date: Required if course_type is fixed
      preview_image: Optional
      external_preview_image_url: Optional
      formatted_benefits: Optional
      late_enroll: Optional
- name: update_program
  endpoint:
    path: /updateCourse
    method: POST
    data_selector: updateCoursePayload
    params:
      id: Required
      course_members: Optional
- name: delete_program
  endpoint:
    path: /deleteCourse
    method: POST
    data_selector: deleteCoursePayload
    params:
      id: Required
- name: formAnswerGroups
  endpoint:
    path: /formAnswerGroups
    method: GET
    data_selector: records
    params: {}
- name: advanceAppointmentPrices
  endpoint:
    path: /advanceAppointmentPrices
    method: GET
- name: allergySuggestions
  endpoint:
    path: /allergySuggestions
    method: GET
- name: announcement
  endpoint:
    path: /announcement
    method: GET
- name: announcements
  endpoint:
    path: /announcements
    method: GET
- name: appointments
  endpoint:
    path: /appointments
    method: GET
- name: billingItems
  endpoint:
    path: /billingItems
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: medications
  endpoint:
    path: /medications
    method: GET
    data_selector: Medication
    params:
      active: optional
      patient_id: optional
- name: createMedication
  endpoint:
    path: /createMedication
    method: POST
    data_selector: createMedicationPayload
    params:
      user_id: required
      name: required
      active: optional
      dosage: optional
      comment: optional
      start_date: optional
      end_date: optional
- name: updateMedication
  endpoint:
    path: /updateMedication
    method: POST
    data_selector: updateMedicationPayload
    params:
      id: required
- name: deleteMedication
  endpoint:
    path: /deleteMedication
    method: POST
    data_selector: destroyMedicationPayload
    params:
      id: required
- name: patient
  endpoint:
    path: /users
    method: GET
- name: user_group
  endpoint:
    path: /userGroups
    method: GET
- name: tag
  endpoint:
    path: /tags
    method: GET
- name: organization_members
  endpoint:
    path: /organizationMembers
    method: GET
    data_selector: records
    params:
      page_size: 10
- name: create_organization_membership
  endpoint:
    path: /createOrganizationMembership
    method: POST
    data_selector: OrganizationMembership
    params: {}
- name: update_organization_membership
  endpoint:
    path: /updateOrganizationMembership
    method: POST
    data_selector: updateOrganizationMembershipPayload
    params: {}
- name: delete_organization_membership
  endpoint:
    path: /deleteOrganizationMembership
    method: POST
    data_selector: deleteOrganizationMembershipPayload
    params: {}
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: Task
    params:
      id: required
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: Task
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: createTaskPayload
    params: {}
- name: updateTask
  endpoint:
    path: /updateTask
    method: POST
    data_selector: updateTaskPayload
    params:
      id: required
- name: updateTasksBulk
  endpoint:
    path: /updateTasksBulk
    method: POST
    data_selector: bulkUpdateTasksPayload
    params: {}
- name: deleteTask
  endpoint:
    path: /deleteTask
    method: DELETE
    data_selector: deleteTaskPayload
    params:
      id: required
- name: form_templates
  endpoint:
    path: /customModuleForms
    method: GET
    data_selector: CustomModuleForm
- name: form_completion_requests
  endpoint:
    path: /requestedFormCompletions
    method: GET
    data_selector: RequestedFormCompletion
- name: carePlans
  endpoint:
    path: /carePlans
    method: GET
    data_selector: CarePlan
    params: {}
- name: carePlan
  endpoint:
    path: /carePlan
    method: GET
    data_selector: CarePlan
    params: {}
- name: createCarePlan
  endpoint:
    path: /createCarePlan
    method: POST
    data_selector: createCarePlanPayload
    params: {}
- name: updateCarePlan
  endpoint:
    path: /updateCarePlan
    method: PUT
    data_selector: updateCarePlanPayload
    params: {}
- name: deleteCarePlan
  endpoint:
    path: /deleteCarePlan
    method: DELETE
    data_selector: deleteCarePlanPayload
    params: {}
- name: LabOrder
  endpoint:
    path: /path/to/laborder
    method: GET
    data_selector: results
- name: dynamicLink
  endpoint:
    path: /path/to/dynamicLink
    method: GET
    data_selector: results
- name: fullscriptPractitioners
  endpoint:
    path: /path/to/fullscriptPractitioners
    method: GET
    data_selector: results
- name: fullscriptPractitionerTypes
  endpoint:
    path: /path/to/fullscriptPractitionerTypes
    method: GET
    data_selector: results
- name: treatmentPlans
  endpoint:
    path: /path/to/treatmentPlans
    method: GET
    data_selector: results
- name: Appointment
  endpoint:
    path: /appointments
    method: GET
    data_selector: appointments
- name: lab_orders
  endpoint:
    path: /labOrders
    method: GET
    data_selector: LabOrder
- name: lab_order
  endpoint:
    path: /labOrder
    method: GET
    data_selector: LabOrder
- name: create_lab_order
  endpoint:
    path: /createLabOrder
    method: POST
    data_selector: createLabOrderPayload
- name: create_rupa_lab_order
  endpoint:
    path: /createRupaLabOrder
    method: POST
    data_selector: createRupaOrderPayload
- name: update_lab_order
  endpoint:
    path: /updateLabOrder
    method: PUT
    data_selector: updateLabOrderPayload
- name: entries
  endpoint:
    path: /entries
    method: GET
- name: entry
  endpoint:
    path: /entry
    method: GET
- name: createEntry
  endpoint:
    path: /createEntry
    method: POST
- name: updateEntry
  endpoint:
    path: /updateEntry
    method: POST
- name: deleteEntry
  endpoint:
    path: /deleteEntry
    method: POST
- name: goal
  endpoint:
    path: /goals
    method: GET
    data_selector: Goal
    params: {}
- name: goal_histories
  endpoint:
    path: /goalHistories
    method: GET
    data_selector: GoalHistory
    params: {}
- name: insurancePlans
  endpoint:
    path: /insurancePlans
    method: GET
    data_selector: InsurancePlan
- name: superBills
  endpoint:
    path: /superBills
    method: GET
    data_selector: SuperBill
- name: cms1500s
  endpoint:
    path: /cms1500s
    method: GET
    data_selector: Cms1500
- name: list_documents
  endpoint:
    path: /documents
    method: GET
    data_selector: Document
- name: retrieve_document
  endpoint:
    path: /document
    method: GET
    data_selector: Document
- name: create_document
  endpoint:
    path: /document
    method: POST
    data_selector: createDocumentPayload
- name: update_document
  endpoint:
    path: /document
    method: PUT
    data_selector: updateDocumentPayload
- name: delete_document
  endpoint:
    path: /document
    method: DELETE
    data_selector: deleteDocumentPayload
notes:
- Some endpoints may require additional permissions.
- createClient can be called unauthenticated.
- Conversations are manually created via the createConversation mutation, which needs
  to be called from an authenticated staff/provider account.
- Conversations are updated via the updateConversation mutation, which needs to be
  called from an authenticated staff/provider account.
- Patients cannot be deleted, they should be archived instead.
- If your service continues to return an error, we will disable the webhook after
  approximately 3 days.
- Each webhook request includes several headers that are used to ensure the authenticity
  and integrity of the request.
- Group video calls can only be conducted using the Zoom integration, not with Healthie
  video calls / OpenTok.
errors:
- 'Unauthorized: Check authentication credentials.'
- 'Not Found: Ensure the requested resource exists.'
- 'Webhook delivery failed: Service returned an error'
auth_info:
  mentioned_objects: []
client:
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  base_url: https://your-instance.api-name.com
  headers:
    Accept: application/json
  paginator:
    default_page_size: 10
source_metadata: null
