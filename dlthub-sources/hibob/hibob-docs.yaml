resources:
- name: job_ads
  endpoint:
    path: /job-ads/{id}
    method: GET
    data_selector: details
    params: {}
- name: employees
  endpoint:
    path: /employees/start-date
    method: POST
- name: people_email
  endpoint:
    path: /people/{id}/email
    method: PUT
- name: employee_fields
  endpoint:
    path: /api/employee/fields
    method: GET
    data_selector: fields
    params: {}
- name: employee_data
  endpoint:
    path: /api/employee/data
    method: GET
    data_selector: employees
    params: {}
- name: job_family
  endpoint:
    path: /job-catalog/job-families
    method: GET
- name: equities
  endpoint:
    path: /people/{id}/equities
    method: GET
    data_selector: equities
    params: {}
- name: employee_search
  endpoint:
    path: /v1/people/search
    method: POST
    data_selector: fields
    params: {}
- name: employment
  endpoint:
    path: /v1/bulk/people/employment
    method: GET
- name: reason_codes
  endpoint:
    path: /timeoff/policy-types//reason-codes
    method: GET
- name: delete_equity_grant
  endpoint:
    path: /people/{id}/equities/{entry_id}
    method: DELETE
- name: upload_confidential_file
  endpoint:
    path: /people/confidential/upload
    method: POST
- name: people_variable
  endpoint:
    path: /people/{id}/variable
    method: POST
- name: company_reports
  endpoint:
    path: /v1/company/reports//download
    method: GET
- name: lifecycle
  endpoint:
    path: /people/{id}/lifecycle
    method: GET
    data_selector: historical lifecycle entries
    params: {}
- name: avatars
  endpoint:
    path: /avatars
    method: GET
    data_selector: avatar_url
- name: people_search
  endpoint:
    path: /v1/people/search
    method: POST
    data_selector: internal
    params: {}
- name: people_fields
  endpoint:
    path: /company/people/fields/{fieldId}
    method: DELETE
- name: position_budget
  endpoint:
    path: /positions/position-budget/metadata
    method: GET
    data_selector: fields
- name: folder_metadata
  endpoint:
    path: /folder/metadata
    method: GET
- name: employee_document_upload
  endpoint:
    path: /employee/documents/upload
    method: POST
- name: document_deletion
  endpoint:
    path: /documents/delete
    method: DELETE
- name: employee_document_links
  endpoint:
    path: /employee/documents/links
    method: GET
- name: position
  endpoint:
    path: /v1/metadata/objects/position
    method: GET
    data_selector: {}
    params: {}
- name: delete_salary_entry
  endpoint:
    path: /people/{id}/salaries/{entry_id}
    method: DELETE
    data_selector: null
    params: {}
- name: variable_payment
  endpoint:
    path: /people/{id}/variable/{entry_id}
    method: DELETE
- name: people_search
  endpoint:
    path: /people/search
    method: POST
- name: employment_history
  endpoint:
    path: /v1/people/search
    method: POST
    data_selector: employees
    params: {}
- name: position_budget
  endpoint:
    path: /v1/positions/position-budget/search
    method: POST
- name: tasks
  endpoint:
    path: /tasks
    method: GET
- name: job_ads
  endpoint:
    path: /hiring/job-ads/search
    method: POST
    data_selector: job_ads
    params: {}
- name: delete_document
  endpoint:
    path: /v1/docs/people//folders//
    method: DELETE
- name: tasks
  endpoint:
    path: /v1/tasks/people/{id}
    method: GET
    data_selector: ''
    params: {}
- name: work_entry
  endpoint:
    path: /v1/people/{id}/work/{entry_id}
    method: DELETE
- name: work_entry
  endpoint:
    path: /people/{id}/work/{entry_id}
    method: PUT
- name: employment_history
  endpoint:
    path: /people/{id}/employment
    method: GET
    data_selector: employment_entries
    params: {}
- name: work_history
  endpoint:
    path: /bulk/people/work
    method: GET
- name: confidential_upload
  endpoint:
    path: /v1/docs/people/{id}/confidential
    method: POST
    data_selector: ''
    params: {}
- name: custom_tables_metadata
  endpoint:
    path: /people/custom-tables/metadata
    method: GET
    data_selector: ''
    params: {}
- name: people
  endpoint:
    path: /people/
    method: POST
    data_selector: ''
    params: {}
- name: company_reports
  endpoint:
    path: /company/reports
    method: GET
    data_selector: reports
    params: {}
- name: job_family_group
  endpoint:
    path: /job-catalog/job-family-groups
    method: GET
- name: payroll_history
  endpoint:
    path: /payroll/history
    method: GET
    data_selector: ''
    params: {}
- name: company_named_lists
  endpoint:
    path: /company/named-lists/{listName}
    method: GET
- name: folders_metadata
  endpoint:
    path: /folders/metadata
    method: GET
    data_selector: folders
- name: metadata_custom_tables
  endpoint:
    path: /custom-tables/metadata
    method: GET
- name: specific_custom_table_metadata
  endpoint:
    path: /custom-tables/metadata/{tableId}
    method: GET
- name: all_entries_custom_table
  endpoint:
    path: /custom-tables/{tableId}/entries
    method: GET
- name: create_custom_table_entry
  endpoint:
    path: /custom-tables/{tableId}/entries
    method: POST
- name: update_custom_table_entry
  endpoint:
    path: /custom-tables/{tableId}/entries/{entryId}
    method: PUT
- name: delete_custom_table_entry
  endpoint:
    path: /custom-tables/{tableId}/entries/{entryId}
    method: DELETE
- name: delete_document
  endpoint:
    path: /docs/people/{id}/shared/{docId}
    method: DELETE
    data_selector: ''
    params: {}
- name: job_role
  endpoint:
    path: /job-catalog/job-roles
    method: GET
- name: salaries
  endpoint:
    path: /people/{id}/salaries
    method: POST
- name: employee_balance
  endpoint:
    path: /timeoff/employees/{id}/balance
    method: GET
    data_selector: balance
    params: {}
- name: position
  endpoint:
    path: /objects/position/search
    method: POST
- name: salaries
  endpoint:
    path: /people/{id}/salaries
    method: GET
    data_selector: historical_salary_entries
    params: {}
- name: time_off_requests
  endpoint:
    path: /timeoff/requests
    method: POST
- name: who_is_out
  endpoint:
    path: /timeoff/whoisout
    method: GET
- name: policy_type_metadata
  endpoint:
    path: /timeoff/policytype
    method: GET
- name: balance_adjustment
  endpoint:
    path: /timeoff/balance
    method: POST
- name: new_hire
  endpoint:
    path: /api/integrations/ats/hire/<service user/token>
    method: POST
    data_selector: documents
    params: {}
- name: named_lists
  endpoint:
    path: /company/named-lists/{listName}/{itemId}
    method: DELETE
    data_selector: ''
    params: {}
- name: welcome_wizard
  endpoint:
    path: /onboarding/wizards
    method: GET
    data_selector: wizard_info
- name: work_history
  endpoint:
    path: /people/{id}/work
    method: GET
    data_selector: historical work entries
    params: {}
- name: shared_docs
  endpoint:
    path: /people/{id}/shared
    method: POST
    data_selector: 'null'
    params: {}
- name: employment
  endpoint:
    path: /people//employment/
    method: PUT
- name: company_named_lists
  endpoint:
    path: /company/named-lists
    method: GET
- name: position_openings_metadata
  endpoint:
    path: /v1/positions/position-openings/metadata
    method: GET
    data_selector: fields
- name: employee_events
  endpoint:
    path: /webhooks/employee
    method: POST
    data_selector: data
- name: payroll_entry
  endpoint:
    data_selector: data
    params: {}
- name: bank_accounts_entry
  endpoint:
    data_selector: data
    params: {}
- name: job_ads
  endpoint:
    path: /get_all_active_job_ads
    method: GET
    data_selector: job_ads
    params:
      filters: '[]'
- name: job_ad_details
  endpoint:
    path: /get_job_ad_details
    method: GET
    data_selector: job_ad_details
    params: {}
- name: people
  endpoint:
    path: /people/{identifier}
    method: PUT
- name: time_off_request
  endpoint:
    path: /timeoff/employees/{id}/requests/{requestId}
    method: DELETE
- name: update_field
  endpoint:
    path: /company/people/fields/{fieldId}
    method: PUT
    data_selector: ''
    params: {}
- name: job_profile_metadata
  endpoint:
    path: /job-catalog/job-profiles/metadata
    method: GET
    data_selector: fields
- name: positions
  endpoint:
    path: /positions
    method: GET
- name: position_openings
  endpoint:
    path: /position_openings
    method: GET
- name: position_budgets
  endpoint:
    path: /position_budgets
    method: GET
- name: report_download
  endpoint:
    path: /v1/company/reports/download/
    method: GET
    data_selector: reportName
    params: {}
- name: policy_types
  endpoint:
    path: /v1/timeoff/policy-types
    method: GET
    data_selector: policy_types
    params: {}
- name: employment
  endpoint:
    path: /people/{id}/employment
    method: POST
- name: custom_tables_metadata
  endpoint:
    path: /people/custom-tables/metadata/
    method: GET
- name: upload_file
  endpoint:
    path: /people/folders/upload
    method: POST
    data_selector: null
    params: {}
- name: profiles
  endpoint:
    path: /profiles
    method: GET
- name: salary_history
  endpoint:
    path: /bulk/people/salaries
    method: GET
- name: bank_account
  endpoint:
    path: /people/{id}/bank-accounts
    method: POST
    data_selector: ''
    params: {}
- name: uninvite_employee
  endpoint:
    path: /employees/{identifier}/uninvite
    method: POST
- name: task_events
  endpoint:
    path: /tasks
    method: GET
    data_selector: data
- name: onboarding_wizards_summary
  endpoint:
    path: /onboarding/wizards/summary
    method: GET
- name: bank_accounts
  endpoint:
    path: /people/{id}/bank-accounts
    method: GET
    data_selector: bank_accounts
    params: {}
- name: custom_tables_metadata
  endpoint:
    path: /people/custom-tables/metadata
    method: GET
    data_selector: tables
    params: {}
- name: custom_table_data
  endpoint:
    path: /people/custom-tables/{employee_id}/{table_id}
    method: GET
    data_selector: values
    params: {}
- name: job_profiles
  endpoint:
    path: /jobProfiles
    method: GET
    data_selector: profiles
    params: {}
- name: job_roles
  endpoint:
    path: /jobRoles
    method: GET
    data_selector: roles
    params: {}
- name: job_families
  endpoint:
    path: /jobFamilies
    method: GET
    data_selector: families
    params: {}
- name: job_family_groups
  endpoint:
    path: /jobFamilyGroups
    method: GET
    data_selector: familyGroups
    params: {}
- name: webhook_event
  endpoint:
    path: /webhooks/v2/events
    method: POST
    data_selector: payload
- name: add_item_to_named_list
  endpoint:
    path: /v1/company/named-lists/{listName}
    method: POST
- name: time_off_out_today
  endpoint:
    path: /timeoff/outtoday
    method: GET
    data_selector: records
    params: {}
- name: job_family_groups_metadata
  endpoint:
    path: /v1/job-catalog/job-family-groups/metadata
    method: GET
- name: update_employee
  endpoint:
    path: /people/{identifier}
    method: PUT
    data_selector: root
    params: {}
- name: named_lists
  endpoint:
    path: /company/named-lists
    method: PUT
- name: employee_invitations
  endpoint:
    path: /employees/{employeeId}/invitations
    method: POST
    data_selector: ''
    params: {}
- name: active_job_ads
  endpoint:
    path: /api/job_ads
    method: POST
    data_selector: jobAds
    params: {}
- name: terminate_employee
  endpoint:
    path: /employees//terminate
    method: POST
    data_selector: null
    params: {}
- name: upload_file
  endpoint:
    path: /{id}/shared/upload
    method: POST
- name: reason_codes
  endpoint:
    path: /v1/timeoff/policy-types//reason-codes
    method: POST
- name: Read company reports
  endpoint:
    path: /company/reports
    method: GET
- name: Download report by ID
  endpoint:
    path: /company/reports/{reportId}/download
    method: GET
- name: Generate report asynchronously
  endpoint:
    path: /company/reports/{reportId}/download-async
    method: GET
- name: Download generated report
  endpoint:
    path: /company/reports/download/{reportName}
    method: GET
- name: position_openings
  endpoint:
    path: /positions/position-openings/search
    method: POST
- name: Read company reports
  endpoint:
    method: GET
- name: Download the report by ID
  endpoint:
    method: GET
- name: Get the report download URL for polling
  endpoint:
    method: GET
- name: Download report by file URL
  endpoint:
    method: GET
- name: work
  endpoint:
    path: /people/{id}/work
    method: POST
- name: Get Policy type reason codes
  endpoint:
    method: GET
- name: Add a list of reason codes for a given policy type
  endpoint:
    method: POST
- name: Get Policy type details
  endpoint:
    method: GET
- name: Get all policy types names
  endpoint:
    method: GET
- name: Get Policy details
  endpoint:
    method: GET
- name: Get a list of policy names for a given policy type
  endpoint:
    method: GET
- name: time_off_requests
  endpoint:
    path: /timeoff/requests
    method: GET
- name: time_off_policies
  endpoint:
    path: /timeoff/policies
    method: GET
- name: employee_fields_metadata
  endpoint:
    path: /v1/company/people/fields
    method: GET
    data_selector: fields
    params: {}
- name: download_async_report
  endpoint:
    path: /v1/company/reports//download-async
    method: GET
    data_selector: status
    params: {}
- name: balance_adjustment
  endpoint:
    path: /timeoff/employees//adjustments
    method: POST
    data_selector: null
    params: {}
- name: bank_accounts
  endpoint:
    path: /v1/people//bank-accounts/
    method: PUT
- name: employee_bank_accounts
  endpoint:
    path: /people/{employee-id}/bank-accounts
    method: GET
- name: policy_types
  endpoint:
    path: /timeoff/policy-types/
    method: GET
    data_selector: ''
- name: timeoff_requests_changes
  endpoint:
    path: /v1/timeoff/requests/changes
    method: GET
    data_selector: changes
- name: equities
  endpoint:
    path: /v1/people/{id}/equities
    method: POST
- name: lifecycle_entries
  endpoint:
    path: /v1/bulk/people/lifecycle
    method: GET
- name: people
  endpoint:
    path: /v1/people
    method: POST
    data_selector: ''
    params: {}
- name: custom_tables
  endpoint:
    path: /people/custom-tables
    method: POST
- name: employment
  endpoint:
    path: /people//employment/
    method: DELETE
- name: employee_fields_metadata
  endpoint:
    path: /v1/company/people/fields
    method: GET
    data_selector: fields
    params: {}
- name: company_lists_metadata
  endpoint:
    path: /v1/company/named-lists/{listName}
    method: GET
    data_selector: values
    params: {}
- name: timeoff_request
  endpoint:
    path: /v1/timeoff/employees/{employeeId}/requests/{timeoffRequestId}
    method: GET
    data_selector: payload
- name: job_family_metadata
  endpoint:
    path: /job-catalog/job-families/metadata
    method: GET
- name: eSign Document Signing Complete
  endpoint:
    path: /api/events/eSign
    method: POST
    data_selector: data
    params: {}
- name: equities
  endpoint:
    path: /people/{id}/equities/{entry_id}
    method: PUT
    data_selector: null
    params: {}
- name: avatars
  endpoint:
    path: /avatars/{employeeId}
    method: GET
- name: actual_payments
  endpoint:
    path: /people/actual-payments/search
    method: POST
- name: custom_tables
  endpoint:
    path: /people/custom-tables
    method: GET
- name: time_off_requests
  endpoint:
    path: /timeoff/employees/{id}/requests
    method: POST
- name: timeoff_policy
  endpoint:
    path: /timeoff/policies
    method: GET
    data_selector: null
    params: {}
- name: time_off_request
  endpoint:
    path: /timeoff/employees/{id}/requests/{requestId}
    method: GET
- name: whosout
  endpoint:
    path: /timeoff/whosout
    method: GET
    data_selector: ''
    params: {}
- name: attendance_import
  endpoint:
    path: /attendance/import/{importMethod}
    method: POST
    data_selector: null
    params: {}
- name: job_profiles
  endpoint:
    path: /job-catalog/job-profiles/search
    method: POST
- name: policy_names
  endpoint:
    path: /timeoff/policies/names
    method: GET
    data_selector: data
    params: {}
- name: open_tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: employee_specific_tasks
  endpoint:
    path: /tasks/people/{id}
    method: GET
    data_selector: tasks
- name: mark_task_complete
  endpoint:
    path: /tasks/{taskId}/complete
    method: POST
    data_selector: status
- name: job_roles_metadata
  endpoint:
    path: /job-catalog/job-roles/metadata
    method: GET
    data_selector: fields
notes:
- This feature is in beta and may change as we continue to improve it.
- The token is the calculated base64 encoded.
- Calculated fields and historical tables cannot be created by the user or via the
  Public API.
- The service user making the call must have the required permissions
- Fields containing list items need to be converted from the numeric ID to the human
  readable value.
- This section covers employee data endpoints. To access historical data, see the
  Employee Tables endpoints.
- Partial fetching/updating of Fields could indicate that the Service User's permissions
  do not cover all the requested data.
- Empty response when using the Search with no 'fields' filter may occur if required
  Permissions for default employee fields are not set.
- In order to access the employment history, the service user must have specific permissions.
- Please refer to the main Time off API Required Permissions page.
- Make sure you set the right permissions to the Service User in order to upload the
  file.
- The service user that you use for this call should have the required permissions.
- 'To allow the service user to read the avatar, enable the permission: People''s
  data > About > View selected employees'' About sections.'
- Service user must have permissions for the categories to retrieve data.
- Ensure API Service users have the appropriate permissions to access and manage document
  folders effectively.
- Some objects like Contact may return nulls in deeply nested fields
- Only employee fields are supported. Table entries cannot be retrieved via this endpoint.
- Default fields will be returned if no specific fields are requested.
- FTE % is calculated by the API based on working patterns.
- Bi-weekly patterns cannot be assigned as the site default.
- This endpoint requires body parameters.
- The entire work entry will be overwritten with the data provided in your payload.
- Using patchUpdate approach is not recommended and should be reserved for legacy
  implementations only.
- In order to access the employment history of each requested employee, the service
  user making the call must have the required permissions.
- This endpoint requires body parameters, which is why it utilizes a POST request
  for a read operation.
- To retrieve custom fields, you need to specify their field id in the body parameters.
- The Fields metadata endpoint retrieves fields and table columns representing employee
  data.
- Fields returned by the Fields metadata can be accessed using the Search for employees
  endpoint, except for the 'Actual Payments' table, which should be accessed via the
  Search for actual payments endpoint.
- The service user making the call must have the required permissions.
- This endpoint is maintained for legacy purposes but is planned for deprecation in
  the future. We recommend using alternative employee table endpoints where possible.
- Rate limits are restrictions that our API imposes on the number of times a user
  can access our endpoints within a specified period of time.
- Bob's API rate limit determines how many API calls can be made per minute.
- If you exceed this limit, you'll get an HTTP status code of 429, meaning too many
  requests.
- When using the getApi URL to retrieve details of a time off request that has just
  been created via import, the status in the response will be approved, because imported
  requests are always approved by default.
- The maximum limit value is 200.
- Make sure to perform URL encoding on the next-cursor before you send it as a query
  parameter.
- The values of the list fields represent the list item ID and not the list item value.
  To obtain the corresponding list item value, use the HiBob metadata API to determine
  the field list name.
- In order to access the payroll history, the service user must have the required
  permissions.
- The Hire API endpoint is dynamically generated when the user activates the integration
  in Bob.
- 'To delete items from a list ensure the service user has the following permission:
  Features > People > Edit all lists (sites, job titles, etc.)'
- Deleting a table entry will not trigger a webhook event.
- 'The following tables do not trigger a ''table updated/created'' event: Training,
  Equity, Positions, Jobs.'
- 'Supported user types: Service.'
- Your use of the APIs is subject to these API Terms.
- You must only access the APIs in accordance with these API Terms and the HiBob Documents.
- Starting April 17, 2025 you can no longer create new V1 webhooks.
- Existing webhooks v1 will continue to run in parallel to v2 after April 1, 2025.
- Bob's Webhooks use Admin access rights, which means the payload may contain sensitive
  data and should be managed carefully.
- Always specify which fields to fetch using the 'fields' parameter in the request
  body.
- To retrieve job ads, send an empty array in the 'filters' parameter to retrieve
  all active job ads.
- Although a Bob Admin can move fields between categories, for some fields this may
  affect platform behavior and other features in Bob.
- If the service user doesn’t have permission to access the Work category, the data
  returned will not include fields placed under the work category.
- When setting permissions, the category name in the UI may be different from the
  category ID.
- Only employee fields are supported; table updates are not allowed via this endpoint.
- Position fields cannot be updated using this endpoint.
- 'Permissions required: Manage company''s time off settings, Create, edit, and cancel
  people''s requests that haven''t been approved yet'
- Files can be uploaded up to a maximum size of 5MB for general uploads.
- Uploads to custom folders have a size limit of 1MB.
- 'Required permissions: explore ''Required permissions'' section in each module of
  the BOB API to learn more about the permissions required to access different data
  types.'
- 'Employee data fields: To learn how to find the right permission, what happens when
  you move permissions between categories, and how to access sensitive employee fields,
  see Categories and permissions.'
- If you receive 204 error response, this means the reports is not ready yet. In this
  case you should try again.
- Discontinuation of API Access Tokens starting October 31, 2024.
- Creation of new API Tokens removed effective June 15, 2024.
- Employee tables are systematically organized within categories.
- Some of the endpoints use cursor-based pagination to go through the results.
- The values of the list fields represent the list item ID and not the list item value.
- Uses the event as a notification only, and retrieve the complete task details by
  using the Read tasks of a specific employee API endpoint.
- Rate limit of 20 requests per minute for the onboarding wizards summary endpoint.
- The Bank Account details are listed under the 'Financial' category in Bob's UI.
- The Job level and Job Track cannot be retrieved directly from the Public API.
- The Grade cannot be accessed from the Public API at the moment.
- Webhook events are saved for at least two working days.
- Non-working days include Friday, Saturday, and Sunday.
- Webhooks v2 will eventually replace Webhooks v1.
- No immediate action is required for existing Webhooks V1.
- Webhooks V2 introduces improvements like reduced payload size, better retry mechanisms,
  and more secure data delivery.
- Follow the Time off API Required Permissions instructions to ensure the service
  user has the required permissions.
- This endpoint cannot update non-employee entities, like Positions.
- Bob's Out-of-the-box table columns cannot be updated using the fields update endpoint.
- Explore the People API main reference page for information about rate limits, permissions,
  troubleshooting and more.
- This changes the employee’s status to Terminated according to specified termination
  date.
- 'Supported user types: Service'
- 'Permissions required: Please refer to the main Time off API Required Permissions
  page'
- This endpoint requires body parameters for Fields and Filters.
- Pagination is cursor-based.
- Rate limit for each endpoint is 20 requests per minute.
- Rate limits apply to the number of times a user can access endpoints.
- The new job catalog API is available only for users working with the new Job catalog
  2.0, currently open only to new customers and customers who had not used the job
  catalog before February 9, 2025.
- Job level definition cannot be retrieved via the public API
- If successful, it returns the status `Accepted` and the URL of the newly generated
  report in the response header under a header called `Location`.
- Make sure you set the right permissions to the Service User in order to remove the
  file.
- If you have not purchased Workforce planning, you will not have access to this feature.
- 'To use the Workforce planning endpoints, make sure to set up the following permissions:
  Features > Workforce planning > Position management > Manage positions'
- 'Permissions required: Please refer to the main Time off API Required Permissions
  page.'
- Out-of-the-box columns will be completely overwritten with the data provided in
  your payload.
- Custom columns will remain unchanged unless explicitly included in the payload.
- The results are filtered by the date the change has occurred, not the start/end
  date of the time off request itself.
- Each change reflects a snapshot of the time off request's status at the time of
  the change, and may not reflect the current status.
- 'To import the attendance data, make sure the service user has the following permission
  granted: People''s data > Time attendance > Manage time attendance sheets.'
- This endpoint uses cursor-based pagination to handle large number of table entries.
- This creates a new employee record in Bob. You can include only the fields listed
  in the Fields Metadata API.
- 'For requests that are approved automatically, two events are sent one after the
  other: submitted then approved.'
- When using the getApi URL to retrieve details of a declined time off request, the
  status in the response will be disapproved.
- 'In order to access the actual payments history of each requested employee, the
  service user making the call must have the permission: People''s Data > Payroll
  > View selected employees'' Payroll sections.'
- 'Permissions required: People''s Data > Time off > See who''s out today > See who''s
  out'
- Refer to the Migrate to webhooks v2 for detailed steps on adapting your integration
  and FAQs.
- Migration requires using Bob's Public API. If you are new to Bob's API, first read
  Getting started with Bob API.
- For update events, you need to parse the fieldIds included in the webhooks event's
  payload and include them in the API request body to retrieve the updated values.
- If migrating from Webhooks v1, ensure that permissions are configured correctly
  for the service user and that you identify all required fields beforehand to avoid
  missing critical data.
- Only active users are included in the response.
- 'Permissions: Follow the Time off API Required Permissions instructions to ensure
  the service user has the required permissions.'
- This endpoint requires body parameters, which is why it is implemented as a POST
  request.
- A filter is mandatory.
- To access time off balances and policies via the API, ensure the required permissions
  are set.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- HTTP 429 Too Many Requests
- 'Invalid webhook event type: Ensure the event type is supported.'
- 'Rate limit exceeded: Throttle API calls or reduce frequency'
- '204 No Content: Report is not ready yet.'
- 'Delivery error: Check listener accessibility and response.'
- 'Inactive: Webhook deactivated due to repeated failures.'
- '304 Not Modified: Ensure you are setting a new value to the field and that you
  are using the correct Field ID format.'
- '200 OK: Indicates that the update was successful, but partial updates may occur
  due to permission issues.'
- '404 (not found): Indicates that Bob is using the previous version of the Job Catalog,
  which is not accessible via API. You should migrate to the new JobCatalog to access
  via the API'
- '403 (forbidden): Indicates the service user doesn’t have the required permissions
  to access Job catalog.'
- Rate limits are restrictions that our API imposes on the number of times a user
  can access our endpoints within a specified period of time.
- 'Rate limit exceeded: 5 requests per minute for Import attendance data'
- '403 Forbidden: Check your permissions settings'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.hibob.com/v1
  headers:
    Accept: application/json
    Content-Type: application/json
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  paginator:
    type: cursor
    cursor_param: cursor
    page_size_param: limit
    default_page_size: 50
  resources:
  - name: complete_task
    endpoint:
      path: /tasks/{taskId}/complete
      method: POST
  - name: training
    endpoint:
      path: /people/{id}/training
      method: GET
  - name: create_field
    endpoint:
      path: /company/people/fields
      method: POST
  - name: training
    endpoint:
      path: /people/{id}/training
      method: POST
  - name: training_record
    endpoint:
      path: /people/{id}/training/{entry_id}
      method: DELETE
  - name: variable_payments
    endpoint:
      path: /people/{id}/variable
      method: GET
  - name: people
    endpoint:
      path: /people/{id}
      method: GET
  - name: avatar
    endpoint:
      path: /avatars/{employeeId}
      method: PUT
source_metadata: null
