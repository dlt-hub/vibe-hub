resources:
- name: virtual_device
  endpoint:
    path: /virtual_device
    method: POST
    data_selector: data
- name: flic_twist
  endpoint:
    path: /flic_twist
    method: POST
    data_selector: data
- name: button
  endpoint:
    path: /api/v1/button/{button_number}
    method: GET
    data_selector: status
    params: {}
- name: virtual_light
  endpoint:
    path: /light/album_dial
    method: POST
    data_selector: light
    params: {}
- name: mqtt_event
  endpoint:
    path: /mqtt/home/album_dial/switch
    method: POST
    data_selector: event
    params: {}
- name: setPlayerCmd
  endpoint:
    path: /httpapi.asp
    method: GET
    data_selector: null
    params:
      command: setPlayerCmd:mute:0
- name: trigger_event
  endpoint:
    path: /uri
    method: POST
    data_selector: event
    params: {}
- name: flic_button
  endpoint:
    path: /buttons
    method: GET
    data_selector: buttons
- name: matter_device
  endpoint:
    path: /sendCommand
    method: POST
    data_selector: response
    params: {}
- name: matter_subscription
  endpoint:
    path: /subscribe
    method: POST
    data_selector: response
    params: {}
- name: button
  endpoint:
    path: /api/v1/button/{button_number}
    method: GET
    data_selector: status
- name: matter_device
  endpoint:
    path: /sendCommand
    method: POST
    data_selector: response
    params: {}
- name: brightness_control
  endpoint:
    path: /setBrightness
    method: POST
    data_selector: response
    params: {}
- name: color_temperature_control
  endpoint:
    path: /setColorTemperature
    method: POST
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /subscribe
    method: POST
    data_selector: response
    params: {}
- name: putIRarray
  endpoint:
    path: /putIRarray/<IR_NAME>:<IR_ARRAY>
    method: GET
- name: getIRarray
  endpoint:
    path: /getIRarray/<IR_NAME>
    method: GET
- name: recordIR
  endpoint:
    path: /recordIR/<IR_NAME>
    method: GET
- name: playIR
  endpoint:
    path: /playIR/<IR_SEQUENCE>
    method: GET
- name: putIRarray
  endpoint:
    path: /putIRarray/<IR_NAME>:<IR_ARRAY>
    method: GET
    data_selector: ''
    params: {}
- name: getIRarray
  endpoint:
    path: /getIRarray/<IR_NAME>
    method: GET
    data_selector: ''
    params: {}
- name: recordIR
  endpoint:
    path: /recordIR/<IR_NAME>
    method: GET
    data_selector: ''
    params: {}
- name: playIR
  endpoint:
    path: /playIR/<IR_SEQUENCE>
    method: GET
    data_selector: ''
    params: {}
- name: virtual_device
  endpoint:
    path: /virtual_device/update
    method: POST
    data_selector: values
    params: {}
- name: action_message
  endpoint:
    path: /action/message
    method: GET
    data_selector: message
    params: {}
- name: Twist Functionality
  endpoint:
    path: /twist/functionality
    method: GET
    data_selector: functionality
    params: {}
- name: record_signal
  endpoint:
    path: /?record={name_of_signal}
    method: GET
- name: play_signal
  endpoint:
    path: /?cmd={name_of_signal}
    method: GET
- name: cancel_recording
  endpoint:
    path: /?cancelRecord=true
    method: GET
- name: recordIR
  endpoint:
    path: /recordIR/{IR_NAME}
    method: GET
- name: playIR
  endpoint:
    path: /playIR/{IR_SEQUENCE}
    method: GET
- name: putIRarray
  endpoint:
    path: /putIRarray/{IR_NAME}:{IR_ARRAY}
    method: GET
- name: getIRarray
  endpoint:
    path: /getIRarray/{IR_NAME}
    method: GET
- name: album_dial
  endpoint:
    path: /services/light/album_dial
    method: POST
    data_selector: state
    params: {}
- name: putIRarray
  endpoint:
    path: /putIRarray/<IR_NAME>:<IR_ARRAY>
    method: GET
- name: getIRarray
  endpoint:
    path: /getIRarray/<IR_NAME>
    method: GET
- name: recordIR
  endpoint:
    path: /recordIR/<IR_NAME>
    method: GET
- name: playIR
  endpoint:
    path: /playIR/<IR_SEQUENCE>
    method: GET
- name: httpapi
  endpoint:
    path: /httpapi.asp
    method: GET
    data_selector: response
    params:
      command: setPlayerCmd:mute:0
- name: setPlayerCmd
  endpoint:
    path: /httpapi.asp
    method: GET
    data_selector: null
    params:
      command: setPlayerCmd:mute:0
- name: writeAttribute
  endpoint:
    path: /flic/hub/sdk/matter/writeAttribute
    method: POST
    data_selector: result
- name: getNodes
  endpoint:
    path: /flic/hub/sdk/matter/getNodes
    method: GET
    data_selector: nodes
- name: record_signal
  endpoint:
    path: /?record={name_of_signal}
    method: GET
- name: play_signal
  endpoint:
    path: /?cmd={name_of_signal}
    method: GET
- name: cancel_recording
  endpoint:
    path: /?cancelRecord=true
    method: GET
- name: virtual_device
  endpoint:
    path: /virtual_device
    method: POST
    data_selector: values
    params: {}
- name: action_message
  endpoint:
    path: /action_message
    method: GET
    data_selector: message
    params: {}
- name: virtual_light
  endpoint:
    path: /light/album_dial
    method: POST
    data_selector: state
    params: {}
- name: mqtt_events
  endpoint:
    path: /mqtt/publish
    method: POST
    data_selector: event
    params: {}
- name: flic_button
  endpoint:
    path: /api/buttons
    method: GET
    data_selector: buttons
    params: {}
notes:
- This module is currently in Beta, API details may change before official release.
- The program is accessible by any device on the same WiFi network.
- The last number in the URL can be changed between 1-18 for the buttons.
- Ensure Home Assistant and Matterbridge are properly configured.
- MQTT events can be published for integration with Flic Hub.
- Battery usage is regarded as normal wear and tear and is therefore not covered by
  the 24-month warranty.
- This section applies only to products you purchase directly from our webshop (https://flic.io/shop).
- API only supports HTTPS with a self-signed certificate
- Requests with curl work ok
- The mini hub will not have SDK support.
- To configure your Flic, just add an Internet Request with the appropriate values.
- The literature is vague, and I am trying to connect my Flic buttons to the device
  pallet.
- 'The program will listen to requests on the URL: http://192.168.1.10:4343/api/v1/button/1'
- The last number '1' in the URL can be changed between 1-18 for the buttons.
- Https with a non-trusted certificate is kind of insecure anyway.
- Even if that certificate isn't trusted by browsers (or a CA) having some encryption
  is better than none.
- 'I am hoping there is a way to disable the TLS check, Home Assistant provides the
  verify_ssl: false option.'
- You cannot write to the CurrentLevel attribute directly using a raw write since
  it is read only.
- The server has 4 methods using a semantic url path
- The values are always floating point numbers between 0 and 1.
- Current time is always returned in UTC; no support for setting timezones.
- Workaround suggested for handling timezones and DST manually.
- No developer documentation specifically for the Twist available.
- The button can only be connected to a hub.
- Uses MQTT for Custom Events
- Now I just wish Flic would create some sort of copy function to make it easier to
  reuse those commands:-) And that Sonos would open their official API for better
  integration and remote control.
- No developer documentation specifically for the Twist anywhere
- The button can only be connected to a hub
- Restart Home Assistant for changes to take effect.
- Virtual light should appear in the Matterbridge logs.
- Flic Hub configured with the Flic App UI is unable to make requests even when validation
  is turned off.
- Requests with curl work ok using --insecure.
- Currently uses UTC time, with no way to set a timezone in the app or in code.
- Workaround suggested to manually adjust hours offset for time zone and DST.
- 'Home Assistant provides the verify_ssl: false option.'
- Requests with curl work ok with --insecure option.
- Requests with curl work ok using --insecure option
- API only supports HTTPS with a self-signed certificate.
- Requests with curl work okay with --insecure flag.
- FlicScript always uses UTC time, and there is no way to set a timezone in the app
  or even in code.
- As a new user, you can only post once every 300 second(s) until you have earned
  2 reputation - please wait before posting again
- The next firmware update will allow for the previous call signature as well.
- Restart Home Assistant after configuration.
- Link Flic Twist to Virtual Light for brightness control.
- I'm looking for a way to see the complete request payload when a button is click/doubl-clicked/hold.
- I need to know the request structure so I can use it in a follow-up payload HTTP
  response.
errors:
- '400 Bad Request: Valid url paths are recordIR/<IR_NAME> and playIR/<IR_SEQUENCE>'
- Firmware issues may cause connectivity problems with supported devices.
auth_info:
  mentioned_objects: []
client:
  base_url: https://hubsdk.flic.io
  headers:
    Content-type: application/json
    Accept: application/json
    Content-Type: application/x-www-form-encoded
    User-Agent: curl/8.4.0
  paginator:
    type: cursor
source_metadata: null
