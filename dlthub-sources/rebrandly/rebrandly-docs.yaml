resources:
- name: domain
  endpoint:
    path: /domains
    method: GET
    data_selector: domains
    params: {}
- name: script
  endpoint:
    path: /scripts/:id
    method: GET
    data_selector: script
    params: {}
- name: domain
  endpoint:
    path: /domains/{id}
    method: GET
    data_selector: id
    params: {}
- name: tag
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: links
  endpoint:
    path: /v1/links
    method: POST
    data_selector: ''
    params: {}
- name: presets
  endpoint:
    path: /v1/url/querystring/templates/{TEMPLATE_ID}/presets/{PRESET_ID}
    method: DELETE
- name: links
  endpoint:
    path: /v1/links
    method: POST
    data_selector: id
- name: branded_short_link
  endpoint:
    path: /links
    method: GET
    data_selector: links
- name: links
  endpoint:
    path: /v1/links
    method: POST
    data_selector: id
- name: account
  endpoint:
    path: /v1/account
    method: GET
    data_selector: account
    params: {}
- name: links
  endpoint:
    path: /v1/links
    method: POST
    data_selector: link
    params: {}
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: tags
  endpoint:
    path: /v1/tags
    method: GET
    data_selector: tags
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
- name: links
  endpoint:
    path: /links
    method: POST
- name: links
  endpoint:
    path: /links/{id}
    method: POST
- name: account
  endpoint:
    path: /v1/account
    method: GET
    data_selector: account
    params: {}
- name: routing_rules
  endpoint:
    path: /links/{link_id}/rules
    method: POST
    data_selector: ''
    params: {}
- name: branded_short_links
  endpoint:
    path: /v1/links
    method: GET
    data_selector: links
    params:
      orderBy: createdAt
      orderDir: desc
      limit: 25
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: account
    params: {}
- name: presets
  endpoint:
    path: /v1/url/querystring/templates/{TEMPLATE_ID}/presets
    method: POST
    data_selector: id
    params: {}
- name: links
  endpoint:
    path: /v1/links
    method: PUT
- name: links
  endpoint:
    path: /v1/links
    method: POST
    data_selector: id
- name: new_links
  endpoint:
    path: /v1/links/new
    method: GET
    data_selector: id
- name: link
  endpoint:
    path: /v1/links/{id}
    method: GET
    data_selector: link
    params: {}
- name: Account
  endpoint:
    path: /account
    method: GET
- name: Workspace
  endpoint:
    path: /account/workspaces
    method: GET
- name: Domain
  endpoint:
    path: /domains
    method: GET
- name: Link
  endpoint:
    path: /links
    method: GET
- name: Tag
  endpoint:
    path: /tags
    method: GET
- name: Script
  endpoint:
    path: /scripts
    method: GET
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: '[]'
    params: {}
- name: count_domains
  endpoint:
    path: /v1/domains/count
    method: GET
    params:
      active: 'true'
      type: user
- name: count_links
  endpoint:
    path: /v1/links/count
    method: GET
    data_selector: count
    params: {}
- name: query_string
  endpoint:
    path: /url/querystring
    method: GET
- name: tag
  endpoint:
    path: /tags/{id}
    method: GET
    data_selector: tag
    params: {}
- name: query_parameters
  endpoint:
    path: /v1/url/querystring/templates/{TEMPLATE_ID}/params
    method: GET
    data_selector: '[]'
- name: delete_query_param
  endpoint:
    path: /templates/{TEMPLATE_ID}/params/{PARAM_ID}
    method: DELETE
    data_selector: id
    params: {}
- name: query_parameter
  endpoint:
    path: /v1/url/querystring/templates/{TEMPLATE_ID}/params/{PARAM_ID}
    method: POST
    data_selector: id
    params: {}
- name: scripts
  endpoint:
    path: /scripts
    method: GET
    data_selector: scripts
    params:
      orderBy: name
      orderDir: asc
      limit: 100
- name: script
  endpoint:
    path: /v1/scripts/:id
    method: POST
- name: templates
  endpoint:
    path: /v1/url/querystring/templates
    method: GET
    data_selector: response[0].id
    params: {}
- name: links
  endpoint:
    path: /links
    method: GET
    data_selector: ''
    params:
      orderBy: createdAt
      orderDir: desc
      limit: 100
      favourite: 'false'
- name: presets
  endpoint:
    path: /templates/{TEMPLATE_ID}/presets
    method: GET
    data_selector: records
    params: {}
- name: query_parameter
  endpoint:
    path: /v1/url/querystring/templates/{TEMPLATE_ID}/params
    method: POST
    data_selector: id
- name: presets
  endpoint:
    path: /v1/url/querystring/templates/{TEMPLATE_ID}/presets/{PRESET_ID}
    method: POST
    data_selector: data
    params: {}
- name: tags_count
  endpoint:
    path: /v1/tags/count
    method: GET
    data_selector: count
- name: delete_link
  endpoint:
    path: /v1/links/{id}
    method: DELETE
    data_selector: id
    params: {}
- name: delete_multiple_links
  endpoint:
    path: /v1/links
    method: DELETE
    data_selector: id
    params: {}
- name: OpenGraph Metadata
  endpoint:
    path: /links/{id}/opengraph
    method: GET
    data_selector: OpenGraph metadata
- name: tags
  endpoint:
    path: /v1/tags
    method: POST
    data_selector: ''
    params: {}
- name: tags
  endpoint:
    path: /tags/:id
    method: DELETE
    data_selector: id
    params: {}
- name: script
  endpoint:
    path: /scripts/:id
    method: DELETE
    data_selector: id
    params: {}
- name: tag
  endpoint:
    path: /v1/tags/{id}
    method: POST
    data_selector: id
    params: {}
- name: detach_script
  endpoint:
    path: /v1/links/:lid/scripts/:sid
    method: DELETE
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: links_tags
  endpoint:
    path: /v1/links/:lid/tags/:tid
    method: DELETE
- name: scripts
  endpoint:
    path: /scripts
    method: POST
    data_selector: id
- name: attach_script_to_link
  endpoint:
    path: /v1/links/:lid/scripts/:sid
    method: POST
- name: count_scripts
  endpoint:
    path: /v1/scripts/count
    method: GET
    data_selector: count
    params: {}
- name: click_events
  endpoint:
    path: /clickstream/events
    method: GET
    data_selector: events
notes:
- You are allowed to perform up to 10 API calls per second
- You are allowed to perform up to 20,000 API calls per hour
- If you plan to execute a long-running script which interacts with the API, evaluate
  tuning your script's configuration in such a way it will trigger no more than 5
  API calls per second, in order to naturally stay within the 20,000 API calls hourly
  limit.
- Double check whether your API key or OAuth token is enabled to use the Tags feature.
- You can refresh tokens indefinitely over time as they expire.
- If you want to use API to interact with your account in the context of a Rebrandly
  Workspace, you need to include an additional HTTP header with your workspace id.
- If you do not specify the workspace context, the default workspace (your main workspace)
  will be used.
- Check for compatibility first
- If you have multiple workspaces, refer to the endpoint to list workspaces you are
  a member of, and use the property 'id' of the workspace of choice.
- The deleted item is returned.
- A 200 response for this request indicates success.
- In Rebrandly, you can edit and even delete a specific link.
- API clients are supposed to build their own slashtag generation systems to avoid
  URL collisions and to match their application needs.
- API keys are disposable and can be created manually.
- For web applications, integrate with Rebrandly Authentication system for user authentication.
- Traffic routing is a paid feature and may not be available with all subscriptions.
- This workaround is only possible if you are the workspace owner (this means you
  must have created the workspace from your personal Rebrandly dashboard).
- Remember that you need to specify the branded domain in the request, as no default
  domain is defined for a team.
- Double check whether your API key or OAuth token is enabled to use the Scripts feature.
- All endpoints return responses in JSON format.
- 'IMPORTANT: use HTTPS only connection.'
- Max 25 domains can be loaded at a time
- Sorting criteria includes createdAt, updatedAt, fullName
- If you have only 1 workspace this request Header can be omitted
- To get Tag object details, you should HTTP GET on the specific tags endpoint.
- 'By default, there are five prefilled parameters you will find under your workspace''s
  template: Source, Medium, Campaign, Term and Content.'
- Parameters in a workspace can be created via a POST request.
- Sorting criteria is defined using the orderBy parameter.
- Sorting direction is defined using the orderDir parameter.
- Possible values for orderBy include createdAt and updatedAt.
- Possible values for orderDir include asc and desc.
errors:
- '403 - Already Exists: It is not possible to create a resource with the given definition
  because another resource already exists with the same attributes.'
- '429 - Too Many Requests: Exceeded the allowed API rate'
- '404 - Not found: Given `id` does not correspond to any existing domain'
- '403 - Already exists: Given pair of slashtag and domain forms a branded short link
  which already exists. Either change the domain or the slashtag'
- '403 - Invalid format: Invalid Link object. Double check value for property field.
  Details about validation failure in message field'
- '404 - Not found with property value "id": Given id does not correspond to any existing
  link'
- '404 - Not found with property value "domain.id": Given domain.id does not correspond
  to any existing domain'
- '403 - Already exists: Given pair of slashtag and domain forms a branded short link
  which already exists. Either change the domain or the slashtag.'
- '403 - Invalid format: Invalid Link object. Double check value for property field.
  Details about validation failure in message field.'
- '403 - Invalid format: Invalid Link object. Double check value for property field.'
- '404 - Not found: Given `id` does not correspond to any existing link'
- '503 - Server Error: Maintenance is on'
- 404 - Not Found
- '400 - Bad Request: Body required.'
- '406 - Not Acceptable: POST supports only application/json'
- '400 Bad Request: Invalid JSON request'
- '401 Unauthorized: Account does not have permission to perform the operation. -
  OAuth token is missing or invalid/expired.'
- '403 Forbidden: Invalid input format - Missing body - Limits threshold reached'
- '404 Not Found: Resource not found - Endpoint not found'
- '406 Not Acceptable: No content-type specified - Content-Type not accepted'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Server Error: Internal API error'
- '502 Bad Gateway: Failure in our upstream providers'
- '503 Service Unavailable: API is experiencing a downtime - API is under maintenance'
- '504 Gateway Timeout: Timeout on operation'
- HTTP 401 response
- HTTP 403 responses with JSON validation info
- HTTP 429 response
- HTTP 50x response with JSON details
- '403 - Invalid format: Invalid query parameters format. Double check value for `property`
  query parameter.'
- '403 - Invalid format: Invalid query parameters format. Double check value for property
  query parameter. Details about validation failure in message field'
- '404 - Not found with `property` value "domain.id": Given `domain.id` does not correspond
  to any existing domain'
- 'LimitExceeded: Number of domains exceeded'
- '403 - Invalid format: Invalid Link object. Double check value for `property` field.
  Details about validation failure in `message` field'
- '404 - Not found with `property` value "id": Given `id` does not correspond to any
  existing script'
- '403 - Invalid format: Invalid query parameters format. Double check value for `property`
  query parameter. Details about validation failure in `message` field'
- '401 Unauthorized: Missing OAuth token in request'
- '401: API key missing or user lacks permissions.'
- '404: Given id does not correspond to any existing link'
- '403: One or more fields in the request body are invalid.'
- 403 Forbidden
- '404 - Not found: Given id does not correspond to any existing tag'
- '404 - Not found: Given id does not correspond to any existing script'
- code: InvalidFormat
  message: Invalid format
- code: RequiredField
  message: Cannot be empty
- code: InvalidLength
  message: Value cannot be different than length characters long
- code: InvalidMinLength
  message: Value cannot be less than minLength characters long
- code: InvalidMaxLength
  message: Value cannot be more than maxLength characters long
- code: InvalidEmailAddress
  message: Value is not a valid email address
- code: OutOfRange
  message: Value is not allowed
- code: PatternMismatch
  message: Invalid format
- code: PrefixMismatch
  message: Prefix mismatch
- code: InvalidCharacter
  message: 'Invalid character: ''character'''
- code: MustBeLowerCase
  message: Value must be lowercase
- code: MustBeUpperCase
  message: Value must be uppercase
- '404 - Not found with `property` value "id": Given `id` does not correspond to any
  existing tag'
- 404 - Not found with property value "link.id"
- 404 - Not found with property value "script.id"
- 404 - Not found with property value 'link.id'
- 404 - Not found with property value 'tag.id'
auth_info:
  mentioned_objects: []
client:
  auth:
    type: apikey
    location: header
    header_name: apikey
    flow: authorization_code
    token_url: https://oauth.rebrandly.com/connect/token
    client_id: YOUR_CLIENT_ID
    client_secret: YOUR_CLIENT_SECRET
  base_url: https://api.rebrandly.com
  headers:
    Content-Type: application/json
    Authorization: Bearer YOUR_TOKEN
    Accept: application/json
    apikey: YOUR_API_KEY
    workspace: YOUR_WORKSPACE_ID
  paginator:
    type: page
    cursor_param: last
    default_page_size: 25
    page_size_param: limit
source_metadata: null
