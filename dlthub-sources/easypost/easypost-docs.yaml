resources:
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    params:
      webhook[url]: http://xxxxxxxx.ngrok.io/easypost-webhook
      webhook[mode]: test
- name: tracker
  endpoint:
    path: /v2/trackers
    method: POST
    params:
      tracker[tracking_code]: EZ2000000002
- name: scan_forms
  endpoint:
    path: /scan_forms
    method: POST
    data_selector: scan_forms
- name: scan_form
  endpoint:
    path: /scan_forms/:id
    method: GET
    data_selector: scan_form
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: batches
  endpoint:
    path: /v2/batches
    method: POST
    data_selector: batch
    params: {}
- name: add_shipments
  endpoint:
    path: /v2/batches/batch_.../add_shipments
    method: POST
    data_selector: shipments
    params: {}
- name: remove_shipments
  endpoint:
    path: /v2/batches/batch_.../remove_shipments
    method: POST
    data_selector: shipments
    params: {}
- name: buy
  endpoint:
    path: /v2/batches/batch_.../buy
    method: POST
    data_selector: {}
    params: {}
- name: label
  endpoint:
    path: /v2/batches/batch_.../label
    method: POST
    data_selector: {}
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: customs_info
  endpoint:
    path: /customs_infos
    method: POST
    data_selector: customs_info
    params: {}
- name: customs_info_retrieve
  endpoint:
    path: /customs_infos/{id}
    method: GET
    data_selector: customs_info
    params: {}
- name: tracker
  endpoint:
    path: /v2/trackers
    method: POST
    data_selector: tracker
- name: shipment
  endpoint:
    path: /v2/shipments/shp_.../buy
    method: POST
    data_selector: rate
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: luma_one_call_buy
  endpoint:
    path: /shipments/luma
    method: POST
    data_selector: shipment
    params: {}
- name: luma_standard_buy
  endpoint:
    path: /shipments/:id/luma
    method: POST
    data_selector: shipment
    params: {}
- name: order
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipment
    params: {}
- name: rates
  endpoint:
    path: /beta/rates
    method: POST
    data_selector: rates
    params: {}
- name: rerate
  endpoint:
    path: /v2/shipments/shp_.../rerate
    method: POST
    data_selector: rates
    params: {}
- name: create_shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipment
    params: {}
- name: purchase_label
  endpoint:
    path: /shipments/luma
    method: POST
    data_selector: shipment
    params: {}
- name: promise
  endpoint:
    path: /shipments/luma/promise
    method: POST
    data_selector: rates
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: smart_rate
  endpoint:
    path: /shipments/shp_.../smartrate
    method: GET
    data_selector: result
- name: delivery_date
  endpoint:
    path: /shipments/shp_.../smartrate/delivery_date
    method: GET
    data_selector: rates
- name: precision_shipping
  endpoint:
    path: /shipments/shp_.../smartrate/precision_shipping
    method: GET
    data_selector: rates
- name: insure_shipment
  endpoint:
    path: /shipments/:id/insure
    method: POST
    data_selector: messages
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: user
- name: deliver_by
  endpoint:
    path: /smartrate/deliver_by
    method: POST
    data_selector: results
    params:
      from_zip: '10001'
      to_zip: '10002'
      planned_ship_date: '2024-07-18'
      carriers:
      - UPS
- name: deliver_on
  endpoint:
    path: /smartrate/deliver_on
    method: POST
    data_selector: results
    params:
      from_zip: '10001'
      to_zip: '10002'
      desired_delivery_date: '2024-07-18'
      carriers:
      - UPS
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: customs_items
  endpoint:
    path: /customs_items
    method: POST
    data_selector: customs_item
- name: customs_item_by_id
  endpoint:
    path: /customs_items/:id
    method: GET
    data_selector: customs_item
- name: insure_shipment
  endpoint:
    path: /v2/shipments/shp_/insure
    method: POST
    data_selector: null
    params: {}
- name: parcel
  endpoint:
    path: /parcels
    method: POST
    data_selector: parcel
- name: retrieve_parcel
  endpoint:
    path: /parcels/{id}
    method: GET
    data_selector: parcel
- name: smartrate
  endpoint:
    path: /smartrate
    method: GET
    data_selector: time_in_transit
- name: delivery_date
  endpoint:
    path: /delivery_date
    method: GET
    data_selector: estimated_delivery_dates
- name: precision_shipping
  endpoint:
    path: /precision_shipping
    method: GET
    data_selector: suggested_ship_date
- name: smartrate_deliver_by
  endpoint:
    path: /smartrate/deliver_by
    method: GET
    data_selector: advanced_delivery_dates
- name: smartrate_deliver_on
  endpoint:
    path: /smartrate/deliver_on
    method: GET
    data_selector: enhanced_shipping_accuracy
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: webhooks
  endpoint:
    path: /v2/webhooks
    method: GET
    data_selector: webhooks
- name: create_webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: webhook
- name: retrieve_webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: GET
    data_selector: webhook
- name: update_webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PATCH
    data_selector: webhook
- name: delete_webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: DELETE
- name: batches
  endpoint:
    path: /batches
    method: GET
    data_selector: batches
    params: {}
- name: create_batch
  endpoint:
    path: /batches
    method: POST
    data_selector: batch
    params: {}
- name: add_shipments
  endpoint:
    path: /batches/batch_.../add_shipments
    method: POST
    data_selector: batch
    params: {}
- name: remove_shipments
  endpoint:
    path: /batches/batch_.../remove_shipments
    method: POST
    data_selector: batch
    params: {}
- name: buy_batch
  endpoint:
    path: /batches/batch_.../buy
    method: POST
    data_selector: batch
    params: {}
- name: generate_label
  endpoint:
    path: /batches/batch_.../label
    method: POST
    data_selector: batch
    params: {}
- name: create_scan_form
  endpoint:
    path: /batches/batch_.../scan_form
    method: POST
    data_selector: batch
    params: {}
- name: retrieve_batch
  endpoint:
    path: /batches/batch_...
    method: GET
    data_selector: batch
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: credit_cards
  endpoint:
    path: /v2/credit_cards
    method: POST
    data_selector: null
    params: {}
- name: financial_connections_sessions
  endpoint:
    path: /beta/financial_connections_sessions
    method: POST
    data_selector: null
    params: {}
- name: bank_accounts
  endpoint:
    path: /v2/bank_accounts
    method: POST
    data_selector: null
    params: {}
- name: payment_methods
  endpoint:
    path: /v2/payment_methods
    method: GET
    data_selector: null
    params: {}
- name: pickup
  endpoint:
    path: /pickups
    method: POST
    data_selector: id
- name: pickup_by_id
  endpoint:
    path: /pickups/{id}
    method: GET
    data_selector: id
- name: pickup_by_reference
  endpoint:
    path: /pickups/{reference}
    method: GET
    data_selector: id
- name: pickup_cancel
  endpoint:
    path: /pickups/{id}/cancel
    method: POST
    data_selector: id
- name: pickup_buy
  endpoint:
    path: /pickups/{id}/buy
    method: POST
    data_selector: id
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: insurances
  endpoint:
    path: /insurances
    method: GET
    data_selector: insurances
- name: insurance_create
  endpoint:
    path: /insurances
    method: POST
    data_selector: insurance
- name: insurance_by_id
  endpoint:
    path: /insurances/{id}
    method: GET
    data_selector: insurance
- name: insurance_refund
  endpoint:
    path: /insurances/{id}/refund
    method: POST
    data_selector: insurance
- name: users
  endpoint:
    path: /v2/users
    method: POST
    data_selector: user
- name: CarrierType
  endpoint:
    path: /v2/carrier_types
    method: GET
    data_selector: CarrierType
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts/register_oauth
    method: POST
    data_selector: carrier_account_oauth_registrations
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: shipments
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipments
- name: forms
  endpoint:
    path: /shipments/:id/forms
    method: POST
    data_selector: forms
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: customs_item
  endpoint:
    path: /v2/customs_items
    method: POST
    data_selector: customs_item
- name: customs_info
  endpoint:
    path: /v2/customs_infos
    method: POST
    data_selector: customs_info
- name: shipment
  endpoint:
    path: /v2/shipments
    method: POST
    data_selector: shipment
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: shipment
  endpoint:
    path: /v2/shipments
    method: POST
    data_selector: shipment
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params:
      page_size: '20'
- name: event
  endpoint:
    path: /events/:id
    method: GET
    data_selector: event
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: scan_form
  endpoint:
    path: /v2/scan_forms
    method: POST
    data_selector: result
    params: {}
- name: carrier
  endpoint:
    path: /metadata/carriers
    method: GET
    data_selector: carriers
    params: {}
- name: shipment
  endpoint:
    path: /shipment
    method: POST
- name: shipment_rates
  endpoint:
    path: /shipment/:id/rates
    method: GET
- name: buy_shipment
  endpoint:
    path: /shipment/:id/buy
    method: POST
- name: retrieve_shipment
  endpoint:
    path: /shipment/:id
    method: GET
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: shipments
  endpoint:
    path: /shipments
    method: GET
- name: claims
  endpoint:
    path: /claims
    method: GET
    data_selector: claims
    params:
      page_size: 20
- name: create_claim
  endpoint:
    path: /claims
    method: POST
    data_selector: id
- name: retrieve_claim
  endpoint:
    path: /claims/:id
    method: GET
    data_selector: id
- name: cancel_claim
  endpoint:
    path: /claims/:id/cancel
    method: POST
    data_selector: id
- name: shipment
  endpoint:
    path: /shipments/{id}/refund
    method: POST
    data_selector: object
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: referral_customers
  endpoint:
    path: /v2/referral_customers
    method: GET
    data_selector: referral_customers
- name: create_referral_customer
  endpoint:
    path: /v2/referral_customers
    method: POST
    data_selector: user
- name: update_referral_customer_email
  endpoint:
    path: /v2/referral_customers
    method: PUT
    data_selector: user
- name: add_payment_method
  endpoint:
    path: /beta/referral_customers/payment_method
    method: POST
    data_selector: payment_method
- name: refund_referral_customer
  endpoint:
    path: /beta/referral_customers/refunds
    method: POST
    data_selector: refund_amount
- name: addresses
  endpoint:
    path: /addresses
    method: POST
    data_selector: address
    params: {}
- name: verify_address
  endpoint:
    path: /addresses/create_and_verify
    method: POST
    data_selector: address
    params: {}
- name: get_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
    params: {}
- name: list_addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
    params:
      page_size: 5
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: end_shipper
  endpoint:
    path: /end_shippers
    method: GET
    data_selector: end_shippers
- name: shipment
  endpoint:
    path: /shipments/shp_.../buy
    method: POST
    data_selector: shipment
- name: addresses
  endpoint:
    path: /v2/addresses
    method: POST
    data_selector: address
    params:
      verify: true
- name: verify_address
  endpoint:
    path: /v2/addresses/adr_.../verify
    method: GET
    data_selector: verification
    params: {}
- name: CarrierAccount
  endpoint:
    path: /carrier_accounts
    method: GET
    data_selector: carrier_accounts
    params: {}
- name: trackers
  endpoint:
    path: /v2/trackers
    method: POST
    data_selector: tracker
    params: {}
- name: brand
  endpoint:
    path: /v2/users/:id/brand
    method: PATCH
    data_selector: brand
- name: refunds
  endpoint:
    path: /v2/refunds
    method: POST
    data_selector: refunds
    params: {}
- name: single_refund
  endpoint:
    path: /v2/refunds/{id}
    method: GET
    data_selector: refund
    params: {}
- name: referral_customers
  endpoint:
    path: /v2/referral_customers
    method: POST
    data_selector: null
    params: {}
- name: referral_customer_payment_method
  endpoint:
    path: /beta/referral_customers/payment_method
    method: POST
    data_selector: null
    params: {}
- name: credit_card_charges
  endpoint:
    path: /v2/credit_cards/card_.../charges
    method: POST
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /v2/users
    method: PATCH
    data_selector: null
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: referral_customers
  endpoint:
    path: /v2/referral_customers
    method: POST
    data_selector: user
- name: stripe_public_key
  endpoint:
    path: /v2/partners/stripe_public_key
    method: GET
- name: setup_intents
  endpoint:
    path: /beta/setup_intents
    method: POST
- name: credit_cards
  endpoint:
    path: /v2/credit_cards
    method: POST
- name: financial_connections_sessions
  endpoint:
    path: /beta/financial_connections_sessions
    method: POST
- name: bank_accounts
  endpoint:
    path: /v2/bank_accounts
    method: POST
- name: users
  endpoint:
    path: /v2/users
    method: PATCH
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: child_user
  endpoint:
    path: /users/user_{id}
    method: GET
    data_selector: users
    params: {}
- name: shipment
  endpoint:
    path: /v2/shipments
    method: POST
    data_selector: shipment
    params: {}
- name: buy_label
  endpoint:
    path: /v2/shipments/shp_.../buy
    method: POST
    data_selector: rate
    params: {}
- name: shipment
  endpoint:
    path: /v2/shipments
    method: POST
    data_selector: shipment
    params:
      is_return: true
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: GET
    data_selector: records
- name: fee
  endpoint:
    path: /fee
    method: GET
    data_selector: records
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: payloads
  endpoint:
    path: /events/:event_id/payloads
    method: GET
    data_selector: payloads
- name: payload
  endpoint:
    path: /events/:event_id/payloads/:payload_id
    method: GET
    data_selector: ''
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: tracker
  endpoint:
    path: /v2/trackers
    method: POST
    data_selector: tracker
    params: {}
- name: payment_log_report
  endpoint:
    path: /v2/reports/payment_log
    method: POST
    data_selector: null
    params:
      start_date: '2022-10-01'
      end_date: '2022-10-31'
- name: shipment_report
  endpoint:
    path: /v2/reports/shprep_...
    method: GET
    data_selector: null
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: label_qr_code
  endpoint:
    path: /forms/label_qr_code
    method: POST
    data_selector: form
    params: {}
- name: return_packing_slip
  endpoint:
    path: /forms/return_packing_slip
    method: POST
    data_selector: form
    params: {}
- name: rma_qr_code
  endpoint:
    path: /forms/rma_qr_code
    method: POST
    data_selector: form
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: child_user
  endpoint:
    path: /users
    method: POST
    data_selector: user
    params: {}
- name: child_users_list
  endpoint:
    path: /users/children
    method: GET
    data_selector: children
    params:
      page_size: 5
- name: delete_child_user
  endpoint:
    path: /users/user_{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
- name: EndShipper
  endpoint:
    path: /api/v1/end_shippers
    method: POST
    data_selector: end_shipper
    params: {}
- name: carrier_accounts
  endpoint:
    path: /carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts/register
    method: POST
    data_selector: carrier_account
    params: {}
- name: Shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: forms
    params:
      commercial_invoice_format: PNG
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
    params: {}
- name: shipment
  endpoint:
    path: /shipments
    method: POST
    data_selector: shipment
    params: {}
- name: carrier_accounts
  endpoint:
    path: /v2/carrier_accounts
    method: POST
    data_selector: carrier_account
notes:
- Negotiated rates are only available in Production mode.
- Voiding Spee-Dee labels through EasyPost is not supported.
- A ScanForm object is immutable once created. All information must be provided during
  creation; it cannot be modified later.
- Manifesting is required for Jitsu.
- Manifesting is not supported or required.
- It is recommended to keep each batch under 1,000 shipments to avoid timeout errors
  during the batch buying process.
- All services are for Monday – Friday delivery unless the shipment option for Saturday
  Delivery service is selected.
- The maximum number of items that can be included in customs info with UPS is 100.
- A CustomsInfo object is immutable once created. All information must be provided
  during creation; it cannot be modified later.
- In Test Mode, you will get only one tracking event in one of the supported statuses.
- In Production Mode, you will get your first of multiple tracking events for your
  package.
- Pickups may incur charges; users should consult their Canada Post account representative
  for pricing details.
- Most 'retrieve all' responses from EasyPost are paginated.
- The request accepts a variety of parameters which can be used to modify the scope.
- Pickups may incur charges; users should consult their Purolator account representative
  for pricing details.
- This call will only work with your Production API Key.
- This endpoint only works for ReferralCustomers or to manage Child User accounts.
- A designated support liaison is required for handling all Royal Mail issues.
- Manifesting is supported and required for Royal Mail.
- Manifesting is required for GIO Express.
- Voiding GIO Express labels through EasyPost is supported.
- Voiding Passport Global labels through EasyPost is supported.
- Manifesting is not supported or required for Optima.
- Returns are not supported.
- Voiding DPD UK labels through EasyPost is not supported.
- Use Test API Key to execute buying logic on test shipments.
- An Order object is immutable once created.
- Reference is not enforced for uniqueness.
- This feature is in Beta and subject to change.
- It is important to note that the message value for any member of this list comes
  directly from the carrier, not from EasyPost.
- The SmartRate API is currently available exclusively for US domestic shipments.
- Shipping insurance can be purchased for any Shipment by specifying the value of
  the shipment's contents.
- The cost is 1.0% of the declared value, with a minimum charge of $0.50.
- EasyPost utilizes semantic versioning for its client libraries.
- Most package managers respect semantic versioning and dependency pinning.
- Child Users can only be created in Production mode using the platform’s API Key.
- Because this API does not require a shipment ID, it will only return time in transit
  data and no rates.
- Manifesting is not supported or required for Accurate Courier Express.
- Returns are not supported for the EasyPost Accurate Courier Express integration.
- Manifesting is not supported or required for Sonic.
- We offer international coverage to virtually every country in the world.
- Voiding Canpar labels through EasyPost is not supported.
- 1-Call Buys are not supported at this time.
- Returns are not supported at this time.
- EasyPost simplifies package tracking by offering two methods.
- Manifesting is not supported or required for Blue Streak integration.
- Uses EasyPost API for label purchases.
- Manual manifesting is not required or supported for FirstMile.
- Webhook endpoints must return a 2XX status code to indicate successful receipt.
- Endpoints that repeatedly return failures may be automatically disabled.
- Webhook endpoints must use HTTPS.
- It is recommended to keep each batch under 1,000 shipments to avoid timeout errors.
- Manifesting is not supported or required for Flexport Parcel.
- Returns with Flexport Parcel are not supported through the EasyPost API.
- 99.99% reliability with industry-leading infrastructure
- Manifesting is not supported or required for DPD integration.
- Voiding DPD labels through EasyPost is not supported.
- Manifesting is not supported or required for Better Trucks.
- Pickups may incur charges; users should consult their Better Trucks account representative
  for pricing details.
- A Pickup object is immutable once created.
- To purchase a Pickup, a PickupRate must be specified by its carrier and service
  name.
- Voiding Interlink Express labels through EasyPost is not supported.
- Customers must have their own FedEx account to insure FedEx packages.
- Refunding Insurance is only available for standalone insurance purchased through
  EasyPost.
- Manifesting is not supported or required for Amazon Shipping.
- A Shipment object is immutable once created. All information must be provided during
  creation; it cannot be modified later.
- To convert a PostageLabel, the original must be a PNG.
- Form types include return_packing_slip, commercial_invoice, etc.
- EasyPost supports return labels for domestic shipments within Australia but does
  not provide this service for international shipments with Australia Post.
- Manifesting is not supported or required for Courier Express.
- Negotiated Service Agreement (NSA) rates are only available in Production mode.
- Users are responsible for specifying the type of HazMat included in each shipment.
- Shipments must be listed as an array.
- Keep each batch under 1,000 shipments to avoid timeout errors.
- Uses API key for authentication
- Ensure to verify address to reduce delivery issues
- Most API objects are immutable, meaning that once they are created, their properties
  cannot be altered.
- Return services are not available with EasyPost DHL eCommerce Default accounts.
- Manifesting is not supported or required for Estafeta
- Estafeta does not provide a separate service for returns.
- Claims can be submitted via the EasyPost Dashboard, a Claim Submission Form, or
  the Claims API.
- Refunding a Shipment is available for many carriers supported by EasyPost.
- Many carriers require that the refund be processed before the refund_status will
  move to 'refunded'.
- Manifesting is required for CS Logistics.
- Voiding CS Logistics labels through EasyPost is supported.
- 'Production Only: This call will only work with your Production API Key.'
- 'Important: This endpoint only works for ReferralCustomers or to manage Child User
  accounts.'
- Voiding Deutsche Post UK labels through EasyPost is not supported.
- The EndShipper API is for platforms purchasing postage on behalf of their users.
- Logo and ad must be base64 encoded strings.
- Refund object is immutable once created.
- Ensure all payment methods are fully verified, including any necessary verification
  steps, such as ACH micro-deposit verification for bank accounts or 3D Secure authentication
  for credit cards.
- Implement retry logic to attempt to retry your request again.
- Temporarily slow down your requests.
- Implement backoff logic that pairs with the above retry logic in the event they
  are still unsuccessful with growing intervals between requests until rate limiting
  is over.
- Use TLS session resumption and connection pooling when possible.
- Implement timeout logic so that connections do not stay open indefinitely or for
  long periods of time.
- Optimize your workflows to reduce the API requests you make to EasyPost.
- When making dozens or more Shipments in a short period of time, use the Batches
  endpoint.
- Batches use an asynchronous workflow. Each shipment must be processed and labels
  or data may not be immediately available after submission.
- Use webhooks to get notified when batches have been processed.
- When sending multiple shipments from a single location to another single location,
  use the Orders endpoint.
- When creating a Shipment, send the Address, Parcel, and Customs Info data along
  with the same request instead of creating each object individually.
- When retrieving objects, use filtering to shorten the time window or number of results
  returned.
- LSO does not handle shipments of dangerous goods or hazardous materials.
- Loomis Express pickup requests can be made via the EasyPost API.
- Some services are contracted by Veho. Availability of services may vary based on
  contractual agreement.
- Manifesting is not supported or required for Henry Industries.
- Henry Industries does not provide a separate service for returns.
- ReferralCustomer users require their own API keys.
- A negative wallet balance can occur due to shipment adjustments.
- OnTrac does not require users to manifest shipments.
- Manifesting is not required.
- Voiding labels is supported.
- Voiding UDS labels through EasyPost is not supported.
- Packages cannot exceed a weight of 30 lbs.
- No single side of the package should surpass 18 inches in length.
- Manifesting is not supported or required for TForce Logistics.
- Voiding TForce Logistics labels through EasyPost is not supported.
- If doing more than 10,000 USPS returns in a year, please contact EasyPost for the
  USPS scan-based return program.
- Webhooks require a response within seven seconds.
- EasyPost will retry failed webhook deliveries up to six times, with an increasing
  delay between retries.
- When creating a shipment, EasyPost requests DHL Express for shipment rates specific
  to the user's DHL Express account.
- Swyft supports next-day delivery within major cities in the U.S. and Canada.
- Regular pickups can be arranged with the Swyft team during the registration process;
  however, pickups cannot be scheduled through the EasyPost API.
- Manifesting is not supported or required for Deliver-IT integration.
- Returns are not currently supported for the Deliver-IT integration.
- Registration with Royal Mail’s Online Business Account (OBA) is required before
  a Royal Mail v3 account can be processed.
- Contact EasyPost support if you have not received the final confirmation email within
  five business days.
- Regular pickups cannot be scheduled via the EasyPost API.
- API Keys should be treated with the same level of security as passwords and kept
  confidential.
- A Tracker object is immutable once created. All information must be provided during
  creation; it cannot be modified later.
- To minimize unnecessary resource usage, EasyPost prevents the creation of duplicate
  Trackers.
- Report objects are immutable once created.
- If a UPS account is over 30 days old, UPS invoice details are needed to register
  the account with EasyPost.
- The UPS API interface may differ from the EasyPost API, which is standardized to
  provide a consistent experience across various shipping carriers.
- Unit testing external APIs can be time-consuming and non-deterministic
- Using a VCR for unit testing improves performance
- OmniParcel requests must include the state field for processing.
- Manifesting is not supported or required for Asendia USA.
- Manifesting is not supported or required for SmartKargo.
- Manifesting is not supported or required for Cirro E-Commerce.
- Manifesting is not supported or required for Sway.
- EndShipper Objects must be created prior to the first postage purchase for that
  EndShipper.
- The public_id associated with each EndShipper Object must be stored for later use.
- At least one of the name or company fields must be filled for EndShipper Objects.
- Manifesting is not supported or required for CouriersPlease.
- Voiding CouriersPlease labels through EasyPost is not supported.
- The FedEx API interface may differ from the EasyPost API, which is standardized
  to provide a consistent experience across various shipping carriers.
- The tax_identifiers attribute allows you to supply up to 8 Tax Identification numbers.
- Voiding 1st Choice Delivery labels through EasyPost is not supported.
errors:
- 'creation_failed: Check the webhook for details on the failure.'
- 'purchase_failed: Inspect the batch_status of each shipment object.'
- 'Invalid API Key: Check your API key and try again.'
- 'Carrier not found: Ensure the tracking code and carrier are correct.'
- '400: Bad Request'
- '401: Unauthorized'
- '402: Payment Required'
- '403: Forbidden'
- '404: Not Found'
- '405: Method Not Allowed'
- '422: Unprocessable Entity'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '401 Unauthorized: Invalid API key or authentication method.'
- '400 Bad Request: Invalid parameters provided.'
- 'rate_error: Shipment cannot weigh less than 16oz'
- '400 Bad Request: The request was not processed due to a client error.'
- '401 Unauthorized: Authentication is required and has failed.'
- '402 Payment Required: There is a lack of billing information or insufficient funds.'
- '403 Forbidden: The request was valid, but the server is refusing to respond to
  it.'
- '404 Not Found: The requested resource could not be found.'
- '405 Method Not Allowed: The request method is not supported for the requested resource.'
- '422 Unprocessable Entity: The request was well-formed, but the server was unable
  to process the provided data.'
- '429 Too Many Requests: The user has sent too many requests in a given amount of
  time.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '503 Service Unavailable: The server is currently unable to handle the request due
  to temporary overloading or maintenance.'
- '401 Unauthorized: Validate credentials against stored values.'
- 'Invalid webhook secret: Reject event if the signature does not match.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the Pickup ID is correct.'
- '401 Unauthorized: Recheck API key.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check API key or authentication method'
- 'ADDRESS.VERIFY.FAILURE: Unable to verify address.'
- 'E.ADDRESS.NOT_FOUND: Address not found'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Check API key or credentials.'
- '429 Too Many Requests: You have been rate limited.'
- '401 Unauthorized: Recheck API Key or permissions'
- 'Webhook delivery failure: will be retried six times.'
- '404 Not Found: Tracker does not exist.'
- '429: Rate Limit exceeded'
- '204: No Content (successful delete)'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.easypost.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
    Accept: application/json
  paginator:
    type: page
    page_size_param: page_size
    default_page_size: 5
    cursor_param: before_id
source_metadata: null
