resources:
- name: currencies
  endpoint:
    path: /Currencies
    method: GET
    data_selector: currencies
    params:
      inUse: 'true'
- name: suppliers
  endpoint:
    path: /Suppliers
    method: GET
    data_selector: records
    params: {}
- name: sales_orders
  endpoint:
    path: /SalesOrders
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /Products
    method: GET
    data_selector: records
    params: {}
- name: CustomerDeliveryAddresses
  endpoint:
    path: /CustomerDeliveryAddresses
    method: GET
    data_selector: Items
    params:
      customerCode: ''
      modifiedSince: ''
      pageSize: '200'
- name: Customers
  endpoint:
    path: Customers
    method: GET
    data_selector: Items
- name: PurchaseOrders
  endpoint:
    path: PurchaseOrders
    method: POST
- name: SalesOrders
  endpoint:
    path: SalesOrders
    method: POST
- name: supplier_return_reasons
  endpoint:
    path: /SupplierReturnReasons
    method: GET
    data_selector: records
    params:
      pageSize: '200'
- name: sales_shipments
  endpoint:
    path: /SalesShipments
    method: GET
    data_selector: SalesShipments
    params:
      pageSize: '200'
- name: sales_shipment_detail
  endpoint:
    path: /SalesShipments/{salesShipmentGuid}
    method: GET
    data_selector: SalesShipments
- name: create_sales_shipment
  endpoint:
    path: /SalesShipments
    method: POST
    data_selector: SalesOrderShipment
- name: update_sales_shipment
  endpoint:
    path: /SalesShipments/{salesShipmentGuid}
    method: PUT
    data_selector: SalesOrderShipment
- name: delete_sales_shipment
  endpoint:
    path: /SalesShipments/{salesShipmentGuid}
    method: DELETE
- name: delete_sales_shipment_line
  endpoint:
    path: /SalesShipments/Lines/{salesShipmentGuid}
    method: DELETE
- name: shipping_companies
  endpoint:
    path: /ShippingCompanies
    method: GET
    data_selector: ''
    params:
      pageSize: '200'
      includeObsolete: 'false'
- name: shipping_company
  endpoint:
    path: /ShippingCompanies/{shippingCompanyGuid}
    method: GET
    data_selector: ''
    params: {}
- name: customers
  endpoint:
    path: /Customers
    method: GET
    data_selector: Customers
    params:
      pageSize: '200'
- name: customer_contacts
  endpoint:
    path: /Customers/{customerGuid}/Contacts
    method: GET
    data_selector: CustomerContact
    params:
      pageSize: '200'
- name: companies
  endpoint:
    path: /Companies
    method: GET
    data_selector: ''
- name: BatchNumbers
  endpoint:
    path: /BatchNumbers
    method: GET
    params:
      pageSize: '100'
- name: products
  endpoint:
    path: /Products
    method: GET
    data_selector: Items
    params:
      pageSize: '200'
- name: create_product
  endpoint:
    path: /Products
    method: POST
    data_selector: null
    params: {}
- name: update_product
  endpoint:
    path: /Products/{productGuid}
    method: POST
    data_selector: null
    params: {}
- name: StockOnHand
  endpoint:
    path: /StockOnHand
    method: GET
    data_selector: Items
    params: {}
- name: StockOnHandByProduct
  endpoint:
    path: /StockOnHand/{productGuid}
    method: GET
    data_selector: ''
    params: {}
- name: StockOnHandAllWarehouses
  endpoint:
    path: /StockOnHand/{productGuid}/AllWarehouses
    method: GET
    data_selector: Items
    params: {}
- name: AttributeSets
  endpoint:
    path: /AttributeSets
    method: GET
    data_selector: Items
- name: AttributeSet
  endpoint:
    path: /AttributeSets/{attributeSetGuid}
    method: GET
    data_selector: AttributeSet
- name: CreateAttributeSet
  endpoint:
    path: /AttributeSets
    method: POST
    data_selector: AttributeSet
- name: SupplierReturns
  endpoint:
    path: /SupplierReturns/
    method: GET
    data_selector: Items
    params:
      pageSize: '200'
- name: SupplierReturn
  endpoint:
    path: /SupplierReturns/{returnGuid}
    method: GET
    data_selector: Item
    params: {}
- name: CreateSupplierReturn
  endpoint:
    path: /SupplierReturns/
    method: POST
    data_selector: Item
    params: {}
- name: UpdateSupplierReturn
  endpoint:
    path: /SupplierReturns/{returnGuid}
    method: PUT
    data_selector: Item
    params: {}
- name: DeleteSupplierReturn
  endpoint:
    path: /SupplierReturns/{returnGuid}
    method: DELETE
    data_selector: Item
    params: {}
- name: CompleteSupplierReturn
  endpoint:
    path: /SupplierReturns/{returnGuid}/Complete
    method: POST
    data_selector: Item
    params: {}
- name: UpdateSupplierReturnCostLine
  endpoint:
    path: /SupplierReturns/{returnGuid}/Costs/{costLineGuid}
    method: PUT
    data_selector: Item
    params: {}
- name: UpdateSupplierReturnLine
  endpoint:
    path: /SupplierReturns/{returnGuid}/Lines/{lineGuid}
    method: PUT
    data_selector: Item
    params: {}
- name: DeleteSupplierReturnLine
  endpoint:
    path: /SupplierReturns/{returnGuid}/Lines/{lineGuid}
    method: DELETE
    data_selector: Item
    params: {}
- name: ProductTracking
  endpoint:
    path: /SupplierReturns/{returnGuid}/ProductTracking
    method: POST
    data_selector: Item
    params: {}
- name: sales_orders
  endpoint:
    path: /SalesOrders
    method: GET
    data_selector: SalesOrders
    params:
      pageSize: '200'
- name: sales_order
  endpoint:
    path: /SalesOrders/{orderGuid}
    method: GET
    data_selector: SalesOrder
    params: {}
- name: create_sales_order
  endpoint:
    path: /SalesOrders
    method: POST
    data_selector: SalesOrder
    params: {}
- name: update_sales_order
  endpoint:
    path: /SalesOrders/{orderGuid}
    method: PUT
    data_selector: SalesOrder
    params: {}
- name: create_sales_order_line
  endpoint:
    path: /SalesOrders/{orderGuid}/Lines
    method: POST
    data_selector: SalesOrderLine
    params: {}
- name: update_sales_order_line
  endpoint:
    path: /SalesOrders/{orderGuid}/Lines/{lineGuid}
    method: PUT
    data_selector: SalesOrderLine
    params: {}
- name: ProductPrices
  endpoint:
    path: /ProductPrices
    method: GET
    data_selector: Items
    params: {}
- name: ProductPrice
  endpoint:
    path: /ProductPrices/{productPriceGuid}
    method: GET
    data_selector: ProductPrice
    params: {}
- name: serial_numbers
  endpoint:
    path: /SerialNumbers
    method: GET
    params: {}
- name: WarehouseStockTransfers
  endpoint:
    path: /WarehouseStockTransfers
    method: GET
    data_selector: Items
    params:
      pageSize: '200'
      modifiedSince: null
      transferStatus: null
- name: WarehouseStockTransferByGuid
  endpoint:
    path: /WarehouseStockTransfers/{transferGuid}
    method: GET
    data_selector: null
    params: {}
- name: CreateWarehouseStockTransfer
  endpoint:
    path: /WarehouseStockTransfers
    method: POST
    data_selector: null
    params: {}
- name: UpdateWarehouseStockTransfer
  endpoint:
    path: /WarehouseStockTransfers/{transferGuid}
    method: PUT
    data_selector: null
    params: {}
- name: CompleteWarehouseStockTransfer
  endpoint:
    path: /WarehouseStockTransfers/{transferGuid}/Complete
    method: POST
    data_selector: null
    params: {}
- name: DeleteWarehouseStockTransfer
  endpoint:
    path: /WarehouseStockTransfers/{transferGuid}
    method: DELETE
    data_selector: null
    params: {}
- name: AddLineToWarehouseStockTransfer
  endpoint:
    path: /WarehouseStockTransfers/{transferGuid}/Lines
    method: POST
    data_selector: null
    params: {}
- name: UpdateWarehouseStockTransferLine
  endpoint:
    path: /WarehouseStockTransfers/{transferGuid}/Lines/{lineGuid}
    method: PUT
    data_selector: null
    params: {}
- name: DeleteWarehouseStockTransferLine
  endpoint:
    path: /WarehouseStockTransfers/{transferGuid}/Lines/{lineGuid}
    method: DELETE
    data_selector: null
    params: {}
- name: purchase_orders
  endpoint:
    path: /PurchaseOrders
    method: GET
    data_selector: Items
    params: {}
- name: purchase_order_details
  endpoint:
    path: /PurchaseOrders/{orderGuid}
    method: GET
    data_selector: PurchaseOrder
    params: {}
- name: purchase_order_costs
  endpoint:
    path: /PurchaseOrders/{orderGuid}/Costs
    method: GET
    data_selector: Costs
    params: {}
- name: create_purchase_order
  endpoint:
    path: /PurchaseOrders
    method: POST
    data_selector: ''
    params: {}
- name: update_purchase_order
  endpoint:
    path: /PurchaseOrders/{orderGuid}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_purchase_order
  endpoint:
    path: /PurchaseOrders/{orderGuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: StockAdjustments
  endpoint:
    path: /StockAdjustments
    method: GET
    data_selector: Items
- name: StockAdjustmentByGuid
  endpoint:
    path: /StockAdjustments/{stockAdjustmentGuid}
    method: GET
    data_selector: Items
- name: CreateStockAdjustment
  endpoint:
    path: /StockAdjustments
    method: POST
    data_selector: Items
- name: salespersons
  endpoint:
    path: /Salespersons
    method: GET
- name: create_salesperson
  endpoint:
    path: /Salespersons
    method: POST
- name: update_salesperson
  endpoint:
    path: /Salespersons/{salespersonGuid}
    method: POST
- name: assemblies
  endpoint:
    path: /Assemblies
    method: GET
    data_selector: records
    params:
      pageSize: '200'
- name: assembly
  endpoint:
    path: /Assemblies/{assemblyGuid}
    method: GET
    data_selector: records
    params: {}
- name: create_assembly
  endpoint:
    path: /Assemblies
    method: POST
    data_selector: records
    params: {}
- name: update_assembly
  endpoint:
    path: /Assemblies/{assemblyGuid}
    method: PUT
    data_selector: records
    params: {}
- name: delete_assembly
  endpoint:
    path: /Assemblies/{assemblyGuid}
    method: DELETE
    data_selector: records
    params: {}
- name: CreditNotes
  endpoint:
    path: /CreditNotes
    method: GET
    data_selector: CreditNote
    params:
      pageSize: 200
- name: CreditNoteByGuid
  endpoint:
    path: /CreditNotes/{creditNoteGuid}
    method: GET
    data_selector: CreditNote
    params: {}
- name: CreateFreeCreditNote
  endpoint:
    path: /CreditNotes/FreeCredit
    method: POST
    data_selector: CreditNote
    params: {}
- name: UpdateCreditNote
  endpoint:
    path: /CreditNotes/{creditNoteGuid}
    method: PUT
    data_selector: CreditNote
    params: {}
- name: CompleteCreditNote
  endpoint:
    path: /CreditNotes/{creditNoteGuid}/Complete
    method: POST
    data_selector: CreditNote
    params: {}
- name: delivery_methods
  endpoint:
    path: /DeliveryMethods
    method: GET
    data_selector: records
    params: {}
- name: sales_quotes
  endpoint:
    path: /SalesQuotes
    method: GET
    params:
      pageSize: 200
- name: webhook_subscriptions
  endpoint:
    path: /webhooks/subscriptions
    method: POST
- name: list_subscriptions
  endpoint:
    path: /webhooks/subscriptions
    method: GET
- name: update_subscription
  endpoint:
    path: /webhooks/subscriptions/{subscriptionId}
    method: PUT
- name: delete_subscription
  endpoint:
    path: /webhooks/subscriptions/{subscriptionId}
    method: DELETE
- name: list_delivery_attempts
  endpoint:
    path: /webhooks/subscriptions/{subscriptionId}/deliveries
    method: GET
    params:
      pageSize: '200'
- name: get_delivery_details
  endpoint:
    path: /webhooks/deliveries/{deliveryId}
    method: GET
notes:
- An Unleashed account is required before you can use the API Sandbox.
- Trial accounts are also allowed to connect to the API.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requesting large numbers of customers can be susceptible to poor network performance.
  Please reduce the page size if you experience delayed requests.
- This endpoint does not support Batch or Serial numbers. These will need to be entered
  manually via the web.
- Requesting large numbers of supplier return reasons can be susceptible to poor network
  performance. Please reduce the page size if you experience delayed requests.
- The date formats in use differ between the GET requests for JSON and XML.
- Default page size is 200 shipments.
- Requesting large numbers of shipments can be susceptible to poor network performance.
- Default page size is 200 batch numbers.
- Requesting large numbers of batch numbers can be susceptible to poor network performance.
  Please reduce the page size if you experience delayed requests.
- Updates made to existing Products will overwrite existing information, fields left
  blank will be removed.
- Requesting large numbers of products can be susceptible to poor network performance.
- Products without any transactions will not be returned (i.e; zero quantity products
  with no previous transactions).
- Date filters should be provided in the ISO format YYYY-MM-DD.
- This endpoint can only be used for Products.
- The Unleashed API does not support partial API updates. You MUST pass a request
  with all the fields otherwise the existing fields will be overwritten with blank
  values.
- Never assume that the API is actually online at any time. Always queue requests
  to the API so that you can retry the request in the event of a network failure.
- Requesting large numbers of records from an endpoint can be susceptible to poor
  network performance. If you experience delayed API requests, please try reducing
  your page size.
- Default page size is 200 Supplier Returns.
- Requesting large numbers of supplier returns can be susceptible to poor network
  performance. Please reduce the page size if you experience delayed requests.
- No, you will need to poll the API to check for new data (pull model).
- The SalesOrders endpoint now has an optional modifiedSince parameter. The format
  is yyyy-mm-dd and must be in UTC time.
- The API has full access to the Unleashed account.
- The order number is optional - if it is not provided, we will use the current sales
  order numbering sequence and take the next number in the sequence for use as the
  order number.
- Yes, we leave all calculations up to you so that you can implement complex tax rules
  for yourself.
- Yes, you can send a status of Completed and it will attempt to complete the order.
  If it fails then it stays as Parked.
- 'Use the XML xsi:nil="true" attribute: <Width xsi:nil="true" />'
- No, the field value will be overwritten with NULL in Unleashed.
- Both are treated as NULL.
- Requesting large numbers of serial numbers can be susceptible to poor network performance.
  Please reduce the page size if you experience delayed requests.
- Default page size is 200 Warehouse Stock Transfers.
- Requesting large numbers of stock transfers can be susceptible to poor network performance.
- Only ‘FreeCredit’ Credit notes can be created or updated via the API, but any note
  can be completed with the POST/Complete filter.
- Requesting large numbers of invoices can be susceptible to poor network performance.
  Please reduce the page size if you experience delayed requests.
- Requesting large numbers of quotes can be susceptible to poor network performance.
  Please reduce the page size if you experience delayed requests.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: The request was not in a correct form, or the posted data failed
  a validation test. Check the error returned to see what was wrong with the request.'
- '403 Forbidden: Method authentication failed'
- '404 Not found: Endpoint does not exist (eg using /SalesOrder instead of /SalesOrders)'
- '405 Not allowed: The method used is not allowed (eg PUT, DELETE) or is missing
  a required parameter (eg POST requires an `/{id}` parameter)'
- '500 Internal Server Error: The object passed to the API could not be parsed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '200 OK: Request successful'
- '400 Bad Request: Invalid request format or parameters'
- '401 Unauthorized: Invalid API credentials or signature'
- '403 Forbidden: Access denied'
- '404 Not Found: Subscription not found'
- '500 Internal Server Error: Server error'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.unleashedsoftware.com
  auth:
    type: apikey
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Content-Type: application/json
    api-auth-id: '{{ dlt.secrets[''api_id''] }}'
    api-auth-signature: '{{ method_signature }}'
    client-type: '{{ client_type }}'
  paginator:
    type: page
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
