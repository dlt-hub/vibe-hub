resources:
- name: user_entities
  endpoint:
    path: /entities
    method: GET
    data_selector: ''
- name: single_entity
  endpoint:
    path: /entities/:ID
    method: GET
    data_selector: ''
- name: add_entity
  endpoint:
    path: /entities
    method: POST
    data_selector: ''
- name: update_entity
  endpoint:
    path: /entities
    method: PUT
    data_selector: ''
- name: delete_entity
  endpoint:
    path: /entities/:ID
    method: DELETE
    data_selector: ''
- name: list_connections
  endpoint:
    path: /
    method: GET
- name: create_connection
  endpoint:
    path: /
    method: POST
- name: list_single_connection
  endpoint:
    path: /:id
    method: GET
- name: update_connection
  endpoint:
    path: /:id
    method: PUT
- name: delete_connection
  endpoint:
    path: /:id
    method: DELETE
- name: list_all_stories
  endpoint:
    path: /stories
    method: GET
    data_selector: stories
- name: list_single_story
  endpoint:
    path: /stories/:storyId
    method: GET
    data_selector: story
- name: create_new_story
  endpoint:
    path: /stories
    method: POST
    data_selector: story
- name: update_existing_story
  endpoint:
    path: /stories/:storyId
    method: PUT
    data_selector: status
- name: delete_story
  endpoint:
    path: /stories/:storyId
    method: DELETE
    data_selector: status
- name: chats
  endpoint:
    path: /chats
    method: GET
    data_selector: chats
    params:
      after: timestamp
- name: single_chat
  endpoint:
    path: /chats/:chatId
    method: GET
    data_selector: chat
    params:
      chatId: required
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: single_user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: data
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: status
- name: update_user
  endpoint:
    path: /users/:id
    method: PUT
    data_selector: status
- name: delete_user
  endpoint:
    path: /users/:id
    method: DELETE
    data_selector: status
- name: add_segments
  endpoint:
    path: /users/:id/segments
    method: POST
    data_selector: status
- name: update_segments
  endpoint:
    path: /users/:id/segments
    method: PUT
    data_selector: status
- name: remove_segments
  endpoint:
    path: /users/:id/segments
    method: DELETE
    data_selector: status
- name: ban_user
  endpoint:
    path: /users/:id/ban
    method: PUT
    data_selector: status
- name: export_users
  endpoint:
    path: /users/export
    method: POST
- name: segments
  endpoint:
    path: /users/segments
    method: GET
    data_selector: ''
- name: create_segment
  endpoint:
    path: /users/segments
    method: POST
    data_selector: ''
- name: add_users_to_segment
  endpoint:
    path: /users/segments/members
    method: POST
    data_selector: ''
- name: update_segment
  endpoint:
    path: /users/segments/:id
    method: PUT
    data_selector: ''
- name: remove_segment
  endpoint:
    path: /users/segments/:id
    method: DELETE
    data_selector: ''
- name: list_all_phrases
  endpoint:
    path: /training
    method: GET
- name: train_phrases
  endpoint:
    path: /training/train
    method: PUT
- name: train_with_custom_text
  endpoint:
    path: /training/train/text
    method: PUT
- name: ignore_phrases
  endpoint:
    path: /training/ignore
    method: PUT
- name: delete_phrases
  endpoint:
    path: /training
    method: DELETE
- name: conversations_report
  endpoint:
    path: /reports/conversations
    method: GET
    data_selector: data
- name: paid_conversations_report
  endpoint:
    path: /reports/conversations.paid
    method: GET
    data_selector: data
- name: conversations_messages_report
  endpoint:
    path: /reports/conversations.messages
    method: GET
    data_selector: data
- name: average_conversations_report
  endpoint:
    path: /reports/conversations.avg
    method: GET
    data_selector: data
- name: busiest_period_report
  endpoint:
    path: /reports/conversations.heatmap
    method: GET
    data_selector: data
- name: interactions_popularity_report
  endpoint:
    path: /reports/conversations.interactions
    method: GET
    data_selector: data
notes:
- Use Bearer token for authentication by including in the authorization header.
- 'You should know our promise: we take your privacy seriously.'
errors:
- 400 – The request was incorrect. Please make sure that the passed arguments are
  matching format provided in the method documentation.
- 401 – Unauthorized. Authorization failed. Please check if you’re using a correct
  authorization type (bearer token) and a valid developer access token.
- 404 – Not Found. You attempt to request a resource that doesn’t exist.
- 500 – Internal Server Error. Something unexpected happened on our end. Please try
  again or contact support.
- '400: The request was incorrect. Please make sure that the passed arguments are
  matching format provided in the method documentation.'
- '401: Unauthorized. Authorization failed. Please check if you’re using a correct
  authorization type (bearer token) and a valid developer access token.'
- '404: Not Found. You attempt to request a resource that doesn’t exist.'
- '500: Internal Server Error. Something unexpected happened on our end. Please try
  again or contact support.'
auth_info:
  mentioned_objects:
  - Data Privacy Framework
  - GDPR
  - CCPA
  - UK GDPR
client:
  base_url: https://api.chatbot.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Content-Type: application/json
  paginator:
    type: page
    page_size_param: after
    default_page_size: 40
source_metadata: null
