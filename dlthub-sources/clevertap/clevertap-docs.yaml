resources:
- name: Send User Profile
  endpoint:
    path: /user/login
    method: POST
    data_selector: response
    params: {}
- name: Push Event
  endpoint:
    path: /event/push
    method: POST
    data_selector: response
    params: {}
- name: Push Charged Event
  endpoint:
    path: /event/charged
    method: POST
    data_selector: response
    params: {}
- name: Add Profile Properties
  endpoint:
    path: /profile/add
    method: POST
    data_selector: response
    params: {}
- name: Remove Profile Properties
  endpoint:
    path: /profile/remove
    method: POST
    data_selector: response
    params: {}
- name: additional_instance
  endpoint:
    path: /instanceWithConfig:ctConfig
    method: POST
    data_selector: instance
    params: {}
- name: user_event
  endpoint:
    path: /pushEvent
    method: POST
    data_selector: event
- name: charged_event
  endpoint:
    path: /pushChargedEvent
    method: POST
    data_selector: event
- name: record_screen
  endpoint:
    path: /recordScreen
    method: POST
    data_selector: event
- name: error_event
  endpoint:
    path: /pushError
    method: POST
    data_selector: event
- name: CleverTap
  endpoint:
    path: /settings/project
    method: GET
    data_selector: projectDetails
    params: {}
- name: subscription_groups
  endpoint:
    path: /category-groups
    method: GET
    data_selector: list
    params: {}
- name: coupons
  endpoint:
    path: /promo/coupons
    method: POST
    data_selector: records
    params: {}
- name: coupons
  endpoint:
    path: /1/promo/coupons
    method: POST
    data_selector: coupons
    params: {}
- name: create_presigned_url
  endpoint:
    path: /get_custom_list_segment_url
    method: POST
- name: upload_custom_list_segment
  endpoint:
    path: /upload_custom_list_segment_completed
    method: POST
- name: markReadInboxMessagesForIDs
  endpoint:
    path: markReadInboxMessagesForIDs
    method: POST
- name: deleteInboxMessagesForIDs
  endpoint:
    path: deleteInboxMessagesForIDs
    method: POST
- name: record_event
  endpoint:
    path: /events
    method: POST
    data_selector: event
- name: record_charged_event
  endpoint:
    path: /charged_events
    method: POST
    data_selector: charged_event
- name: initialize_inbox
  endpoint:
    path: /initializeInbox
    method: POST
    data_selector: success
- name: get_inbox_message_count
  endpoint:
    path: /getInboxMessageCount
    method: GET
    data_selector: count
- name: get_unread_inbox_message_count
  endpoint:
    path: /getInboxMessageUnreadCount
    method: GET
    data_selector: unreadCount
- name: get_all_inbox_messages
  endpoint:
    path: /getAllInboxMessages
    method: GET
    data_selector: messages
- name: get_unread_inbox_messages
  endpoint:
    path: /getUnreadInboxMessages
    method: GET
    data_selector: unreadMessages
- name: get_inbox_message_by_id
  endpoint:
    path: /getInboxMessageForID
    method: GET
    data_selector: message
- name: delete_inbox_message
  endpoint:
    path: /deleteInboxMessage
    method: DELETE
    data_selector: success
- name: mark_read_inbox_message
  endpoint:
    path: /markReadInboxMessage
    method: POST
    data_selector: success
- name: install_events
  endpoint:
    path: /analytics/events/install
    method: GET
    data_selector: events
    params: {}
- name: custom_events
  endpoint:
    path: /analytics/events/custom
    method: GET
    data_selector: events
    params: {}
- name: upload_user_profiles
  endpoint:
    path: /1/upload
    method: POST
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: events
    params: {}
- name: User Profile APIs
  endpoint:
    path: /user/profile
    method: POST
    data_selector: userProfile
- name: Event APIs
  endpoint:
    path: /event
    method: POST
    data_selector: event
- name: device_tokens
  endpoint:
    path: /1/upload
    method: POST
    data_selector: d
- name: wallet_transactions
  endpoint:
    path: /1/promo/transactions
    method: GET
    params:
      identity: KMN@123
      walletId: wallet_123
      page: 1
- name: get_profile_count
  endpoint:
    path: /1/counts/profiles.json
    method: POST
    data_selector: count
    params: {}
- name: inbox_message
  endpoint:
    path: /inbox/messages
    method: GET
    data_selector: messages
- name: CleverTapConfig
  endpoint:
    path: /Script/CleverTap.CleverTapConfig
    method: GET
    data_selector: records
    params: {}
- name: upload_user_profile
  endpoint:
    path: /1/upload
    method: POST
    data_selector: d
    params: {}
- name: get_user_profile
  endpoint:
    path: /1/[email protected]
    method: GET
    data_selector: record
    params: {}
- name: initialize_inbox
  endpoint:
    path: CleverTap.InitializeInbox()
    method: CALL
    data_selector: ''
    params: {}
- name: show_app_inbox_default_ui
  endpoint:
    path: CleverTap.ShowAppInbox("")
    method: CALL
    data_selector: ''
    params: {}
- name: dismiss_app_inbox
  endpoint:
    path: CleverTap.DismissAppInbox()
    method: CALL
    data_selector: ''
    params: {}
- name: get_inbox_message_count
  endpoint:
    path: CleverTap.GetInboxMessageCount()
    method: CALL
    data_selector: ''
    params: {}
- name: get_inbox_message_unread_count
  endpoint:
    path: CleverTap.GetInboxMessageUnreadCount()
    method: CALL
    data_selector: ''
    params: {}
- name: get_all_inbox_messages
  endpoint:
    path: CleverTap.GetAllInboxMessages()
    method: CALL
    data_selector: ''
    params: {}
- name: get_inbox_message_by_id
  endpoint:
    path: CleverTap.GetInboxMessageForId("messageId")
    method: CALL
    data_selector: ''
    params: {}
- name: delete_inbox_message_by_id
  endpoint:
    path: CleverTap.DeleteInboxMessageForID("messageId")
    method: CALL
    data_selector: ''
    params: {}
- name: mark_inbox_message_as_read
  endpoint:
    path: CleverTap.MarkReadInboxMessageForID("messageId")
    method: CALL
    data_selector: ''
    params: {}
- name: record_notification_viewed_event
  endpoint:
    path: CleverTap.RecordInboxNotificationViewedEventForID("messageId")
    method: CALL
    data_selector: ''
    params: {}
- name: record_notification_clicked_event
  endpoint:
    path: CleverTap.RecordInboxNotificationClickedEventForID("messageId")
    method: CALL
    data_selector: ''
    params: {}
- name: user_event_log
  endpoint:
    path: /getUserEventLog
    method: GET
    data_selector: event_details
- name: user_event_log_count
  endpoint:
    path: /getUserEventLogCount
    method: GET
    data_selector: event_count
- name: user_last_visit
  endpoint:
    path: /getUserLastVisitTs
    method: GET
    data_selector: last_visit_timestamp
- name: user_app_launch_count
  endpoint:
    path: /getUserAppLaunchCount
    method: GET
    data_selector: app_launch_count
- name: user_event_log_history
  endpoint:
    path: /getUserEventLogHistory
    method: GET
    data_selector: event_history
- name: CTGeofenceAPI
  endpoint:
    path: /geofence-api
    method: GET
- name: Sample Application
  endpoint:
    description: Provides a sample application to demonstrate the integration of our
      React Native SDK.
- name: Advanced Features
  endpoint:
    description: Provides all the advanced features related to React Native SDK.
- name: Go Live Checklist
  endpoint:
    description: Provides a list of actions to be performed before you launch your
      application.
- name: Changelog
  endpoint:
    description: Provides details about the most recent updates to our SDKs, including
      bug fixes, new features, and enhancements.
- name: validate_coupon
  endpoint:
    path: /1/promo/coupons/validate
    method: POST
    data_selector: records
    params: {}
- name: CleverTap Expo Plugin
  endpoint:
    path: Resources
    method: GET
    data_selector: description
- name: Sample Application
  endpoint:
    path: Resources
    method: GET
    data_selector: description
- name: Go Live Checklist
  endpoint:
    path: Resources
    method: GET
    data_selector: description
- name: Changelog
  endpoint:
    path: Resources
    method: GET
    data_selector: description
- name: user_profile
  endpoint:
    path: /api/v1/upload
    method: POST
    data_selector: profile
    params: {}
- name: dnd
  endpoint:
    path: /api/v1/dnd
    method: POST
    data_selector: dnd
    params: {}
- name: connect
  endpoint:
    path: /v1/connect
    method: GET
    params:
      partner: partnername
- name: events
  endpoint:
    path: /1/events.json
    method: GET
    params:
      cursor: CURSOR_VALUE
- name: uninstall_tracking
  endpoint:
    path: /firebase/upload
    method: POST
    data_selector: d
    params: {}
- name: redeem_revert_coupon
  endpoint:
    path: /1/redeem-revert-coupon.json
    method: POST
    data_selector: records
- name: bulletin
  endpoint:
    path: /1/targets/trigger.json
    method: POST
    data_selector: status
    params: {}
- name: top_property_counts
  endpoint:
    path: /1/counts/top.json
    method: POST
    data_selector: status
    params: {}
- name: CleverTap Account
  endpoint:
    path: /your-api-endpoint
    method: GET
- name: credit_debit
  endpoint:
    path: /1/promo/creditDebit
    method: POST
    params:
      walletId: '1000'
      identity: User2
- name: CleverTap
  endpoint:
    path: /settings/project
    method: GET
    data_selector: project_details
- name: user_profiles
  endpoint:
    path: /api/user_profiles
    method: POST
    data_selector: profiles
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: events
    params: {}
- name: wallet
  endpoint:
    path: /1/promo/wallets
    method: GET
    data_selector: records
    params:
      identity: User-2
- name: register_push_notifications
  endpoint:
    path: /registerCTNotifications
    method: POST
    data_selector: arg1
    params: {}
- name: unregister_push_notifications
  endpoint:
    path: /unregisterCTNotifications
    method: POST
    data_selector: arg1
    params: {}
- name: campaigns
  endpoint:
    path: /1/targets/list.json
    method: POST
    data_selector: targets
    params:
      from: '20160101'
      to: '20160101'
- name: display_units
  endpoint:
    path: /display_units
    method: GET
    data_selector: units
- name: event_tracking
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: inbox
  endpoint:
    path: /inbox
    method: GET
- name: user_profile
  endpoint:
    path: /profileSet
    method: POST
    data_selector: props
    params: {}
- name: multi_value_property
  endpoint:
    path: /profileSetMultiValues
    method: POST
    data_selector: myStuff
    params: {}
- name: remove_multi_value_property
  endpoint:
    path: /profileRemoveMultiValue
    method: POST
    data_selector: myStuff
    params: {}
- name: add_multi_value_property
  endpoint:
    path: /profileAddMultiValue
    method: POST
    data_selector: myStuff
    params: {}
- name: login_user_profile
  endpoint:
    path: /onUserLogin
    method: POST
    data_selector: props
    params: {}
- name: get_cleverTap_id
  endpoint:
    path: /getCleverTapID
    method: GET
    data_selector: id
    params: {}
- name: set_location
  endpoint:
    path: /setLocation
    method: POST
    data_selector: location
    params: {}
- name: increment_profile_property
  endpoint:
    path: /profileIncrementValueBy
    method: POST
    data_selector: score
    params: {}
- name: decrement_profile_property
  endpoint:
    path: /profileDecrementValueBy
    method: POST
    data_selector: score
    params: {}
- name: in_app_notifications
  endpoint:
    path: /in_app_notifications
    method: POST
    data_selector: notifications
    params: {}
- name: additional_instance
  endpoint:
    path: /createInstance
    method: POST
    data_selector: instance
    params: {}
- name: vouchers
  endpoint:
    path: ''
    method: GET
    data_selector: records
    params:
      identity: Unique identifier for the user. Accepts phone (E.164 format), email,
        or CleverTap ID.
- name: create_user_profile
  endpoint:
    path: /user_profiles/create
    method: POST
    data_selector: user_profile
- name: update_user_profile
  endpoint:
    path: /user_profiles/update
    method: POST
    data_selector: user_profile
- name: get_clevertap_id
  endpoint:
    path: /user_profiles/clevertap_id
    method: GET
    data_selector: clevertap_id
- name: set_multi_values
  endpoint:
    path: /user_profiles/multi_values
    method: POST
    data_selector: multi_values
- name: add_multi_value
  endpoint:
    path: /user_profiles/add_multi_value
    method: POST
    data_selector: multi_value
- name: remove_multi_value
  endpoint:
    path: /user_profiles/remove_multi_value
    method: POST
    data_selector: multi_value
- name: increment_user_profile
  endpoint:
    path: /user_profiles/increment
    method: POST
    data_selector: increment
- name: decrement_user_profile
  endpoint:
    path: /user_profiles/decrement
    method: POST
    data_selector: decrement
- name: set_location
  endpoint:
    path: /user_profiles/set_location
    method: POST
    data_selector: location
- name: Push Notification Clicked
  endpoint:
    path: /recordNotificationClickedEvent
    method: POST
- name: Notification Permission Status
  endpoint:
    path: /getNotificationPermissionStatus
    method: GET
- name: push_notifications
  endpoint:
    path: /push_notifications
    method: POST
- name: variables
  endpoint:
    path: /fetch/variables
    method: GET
    data_selector: variables
- name: User Profiles
  endpoint:
    path: /user_profiles
    method: POST
    data_selector: userProfiles
- name: Events
  endpoint:
    path: /events
    method: POST
    data_selector: events
- name: Push Notifications
  endpoint:
    path: /push_notifications
    method: POST
    data_selector: pushNotifications
- name: CleverTap Credentials
  endpoint:
    path: /settings
    method: GET
    data_selector: credentials
- name: changeCredentials
  endpoint:
    path: /changeCredentials
    method: POST
    data_selector: response
    params: {}
- name: upload_events
  endpoint:
    path: /1/upload
    method: POST
    data_selector: d
- name: campaign_report
  endpoint:
    path: /1/targets/result.json
    method: POST
    data_selector: result
    params: {}
- name: total_inbox_message_count
  endpoint:
    path: /getInboxMessageCount
    method: GET
    data_selector: total
- name: total_inbox_unread_count
  endpoint:
    path: /getInboxMessageUnreadCount
    method: GET
    data_selector: unread
- name: all_inbox_messages
  endpoint:
    path: /getAllInboxMessages
    method: GET
    data_selector: messages
- name: all_unread_inbox_messages
  endpoint:
    path: /getUnreadInboxMessages
    method: GET
    data_selector: messages
- name: inbox_message_by_id
  endpoint:
    path: /getInboxMessageForId
    method: GET
    data_selector: message
- name: delete_inbox_message_by_id
  endpoint:
    path: /deleteInboxMessageForId
    method: DELETE
    data_selector: status
- name: mark_message_as_read_by_id
  endpoint:
    path: /markReadInboxMessageForId
    method: POST
    data_selector: status
- name: CleverTapCredentials
  endpoint:
    path: /Integrations/Third-party Integrations/CleverTap
    method: POST
- name: AndroidIntegration
  endpoint:
    path: /AndroidIntegration
    method: POST
- name: iOSIntegration
  endpoint:
    path: /iOSIntegration
    method: POST
- name: OrganicInstallCustomEvents
  endpoint:
    path: /Settings/Partners/PartnerList/Adjust
    method: POST
- name: debug_level
  endpoint:
    path: CleverTap.setDebugLevel(debugLevel)
    method: SET
    data_selector: debugLevel
    params: {}
- name: set_push_token
  endpoint:
    path: CleverTap.setPushToken("<Your FCM Token>")
    method: SET
    data_selector: FCM Token
    params: {}
- name: set_encryption_level
  endpoint:
    path: <meta-data android:name="CLEVERTAP_ENCRYPTION_LEVEL" android:value="1" />
    method: SET
    data_selector: encryption level
    params: {}
- name: get_events
  endpoint:
    path: /1/events.json
    method: POST
    data_selector: records
    params: {}
- name: get_events_using_cursor
  endpoint:
    path: /1/events.json
    method: GET
    data_selector: records
    params: {}
- name: GitHub Repository
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: SDK Direct Download
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Sample Applications
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Advanced Features
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Go Live Checklist
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Changelog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /1/subscribe
    method: POST
- name: event_output
  endpoint:
    path: /setup/output
    method: POST
    data_selector: Output Configuration
    params: {}
- name: input_feed
  endpoint:
    path: /connections/connect
    method: POST
    data_selector: Connection Status
    params: {}
- name: Create a Pre-signed URL
  endpoint:
    path: /get_catalog_url
    method: GET
- name: Complete Multipart Upload
  endpoint:
    path: /upload_catalog_completed
    method: POST
- name: Upload Multipart Catalog
  endpoint:
    path: /get_multipart_upload_catalog_url
    method: GET
- name: Get Message Reports
  endpoint:
    path: /report/message
    method: GET
- name: Real-Time Counts
  endpoint:
    path: /report/real-time-counts
    method: GET
- name: Top Property Counts
  endpoint:
    path: /report/top-property-counts
    method: GET
- name: Trends
  endpoint:
    path: /report/trends
    method: GET
- name: message_report
  endpoint:
    path: /1/message/report.json
    method: POST
    data_selector: messages
    params:
      from: '20171201'
      to: '20171225'
- name: User Profile
  endpoint:
    path: /user/profile
    method: POST
    data_selector: data
- name: Event
  endpoint:
    path: /event
    method: POST
    data_selector: data
- name: Product Config
  endpoint:
    path: /productConfig
    method: GET
    data_selector: parameters
    params: {}
- name: Feature Flags
  endpoint:
    path: /featureFlags
    method: GET
    data_selector: flags
    params: {}
- name: inbox_messages
  endpoint:
    path: /api/inbox/messages
    method: GET
    data_selector: messages
    params: {}
- name: user_properties
  endpoint:
    path: /api/user/properties
    method: GET
    data_selector: properties
    params: {}
- name: web_push
  endpoint:
    path: /settings/engage/channels/web_push
    method: POST
    data_selector: vapid_keys
    params: {}
- name: inbox_messages
  endpoint:
    path: /inbox/messages
    method: GET
    data_selector: messages
    params: {}
- name: inbox_message_count
  endpoint:
    path: /inbox/message/count
    method: GET
    data_selector: count
    params: {}
- name: inbox_message_unread_count
  endpoint:
    path: /inbox/message/unread/count
    method: GET
    data_selector: unreadCount
    params: {}
- name: inbox_message_by_id
  endpoint:
    path: /inbox/message/{messageId}
    method: GET
    data_selector: message
    params: {}
- name: delete_inbox_message
  endpoint:
    path: /inbox/message/delete/{messageId}
    method: DELETE
    data_selector: result
    params: {}
- name: mark_read_inbox_message
  endpoint:
    path: /inbox/message/mark_read/{messageId}
    method: POST
    data_selector: result
    params: {}
- name: push_notification_viewed
  endpoint:
    path: /inbox/message/viewed/{messageId}
    method: POST
    data_selector: result
    params: {}
- name: push_notification_clicked
  endpoint:
    path: /inbox/message/clicked/{messageId}
    method: POST
    data_selector: result
    params: {}
- name: install_events
  endpoint:
    path: /install_events
    method: GET
    data_selector: events
- name: custom_events
  endpoint:
    path: /custom_events
    method: GET
    data_selector: events
- name: disassociate
  endpoint:
    path: /1/disassociate
    method: POST
    data_selector: status
    params: {}
- name: custom_user_events
  endpoint:
    path: /record/custom_user_events
    method: POST
    data_selector: events
- name: charged_events
  endpoint:
    path: /record/charged_events
    method: POST
    data_selector: events
- name: user_profile
  endpoint:
    path: /userProfile
    method: POST
    data_selector: Site
- name: user_location
  endpoint:
    path: /setLocation
    method: POST
    data_selector: $ct.location
- name: In-App Notification
  endpoint:
    path: /in_app_notifications
    method: POST
    data_selector: notifications
- name: AndroidNotificationChannel
  endpoint:
    path: /Script/CleverTap.CleverTapConfig
    method: GET
    data_selector: records
    params: {}
- name: IOSRuntimeSettings
  endpoint:
    path: /Script/IOSRuntimeSettings.IOSRuntimeSettings
    method: GET
    data_selector: records
    params: {}
- name: variables
  endpoint:
    path: /api/v1/variables
    method: POST
    data_selector: variables
- name: web_pop_ups
  endpoint:
    path: /api/web/pop-ups
    method: POST
    data_selector: notifications
    params: {}
- name: delete_variables
  endpoint:
    path: /1/deleteVars
    method: POST
- name: user_profile
  endpoint:
    path: /profile/update
    method: POST
    data_selector: data
- name: CleverTap Integration
  endpoint:
    path: /segment/clevertap
    method: POST
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: data
- name: System Events
  endpoint:
    path: /events/system
    method: GET
    data_selector: records
- name: Custom Events
  endpoint:
    path: /events/custom
    method: GET
    data_selector: records
- name: create_campaign
  endpoint:
    path: /1/targets/create.json
    method: POST
    data_selector: ''
    params: {}
- name: campaign
  endpoint:
    path: /create_campaign
    method: POST
    data_selector: campaign
    params: {}
- name: create_campaign
  endpoint:
    path: /1/targets/create.json
    method: POST
- name: send_sms
  endpoint:
    path: /1/send/sms.json
    method: POST
- name: send_push
  endpoint:
    path: /1/send/push.json
    method: POST
- name: send_webpush
  endpoint:
    path: /1/send/webpush.json
    method: POST
- name: send_email
  endpoint:
    path: /1/send/email.json
    method: POST
- name: send_whatsapp
  endpoint:
    path: /1/send/whatsapp.json
    method: POST
- name: send_sms
  endpoint:
    path: /1/send/sms.json
    method: POST
    data_selector: status
    params: {}
- name: user_events
  endpoint:
    path: /recordEvent
    method: POST
    data_selector: event_data
    params: {}
- name: charged_event
  endpoint:
    path: /recordChargedEvent
    method: POST
    data_selector: charge_data
    params: {}
- name: manifest
  endpoint:
    path: /manifest.json
    method: GET
    data_selector: gcm_sender_id
    params: {}
- name: event
  endpoint:
    path: /event
    method: POST
    data_selector: event
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: profile
- name: Template Keys
  endpoint:
    path: /template/keys
    method: GET
- name: Template Variations
  endpoint:
    path: /template/variations
    method: GET
- name: Dark Mode
  endpoint:
    path: /template/dark_mode
    method: GET
- name: Image Scaling
  endpoint:
    path: /template/image_scaling
    method: GET
- name: Image Specifications
  endpoint:
    path: /template/image_specifications
    method: GET
- name: Image Guidelines
  endpoint:
    path: /template/image_guidelines
    method: GET
- name: delete_user_profile
  endpoint:
    path: /1/delete/profiles.json
    method: POST
    data_selector: status
- name: user_profile
  endpoint:
    path: /user/profile
    method: POST
    data_selector: profile_properties
- name: stop_scheduled_campaign
  endpoint:
    path: /1/targets/stop.json
    method: POST
    data_selector: status
- name: real_time_counts
  endpoint:
    path: /1/now.json
    method: POST
    data_selector: status
    params: {}
- name: User Profiles
  endpoint:
    path: /track/user/login
    method: POST
    data_selector: newProps
    params: {}
- name: CleverTapAccountID
  endpoint:
    path: CleverTap Dashboard>Settings>Integration Details
    method: POST
    data_selector: CleverTapAccountID
    params: {}
- name: CleverTapToken
  endpoint:
    path: CleverTap Dashboard>Settings>Integration Details
    method: POST
    data_selector: CleverTapToken
    params: {}
- name: Product Config
  endpoint:
    path: /productConfig
    method: GET
    data_selector: parameters
    params: {}
- name: Feature Flags
  endpoint:
    path: /featureFlags
    method: GET
    data_selector: flags
    params: {}
- name: create_campaign
  endpoint:
    path: /campaigns/create
    method: POST
- name: stop_campaign
  endpoint:
    path: /campaigns/stop
    method: POST
- name: get_campaign_report
  endpoint:
    path: /campaigns/report
    method: GET
- name: get_campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: install_events
  endpoint:
    path: /install_events
    method: GET
    data_selector: install_events
    params: {}
- name: custom_events
  endpoint:
    path: /custom_events
    method: GET
    data_selector: custom_events
    params: {}
- name: CleverTapAccountID
  endpoint:
    path: Info.plist
    method: UPDATE
    data_selector: CleverTapAccountID
- name: CleverTapToken
  endpoint:
    path: Info.plist
    method: UPDATE
    data_selector: CleverTapToken
- name: CleverTapDisableIDFV
  endpoint:
    path: Info.plist
    method: UPDATE
    data_selector: CleverTapDisableIDFV
- name: trends
  endpoint:
    path: /1/counts/trends.json
    method: POST
    data_selector: status
- name: Sample Application
  endpoint:
    path: /resources/sample
    method: GET
    data_selector: resources
- name: Advanced Features
  endpoint:
    path: /resources/advanced
    method: GET
    data_selector: resources
- name: Go Live Checklist
  endpoint:
    path: /resources/go-live
    method: GET
    data_selector: resources
- name: Changelog
  endpoint:
    path: /resources/changelog
    method: GET
    data_selector: resources
- name: create_variables
  endpoint:
    path: /1/createVars
    method: POST
- name: events
  endpoint:
    path: /1/events.json
    method: GET
- name: demerge_user_profile
  endpoint:
    path: /1/demerge/profiles.json
    method: POST
    data_selector: status
    params: {}
- name: user_profiles_by_events
  endpoint:
    path: profiles.json
    method: POST
    data_selector: records
    params:
      batch_size: '50'
- name: user_profiles_by_id
  endpoint:
    path: profile.json
    method: GET
    data_selector: record
    params: {}
- name: User Upload
  endpoint:
    path: /uploadUserProfile
    method: POST
    data_selector: UserProfile
    params:
      trigger: Event type = 'identify'
- name: User Delete
  endpoint:
    path: /deleteUserProfile
    method: DELETE
    data_selector: UserProfile
    params:
      trigger: Event type = 'delete user'
- name: event_output
  endpoint:
    path: /setup/output
    method: POST
    data_selector: 'Output: Event Configuration'
    params: {}
- name: user_profile
  endpoint:
    path: /user/profile
    method: POST
    data_selector: profile
    params: {}
- name: get_user_profiles
  endpoint:
    path: /getUserProfiles
    method: GET
- name: upload_user_profiles
  endpoint:
    path: /uploadUserProfiles
    method: POST
- name: upload_device_tokens
  endpoint:
    path: /uploadDeviceTokens
    method: POST
- name: get_profile_count
  endpoint:
    path: /getProfileCount
    method: GET
- name: delete_user_profile
  endpoint:
    path: /deleteUserProfile
    method: DELETE
- name: demerge_user_profile
  endpoint:
    path: /demergeUserProfile
    method: POST
- name: inbox_message_count
  endpoint:
    path: clevertap.getInboxMessageCount()
    method: GET
- name: inbox_unread_message_count
  endpoint:
    path: clevertap.getInboxMessageUnreadCount()
    method: GET
- name: all_inbox_messages
  endpoint:
    path: clevertap.getAllInboxMessages()
    method: GET
- name: unread_inbox_messages
  endpoint:
    path: clevertap.getUnreadInboxMessages()
    method: GET
- name: inbox_message_by_id
  endpoint:
    path: clevertap.getInboxMessageForId(messageId)
    method: GET
- name: delete_inbox_message
  endpoint:
    path: clevertap.deleteInboxMessage(messageId)
    method: DELETE
- name: mark_read_inbox_message
  endpoint:
    path: clevertap.markReadInboxMessage(messageId)
    method: POST
- name: mark_read_all_inbox_messages
  endpoint:
    path: clevertap.markReadAllInboxMessage()
    method: POST
- name: send_externaltrigger
  endpoint:
    path: /1/send/externaltrigger.json
    method: POST
    data_selector: message
    params:
      campaign_id: <campaign ID>
      to: <Email ID>
- name: send_multiple_externaltrigger
  endpoint:
    path: /2/send/externaltrigger.json
    method: POST
    data_selector: message
    params:
      campaign_id_list: <list of campaign IDs>
      to: <Email ID>
- name: user_events
  endpoint:
    path: /event
    method: POST
    data_selector: event
    params: {}
- name: charged_event
  endpoint:
    path: /event
    method: POST
    data_selector: event
    params: {}
- name: variables
  endpoint:
    path: /1/getVars
    method: POST
    data_selector: variables
    params:
      identity: required
      clevertapId: optional
      includeDefaults: optional
- name: event_count
  endpoint:
    path: /1/counts/events.json
    method: POST
    data_selector: status
    params: {}
- name: user_events
  endpoint:
    path: /recordEvent
    method: POST
    data_selector: event
    params: {}
- name: charged_event
  endpoint:
    path: /recordChargedEvent
    method: POST
    data_selector: event
    params: {}
- name: SMS
  endpoint:
    path: /sms
    method: POST
notes:
- FireOS does not support certain Google APIs and Libraries.
- Discontinuation of Xiaomi Push Service beyond Mainland China starting from April
  2, 2024.
- Ensure google-services.json is added correctly.
- Confirm APNs is configured in your Apple Developer account.
- By default, CleverTap logs are set to CleverTapLogLevel.info. During development,
  we recommend that you set the SDK to DEBUG mode.
- All configuration to the CleverTapInstanceConfig object must be done prior to calling
  instanceWithConfig:ctConfig.
- Currently, the App Launched event is not correctly captured.
- You can use the RudderStack Lifecycle events to capture App Launched information.
- To associate your iOS app with your CleverTap account, you must add your CleverTap
  credentials in the Info.plist file.
- PII data is stored across the SDK and could be sensitive information.
- The encryption level is None by default.
- Personalization is enabled by default
- All apps targeting Android 13 and above must request permission from the user before
  pushing notifications.
- Existing apps will get grandfathered in after a short grace period until the next
  app launch on Android 13.
- It is not recommended to use the Safari APNs configuration as it is deprecated and
  not available on the dashboard.
- To avoid disruptions in web push notifications, you must migrate to the new HTTP
  v1 API by June 20, 2024.
- The API response varies depending on the input payload, metadata, coupon configuration,
  and user identity.
- Case-sensitive values are ignored when validating coupons on product or cart properties.
- Removed the integrated Rendermax SDK before upgrading to Android SDK v5.1.0
- This document is not legal advice. It is provided for your information and convenience.
  You must work closely with legal and other professional advisors to determine exactly
  how Apple policies apply to you.
- In-App Notifications are not supported inside App Extensions and watchOS apps.
- The CleverTap SDK automatically resumes displaying the in-app notification after
  every new session.
- The showInAppNotificationIfAny method will be deprecated soon.
- 'Recommended resolution for Image URL: 600×300'
- 'Max size for Image URL: 40 kb'
- 'Supported file formats for Image URL: .jpg and .png'
- 'Max resolution for Large Icon URL: 72×72'
- 'Max size for Large Icon URL: 1 kb'
- Notification tray priority is only applicable for Android 7.1 and below.
- For Android 8 and above, the notification tray priority is based on the notification
  channel.
- Not applicable for tvOS and watchOS apps.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- We recommend skipping React Native 2.2.0 and update to React Native 2.2.1 or higher.
- Android 6.2.0 produces a crash. Upgrade to Android 6.2.1 or higher.
- Unity generates Android apps using the UnityPlayerActivity, which extends the Android
  Activity class.
- CleverTap’s header and footer In-App notifications require the activity to extend
  FragmentActivity.
- 'Duplication of Events: If you select Organic install events for more than one attribution
  partner, a warning for duplication of events displays.'
- Concurrent requests to the Upload User Profiles API are limited to 15 per account.
- User profile attribute keys are limited to 120 bytes, and their values are limited
  to 512 bytes.
- Event properties must be a date object or scalar value—such as string, boolean,
  integer, or float.
- Event property values must be a date object or scalar value—such as string, boolean,
  integer, or float.
- Starting from this release, Signed Call is incompatible with CleverTap SDK versions
  below v7.3.1.
- Starting from this release, Signed Call is incompatible with CleverTap SDK versions
  below v7.3.1. To check the compatible versions of the CleverTap Android SDK, refer
  to Signed Call integration document.
- 'Android SDK version 4.6.7 and Push Templates SDK v1.0.5.1 releases are intended
  for Android 12 targeted users, satisfying the below points: Targeting Android 12,
  Using RenderMax and/or using Push Templates'
- A device token can be updated against a CleverTap Id (objectId), but not against
  an email ID or a custom-defined user identity.
- If given profile already has a token, it will not be updated and an error will be
  reported into Live Error Stream.
- Starting from Android 13 and iOS 10.0, applications must request notification permission
  from the user before sending Push Notifications.
- CleverTap React Native supports push primer for push notifications starting with
  the v0.9.5 release.
- Starting from CleverTap Flutter SDK version 1.8.0, the RenderMax Push SDK functionality
  is now supported directly within the CleverTap Android SDK.
- Some objects like Contact may return nulls in deeply nested fields
- The response is a JSON object containing the key status, which might be success,
  partial, or fail.
- Check the format of the FCM Sender ID and registration token you pass on to CleverTap.
  It should be an exact match to the token a user receives from FCM.
- The device has not received a token from FCM/APNS or has not pushed the registration
  token to CleverTap due to infrequent network connectivity.
- Sender ID Mismatch is a common error that occurs when you use your Android application
  Project ID instead of the project number.
- CleverTap will discontinue support for Mi Push starting from Android SDK version
  v6.1.1.
- CleverTap will remove all existing credentials and the provision to set up these
  credentials from the CleverTap dashboard.
- CleverTap React Native SDK v3.0 and above supports AndroidX Media3.
- Auto-initialization is required on Android. Deferred initialization is supported
  only on iOS.
- Every CleverTap API call should include Project ID and Account Passcode as headers.
- The timeout for Webhook is 5 seconds with a retry limit of 2 times.
- Ensure these dependencies are added to the module-level build.gradle file, not the
  project-level one.
- Added heads-up notifications to call alerts, prompting users when the call screen
  goes invisible. These alerts are triggered by pressing the back button or putting
  the app in the background. These notifications allow users to return to the call
  interface by tapping them.
- Improved Bluetooth audio experience during calls. The dial tone of an outgoing call
  now plays through the connected Bluetooth headset instead of the internal speaker.
  To enable Bluetooth management during calls, the SDK requires the runtime BLUETOOTH_CONNECT
  permission for Android 12 and above.
- This version is the minimum requirement for using the Visual Editor.
- Supports CleverTap Android SDK v7.1.2.
- Supports CleverTap iOS SDK v7.1.0.
- CleverTapAPI needs to be initialized before the CTGeofenceAPI object is created
  because the object of CleverTapAPI is required to initialize the CleverTap Android
  Geofence SDK.
- Runtime location permissions needed for SDK to work.
- CTGeofenceAPI is automatically activated once the init() method has been called.
- CleverTap Android Geofence SDK raises the 'Geofence Cluster Entered' and 'Geofence
  Cluster Exited' events automatically.
- Uses HTML tags in Title and Message for rich push notifications.
- Android 12 restricts Notification Trampolines.
- CleverTap SDK 4.3.0 complies with Pending Intents mutability.
- Android has restricted the usage of Notification Trampolines.
- The application must handle clearing notifications on CTA click manually.
- Coupon codes must be alphanumeric and are case-sensitive (must be entered in ALL
  CAPS).
- This feature is released in Public Beta. it is fully functional, and we are actively
  fine-tuning it based on your feedback to ensure the best experience.
- Refer to the Expo Plugin Quick Start Guide for complete instructions and examples.
- No explicit configuration needed for Firebase to GTM.
- Use predefined profile properties for consistency.
- Ensure date format is yyyy-MM-dd for the 'dob' field.
- CleverTap tracks app uninstalls through silent notifications and real-time tracking.
- Real-time uninstall tracking requires Firebase Analytics integration.
- In a scenario where there is already a draft created by another user profile in
  the dashboard, the sync call will fail to avoid overriding important changes made
  by someone else.
- If the identity is not provided for non logged-in users, the API returns an error
  message, asking the user to log in to redeem the coupon code.
- In the case of invalid or missing type parameter, the API returns an error message
  indicating the type query parameter must be either redeem or revert.
- The response will be a JSON object containing either the success or fail status.
- The targets key returns the number of Bulletins that have been sent for the Business
  event that has been raised.
- The response contains a status key which might be success, partial, or fail.
- Starting May 1st, 2024, apps incorporating third-party SDKs, used on the App Store
  must integrate versions of the SDKs that include privacy manifests.
- This update affects App versions released on or after May 1, 2024.
- 'CORS Credentials Configuration: Ensure requests to CleverTap domains do not include
  credentials.'
- 'Upgrade Alert: We recommend upgrading to CleverTap Flutter 3.3.0 or above if using
  In-App.'
- 'Downgrade Advisory: After upgrading to Flutter 3.2.0, avoid downgrading in subsequent
  app releases. If you face any issue after upgrading to this version, contact the
  CleverTap Support team for assistance.'
- The following event tracking APIs previously logged events at the device level,
  making user-specific tracking inaccurate, especially in multi-user scenarios. They
  are now deprecated in favor of new user-level APIs and will be removed in future
  versions with prior notice.
- Adds accessibility support for App-Inbox and In-App Messages to enhance screen reader
  compatibility.
- CleverTap Expo Plugin automates native configurations and maintains your project
  in the managed workflow.
- Custom notification sound files must be stored at the root level of your assets
  folder.
- Enable tracking for anonymous user option to track anonymous users in CleverTap.
- You can set a maximum number of 256 custom attribute keys.
- Attribute keys must be of type String and attribute values can be scalar values.
- Attribute key names are limited to 120 characters in length.
- Scalar attribute values are limited to 512 characters in length.
- User profile properties are not case-sensitive.
- Do not call onUserLogin directly in the onCreate() lifecycle method.
- Firebase will deprecate its legacy APIs starting June 20, 2023, and discontinue
  them from June 2024.
- To ensure uninterrupted delivery of the push notifications, you must migrate to
  the latest FCM APIs.
- Some objects may return nulls in deeply nested fields
- Requires integration with CleverTap and RudderStack SDK.
- Ensure to set up FCM for push notifications.
- Service worker file must be hosted in the document root to receive push notifications.
- CleverTap Geofence will NOT request Location permissions from the user. Location
  Permission has to requested by the app as deemed fit while onboarding the user to
  the app.
- Handles UX issues during network loss or switch.
- Modifies the SDK's behavior when the Notifications Settings are disabled for the
  application.
- CleverTap account ID must be replaced with the actual ACCOUNT ID value from the
  Dashboard -> Settings page.
- 'All Promo API requests must be authenticated using the Basic Authentication method
  with the following keys: User: API Key, Password: Secret Key'
- CleverTap provides easy ways to enrich the user profile with data from sources,
  such as Facebook.
- We strongly recommend not changing the identifiers for new app installs after the
  identifiers are set (via an instance config). This may result in an error message,
  and the original identifier keys will be used.
- CleverTapDisplayUnit is delivered via Push notification in the Send Test flow.
- CleverTap Flutter SDK v1.5.2 and above supports inboxNotificationMessageClicked
  callback on the click of an App Inbox item.
- CleverTap Flutter SDK v1.1.1 and above supports inboxNotificationButtonClicked callback
  on the click of KV type of buttons.
- The CleverTap SDK automatically resumes displaying the In-App notification after
  every new session.
- Supports multiple CleverTap accounts in a single app.
- Use CleverTapInstanceConfig for additional instances.
- Before you proceed, check that you are using Cordova SDK v2.7.0 or higher to use
  the Cordova Product Experiences feature.
- For SDK v2.4.2 or below, use CleverTapBinding instead.
- iOS returns the CleverTap ID immediately. Android requires an async callback after
  SDK initialization.
- CleverTap iOS SDK v4.2.0 and above versions support the Push Primer.
- Push Primer is supported in CleverTap iOS SDK v4.2.0 and above.
- Requires upload of .p8 key or .p12 certificate for push notifications
- Push notifications must be configured in Xcode project settings
- Check that you use a production certificate for the production environment.
- The 'App bundle ID' of the provisioning profile and the CleverTap push certificate
  (p12 certificate) must match.
- Check the value of the 'App Bundle ID' and 'APNs push mode' that you have configured
  in the CleverTap Dashboard under Push Settings.
- Web push notifications function only on sites served over HTTPS.
- Web push does not operate in Incognito or Private Browsing mode.
- Browsers embedded within apps do not support web push notifications.
- Optimizes Call Screen Launch
- The default color is yellow (#F5FA55)
- Ensure that your custom Application class either extends CleverTapApplication or
  explicitly calls CleverTapRnAPI.initReactNativeIntegration(this);
- Jio’s Operating System does not support some Google APIs and Libraries, preventing
  the operation of libraries such as FCM.
- File Variables function only on mobile platforms (iOS and Android).
- In a scenario where there is already a draft created by another user profile in
  the dashboard, the sync call will fail to avoid overriding important changes.
- Pushing user information applies only to Segment-CleverTap SDK version v1.1.2 and
  above.
- CleverTap supports Native Display for CleverTap iOS SDK version 3.7.2 and above.
- By default, CleverTap logs are set to CleverTap.Loglevels.INFO.
- During development, we recommend that you set the SDK to DEBUG mode in order to
  log warnings or other important messages to the Android logging system.
- GDPR mandates that if you are using Google AD ID, there is prominent disclosure
  to your end customer in their application.
- The WebView feature is supported only for native Android and iOS SDKs. It is not
  supported for React Native, Flutter, Cordova, and Unity.
- Ensure you use a unique identifier for YOUR_VARIABLE_NAME_HERE to avoid interfering
  with other apps leading to namespace issues. It should be a unique variable that
  the JS Engine can recognize. We recommend using your app's package name because
  two applications cannot have the same package name. This will ensure that it is
  unique.
- Use your own domain to collect data.
- CNAME record must be added in DNS Settings.
- Starting from core v5.1.0, developers can define a default notification channel
  for their app.
- Events are limited to a maximum of 1000 event records per API call.
- Concurrent requests are limited to 15 per account.
- If the campaign has not been completed yet, you will receive the error response
  indicating that the target hasn't been completed.
- You do not require to pass Age as a profile property in the API because it is automatically
  calculated and stored.
- We identified a critical bug in iOS SDK 7.0.0 and recommend skipping this version
  and upgrading to iOS SDK 7.0.1 instead.
- Added support for Integration Debugger by sending a debug flag in the header.
- Add CleverTap Account ID and Account Token from the CleverTap Dashboard under Settings
  page.
- This release is intended to support the M2P Campaign feature, which is currently
  in Private Beta.
- You must have an SFTP client to import data into CleverTap's SFTP server.
- Ensure that your plan includes the SFTP feature.
- You must provide the unitID of the CleverTapDisplayUnit corresponding to the Native
  Display.
- From Cordova SDK v2.7.1 onwards, you can enable encryption for PII data such as
  Email, Identity, Name, and Phone.
- You can only define single event type with each request for events.
- Batch size for each request must be up to 1000.
- To test input without submitting data, add parameter dryRun=1 to the URL.
- The maximum file size in a single upload is 5 GB.
- Pre-signed URLs are valid for a maximum of 24 hours from generation.
- Using the @Variable annotation for file type variables is not currently supported.
- Pushing the user information applies only to Segment-CleverTap SDK version v1.1.2
  and above.
- CleverTap limits concurrent API requests per user account to ensure smooth and efficient
  processing and maintain service performance and stability.
- If you exceed the concurrent request limit, you receive an HTTP 429 error with the
  message 'Too many concurrent requests'.
- Users must whitelist all the IP addresses listed against each region to ensure network
  connectivity.
- CleverTap traffic originates from a combination of fixed IPs and specific IP ranges.
- Change CleverTap project ID, project token, and passcode with the production project
  credentials.
- Having the right set of people on board is essential.
- Check that the correct data types for the user properties and event properties are
  passed to CleverTap.
- Add a privacy policy. Declare to your users that you’re sharing data with third
  parties such as CleverTap.
- Check that the current CleverTap IP ranges are allowed.
- Custom CleverTap ID capability is only available on Android and iOS versions 3.5.0
  and above.
- To send a custom ID via Web SDK, the customId parameter is required.
- The Get Message Reports API fetches campaigns based on their start dates.
- CleverTap Push Notifications do not work on Tizen as the Service worker runs only
  on an HTTPS or a localhost connection.
- Feature flags let you toggle a feature on and off controlled via CleverTap Backend.
- Supports triggering In-App campaigns based on a combination of recurring and first-time
  events.
- Support for encryption of PII data such as Email, Identity, Name, and Phone.
- Ensure the user is marked as a Test profile on the Dashboard.
- Confirm that the SyncVariables method is correctly implemented in your DEBUG build.
- Ensure you are using iOS SDK v5.0.0 or higher to use the Remote Config feature.
- CleverTap supports file type variables starting from CleverTap iOS SDK v7.0.0 and
  above.
- This feature is only supported for CleverTap core notifications. Support for push
  templates will be released soon.
- Requires CleverTap account ID for initialization
- Ensure you have a CleverTap account
- Refer to the Android SDK Quick Start Guide to get started
- You can disassociate a phone number only when it is used as an identity.
- The batch size for each request must be up to 1000.
- As of December 2020, SendGrid only requires an API key for authentication. Username
  and password are no longer needed.
- Ensure to add the Push Notifications capability to your Xcode project.
- The Firebase Unity SDK may override your AndroidManifest.xml file.
- If the browser blocks access to geolocation or the user denies permission, automatic
  location detection will fail silently.
- In-app notifications are suspended by default when the app starts.
- CleverTap Unreal SDK requires integration with Firebase Cloud Messaging (FCM) for
  Android.
- CleverTap Unreal SDK requires configuration of Apple Push Notification service (APNs)
  for iOS.
- Account token is required to sync variables.
- Syncing will fail if a user profile has a draft in the dashboard.
- Dismiss Spam Control is set to false by default.
- Ensure your activities extend FragmentActivity.
- Uses SDK version 4.2.0 and above for controlling In-App notifications.
- During development, set the SDK to DEBUG mode to log warnings or other important
  messages.
- If you do not wish to insert your account credentials in your app’s Info.plist,
  set your account ID programmatically.
- CleverTap supports only Segment SDK version v1 (i.e. v1.5.0) and not v2.
- Android can build only files up to 65K; if it exceeds, you will get a DexArchiveMergerException
  error.
- By default, CleverTap does not collect device network information.
- The `resumeInAppNotifications` method resumes displaying in-app notifications.
- CleverTap tracks user events and properties automatically.
- Event property values must be a date object or scalar value.
- For certain events, properties can include arrays.
- Currently, AMP Email campaigns cannot be created using Create Campaign API.
- This endpoint is limited to 3 requests per second.
- Each request can contain a max of 1000 users across the identifiers.
- Requires setup of provider for different target modes like email, WhatsApp, etc.
- CleverTap JavaScript library does not have any external dependencies.
- CleverTap’s JavaScript library works well within Google Tag Manager.
- From CleverTap Flutter SDK v1.9.0 onwards, you can enable encryption for PII data
  such as Email, Identity, Name, and Phone.
- CleverTap Push Templates SDK enhances user engagement through customizable push
  notifications.
- For a successful API request, make sure one of the optional parameters, either identity
  or guid, is present in the body parameter.
- Ensure that you have integrated CleverTap's new Web SDK.
- Ensure that the default/fallback content is configured on your website to render
  in case of delayed response from CleverTap servers.
- Each field in the user profile object is optional.
- The user profile is initially Anonymous until enriched with identifiable information.
- To force use Google AD ID to uniquely identify users, use the following meta tag.
  GDPR mandates that if you are using this tag, there is prominent disclosure to your
  end customer in their application.
- If no payload was provided and the request was successful, the response will include
  a count of active users in real-time.
- CleverTap uses a basic access authentication model to authenticate requests to the
  API.
- Ensure the setup is complete by tracking events and user profiles in the CleverTap
  dashboard.
- Ensure the setup is complete by tracking user events in the CleverTap dashboard.
- Use AutoIntegrate to automatically swizzle the application and push notification
  methods.
- Feature flags are automatically fetched every time a new app session is created.
- Smart TVs have become an integral part of modern entertainment, offering a range
  of interactive features and services.
- Member and Creator roles in the project don’t have access to view the Passcode and
  Project Token of the account on the dashboard.
- Calls to this endpoint are synchronous. We recommend making individual calls, waiting
  for our response, and then make another request.
- Newly defined Variables need to be Published from the Dashboard in order for it
  to persist.
- Toggle personalization settings after login, logout, or consent updates.
- Data centers available in Europe, India, United States, Singapore, Indonesia, and
  Middle East (UAE)
- Uses CleverTap HMS SDK 1.5.0 and above compatible with CleverTap Android SDK 7.3.1
  and above.
- 'Important Note for CleverTap SDK v5.1.0+: Ensure you call CTHmsMessageHandler().createNotification
  on a background thread in onMessageReceived() of messaging service.'
- Always keep ApiKey and SecretKey confidential.
- Batch size should be provided in multiples of 23.
- Account ID, Account Passcode, and Account Token are required for authentication.
- By default, the optOut is set to False.
- By default, the useIP is set to False.
- Call OnUserLogin() only once per session to identify a new user.
- Use PushProfile() at any point to update a user’s profile without changing their
  identity.
- Ensure that the following metadata tags are added inside the <application> </application>
  tags of your AndroidManifest.xml
- In-app notifications are pop-ups that you can show to your users while they are
  in your application.
- CleverTap only supports String Data type for mapped property values.
- Payload must include at least one Identity, Email, or ObjectId.
- Events help you understand how your users interact with your app.
- CleverTap tracks certain common user events automatically.
- This document is not legal advice. It is provided for your information and convenience.
- CleverTap does not share data with any third parties.
- For CleverTap iOS SDK 3.10.0 and above, we have changed the endpoint from wzrkt.com
  to clevertap-prod.com.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- The CleverTap SDK version 3.4.0 and above allows your users to create App Inbox
  notifications.
- Uses OAuth2 with refresh token — requires setup of connected app in CleverTap.
- Missing or outdated native dependencies.
- Incorrect method signatures or plugin errors.
- Platform-specific issues (for example, iOS Framework not linked, Android service
  not registered).
- CleverTap does not enforce rate limits based on a specific time frame but supports
  concurrent request limits for its APIs.
- CleverTap has adopted the CORS standard for its APIs, enabling secure requests from
  different domains.
- If the status is success, there will be a count key with an int value of the count
  for the specified query.
- For more details on how to fetch API Key, refer to Obtain API Key in mParticle documentation.
errors:
- 'D8: Cannot fit requested classes in a single dex file (# methods: 79994 > 65536
  ; # fields: 68161 > 65536)'
- AuthenticationToken must be at least 16 characters
- Downloading push notification package failed
- Extracting push notification package failed
- Missing file in push notification package
- Missing image in push notification package
- Missing key in website.json
- Serialization of JSON in website.json failed
- Signature verification of push package failed
- Unable to create a notification bundle for push notification package
- Unable to generate ICNS file for push notification package
- Unable to parse webServiceURL
- Unable to save push notification package
- urlFormatString must have http or https scheme
- Verifying hashes in manifest.json failed
- Web Service API URL must be https
- webServiceURL must be equal to URL in call to requestPermission
- websitePushID must be equal to identifier in call to requestPermission
- x cannot be used as a format string for URLs
- 'Per-user redemption limit exceeded for rule-based coupon: Returns the coupon with
  the applicability as false.'
- 'Per-code redemption limit exceeded for rule-based coupon: Returns the specific
  coupon code with the applicability as false.'
- 'Per-user or per-code redemption limit exceeded for all users coupon: Returns the
  coupon with the applicability as false.'
- 'status: fail, Error: name, email ID,filename,creator and pre-signed url are mandatory'
- 'status: fail, Error: email id is either not in the right format or does not belong
  to a valid admin'
- 'status: fail, Error: New file referencing a previously used URL. Please change
  URL'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Concurrent requests limit exceeded.'
- '401 Unauthorized: Recheck Account ID or Passcode'
- 'VoIPCallStatus.CALLEE_MICROPHONE_PERMISSION_BLOCKED: Indicates that the call was
  declined because the microphone permission is blocked on the receiver''s end.'
- 'VoIPCallStatus.CALL_FAILED_DUE_TO_INTERNAL_ERROR: Identifies call failure cases.
  Possible reasons for the call failure could include bad internet connectivity, insufficient
  RAM storage, or SDK setup timeouts. Retrying the call can usually resolve most failures.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'No Notification Clicks tracked: When activity is not in backstack and foreground/background.'
- 'No Notification Clicks tracked: When activity is not in backstack and killed.'
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Ensure API key is valid.'
- '404 Not Found: Verify endpoint paths.'
- '400: Invalid Credentials'
- '403: Partner not whitelisted'
- '503, 504: Server Error'
- '404 Unregistered: Returned when a push notification request is sent to stale tokens.'
- identity is mandatory for redemption
- Invalid or missing type parameter
- 'Business Event Not Found: 400'
- '"when" has an incorrect value - null: 400'
- 'Property product_category missing: 400'
- 'Debit transactions exceed available active points: Not processed to prevent overdrafts
  in the wallet.'
- 'CHANNEL_UNSUBSCRIBED: This may occur in multi-process Android applications due
  to improper initialization of Firebase.'
- '401 Unauthorized: Check API keys and permissions.'
- '400 Bad Request: Ensure the request payload is correctly formatted.'
- 'IllegalStateException: Occurs while prompting the user with poor or bad network
  conditions on the call screen.'
- '400 Bad Request: Check account ID and token.'
- '500 Internal Server Error: Problem with CleverTap server.'
- 'Invalid identity: 400'
- 'APNS Device Token Does Not Match The Specified Topic: Check configurations.'
- 'APNS Unregistered: Device token inactive.'
- 'APNS Topic Disallowed: Check ''App Bundle ID''.'
- 'APNS Temporarily Blacklisted: Sending bad tokens.'
- 'APNS Failed Delivery: App uninstalled or too many notifications sent.'
- 'APNs Bad Device Token: Mismatch between APNs push mode on your app and CleverTap
  dashboard.'
- '5004: Throttle API calls or reduce frequency'
- 'EXC_BAD_ACCESS: Error that occurs when clicking Mute on the CallKit screen in debug
  mode'
- Unauthorized access from a non-test profile.
- '429 Too Many Requests: Exceeded concurrent request limit.'
- 'This target hasn''t been completed: fail'
- '400: Bad Request - Invalid parameter passed.'
- '401: Unauthorized - Invalid credentials or URL.'
- '403: Forbidden - Operation is not allowed.'
- '404: Not Found - The resource does not exist or cannot be found.'
- '405: Method Not Allowed - The server knows the request method but is not supported
  by the target resource.'
- '409: Conflict - Resource already exists.'
- '429: Too Many Requests - API Request limit exceeded.'
- '500: Internal Server Error - An error within the API.'
- '503: Service Unavailable - The system is unavailable. Try again later.'
- 509 - Event name mandatory
- 512 - Invalid event structure
- 513 - Raised a restricted system event
- 522 - Event properties limit exceeded
- 523 - Missing identity
- 524 - Data neither event nor profile
- 525 - Timestamp not in UNIX epoch format
- 526 - objectId invalid
- 528 - Discarded event is raised.
- 555 - Miscellaneous server error
- 514 - Gender invalid
- 515 - Email invalid
- 516 - Phone number invalid
- 517 - Employment status invalid
- 518 - Education status invalid
- 519 - Marital status invalid
- 520 - Age invalid
- 530 - Invalid ‘objectId’
- 531 - Invalid token data
- 532 - Token ‘id’ is not present
- 533 - Token ‘type’ is not present
- 534 - Token ‘type’ is not valid for ‘objectId’
- 535 - Invalid token data
- 'No data file found: The data file is not uploaded. Upload the data file again and
  create a new manifest file for it.'
- 'File couldn''t be read: The file is not in the expected format. Upload the file
  again with the correct format, that is, CSV for data files and manifest file for
  mapping.'
- 'Internal infra error: Upload the file again followed by a new manifest file.'
- 'Incorrect details in manifest file: This error file is emailed to you. Check the
  manifest file for incorrect details.'
- 'Atleast one of identity / fbId / gpId / objectId is mandatory under 1024 chars
  to identify the user: Check that a minimum of one ID is present.'
- '[Internal error] Error while importing data: This is an internal error. Try importing
  the data again.'
- 'Event name is mandatory: The event name is blank or the column name is not available.'
- 'Event name belongs to CleverTap restricted system events: Do not use the event
  names of the existing system events.'
- 'Cannot have more than 100 event properties: A maximum of 100 event properties is
  allowed. Check that the event properties do not exceed it.'
- 'Profile operation must be one of $add, $set, $remove, $delete: Add a valid profile
  operation.'
- Request still in progress, please retry later
- 'HTTP 429: Too many concurrent requests'
- 'Invalid ID or ID not set: CleverTap will NOT create a profile from the device.'
- No events will be logged against profiles with invalid IDs.
- 'Unauthorized access from a non-test profile: Double-check that the user is properly
  marked as a Test profile on the Dashboard.'
- 'Existing Draft of Another User: A draft of Variables created by a different user
  already exists.'
- Unauthorized access from a non-test profile. To address this, mark the profile as
  a test profile from the CleverTap dashboard.
- 'Error: Sync failed if another user profile has a draft.'
- CleverTap.h file not found
- 'INVALID_EVENT: Ensure the event name is correct.'
- 'EVENT_LIMIT_EXCEEDED: Reduce the number of events sent in a short period.'
- '21: "to" is a mandatory field'
- '73: respect_frequency_caps must be Boolean'
- '76: "tag_group" has to be string'
- '78: Invalid payload pls update and try again'
- '84: "Invalid recipients"'
- '89: Unexpected error, please try again'
- 'Invalid or incorrect `wallet_Id`: The specified Wallet ID is invalid or does not
  exist.'
- 'Missing required path parameter: The `PARAMETER_NAME` is a mandatory key.'
- 'Invalid `transactionType`: This error occurs when the `transactionType` key is
  invalid. It must be either `DEBIT` or `CREDIT`.'
- 'Missing mandatory key in the payload: `KEY_NAME` is required.'
- 'Incorrect data type for `points`: The `points` field must be numeric.'
- 'Negative points passed in the request: `points` must always be a positive value.'
- 'Debit points exceed the active points in the user''s wallet: The points to be debited
  cannot exceed the available balance in the user''s wallet.'
- 'Wrong field added in request body or mandatory fields not passed: A required field
  `KEY_NAME` is missing in the request body.'
- 'Coupon is expired: The coupon code has expired and is no longer valid.'
- 'Total coupon redemption limit exceeded: The total redemption limit for the coupon
  has been exceeded.'
- 'Per-user redemption limit exceeded: The per-user redemption limit for the coupon
  has been exceeded.'
- 'Daily/Weekly/Monthly redemption exceeded: The coupon''s daily, weekly, or monthly
  redemption limit has been exceeded.'
- 'Coupon not available for specific days or times: The coupon is not valid during
  the current day or time.'
- 'Coupon cart validation failed: The coupon cart validation failed based on specified
  conditions.'
- 'Coupon product validation failed: Product validation failed due to invalid conditions.'
- 'User property validation failed: User property validation failed based on specified
  conditions.'
- 'Selected items: No product property value matched: The selected item’s properties
  do not match the coupon requirements.'
- 'Applied coupon code is expired: The applied coupon code has expired.'
- 'Coupon code or ID missing in the request body: The coupon code or ID is missing
  or invalid in the request body.'
- 'Non-redeemed coupon is reverted: The coupon cannot be reverted as it was never
  redeemed.'
- 'Coupon code or ID is invalid: The provided coupon code or ID is invalid or not
  found.'
- 'Validation is applied on metadata properties, but the key is not passed in the
  payload: The required metadata key for validation is missing in the payload.'
- 'User is not logged in and is attempting to validate the campaign user coupon: The
  user must log in or sign up before redeeming the coupon code.'
- 'Validation for selected items failed: The discount validation for selected items
  has been failed.'
- 'OrderStatus contains wrong values: The order status provided is invalid; it should
  be one of pending, completed, or reverted.'
- 'Duplicate `orderId` passed: The provided `orderId` has already been used for a
  previous transaction.'
- 'Query parameter not passed: A required query parameter `query_param_key` is missing
  in the request.'
- 'Query parameter is wrong: The query parameter type must be either `redeemed` or
  `reverted`.'
- '`order` and `item` object not passed: Both `order` and `item` objects are required
  in the request body.'
- 'Mandatory keys in `item` or `order` object not passed: A mandatory key is missing
  from the `order` or `item` object.'
- '`order` and `item` objects passed, but mandatory keys have empty values: The mandatory
  key value in the `order` or `item` object cannot be empty.'
- '400: External Trigger feature is not enabled for your account.'
- '400: Invalid Campaign ID/IDs: All the campaign IDs listed are either not ready
  or are stopped or pending approval or lack type external trigger'
- '400: Campaign ID(s) are missing in the API request.'
- '400: Sorry!! We don''t allow more than 5 campaignIDs in one go :)'
- '400: The payload length exceeds the permissible limit of 100KB.'
- '400: to is a mandatory field.'
- '400: Incorrect payload: At least one of Identity/Email/ObjectId is required'
- '400: Invalid recipients.'
- '400: Exceeded_max_identities: Please limit the number of identities to 1000 or
  fewer'
- '400: Required JSON payload not present for these keys'
- '400: Profile not found.'
- '400: Unexpected error, please try again'
- '501: Unexpected error.'
- 'Profile not found: The user profile could not be located.'
- 'Profile lookup is not available at the moment: Access to user profile lookup is
  currently unavailable.'
- 'Blacklisted device: This device is blacklisted.'
- 'Given identity is not in device profile identities: The provided identity does
  not match any identities associated with the device.'
- 'Something happened. Contact the support: An unexpected error. Contact support for
  assistance.'
- '30001: Queue overflow'
- '30002: Account suspended'
- '30003: Unreachable destination handset'
- '30004: Message blocked'
- '30005: Unknown destination handset'
- '30006: Landline or unreachable carrier'
- '30007: Carrier violation'
- '30008: Unknown error'
- '30009: Missing segment'
- '30010: Message price exceeds the max price'
- '21614: Invalid Mobile Number'
- '21610: Unsubscribed recipient'
auth_info:
  mentioned_objects:
  - X-CleverTap-Account-Id
  - X-CleverTap-Passcode
  - CleverTap
  - RudderStack
  - Firebase
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  auth:
    type: apikey
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    X-CleverTap-Account-Id: ACCOUNT_ID
    X-CleverTap-Passcode: PASSCODE
    Content-Type: application/json
    Authorization: 'Basic {API Key: Secret Key}'
    debugLevel: '3'
    CleverTapProxyDomain: analytics.sdktesting.xyz
    CleverTapSpikyProxyDomain: spiky-analytics.sdktesting.xyz
  base_url: https://in1.api.clevertap.com
  paginator:
    type: none
    cursor_param: next_cursor
    page_size_param: pageSize
source_metadata: null
