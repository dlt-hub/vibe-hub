resources:
- name: messages
  endpoint:
    path: /messages.json
    method: POST
- name: messages
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: null
    params: {}
- name: glances
  endpoint:
    path: /glances.json
    method: POST
    data_selector: null
    params:
      token: required
      user: required
      device: optional
- name: groups
  endpoint:
    path: /1/groups.json
    method: GET
    data_selector: groups
- name: add_user_to_group
  endpoint:
    path: /1/groups/{YOUR_GROUP_KEY}/add_user.json
    method: POST
    data_selector: status
- name: remove_user_from_group
  endpoint:
    path: /1/groups/{YOUR_GROUP_KEY}/remove_user.json
    method: POST
    data_selector: status
- name: disable_user
  endpoint:
    path: /1/groups/{YOUR_GROUP_KEY}/disable_user.json
    method: POST
    data_selector: status
- name: enable_user
  endpoint:
    path: /1/groups/{YOUR_GROUP_KEY}/enable_user.json
    method: POST
    data_selector: status
- name: rename_group
  endpoint:
    path: /1/groups/{YOUR_GROUP_KEY}/rename.json
    method: POST
    data_selector: status
- name: messages
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: status
    params: {}
- name: migrate_subscription
  endpoint:
    path: /1/subscriptions/migrate.json
    method: POST
    data_selector: status
    params:
      token: your_application_api_token
      subscription: your_subscription_code
      user: user_pushover_key
- name: messages
  endpoint:
    path: /messages.json
    method: POST
    data_selector: ''
    params: {}
- name: assign_license
  endpoint:
    path: /licenses/assign.json
    method: POST
    data_selector: status
    params:
      token: required
      user: required unless email supplied
      email: required unless user supplied
      os: optional
- name: check_credits
  endpoint:
    path: /licenses.json
    method: GET
    data_selector: status
    params:
      token: YOUR_API_TOKEN
- name: sounds
  endpoint:
    path: /sounds.json
    method: GET
    data_selector: sounds
    params: {}
- name: sounds
  endpoint:
    path: /sounds.json
    method: GET
    data_selector: sounds
    params: {}
- name: add_user
  endpoint:
    path: /teams/add_user.json
    method: POST
    data_selector: ''
    params:
      token: required
      email: required
      name: optional
      password: optional
      instant: optional
      admin: optional
      group: optional
- name: remove_user
  endpoint:
    path: /teams/remove_user.json
    method: POST
    data_selector: ''
    params:
      token: required
      email: required
- name: send_message
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: response
    params: {}
- name: messages
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: null
    params: {}
- name: messages
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: response
    params: {}
- name: receipts
  endpoint:
    path: /1/receipts/{your_receipt}.json
    method: GET
    params:
      token: '{your_app_token}'
- name: cancel_receipt
  endpoint:
    path: /1/receipts/{your_receipt}/cancel.json
    method: POST
    params:
      token: '{your_app_token}'
- name: cancel_by_tag
  endpoint:
    path: /1/receipts/cancel_by_tag/{your_tag}.json
    method: POST
    params:
      token: '{your_app_token}'
- name: messages
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: response
    params: {}
- name: login
  endpoint:
    path: /users/login.json
    method: POST
    data_selector: status
    params: {}
- name: devices
  endpoint:
    path: /devices.json
    method: POST
    data_selector: status
    params: {}
- name: messages
  endpoint:
    path: /messages.json
    method: GET
    data_selector: messages
    params: {}
- name: update_highest_message
  endpoint:
    path: /devices/{device_id}/update_highest_message.json
    method: POST
    data_selector: status
    params: {}
- name: acknowledge_receipt
  endpoint:
    path: /receipts/{receipt_id}/acknowledge.json
    method: POST
    data_selector: status
    params: {}
- name: messages
  endpoint:
    path: /1/messages.json
    method: POST
    data_selector: ''
- name: messages
  endpoint:
    path: /messages.json
    method: POST
    data_selector: status
    params: {}
notes:
- API tokens are free and can be registered through the website.
- API tokens should be protected and not disclosed to other users or given to third-party
  services.
- Apple Watch notifications are unreliable
- Pushing data to the Apple Watch must be done infrequently, or WatchOS will stop
  processing updates due to battery concerns.
- It may take up to 10 minutes for your data to be reflected.
- User requests for additional features and improvements.
- HTTPS is required for all API calls.
- Application tokens are case-sensitive, 30 characters long.
- Messages are currently limited to 1024 4-byte UTF-8 characters.
- Once purchased, license credits are not refundable.
- An API call can be made to return the number of license credits remaining without
  assigning one.
- You must be 16 years or older to use this Service.
- Canceling your Service will result in the deletion of your Content.
- Calls to this API require a Team API Token for the token parameter, not an Application
  API Token.
- All request errors should be shown in the web dashboard so we can debug devices.
- Each application registered to send Pushover notifications may send 10,000 messages
  per month for free.
- To send multi-line notifications with line-breaks, send regular newline ("\n", ASCII
  10) characters in your message.
- Priority and URL parameters were attempted but did not work.
- When using curl in shell scripts, it may be easiest to insert literal line breaks
  in your file.
- Currently, pushover stores messages in plaintext format, but it seems they are encrypted
  prior to being sent to apple/android pus services.
- Each application must be registered to receive its own API token.
- Users must register their own application and enter their unique API token.
- On both Android and iOS, our in-app purchase for a license on that platform is 'non-consumable'
  which means it can only ever be purchased once (per Google Play or App Store account).
- You may see a temporary hold on your credit card after an in-app purchase despite
  the charge not going through. This temporary hold will be automatically lifted by
  your bank within a few days if the charge was not successful.
- If you are still having trouble making an in-app payment, you will need to contact
  Google or Apple for support.
- If the device is listed as Disabled, click its name and set it to Enabled if the
  option exists.
- Disable Allow Notifications, then re-enable Allow Notifications to generate a new
  push notification token.
- Sometimes notifications stop working because of a problem on the device, unrelated
  to any specific app.
- If your device is not receiving any push notifications from other apps, then there
  may be a problem with the device or your network.
- Common apps to check are social media apps that send notifications, such as Facebook,
  Instagram, Google Hangouts, Snapchat, Vine, etc.
- A session secret should not be re-used between devices.
- If the response has an HTTP status `412`, the user's account requires two-factor
  authentication to login.
- Attachments may not be coming through despite being under size limit
- Users must register their own application and enter the unique API token in their
  copy of the software.
errors:
- application token is invalid
- '429: Message limits have been reached.'
- '4xx: Invalid input or parameters.'
- '1: Success'
- 'status 0: application being out of available credits'
- 'status 0: Pushover user being invalid'
- '400: team token is invalid'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'status: 0 - Device name has already been taken'
- 412 - Two-factor authentication required
- '1: Token looking message, check token validity'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.pushover.net/1
  headers:
    Content-Type: application/x-www-form-urlencoded
    Content-type: application/x-www-form-urlencoded
    Accept: application/json
  auth:
    type: apikey
    location: query
    header_name: Authorization
    token_url: ''
source_metadata: null
