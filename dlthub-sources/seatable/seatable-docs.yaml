resources:
- name: external_links
  endpoint:
    path: /external-links/
    method: GET
- name: collection_tables
  endpoint:
    path: /api/v2.1/admin/collection-tables
    method: DELETE
- name: delete_invalid_notifications
  endpoint:
    path: /api/v2.1/admin/invalid-notification-rules/Delete
    method: DELETE
- name: departments
  endpoint:
    path: /api/v2.1/admin/address-book/groups
    method: GET
    params:
      parent_department_id: '-1'
- name: Delete Base External Link
  endpoint:
    path: /api/v2.1/admin/external-links/{external_link_token}
    method: DELETE
- name: automation_rule
  endpoint:
    path: /admin/automation-rules
    method: DELETE
- name: delete_plugin
  endpoint:
    path: /api/v2.1/admin/dtable-system-plugins/
    method: DELETE
- name: collection_tables
  endpoint:
    path: /collection-tables
    method: GET
    data_selector: ''
    params: {}
- name: notification_rule
  endpoint:
    path: /api/v2.1/admin/notification-rules/{notification_rule_id}
    method: DELETE
- name: audit_logs
  endpoint:
    path: /api/v2.1/admin/audit-logs/
    method: GET
    data_selector: ''
- name: update_plugin
  endpoint:
    path: /{plugin_id}
    method: PUT
- name: Delete Notification
  endpoint:
    path: /api/v2.1/admin/sys-user-notifications/{sys_notification_id}
    method: DELETE
- name: admin_users
  endpoint:
    path: /org//admin/users
    method: PUT
    data_selector: ''
    params: {}
- name: trash_bin
  endpoint:
    path: /api/v2.1/org//admin/trash-dtables/
    method: DELETE
- name: delete_group
  endpoint:
    path: /api/v2.1/org/{org_id}/admin/groups/{group_id}
    method: DELETE
- name: groups
  endpoint:
    path: /admin/address-book/groups/
    method: POST
- name: forms
  endpoint:
    path: /api/v2.1/admin/forms/
    method: GET
    data_selector: id
    params: {}
- name: external_apps_statistics
  endpoint:
    path: /admin/statistics/external-apps/
    method: GET
    params:
      is_user: 'true'
      month: ''
      page: ''
      per_page: ''
- name: favicon
  endpoint:
    path: /api/v2.1/admin/favicon/
    method: POST
- name: bases
  endpoint:
    path: /api/v2.1/org//admin/dtables/
    method: GET
    data_selector: id
    params: {}
- name: groups
  endpoint:
    path: /api/v2.1/org//admin/groups/
    method: GET
    data_selector: groups
    params: {}
- name: external_links
  endpoint:
    path: /admin/external-links/
    method: GET
    data_selector: records
- name: automation_rules
  endpoint:
    path: /List
    method: GET
- name: notification_rules
  endpoint:
    path: /admin/notification-rules/
    method: GET
    data_selector: id
    params: {}
- name: temporary_api_token
  endpoint:
    path: /workspace//dtable//temp-api-token/
    method: GET
- name: delete_rows
  endpoint:
    path: /api-gateway/api/v2/dtables//rows/
    method: DELETE
- name: metadata
  endpoint:
    path: /dtables//metadata/
    method: GET
    data_selector: ''
- name: email_sending_logs
  endpoint:
    path: /admin/email-sending-logs/
    method: GET
    data_selector: logs
    params: {}
- name: related_users
  endpoint:
    path: /dtables//related-users/
    method: GET
    data_selector: collaborators
    params: {}
- name: api_token
  endpoint:
    path: /workspace/{workspace_id}/dtable/{base_name}/api-tokens
    method: POST
- name: api_token
  endpoint:
    path: /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/api-tokens/{app_name}/Update
    method: PUT
- name: rows
  endpoint:
    path: /dtables//rows/
    method: PUT
- name: tables
  endpoint:
    path: /tables
    method: GET
    data_selector: tables
- name: views
  endpoint:
    path: /views
    method: GET
    data_selector: views
- name: abuse_report
  endpoint:
    path: /admin/abuse-reports/
    method: PUT
    data_selector: ''
    params: {}
- name: unlock_rows
  endpoint:
    path: /api-gateway/api/v2/dtables//unlock-rows/
    method: PUT
- name: tables
  endpoint:
    path: /dtables/tables/
    method: POST
- name: add_plugin
  endpoint:
    path: /admin/dtable-system-plugins/
    method: POST
- name: access_token
  endpoint:
    path: /external-link-tokens//access-token/
    method: GET
- name: rows
  endpoint:
    path: /dtables//rows/
    method: POST
- name: api_tokens
  endpoint:
    path: /workspace//dtable//api-tokens/
    method: GET
- name: api_tokens
  endpoint:
    path: /api/v2.1/workspace//dtable//api-tokens
    method: DELETE
- name: rows
  endpoint:
    path: /dtables//rows//
    method: GET
- name: scripts_tasks
  endpoint:
    path: /admin/scripts-tasks/List
    method: GET
    data_selector: records
- name: logo_upload
  endpoint:
    path: /admin/logo/
    method: POST
    data_selector: null
    params: {}
- name: disable_two_factor_auth
  endpoint:
    path: /api/v2.1/org//admin/users//two-factor-auth/
    method: DELETE
    data_selector: null
    params: {}
- name: shares
  endpoint:
    path: /api/v2.1/org//admin/dtables//shares
    method: GET
- name: add_notification
  endpoint:
    path: /admin/sys-user-notifications
    method: POST
- name: add_user
  endpoint:
    path: /api/v2.1/org//admin/users/
    method: POST
    data_selector: user
    params:
      with_workspace: false
- name: links
  endpoint:
    path: /dtables//links/
    method: POST
    data_selector: other_rows_ids_map
- name: trash_bases
  endpoint:
    path: /
    method: GET
- name: group
  endpoint:
    path: /org/{org_id}/admin/groups/{group_id}
    method: GET
    data_selector: ''
    params: {}
- name: file_access_logs
  endpoint:
    path: /admin/file-access-logs
    method: GET
    data_selector: returns a list of accessed files
    params: {}
- name: active_users
  endpoint:
    path: /admin/statistics/active-users
    method: GET
    data_selector: ''
- name: scripts_running
  endpoint:
    path: /admin/statistics/scripts-running/
    method: GET
    data_selector: total_run_count
    params: {}
- name: system_notifications
  endpoint:
    path: /
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: two_factor_auth
  endpoint:
    path: /api/v2.1/org//admin/users//two-factor-auth/
    method: PUT
- name: delete_base
  endpoint:
    path: /api/v2.1/org//admin/dtables/
    method: DELETE
- endpoint:
    path: /api/v2.1/org//admin/search-dtables/
    method: GET
- name: abuse_reports
  endpoint:
    path: /api/v2.1/admin/abuse-reports/
    method: GET
    data_selector: id
    params: {}
- name: delete_table
  endpoint:
    path: /api-gateway/api/v2/dtables/{base_uuid}/tables
    method: DELETE
- name: column_options
  endpoint:
    path: /api-gateway/api/v2/dtables//column-options/
    method: PUT
    data_selector: null
    params: {}
- name: add_archived_rows
  endpoint:
    path: /api-gateway/api/v2/dtables/{base_uuid}/add-archived-rows
    method: POST
- name: views
  endpoint:
    path: /dtables//views
    method: PUT
    data_selector: ''
    params: {}
- name: batch_append_columns
  endpoint:
    path: /dtables//batch-append-columns/
    method: POST
    data_selector: null
    params:
      table_name: required
      columns:
      - column_name: required
        column_type: required
        column_data: required if special column
- name: restore_operations
  endpoint:
    path: /api-gateway/api/v2/dtables//restore-operations/
    method: PUT
- name: notification
  endpoint:
    path: /dtables/{base_uuid}/notifications/{notification_id}/Mark
    method: PUT
- name: comments_within_days
  endpoint:
    path: /api/v2/dtables//comments-within-days/
    method: GET
    data_selector: ''
    params: {}
- name: snapshot
  endpoint:
    path: /snapshot/
    method: POST
- name: delete_base_asset
  endpoint:
    path: /api/v2.1/dtable/custom/app-asset-file
    method: DELETE
- name: admin_users
  endpoint:
    path: /admin/admin-users
    method: GET
    data_selector: records
    params: {}
- name: auto_link_task
  endpoint:
    path: /api-gateway/api/v2/dtables//auto-link-task/
    method: GET
- name: delete_view
  endpoint:
    path: /dtables/{base_uuid}/views/{view_name}
    method: DELETE
    data_selector: ''
    params: {}
- name: Base Asset
  endpoint:
    path: /api/v2.1/dtable/app-asset/
    method: DELETE
- name: Get User
  endpoint:
    path: /{user_id}/
    method: GET
- name: links
  endpoint:
    path: /dtables//links/
    method: PUT
- name: views
  endpoint:
    path: /dtables/{base_uuid}/views
    method: GET
    data_selector: ''
    params: {}
- name: columns
  endpoint:
    path: /columns/
    method: PUT
- name: unarchive
  endpoint:
    path: /dtables/{base_uuid}/unarchive
    method: POST
    data_selector: ''
    params: {}
- name: notifications
  endpoint:
    path: /dtables/{base_uuid}/notifications/
    method: PUT
- name: column_options
  endpoint:
    path: /api-gateway/api/v2/dtables//column-options/
    method: DELETE
    data_selector: ''
- name: activity_log
  endpoint:
    path: /dtables/{base_uuid}/operations
    method: GET
- name: app-asset-dir
  endpoint:
    path: /dtable/custom/app-asset-dir/
    method: GET
- name: update_user
  endpoint:
    path: /api/v2.1/admin/users/
    method: PUT
- name: import_users
  endpoint:
    path: /admin/import-users/
    method: POST
    data_selector: null
    params: {}
- name: delete_links
  endpoint:
    path: /api-gateway/api/v2/dtables//links/
    method: DELETE
- name: view_settings
  endpoint:
    path: /dtables/{base_uuid}/views/{view_name}
    method: GET
    data_selector: settings
    params: {}
- name: columns
  endpoint:
    path: /columns/
    method: DELETE
    data_selector: ''
    params: {}
- name: rename_table
  endpoint:
    path: /api-gateway/api/v2/dtables/tables/
    method: PUT
- name: columns
  endpoint:
    path: /dtables/{base_uuid}/columns
    method: GET
- name: comments_count
  endpoint:
    path: /api-gateway/api/v2/dtables//comments-count/
    method: GET
- name: app_upload_link
  endpoint:
    path: /dtable/app-upload-link/
    method: GET
- name: app_download_link
  endpoint:
    path: /dtable/custom/app-download-link
    method: GET
- name: reset_password
  endpoint:
    path: /reset-password
    method: PUT
    data_selector: ''
    params: {}
- name: query_links
  endpoint:
    path: /dtables//query-links/
    method: POST
    data_selector: ''
    params: {}
- name: duplicate_table
  endpoint:
    path: /dtables/tables/duplicate-table/
    method: POST
- name: columns
  endpoint:
    path: /dtables//columns/
    method: POST
    data_selector: null
    params: {}
- name: archive_view
  endpoint:
    path: /dtables//archive-view/
    method: POST
    data_selector: ''
    params: {}
- name: view
  endpoint:
    path: /api-gateway/api/v2/dtables//views/
    method: POST
    data_selector: name
- name: column_options
  endpoint:
    path: /api-gateway/api/v2/dtables//column-options/
    method: POST
- name: comments
  endpoint:
    path: /api-gateway/api/v2/dtables//comments/
    method: GET
- name: operation_logs
  endpoint:
    path: /api-gateway/api/v2/dtables//db-operations/
    method: GET
- name: app_download_link
  endpoint:
    path: /dtable/app-download-link/
    method: GET
    data_selector: ''
- name: send_toast_notification
  endpoint:
    path: /dtables/{base_uuid}/ui-toasts
    method: POST
    data_selector: ''
    params: {}
- name: custom_app_asset_file
  endpoint:
    path: /custom/app-asset-file/
    method: GET
- name: delete_user
  endpoint:
    path: /api/v2.1/admin/users/
    method: DELETE
- name: activities
  endpoint:
    path: /api-gateway/api/v2/dtables//activities/
    method: GET
- name: app_upload_link
  endpoint:
    path: /dtable/custom/app-upload-link/
    method: GET
- name: list_users
  endpoint:
    path: /admin/users/
    method: GET
- name: Delete Notifications
  endpoint:
    path: /Delete
    method: DELETE
    data_selector: ''
    params: {}
- name: attachment
  endpoint:
    path: /workspace/{workspace_id}/asset/{asset_id}
    method: POST
    data_selector: row
    params: {}
- name: Add New User
  endpoint:
    path: /api/v2.1/admin/users/
    method: post
- name: disable_two_factor_auth
  endpoint:
    path: /api2/two-factor-auth/
    method: DELETE
- name: trashed_bases
  endpoint:
    path: /
    method: GET
    data_selector: trashed_bases
    params: {}
- name: organizations
  endpoint:
    path: /admin/organizations/
    method: GET
    data_selector: teams
    params:
      role: ''
- name: users
  endpoint:
    path: /admin/organizations//users/
    method: GET
    data_selector: ''
    params: {}
- name: trash_dtables
  endpoint:
    path: /api/v2.1/admin/trash-dtables
    method: PUT
- name: organizations
  endpoint:
    path: /admin/organizations//dtables/
    method: GET
    data_selector: ''
    params: {}
- name: delete_team_user
  endpoint:
    path: /api/v2.1/admin/organizations/{org_id}/users/{user_id}
    method: DELETE
- name: user_storage
  endpoint:
    path: /admin/users//storage/
    method: GET
    data_selector: objects
    params: {}
- name: groups
  endpoint:
    path: /admin/groups/
    method: GET
    data_selector: ''
    params: {}
- name: shared_dtables
  endpoint:
    path: /admin/users/{user_id}/shared-dtables
    method: GET
- name: unset_password
  endpoint:
    path: /admin/dtable//unset-password/
    method: PUT
    data_selector: is_encrypted
- name: organizations_basic_info
  endpoint:
    path: /admin/organizations-basic-info/
    method: GET
- name: two_factor_auth
  endpoint:
    path: /api/v2.1/admin/users//two-factor-auth/
    method: PUT
- name: base
  endpoint:
    path: /api/v2.1/admin/dtable/{base_uuid}
    method: DELETE
- name: user
  endpoint:
    path: /admin/search-user/
    method: GET
    data_selector: ''
    params: {}
- name: dtable_notifications
  endpoint:
    path: /admin/dtable-notifications/
    method: GET
- name: groups
  endpoint:
    path: /admin/groups/{group_id}/
    method: DELETE
- name: user_bases
  endpoint:
    path: /admin/users/{user_id}/dtables
    method: GET
    data_selector: ''
- name: Create Group
  endpoint:
    path: /admin/groups/
    method: post
- name: team
  endpoint:
    path: /api/v2.1/admin/organizations/
    method: DELETE
- name: export_dtable
  endpoint:
    path: /dtables/{base_uuid}/synchronous-export/export-dtable
    method: GET
- name: group
  endpoint:
    path: /api/v2.1/admin/organizations//groups//
    method: DELETE
- name: groups
  endpoint:
    path: /admin/organizations/{org_id}/groups
    method: GET
    data_selector: ''
    params: {}
- name: organizations
  endpoint:
    path: /admin/organizations/
    method: GET
- name: List All Bases
  endpoint:
    path: /api/v2.1/admin/dtables/
    method: GET
- name: add_team
  endpoint:
    path: /api/v2.1/admin/organizations/
    method: POST
    data_selector: response
    params:
      admin_email: admin_email
      admin_name: admin_name
      password: password
      with_workspace: false
- name: users
  endpoint:
    path: /admin/organizations//users
    method: PUT
    data_selector: ''
    params: {}
- name: add_team_user
  endpoint:
    path: /api/v2.1/admin/organizations//users/
    method: POST
    data_selector: ''
    params: {}
- name: invalid_syncs
  endpoint:
    path: /admin/common-dataset/invalid-syncs/
    method: GET
    data_selector: ''
    params: {}
- name: periodical_syncs
  endpoint:
    path: /admin/common-dataset/periodical-syncs/
    method: GET
    data_selector: records
    params: {}
- name: delete_common_dataset_sync
  endpoint:
    path: /admin/common-dataset/sync/
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_view_external_link
  endpoint:
    path: /api/v2.1/admin/view-external-links/{view_external_link_token}
    method: DELETE
- name: delete_invalid_automation_rules
  endpoint:
    path: /admin/invalid-automation-rules/
    method: DELETE
    data_selector: ''
    params: {}
- name: common_datasets
  endpoint:
    path: /admin/common-datasets/
    method: GET
    data_selector: datasets
- name: department
  endpoint:
    path: /api/v2.1/admin/address-book/groups/{department_id}
    method: DELETE
- name: delete_form
  endpoint:
    path: /api/v2.1/admin/forms/
    method: DELETE
- name: invalid_notification_rules
  endpoint:
    path: /admin/invalid-notification-rules/
    method: GET
    data_selector: records
    params: {}
- name: list_plugins
  endpoint:
    path: /admin/dtable-system-plugins
    method: GET
    data_selector: plugins
    params: {}
- name: invalid_syncs
  endpoint:
    path: /admin/common-dataset/invalid-syncs/
    method: DELETE
    data_selector: ''
    params: {}
- name: view_external_links
  endpoint:
    path: /admin/view-external-links/
    method: GET
    data_selector: records
    params: {}
- name: invalid_automation_rules
  endpoint:
    path: /invalid-automation-rules/
    method: GET
    data_selector: ''
    params: {}
- name: registration_logs
  endpoint:
    path: /admin/registration-logs/
    method: GET
- name: plugins_install_count
  endpoint:
    path: /List plugins install count logs
    method: GET
    data_selector: ''
    params: {}
- name: external_links
  endpoint:
    path: /org//admin/external-links/
    method: GET
    data_selector: ''
- name: org_info
  endpoint:
    path: /org/admin/info/
    method: GET
    data_selector: basic_information
    params: {}
- name: auto_rules_statistics
  endpoint:
    path: /admin/statistics/auto-rules/
    method: GET
    data_selector: records
    params:
      is_user: 'true'
- name: system_info
  endpoint:
    path: /admin/sysinfo/
    method: GET
- name: set_password
  endpoint:
    path: /api/v2.1/org//admin/users//set-password/
    method: PUT
- name: move_group
  endpoint:
    path: /api/v2.1/groups/move-group/
    method: PUT
    data_selector: group_id
    params: {}
- name: delete_view_external_link
  endpoint:
    path: /admin/view-external-links/
    method: DELETE
    data_selector: null
    params: {}
- name: admin_logs
  endpoint:
    path: /admin/admin-logs
    method: GET
    data_selector: operation_log
    params: {}
- name: group_members
  endpoint:
    path: /org/{org_id}/admin/groups/{group_id}/members
    method: POST
    data_selector: ''
    params: {}
- name: invite_links
  endpoint:
    path: /api/v2.1/org//admin/invite-links/
    method: GET
- name: login_logs
  endpoint:
    path: /org/{org_id}/admin/login-logs
    method: GET
    data_selector: ''
    params: {}
- name: account_info
  endpoint:
    path: /account/info
    method: GET
- name: create_base
  endpoint:
    path: /api/v2.1/dtables/
    method: POST
- name: folder
  endpoint:
    path: /api/v2.1/workspace/folders
    method: DELETE
- name: groups
  endpoint:
    path: /api/v2.1/groups/
    method: GET
- name: groups_members
  endpoint:
    path: /groups//members/
    method: POST
- name: delete_base_asset
  endpoint:
    path: /dtable-asset/{base_uuid}
    method: DELETE
- name: list_all_bases
  endpoint:
    path: /
    method: GET
- name: admin_invite_link
  endpoint:
    path: /admin/invite-links
    method: PUT
- name: login_logs
  endpoint:
    path: /api/v2.1/org/{org_id}/admin/login-logs/{user_id}
    method: GET
    data_selector: ''
    params: {}
- name: repair
  endpoint:
    path: /api/v2.1/admin/dtable/repair/
    method: PUT
- name: delete_user
  endpoint:
    path: /api/v2.1/org//admin/users//
    method: DELETE
- name: admin_groups
  endpoint:
    path: /admin/groups/
    method: POST
    data_selector: ''
    params: {}
- name: group_members
  endpoint:
    path: /org/{org_id}/admin/groups/{group_id}/members
    method: GET
- name: organization_settings
  endpoint:
    path: /api/v2.1/org/admin/settings/
    method: GET
    data_selector: settings
    params: {}
- name: org_logo
  endpoint:
    path: /api/v2.1/org/{org_id}/admin/org-logo
    method: POST
- name: delete_external_link
  endpoint:
    path: /admin/external-links/{external_link_token}
    method: DELETE
- name: saml_config
  endpoint:
    path: /org//admin/saml-config/
    method: GET
    data_selector: configuration_details
    params: {}
- name: user_info
  endpoint:
    path: /user-list
    method: POST
- name: starred_dtables
  endpoint:
    path: /starred-dtables
    method: GET
    data_selector: ''
    params: {}
- name: trash_dtables
  endpoint:
    path: /api/v2.1/trash-dtables/
    method: DELETE
- name: search_group
  endpoint:
    path: /api/v2.1/search-group/
    method: GET
    data_selector: results
    params:
      q: ''
- name: dtable_copy
  endpoint:
    path: /dtable-copy/
    method: POST
    data_selector: ''
    params:
      src_workspace_id: ''
      dst_workspace_id: ''
- name: asset_exists
  endpoint:
    path: /api/v2.1/workspace//dtable//asset-exists/
    method: GET
    data_selector: is_exist
- name: invite_link
  endpoint:
    path: /api/v2.1/org//admin/invite-links/
    method: DELETE
- name: view_external_links
  endpoint:
    path: /org//admin/view-external-links/
    method: GET
    data_selector: records
    params: {}
- name: update_team_settings
  endpoint:
    path: Update
    method: PUT
- name: org_logo
  endpoint:
    path: /api/v2.1/org//admin/org-logo/
    method: DELETE
- name: user
  endpoint:
    path: /search-user/
    method: GET
    params:
      q: ''
- name: starred_dtables
  endpoint:
    path: /api/v2.1/starred-dtables
    method: DELETE
- name: restore_trashed_base
  endpoint:
    path: /trash-dtables
    method: PUT
- name: user_info
  endpoint:
    path: /user-common-info/{user_id}
    method: GET
- name: starred_dtables
  endpoint:
    path: /api/v2.1/starred-dtables
    method: POST
- name: trashed_bases
  endpoint:
    path: /api/v2.1/trash-dtables/
    method: GET
- name: group
  endpoint:
    path: /groups
    method: PUT
    data_selector: ''
    params: {}
- name: workspaces
  endpoint:
    path: /api/v2.1/workspaces/
    method: GET
    params:
      detail: 'true'
- name: user_avatar
  endpoint:
    path: /api/v2.1/user-avatar/
    method: POST
- name: workspace_password
  endpoint:
    path: /api/v2.1/workspace//dtable//password/
    method: PUT
    data_selector: null
    params: {}
- name: groups
  endpoint:
    path: /groups/{group_id}/
    method: GET
- name: search_member
  endpoint:
    path: /api/v2.1/groups//search-member/
    method: GET
    params:
      q: ''
- name: export_table_to_excel
  endpoint:
    path: /workspace/synchronous-export/export-table-to-excel/
    method: GET
- name: rename_asset
  endpoint:
    path: /api/v2.1/dtable-asset//rename/
    method: POST
    data_selector: ''
- name: file_access_logs
  endpoint:
    path: /file-access-logs
    method: GET
    data_selector: ''
    params: {}
- name: folder_item_moving
  endpoint:
    path: /api/v2.1/workspace/folder-item-moving
    method: POST
    params: {}
- name: Create Group
  endpoint:
    path: /api/v2.1/groups/
    method: post
- name: verify_domain
  endpoint:
    path: /admin/verify-domain/
    method: PUT
    data_selector: ''
    params: {}
- name: dtables
  endpoint:
    path: /user-admin-dtables/
    method: GET
    data_selector: dtables
- name: folder
  endpoint:
    path: /workspace/{workspace_id}/folders/{folder_id}
    method: PUT
    data_selector: ''
    params: {}
- name: trash_dtables
  endpoint:
    path: /api/v2.1/groups//trash-dtables/
    method: PUT
- name: groups_members
  endpoint:
    path: /api/v2.1/groups//members//
    method: DELETE
- name: saml_config
  endpoint:
    path: /api/v2.1/org//admin/saml-config/
    method: PUT
- name: items_search
  endpoint:
    path: /dtable/items-search/
    method: GET
    data_selector: ''
- name: trash_dtables
  endpoint:
    path: /groups//trash-dtables/
    method: GET
    data_selector: ''
    params: {}
- name: groups
  endpoint:
    path: /api/v2.1/groups/{group_id}/
    method: delete
- name: list_assets
  endpoint:
    path: /api/v2.1/dtable-asset/
    method: GET
    data_selector: is_file
- name: import_excel_csv
  endpoint:
    path: /workspace//synchronous-import/import-excel-csv-to-table/
    method: POST
    data_selector: file
    params: {}
- name: groups_members
  endpoint:
    path: /groups//members/
    method: GET
- name: dtable-copy
  endpoint:
    path: /dtable-external-link/dtable-copy
    method: POST
- name: import_excel_csv
  endpoint:
    path: /workspace/synchronous-import/import-excel-csv-to-base/
    method: POST
- name: convert_big_data_view_to_excel
  endpoint:
    path: /workspace/{workspace_id}/dtable/{base_name}/convert-big-data-view-to-excel
    method: GET
    data_selector: ''
    params: {}
- name: attachment_upload_link
  endpoint:
    path: /api/v2.1/workspace//dtable-asset-upload-link/
    method: GET
- name: update_table_via_excel_csv
  endpoint:
    path: /workspace/synchronous-import/update-table-via-excel-csv/
    method: POST
- name: share
  endpoint:
    path: /workspace//dtable//share/
    method: GET
    data_selector: ''
    params: {}
- name: group_shares
  endpoint:
    path: /api/v2.1/workspace//dtable//group-shares//
    method: PUT
- name: download_zip
  endpoint:
    path: /dtable/external-links//download-zip/
    method: GET
    data_selector: ''
    params: {}
- name: group_shared
  endpoint:
    path: /dtables/group-shared/
    method: GET
    data_selector: group_id
    params: {}
- name: group_view_share
  endpoint:
    path: /workspace/{workspace_id}/dtable/{base_name}/group-view-shares/{group_view_share_id}/Update
    method: GET
- name: user_view_shares
  endpoint:
    path: /workspace//dtable//user-view-shares
    method: PUT
- name: append_excel_csv
  endpoint:
    path: /append-excel-csv-to-table/
    method: POST
    data_selector: ''
    params: {}
- name: group_view_shares
  endpoint:
    path: /api/v2.1/workspace//dtable//group-view-shares
    method: DELETE
    data_selector: null
    params: {}
- name: related_users
  endpoint:
    path: /workspace//dtable//related-users/
    method: GET
    data_selector: collaborators
    params: {}
- name: group_shares
  endpoint:
    path: /workspace//dtable//group-shares/
    method: POST
- name: view_shares_user_shared
  endpoint:
    path: /dtables/view-shares-user-shared
    method: DELETE
- name: user_view_shares
  endpoint:
    path: /api/v2.1/workspace//dtable//user-view-shares
    method: DELETE
- name: synchronous_export
  endpoint:
    path: /workspace/synchronous-export/export-dtable/
    method: GET
- name: user_share
  endpoint:
    path: /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share
    method: POST
- name: batch_delete_assets
  endpoint:
    path: /api/v2.1/dtable-asset/batch-delete-assets
    method: DELETE
- name: export_view_to_excel
  endpoint:
    path: /synchronous-export/export-view-to-excel/
    method: GET
- name: share
  endpoint:
    path: /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/share
    method: DELETE
- name: group_view_shares
  endpoint:
    path: /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/group-view-shares/
    method: DELETE
- name: import_dtable
  endpoint:
    path: /workspace/import-dtable/
    method: POST
- name: shared_bases
  endpoint:
    path: /shared/
    method: GET
- name: group_share
  endpoint:
    path: /workspace/{workspace_id}/dtable/{base_name}/group-shares/{group_id}
    method: DELETE
- name: user_view_shares
  endpoint:
    path: /workspace//dtable//user-view-shares/
    method: GET
    data_selector: ''
- name: external_link
  endpoint:
    path: /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/
    method: POST
- name: share
  endpoint:
    path: /workspace//dtable//share/
    method: PUT
    data_selector: ''
    params: {}
- name: view_shares_group_shared
  endpoint:
    path: /dtables/view-shares-group-shared/
    method: GET
    data_selector: ''
- name: user_view_shares
  endpoint:
    path: /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/user-view-shares
    method: DELETE
- name: external_links
  endpoint:
    path: /workspace//dtable//view-external-links/
    method: GET
- name: group_view_shares
  endpoint:
    path: /workspace/dtable/group-view-shares/
    method: GET
- name: user_view_shares
  endpoint:
    path: /workspace//dtable//user-view-shares/
    method: POST
- name: delete_external_link
  endpoint:
    path: /api/v2.1/workspace/{workspace_id}/dtable/{base_name}/external-links/{external_link_token}
    method: DELETE
- name: external_links
  endpoint:
    path: /dtable/external-links/
    method: GET
notes:
- The `page_next` value indicates if there is a next page or not.
- Generate an Account-Token with your username and password.
- API-Token keeps valid forever for this specific base.
- Base-Token is only valid for three days.
- To avoid rate limits, check for unnecessary requests and slow down the frequency
  of cronjobs.
- The API-Token keeps valid forever for the specific base.
- The Base-Token is only valid for three days.
- For all account operations, you need an account token. You create this token with
  your credentials.
- For practically all base operations, you require a base token. You generate this
  from an API token.
- Max and default return limit is 10,000 rows.
- If no limit is specified, a maximum of 100 rows are returned.
- Link columns return a maximum of 50 records per row.
- Generate a Base-Token with an API-Token. The API-Token grants either read or write
  permission to this base, depending of the permission of the API-Token.
- Settings via API request have a higher priority over the settings in the config
  files.
- The caller needs to create a link column before calling the API
- 'Currently, there are a few restrictions: Formula and link-formula columns are not
  supported as matching columns; Single-select columns cannot be matched with text
  columns.'
- You can't append formula, link or link-formula columns using this endpoint. Use
  the Insert Column endpoint instead.
- Lock rows is an advanced feature in SeaTable and only available for enterprise subscriptions.
- 'This API request has the following preconditions: The table already exists (This
  API request cannot create a new table); The parent and child column already exist;
  The parent and child column already have options.'
- The upload link is only valid for a short time
- After that the upload link must be created again
- By default, it returns 10 records per row.
- Big data backend has to be activated in this base.
- The download link is only valid for a short time
- The download link is only valid for some hours. After that the download link must
  be created again.
- Use this request with caution!! Do not change your own role!
- If you change your role from 'default admin' to 'system admin' or 'audit admin',
  you won't be able to change it back because the 'Users' page is gone.
- If you already did that, add another super user, login as that super user and change
  your role back. Unfortunately, you cannot do this with the API.
- As a system administrator, you can only see the names and size of these objects,
  but cannot access the data saved in them.
- with_workspace should be set to true if you want your new user to acquire a workspace_id
  immediately after adding them.
- Both parameters `new_owner` and `new_group_name` are optional.
- Automation rules statistics before September 2021 could not be correctly summarized
  with this call.
- For the source workspace, you at least have to have the read permission of the base;
  for the source workspace, you must have write permission.
- Both parameters 'owner' and 'name' are optional in the request body.
- 'Entering current owner''s ID will result in an error: ''User xxx is already group
  owner''.'
- 'Entering the current group name will result in an error: ''There is already a group
  with that name''.'
- This feature is disabled on cloud.seatable.io.
- If you would like to change your email address in a self-hosted instance, contact
  your system administrator to check if this feature is activated.
- You will get a permission error if you are not the owner or admin of this group.
- Password protected external links are not supported yet.
errors:
- 'HTTP 429 Too Many Requests: Indicates that too many requests were sent in a given
  amount of time.'
- '401 Unauthorized: Recheck your credentials or API-Token.'
- '400 - Bad Request: The request was unacceptable, often due to missing a required
  parameter.'
- '401 - Unauthorized: No valid token provided or wrong format of the authorization
  header.'
- '402 - Request Failed: The parameters were valid but the request failed.'
- '403 - Forbidden: The provided token key doesn''t have permissions to perform the
  request.'
- '404 - Not Found: The requested resource doesn''t exist.'
- '429 - Too Many Requests: Too many requests hit the API too quickly. We recommend
  an exponential backoff of your requests.'
- '500, 502, 503, 504 - Server Errors: Something went wrong on SeaTable''s end.'
- User xxx is already group owner
- There is already a group with that name
auth_info:
  mentioned_objects: []
client:
  base_url: https://{server}/api/v2.1/workspace/
  auth:
    type: Bearer
    location: header
    header_name: Authorization
  resources:
  - name: login_logs
    endpoint:
      path: /List
      method: GET
  - name: department
    endpoint:
      path: /{department_id}
      method: GET
      data_selector: information
  - name: admin_groups_members
    endpoint:
      path: /org//admin/groups//members
      method: DELETE
  - name: daily_active_users
    endpoint:
      path: /daily-active-users
      method: GET
  - name: comment
    endpoint:
      path: /dtables/{base_uuid}/comments/{comment_id}
      method: DELETE
  - name: notifications
    endpoint:
      path: /notifications
      method: GET
  - name: comment
    endpoint:
      path: /dtables/{base_uuid}/comments/{comment_id}
      method: GET
      data_selector: ''
      params: {}
  - name: search_user_by_org_id
    endpoint:
      path: /search-user-by-org-id
      method: GET
  - name: groups
    endpoint:
      path: /org//admin/groups/
      method: PUT
      data_selector: ''
      params: {}
  - name: dtable_recent_asset
    endpoint:
      path: /dtable-recent-asset/
      method: GET
  - name: folder
    endpoint:
      path: /workspace/folders/
      method: POST
  - name: view_shares_user
    endpoint:
      path: /dtables/view-shares-user
      method: GET
  - name: group_shares
    endpoint:
      path: /workspace/{workspace_id}/dtable/{base_name}/group-shares
      method: GET
      data_selector: ''
      params: {}
  headers:
    Authorization: Bearer {{Account-Token, API-Token or Base-Token}}
    Accept: application/json
    Content-Type: application/json
  paginator:
    type: offset
    page_size_param: limit
    default_page_size: 10
source_metadata: null
