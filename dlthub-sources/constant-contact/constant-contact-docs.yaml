resources:
- name: contact_delete
  endpoint:
    path: /activities/contact_delete
    method: POST
- name: activity_status
  endpoint:
    path: /v3/activities/{activity_id}
    method: GET
- name: contact_lists
  endpoint:
    path: /contact_lists
    method: GET
- name: single_contact_list
  endpoint:
    path: /contact_lists/{list_id}
    method: GET
- name: add_contact_to_lists
  endpoint:
    path: /contacts
    method: POST
- name: update_contact
  endpoint:
    path: /contacts/contact_id
    method: PUT
- name: add_large_number_of_contacts
  endpoint:
    path: /activities/add_list_memberships
    method: POST
- name: contacts_file_import
  endpoint:
    path: /activities/contacts_file_import
    method: POST
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
- name: update_list
  endpoint:
    path: /contact_lists/{list_id}
    method: PUT
- name: delete_list
  endpoint:
    path: /contact_lists/{list_id}
    method: DELETE
- name: review_members_of_list
  endpoint:
    path: /contacts?lists={list_id1}
    method: GET
- name: webhook_subscriptions
  endpoint:
    path: /partner/webhooks/subscriptions
    method: GET
    data_selector: records
- name: sms_campaign_summaries
  endpoint:
    path: /v3/reports/summary_reports/sms_campaign_summaries
    method: GET
    params:
      limit: '22'
      start_at: '2022-01-27T21:56:37.011Z'
      end_at: '2022-06-22T21:56:37.011Z'
- name: emails
  endpoint:
    path: /v3/emails
    method: POST
    data_selector: ''
    params: {}
- name: email_campaign_activity
  endpoint:
    path: /v3/emails/activities/{campaign_activity_id}/schedules
    method: DELETE
- name: sms_engagement_history
  endpoint:
    path: /contacts/sms_engagement_history/{contact_id}
    method: GET
    data_selector: records
    params: {}
- name: Contact
  endpoint:
    path: /contacts/contact_id_xrefs
    method: GET
    data_selector: response
    params:
      sequence_ids: ''
- name: List
  endpoint:
    path: /contact_lists/list_id_xrefs
    method: GET
    data_selector: response
    params:
      sequence_ids: ''
- name: Emails
  endpoint:
    path: /emails/campaign_id_xrefs
    method: GET
    data_selector: response
    params:
      v2_email_campaign_ids: ''
- name: activity_summary
  endpoint:
    path: /activity_summary
    method: GET
    params:
      contact_id: UUID
      start: ISO 8601 format
      end: ISO 8601 format
- name: activity_details
  endpoint:
    path: /activity_details
    method: GET
    params:
      tracking_activities_list: comma separated list of activity types
- name: open_click_rates
  endpoint:
    path: /open_click_rates
    method: GET
    params:
      start: ISO 8601 format
      end: ISO 8601 format
- name: email_did_not_opens
  endpoint:
    path: /v3/reports/email_reports/{campaign_activity_id}/tracking/didnotopens
    method: GET
    data_selector: tracking_activities
    params:
      campaign_activity_id: '{campaign_activity_id}'
      limit: optional
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: campaigns
    params: {}
- name: campaign_details
  endpoint:
    path: /emails/{campaign_id}
    method: GET
    data_selector: campaigns
    params: {}
- name: billing_tier_upgrade
  endpoint:
    path: /v3/partner/accounts/{account_id}/plan
    method: POST
    data_selector: url
    params:
      event_type: tier.increase
- name: billing_tier_downgrade
  endpoint:
    path: /v3/partner/accounts/{account_id}/plan
    method: POST
    data_selector: url
    params:
      event_type: tier.decrease
- name: account_cancelled
  endpoint:
    path: /v3/partner/accounts/{account_id}/plan
    method: POST
    data_selector: url
    params:
      event_type: account.cancel
- name: account_disabled
  endpoint:
    path: /v3/partner/accounts/{account_id}/plan
    method: POST
    data_selector: url
    params:
      event_type: account.disable
- name: email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
    params:
      include: physical_address_in_footer,permalink_url,html_content
- name: custom_field
  endpoint:
    path: /custom_fields
    method: GET
    data_selector: custom_fields
    params: {}
- name: email_clicks
  endpoint:
    path: /v3/reports/email_reports/{campaign_activity_id}/tracking/clicks
    method: GET
    data_selector: tracking_activities
    params:
      url_id: ''
      limit: ''
- name: unique_contact_clicks
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_clicks
    method: GET
    data_selector: tracking_activities
    params:
      contacts_filter: optional
      limit: optional
- name: segment
  endpoint:
    path: /v3/segments/{segment_id}
    method: GET
    data_selector: response
    params: {}
- name: email_optouts_report
  endpoint:
    path: /v3/reports/email_reports/{campaign_activity_id}/tracking/optouts
    method: GET
    data_selector: tracking_activities
    params: {}
- name: ab_test_deletion
  endpoint:
    path: /emails/activities/{campaign_activity_id}/abtest
    method: DELETE
    params: {}
- name: campaign_id_xrefs
  endpoint:
    path: /v3/emails/campaign_id_xrefs
    method: GET
    params:
      v2_email_campaign_ids: 1100560565512,1100560665902
- name: custom_field
  endpoint:
    path: /contact_custom_fields/{custom_field_id}
    method: DELETE
- name: webhook_subscription
  endpoint:
    path: /partner/webhooks/subscriptions/{topic_id}
    method: DELETE
- name: accounts
  endpoint:
    path: /partner/accounts
    method: GET
- name: create_account
  endpoint:
    path: /partner/accounts
    method: POST
- name: billing_plan
  endpoint:
    path: /partner/accounts/{encoded_account_id}/plan
    method: GET
- name: update_billing_plan
  endpoint:
    path: /partner/accounts/{encoded_account_id}/plan
    method: PUT
- name: cancel_billing_plan
  endpoint:
    path: /partner/accounts/{encoded_account_id}/status/cancel
    method: PUT
- name: sync_account
  endpoint:
    path: /partner/accounts/{encoded_account_id}/account_operations/sync
    method: POST
- name: create_user_sso
  endpoint:
    path: /partner/accounts/{encoded_account_id}/users/sso
    method: POST
- name: activity_details
  endpoint:
    path: /reports/contact_reports/{contact_id}/activity_details
    method: GET
    data_selector: tracking_activities
    params:
      tracking_activity_type: ''
      tracking_activities_list: ''
      include_campaign_activity_names: 'true'
      limit: '100'
- name: contact_lists
  endpoint:
    path: /lists
    method: GET
    data_selector: records
    params:
      include_list_id: 'true'
- name: cross_reference_list_ids
  endpoint:
    path: /contact_lists/list_id_xrefs
    method: GET
    data_selector: records
    params:
      sequence_ids: sequence_number1,sequence_number2,sequence_number3,sequence_number4
- name: account_summary
  endpoint:
    path: /account/summary
    method: PUT
- name: confirmed_emails
  endpoint:
    path: /account/emails
    method: GET
    params:
      confirm_status: CONFIRMED
- name: create_tag
  endpoint:
    path: /contact_tags
    method: POST
    data_selector: ''
    params: {}
- name: get_all_tags
  endpoint:
    path: /contact_tags
    method: GET
    data_selector: ''
    params: {}
- name: get_specific_tag
  endpoint:
    path: /contact_tags/{tag_id}
    method: GET
    data_selector: ''
    params: {}
- name: update_tag
  endpoint:
    path: /contact_tags/{tag_id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_tag
  endpoint:
    path: /contact_tags/{tag_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: open_and_click_rates
  endpoint:
    path: /v3/reports/contact_reports/{contact_id}/open_and_click_rates
    method: GET
    params:
      start: '2018-01-01T00:00:00.000Z'
      end: '2018-08-09T00:00:00.000Z'
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: _links.next.href
- name: contact_list
  endpoint:
    path: /contact_lists/{list_id}
    method: GET
    data_selector: records
- name: unique_contact_updates
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_updates
    method: GET
    data_selector: tracking_activities
    params:
      limit: 500
- name: email_opens_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/opens
    method: GET
    data_selector: tracking_activities
    params:
      campaign_activity_id: ''
      limit: ''
- name: email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
    data_selector: ''
    params: {}
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: segments
    params:
      limit: '3'
- name: email_forwards_report
  endpoint:
    path: /v3/reports/email_reports/{campaign_activity_id}/tracking/forwards
    method: GET
    data_selector: tracking_activities
    params:
      campaign_activity_id: '{campaign_activity_id}'
      limit: optional
- name: email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
    data_selector: status
    params:
      campaign_activity_id: '{campaign_activity_id}'
- name: add_user_sso
  endpoint:
    path: /{encoded_account_id}/users/sso
    method: POST
    data_selector: null
    params: {}
- name: schedule_email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}/schedules
    method: POST
    data_selector: scheduled_date
    params: {}
- name: contacts_taggings_remove
  endpoint:
    path: /activities/contacts_taggings_remove
    method: POST
- name: email_campaign_summaries
  endpoint:
    path: /reports/summary_reports/email_campaign_summaries
    method: GET
    params:
      limit: '1'
- name: email_campaign
  endpoint:
    path: /emails/{campaign_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: results
    params:
      include_contact_id: 'true'
- name: contacts_id_xrefs
  endpoint:
    path: /contacts/contacts_id_xrefs
    method: GET
    data_selector: results
    params:
      sequence_ids: sequence_number1,sequence_number2,sequence_number3,sequence_number4
- name: contact_custom_fields
  endpoint:
    path: /contact_custom_fields
    method: GET
    data_selector: records
    params: {}
- name: individual_custom_field
  endpoint:
    path: /contact_custom_fields/{custom_field_id}
    method: GET
    data_selector: records
    params: {}
- name: send_history
  endpoint:
    path: /emails/activities/{campaign_activity_id}/send_history
    method: GET
    data_selector: send_history
    params:
      campaign_activity_id: ''
- name: email_bounces
  endpoint:
    path: /v3/reports/email_reports/{campaign_activity_id}/tracking/bounces
    method: GET
    data_selector: tracking_activities
    params: {}
- name: create_single_contact
  endpoint:
    path: /contacts
    method: POST
- name: create_or_update_contact
  endpoint:
    path: /contacts/sign_up_form
    method: POST
- name: create_segment
  endpoint:
    path: /segments
    method: POST
- name: get_segment_contact_results
  endpoint:
    path: /contacts/
    method: GET
    params:
      segment_id: ''
- name: add_segment_to_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: PUT
- name: send_email_campaign_activity
  endpoint:
    path: /emails/activities
    method: POST
- name: segments
  endpoint:
    path: /segments
    method: POST
    data_selector: segment
    params: {}
- name: segment_details
  endpoint:
    path: /segments/{segment_id}
    method: GET
    data_selector: segment
    params: {}
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
- name: campaign_activity_details
  endpoint:
    path: /reports/contact_reports/{contact_id}/activity_details
    method: GET
- name: contact_lists
  endpoint:
    path: /contacts_lists
    method: GET
- name: partner_accounts
  endpoint:
    path: /partner/accounts
    method: GET
- name: contact_tags
  endpoint:
    path: /contact_tags/{tag_id}
    method: GET
- name: all_contact_tags
  endpoint:
    path: /contact_tags
    method: GET
- name: create_contact_tag
  endpoint:
    path: /contact_tags
    method: POST
- name: rename_contact_tag
  endpoint:
    path: /contact_tags/{tag_id}
    method: PUT
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sms_engagement_history
  endpoint:
    path: /contacts/sms_engagement_history/{contact_id}
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    params:
      segment_id: ''
      tags: ''
      includes: taggings
      include_count: true
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    params:
      fields: contact_id
- name: contact
  endpoint:
    path: /contact/{contact_id}
    method:
    - GET
    - PUT
    - POST
    params:
      tagging: ''
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
    params: {}
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
    data_selector: records
    params: {}
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
    params: {}
- name: contact_tag
  endpoint:
    path: /contact_tags/{tag_id}
    method: GET
- name: all_contact_tags
  endpoint:
    path: /contact_tags
    method: GET
- name: create_contact_tag
  endpoint:
    path: /contact_tags
    method: POST
- name: rename_contact_tag
  endpoint:
    path: /contact_tags/{tag_id}
    method: PUT
- name: partner_accounts
  endpoint:
    path: /partner/accounts
    method: GET
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
- name: create_account
  endpoint:
    path: /partner/accounts
    method: POST
- name: summary_reports
  endpoint:
    path: /reports/summary_reports/email_campaign_summaries
    method: GET
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
    params: {}
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
    data_selector: records
    params: {}
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
    params: {}
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
    params: {}
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
    data_selector: records
    params: {}
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
    params: {}
- name: contact_sms_engagement_history
  endpoint:
    path: /contacts/sms_engagement_history/{contact_id}
    method: GET
    data_selector: records
    params: {}
- name: partner_accounts
  endpoint:
    path: /partner/accounts
    method: GET
- name: segments
  endpoint:
    path: /segments
    method: POST
- name: get_segments
  endpoint:
    path: /segments
    method: GET
- name: segment_details
  endpoint:
    path: /segments/{segment_id}
    method: GET
- name: delete_segment
  endpoint:
    path: /segments/{segment_id}
    method: DELETE
- name: update_segment
  endpoint:
    path: /segments/{segment_id}
    method: PUT
- name: rename_segment
  endpoint:
    path: /segments/{segment_id}/name
    method: PATCH
- name: emails
  endpoint:
    path: /emails
    method: POST
- name: get_emails
  endpoint:
    path: /emails
    method: GET
- name: email_campaign
  endpoint:
    path: /emails/{campaign_id}
    method: GET
- name: email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
- name: campaign_id_xrefs
  endpoint:
    path: /emails/campaign_id_xrefs
    method: GET
- name: rename_email_campaign
  endpoint:
    path: /emails
    method: PATCH
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
- name: token_info
  endpoint:
    path: /token_info
    method: POST
- name: account_emails
  endpoint:
    path: /account/emails
    method: POST
- name: contacts_sign_up_form
  endpoint:
    path: /contacts/sign_up_form
    method: POST
- name: email_reports_optouts
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/optouts
    method: GET
- name: email_reports_unique_opens
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/unique_opens
    method: GET
- name: email_reports_didnotopens
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/didnotopens
    method: GET
- name: email_reports_forwards
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/forwards
    method: GET
- name: email_reports_bounces
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/bounces
    method: GET
- name: emails
  endpoint:
    path: /emails
    method: POST
- name: email_campaigns
  endpoint:
    path: /emails
    method: GET
- name: email_campaign
  endpoint:
    path: /emails/{campaign_id}
    method: GET
- name: email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
- name: campaign_id_xrefs
  endpoint:
    path: /emails/campaign_id_xrefs
    method: GET
- name: rename_email_campaign
  endpoint:
    path: /emails
    method: PATCH
- name: contact_export
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
    params: {}
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: sms_campaign_summary
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
    params: {}
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
    params: {}
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
    data_selector: records
    params: {}
- name: sms_campaign_summaries
  endpoint:
    path: /reports/summary_reports/sms_campaign_summaries
    method: GET
    data_selector: records
    params: {}
- name: update_email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: PUT
- name: schedule_email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}/schedules
    method: POST
- name: get_schedule_email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}/schedules
    method: GET
- name: delete_schedule_email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}/schedules
    method: DELETE
- name: get_user_privileges
  endpoint:
    path: /account/user/privileges
    method: GET
- name: get_account_summary
  endpoint:
    path: /account/summary
    method: GET
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: records
    params: {}
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: results
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: results
    params: {}
- name: emails
  endpoint:
    path: /emails
    method: POST
- name: emails_collection
  endpoint:
    path: /emails
    method: GET
- name: email_campaign
  endpoint:
    path: /emails/{campaign_id}
    method: GET
- name: email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
- name: campaign_id_xrefs
  endpoint:
    path: /emails/campaign_id_xrefs
    method: GET
- name: rename_email_campaign
  endpoint:
    path: /emails
    method: PATCH
- name: contacts
  endpoint:
    path: /contacts/{contact_id}
    method: PUT
- name: email_campaigns
  endpoint:
    path: /emails
    method: GET
- name: email_campaign_details
  endpoint:
    path: /emails/{campaign_id}
    method: GET
- name: create_email_campaign
  endpoint:
    path: /emails
    method: POST
- name: delete_email_campaign
  endpoint:
    path: /emails/{campaign_id}
    method: DELETE
- name: get_email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
- name: schedule_email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}/schedules
    method: POST
- name: email_campaign_activity_preview
  endpoint:
    path: /emails/activities/{campaign_activity_id}/previews
    method: GET
    params:
      campaign_activity_id: ''
- name: email_campaign_activity_preview
  endpoint:
    path: /emails/activities/{campaign_activity_id}/previews
    method: GET
    data_selector: preview_html_content
    params: {}
- name: contacts_taggings_add
  endpoint:
    path: /v3/activities/contacts_taggings_add
    method: POST
- name: segments
  endpoint:
    path: /segments/{segment_id}/name
    method: PATCH
    data_selector: name
    params: {}
- name: test_email
  endpoint:
    path: /v3/emails/activities/{campaign_activity_id}/tests
    method: POST
    data_selector: null
    params: {}
- name: contacts
  endpoint:
    path: /contacts/{contact_id}
    method: GET
    data_selector: contacts
    params:
      include: street_addresses
- name: contact
  endpoint:
    path: /contacts/{contact_id}
    method: GET
    params:
      include: list_memberships,taggings,notes
- name: billing_plan
  endpoint:
    path: /partner/accounts/{encoded_account_id}/plan
    method: PUT
    data_selector: ''
    params: {}
- name: segment
  endpoint:
    path: /segments/{segment_id}
    method: PUT
- name: non_opener_resends
  endpoint:
    path: /emails/activities/{campaign_activity_id}/non_opener_resends/{resend_request_id}
    method: DELETE
    params: {}
- name: custom_fields_delete
  endpoint:
    path: /activities/custom_fields_delete
    method: POST
    data_selector: activity_id
    params: {}
- name: activity_status
  endpoint:
    path: /activities/{activity_id}
    method: GET
    data_selector: state
    params: {}
- name: contacts_counts
  endpoint:
    path: /contacts/counts
    method: GET
    params:
      include: new_subscriber
- name: user_privileges
  endpoint:
    path: /v3/account/user/privileges
    method: GET
    data_selector: ''
    params: {}
- name: email_campaign_schedule
  endpoint:
    path: /v3/emails/activities/{campaign_activity_id}/schedules
    method: GET
    data_selector: scheduled_date
    params:
      campaign_activity_id: ''
- name: user_privileges
  endpoint:
    path: /account/user/privileges
    method: GET
- name: account_summary
  endpoint:
    path: /account/summary
    method: GET
- name: update_account_summary
  endpoint:
    path: /account/summary
    method: PUT
- name: physical_address
  endpoint:
    path: /account/summary/physical_address
    method: GET
- name: update_physical_address
  endpoint:
    path: /account/summary/physical_address
    method: PUT
- name: add_physical_address
  endpoint:
    path: /account/summary/physical_address
    method: POST
- name: add_account_email
  endpoint:
    path: /account/emails
    method: POST
- name: collection_of_account_emails
  endpoint:
    path: /account/emails
    method: GET
- name: email_sends_report
  endpoint:
    path: /v3/reports/email_reports/{campaign_activity_id}/tracking/sends
    method: GET
    data_selector: tracking_activities
    params:
      limit: '2'
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params:
      status: deleted
      include: list_memberships
- name: delete_contact
  endpoint:
    path: /contacts/{contact_id}
    method: DELETE
    data_selector: null
    params: {}
- name: restore_contact
  endpoint:
    path: /contacts/{contact_id}
    method: PUT
    data_selector: null
    params: {}
- name: account_emails
  endpoint:
    path: /v3/account/emails
    method: POST
    data_selector: ''
    params:
      email_address: required
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: contact
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: activities
- name: activity
  endpoint:
    path: /activities/{activity_id}
    method: GET
    data_selector: activity
- name: unsubscribed_contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params:
      status: unsubscribed
- name: resubscribe_contact
  endpoint:
    path: /contacts/resubscribe/{contact_id}
    method: PUT
- name: update_contact
  endpoint:
    path: /contacts/{contact_id}
    method: PUT
- name: account_emails
  endpoint:
    path: /v3/account/emails
    method: GET
    params:
      confirm_status: CONFIRMED
- name: sign_up_form
  endpoint:
    path: /contacts/sign_up_form
    method: POST
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
- name: get_contact_export
  endpoint:
    path: /contact_exports/{file_export_id}
    method: GET
    headers:
      Accept: text/csv
      Content-Type: application/json
      Cache-Control: no-cache
- name: cancel_client_account
  endpoint:
    path: /partner/accounts/{encoded_account_id}/status/cancel
    method: PUT
    data_selector: null
    params: {}
- name: get_canceled_client_accounts
  endpoint:
    path: /partner/accounts
    method: GET
    data_selector: null
    params: {}
- name: reactivate_client_account
  endpoint:
    path: /partner/accounts/{encoded_account_id}/plan
    method: PUT
    data_selector: null
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: POST
- name: contact_counts
  endpoint:
    path: /contacts/counts
    method: GET
- name: sms_engagement_history
  endpoint:
    path: /contacts/sms_engagement_history/{contact_id}
    method: GET
- name: delete_contact_list
  endpoint:
    path: /v3/contact_lists/{list_id}
    method: DELETE
- name: track_activity_status
  endpoint:
    path: /v3/activities/{activity_id}
    method: GET
- name: contact_lists
  endpoint:
    path: /contact_lists
    method: POST
- name: add_list_memberships
  endpoint:
    path: /activities/add_list_memberships
    method: POST
- name: contacts_file_import
  endpoint:
    path: /activities/contacts_file_import
    method: POST
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
- name: campaign
  endpoint:
    path: /v3/emails/{campaign_id}
    method: GET
    params:
      campaign_id: ''
- name: campaign_list
  endpoint:
    path: /v3/emails
    method: GET
    params: {}
- name: account_operations_sync
  endpoint:
    path: /partner/accounts/{encoded_account_id}/account_operations/sync
    method: POST
- name: contact_opens
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_contact_opens
    method: GET
    data_selector: tracking_activities
    params:
      limit: '500'
- name: non_opener_resends
  endpoint:
    path: /emails/activities/{campaign_activity_id}/non_opener_resends
    method: POST
    data_selector: '[]'
    params: {}
- name: remove_list_memberships
  endpoint:
    path: /activities/remove_list_memberships
    method: POST
- name: activity_status
  endpoint:
    path: /activities/{activity_id}
    method: GET
- name: create_ab_test
  endpoint:
    path: /emails/activities/{campaign_activity_id}/abtest
    method: POST
- name: get_ab_test_details
  endpoint:
    path: /emails/activities/{campaign_activity_id}/abtest
    method: GET
- name: delete_ab_test
  endpoint:
    path: /emails/activities/{campaign_activity_id}/abtest
    method: DELETE
- name: schedule_ab_test_email
  endpoint:
    path: /emails/activities/{campaign_activity_id}/schedules
    method: POST
- name: contact_tag
  endpoint:
    path: /contact_tags
    method: POST
    data_selector: response
    params: {}
- name: ab_test
  endpoint:
    path: /emails/activities/{campaign_activity_id}/abtest
    method: POST
    data_selector: ''
    params: {}
- name: contact_list
  endpoint:
    path: /contact_lists/{list_id}
    method: GET
    data_selector: list_id
    params:
      include_membership_count: active
- name: email_campaign_activity
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: PUT
    data_selector: records
    params:
      campaign_activity_id: campaign_activity_id
- name: non_opener_resends
  endpoint:
    path: /v3/emails/activities/{campaign_activity_id}/non_opener_resends
    method: GET
    data_selector: records
    params:
      campaign_activity_id: ''
- name: physical_address
  endpoint:
    path: /account/summary/physical_address
    method: POST
    data_selector: address_line1
    params: {}
- name: create_client_account
  endpoint:
    path: /partner/accounts
    method: POST
    data_selector: null
    params: {}
- name: billing_plan_details
  endpoint:
    path: /partner/accounts/{encoded_account_id}/plan
    method: GET
    data_selector: null
    params: {}
- name: segment
  endpoint:
    path: /segments
    method: POST
    data_selector: ''
    params: {}
- name: contact_exports
  endpoint:
    path: /activities/contact_exports
    method: POST
    data_selector: ''
    params: {}
- name: contact_tags
  endpoint:
    path: /v3/contact_tags
    method: GET
    data_selector: tags
    params:
      limit: ''
      tags_count: ''
- name: webhook_subscription
  endpoint:
    path: /partner/webhooks/subscriptions/{topic_id}
    method: GET
    data_selector: ''
    params: {}
- name: physical_address
  endpoint:
    path: /v3/account/summary/physical_address
    method: GET
    data_selector: ''
    params: {}
- name: webhook_subscription
  endpoint:
    path: /partner/webhooks/subscriptions/{topic_id}
    method: PUT
    data_selector: hook_uri
    params: {}
- name: email_campaign_summaries
  endpoint:
    path: /reports/summary_reports/email_campaign_summaries
    method: GET
    data_selector: bulk_email_campaign_summaries
- name: email_campaign_stats
  endpoint:
    path: /reports/email_campaign_stats
    method: GET
    data_selector: results
- name: email_campaign_activity_stats
  endpoint:
    path: /reports/email_campaign_activity_stats
    method: GET
    data_selector: results
- name: email_campaign_activity_tracking
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking
    method: GET
- name: email_sends_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/sends
    method: GET
- name: email_opens_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/opens
    method: GET
- name: email_unique_opens_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/unique_opens
    method: GET
- name: email_did_not_opens_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/didnotopens
    method: GET
- name: email_forwards_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/forwards
    method: GET
- name: email_clicks_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/clicks
    method: GET
- name: email_links_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/links
    method: GET
- name: email_optouts_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/optouts
    method: GET
- name: email_bounces_report
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/bounces
    method: GET
- name: email_campaign_stats
  endpoint:
    path: /reports/stats/email_campaigns/{campaign_ids}
    method: GET
    data_selector: results
    params: {}
- name: unique_contact_sms_optins
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_sms_optins
    method: GET
    data_selector: tracking_activities
    params:
      limit: '500'
- name: email_unique_opens
  endpoint:
    path: /reports/email_reports/{campaign_activity_id}/tracking/unique_opens
    method: GET
    data_selector: tracking_activities
    params:
      campaign_activity_id: ''
- name: email_activity_status
  endpoint:
    path: /emails/activities/{campaign_activity_id}
    method: GET
    data_selector: ''
    params: {}
- name: p_unique_contact_adds
  endpoint:
    path: /reports/contact_reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_adds
    method: GET
    data_selector: tracking_activities
    params:
      limit: '500'
- name: segment
  endpoint:
    path: /segments/{segment_id}
    method: DELETE
- name: contact_tag
  endpoint:
    path: /v3/contact_tags/{tag_id}
    method: GET
    params:
      include_count: 'true'
- name: webhook_test
  endpoint:
    path: /partner/webhooks/subscriptions/2/tests
    method: POST
- name: contact_lists
  endpoint:
    path: /contact_lists
    method: GET
    params:
      include_count: 'true'
      include_membership_count: all
      status: active
- name: contacts
  endpoint:
    path: /v3/contacts
    method: GET
    data_selector: contacts
    params:
      updated_after: '2017-12-01'
      include_count: 'true'
- name: add_list_memberships
  endpoint:
    path: /v3/activities/add_list_memberships
    method: POST
    data_selector: null
    params: {}
- name: billing_plan
  endpoint:
    path: /partner/accounts/{encoded_account_id}/plan
    method: GET
    data_selector: billing_plan_details
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params:
      status: unsubscribed
      updated_after: '2023-01-01T16:37:59.091Z'
      limit: 2
- name: contacts_tags_delete
  endpoint:
    path: /activities/contacts_tags_delete
    method: POST
- name: activity_status
  endpoint:
    path: /activities/{activity_id}
    method: GET
- name: abtest
  endpoint:
    path: /emails/activities/{campaign_activity_id}/abtest
    method: GET
    data_selector: alternative_subject
    params: {}
- name: physical_address
  endpoint:
    path: /account/summary/physical_address
    method: PUT
    data_selector: ''
    params: {}
- name: account_summary
  endpoint:
    path: /account/summary
    method: GET
    data_selector: ''
    params:
      extra_fields: physical_address
- name: account_summary
  endpoint:
    path: /v3/account/summary
    method: GET
    data_selector: response
    params:
      extra_fields: physical_address,company_logo
- name: contact_tags
  endpoint:
    path: /v3/contact_tags/{tag_id}
    method: PUT
    data_selector: ''
    params: {}
- name: email_link_report
  endpoint:
    path: /v3/reports/email_reports/{campaign_activity_id}/links
    method: GET
    params:
      no_clicks: 'false'
- name: user_privileges
  endpoint:
    path: /account/user/privileges
    method: GET
    data_selector: null
    params: {}
- name: account_summary
  endpoint:
    path: /account/summary
    method: GET
    data_selector: null
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: null
    params: {}
- name: contact_lists
  endpoint:
    path: /contact_lists
    method: GET
    data_selector: null
    params: {}
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: null
    params: {}
- name: contacts
  endpoint:
    path: /contacts/{contact_id}
    method: PUT
    data_selector: response
- name: unique_contact_opens
  endpoint:
    path: /v3/reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_opens
    method: GET
    data_selector: tracking_activities
    params:
      contacts_filter: ''
      limit: ''
- name: delete_tag
  endpoint:
    path: /v3/contact_tags/{tag_id}
    method: DELETE
    data_selector: activity_id
    params: {}
- name: contact_custom_fields
  endpoint:
    path: /contact_custom_fields/{custom_field_id}
    method: PUT
    data_selector: custom_field
    params:
      incremental: updated_at
- name: unique_contact_clicks
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_clicks
    method: GET
    data_selector: tracking_activities
    params:
      limit: 500
- name: unique_contact_opens
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_opens
    method: GET
    data_selector: tracking_activities
    params: {}
- name: unique_contact_updates
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_updates
    method: GET
    data_selector: tracking_activities
    params: {}
- name: unique_contact_adds
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_adds
    method: GET
    data_selector: tracking_activities
    params: {}
- name: unique_contact_sms_optins
  endpoint:
    path: /reports/landing_pages/campaign_details/{campaign_activity_id}/p_unique_contact_sms_optins
    method: GET
    data_selector: tracking_activities
    params: {}
- name: list_delete
  endpoint:
    path: /activities/list_delete
    method: POST
- name: activity_status
  endpoint:
    path: /activities/{activity_id}
    method: GET
- name: partner_accounts
  endpoint:
    path: /v3/partner/accounts
    method: GET
- name: activity_summary
  endpoint:
    path: /v3/reports/contact_reports/{contact_id}/activity_summary
    method: GET
    data_selector: campaign_activities
    params:
      start: '2018-01-01T00:00:00.000Z'
      end: '2018-08-09T00:00:00.000Z'
- name: contact_list
  endpoint:
    path: /v3/contacts_lists/{list_id}
    method: PUT
    data_selector: ''
- name: contacts_json_import
  endpoint:
    path: /v3/activities/contacts_json_import
    method: POST
    data_selector: import_data
- name: activity_status
  endpoint:
    path: /v3/activities/{activity_id}
    method: GET
- name: contacts_file_import
  endpoint:
    path: /activities/contacts_file_import
    method: POST
- name: contacts_json_import
  endpoint:
    path: /activities/contacts_json_import
    method: POST
- name: email_campaign_activities
  endpoint:
    path: /reports/stats/email_campaign_activities/{campaign_activity_ids}
    method: GET
    data_selector: results
    params: {}
- name: email_campaign
  endpoint:
    path: /emails/{campaign_id}
    method: PATCH
    data_selector: campaign_id
    params:
      campaign_id: campaign_id
      name: name
- name: accounts
  endpoint:
    path: /partner/accounts
    method: GET
    data_selector: site_owner_list
    params:
      limit: '50'
      account_type: all
notes:
- The URI must begin with https:// and be no more than 512 characters in length.
- A successful request returns a 204 No Content response code without a response body.
- 'User privileges: contacts:read'
- 'Authorization scopes: contact_data'
- This method is only for use with primary_email and resend role email campaign activities.
- If no contacts received the email, it returns a 200 response with an empty array.
- Bulk activity endpoints create jobs that are placed into a queue and processed asynchronously.
- It is important to know when one request is dependent on another request.
- Use the limit parameter to specify the number of email campaigns that you want to
  return per page of output (from 1-500).
- An SSL certificate is required to allow Constant Contact to POST to your server
  over SSL.
- Self-signed certificates are acceptable but not preferred.
- The callback URL must be configured to handle POST requests and use HTTPS.
- This method will return a 400 error if you include a subresource in the include
  query parameter that does not apply to the resource you are retrieving.
- The signature format is JWS-based with detached content.
- Requires Python 3.7
- Maximum number of custom fields in a user’s account is 100
- Maximum number of custom fields per contact is 50
- Maximum characters in a custom_field name is 50
- If the email campaign activity has not been sent, the method returns a successful
  200 response code and an empty tracking_activities array.
- The same contact may appear more than once in the results if they clicked more than
  one link on the landing page.
- Non-required contact properties do not display in the results if they are undefined
  (null).
- If no contacts opted out, returns a 200 response code and an empty array for tracking_activities.
- 'User privileges: campaign:write'
- 'Authorization scopes: campaign_data'
- The tracking_summary object is now available through the campaign reporting endpoints.
- Properties that contain email content such as from_name and from_email are now part
  of the email campaign activity object.
- 'User privileges: contacts:write'
- Required query parameters include tracking_activity_type or tracking_activities_list
- Optional query parameters include include_campaign_activity_names and limit
- 'User privileges: contacts:lists:read'
- Only the properties included in the request body are updated.
- Tags do not require you to create new contact lists.
- The date range cannot exceed five years from start to end.
- The API requires the use of SSL with TLS v1.2 and AES encryption or better for all
  API calls.
- Some API object properties are read-only and any read-only properties included in
  a PUT or POST call are ignored by the API.
- 'User privileges: ui:campaign:metrics'
- This method requires the campaign_activity_id URL parameter of the email campaign
  activity for which you want to get an email opens report.
- This method does not currently support filtering results using the email opens report
  created_time timestamp.
- This method is only for use with `primary_email` and `resend` role email campaign
  activities.
- If no contacts received the email, a 200 response code with an empty array for `tracking_activities`
  is returned.
- You can only schedule email campaign activities that have the primary_email role
  and are in DRAFT, DONE, or ERROR status.
- The scheduled_date must be in ISO-8601 format.
- Default limit is 50 and maximum is 500 email campaign summaries per page.
- Your custom code email cannot exceed 400 KB or contain the character combinations
  `[#`, `${`, or `<@`.
- Autoresponder functionality is not available using the API.
- Confirmed Opt-in setting is available in the product UI.
- 'User privileges required: campaign:read'
- 'Authorization scopes required: campaign_data'
- This method does not currently support filtering results using the email bounces
  report created_time timestamp.
- Requires Account Owner or Account Manager role to use the segment feature.
- Segment criteria must begin with 'and'.
- OAuth2 Device Flow is available.
- New query parameters for filtering contacts by SMS status.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- JWT automatically expires in one hour and cannot be refreshed. Re-authenticate each
  time a JWT expires.
- Some objects may return nulls in deeply nested fields
- Supports importing and exporting contact SMS data.
- When making a GET, PUT, or POST call to the /contacts or /contacts/{contact_id}
  endpoints, SMS channel properties are returned by default.
- Uses OAuth2 with refresh token — requires setup of connected app in Constant Contact
- Some endpoints may have specific query parameters that affect results
- OAuth2 with PKCE flow is required.
- Ensure to handle JWT expiration and re-authentication.
- New endpoints introduced for SMS data management.
- The V3 API now requires specific user privileges to access endpoints.
- The Get Contacts Collection endpoint does not return deleted contacts by default.
- Uses OAuth2 with refresh token - requires setup of connected app in api
- Response body returns the HTML preview encoded as a JSON string.
- You can send up to 50 test emails per day.
- Each recipient counts towards this limit.
- Contacts require create_source property for new entries
- The V2 API is being deprecated.
- The V3 API uses UUID format for resource identifiers.
- JWT automatically expires in one hour and cannot be refreshed.
- You must re-authenticate each time a JWT expires.
- In the request body, you must specify both the name and the segment_criteria, even
  if you don’t plan to update both.
- 'User privileges: campaign:send'
- The V3 API limits the number of requests you can send to ensure API stability and
  to prevent abuse.
- You can use your API key to send up to 10,000 requests per day and 4 requests per
  second.
- The request limit resets each day at UTC 00:00:00.
- The account services GET methods that return account information require the `account_read`
  authorization scope.
- The account services POST or PUT methods that add or update account services resources
  require the `account_update` scope and the account owner role.
- This method requires the campaign_activity_id URL parameter of the email campaign
  activity for which you want to get an email sends report.
- This method does not currently support filtering results using the email sends report
  created_time timestamp.
- 'User privileges required: contacts:read'
- 'User privileges required: contacts:write'
- 'Authorization scopes required: contact_data'
- Activity status is retained for 10 days
- Contacts must re-subscribe themselves to be removed from the Unsubscribed category.
- This method only supports one query parameter at a time.
- If Confirmed Opt-in is enabled, this method automatically sets permission_to_send
  as pending_confirmation for new contacts.
- If Confirmed Opt-in is disabled, this method automatically sets permission_to_send
  as explicit and opt_in_source as Contact for new contacts.
- Exports up to 500 contacts using `contact_ids` or up to 50 `list_ids`.
- Delete list requests are processed asynchronously.
- An account can have a maximum of 1,000 lists and a contact can belong to a maximum
  of 50 lists.
- 'User privileges: contacts:lists:write'
- The request body requires valid string escaped JSON for the operation.
- Only one resend to non-openers can be sent for a primary email campaign activity.
- The format_type must be 5.
- The current_status must be either DRAFT, SCHEDULED, or DONE.
- The V3 API returns a 403 error when you attempt to access an endpoint that you do
  not have the correct scopes to use.
- Access tokens automatically expire after 480 minutes (28,800 seconds).
- When an access token expires, users must reauthorize your application with Constant
  Contact.
- Tag names must be unique to avoid returning a 409 error response.
- Tag names must consist of at least one character and not more than 255 characters
  to avoid returning a 400 error response.
- You can only update email campaign activities that have the primary_email role.
- You must add contacts to an email campaign activity using either the contact_list_ids
  array or the segment_ids array in order to schedule it.
- 'User privileges: account:update'
- 'Authorization scopes: account_update'
- Re-authenticate each time a JWT expires.
- User must have Account Owner or Account Manager role to get account level information
- User must have Account Owner role to update account level details
- Uses OAuth2 with Authorization Code Flow
- Constant Contact rate limits the Token endpoint.
- It is recommended to only send a refresh token request if the existing access token
  is expired or about to expire.
- All email reporting methods require the `campaign_data` authorization scope and
  the `ui:campaign:metrics` user privilege.
- By default, the report shows statistics captured since the last scheduled refresh
  date for each email campaign.
- You must update your existing V3 applications to use the new authorization service.
- The Constant Contact V3 API is a complete rebuild of our API in every sense. It
  has improved performance and reliability.
- Before deleting a segment, verify that the segment is not associated with a scheduled
  campaign.
- Use updated_after query parameter to retrieve only new or updated contacts since
  the last data sync.
- When using the Import/Update Contacts bulk activity endpoints, include only changed
  properties for each contact.
- JWT expires in one hour and cannot be refreshed. Re-authenticate each time a JWT
  expires.
- The offline_access scope is required for returning refresh tokens.
- Access tokens expire after 1440 minutes (24 hours).
- Use the limit query parameter to limit the number of results returned per page.
- When using the segment_id query parameter, the V3 API may return a 202 response
  code instead of a 200 response.
- Uses PKCE flow for authentication
- Access tokens automatically expire after 1440 minutes (86,400 seconds)
- Constant Contact rate limits the token endpoint.
- Only send a refresh token request if your existing access token is expired or about
  to expire.
- User must have the role of Account Owner to update account level details.
- Device Flow does not require using redirect URLs, callbacks, or the client secret.
- Constant Contact rate limits the Token endpoint. A 429 response will likely be returned
  if you attempt to refresh an access token before every V3 API request.
- Your partner credentials are required to authenticate your partner account with
  CTCT to get access to partner endpoints.
- An API key cannot be associated with more than one set of partner credentials.
- Tag names must be alphanumeric, which can include spaces, and common keyboard symbols
  (with the exception of '<' and '>').
- To include link details for links that were not clicked in the response results,
  set the 'no_clicks' query parameter to 'true'.
- User roles have different levels of access to data in Constant Contact.
- Asynchronous activity for deleting tags from contacts.
- Use API key and access token in the headers for authorized API calls.
- The endpoint requires two query parameters, start and end, in ISO 8601 format.
- Response includes the most recent 200 email campaigns.
- The size of the imported CSV file or JSON payload must be less than 4 megabytes
  (MB).
- The total number of rows in the CSV import file cannot exceed 40,000.
- Get statistics for one to ten email campaign activities.
- JWT expires in one hour and cannot be refreshed; re-authentication is required upon
  expiration.
errors:
- '200: Successful request'
- '401 Unauthorized: Check authorization scopes'
- '429 Too Many Requests: An account can have a maximum of 1000 activities requests
  queued or processing at any one time.'
- '400: If you enter a value that exceeds the page limit of 500.'
- '400: Bad Request'
- '400: Bad Request: Bad request. Either the JSON was malformed or there was a data
  validation error.'
- '401: Unauthorized: The access token used is invalid.'
- '403: Forbidden: Forbidden request. You lack the necessary scopes, you lack the
  necessary user privileges, or the application is deactivated.'
- '404: Not Found: The requested resource was not found.'
- '405: Method Not Allowed: The requested resource does not support the method used.'
- '409: Conflict: Conflict - a resource with that name already exists.'
- '415: Unsupported Media Type: Unsupported Media Type.'
- '429: Too Many Requests: Too many requests. You have exceeded 1,000 queued activities
  for this user account.'
- '500: Server Error: There was a problem with our internal service.'
- '503: Service Unavailable: The internal service is temporarily unavailable.'
- '200: OK: Your request (GET, PUT, or PATCH) was successful.'
- '201: Created: Your request (usually a PUT or POST) to create a new resource was
  successful.'
- '202: Accepted: Your POST or DELETE processing request was accepted.'
- '204: No Content: Your request was successful and the method did not return a response
  body.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 204 No Content
- 'contacts.api.not_found: contact_id is in an invalid format.'
- '201: The user was successfully created under the client partner account.'
- '400: Bad request. Either the JSON was malformed or there was a data validation
  error.'
- '401: Unauthorized. For example, authentication fails.'
- '403: Forbidden. For example, if you are trying to create a user in the client account
  and not under the partner account.'
- '409: Conflict. A resource with that name already exists.'
- '500: Internal service: There was a problem with our internal service.'
- '404: resource not found'
- '400: EmailCampaign cannot be removed as it is already in REMOVED status.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your OAuth token.'
- '404 Not Found: Ensure the segment_id is correct.'
- '401 Unauthorized: Verify OAuth token and permissions.'
- '403 Forbidden: Check user privileges for the requested endpoint.'
- '429 Too Many Requests: Rate limit exceeded, reduce frequency of API calls.'
- '401 Unauthorized: Ensure your token is valid.'
- '403 Forbidden: Check user permissions for accessing the endpoint.'
- '403 Forbidden: User lacks necessary privileges'
- '403 Forbidden: User lacks the necessary privileges.'
- '409 Conflict: If the segment name already exists'
- '429 Too many requests: Exceeding the test email limit.'
- '400: Attempting to change to a plan that is currently not available within your
  partner plan group.'
- Ensure that the segment_id currently exists, the name is unique, and the segment_criteria
  is valid and entered as single-string escaped JSON.
- '204 No Content: Successful DELETE call'
- '403 Forbidden: Request forbidden due to insufficient user privileges.'
- '429 Too Many Requests: All requests that exceed a rate limit return a 429 error
  code.'
- 'quota_exceeded: Limit Exceeded'
- 'throttled: Too Many Requests'
- '200: Returns a successful response with an empty tracking_activities array if no
  emails were sent.'
- '409 Conflict: Email address already exists in the account'
- '400: Contact is not unsubscribed or pending confirmation.'
- '401: Unauthorized access. Check access token.'
- '409 Conflict: Email address already exists for a contact.'
- '200: Contact updated.'
- '201: New contact created.'
- Invalid contact_id or list_id values result in the activity entering a failed state.
- '404: Client account or technology partner account does not exist'
- '400: Client account exists under a different technology partner account'
- Attempting to POST a resend for a primary email campaign that has already been scheduled
  for resend or was already resent returns an error.
- '403 Forbidden: You do not have the correct scopes to access this endpoint.'
- '401 Unauthorized: Making an API call with an expired access token returns a 401
  unauthorized status code.'
- '409: Conflict - Tag name must be unique.'
- '400: Bad Request - Tag name must be between 1 and 255 characters.'
- '400: Field validation error.'
- '503: Provisioning not completed due to unavailable dependencies.'
- '401 Unauthorized: Reauthenticate and reauthorize your application.'
- '404 Not Found: If any campaign_id is invalid.'
- 200 response code with empty array if no tracking activities are found
- '404: If the segment_id does not exist for the account.'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- 'invalid_client: The specified client_id is invalid.'
- 'invalid_grant: The specified grant is invalid, expired, revoked, or does not match
  the redirect URI used in the authorization request.'
- 'access_denied: The Authorization Server denied the request.'
- '202 Accepted: Request has been accepted but not fully completed. Retry to get a
  200 response.'
- '429: Too Many Requests - Throttle API calls or reduce frequency'
- 'expired_token: The device code has expired.'
- 'authorization_pending: The device authorization is pending. Please try again later.'
- '409 Conflict: Tag name must be unique.'
- '400 Bad Request: Tag name must be between 1 and 255 characters.'
- '403 Forbidden: Attempted to access an endpoint without the necessary privileges.'
- '400: Invalid partner_client_id or grant_type'
- '415: Required request headers not included'
- 'reporting.partial_success: Failed to retrieve campaign activity stats for the following
  campaign activities'
auth_info:
  mentioned_objects:
  - contacts:write
  - contact_data
  - campaign_data
  - campaign:write
  - campaign:send
  - contacts:read
  - campaign:read
  - ui:campaign:metrics
  - contacts:lists:read
  - access_token
  - Account Owner
  - Account Manager
  - OauthToken
  - AuthProvider
  - NamedCredential
  - account:read
  - 'User privileges: contacts:lists:write'
  - 'Authorization scopes: contact_data'
  - contacts:lists:write
  - client_id
  - client_secret
  - refresh_token
  - account:update
  - account_update
  - partner_client_id
  - partner_secret
  - User privileges
  - Authorization scopes
client:
  base_url: https://api.cc.email/v3
  headers:
    x-api-key: 3d4dp123-123b-436d-97c3-0f0f502218f1
    Content-Type: application/json
    Accept: '*/*'
    cache-control: no-cache
    Cache-Control: no-cache
    X-CTCT-WEBHOOK-SIG: ''
    Connection: keep-alive
    Accept-Encoding: gzip, deflate
    User-Agent: PostmanRuntime/7.15.2
    Authorization: Bearer {access_token}
    Postman-Token: a4fd97ab-a271-4094-8241-3642c507262d
    Host: api.cc.email
    accept-encoding: gzip, deflate
    content-length: '211'
  paginator:
    type: offset
    page_size_param: limit
    default_page_size: 50
    cursor_param: cursor
    cursor_path: _links.next.href
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    client_id: '{{ dlt.secrets[''partner_client_id''] }}'
    client_secret: '{{ dlt.secrets[''partner_secret''] }}'
    token_url: https://v3api-partner.auth.us-east-1.amazoncognito.com/oauth2/token
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    scope: campaign_data
    headers:
      x-api-key: 5d1dc312-542b-436d-97c3-0f7f502218f1
source_metadata: null
