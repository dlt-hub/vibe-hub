resources:
- name: permissions_center
  endpoint:
    path: /permissions_center
    method: GET
    data_selector: permissions
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: workspaces
    params: {}
- name: import_workspace
  endpoint:
    path: /api:meta/workspace/{workspace_id}/import
    method: POST
    data_selector: response
    params:
      password: text
- name: export_schema
  endpoint:
    path: /api:meta/workspace/{workspace_id}/export-schema
    method: POST
    data_selector: '{}'
    params:
      branch: ''
      password: ''
- name: export
  endpoint:
    path: /api:meta/workspace/{workspace_id}/export
    method: POST
    data_selector: '{}'
    params:
      branch: ''
      password: ''
- name: import_schema
  endpoint:
    path: /api:meta/workspace/{workspace_id}/import-schema
    method: POST
    data_selector: '{}'
    params:
      file: binary
      newbranch: text
      setlive: true
      password: text
- name: browse_workspace_request_history
  endpoint:
    path: /request-history/browse
    method: GET
    data_selector: data
    params:
      workspace_id: ''
- name: search_workspace_history
  endpoint:
    path: /request-history/search
    method: POST
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /search
    method: POST
    data_selector: items
- name: Run API Endpoint
  endpoint:
    path: API Endpoint
    method: POST
- name: Run Task
  endpoint:
    path: Task
    method: POST
- name: MCP List Tools
  endpoint:
    path: url
    method: GET
- name: MCP Call Tool
  endpoint:
    path: url
    method: POST
- name: workflow_tests
  endpoint:
    path: /library/workflow_tests
    method: GET
    data_selector: tests
    params: {}
- name: customer_support_agent
  endpoint:
    path: /agents/customer_support
    method: POST
- name: Private Snippet
  endpoint:
    path: /private/snippet
    method: POST
    data_selector: snippet
    params: {}
- name: instance
  endpoint:
    path: /api:meta/instance/{name}
    method: GET
- name: browse_instances
  endpoint:
    path: /api:meta/instance
    method: GET
- name: snippet_token
  endpoint:
    path: /api:meta/snippet/{canonical}/token
    method: GET
- name: snippet
  endpoint:
    path: /api:meta/snippet/{canonical}
    method: GET
- name: list_snippets
  endpoint:
    path: /api:meta/snippet
    method: GET
- name: url_getarg
  endpoint:
    path: /url_getarg
    method: GET
    data_selector: inputs
    params: {}
- name: url_hasarg
  endpoint:
    path: /url_hasarg
    method: GET
    data_selector: inputs
    params: {}
- name: url_parse
  endpoint:
    path: /url_parse
    method: GET
    data_selector: inputs
    params: {}
- name: list_directory
  endpoint:
    path: /list_directory
    method: GET
- name: signed_url
  endpoint:
    path: /signed_url
    method: POST
- name: upload_file
  endpoint:
    path: /upload_file
    method: POST
- name: delete_file
  endpoint:
    path: /delete_file
    method: DELETE
- name: create_variable_from_file
  endpoint:
    path: /create_variable_from_file
    method: POST
- name: get_file_metadata
  endpoint:
    path: /get_file_metadata
    method: GET
- name: products
  endpoint:
    path: result
    method: GET
    data_selector: result
    params: {}
- name: account_info
  endpoint:
    path: /api:meta/auth/me
    method: GET
    data_selector: id
- name: browse_instances
  endpoint:
    path: /api:meta/instance
    method: GET
    data_selector: name
- name: get_instance
  endpoint:
    path: /api:meta/instance/{name}
    method: GET
    data_selector: name
- name: list_snippets
  endpoint:
    path: /api:meta/snippet
    method: GET
    data_selector: items
- name: get_snippet
  endpoint:
    path: /api:meta/snippet/{canonical}
    method: GET
    data_selector: canonical
- name: browse_api_groups
  endpoint:
    path: /api:meta/workspace/{workspace_id}/apigroup
    method: GET
    data_selector: items
- name: get_api
  endpoint:
    path: /api:meta/workspace/{workspace_id}/apigroup/{apigroup_id}/api/{api_id}
    method: GET
    data_selector: id
- name: workspace
  endpoint:
    path: /api:meta/workspace
    method: GET
    data_selector: records
    params: {}
- name: workspace_detail
  endpoint:
    path: /api:meta/workspace/{workspace_id}
    method: GET
    data_selector: records
    params: {}
- name: workspace_branch
  endpoint:
    path: /api:meta/workspace/{workspace_id}/branch
    method: GET
    data_selector: records
    params: {}
- name: workspace_datasource
  endpoint:
    path: /api:meta/workspace/{workspace_id}/datasource
    method: GET
    data_selector: records
    params: {}
- name: workspace_function
  endpoint:
    path: /api:meta/workspace/{workspace_id}/function/{function_id}
    method: GET
- name: workspace_task
  endpoint:
    path: /api:meta/workspace/{workspace_id}/task/{task_id}
    method: GET
- name: workspace_file
  endpoint:
    path: /api:meta/workspace/{workspace_id}/file
    method: GET
- name: workspace_realtime
  endpoint:
    path: /api:meta/workspace/{workspace_id}/realtime
    method: GET
- name: workspace_autocomplete
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/autocomplete
    method: PUT
    data_selector: id
    params: {}
- name: workspace_content_bulk_delete
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/bulk/delete
    method: POST
    data_selector: success
    params: {}
- name: workspace_content_bulk_patch
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/bulk/patch
    method: POST
    data_selector: success
    params: {}
- name: workspace_content_bulk_create
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/bulk
    method: POST
    data_selector: id
    params: {}
- name: workspace_content_search_delete
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/search/delete
    method: POST
    data_selector: success
    params: {}
- name: workspace_content_search_patch
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/search/patch
    method: POST
    data_selector: success
    params: {}
- name: workspace_content_search
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/search
    method: POST
    data_selector: items
    params:
      page: 1
      per_page: 50
- name: workspace_content_delete
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/{content_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: workspace_content_get
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/{content_id}
    method: GET
    data_selector: '{}'
    params: {}
- name: workspace_content_update
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content/{content_id}
    method: PUT
    data_selector: '{}'
    params: {}
- name: workspace_content_browse
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/content
    method: GET
    data_selector: items
    params: {}
- name: workspace_table_create
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table
    method: POST
    data_selector: id
    params: {}
- name: workspace_table_read
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}
    method: GET
    data_selector: '{}'
    params: {}
- name: workspace_table_browse
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table
    method: GET
    data_selector: items
    params: {}
- name: workspace_table_update
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/meta
    method: PUT
    data_selector: '{}'
    params: {}
- name: workspace_table_delete
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: workspace_table_truncate
  endpoint:
    path: /api:meta/workspace/{workspace_id}/table/{table_id}/truncate
    method: DELETE
    data_selector: '{}'
    params:
      reset: true
- name: maintenance
  endpoint:
    path: /maintenance
    method: GET
    data_selector: operations
- name: request_history
  endpoint:
    path: /request-history
    method: DELETE
    data_selector: history
    params: {}
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: result.choices[0].message.content
- name: file
  endpoint:
    path: /upload
    method: POST
    data_selector: response
    params: {}
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: ''
- name: tables
  endpoint:
    path: /workspaces/{workspace_id}/tables
    method: GET
    data_selector: ''
- name: content
  endpoint:
    path: /workspaces/{workspace_id}/tables/{table_id}/content
    method: GET
    data_selector: ''
- name: file_resource
  endpoint:
    path: /file-resource
    method: POST
    data_selector: data
    params: {}
- name: zip_file
  endpoint:
    path: /zip-file
    method: POST
    data_selector: data
    params: {}
- name: custom_function
  endpoint:
    path: /custom_functions
    method: POST
    data_selector: function_details
notes:
- When designing your database structure in Xano, choosing the right identifier type
  is an important decision.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 'Required API Scope: Instance Workspace: Update'
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Use setRealtimeAuthToken for authenticating realtime connections starting July 1,
  2024
- Realtime is in beta, and this documentation can change at any time.
- Data Caching functions require a Starter plan or higher.
- Data Caching is temporary storage - so never store something that can't be recovered.
- Higher Order Filters operate on a list of items and process a Lambda individually
  for each item.
- The map filter is extremely powerful because it allows you to easily transform the
  elements of one array into another.
- The some filter allows you to easily determine if there is at least one element
  of an array that matches your condition.
- This filter (also called find every element) requires that all elements of the array
  match the condition.
- The find filter returns the actual element that matches the condition.
- The findIndex filter returns the index of the element that matches the condition.
- The filter returns all elements that match the condition.
- The reduce filter starts out with an initial value and is responsible for turning
  the array into a single result.
- Supports custom SSO implementation and policy enforcement for organizational authentication
  standards.
- 24/7 emergency support for service outages.
- Branches can merge from a source Branch to a destination Branch to manage development,
  test, and live environments.
- Adding a new Branch makes a copy of the source Branch at that given time.
- If you wish to call an API endpoint from a Branch that is not live, you can do so
  by adding the branch name after the canonical.
- Role-Based Access Control (Permissions) is included with Scale and Enterprise plans.
- Only the owner of the instance can add additional team members.
- Make sure your team member has already signed up for a Xano account.
- All files stored as private files are only accessible through on-demand time sensitive
  URL generation.
- Private files do not display previews from the database view; this is by design,
  as the files are not accessible until a new URL is generated.
- It is recommended to use separate Data Sources for running tests.
- Not all models support certain features such as structured outputs and reasoning.
- A Metadata API access token grants access to all workspaces in the instance the
  token was created.
- Changing server regions will change your API base URL
- Be sure to update any external connections with the new URL prior to initiating
  the migration.
- Certain security policy settings are available for all paid Xano plans.
- These features are only available via a premium add-on as a part of our Enterprise
  plan.
- When a filter below refers to the parent value, we're talking about the value box
  that lives immediately above the filter.
- If you are finding yourself in a situation where you are experiencing symptoms of
  RAM exhaustion, there are a few things you can to do try and mitigate the situation.
- It's important to note that in some cases, when mitigation is not possible, that
  may signal it's time to upgrade your Xano subscription tier to increase your available
  RAM.
- You can always reach out to Xano Support for further clarification.
- This setting determines whether or not use of the Direct Database Query function
  is allowed in your function stacks.
- Disabling this function helps ensure that team members can't execute functions that
  they shouldn't be.
- Make sure you are aware of your maximum available resources within the cluster before
  making any adjustments to these settings.
- Monitor your typical traffic patterns to optimize these settings.
- Securing your Realtime channels is a multi-step process, and is not always solely
  reliant on the channel permissions you set.
- Some permissions may appear to have logical dependencies, but they do not.
- Direct Database Connector is available as a paid add-on for our Starter plan or
  included with our Pro plan.
- Use care when accessing your database directly. This type of connection removes
  a significant portion of normal checks and balances for data validity that using
  Xano directly provides.
- You can either choose to apply the AI's suggestion, or continue to converse with
  the AI to iterate or make changes.
- Xano is a No-Code first platform.
- The API Developer Key is only intended for the Xano master service.
- Any endpoints within this instance that require authentication must use the authToken.
- Asynchronous functions will utilize your background task resources (unless you are
  on an Enterprise plan), so it's important to manage expectations when it comes to
  execution speed.
- Async (dedicated) is available for Enterprise plans and gives you a method of specificity
  around the resources used to execute the custom function.
- Generating an access token requires specific permissions regarding what it can access.
- By default, Xano will revoke your Metadata API access token after 7 days.
- The Metadata API is flexible regarding sending input values.
- When creating a unit test on a function stack that requires authentication, you
  can provide an auth token and extras just like you would during Run & Debug.
- To avoid having to recycle the auth token upon expiration, we have added the ability
  to ignore auth token expiration when running your unit tests.
- Static IP address is available on any paid plan address for outgoing API requests.
- Your static IP will only apply to outgoing requests -- meaning requests you make
  to third-party APIs using the External API Request function.
- Adding Static IP to your Xano plan requires migrating your data to a new instance.
  This means that your API endpoint base URL will change.
- If Database usage is high - your Database is not optimized or indexed properly.
- If API usage is high - indicates a traffic spike and your server is running out
  of capacity.
- All requests to the OpenAI API require authentication.
- TTL stands for time to live. This defines how long to cache the response for. Options
  range from 5 seconds to 7 days.
- Webhooks are API endpoints specifically designed for one system to automatically
  push information to another when a specific event happens.
- Always check the documentation of the service sending the webhook. They will specify
  the structure (schema) of the data payload you should expect.
- Two-factor authentication (2FA) security enforces an extra security step beyond
  email and password to help secure your Xano account.
- Creating or updating an index can take several minutes depending on the complexity
  and the size of the database table.
- Indexes will significantly increase the storage your database table requires. Please
  ensure you have enough free space (we recommend trying to stay around ~50% free
  space) before indexing your tables.
- CSV file import allows the creation of new tables and editing of existing records.
- In Xano, you can think of any function stacks you're building as your codebase.
- Test Suites create a duplicate copy of your database, temporarily, just for testing.
- Data that you use for a streaming response needs to be separated into logical pieces.
- Set the API response type to 'streaming' from the API settings, or choose the streaming
  option when creating a new API endpoint.
- MCP is an evolving protocol.
- Authentication methods and best practices are in flux and may change.
- Access Tokens are used for authentication when connecting to the Xano MCP server.
- Xano recommends using two-factor authentication (2FA) when sharing sensitive data.
- 'The performance of your API endpoint depends on a number of different variables
  which include: the complexity of your function stack and the number of statements
  that execute, how much data is being processed, how your Database is set up/indexed,
  server location and resources.'
- Get a dedicated instance in a region that's closest to your customers.
- Optimize Database Performance.
- Simplify your Function Stack.
- Use Addons when requesting related data.
- Use Data Caching.
- Use the Stream return type when looping through large sets of data.
- Middleware requires a Starter plan or higher.
- Middleware is available in both free and paid versions.
- You can generate a personal access token in Airtable by heading to your account
  settings, and from there visiting the Developer Hub.
- 'Choose Personal Access Tokens from the left-side navigation, and create a token
  with the following scopes: data:base.read, schema:base.read.'
- Use care when accessing your database directly.
- Xano support is not notified when access is granted. You must inform the support
  agent you are working with that access is granted so they may proceed.
- At this time, you must revoke access manually once your issue is resolved.
- Halts execution and returns the defined result immediately.
- Try/catch enables you to catch any errors that may occur in a specific stack of
  functions and execute additional logic based on that result.
- Posts that don't adhere to the Code of Conduct may be removed at the discretion
  of our moderators.
- Files in Xano always start with a file resource.
- Files are not recoverable. Proceed with caution.
- As of our 1.68 release (5/27/25), all new workspaces will default to the standard
  SQL column format for tables.
- This is okay.
- This tells us that the database is using as much RAM as it can to do the job it
  needs to be doing at a steady pace.
- This is something that should be investigated further.
- 'Spikes in API RAM can be caused by one or more of the following: Function stacks
  that process large volumes of data.'
- If you hit your RAM limit for Deno, the 'pod' or section of your instance that is
  responsible for Lambda functions will clear memory and restart, which will potentially
  cause Out Of Memory errors or timeout errors.
- Changes to individual records within your database are not tracked by the Compliance
  Center.
- The Compliance Center provides a comprehensive history of changes made to your workspace
  objects.
- Database performance in Xano is typically dependent on three key areas.
- Utilizing proper database design practices is paramount to ensuring your backend
  is as performant as possible.
- If you are experiencing slowness with Xano and can't figure it out on your own,
  you can contact support.
- 'Please provide the following details: Workspace name, API endpoint/function/task
  that is slow, JSON payload, if you are passing data, Email or user ID, if authentication
  is required.'
errors:
- 'ERROR_CODE_NOT_FOUND: Deleting a file that does not exist returns this error code
  and halts execution.'
- Not Supported. Please upgrade your Xano instance.
- Invalid name
- Variable is not an array.
- Invalid token
- Variable is not text. Are you referencing a full object?
- Removal of entry with a stream is not supported
- Please use a numerically indexed array
- Unable to decode input
- Potential infinite loop. Please limit your loop operations to under x.
- Invalid parameter count based on format
- Text filter requires a scalar value
- Unable to locate input
- SQLSTATE errors
- (value) is not one of the allowable values
- Unable to locate (variable name).(path)
- Unknown Error
- Numbers are required for mathematical operations
- Failed to Execute
- This name conflicts with another API endpoint.
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.xano.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
  headers:
    Content-Type: application/json
    Accept: application/json
    X-Xano-Authorization-Only: 'true'
  paginator: {}
  args:
  - mcp-remote
  - YOUR CONNECTION URL HERE
  - --header
  - Authorization:${AUTH_TOKEN}
  env:
    AUTH_TOKEN: Bearer YOUR AUTH TOKEN HERE
source_metadata: null
