resources:
- name: outgoing_transfer
  endpoint:
    path: /realtime/outgoing_transfer
    method: POST
    data_selector: transfer_info
    params: {}
- name: incoming_transfer
  endpoint:
    path: /realtime/incoming_transfer
    method: POST
    data_selector: transfer_info
    params: {}
- name: incoming_return_request
  endpoint:
    path: /realtime/incoming_return_request
    method: POST
    data_selector: return_request_info
    params: {}
- name: ach_return
  endpoint:
    path: /ach/returns
    method: POST
    data_selector: return
    params: {}
- name: return_request
  endpoint:
    path: /realtime/return_requests
    method: GET
    data_selector: requests
    params: {}
- name: reversal_transfer
  endpoint:
    path: /realtime/reversal_transfers
    method: POST
    data_selector: transfers
    params: {}
- name: outgoing_transfer_cancellation
  endpoint:
    path: /transfers/international-wire/swft_xxx/cancel
    method: POST
    data_selector: null
    params:
      cancellation_reason: requested_by_originator
- name: incoming_transfer_return
  endpoint:
    path: /transfers/international-wire/swft_xxx/return
    method: POST
    data_selector: null
    params:
      return_reason: cancellation_requested
- name: check_issue
  endpoint:
    path: /api/checks/issue
    method: POST
- name: check_deposit
  endpoint:
    path: /api/checks/deposit
    method: POST
- name: ach_transactions
  endpoint:
    path: /api/ach/transactions
    method: POST
- name: wire_transfer
  endpoint:
    path: /api/wire/transfer
    method: POST
- name: book_transfer
  endpoint:
    path: /api/transfers/book
    method: POST
- name: ledger_transaction
  endpoint:
    path: /api/ledger/transaction
    method: POST
- name: bank_account_creation
  endpoint:
    path: /api/bank_accounts/create
    method: POST
- name: card_program
  endpoint:
    path: /api/card/program
    method: POST
- name: real_time_payment
  endpoint:
    path: /api/payments/realtime
    method: POST
- name: international_wire
  endpoint:
    path: /api/wire/international
    method: POST
- name: bank_account_transaction
  endpoint:
    path: /reports/bank_account_transaction
    method: GET
    data_selector: transactions
- name: bank_account_summary
  endpoint:
    path: /reports/bank_account_summary
    method: GET
    data_selector: summaries
- name: check_return
  endpoint:
    path: /check/returns
    method: GET
    data_selector: returns
    params: {}
- name: issue_check
  endpoint:
    path: /api/checks/issue
    method: POST
    data_selector: check
    params: {}
- name: stop_payment
  endpoint:
    path: /api/checks/stop_payment
    method: POST
    data_selector: stopPayment
    params: {}
- name: entity
  endpoint:
    path: /entities/person
    method: POST
    data_selector: null
    params: {}
- name: bank_account
  endpoint:
    path: /bank-accounts
    method: POST
    data_selector: null
    params: {}
- name: simulate_receive_wire
  endpoint:
    path: /simulate/receive-wire
    method: POST
    data_selector: null
    params: {}
- name: counterparty
  endpoint:
    path: /counterparties
    method: POST
    data_selector: null
    params: {}
- name: ach_credit_transfer
  endpoint:
    path: /transfers/ach
    method: POST
    data_selector: null
    params: {}
- name: return_incoming_transfer
  endpoint:
    path: /transfers/international-wire/swft_xxx/return
    method: POST
    data_selector: null
    params: {}
- name: raw_incoming_messages
  endpoint:
    path: /transfers/international-wire/swft_xxx
    method: GET
    data_selector: null
    params:
      expand: raw_message
- name: international_wire_return
  endpoint:
    path: /transfers/international-wire/{transfer_id}/return
    method: POST
    data_selector: return_details
    params: {}
- name: outgoing_transfer
  endpoint:
    path: /outgoing_transfer
    method: GET
    data_selector: outgoing_transfer_details
- name: incoming_transfer
  endpoint:
    path: /incoming_transfer
    method: GET
    data_selector: incoming_transfer_details
- name: cover_transfer
  endpoint:
    path: /cover_transfer
    method: GET
    data_selector: cover_transfer_details
- name: book_transfers
  endpoint:
    path: /book_transfers
    method: GET
- name: ach
  endpoint:
    path: /ach
    method: POST
- name: wire
  endpoint:
    path: /wire
    method: POST
- name: ledger
  endpoint:
    path: /ledger
    method: POST
- name: bank_accounts
  endpoint:
    path: /bank_accounts
    method: POST
- name: card_programs
  endpoint:
    path: /card_programs
    method: POST
- name: checks
  endpoint:
    path: /checks
    method: POST
- name: realtime
  endpoint:
    path: /realtime
    method: GET
- name: international_wires
  endpoint:
    path: /international_wires
    method: POST
- name: loan_origination
  endpoint:
    path: /loan_origination
    method: POST
- name: debt_financing
  endpoint:
    path: /debt_financing
    method: POST
- name: loan_purchase
  endpoint:
    path: /loan_purchase
    method: POST
- name: check_transfer
  endpoint:
    path: /check/transfer
    method: POST
    data_selector: check_transfer
    params: {}
- name: delivery_status
  endpoint:
    path: /check/delivery_status
    method: GET
    data_selector: delivery_status
    params: {}
- name: check_deposit
  endpoint:
    path: /check/deposit
    method: POST
    data_selector: check_deposit
    params: {}
- name: supported_currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: currencies
    params: {}
- name: simulate_outgoing_transfer
  endpoint:
    path: /transfers/international-wire
    method: POST
- name: simulate_incoming_transfer
  endpoint:
    path: /simulate/receive-international-wire
    method: POST
- name: remittance_info
  endpoint:
    path: /remittance_info
    method: GET
    data_selector: countries
    params: {}
- name: purpose_codes
  endpoint:
    path: /purpose_codes
    method: GET
    data_selector: codes
    params: {}
- name: outgoing_transfer
  endpoint:
    path: /swift/outgoing_transfer
    method: GET
- name: incoming_transfer
  endpoint:
    path: /swift/incoming_transfer
    method: GET
- name: counterparties
  endpoint:
    path: /counterparties
    method: POST
    data_selector: null
    params: {}
- name: transfers
  endpoint:
    path: /transfers/realtime
    method: POST
    data_selector: null
    params: {}
- name: book_transfer
  endpoint:
    path: /transfers/book
    method: POST
    data_selector: transfer
    params:
      hold: 'true'
      amount: '10000'
      currency_code: USD
      allow_overdraft: 'true'
      description: hotel payment
- name: update_book_transfer
  endpoint:
    path: /transfers/book/<book_example1>
    method: PATCH
    data_selector: updated_transfer
    params:
      amount: '30000'
      allow_overdraft: 'true'
- name: clear_book_transfer
  endpoint:
    path: /transfers/book/<book_example1>/clear
    method: POST
    data_selector: cleared_transfer
    params:
      amount: '25000'
      allow_overdraft: 'true'
- name: cancel_book_transfer
  endpoint:
    path: /transfers/book/book_example1/cancel
    method: POST
    data_selector: canceled_transfer
    params: {}
- name: wire_drawdown_request
  endpoint:
    path: /wire_drawdown_requests
    method: POST
- name: wire_transfer
  endpoint:
    path: /wire_transfers
    method: POST
- name: checks
  endpoint:
    path: /api/checks
    method: POST
    data_selector: check
    params: {}
- name: wires
  endpoint:
    path: /api/wires
    method: POST
    data_selector: wire
    params: {}
- name: outgoing_request_for_payment
  endpoint:
    path: /api/v1/request_for_payment
    method: POST
    data_selector: request
    params: {}
- name: incoming_request_for_payment
  endpoint:
    path: /api/v1/incoming_request_for_payment
    method: GET
    data_selector: request
    params: {}
- name: counterparties
  endpoint:
    path: /counterparties
    method: POST
    data_selector: null
    params: {}
- name: international_wire_transfers
  endpoint:
    path: /transfers/international-wire
    method: POST
    data_selector: null
    params: {}
- name: fx_rate
  endpoint:
    path: /transfers/international-wire/fx-rate
    method: POST
    data_selector: null
    params: {}
- name: raw_outgoing_messages
  endpoint:
    path: /transfers/international-wire/swft_xxx
    method: GET
    data_selector: null
    params:
      expand: raw_message
notes:
- Realtime transfers can go through multiple states.
- Notifications are sent during each transition.
- Returned ACH Debits is a key risk to be aware of.
- You may be subject to rules and regulations around having custody of funds of your
  end customers.
- As with many financial products, the Bank Secrecy Act and Anti-Money Laundering
  regulations are a key consideration.
- Please make sure you are using the correct smallest units of the given currency
  codes in your requests. If you do not, transfer amounts may be wrong by orders of
  magnitude.
- ACH returns must be submitted within 2 business days for most cases.
- Certain return codes require a signed Written Statement of Unauthorized Debit.
- Only Incoming Realtime Transfers May Be Returned
- You may accept or reject a return request
- Idempotency enables you to retry a request without worrying it will create a duplicate
  transaction.
- Idempotency keys can be up to 255 characters long and are case sensitive.
- Column reserves the right to expire idempotency keys after 30 days.
- Column sends webhook events when a cancellation request is submitted, rejected or
  accepted.
- Column will never automatically accept any incoming cancellation requests.
- Column will use your reporting time zone to decide the day boundaries of your settlement
  reports.
- Daily settlement reports are generated after the midnight of your reporting time
  zone every day.
- Checks deposited at Column can be returned by the issuing bank.
- Column will automatically return checks for a number of reasons including check
  number not found, positive-pay mismatch, and account number not found.
- Column voids checks after 180 days like most banks.
- Check delivery status may be updated for checks already mailed, but no webhooks
  will be sent if a stop payment is requested.
- All webhook endpoints must be configured with https URLs that accept POST requests
  with JSON payloads.
- Multiple webhook endpoints can be configured for different event types.
- Currently only allow incoming wire reversals for specific reasons
- Only incoming basic funds transfers can be reversed
- Roles and permissions can get complicated.
- 'Default Roles provided: Admin, Developer, Money Mover, Viewer, Check Depositor.'
- Column provides direct access to the Federal Reserve.
- All services are built for developers.
- When offering credit products, the compliance and due diligence burden is heavier.
- Lending money requires capital.
- Card Programs typically take 90-120 days for a successful launch, but we explore
  every opportunity to accelerate timelines while ensuring launch stability.
- Column allows you to send ACH transfers same day, provided they are submitted before
  the last API request deadline (1:30pm PST). ACH transfers submitted after the deadline
  will automatically be sent with standard timing.
- 'To send an ACH same day, it must meet the following criteria: The ACH must be submitted
  to Column no later than 1:30pm PST. The ACH must set `same_day = true` and/or `effective_on
  = today`.'
- To access the sandbox, you'll use api.column.com as the domain, just like in production
  - the only differentiator is your sandbox api key. It's prefixed with `test-`, whereas
  your production key is prefixed with `prod-`.
- You can track incoming international wire transfers to Column even before we receive
  them by using their UETRs.
- Fees charged by Column or your platform will not be included in charges fields of
  international wire objects.
- If Column fails to deliver an outgoing transfer to our correspondent bank, or an
  outgoing transfer is returned before its funds are settled to our correspondent
  bank, fees charged by Column or your platform will be refunded to its originator.
- However, if an outgoing transfer is completed because its funds have been settled
  to our correspondent bank successfully, fees will not be refunded even if it is
  returned by an intermediary bank or the beneficiary bank.
- Column may hold funds locked upon check issuance for up to 10 days after a stop
  payment instruction is received.
- The effective date is different from the date on which the outgoing ACH debit will
  be marked as 'Settled' in the Column Dashboard.
- Column allows you to get to the bare metal.
- We connect directly to the Federal Reserve with dedicated hardware.
- As Program Manager, you must integrate with Column and the Issuer Processor.
- Timelines for custom cards typically run 90-120 days.
- Countries not listed on this page do not have special requirements
- Payment purpose is mandatory for some countries.
- Payment purpose must be clearly identified for specific countries.
- Funds in the 'hold' state will show up in a 'holding' balance on the sender account.
- Column does not support originating wire drawdowns with payment instructions to
  an account outside of Column.
- Pagination available for all list endpoints.
- Book Transfers now support a hold then clear functionality.
- 'New webhook events are added for: `book.transfer.hold_created`, `book.transfer.updated`,
  `book.transfer.canceled`.'
- Introduced root entity and some special accounts underneath them.
- Added `locked_balance` as a balance type for accounts.
- Added the ability for an account to go negative through our overdraft feature.
- Supports international wire transfers
- Requires setup of connected app for OAuth2
- Incoming RFPs should be surfaced to customers immediately.
- RFPs may have a maximum expiration date of 365 days in the future.
errors:
- 'R01: Insufficient funds.'
- 'R02: Account closed.'
- 'R08: Stop payment order.'
- 'A: NSF - Not sufficient funds'
- 'B: UCF - Uncollected funds hold'
- 'C: Stop payment'
- 'D: Closed account'
- 'E: UTLA - Unable to locate account'
- 'F: Frozen account - account has restrictions placed on it by either the customer
  or bank'
- 'G: Stale dated'
- 'H: Post dated'
- 'I: Endorsement missing'
- 'J: Endorsement irregular'
- 'K: Signature missing'
- 'L: Signature irregular - suspected forgery'
- 'M: Non-cash item'
- 'N: Altered/fictitious item - suspected counterfeit'
- 'O: Unable to process such that critical payment information is missing'
- 'P: Item exceeds stated max value'
- 'Q: Not authorized'
- 'R: Branch or account sold'
- 'S: Refer to maker'
- 'T: Item cannot be re-presented (exceeds number of allowable times the item can
  be presented)'
- 'U: Unusable image - image could not be used for required business purpose'
- 'W: Cannot determine amount - amount cannot be verified'
- 'X: Refer to image - return reason information is contained within the image of
  the item'
- 'Y: Duplicate presentment. Supporting documentation shall be readily available'
- 'Z: Forgery - an affidavit shall be available upon request'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'R01: Insufficient funds'
- '200: OK. Your request worked as expected successfully.'
- '400: Bad Request. Your request failed due to the information in the request or
  situational reasons (e.g. an insufficient balance or a validation error on the request).'
- '401: Unauthorized. No valid API key or session token provided.'
- '403: Forbidden. You don''t have permission to perform the request.'
- '404: Not Found. The requested resource does not exist.'
- '408: Request timeout.'
- '429: Too Many Requests. Too many requests hit the API too quickly.'
- '5xx: Something went wrong in Column''s systems (extremely rare). You should assume
  that we are being paged for all `5xx` errors.'
- 'AB01: Clearing process aborted due to timeout.'
- 'AB02: Clearing process aborted due to a fatal error.'
- 'AB03: Settlement aborted due to timeout.'
- 'AB04: Settlement process aborted due to a fatal error.'
- 'AC01: Account number is invalid or missing.'
- 'AC02: Debtor account number invalid or missing.'
- 'AC03: Creditor account number invalid or missing.'
- 'insufficient funds: Approval call fails if there are insufficient funds unless
  overdrafts are allowed.'
- Messages with invalid characters will be rejected by the Swift system.
- 'fx_quote_rate_date_too_far: Field rate_date is beyond the maximum allowed date
  in future. Please use a closer business day.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.column.com
  auth:
    type: apikey
    flow: refresh_token
    token_url: https://login.column.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/x-www-form-urlencoded
    Accept: application/json
  paginator:
    type: cursor
    cursor_param: starting_after
    page_size_param: limit
    default_page_size: 10
source_metadata: null
