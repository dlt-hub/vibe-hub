resources:
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics
    method: DELETE
    data_selector: status
    params:
      userId: unique identifier of member to filter out the results
      topicIds: array of topic IDs to unfollow
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
    params: {}
- name: category_permissions
  endpoint:
    path: /v1/api/categories/{categoryId}/permissions
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: user_member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: category_permissions
  endpoint:
    path: /v1/api/categories/{categoryId}/permissions
    method: GET
    data_selector: data
- name: category_moderators
  endpoint:
    path: /v1/api/category_moderators
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: status
  endpoint:
    path: /unfollow
    method: POST
    data_selector: status
    params: {}
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
- name: category_details
  endpoint:
    path: /categories/{categoryId}/userGroups/{userGroupId}
    method: GET
    params:
      categoryId: The unique identifier for a category.
      userGroupId: Unique identifier for the user group object.
- name: unfollow_topics
  endpoint:
    path: /unfollowTopics/{userId}
    method: POST
    data_selector: status
    params:
      userId: integer
- name: assign_moderator
  endpoint:
    path: /assignModerator
    method: POST
    data_selector: moderatorId
    params:
      userId: integer
      categoryIds: integer
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /path/to/endpoint/{userId}
    method: GET
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params:
      username: string
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: category_moderators
  endpoint:
    path: /v1/api/category_moderators
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: category_permissions
  endpoint:
    path: /v1/api/categories/{categoryId}/permissions
    method: GET
    data_selector: data
- name: moderators
  endpoint:
    path: /v1/api/category_moderators
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /api/categories
    method: GET
    data_selector: categories
    params: {}
- name: contacts
  endpoint:
    path: /api/categories
    method: GET
    data_selector: contacts
    params: {}
- name: conversation
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params:
      username: string
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: unfollow_topics
  endpoint:
    path: /unfollowTopics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: moderator_actions
  endpoint:
    path: /moderatorActions/{moderatorId}
    method: POST
    data_selector: status
    params:
      moderatorId: The unique identifier for a moderator.
- name: unfollow_topics
  endpoint:
    method: POST
    params:
      topicIds: An array of topic IDs to unfollow.
- name: send_message
  endpoint:
    method: POST
    params:
      message: Message is usually a content, and its purpose is either to ask a question,
        answer a question or to contributes towards the forum discussion by expressing
        an opinion or bringing forth information.
      recipientUsernames: A list of usernames who will receive the messages.
      senderId: Sender's userId who started the conversation.
      subject: Thing that is being discussed, described for conversation.
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: users
  endpoint:
    path: /list/users
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics
    method: POST
    data_selector: status
    params:
      topicIds: An array of topic IDs to unfollow.
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: delete_conversation
  endpoint:
    path: /conversations/{userId}
    method: DELETE
    data_selector: status
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: page_views
  endpoint:
    path: /v1/api/page_views
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
    params: {}
- name: create_conversation
  endpoint:
    path: /v1/api/conversations
    method: POST
    data_selector: data
    params: {}
- name: retrieve_conversation
  endpoint:
    path: /v1/api/conversations/{conversationId}
    method: GET
    data_selector: data
    params: {}
- name: delete_conversation
  endpoint:
    path: /v1/api/conversations/{conversationId}
    method: DELETE
    data_selector: data
    params: {}
- name: list_messages
  endpoint:
    path: /path/to/list/messages
    method: GET
- name: unfollow_topics
  endpoint:
    path: /path/to/unfollow/topics
    method: POST
    data_selector: status
    params:
      topicIds: An array of topic IDs to unfollow.
- name: user
  endpoint:
    params:
      userId: required_user_id
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: campaign_member
  endpoint:
    path: /api/campaign_member
    method: GET
- name: contact
  endpoint:
    path: /api/contact
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: page_views
  endpoint:
    method: GET
    params:
      limit: limit
      page: page
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
- name: page_views
  endpoint:
    path: /api/page_views
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: DELETE
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow-topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /unfollow
    method: POST
    data_selector: status
    params:
      userId: required
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: update_post
  endpoint:
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: post
  endpoint:
    path: /posts/{postId}
    method: GET
    data_selector: attachments
    params:
      postId: integer
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: user_group
  endpoint:
    path: /userGroups
    method: POST
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params:
      username: string
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: DELETE
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: delete_topic
  endpoint:
    path: /topics/{topicId}
    method: DELETE
    params:
      topicId: Unique identifier for the topic object.
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: required
      topicIds: optional
- name: user_group
  endpoint:
    path: /usergroup/{usergroupId}
    method: GET
    data_selector: changeUsername
    params:
      usergroupId: required
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: page_views
  endpoint:
    path: /api/page_views
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: page_views
  endpoint:
    path: /api/page_views
    method: GET
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: usergroup
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: conversation
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: category
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
    params: {}
- name: post
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: tag
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
    params: {}
- name: topic
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: user_group
  endpoint:
    path: /addUsersToGroup
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
- name: unfollow_topics
  endpoint:
    path: /unfollowTopics
    method: POST
    params:
      topicIds: An array of topic IDs to unfollow.
- name: user
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: user
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /unfollowTopics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
    params:
      limit: 10
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params:
      limit: 10
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
    data_selector: data
    params:
      limit: 10
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
    params:
      limit: 10
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
    params:
      limit: 10
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: follow_topics
  endpoint:
    path: /follow_topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to follow.
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: members
  endpoint:
    path: /api/members
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: moderators
  endpoint:
    path: /v1/api/category_moderators
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: Unfollow Topics
  endpoint:
    method: POST
    params:
      userId: unique identifier of member to filter out the results
      topicIds: array of topic IDs to unfollow
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: moderators
  endpoint:
    path: /api/category_moderators
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: page_views
  endpoint:
    path: /api/page_views
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params:
      username: string
- name: unfollow_topics
  endpoint:
    path: /unfollowTopics/{userId}
    method: POST
    data_selector: status
    params:
      userId: required
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: unfollow_topics
  endpoint:
    path: /unfollow
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollowTopics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: moderators
  endpoint:
    path: /v1/api/category_moderators
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: page_views
  endpoint:
    path: /v1/api/page_views
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: user_groups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: user
  endpoint:
    path: /your/api/endpoint/{userId}
    method: GET
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: Above.com
  endpoint:
    path: /adding-cname-records/above-com
    method: GET
    data_selector: records
    params: {}
- name: Adobe Business Catalyst
  endpoint:
    path: /adding-cname-records/adobe-business-catalyst
    method: GET
    data_selector: records
    params: {}
- name: Amazon Web Services
  endpoint:
    path: /adding-cname-records/amazon-web-services
    method: GET
    data_selector: records
    params: {}
- name: 1&1
  endpoint:
    path: /adding-cname-records/1and1
    method: GET
    data_selector: records
    params: {}
- name: 123-reg
  endpoint:
    path: /adding-cname-records/123-reg
    method: GET
    data_selector: records
    params: {}
- name: Aplus.net
  endpoint:
    path: /adding-cname-records/aplus-net
    method: GET
    data_selector: records
    params: {}
- name: Blacknight
  endpoint:
    path: /adding-cname-records/blacknight
    method: GET
    data_selector: records
    params: {}
- name: Bluehost
  endpoint:
    path: /adding-cname-records/bluehost
    method: GET
    data_selector: records
    params: {}
- name: Brilliant Directories
  endpoint:
    path: /adding-cname-records/brilliant-directories
    method: GET
    data_selector: records
    params: {}
- name: CloudFlare
  endpoint:
    path: /adding-cname-records/cloudflare
    method: GET
    data_selector: records
    params: {}
- name: DNSimple
  endpoint:
    path: /adding-cname-records/dnsimple
    method: GET
    data_selector: records
    params: {}
- name: DNS Made Easy
  endpoint:
    path: /adding-cname-records/dns-made-easy
    method: GET
    data_selector: records
    params: {}
- name: Register365
  endpoint:
    path: /adding-cname-records/register365
    method: GET
    data_selector: records
    params: {}
- name: DigitalOcean
  endpoint:
    path: /adding-cname-records/digitalocean
    method: GET
    data_selector: records
    params: {}
- name: Domain.Com
  endpoint:
    path: /adding-cname-records/domain-com
    method: GET
    data_selector: records
    params: {}
- name: Dotster.com
  endpoint:
    path: /adding-cname-records/dotster-com
    method: GET
    data_selector: records
    params: {}
- name: DreamHost
  endpoint:
    path: /adding-cname-records/dreamhost
    method: GET
    data_selector: records
    params: {}
- name: Dyn
  endpoint:
    path: /adding-cname-records/dyn
    method: GET
    data_selector: records
    params: {}
- name: Dynadot.com
  endpoint:
    path: /adding-cname-records/dynadot-com
    method: GET
    data_selector: records
    params: {}
- name: EuroDNS
  endpoint:
    path: /adding-cname-records/eurodns
    method: GET
    data_selector: records
    params: {}
- name: EveryDNS
  endpoint:
    path: /adding-cname-records/everydns
    method: GET
    data_selector: records
    params: {}
- name: Fastdomain.com
  endpoint:
    path: /adding-cname-records/fastdomain-com
    method: GET
    data_selector: records
    params: {}
- name: Freenom
  endpoint:
    path: /adding-cname-records/freenom
    method: GET
    data_selector: records
    params: {}
- name: Hostinger.com
  endpoint:
    path: /adding-cname-records/hostinger-com
    method: GET
    data_selector: records
    params: {}
- name: HostMonster.com
  endpoint:
    path: /adding-cname-records/hostmonster-com
    method: GET
    data_selector: records
    params: {}
- name: HostPapa.com
  endpoint:
    path: /adding-cname-records/hostpapa-com
    method: GET
    data_selector: records
    params: {}
- name: GoDaddy
  endpoint:
    path: /adding-cname-records/godaddy
    method: GET
    data_selector: records
    params: {}
- name: Hostgator
  endpoint:
    path: /cname/hostgator
    method: GET
    data_selector: records
- name: Hostway
  endpoint:
    path: /cname/hostway
    method: GET
    data_selector: records
- name: Hover
  endpoint:
    path: /cname/hover
    method: GET
    data_selector: records
- name: InMotion Hosting
  endpoint:
    path: /cname/inmotion
    method: GET
    data_selector: records
- name: iPage.com
  endpoint:
    path: /cname/ipage
    method: GET
    data_selector: records
- name: IX Web Hosting
  endpoint:
    path: /cname/ixwebhosting
    method: GET
    data_selector: records
- name: JouwWeb
  endpoint:
    path: /cname/jouwweb
    method: GET
    data_selector: records
- name: justHost.com
  endpoint:
    path: /cname/justhost
    method: GET
    data_selector: records
- name: Lunarpages
  endpoint:
    path: /cname/lunarpages
    method: GET
    data_selector: records
- name: Media Temple
  endpoint:
    path: /cname/mediatemple
    method: GET
    data_selector: records
- name: Microsoft 365
  endpoint:
    path: /cname/microsoft365
    method: GET
    data_selector: records
- name: MyDomain.com
  endpoint:
    path: /cname/mydomain
    method: GET
    data_selector: records
- name: myhosting.com
  endpoint:
    path: /cname/myhosting
    method: GET
    data_selector: records
- name: Name.com
  endpoint:
    path: /cname/name
    method: GET
    data_selector: records
- name: NameBright.com
  endpoint:
    path: /cname/namebright
    method: GET
    data_selector: records
- name: Namecheap
  endpoint:
    path: /cname/namecheap
    method: GET
    data_selector: records
- name: Namesilo.com
  endpoint:
    path: /cname/namesilo
    method: GET
    data_selector: records
- name: Netfirms
  endpoint:
    path: /cname/netfirms
    method: GET
    data_selector: records
- name: Network Solutions
  endpoint:
    path: /cname/networksolutions
    method: GET
    data_selector: records
- name: No-IP
  endpoint:
    path: /cname/noip
    method: GET
    data_selector: records
- name: NS1
  endpoint:
    path: /cname/ns1
    method: GET
    data_selector: records
- name: One.com
  endpoint:
    path: /cname/one
    method: GET
    data_selector: records
- name: Pair Domains
  endpoint:
    path: /cname/pair
    method: GET
    data_selector: records
- name: Rackspace
  endpoint:
    path: /cname/rackspace
    method: GET
    data_selector: records
- name: Register.com
  endpoint:
    path: /cname/register
    method: GET
    data_selector: records
- name: Registo.br
  endpoint:
    path: /cname/registo
    method: GET
    data_selector: records
- name: Shopify
  endpoint:
    path: /cname/shopify
    method: GET
    data_selector: records
- name: SiteGround.com
  endpoint:
    path: /cname/siteground
    method: GET
    data_selector: records
- name: Squarespace
  endpoint:
    path: /cname/squarespace
    method: GET
    data_selector: records
- name: Terra Domínio
  endpoint:
    path: /cname/terra
    method: GET
    data_selector: records
- name: Uniregistry.com
  endpoint:
    path: /cname/uniregistry
    method: GET
    data_selector: records
- name: Upperlink
  endpoint:
    path: /cname/upperlink
    method: GET
    data_selector: records
- name: Webador
  endpoint:
    path: /cname/webador
    method: GET
    data_selector: records
- name: Wix
  endpoint:
    path: /cname/wix
    method: GET
    data_selector: records
- name: saml_sso
  endpoint:
    path: /saml/module.php/saml/sp/saml2-acs.php/USERNAME
    method: POST
    data_selector: saml:Assertion
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: unique identifier of member to filter out the results
      topicIds: array of topic IDs to unfollow
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow-topics/{userId}
    method: DELETE
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: category_permissions
  endpoint:
    path: /v1/api/categories/{categoryId}/permissions
    method: GET
- name: category_moderators
  endpoint:
    path: /v1/api/category_moderators
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: create_category
  endpoint:
    path: /create_category
    method: POST
    data_selector: categoryId
    params:
      title: This is the name of the category.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: campaigns
  endpoint:
    path: /v1/api/campaigns
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
- name: category_info
  endpoint:
    path: /categories/{categoryId}/userGroup/{userGroupId}
    method: GET
    params:
      categoryId: The unique identifier for a category.
      userGroupId: Unique identifier for the user group object.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: status
  endpoint:
    path: /unfollow
    method: POST
    data_selector: status
    params: {}
- name: filter_member
  endpoint:
    path: /your_endpoint_path/{userId}
    method: GET
    params:
      userId: unique_identifier
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: category_permissions
  endpoint:
    path: /v1/api/categories/{categoryId}/permissions
    method: GET
    data_selector: permissions
- name: user
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: moderator
  endpoint:
    path: /moderator
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member that needs to assign a moderator.
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics
    method: POST
    data_selector: status
    params:
      topicIds: An array of topic IDs to unfollow.
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: category_permissions
  endpoint:
    path: /api/categories/{categoryId}/permissions
    method: GET
    data_selector: data
- name: category_moderators
  endpoint:
    path: /api/category_moderators
    method: GET
    data_selector: data
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: follow_moderator
  endpoint:
    path: /follow/moderator/{moderatorId}
    method: POST
    data_selector: status
    params:
      moderatorId: The unique identifier for a moderator.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /v1/api/campaign_member
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contacts
  endpoint:
    path: /v1/api/contact
    method: GET
    data_selector: records
    params: {}
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
    params: {}
- name: category_moderators
  endpoint:
    path: /v1/api/category_moderators
    method: GET
    data_selector: data
    params: {}
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics
    method: POST
    data_selector: status
    params:
      topicIds: optional
- name: send_message
  endpoint:
    path: /send/message
    method: POST
    data_selector: conversationId
    params:
      message: optional
      recipientUsernames: optional
      senderId: optional
      subject: optional
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: category_moderators
  endpoint:
    path: /api/category_moderators
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: list_messages
  endpoint:
    path: /list/messages
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics
    method: POST
    data_selector: status
    params:
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: delete_conversation
  endpoint:
    path: /conversations/{userId}
    method: DELETE
    params:
      userId: The unique identifier of member to filter out the results.
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: campaign_member
  endpoint:
    path: /v1/api/campaign_members
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
- name: page_views
  endpoint:
    path: /api/page_views
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: filter_messages
  endpoint:
    path: /messages/{messageId}/{conversationId}
    method: GET
    params:
      messageId: The unique identifier of message to filter out the results.
      conversationId: The unique identifier of conversation to filter out the results.
      userId: The unique identifier of member to filter out the results.
      limit: A limit on the number of objects to be returned. Limit can range between
        1 and 100 items, and the default is 10 items.
      page: Page number of results to return.
      includeId: When this parameter is provided, the API will return the page that
        includes the object with the ID specified in includeId.
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- endpoint:
    params:
      limit: A limit on the number of objects to be returned. Limit can range between
        1 and 100 items.
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics
    method: POST
    data_selector: status
    params:
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /unfollow-topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: unique identifier of member to filter out the results
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /api/campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/contact
    method: GET
    data_selector: records
- name: update_post
  endpoint:
    method: POST
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: page_views
  endpoint:
    path: /v1/api/page_views
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: post
  endpoint:
    path: /path/to/post/{postId}
    method: GET
    data_selector: post
    params:
      postId: integer
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: DELETE
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /topics/unfollow
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: campaign_member
  endpoint:
    path: /api/campaign_member
    method: GET
- name: contact
  endpoint:
    path: /api/contact
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: user_group
  endpoint:
    path: /user-groups
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: unfollow_topics
  endpoint:
    path: /unfollow-topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: DELETE
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: delete_topic
  endpoint:
    path: /delete/topic/{topicId}
    method: DELETE
    params:
      topicId: Unique identifier for the topic object.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: example_resource
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: user_group
  endpoint:
    path: /user/group
    method: GET
    data_selector: changeUsername, createAlbums, customTitle, defaultGroup, deleteOwnEvents,
      deleteOwnImages, deleteOwnPosts, deleteOwnProfile, deleteOwnTopics, downloadFiles,
      editOwnEvents, editOwnImages, editOwnPosts, editOwnProfile, moderateAlbums,
      moveOwnTopics, object, postEvents, postPolls, replyOwnTopics, replyTopics, requireEventApproval,
      requirePostApproval, setSelfAsInvisible, signature, startTopics, title, uploadAttachments,
      uploadFiles, userGroupId, viewAlbums, viewAttachments, viewCalendar, viewCategory,
      viewForum, viewInvisibleMembers, viewOthersEvents, viewOthersTopics, viewProfiles,
      viewTopicContent, viewableOnMembersList, voteOnPolls
    params:
      usergroupId: The unique identifier for a user group.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: unfollow_topics
  endpoint:
    path: /unfollow-topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: user_group
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: unfollow_topics
  endpoint:
    params:
      topicIds: An array of topic IDs to unfollow.
- name: list_users
  endpoint:
    path: /users
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
- name: data
  endpoint:
    params:
      limit: '10'
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
    data_selector: data
    params: {}
- name: unfollow_topics
  endpoint:
    path: /unfollow-topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /unfollow/topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: conversations
  endpoint:
    path: /v1/api/conversations
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
    params: {}
- name: unfollow_topics
  endpoint:
    path: /unfollowTopics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: category_moderators
  endpoint:
    path: /api/category_moderators
    method: GET
    data_selector: data
    params: {}
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    params:
      userId: required
      topicIds: optional
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params:
      username: string
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/conversations/{conversationId}/messages
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
    params: {}
- name: unfollow_topics
  endpoint:
    path: /unfollow
    method: POST
    data_selector: status
    params:
      userId: unique identifier of member to filter out the results
      topicIds: array of topic IDs to unfollow
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: campaign_member
  endpoint:
    path: /api/campaign/member
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /v1/api/tags
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /unfollow_topics/{userId}
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /unfollow
    method: POST
    data_selector: status
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: unfollow_topics
  endpoint:
    path: /unfollow
    method: POST
    params:
      userId: The unique identifier of member to filter out the results.
      topicIds: An array of topic IDs to unfollow.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: topics
  endpoint:
    path: /v1/api/topics
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: messages
  endpoint:
    path: /v1/api/conversations/{conversationId}/messages
    method: GET
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
    params: {}
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
    params: {}
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
    params: {}
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /api/posts
    method: GET
    data_selector: data
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /api/tags
    method: GET
    data_selector: data
- name: categories
  endpoint:
    path: /api/categories
    method: GET
- name: campaign_member
  endpoint:
    path: /api/campaign_member
    method: GET
- name: contact
  endpoint:
    path: /api/contact
    method: GET
- name: messages
  endpoint:
    path: /api/messages
    method: GET
- name: posts
  endpoint:
    path: /api/posts
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: tags
  endpoint:
    path: /api/tags
    method: GET
- name: usergroups
  endpoint:
    path: /api/usergroups
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: member
  endpoint:
    params:
      userId: The unique identifier of member to filter out the results.
- name: categories
  endpoint:
    path: /v1/api/categories
    method: GET
- name: campaign_member
  endpoint:
    path: /v1/api/campaign_member
    method: GET
- name: posts
  endpoint:
    path: /v1/api/posts
    method: GET
- name: users
  endpoint:
    path: /v1/api/users
    method: GET
- name: usergroups
  endpoint:
    path: /v1/api/usergroups
    method: GET
- name: event
  endpoint:
    path: /webhook
    method: POST
notes:
- API requests are rate limited to 3 requests per second.
- Ensure to handle rate limiting as requests are limited to 3 per second.
- Ensure to protect your API keys.
- Use webhooks for updates instead of polling.
- All API requests must be made over HTTPS.
- Returns a parameter 'status' with value success if follow succeeded.
- Requests that exceed this limit will return a 400 Bad Request response.
- API supports pagination and rate limiting.
- Uses API key for authentication.
- Always use HTTPS to make API calls.
- Uses API key in header for authentication.
- All requests must be made over HTTPS.
- Use webhooks for updates instead of polling the API.
- API requests without authentication will fail.
- Rate limit is 3 requests per second.
- For best performance, use webhooks for updates.
- Be aware of rate limits on API calls.
- Use webhooks for real-time updates.
- 'Rate limit: 3 requests per second.'
- Requests are rate limited to 3 requests per second.
- Ensure to keep your API key secret.
- Authentication requires an API key to be included in the header.
- Calls made over plain HTTP will fail.
- The API supports pagination for multiple endpoints.
- Rate limits apply to API calls.
- Some endpoints require specific query parameters for filtering.
- The default quota for the API is 3 requests per second with a burst of 5 requests
  and a total of 20,000 requests per day.
- API calls will add latency to your user's experience if done in response to user
  actions.
- It may be a good approach to use webhook events to store data in your local database
  instead of fetching everything via API calls.
- When many API requests need to be made sequentially, we recommend using sleep/pause
  commands in your code to throttle your code and ensure that the speed of the API
  requests doesn't exceed the limit of 3 requests per second.
- The Forum API doesn't support the CORS header because requests should not be done
  on the client-side in JavaScript as that will cause your private API key to be exposed
  to everyone.
- Supports only SAML 2.0.
- Requires setup of SAML identity provider and configuration of user attributes.
- Make sure to handle authentication tokens securely.
- Uses API key for authentication. Keep it secret.
- The API supports pagination for some endpoints.
- Rate limiting is enforced to prevent abuse.
- Ensure to keep your API key secret and do not expose it in public areas.
- Rate limited to 3 requests per second.
- Use webhooks for real-time updates instead of polling.
- User accounts are automatically created if they don't exist during the log in request.
- Always use HTTPS for API calls.
- Uses API key for authentication and requires HTTPS for all requests.
- API requests are rate limited.
- Returns a parameter "status" with value success if follow succeeded.
- Webhooks should be used for updates instead of polling the API.
- Some endpoints may require specific parameters for proper functionality.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Some objects like Contact may return nulls in deeply nested fields
- The forum Growth or Pro plan is required to use this feature.
- If a webhook is not successfully received for any reason, attempts will continue
  once an hour for up to 3 days.
- The process below is only for sign up and not for log in.
- It will return a user-friendly error message if a user already exists with the specified
  username or email address.
errors:
- '400 Bad Request: The request was unacceptable, often due to missing a required
  parameter.'
- '401 Unauthorized: Recheck API key or permissions.'
- '404 Not Found: The requested resource doesn''t exist.'
- '400: Forbidden, Bad Request -- The request was unacceptable, often due to missing
  a required parameter or exceeding the limit of 3 API requests per second.'
- '404: Not Found -- The requested resource doesn''t exist.'
- '500: Internal Server Error -- Something went wrong on Website Toolbox''s end.'
- '400 Bad Request: Often due to missing required parameters.'
- '401 Unauthorized: Ensure the API key is correct.'
- '404 Not Found: The requested resource does not exist.'
- '400 Bad Request: The request was unacceptable, often due to missing a required
  parameter or exceeding the limit of 3 API requests per second.'
- '500 Internal Server Error: Something went wrong on Website Toolbox''s end. (These
  are rare.)'
- 400 Forbidden, Bad Request -- The request was unacceptable, often due to missing
  a required parameter or exceeding the limit of 3 API requests per second.
- 404 Not Found -- The requested resource doesn't exist.
- 500 Internal Server Error -- Something went wrong on Website Toolbox's end. (These
  are rare.)
- '400: Bad Request - Check your request parameters.'
- '401 Unauthorized: Invalid API key.'
- '400 Bad Request: Verify the provided parameters.'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400: Bad Request - Check for required parameters.'
- '401: Unauthorized - Check API key.'
- '404: Not Found - Resource not available.'
- '500 Internal Server Error: Something went wrong on the server''s end.'
- '400: Bad Request - The request was unacceptable, often due to missing a required
  parameter.'
- '404: Not Found - The requested resource doesn''t exist.'
- '500: Internal Server Error - Something went wrong on the server.'
- '400: Bad Request - Often due to missing required parameters.'
- '404: Not Found - Resource does not exist.'
- '500: Internal Server Error - Rare server-side error.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Resource not found.'
- '400 Bad Request: Check for missing required parameters.'
- '404 Not Found: Resource does not exist.'
- '400: Bad Request'
- 'status: string'
- '400 Bad Request: Check your request parameters.'
- '400 Bad Request: The request was unacceptable, often due to missing a required
  parameter or exceeding limits.'
- '400: Bad Request -- The request was unacceptable, often due to missing a required
  parameter or exceeding the limit.'
- '401: Unauthorized'
- '404: Not Found'
- '401: Unauthorized - Check your API key.'
- '404: Not Found - The requested resource does not exist.'
- '401: Unauthorized - API key is missing or invalid.'
- '400 Bad Request: Check required parameters'
- '404 Not Found: Resource does not exist'
- '400 Bad Request: Ensure all required parameters are provided.'
- '400 Bad Request: Check API parameters or authentication.'
- '500 Internal Server Error: Something went wrong on the server.'
- '400: Bad Request - Check the request format'
- '404: Not Found - Resource not found'
- '401: Unauthorized - Invalid API key'
- '400 Bad Request: The request was unacceptable, often due to missing a required
  parameter or exceeding the limit.'
- '400: Bad Request - Invalid parameters'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404 Not Found: Requested resource does not exist.'
- '400 Bad Request: Check your parameters.'
- '400 Bad Request: Check for required parameters or valid input values.'
- '401 Unauthorized: Check your API key or authentication method.'
- '400: Bad Request - The request was unacceptable, often due to missing a required
  parameter or exceeding the limit'
- '404: Not Found - The resource could not be found'
- '500: Internal Server Error - Something went wrong on the server'
- '400 Bad Request: Check the parameters passed.'
- '401 Unauthorized: Ensure you have valid API key.'
- '400 Bad Request: Invalid parameters'
- '404 Not Found: Resource not found'
- '500 Internal Server Error: Server error'
- '400 Bad Request: Check for required parameters.'
- '401: Unauthorized - Recheck API key or permissions.'
- '400 Bad Request: Check for missing parameters or incorrect request format.'
- '500 Internal Server Error: An error occurred on the server.'
- '401 Unauthorized: Recheck your API key.'
- '401 Unauthorized: API key is missing or invalid.'
- '401: Unauthorized - Check API key or authentication.'
- '404: Not Found - Requested resource does not exist.'
- '401 Unauthorized: Confirm API key is valid.'
- '400: Bad Request -- Often due to missing required parameters.'
- '401: Unauthorized -- Check if the API key is correct.'
- '400: Bad Request - Often due to missing a required parameter.'
- '500: Internal Server Error - Something went wrong on the server''s end.'
- 'Invalid SAML response: Ensure the assertion is correct.'
- '401 Unauthorized: Check SAML configuration.'
- '400: Bad Request - Check parameters and request format.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Check your API key'
- '400 Bad Request: Often due to required parameters missing or exceeding rate limits.'
- '500 Internal Server Error: Rare server-side issues.'
- '500 Internal Server Error: Something went wrong on Website Toolbox''s end.'
- '400 Bad Request: Often due to missing a required parameter or exceeding the limit.'
- '401 Unauthorized: Recheck API key or user permissions.'
- '401 Unauthorized: Recheck API key or authentication details.'
- '400 Bad Request: Check request parameters and format.'
- '401 Unauthorized: Check API key and authentication.'
- '404 Not Found: Ensure the requested resource exists.'
- '401 Unauthorized: Ensure your API key is valid.'
- '400 Bad Request: Often due to missing a required parameter or exceeding the rate
  limit.'
- '404 Not Found: Requested resource doesn''t exist.'
- '400 Bad Request: Often due to missing a required parameter or exceeding the limit
  of API requests.'
- '404 Not Found: Indicates that the requested resource doesn''t exist.'
- '500 Internal Server Error: Indicates an error on the server side.'
- '400 Bad Request: Often due to missing a required parameter.'
- '400: Bad Request - Often due to missing required parameters or exceeding the request
  limit.'
- '400: Error with message and parameter details'
- '400 Bad Request: Often due to missing required parameters or exceeding rate limits.'
- '400 Bad Request: The request was unacceptable, often due to missing a required
  parameter or exceeding the limit of API requests.'
- '401 Unauthorized: Your API key is invalid or you do not have permission to access
  this resource.'
- '404: Resource not found'
- '401: Unauthorized - Authentication is required and has failed or has not been provided.'
- '401 Unauthorized: Check your API key and permissions.'
- '400 Bad Request: The request was unacceptable, often due to missing a required
  parameter or exceeding the limit of requests.'
- '500 Internal Server Error: Something went wrong on the server side.'
- '404 Not Found: The specified resource does not exist.'
- '400: Bad Request - The request was unacceptable, often due to missing a required
  parameter'
- '401: Unauthorized - Authentication failed or user does not have permissions for
  the desired action'
- '404: Not Found - The requested resource doesn''t exist'
- '400 Bad Request: Usually due to missing required parameters.'
- '401 Unauthorized: Check API key.'
- '400 Bad Request: Often due to missing parameters or exceeding rate limit.'
- '401 Unauthorized: Check API key or authorization.'
- '400: Bad Request - Check required parameters.'
- '401 Unauthorized: Check API key and permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Often due to exceeding the rate limit or missing parameters.'
- '401 Unauthorized: Check your API key and authentication method.'
- The error message will be here.
auth_info:
  mentioned_objects:
  - x-api-key
  - User
  - UserGroup
  - Post
  - Topic
  - Message
  - Tag
  - Conversation
  - Category
  - API Key
  - ApiKey
  - API key
  - OauthToken
  - AuthProvider
  - NamedCredential
  - x-api-username
  - Group
  - OAuth2
  - IdentityProvider
  - ServiceProvider
  - API keys
  - User credentials
  - user
  - category
  - topic
  - post
  - message
  - usergroup
  - tag
client:
  headers:
    APIKEY: API Key
    x-api-key: Your secret API key to authenticate your account.
    x-api-username: The username of the user that you'd like to make the request as.
      Use "Anonymous" to make the request as a user that isn't logged in.
    Accept: application/json
  auth:
    type: apikey
    location: header
    header_name: x-api-key
    token_url: https://USERNAME.websitetoolbox.com/saml/module.php/saml/sp/saml2-acs.php/USERNAME
  base_url: https://USERNAME.websitetoolbox.com
  paginator:
    page_size_param: limit
    default_page_size: 10
source_metadata: null
