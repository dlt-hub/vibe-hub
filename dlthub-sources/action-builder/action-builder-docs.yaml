resources:
- name: person
  endpoint:
    path: /api/rest/v1/campaigns/{campaign_id}/people/{person_id}
    method: GET
    data_selector: identifiers
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: _embedded.action_builder:campaigns
    params: {}
- name: people
  endpoint:
    path: /campaigns/[campaign_id]/people
    method: POST
    data_selector: people
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: taggings
  endpoint:
    path: /taggings
    method: GET
    data_selector: taggings
- name: connections
  endpoint:
    path: /connections
    method: GET
    data_selector: connections
- name: campaigns
  endpoint:
    path: /api/rest/v1/campaigns
    method: GET
    data_selector: _embedded.action_builder:campaigns
- name: connection_types
  endpoint:
    path: /campaigns/{campaign_id}/connection_types/{connection_type_id}
    method: GET
    data_selector: connection_types
    params: {}
- name: connections
  endpoint:
    path: /campaigns/{campaign_id}/people/{person_id}/connections/{connection_id}
    method: GET
    data_selector: origin_system
    params: {}
- name: entity_types
  endpoint:
    path: /api/rest/v1/campaigns/[campaign_id]/entity_types
    method: GET
    data_selector: _embedded.action_builder:entity_types
    params: {}
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: specific_campaign
  endpoint:
    path: /campaigns/[id]
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /api/rest/v1/campaigns/{id}
    method: GET
    data_selector: origin_system
    params: {}
- name: connection_types
  endpoint:
    path: /api/rest/v1/campaigns/[campaign_id]/connection_types
    method: GET
    data_selector: _embedded.action_builder:connection_types
    params: {}
- name: specific_connection_type
  endpoint:
    path: /api/rest/v1/campaigns/[campaign_id]/connection_types/[connection_type_id]
    method: GET
    data_selector: ''
    params: {}
- name: connections
  endpoint:
    path: /api/rest/v1/campaigns/{campaign_id}/people/{person_id}/connections
    method: GET
    data_selector: _embedded.action_builder:connections
    params: {}
- name: entity_type
  endpoint:
    path: /api/rest/v1/campaigns/{campaign_id}/entity_types/{entity_type_id}
    method: GET
    data_selector: origin_system
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: records
    params: {}
- name: individual_person
  endpoint:
    path: /people/[person_id]
    method: GET
    data_selector: record
    params: {}
- name: people
  endpoint:
    path: /api/rest/v1/campaigns/84a684a7-2f5a-4359-bdb4-898ce4fbc88f/people
    method: GET
    data_selector: _embedded.osdi:people
    params:
      per_page: 25
      page: 1
- name: people
  endpoint:
    path: /api/rest/v1/campaigns/{campaign_id}/people/{person_id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_person
  endpoint:
    path: /api/rest/v1/campaigns/{campaign_id}/people/{person_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: campaign_tags
  endpoint:
    path: /campaigns/[campaign_id]/tags/[tag_id]/taggings
    method: GET
- name: campaign_people_taggings
  endpoint:
    path: /campaigns/[campaign_id]/people/[person_id]/taggings
    method: GET
- name: campaign_connections_taggings
  endpoint:
    path: /campaigns/[campaign_id]/connections/[connection_id]/taggings
    method: GET
- name: specific_tagging
  endpoint:
    path: /campaigns/[campaign_id]/tags/[tag_id]/taggings/[tagging_id]
    method: GET
- name: tagging
  endpoint:
    path: /api/rest/v1/campaigns/{campaign_id}/tags/{tag_id}/taggings/{tagging_id}
    method: GET
    data_selector: ''
- name: tag
  endpoint:
    path: /campaigns/{campaign_id}/tags/{tag_id}
    method: GET
    data_selector: origin_system
    params: {}
- name: create_tag
  endpoint:
    path: /campaigns/{campaign_id}/tags
    method: POST
    data_selector: origin_system
    params: {}
- name: delete_tag
  endpoint:
    path: /campaigns/{campaign_id}/tags/{tag_id}
    method: DELETE
    data_selector: message
    params: {}
- name: connections
  endpoint:
    path: /campaigns/[campaign_id]/people/[person_id]/connections
    method: POST
    data_selector: connection
- name: people
  endpoint:
    path: /api/rest/v1/campaigns/84a684a7-2f5a-4359-bdb4-898ce4fbc88f/people
    method: POST
    data_selector: person
    params: {}
- name: person
  endpoint:
    path: /api/rest/v1/campaigns/{campaign_id}/people/{person_id}
    method: GET
    data_selector: records
- name: taggings
  endpoint:
    path: /campaigns/{campaign_id}/tags/{tag_id}/taggings
    method: GET
    data_selector: _embedded.osdi:taggings
    params:
      per_page: 25
- name: tags
  endpoint:
    path: /campaigns/{campaign_id}/tags
    method: GET
    data_selector: _embedded.osdi:tags
- name: people
  endpoint:
    path: /campaigns/{campaign_id}/people
    method: POST
    data_selector: connection
    params: {}
- name: people
  endpoint:
    path: /api/rest/v1/campaigns/[campaign_id]/people
    method: POST
    data_selector: person
    params: {}
notes:
- Keep your API key secret. Anyone with your API key will be able to access any data
  in your account.
- By default we will return 25 resources per page when querying a collection.
- You can retrieve a maximum of 25 resources per page.
- Use OData query language for filtering resources.
- Uses OSDI API token for authentication
- Posting, putting, and deleting of connection types is not allowed. Attempts will
  result in errors.
- Connections can be created using the connection signup helper, documented here.
- The connections collection does not allow POST.
- Entity type resources live exclusively at the specified endpoint.
- Posting, putting, and deleting on the AEP is not allowed.
- Posting, putting, and deleting of campaigns is not allowed.
- Connections resources are sometimes presented as collections of connections.
- Posting, putting, and deleting of entity types is not allowed.
- Use action_builder:identifier to update existing fields.
- Connections are matched and deduplicated by their API endpoint.
- The people collection does not allow POST -- posting a new person directly to the
  people endpoint is not allowed.
- Uses API key for authentication
errors:
- 'Rate limit exceeded: Maximum of 4 calls per second'
- '200 OK: Entity has been removed from the campaign'
auth_info:
  mentioned_objects: []
client:
  base_url: https://[your-sub-domain].actionbuilder.org/api/rest/v1/campaigns/[campaign_id]/people
  auth:
    type: apikey
    location: header
    header_name: OSDI-API-Token
  headers:
    Content-Type: application/json
    OSDI-API-Token: your_api_key_here
  paginator:
    type: page
    page_size_param: per_page
    default_page_size: 25
  resources:
  - name: connections
    endpoint:
      path: /[campaign_id]/people/[person_id]/connections
      method: GET
  - name: individual_connection
    endpoint:
      path: /[campaign_id]/people/[person_id]/connections/[connection_id]
      method: GET
  - name: tags
    endpoint:
      path: /campaigns/[campaign_id]/tags
      method: GET
  - name: specific_tag
    endpoint:
      path: /campaigns/[campaign_id]/tags/[tag_id]
      method: GET
source_metadata: null
