resources:
- name: transaction
  endpoint:
    path: /api/transaction
    method: GET
    data_selector: details
    params: {}
- name: transaction
  endpoint:
    path: /rswebpaytransaction/api/webpay/v1.2/transactions
    method: POST
    data_selector: token
    params: {}
- name: inscription_status
  endpoint:
    path: /services/status
    method: POST
    data_selector: response
    params:
      token: token
- name: mall_inscription
  endpoint:
    path: /inscriptions
    method: POST
    data_selector: response
    params: {}
- name: mall_transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: response
    params: {}
- name: capture_transaction
  endpoint:
    path: /transactions/capture
    method: POST
    data_selector: response
    params: {}
- name: consultas
  endpoint:
    path: /consultas
    method: GET
    data_selector: consultas
    params: {}
- name: fallas
  endpoint:
    path: /fallas
    method: GET
    data_selector: fallas
    params: {}
- name: full_transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/FullTransaction
    method: POST
    data_selector: response
    params: {}
- name: mall_transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/MallTransaction
    method: POST
    data_selector: response
    params: {}
- name: requerimiento_validacion_actualizacion
  endpoint:
    path: /commands/0540
    method: GET
    data_selector: response
    params: {}
- name: requerimiento
  endpoint:
    path: /command/0580
    method: POST
    data_selector: response
    params: {}
- name: respuesta
  endpoint:
    path: /command/0590
    method: POST
    data_selector: response
    params: {}
- name: update_parameters_command
  endpoint:
    path: /commands/update_parameters
    method: POST
    data_selector: response
    params: {}
- name: validate_update_parameters_command
  endpoint:
    path: /commands/validate_update_parameters
    method: POST
    data_selector: response
    params: {}
- name: eco_command
  endpoint:
    path: /commands/eco
    method: POST
    data_selector: response
    params: {}
- name: restart_pinpad_command
  endpoint:
    path: /commands/restart_pinpad
    method: POST
    data_selector: response
    params: {}
- name: update_parameters_request
  endpoint:
    path: /commands/request_update_parameters
    method: POST
    data_selector: response
    params: {}
- name: comando_lectura_codigo_barras
  endpoint:
    path: /comando/lectura_codigo_barras
    method: GET
    data_selector: respuesta
    params: {}
- name: comando_requerimiento_venta
  endpoint:
    path: /comando/requerimiento_venta
    method: GET
    data_selector: respuesta
    params: {}
- name: comando_validacion_respuesta_autorizador
  endpoint:
    path: /comando/validacion_respuesta_autorizador
    method: GET
    data_selector: respuesta
    params: {}
- name: comando_lectura_tarjeta
  endpoint:
    path: /api/comando/lectura_tarjeta
    method: POST
    data_selector: data
    params: {}
- name: comando_requerimiento_venta_anulacion
  endpoint:
    path: /api/comando/requerimiento_venta_anulacion
    method: POST
    data_selector: data
    params: {}
- name: comando_requerimiento_reversa
  endpoint:
    path: /api/comando/requerimiento_reversa
    method: POST
    data_selector: data
    params: {}
- name: response_codes
  endpoint:
    path: /response_codes
    method: GET
    data_selector: codes
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: transaction
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: refund
    params: {}
- name: capture
  endpoint:
    path: /capture
    method: POST
    data_selector: capture
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: response
    params: {}
- name: capture
  endpoint:
    path: /capture
    method: POST
    data_selector: response
    params: {}
- name: transaction
  endpoint:
    path: /rswebpaytransaction/api/webpay/v1.2/transactions
    method: POST
    data_selector: response
    params: {}
- name: Webpay Plus
  endpoint:
    path: /webpayplus/transactions
    method: POST
- name: Oneclick Mall
  endpoint:
    path: /oneclick/mall/inscriptions
    method: POST
- name: Transacción Completa
  endpoint:
    path: /transaccion-completa/transactions
    method: POST
- name: Webpay Plus
  endpoint:
    path: /webpay/plus
    method: POST
- name: Oneclick Mall
  endpoint:
    path: /oneclick/mall
    method: POST
- name: Transacción Completa
  endpoint:
    path: /transaction/completa
    method: POST
- name: multi_code_sale
  endpoint:
    path: /multiCodeSale
    method: POST
    data_selector: response
    params: {}
- name: last_sale
  endpoint:
    path: /lastSale
    method: GET
    data_selector: response
    params: {}
- name: totals
  endpoint:
    path: /totals
    method: GET
    data_selector: TotalsResponse
    params: {}
- name: sales_detail
  endpoint:
    path: /details
    method: GET
    data_selector: DetailResponse
    params: {}
- name: multi_code_details
  endpoint:
    path: /multiCodeDetails
    method: GET
    data_selector: MultiCodeDetailResponse
    params: {}
- name: MultiCodeLastSale
  endpoint:
    path: /MultiCodeLastSale
    method: POST
    data_selector: MultiCodeLastSaleResponse
- name: Refund
  endpoint:
    path: /Refund
    method: POST
    data_selector: RefundResponse
- name: Close
  endpoint:
    path: /Close
    method: POST
    data_selector: CloseResponse
- name: load_keys
  endpoint:
    path: /loadKeys
    method: POST
    data_selector: LoadKeysResponse
    params: {}
- name: poll
  endpoint:
    path: /poll
    method: POST
    data_selector: Boolean
    params: {}
- name: set_normal_mode
  endpoint:
    path: /setNormalMode
    method: POST
    data_selector: Boolean
    params: {}
- name: inscription
  endpoint:
    path: /resultado/de/la/transaccion
    method: POST
    data_selector: response
    params: {}
- name: transaccion_venta
  endpoint:
    path: /transaccion/venta
    method: POST
    data_selector: SaleResponse
    params: {}
- name: transaccion_ultima_venta
  endpoint:
    path: /transaccion/ultima-venta
    method: POST
    data_selector: LastSaleResponse
    params: {}
- name: transaccion_cierre
  endpoint:
    path: /transaccion/cierre
    method: POST
    data_selector: CloseResponse
    params: {}
- name: transaccion_carga_llaves
  endpoint:
    path: /transaccion/carga-llaves
    method: POST
    data_selector: LoadKeysResponse
    params: {}
- name: transaccion_poll
  endpoint:
    path: /transaccion/poll
    method: POST
    data_selector: Boolean
    params: {}
- name: transaccion_inicializacion
  endpoint:
    path: /transaccion/inicializacion
    method: POST
    data_selector: Boolean
    params: {}
- name: transaccion_respuesta_inicializacion
  endpoint:
    path: /transaccion/respuesta-inicializacion
    method: POST
    data_selector: InitializationResponse
    params: {}
- name: Webpay Plus
  endpoint:
    path: /webpay/plus
    method: GET
- name: Webpay Call Center
  endpoint:
    path: /webpay/callcenter
    method: GET
- name: POS Integrado
  endpoint:
    path: /pos/integrado
    method: GET
- name: TotalVentasResponse
  endpoint:
    path: /totales
    method: GET
    data_selector: response
- name: VentaResponse
  endpoint:
    path: /venta
    method: POST
    data_selector: response
- name: AnulacionResponse
  endpoint:
    path: /anulacion
    method: POST
    data_selector: response
- name: ReprintVoucherResponse
  endpoint:
    path: /reprint
    method: GET
    data_selector: response
- name: requestForLoadKeys
  endpoint:
    method: POST
- name: requestForCloseTerminal
  endpoint:
    method: POST
- name: requestForSales
  endpoint:
    method: POST
- name: requestForAnnulment
  endpoint:
    method: POST
- name: requestForRePrint
  endpoint:
    method: POST
- name: requestForTotals
  endpoint:
    method: POST
- name: Device Info
  endpoint:
    path: requestForDeviceInfo
    method: POST
    data_selector: response
    params: {}
- name: Scanner QR
  endpoint:
    path: requestForScannerQR
    method: POST
    data_selector: response
    params: {}
- name: Scanner Hw
  endpoint:
    path: requestForScannerHw
    method: POST
    data_selector: response
    params: {}
- name: Magnetic Reader
  endpoint:
    path: requestForMag
    method: POST
    data_selector: response
    params: {}
- name: NFC Reader
  endpoint:
    path: requestForNFC
    method: POST
    data_selector: response
    params: {}
- name: QR Generation
  endpoint:
    path: requestForQrView
    method: POST
    data_selector: response
    params: {}
- name: Printer
  endpoint:
    path: requestForPrinter
    method: POST
    data_selector: response
    params: {}
- name: Printer QR
  endpoint:
    path: requestForPrintQr
    method: POST
    data_selector: response
    params: {}
- name: Printer Image
  endpoint:
    path: requestForPrintImage
    method: POST
    data_selector: response
    params: {}
- name: Printer PDF417
  endpoint:
    path: requestForPrintPdf417
    method: POST
    data_selector: response
    params: {}
- name: transaction
  endpoint:
    path: /Webpay/transaction
    method: POST
- name: mall_transaction
  endpoint:
    path: /Webpay/mall_transaction
    method: POST
- name: cuadratura
  endpoint:
    path: /cuadratura
    method: GET
- name: liquidacion
  endpoint:
    path: /liquidacion
    method: GET
- name: voucher
  endpoint:
    path: /voucher
    method: GET
- name: cuadratura
  endpoint:
    path: /cuadratura
    method: GET
- name: liquidacion
  endpoint:
    path: /liquidacion
    method: GET
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: response
    params: {}
- name: capture
  endpoint:
    path: /capture
    method: POST
    data_selector: response
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: response
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: response
    params: {}
- name: capture
  endpoint:
    path: /capture
    method: POST
    data_selector: response
    params: {}
- name: transaction
  endpoint:
    path: /rswebpaytransaction/api/webpay/v1.2/transactions
    method: POST
    data_selector: null
    params: {}
- name: transbank_pos_sdk
  endpoint:
    path: /transbank/pos/sdk
    method: GET
    data_selector: records
    params: {}
- name: close_transaction
  endpoint:
    path: /close
    method: POST
    data_selector: CloseResponse
- name: sale_transaction
  endpoint:
    path: /sale
    method: POST
    data_selector: SaleResponse
- name: last_sale_transaction
  endpoint:
    path: /multiCodeLastSale
    method: POST
    data_selector: MultiCodeLastSaleResponse
- name: poll
  endpoint:
    path: /poll
    method: GET
    data_selector: Booleano
- name: set_normal_mode
  endpoint:
    path: /set_normal_mode
    method: GET
    data_selector: Booleano
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: response
    params: {}
- name: close
  endpoint:
    path: /close
    method: POST
    data_selector: response
    params: {}
- name: last_sale
  endpoint:
    path: /last_sale
    method: POST
    data_selector: response
    params: {}
- name: multi_code_last_sale
  endpoint:
    path: /multi_code_last_sale
    method: POST
    data_selector: response
    params: {}
- name: totals
  endpoint:
    path: /totals
    method: POST
    data_selector: response
    params: {}
- name: details
  endpoint:
    path: /details
    method: POST
    data_selector: response
    params: {}
- name: multi_code_details
  endpoint:
    path: /multi_code_details
    method: POST
    data_selector: response
    params: {}
- name: load_keys
  endpoint:
    path: /load_keys
    method: POST
    data_selector: response
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: response
    params: {}
- name: capture
  endpoint:
    path: /captures
    method: POST
    data_selector: response
    params: {}
- name: reverse
  endpoint:
    path: /reverses
    method: POST
    data_selector: response
    params: {}
- name: mensaje_de_venta_multicodigo
  endpoint:
    path: /multiCodeSale
    method: POST
    data_selector: response
- name: mensaje_de_ultima_venta
  endpoint:
    path: /lastSale
    method: POST
    data_selector: response
- name: close
  endpoint:
    path: /close
    method: POST
    data_selector: response
    params: {}
- name: loadKeys
  endpoint:
    path: /loadKeys
    method: POST
    data_selector: response
    params: {}
- name: poll
  endpoint:
    path: /poll
    method: POST
    data_selector: response
    params: {}
- name: initialization
  endpoint:
    path: /initialization
    method: POST
    data_selector: response
    params: {}
- name: initializationResponse
  endpoint:
    path: /initializationResponse
    method: POST
    data_selector: response
    params: {}
- name: Comando Requerimiento de validación respuesta de transacción
  endpoint:
    path: /comando/0560
    method: GET
    data_selector: datos
    params: {}
- name: Solicitud comando Cierre batch
  endpoint:
    path: /comando/0600
    method: GET
    data_selector: datos
    params: {}
- name: Validación comando Cierre batch
  endpoint:
    path: /comando/0700
    method: GET
    data_selector: datos
    params: {}
- name: transaction_validation_request
  endpoint:
    path: /transaction/validation/request
    method: POST
    data_selector: request
    params:
      LARGO_DATA: '4'
      Comando: '0520'
      Indicador de contexto: '16'
      Largo mensaje: '4'
      Mensaje SPDH: '2048'
- name: transaction_validation_response
  endpoint:
    path: /transaction/validation/response
    method: POST
    data_selector: response
    params:
      LARGO_DATA: '4'
      Comando: '0530'
      Código Respuesta: '2'
      Indicador de contexto: '16'
      Código de comercio: '12'
      Terminal ID: '16'
      Número Ticket/Boleta: '20'
      Empleado: '4'
      Código Autorización: '8'
      Monto: '18'
      Monto vuelto: '18'
      Numero de Cuotas: '2'
      Monto Cuota: '14'
      Últimos 4 Dígitos Tarjeta: '4'
      Número Operación: '6'
      Glosa Tipo de Tarjeta: '7'
      Fecha Contable: '6'
      Número de Cuenta: '19'
      Abreviación de la tarjeta: '2'
      Fecha Transacción: '6'
      Hora Transacción: '6'
      Campo Impresión: '8192'
      Transacción premiada: '1'
      Tipo promoción: '1'
      Código promoción: '8'
      Nombre promoción: '21'
      Glosa vale premio: '62'
      Texto vale premio: '27'
      Flag permite cuotas: '1'
      Flag de gracia: '1'
      Flag C2C: '1'
      Flag C3C: '1'
      Flag NCuotas: '1'
      Flag máximo de cuotas: '2'
      Tipo de menú: '2'
      Indicador transacción con gracia: '1'
      Tipo cuotas: '1'
      Tasa aplicada: '4'
      Glosa tipo cuota: '30'
      Glosa tipo cuota 2: '22'
      Glosa promoción: '10'
      Id promoción: '8'
      Flag imprimir tasa: '1'
      Periodo diferido: '3'
      Diferido 1 periodo: '3'
      Diferido 1 valor tasa: '4'
      Diferido 1 valor cuota: '14'
      Diferido 2 periodo: '3'
      Diferido 2 valor tasa: '4'
      Diferido 2 valor cuota: '14'
      Diferido 3 periodo: '3'
      Diferido 3 valor tasa: '4'
      Diferido 3 valor cuota: '14'
      Número de secuencia transacción original: '9'
      Código respuesta Transbank: '3'
      Glosa respuesta Transbank: '48'
      Flag transacción con PIN: '1'
      Nombre tarjetahabiente: '26'
      Flag tipo voucher: '1'
      Flag modalidad cuotas: '1'
      Glosa transacción afecta a ahorro: '40'
      Número de secuencia: '9'
      Flag mensaje terminal: '1'
      Largo mensaje: '4'
      Mensaje SPDH Venta/Reversa: '2048'
- name: 1100 - Comando despliegue mensaje
  endpoint:
    path: /1100
    method: GET
    data_selector: response
    params: {}
- name: CONN - Comando Conexión PINPAD – Caja
  endpoint:
    path: /CONN
    method: GET
    data_selector: response
    params: {}
- name: ECHO - Comando Echo Caja – PINPAD
  endpoint:
    path: /ECHO
    method: GET
    data_selector: response
    params: {}
- name: ISES - Comando Inicio de Sesión Caja- PINPAD
  endpoint:
    path: /ISES
    method: GET
    data_selector: response
    params: {}
- name: FSES - Comando Fin de Sesión Caja – PINPAD
  endpoint:
    path: /FSES
    method: GET
    data_selector: response
    params: {}
- name: VOUC - Comando Solicitud Impresión Voucher Caja – PINPAD
  endpoint:
    path: /VOUC
    method: GET
    data_selector: response
    params: {}
- name: REIM - Comando Solicitud Reimpresión Último Voucher PINPAD – Caja
  endpoint:
    path: /REIM
    method: GET
    data_selector: response
    params: {}
- name: REST - Comando Reset Socket Caja – PINPAD
  endpoint:
    path: /REST
    method: GET
    data_selector: response
    params: {}
- name: LKEY - Comando Carga de Llave PINPAD – Caja
  endpoint:
    path: /LKEY
    method: GET
    data_selector: response
    params: {}
- name: 0000 - Comando TEST PINPAD – Caja
  endpoint:
    path: /0000
    method: GET
    data_selector: response
    params: {}
- name: CLSB - Comando Cierre Batch PINPAD – Caja
  endpoint:
    path: /CLSB
    method: GET
    data_selector: response
    params: {}
notes:
- The response must be used to create a field named tokenComercio in a form.
- Canal seguro a través de TLSv1.2 para la comunicación del cliente con Webpay.
- La API REST de Patpass está protegida para garantizar que solamente comercios autorizados
  por Transbank hagan uso de las operaciones disponibles.
- El uso de una clase abstracta en común para las distintas actividades del app es
  recomendado, pero esto queda a decisión del desarrollador.
- Se han creado proyectos de ejemplo para Android (10.x en adelante) y iOS (16.x en
  adelante) para que puedas probar antes de comenzar con tu desarrollo.
- Para usar el plugin en el ambiente de producción, necesitas tener tu llave secreta.
- Esta llave secreta es una contraseña de tu código de comercio, por lo que no debes
  compartirla.
- El plugin viene configurado en el ambiente de Integración de Transbank para pruebas
  de pago
- La llave secreta es necesaria para operar en ambiente de producción
- El plugin viene configurado en el ambiente de Integración de Transbank
- No se usa dinero real en ambiente de pruebas
- Ensure to handle both GET and POST responses for different API versions.
- SDK must be configured to point to the desired environment (production/integration).
- Timeout maximo de espera por comando 540 de 125seg, ya que hay hasta 4 interacción
  con el usuario.
- La caja envía el requerimiento y espera como respuesta <ACK>/<NAK>, en caso de que
  llegue un <NAK>, debe reintentar el envío del requerimiento 2 veces.
- El POS al recibir el <ACK> vuelve al inicio a esperar un nuevo comando, para el
  caso que recibe un <NAK> vuelve a enviar la respuesta 2 veces más.
- Timeout máximo de espera por comando 540 de 125seg, ya que hay hasta 4 interacción
  con el usuario.
- Commands are sent to the pinpad for various administrative tasks.
- 'Códigos de barra soportados: CODE39, CODE128, EAN, UPC.'
- Timeout máximo de espera por comando 1610 es el configurado en la solicitud (1600).
- Timeout máximo de espera por comando 110 de 35seg.
- Timeout máximo de espera por comando 210 de 125seg.
- Timeout máximo de espera por comando 410 de 20seg.
- Timeout máximo de espera por comando 510 de 125seg, ya que hay hasta 4 interacción
  con el usuario.
- Indicates the start and end of the command using STX and ETX.
- Response codes are defined in the response codes table.
- Este plugin viene configurado en el ambiente de Integración de Transbank
- La llave secreta es como la contraseña de tu código de comercio, por lo que no debes
  compartirla
- El paso a producción es de 24 hrs si el comercio se encuentra validado y la documentación
  enviada está correcta.
- Se recomienda tener un timestamp para cada comando que envíe la caja y respuesta
  del POS.
- Utiliza una llave secreta (Api Key Secret) para autenticación.
- 'Ambientes disponibles: Integración y Producción.'
- Para las transacciones Webpay en el ambiente de integración se deben usar tarjetas
  de prueba.
- La llave secreta (Api Key Secret) es 579B532A7440BB0C9079DED94D31EA1615BACEB56610332264630D42D0A36B1C
- Requires a commercial code and secret key for production environment.
- Los servicios Web de Transbank están protegidos para garantizar que solamente miembros
  autorizados por Transbank hagan uso de las operaciones disponibles.
- El mecanismo de seguridad implementado está basado en un canal de comunicación seguro
  TLS 1.2 sumado a WS-Security (para servicios SOAP) o API Keys + Mensajes firmados
  (para servicios REST).
- 'El no uso de HTTPS puede provocar problemas en las redirecciones en navegadores
  modernos (ej: Safari en iOS 11.3 o superior), impidiendo que se complete el flujo
  de pago.'
- Uses RS232 serial communication
- Baud rate is configurable between 1200bps and 115200bps
- If an error occurs while executing the action in the POS, a TransbankTotalsException
  will be thrown in .NET and Java.
- If an error occurs while executing the action in the POS, a TransbankSalesDetailException
  will be thrown in .NET and Java.
- If an error occurs while executing the action in the POS, a TransbankMultiCodeDetailException
  will be thrown.
- If an error occurs while executing the action in the POS, a TransbankLoadKeysException
  will be thrown.
- If the POS receives an <ACK>, it indicates that the POS is operational and ready
  to receive commands.
- Los SDK deben configurarse explícitamente para apuntar al ambiente que quieras utilizar
  (producción / integración).
- Uses API key for authentication
- 'Transacción Completa, le ofrece al comercio elegir una o ambas de las siguientes
  funcionalidades: Autorización en línea y captura simultánea, en la que se realiza
  el cargo al tarjetahabiente de inmediato.'
- Autorización en línea y captura diferida, en la que se efectúa una reserva de crédito
  sobre un valor estimado del producto y/o servicio a adquirir por el tarjetahabiente.
- Los voucher serán generados por el POS Autoservicio cuando el parámetro 'Enviar
  voucher' sea verdadero.
- The POS requires a RS232 port or exclusive USB entry for the POS device.
- A single power point of 220v is required for the POS.
- Este producto requiere alto conocimiento técnico y está enfocado en comercios que
  ya posean usuarios de POS estándar y posean una solución robusta de caja.
- Este producto no se encuentra dentro de la oferta pública de Transbank. Para su
  implementación, el establecimiento comercial debe solicitarlo directamente con su
  ejecutivo comercial.
- Ambiente de integración de Transbank configurado para pruebas sin uso de dinero
  real.
- Llave secreta es como la contraseña de tu código de comercio, no debe ser compartida.
- JSON format is required for responses sent to the PWA.
- The response codes must match with the library's response codes.
- Las instancias de la interfaz Printer están limitadas internamente.
- Las funciones deben ser llamadas dentro de una corrutina.
- Todas las aplicaciones que utilicen este SDK deben pasar por un proceso de certificación
  que garantice su buen uso.
- Es importante que el POS esté conectado a internet para realizar la carga de llaves.
- Tener instalada la App CEI.
- Timeout en producción es de 4 minutos y en integración es de 10 minutos.
- La redirección en la versión 1.1 y superiores es por GET.
- Los archivos de cuadratura y liquidación son colocados periódicamente en una casilla
  SFTP.
- Los comercios deberán utilizar alguna aplicación del tipo cliente SFTP disponible
  en el mercado.
- Los vouchers deben contener exclusivamente la información solicitada en este manual.
- Cualquier excepción debe ser autorizada y formalizada por Transbank.
- Los vouchers de premio NO deben ser impresos en papel auto copiativo.
- Todos los campos “Fecha de Proceso” explicados en este documento aplican a la Fecha
  de Proceso del archivo
- Para efectos de parear transacciones, solo se deben considerar los registros con
  código de transacción “10” (Compras), “13” (WebPay) y “18” (Compra con vuelto).
- No olvides colocar tu POS en modo POS integrado.
- El resultado del cierre de caja se entrega en la forma de un objeto CloseResponse
- El resultado de la venta se entrega en la forma de un objeto SaleResponse
- El resultado de la transacción última venta devuelve los mismos datos que una venta
  normal y se entrega en forma de un objeto MultiCodeLastSaleResponse
- Responses may vary based on success or failure of the transaction
- Requires setup of connected app in the API
- Todas las peticiones que hagas deben incluir el código de comercio y la llave secreta
  entregada por Transbank, actuando ambas como las credenciales que autorizan distintas
  operaciones.
- La comunicación a través de una puerta serial `RS232` tiene velocidades que van
  desde los 1200 Bps hasta 115200 Bps (`8N1`).
- Si cambia el tipo de comunicación de serial a USB, quedará seteada automáticamente
  a la velocidad anteriormente descrita.
- Solo los códigos de comercios virtuales o hijos pueden realizar ventas, el código
  de comercio del POS es distinto y no puede realizar ventas.
- La implementación de TLS realizada es la de autenticación mutua two-way.
- Se debe usar la autenticación doble (Two-way TLS) para darle mayor seguridad a proceso.
- Si por algún motivo el pinpad responde un comando en un formato que no corresponde,
  la caja debe solicitar reversa.
- Timeout de espera por comando 560 de 125seg, ya que hay hasta 4 interacción con
  el usuario
- Comandos deben ser ejecutados con formato específico según el manual de especificaciones
  técnicas.
errors:
- '400: El mensaje JSON es inválido. Puedes ser que no corresponda a un mensaje bien
  estructurado o que contenga un campo no esperado.'
- '401: No autorizado. API Key y/o API Secret inválidos'
- '404: La transacción no ha sido encontrada.'
- '405: Método no permitido.'
- '406: No fue posible procesar la respuesta en el formato que el cliente indica.'
- '415: Tipo de mensaje no permitido.'
- '422: El requerimiento no ha podido ser procesado ya sea por validaciones de datos
  o por lógica de negocios.'
- '500: Ha ocurrido un error inesperado.'
- '304: Validación de campos de entrada nulos'
- '245: Código de comercio no existe'
- '22: El comercio no se encuentra activo'
- '316: El comercio indicado no corresponde al certificado o no es hijo del comercio
  Mall en caso de transacciones MALL'
- '308: Operación no permitida'
- '274: Transacción no encontrada'
- '16: La transacción no es de captura diferida'
- '292: La transacción no está autorizada'
- '284: Periodo de captura excedido'
- '310: Transacción reversada previamente'
- '309: Transacción capturada previamente'
- '311: Monto a capturar excede el monto autorizado'
- '315: Error del autorizador'
- '401 Unauthorized: Check API key or authorization details.'
- '400 Bad Request: Verify request parameters and values.'
- '401 Unauthorized: Recheck API key or permissions.'
- '400 Bad Request: Verify request parameters.'
- 'Timeout1 ACK: Es el tiempo de espera del ACK o NAK para reintentar el envío del
  requerimiento por la caja. 10 segundos'
- 'Timeout 2 Resp: Es el tiempo de espera del ACK o NAK para reintentar el envío de
  la respuesta por el PINPAD. El tiempo depende de cada comando.'
- 'Timeout 3 ACK: Es el tiempo de espera del ACK o NAK para reintentar el envío de
  la respuesta por el PINPAD. 10 segundos'
- 'Invalid command format: Ensure correct command length and structure.'
- 'Timeout: Command execution exceeded maximum wait time.'
- 'Connection error: Unable to communicate with the pinpad.'
- '00: RESPUESTA OK'
- '83: NO EXISTE CODIGO DE MENSAJE'
- '84: TARJETA NO SOPORTADA'
- '85: REVERSA APLICADA'
- '86: ERROR DE LECTURA'
- '87: PINPAD SIN MASTER KEY'
- '88: TARJETA NO PERMITE VENTA ONUS'
- '89: TRANSACCIÓN DECLINADA POR LA TARJETA CHIP'
- '90: TARJETA NO PERMITIDA PARA EL MODO SELECCIONADO'
- '91: ERROR CANTIDAD DE CUOTAS'
- '92: NO COINCIDE CON TARJETA DE PRIMER “TAPEO”'
- '93: ERROR DE MONTO MÍNIMO'
- '94: ERROR DE VALIDACIÓN MONTO VUELTO'
- '95: ERROR ID DE CONTEXTO'
- '96: NO COINCIDE LOS 4 ULTIMOS DIGITOS'
- '97: LA TRANSACCIÓN NO PERMITE REVERSA'
- '98: ERROR DE FORMATO DEL MENSAJE'
- '99: CANCELACIÓN POR LA TECLA [CANCEL] o TIMEOUT'
- '400: El mensaje JSON es inválido.'
- '422: El requerimiento no ha podido ser procesado.'
- '401 Unauthorized: Revisa tu Api Key o llame secreta.'
- '400 Bad Request: Verifica los parámetros enviados.'
- 'VALIDATION_ERROR: Revisa los datos ingresados para la validación.'
- '401 Unauthorized: Check your API Key and Api Key Secret'
- '400 Bad Request: Verify your request parameters'
- '403 Forbidden: Ensure you have access to the requested resource'
- 'TransbankMultiCodeSaleException: Occurs when there''s an error executing the action
  in the POS'
- 'TransbankLastSaleException: Occurs when there''s an error executing the action
  in the POS'
- 'TransbankLoadKeysException: Error occurred during load keys operation.'
- 'TransbankException: Error occurred during poll or set normal mode operation.'
- '400 Bad Request: Check the parameters being sent'
- '401 Unauthorized: Invalid API key'
- '500 Internal Server Error: Retry the request'
- '-1: Rechazo - Posible error en el ingreso de datos de la transacción'
- '-2: Rechazo - Se produjo fallo al procesar la transacción, este mensaje de rechazo
  se encuentra relacionado a parámetros de la tarjeta y/o su cuenta asociada'
- '-3: Rechazo - Error en Transacción'
- '-4: Rechazo - Rechazada por parte del emisor'
- '-5: Rechazo - Transacción con riesgo de posible fraude'
- '898 (MAC inválido): Invalid MAC detected in the request message.'
- '989: Response code for reversal transactions.'
- '0: Approved'
- '1: Rejected'
- '3: Connection Failed'
- '4: Transaction Already Canceled'
- '5: No Transaction to Cancel'
- '6: Card Not Supported'
- '9: Error Reading Card'
- '10: Amount Less Than Minimum Allowed'
- 'REQUEST_CANCELLED_WITHOUT_ERROR: Implement your logic, print with error'
- 'REQUEST_CANCELLED_WITH_ERROR: Implement your logic, print with error'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'TransbankCloseException: Si ocurre algún error al ejecutar la acción en el POS
  se lanzará una excepción del tipo TransbankCloseException'
- 'TransbankSaleException: Si ocurre algún error al ejecutar la acción en el POS se
  lanzará una excepción del tipo TransbankSaleException'
- 'TransbankMultiCodeLastSaleException: Si ocurre algún error al ejecutar la acción
  en el POS se lanzará una excepción del tipo TransbankMultiCodeLastSaleException'
- '11: No transactions in memory'
- 'ErrorCodes: Check the response table for error codes'
- '401 Unauthorized: Check API key'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Contact support'
- '0: Transacción aprobada'
- '-96: tbk_user no existente'
- '-97: Límites Oneclick, máximo monto diario de pago excedido'
- '-98: Límites Oneclick, máximo monto de pago excedido'
- '-99: Límites Oneclick, máxima cantidad de pagos diarios excedido'
auth_info:
  mentioned_objects:
  - Api Key
  - Api Key Secret
client:
  base_url: https://webpay3g.transbank.cl
  auth:
    type: oauth2
    header_name: Tbk-Api-Key-Id
    location: header
    headers:
      Tbk-Api-Key-Id: Código de comercio
      Tbk-Api-Key-Secret: Llave secreta
      Content-Type: application/json
    flow: refresh_token
    token_url: https://login.transbank.com/oauth2/token
    client_id: '{{ dlt.secrets[''transbank_client_id''] }}'
    client_secret: '{{ dlt.secrets[''transbank_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''transbank_refresh_token''] }}'
  headers:
    Content-Type: application/json
    Tbk-Api-Key-Secret: Llave secreta
    Commercecode: '28299257'
    Authorization: cxxXQgGD9vrVe4M41FIt
    Accept: application/json
  paginator:
    type: timeout
    default_page_size: 10
source_metadata: null
