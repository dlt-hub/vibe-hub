resources:
- name: workflows
  endpoint:
    path: /workflows/async
    method: POST
- name: webhook
  endpoint:
    path: /webhooks/
    method: GET
- name: export_records
  endpoint:
    path: /public/api/v1/records/export
    method: GET
- name: request_sent
  endpoint:
    path: /requests/:request_id/send
    method: POST
- name: request_signed
  endpoint:
    path: /v1.1/requests/:request_id
    method: GET
- name: request_completed
  endpoint:
    path: /v1.1/requests/:request_id
    method: GET
- name: relationship_types
  endpoint:
    path: /entities/relationship-types
    method: GET
- name: records
  endpoint:
    path: /public/api/v1/records
    method: GET
    data_selector: list
    params:
      lastUpdated: updated_at
- name: create_record
  endpoint:
    path: /records
    method: POST
- name: attachment
  endpoint:
    path: /records/{recordId}/attachments/{attachmentKey}
    method: POST
    data_selector: response
    params: {}
- name: users
  endpoint:
    path: /Users
    method: GET
    data_selector: resources
    params:
      startIndex: '1'
- name: workflow_participants
  endpoint:
    path: /workflows//participants
    method: GET
- name: data_export
  endpoint:
    path: /public/api/v1/exports
    method: POST
- name: approval_requests
  endpoint:
    path: /workflows//approval-requests
    method: GET
- name: workflows
  endpoint:
    path: /workflows
    method: GET
- name: download_export
  endpoint:
    path: /public/api/v1/exports//download
    method: GET
- name: workflow_schemas
  endpoint:
    path: /workflow-schemas/
    method: GET
    data_selector: fields
    params: {}
- name: attachments
  endpoint:
    path: /records//attachments/
    method: GET
- name: export_job
  endpoint:
    path: /exports
    method: POST
    data_selector: exportType
    params: {}
- name: export_job_status
  endpoint:
    path: /exports/$JOB_ID
    method: GET
    data_selector: status
    params: {}
- name: export_job_download
  endpoint:
    path: /exports/$JOB_ID/download
    method: GET
    data_selector: file
    params: {}
- name: records
  endpoint:
    path: /records
    method: GET
- name: verification_key
  endpoint:
    path: /public/api/v1/webhooks/verification-key
    method: GET
    data_selector: ''
- name: workflowsLaunchConfiguration
  endpoint:
    path: /workflows_launch_configuration
    method: POST
- name: workflowsLaunched
  endpoint:
    path: /workflows_launched
    method: POST
- name: workflowsApprovals
  endpoint:
    path: /workflows_approvals
    method: POST
- name: workflowsSigner
  endpoint:
    path: /workflows_signer
    method: POST
- name: workflowsCompleted
  endpoint:
    path: /workflows_completed
    method: POST
- name: workflowsCancelled
  endpoint:
    path: /workflows_cancelled
    method: POST
- name: workflowsUpdated
  endpoint:
    path: /workflows_updated
    method: POST
- name: records
  endpoint:
    path: /records
    method: POST
- name: smart_import
  endpoint:
    path: /records/smart-import
    method: POST
    data_selector: response
    params: {}
- name: smart_import_with_id
  endpoint:
    path: /records/smart-import/{importId}
    method: POST
    data_selector: response
    params: {}
- name: comment
  endpoint:
    path: /public/api/v1/workflows//comment
    method: POST
- name: entities
  endpoint:
    path: /public/api/v1/entities
    method: GET
- name: comments
  endpoint:
    path: /workflows//comments
    method: POST
- name: webhook_verification_key
  endpoint:
    path: /webhooks/verification-key
    method: GET
    data_selector: data
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
- name: launch_workflow
  endpoint:
    path: /workflows
    method: POST
- name: launch_workflow_async
  endpoint:
    path: /workflows/async
    method: POST
- name: comments
  endpoint:
    path: /workflows//comments
    method: GET
- name: PSClickWrap
  endpoint:
    path: /api/pactsafe/clickwrap
    method: POST
    data_selector: clickwrap
- name: workflow_completed
  endpoint:
    path: /webhooks/workflow_completed
    method: POST
- name: retrieve_record
  endpoint:
    path: /api/v1/records
    method: GET
- name: update_issue_jira
  endpoint:
    path: /api/v1/jira/update_issue
    method: POST
- name: turn_history
  endpoint:
    path: /workflows//turn-history
    method: GET
    data_selector: turns
- name: records
  endpoint:
    path: /records
    method: GET
    data_selector: list
    params:
      lastUpdated: lastUpdated
- name: cancel_workflow
  endpoint:
    path: /public/api/v1/workflows//cancel
    method: POST
- name: audit_log
  endpoint:
    path: /audit_log
    method: GET
    data_selector: audit_log
    params: {}
- name: workflow_activities
  endpoint:
    path: /workflow_activities
    method: GET
    data_selector: workflow_activities
    params: {}
- name: Groups
  endpoint:
    path: /Groups
    method: GET
- name: email_thread
  endpoint:
    path: /workflows//emails/
    method: GET
- name: create_smart_import
  endpoint:
    path: /public/api/v1/records/smart-import
    method: POST
    params:
      attachment: optional
      recordType: Imported
- name: add_record_to_import_job
  endpoint:
    path: /public/api/v1/records/smart-import/[:importID]
    method: POST
    params:
      attachment: optional
      recordType: Imported
- name: get_prediction_status
  endpoint:
    path: /public/api/v1/records/smart-import/[:importID]
    method: GET
    params: {}
- name: users
  endpoint:
    path: /Users
    method: GET
    data_selector: users
    params:
      startIndex: '1'
- name: export_activity
  endpoint:
    path: /tasks/export/activity
    method: POST
    data_selector: data
    params:
      filter: created_time>=2020-10-10 and event_type==agreed
      fields: id,signer_id,created_time,connection_data.remote_address,connection_data.page_title,custom_data.vip
      no_count: 'true'
      lean: 'true'
- name: activity
  endpoint:
    path: /activity
    method: GET
    data_selector: data
    params:
      filter: event_type==agreed and created_time>=2020-10-14
      no_count: 'true'
      lean: 'true'
- name: Update Workflow Metadata
  endpoint:
    path: /public/api/v1/workflows/{{[WORKFLOW_ID]}}/attributes
    method: PATCH
- name: Update Approval on Workflow
  endpoint:
    path: /public/api/v1/workflows/{{[WORKFLOW_ID]}}/approvals/[APPROVER_ROLE_ID]
    method: PATCH
- name: data_export
  endpoint:
    path: /exports
    method: POST
- name: cancel_signature_request
  endpoint:
    path: /workflows//sign-status/cancel-signature-request
    method: POST
- name: attachments
  endpoint:
    path: /workflows//emails//attachments/
    method: GET
- name: records
  endpoint:
    path: /records/
    method: GET
- name: userinfo
  endpoint:
    path: /oauth/userinfo
    method: GET
- name: Ironclad Contract
  endpoint:
    path: /services/data/vXX.X/sobjects/customrecord_ironclad_contract
    method: GET
    data_selector: records
- name: webhooks
  endpoint:
    path: /public/api/v1/webhooks
    method: GET
- name: activity_agreed
  endpoint:
    path: /webhooks/activity/agreed
    method: POST
- name: version_published
  endpoint:
    path: /webhooks/version/published
    method: POST
- name: group_published
  endpoint:
    path: /webhooks/group/published
    method: POST
- name: activity_displayed
  endpoint:
    path: /webhooks/activity/displayed
    method: POST
- name: request_sent
  endpoint:
    path: /webhooks/request/sent
    method: POST
- name: request_signed
  endpoint:
    path: /webhooks/request/signed
    method: POST
- name: request_complete
  endpoint:
    path: /webhooks/request/complete
    method: POST
- name: request_expired
  endpoint:
    path: /webhooks/request/expired
    method: POST
- name: smart_import
  endpoint:
    path: /public/api/v1/records/smart-import
    method: GET
- name: workflow_approval_status_changed
  endpoint:
    path: /public/api/v1/workflows/{{[WORKFLOW_ID]}}
    method: GET
    data_selector: webhookResponse.body
    params: {}
- name: workflow
  endpoint:
    path: /public/api/v1/workflows/{workflowId}/comment
    method: POST
    data_selector: workflow
    params: {}
- name: approvals
  endpoint:
    path: /public/api/v1/workflows/{workflowId}/approvals
    method: GET
    data_selector: approvals
    params: {}
- name: users
  endpoint:
    path: /Users/
    method: GET
- name: launch_workflow
  endpoint:
    path: /public/api/v1/workflows/async
    method: POST
    data_selector: asyncJobId
- name: check_workflow_status
  endpoint:
    path: /public/api/v1/workflows/async/{asyncJobId}
    method: GET
    data_selector: status
- name: comments
  endpoint:
    path: /workflows//comments/
    method: GET
- name: approval_event
  endpoint:
    path: /webhook/approval_status_changed
    method: POST
    data_selector: event
    params: {}
- name: userinfo
  endpoint:
    path: /oauth/userinfo
    method: GET
    data_selector: ''
- name: workflows
  endpoint:
    path: /workflows/{workflowID}
    method: GET
    data_selector: data.attributes
    params: {}
- name: PSClickWrap
  endpoint:
    path: /ps-click-wrap
    method: POST
    data_selector: null
    params: {}
- name: PSBrowseWrap
  endpoint:
    path: /ps-browse-wrap
    method: POST
    data_selector: null
    params: {}
- name: workflows
  endpoint:
    path: /workflows/{workflowId}
    method: GET
    data_selector: data.attributes
    params: {}
- name: comment
  endpoint:
    path: /workflows/{workflowId}/comment
    method: POST
    data_selector: comment
    params: {}
- name: approvals
  endpoint:
    path: /workflows/{workflowId}/approvals
    method: GET
    data_selector: data.approvalGroups
    params: {}
- name: approve
  endpoint:
    path: /workflows/{workflowId}/approvals/{approvalId}
    method: PATCH
    data_selector: status
    params: {}
- name: workflow_signatures
  endpoint:
    path: /workflows//signatures
    method: GET
- name: workflows
  endpoint:
    path: /workflows/
    method: GET
- name: approvals
  endpoint:
    path: /public/api/v1/workflows//approvals
    method: GET
- name: Create a Workflow Synchronously
  endpoint:
    path: /public/api/v1/workflows
    method: POST
- name: Create a Comment on a Workflow
  endpoint:
    path: /public/api/v1/workflows/{{webResponse.body.id}}/comment
    method: POST
- name: documents
  endpoint:
    path: /workflows//documents/
    method: POST
- name: records
  endpoint:
    path: /public/api/v1/records
    method: GET
- name: groups
  endpoint:
    path: /Groups
    method: GET
- name: webhook_event
  endpoint:
    path: /webhook
    method: POST
- name: groups
  endpoint:
    path: /Groups
    method: GET
    data_selector: records
- name: smart_import
  endpoint:
    path: /public/api/v1/records/smart-import
    method: POST
- name: workflow_launched
  endpoint:
    path: /workflow/launched
    method: POST
    data_selector: payload
    params: {}
- name: workflow_updated
  endpoint:
    path: /workflow/updated
    method: POST
    data_selector: payload
    params: {}
- name: workflow_completed
  endpoint:
    path: /workflow/completed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_cancelled
  endpoint:
    path: /workflow/cancelled
    method: POST
    data_selector: payload
    params: {}
- name: workflow_approval_status_changed
  endpoint:
    path: /workflow/approval_status_changed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_attribute_updated
  endpoint:
    path: /workflow/attribute_updated
    method: POST
    data_selector: payload
    params: {}
- name: workflow_comment_added
  endpoint:
    path: /workflow/comment_added
    method: POST
    data_selector: payload
    params: {}
- name: workflow_comment_removed
  endpoint:
    path: /workflow/comment_removed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_comment_updated
  endpoint:
    path: /workflow/comment_updated
    method: POST
    data_selector: payload
    params: {}
- name: workflow_comment_reaction_added
  endpoint:
    path: /workflow/comment_reaction_added
    method: POST
    data_selector: payload
    params: {}
- name: workflow_comment_reaction_removed
  endpoint:
    path: /workflow/comment_reaction_removed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_counterparty_invite_sent
  endpoint:
    path: /workflow/counterparty_invite_sent
    method: POST
    data_selector: payload
    params: {}
- name: workflow_counterparty_invite_revoked
  endpoint:
    path: /workflow/counterparty_invite_revoked
    method: POST
    data_selector: payload
    params: {}
- name: workflow_documents_added
  endpoint:
    path: /workflow/documents_added
    method: POST
    data_selector: payload
    params: {}
- name: workflow_documents_removed
  endpoint:
    path: /workflow/documents_removed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_documents_updated
  endpoint:
    path: /workflow/documents_updated
    method: POST
    data_selector: payload
    params: {}
- name: workflow_documents_renamed
  endpoint:
    path: /workflow/documents_renamed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_document_edited
  endpoint:
    path: /workflow/document_edited
    method: POST
    data_selector: payload
    params: {}
- name: workflow_changed_turn
  endpoint:
    path: /workflow/changed_turn
    method: POST
    data_selector: payload
    params: {}
- name: workflow_paused
  endpoint:
    path: /workflow/paused
    method: POST
    data_selector: payload
    params: {}
- name: workflow_resumed
  endpoint:
    path: /workflow/resumed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_roles_assigned
  endpoint:
    path: /workflow/roles_assigned
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signature_packet_sent
  endpoint:
    path: /workflow/signature_packet_sent
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signature_packet_signer_first_viewed
  endpoint:
    path: /workflow/signature_packet_signer_first_viewed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signature_packet_signer_viewed
  endpoint:
    path: /workflow/signature_packet_signer_viewed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signature_packet_uploaded
  endpoint:
    path: /workflow/signature_packet_uploaded
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signature_packet_signatures_collected
  endpoint:
    path: /workflow/signature_packet_signatures_collected
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signature_packet_fully_signed
  endpoint:
    path: /workflow/signature_packet_fully_signed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signature_packet_cancelled
  endpoint:
    path: /workflow/signature_packet_cancelled
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signer_added
  endpoint:
    path: /workflow/signer_added
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signer_removed
  endpoint:
    path: /workflow/signer_removed
    method: POST
    data_selector: payload
    params: {}
- name: workflow_signer_reassigned
  endpoint:
    path: /workflow/signer_reassigned
    method: POST
    data_selector: payload
    params: {}
- name: workflow_step_updated
  endpoint:
    path: /workflow/step_updated
    method: POST
    data_selector: payload
    params: {}
- name: Clickwrap Workflow
  endpoint:
    path: /clickwrap/:workflowTemplateId
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
notes:
- Legacy access tokens have been deprecated and will be disabled in the near future.
- Only users with the API configuration permission have the ability to generate legacy
  access tokens.
- 'OAuth Scope required: public.workflows.createWorkflows'
- 'API Tokens: You will need to generate an API token in Ironclad to use Ironclad’s
  API.'
- Several of the solution patterns require specifying an Ironclad user for actions
  (e.g., who is approving, who is commenting, etc.).
- 'OAuth Scope required: public.webhooks.updateWebhooks'
- 'OAuth Scope required: public.records.readRecords'
- Catch a webhook when signature requests are sent, signed, and completed.
- Failed webhook events will retry on a regular cadence for up to 24 hours.
- Fetch records updated in the last week
- 'API Key Requirement: Our REST API does require an API key to be used on all API
  calls.'
- Your use of the Ironclad API must comply with Ironclad’s API Terms of Use.
- 'OAuth Scope required: public.records.applyContractAction'
- The API requires an `attachment` field, which contains the file data and options.
- The API also requires a `metadata` field, containing metadata about the file being
  added.
- Editing a signer will not cancel a signature request unless your configured signature
  provider is Adobe Sign.
- You cannot update a signer that has already signed via the API for any signature
  provider.
- The client credentials grant does not produce refresh tokens.
- Requests to the Ironclad API must include either the x-as-user-id or x-as-user-email
  header.
- The underlying events are collected and processed in real time.
- The data in the CSV export could have up to 36 hours of delay, as additional processing
  is required to enrich the data.
- Exports are retained for 14 days after their creation.
- 'OAuth Scope required: public.workflows.pauseAndResume'
- 'OAuth Scope required: public.workflows.readParticipants'
- 'OAuth Scope required: public.export.createReports'
- The Data Export feature is part of the paid Security & Data Pro add-on.
- 'OAuth Scope required: public.workflows.readApprovals'
- 'OAuth Scope required: public.workflows.readWorkflows'
- 'OAuth Scope required: public.export.readReports'
- 'OAuth Scope required: scim.users.createUsers'
- Always use these authentication methods over HTTPS (TLS).
- 'OAuth Scope required: public.entities.deleteEntities'
- Exports can only be retrieved within 14 days of creation. Past this point, a new
  export is required.
- 'OAuth Scope required: public.workflows.uploadSignedDocuments'
- 'OAuth Scope required: public.workflows.revertToReview'
- OAuth 2.0 Authorization Framework is used to authenticate API requests.
- 'OAuth Scope required: scim.groups.createGroups'
- The Smart Import API counts towards your Smart Import upload usage.
- Workflows created via API are automatically submitted; users do not fill in the
  launch form.
- Internal user dropdowns are not supported in the Launch API.
- The Ironclad connector's launch workflow action treats all launch form fields as
  required at this time.
- 'OAuth Scope required: public.entities.readEntities'
- 'OAuth Scope required: public.workflows.updateApprovals'
- 'OAuth Scope required: public.workflows.createComments'
- Requires setup of API token for authentication
- 'OAuth Scope required: public.records.deleteRecords'
- Testing should include launching the workflow and running them end-to-end to completion.
- Ironclad's server has an approximately 60 second timeout on requests.
- Consider using the synchronous version for quick testing and normal workflows.
- Consider using the asynchronous version if you encounter timeouts from complex workflows.
- You must specify a signer ID selector that corresponds to the ID of an <input> field
  on the page.
- Ironclad now uses the OAuth 2.0 Authorization Framework to authenticate API requests.
- To use the Ironclad public API, you will need to generate an API token.
- 'OAuth Scope required: public.workflows.cancel'
- 'OAuth Scope required: scim.schemas.readSchemas'
- 'OAuth Scope required: public.records.createAttachments'
- 'OAuth Scope required: public.workflows.createSignatureRecipientUrls'
- 'OAuth Scope required: public.workflows.readEmailCommunications'
- 'OAuth Scope required: scim.groups.readGroups'
- 'OAuth Scope required: public.workflows.readDocuments'
- 'OAuth Scope required: public.records.updateRecords'
- Max file size is 100mb
- Document previews and AI-suggestions are only available for .pdf and .docx files
- 'OAuth Scope required: scim.groups.updateGroups'
- 'OAuth Scope required: public.webhooks.createWebhooks'
- You can only send a packet out for signature if all signers have an associated signature
  or initials tag (tag requirements are dependent on the signature provider).
- 'OAuth Scope required: public.workflows.cancelSignatureRequests'
- The workflow must be in the sign step to access this route.
- You can only send a reminder after the signature packet has been sent out for signature.
- If using Adobe Sign as your signature provider, reminding a signer reminds all unsigned
  signers.
- As of November 22nd, 2024, previous bearer token method of authentication has been
  deprecated.
- Your Ironclad environment will need to have API access enabled.
- You will need to have Smart Import entitlements on your Ironclad instance.
- The previous bearer token method of authentication has been deprecated.
- Use the record type ID customrecord_ironclad_contract to find Ironclad Contract
  records.
- 'OAuth Scope required: public.webhooks.readWebhooks'
- 'Limit Usage: Due to the potential volume of events you may send to Ironclad Clickwrap,
  we generally don''t recommend using this webhook type unless absolutely necessary
  for your workflow as it could lead to many webhooks events.'
- 'OAuth Scope required: public.records.readSmartImportRecords'
- This solution pattern updates Jira after an Ironclad approval.
- Requests made with access tokens resulting from the client credentials grant must
  be made with either the x-as-user-id or x-as-user-email header with a valid user
  ID or user email.
- This guide and any software contained in it should be used at your own risk by individuals
  qualified to evaluate its effectiveness.
- IT IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED.
- 'OAuth Scope required: scim.users.readUsers'
- 'OAuth Scope required: public.records.createSmartImportRecords'
- 'OAuth Scope required: scim.users.deleteUsers'
- This solution pattern pushes Jira approvals and data to Ironclad during the review
  step.
- Use sandbox mode for testing to avoid creating properties in production.
- 'OAuth Scope required: public.entities.updateEntities'
- 'OAuth Scope required: scim.users.updateUsers'
- 'OAuth Scope required: public.entities.readRelationshipTypes'
- 'OAuth Scope required: public.webhooks.deleteWebhooks'
- 'OAuth Scope required: public.workflows.readComments'
- Ensure the approver name matches exactly as configured in Ironclad
- The Approval Name value is a stub in test mode; real values will trigger paths correctly
- If the rate limit is exceeded, the API responds with a 429 Too Many Requests status
  code.
- A basic technique for integrations to gracefully handle limiting is to watch for
  429 status codes and build in a retry mechanism.
- We’d also recommend building some randomness into the backoff schedule to avoid
  a thundering herd effect.
- We generally discourage load testing the application in demo environments because
  API limits are lower in test mode.
- 'OAuth Scope required: public.entities.createEntities'
- Webhooks can be configured directly via the API, and supports verification via signatures
  included in the header.
- 'OAuth Scope required: public.records.readSchemas'
- You must run your web app over HTTPS in order to interact with the PactSafe Activity
  API.
- If you are developing in an AngularCli generated project, you may run into trouble
  using the library.
- Removing a signer will cancel the current packet that is out collecting signatures.
- Uses API key for authorization.
- Ensure to secure the API key.
- 'OAuth Scope required: public.workflows.readSignatures'
- Exported data will be in CSV format by default, but JSON (specifically JSON lines
  aka JSONL) format is available
- Data is available with up to a 36 hour delay
- Real-time reporting is not recommended at this time
- 'OAuth Scope required: public.workflows.readSchemas'
- 'API Tokens: You will need to generate an API token in Ironclad to use Ironclad’s
  API. Tokens can be generated in Ironclad under Your Name > Company Settings > API
  > Access Tokens.'
- Note that your Ironclad environment will need to have API access enabled, otherwise
  this option will not appear in your Company Settings.
- 'OAuth Scope required: public.records.createRecords'
- When developing, 'http://localhost' is a valid redirect URI.
- This will only create new documents. It does not support document versioning.
- To upload a signed document, reference the Create a Signed Document on a Workflow
  endpoint.
- Ironclad now uses the OAuth 2.0 Authorization Framework to authenticate API requests.
  As of November 22nd, 2024, our previous bearer token method of authentication has
  been deprecated.
- Each webhook target URL can only be registered once, with a list of the events it
  will listen for.
- If you need to modify a webhook, you can delete and re-create it.
- Ironclad will retry webhooks for up to three days in the event of an error response.
- Ironclad will attempt to send the POST request, and assume failure if we get a 4xx
  or 5xx response.
- If a webhook gets a 410 response, it will delete itself and not fire again.
- A total of up to twelve retries will be attempted over three days; the time between
  retries is determined by an exponential backoff function using a waiting time of
  sixty seconds and a base factor of two.
- 'OAuth Scope required: scim.groups.deleteGroups'
- Public API access is helpful, but not strictly required to use and embed Clickwrap
  Workflows.
- 'OAuth Scope required: public.workflows.createEmbeddableSignerUrls'
- Tokens can be generated in Ironclad under [Your Name] > Company Settings > API >
  Access Tokens.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Uses Webhooks for integration with middleware systems like Zapier
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Invalid attributes'
- '400: User request header required'
- '400: Legacy Token is not supported without either the x-as-user-id or x-as-user-email
  request header'
- 'Box Smart Import: Unable to verify payload, missing skill primary and/or secondary
  key.'
- 'Box Smart Import: Invalid or no source provided'
- 'Box Smart Import: No auth token provided'
- 'Box Smart Import: Environment variable(s) missing: IRONCLAD_API_KEY and/or IRONCLAD_DOMAIN
  required'
- '401 Unauthorized: Recheck API key or user permissions'
- '429 Too Many Requests: Build in a retry mechanism with exponential backoff.'
- '400 Bad Request: Verify request parameters and body.'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Confirm endpoint and resource IDs.'
auth_info:
  mentioned_objects:
  - public.webhooks.readWebhooks
  - public.entities.readRelationshipTypes
  - scim.users.readUsers
  - public.workflows.readSchemas
  - public.records.readAttachments
  - public.records.readRecords
  - public.entities.readEntities
  - public.workflows.readComments
  - public.workflows.readTurnHistory
  - public.workflows.readEmailCommunications
  - public.records.deleteAttachments
  - IroncladAPIKey
  - BotUserEmail
  - WorkflowTemplateID
  - public.workflows.readApprovals
client:
  base_url: https://api.ironcladapp.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.ironcladapp.com/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    redirect_uri: REDIRECT_URI_HERE
    location: header
    header_name: Authorization
    keyFilename: ./service-account-file.json
    projectId: '{{ dlt.secrets[''BIGQUERY_PROJECT_ID''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  paginator:
    type: none
    page_size_param: count
    default_page_size: 10
  headers:
    Content-Type: application/json
    Authorization: ''
    Accept: application/json
    x-as-user-email: '[SOME_AUTHORIZED_USER@YOUR_COMPANY.COM]'
    accept: application/json
    content-type: application/json
    Pactsafe-Webhook-Token: optional_secret_code
source_metadata: null
