resources:
- name: parties
  endpoint:
    path: /parties
    method: POST
    data_selector: party
- name: parties_update
  endpoint:
    path: /parties/{id}
    method: PUT
    data_selector: party
- name: parties_delete
  endpoint:
    path: /parties/{id}
    method: DELETE
- name: tracks
  endpoint:
    path: /kases/{kase_id}/tracks
    method: GET
    data_selector: tracks
    params: {}
- name: milestones
  endpoint:
    path: /milestones
    method: GET
    data_selector: milestones
    params: {}
- name: attachment
  endpoint:
    path: /attachments
    method: GET
    data_selector: attachments
    params: {}
- name: activity_type
  endpoint:
    path: /api/v1/activity_types
    method: GET
    data_selector: activity_types
- name: site
  endpoint:
    path: /site
    method: GET
    data_selector: site
- name: party
  endpoint:
    path: /parties
    method: GET
    data_selector: parties
- name: parties
  endpoint:
    path: /parties
    method: GET
    data_selector: parties
- name: stages
  endpoint:
    path: /stages
    method: GET
    data_selector: stages
    params: {}
- name: rest_hook
  endpoint:
    path: /rest/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: activity_type_icon
  endpoint:
    path: /activityTypeIcons
    method: GET
    data_selector: activityTypeIcons
    params: {}
- name: country
  endpoint:
    path: /api/countries
    method: GET
    data_selector: countries
    params: {}
- name: pipelines
  endpoint:
    path: /pipelines
    method: GET
    data_selector: pipelines
    params:
      includeDeleted: 'false'
      page: 1
- name: restore_pipeline
  endpoint:
    path: /pipelines/{pipelineId}/restore
    method: POST
    data_selector: pipeline
    params: {}
- name: lost_reason
  endpoint:
    path: /lost_reasons
    method: GET
    data_selector: lost_reasons
- name: filters
  endpoint:
    path: /api/v2/{entity}/filters/results
    method: GET
    data_selector: parties
    params: {}
- name: boards
  endpoint:
    path: /boards
    method: GET
    data_selector: boards
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: taskDefinitions
  endpoint:
    path: /trackDefinitions/taskDefinitions
    method: GET
    data_selector: taskDefinitions
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: task
  endpoint:
    path: /entries/task
    method: GET
    data_selector: entries
    params: {}
- name: note
  endpoint:
    path: /entries/note
    method: GET
    data_selector: entries
    params: {}
- name: email
  endpoint:
    path: /entries/email
    method: GET
    data_selector: entries
    params: {}
- name: note_email_completed_task
  endpoint:
    path: /api/v1/notes
    method: GET
    data_selector: entries
    params: {}
- name: teams
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: tags
  endpoint:
    path: /parties/tags
    method: GET
    data_selector: tags
    params:
      page: 2
- name: team
  endpoint:
    path: /teams
    method: GET
    data_selector: teams
    params: {}
- name: Refering Site
  endpoint: {}
- name: Lead Score
  endpoint: {}
- name: Date of Birth
  endpoint: {}
- name: Industry Sector
  endpoint: {}
- name: Local
  endpoint: {}
- name: milestone
  endpoint:
    path: /milestones
    method: GET
    data_selector: milestones
- name: lostReasons
  endpoint:
    path: /lostReasons
    method: GET
    data_selector: lostReasons
    params: {}
- name: party
  endpoint:
    path: /party
    method: GET
    data_selector: party
    params: {}
- name: category
  endpoint:
    path: /task/categories
    method: GET
    data_selector: categories
    params: {}
- name: parties
  endpoint:
    path: /parties
    method: GET
    data_selector: parties
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: stage
  endpoint:
    path: /api/stages
    method: GET
    data_selector: stages
- name: tag
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: person_titles
  endpoint:
    path: /personTitles
    method: GET
    data_selector: personTitles
    params: {}
- name: create_person_title
  endpoint:
    path: /personTitles
    method: POST
    data_selector: personTitle
    params: {}
- name: delete_person_title
  endpoint:
    path: /personTitles/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: rest_hook
  endpoint:
    path: /restHook
    method: POST
    data_selector: restHook
    params: {}
- name: currency
  endpoint:
    path: /currencies
    method: GET
    data_selector: currencies
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
- name: opportunity
  endpoint:
    path: /opportunities
    method: GET
    data_selector: opportunities
- name: countries
  endpoint:
    path: /countries
    method: GET
    data_selector: countries
    params: {}
- name: custom_field
  endpoint:
    path: /custom_field_definition
    method: GET
    data_selector: fields
    params: {}
- name: rest_hooks
  endpoint:
    path: /api/v2/resthooks
    method: GET
    data_selector: restHooks
- name: specific_rest_hook
  endpoint:
    path: /api/v2/resthooks/{id}
    method: GET
    data_selector: restHook
- name: subscribe_rest_hook
  endpoint:
    path: /api/v2/resthooks
    method: POST
    data_selector: restHook
- name: unsubscribe_rest_hook
  endpoint:
    path: /api/v2/resthooks/{id}
    method: DELETE
- name: pipeline
  endpoint:
    path: /api/v1/pipelines
    method: GET
    data_selector: pipelines
    params: {}
- name: board
  endpoint:
    path: /boards
    method: GET
    data_selector: boards
    params: {}
- name: track_definition
  endpoint:
    path: /path/to/track_definitions
    method: GET
    data_selector: trackDefinitions
    params: {}
notes:
- The API uses JSON for the request.
- Only the details youâ€™re updating need to be included in the payload body.
- The API supports pagination through the 'page' query parameter.
- Requests that return multiple items will be paginated to 50 items by default.
- Page numbering is 1-based.
- This operation requires the authenticated user to have an Administrator role on
  the Capsule account.
- Capsule accounts can have at most 50 custom titles.
- This operation requires the authenticated user has an Administrator role on the
  Capsule account.
- 'Payload delivery fails will be retried 5 times with delays: 5 seconds, 1 minute,
  5 minutes, 15 minutes, 15 minutes'
- Each Capsule user can make up to 4000 requests per hour.
- If you exceed the rate limit, add a one second delay between API requests.
errors:
- 'HTTP/1.1 201 Created: Record created successfully.'
- 'HTTP/1.1 200 OK: Record updated successfully.'
- 'HTTP/1.1 204 No content: Record deleted successfully.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: The specified resource does not exist.'
- '404 NOT FOUND: If any one of the provided ids does not match an existing pipeline'
- 'Invalid request: An error message will be returned'
- 'HTTP 401 Unauthorized: Invalid or expired bearer token'
- 'HTTP 403 Forbidden: Insufficient scope for the request'
- 'HTTP 400 Bad Request: Invalid request parameters'
- '410: Gone'
- 'HTTP/1.1 422 Unprocessable Entity: Validation Failed'
- name must be unique
- '400 Bad Request: Invalid JSON format'
- '401 Unauthorized: Requires authentication'
- '403 Forbidden: Requires additional scope'
- '422 Unprocessable Entity: Validation Failed'
- '429 Too Many Requests: Rate limit reached'
auth_info:
  mentioned_objects:
  - OauthToken
client:
  base_url: https://api.capsulecrm.com/api/v2
  headers:
    Content-Type: application/json
    Accept: application/json
  paginator:
    type: page
    page_size_param: perPage
    default_page_size: 50
  auth:
    type: Bearer Token
    location: header
    header_name: Authorization
    flow: authorization_code
  subdomain: subdomain
source_metadata: null
