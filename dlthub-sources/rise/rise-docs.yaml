resources:
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params:
      limit: '50'
- name: user_details
  endpoint:
    path: /users/{userId}
    method: GET
    data_selector: user
    params: {}
- name: courses
  endpoint:
    path: /courses
    method: GET
    data_selector: courses
    params:
      limit: 50
- name: course_details
  endpoint:
    path: /courses/{courseId}
    method: GET
    data_selector: course
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: POST
    data_selector: null
    params:
      name: group_name
- name: list_groups
  endpoint:
    path: /groups
    method: GET
    data_selector: null
    params: {}
- name: group_details
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: null
    params: {}
- name: update_group
  endpoint:
    path: /groups/{groupId}
    method: PUT
    data_selector: null
    params:
      name: group_name
      limit: integer
- name: delete_group
  endpoint:
    path: /groups/{groupId}
    method: DELETE
    data_selector: null
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params:
      limit: 50
- name: user_details
  endpoint:
    path: /users/{userId}
    method: GET
    data_selector: users
    params: {}
- name: enroll_user
  endpoint:
    path: /learning-paths/{learningPathId}/users/{userId}
    method: PUT
    data_selector: 204 No Content
    params: {}
- name: enroll_group
  endpoint:
    path: /learning-paths/{learningPathId}/groups/{groupId}
    method: PUT
    data_selector: 204 No Content
    params: {}
- name: unenroll_user
  endpoint:
    path: /learning-paths/{learningPathId}/users/{userId}
    method: DELETE
    data_selector: 204 No Content
    params: {}
- name: unenroll_group
  endpoint:
    path: /learning-paths/{learningPathId}/groups/{groupId}
    method: DELETE
    data_selector: 204 No Content
    params: {}
- name: enroll_user
  endpoint:
    path: /learning-paths/{learningPathId}/users/{userId}
    method: PUT
    data_selector: null
    params: {}
- name: enroll_group
  endpoint:
    path: /learning-paths/{learningPathId}/groups/{groupId}
    method: PUT
    data_selector: null
    params: {}
- name: unenroll_user
  endpoint:
    path: /learning-paths/{learningPathId}/users/{userId}
    method: DELETE
    data_selector: null
    params: {}
- name: unenroll_group
  endpoint:
    path: /learning-paths/{learningPathId}/groups/{groupId}
    method: DELETE
    data_selector: null
    params: {}
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: id
    params:
      targetUrl: ''
      events: []
- name: list_webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: get_webhook_details
  endpoint:
    path: /webhooks/{webhookId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{webhookId}
    method: DELETE
    data_selector: id
    params: {}
- name: courses
  endpoint:
    path: /courses
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: course_details
  endpoint:
    path: /courses/{courseId}
    method: GET
    data_selector: course
- name: list_groups_reporter_reports_for
  endpoint:
    path: /users/{userId}/reporting-groups
    method: GET
    data_selector: groups
    params:
      limit: '50'
- name: list_group_reporters
  endpoint:
    path: /groups/{groupId}/reporters
    method: GET
    data_selector: reporters
    params:
      limit: '50'
- name: add_reporter_for_group
  endpoint:
    path: /groups/{groupId}/reporters/{userId}
    method: PUT
    data_selector: null
    params: {}
- name: remove_reporter_for_group
  endpoint:
    path: /groups/{groupId}/reporters/{userId}
    method: DELETE
    data_selector: null
    params: {}
- name: activity_report
  endpoint:
    path: /reports/activity
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: course_learner_report
  endpoint:
    path: /reports/courses/{courseId}
    method: GET
    data_selector: courses
    params: {}
- name: learner_course_report
  endpoint:
    path: /reports/learners/{userId}
    method: GET
    data_selector: courses
    params: {}
- name: learning_path_courses_report
  endpoint:
    path: /reports/learning-paths/{learningPathId}/courses
    method: GET
    data_selector: courses
    params: {}
- name: learning_path_learners_report
  endpoint:
    path: /reports/learning-paths/{learningPathId}/learners
    method: GET
    data_selector: courses
    params: {}
- name: group_courses_report
  endpoint:
    path: /reports/groups/{groupId}/courses
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: list_groups_a_reporter_reports_for
  endpoint:
    path: /users/{userId}/reporting-groups
    method: GET
    data_selector: groups
    params:
      limit: 50
- name: list_a_group_reporters
  endpoint:
    path: /groups/{groupId}/reporters
    method: GET
    data_selector: reporters
    params:
      limit: 50
- name: add_reporter_for_a_group
  endpoint:
    path: /groups/{groupId}/reporters/{userId}
    method: PUT
- name: remove_reporter_for_a_group
  endpoint:
    path: /groups/{groupId}/reporters/{userId}
    method: DELETE
- name: import_completion
  endpoint:
    path: /courses/{courseId}/users/{userId}/completions
    method: POST
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: course_details
  endpoint:
    path: /courses/{courseId}
    method: GET
- name: enroll_user
  endpoint:
    path: /courses/{courseId}/users/{userId}
    method: PUT
- name: enroll_group
  endpoint:
    path: /courses/{courseId}/groups/{groupId}
    method: PUT
- name: unenroll_user
  endpoint:
    path: /courses/{courseId}/users/{userId}
    method: DELETE
- name: unenroll_group
  endpoint:
    path: /courses/{courseId}/groups/{groupId}
    method: DELETE
- name: favorites
  endpoint:
    path: /users/{userId}/favorites
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: group_details
  endpoint:
    path: /groups/{groupId}
    method: GET
- name: update_group
  endpoint:
    path: /groups/{groupId}
    method: PUT
- name: delete_group
  endpoint:
    path: /groups/{groupId}
    method: DELETE
- name: group_members
  endpoint:
    path: /groups/{groupId}/users
    method: GET
- name: user_groups
  endpoint:
    path: /users/{userId}/groups
    method: GET
- name: add_user_to_group
  endpoint:
    path: /groups/{groupId}/users/{userId}
    method: PUT
- name: remove_user_from_group
  endpoint:
    path: /groups/{groupId}/users/{userId}
    method: DELETE
- name: import_completion
  endpoint:
    path: /courses/{courseId}/users/{userId}/completions
    method: POST
- name: invitations
  endpoint:
    path: /invitations
    method: GET
- name: invitation_details
  endpoint:
    path: /invitations/{invitationId}
    method: GET
- name: delete_invitation
  endpoint:
    path: /invitations/{invitationId}
    method: DELETE
- name: learning_paths
  endpoint:
    path: /learning-paths
    method: GET
- name: learning_path_details
  endpoint:
    path: /learning-paths/{learningPathId}
    method: GET
- name: learning_path_courses
  endpoint:
    path: /learning-paths/{learningPathId}/courses
    method: GET
- name: enroll_user_learning_path
  endpoint:
    path: /learning-paths/{learningPathId}/users/{userId}
    method: PUT
- name: enroll_group_learning_path
  endpoint:
    path: /learning-paths/{learningPathId}/groups/{groupId}
    method: PUT
- name: unenroll_user_learning_path
  endpoint:
    path: /learning-paths/{learningPathId}/users/{userId}
    method: DELETE
- name: unenroll_group_learning_path
  endpoint:
    path: /learning-paths/{learningPathId}/groups/{groupId}
    method: DELETE
- name: activity_report
  endpoint:
    path: /reports/activity
    method: GET
- name: course_learner_report
  endpoint:
    path: /reports/courses/{courseId}
    method: GET
- name: learner_course_report
  endpoint:
    path: /reports/learners/{userId}
    method: GET
- name: learning_path_courses_report
  endpoint:
    path: /reports/learning-paths/{learningPathId}/courses
    method: GET
- name: learning_path_learners_report
  endpoint:
    path: /reports/learning-paths/{learningPathId}/learners
    method: GET
- name: reporting_groups
  endpoint:
    path: /users/{userId}/reporting-groups
    method: GET
- name: group_reporters
  endpoint:
    path: /groups/{groupId}/reporters
    method: GET
- name: add_reporter_to_group
  endpoint:
    path: /groups/{groupId}/reporters/{userId}
    method: PUT
- name: remove_reporter_from_group
  endpoint:
    path: /groups/{groupId}/reporters/{userId}
    method: DELETE
- name: users
  endpoint:
    path: /users
    method: GET
- name: user_details
  endpoint:
    path: /users/{userId}
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: webhook_details
  endpoint:
    path: /webhooks/{webhookId}
    method: GET
- name: create_group
  endpoint:
    path: /groups
    method: POST
    data_selector: id
    params:
      name: string
- name: list_groups
  endpoint:
    path: /groups
    method: GET
    data_selector: groups
    params: {}
- name: get_group_details
  endpoint:
    path: /groups/{groupId}
    method: GET
    data_selector: id
    params: {}
- name: update_group
  endpoint:
    path: /groups/{groupId}
    method: PUT
    data_selector: id
    params:
      limit: integer
      name: string
- name: delete_group
  endpoint:
    path: /groups/{groupId}
    method: DELETE
    data_selector: id
    params: {}
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: null
    params:
      targetUrl: string
      events: list of events
      sharedSecret: string
      apiVersion: string
- name: list_webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params:
      limit: integer
- name: get_webhook_details
  endpoint:
    path: /webhooks/{webhookId}
    method: GET
    data_selector: null
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{webhookId}
    method: DELETE
    data_selector: null
    params: {}
- name: user_favorites
  endpoint:
    path: /users/{userId}/favorites
    method: GET
    data_selector: favorites
    params:
      limit: '50'
- name: list_group_members
  endpoint:
    path: /groups/{groupId}/users
    method: GET
    params:
      limit: '50'
- name: list_user_groups
  endpoint:
    path: /users/{userId}/groups
    method: GET
    params:
      limit: '50'
- name: add_user_to_group
  endpoint:
    path: /groups/{groupId}/users/{userId}
    method: PUT
- name: remove_user_from_group
  endpoint:
    path: /groups/{groupId}/users/{userId}
    method: DELETE
- name: enroll_user
  endpoint:
    path: /courses/{courseId}/users/{userId}
    method: PUT
    data_selector: 204 No Content
    params: {}
- name: enroll_group
  endpoint:
    path: /courses/{courseId}/groups/{groupId}
    method: PUT
    data_selector: 204 No Content
    params: {}
- name: unenroll_user
  endpoint:
    path: /courses/{courseId}/users/{userId}
    method: DELETE
    data_selector: 204 No Content
    params: {}
- name: unenroll_group
  endpoint:
    path: /courses/{courseId}/groups/{groupId}
    method: DELETE
    data_selector: 204 No Content
    params: {}
- name: list_learning_paths
  endpoint:
    path: /learning-paths
    method: GET
    data_selector: learningPaths
    params:
      limit: 50
- name: get_learning_path_details
  endpoint:
    path: /learning-paths/{learningPathId}
    method: GET
    data_selector: learningPath
    params: {}
- name: list_courses_in_learning_path
  endpoint:
    path: /learning-paths/{learningPathId}/courses
    method: GET
    data_selector: courses
    params:
      limit: 50
- name: enroll_user
  endpoint:
    path: /courses/{courseId}/users/{userId}
    method: PUT
    data_selector: No Content
    params: {}
- name: enroll_group
  endpoint:
    path: /courses/{courseId}/groups/{groupId}
    method: PUT
    data_selector: No Content
    params: {}
- name: unenroll_user
  endpoint:
    path: /courses/{courseId}/users/{userId}
    method: DELETE
    data_selector: No Content
    params: {}
- name: unenroll_group
  endpoint:
    path: /courses/{courseId}/groups/{groupId}
    method: DELETE
    data_selector: No Content
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
- name: courses
  endpoint:
    path: /courses
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: invitations
  endpoint:
    path: /invitations
    method: GET
- name: learning-paths
  endpoint:
    path: /learning-paths
    method: GET
- name: reports
  endpoint:
    path: /reports/activity
    method: GET
- name: list_group_members
  endpoint:
    path: /groups/{groupId}/users
    method: GET
    data_selector: groups
    params:
      limit: 50
- name: list_user_groups
  endpoint:
    path: /users/{userId}/groups
    method: GET
    data_selector: groups
    params:
      limit: 50
- name: add_user_to_group
  endpoint:
    path: /groups/{groupId}/users/{userId}
    method: PUT
- name: remove_user_from_group
  endpoint:
    path: /groups/{groupId}/users/{userId}
    method: DELETE
- name: create_invitation
  endpoint:
    path: /invitations
    method: POST
    data_selector: invitation
    params: {}
- name: list_invitations
  endpoint:
    path: /invitations
    method: GET
    data_selector: invitations
    params:
      limit: '50'
- name: get_invitation_details
  endpoint:
    path: /invitations/{invitationId}
    method: GET
    data_selector: invitation
    params: {}
- name: delete_invitation
  endpoint:
    path: /invitations/{invitationId}
    method: DELETE
    data_selector: invitation
    params: {}
- name: create_invitation
  endpoint:
    path: /invitations
    method: POST
    data_selector: invitation
    params: {}
- name: list_invitations
  endpoint:
    path: /invitations
    method: GET
    data_selector: invitations
    params:
      limit: 50
- name: get_invitation_details
  endpoint:
    path: /invitations/{invitationId}
    method: GET
    data_selector: invitation
    params: {}
- name: delete_invitation
  endpoint:
    path: /invitations/{invitationId}
    method: DELETE
    data_selector: invitation
    params: {}
- name: user_favorites
  endpoint:
    path: /users/{userId}/favorites
    method: GET
    data_selector: favorites
    params:
      limit: '50'
- name: activity_report
  endpoint:
    path: /reports/activity
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: course_learner_report
  endpoint:
    path: /reports/courses/{courseId}
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: learner_course_report
  endpoint:
    path: /reports/learners/{userId}
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: learning_path_courses_report
  endpoint:
    path: /reports/learning-paths/{learningPathId}/courses
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: learning_path_learners_report
  endpoint:
    path: /reports/learning-paths/{learningPathId}/learners
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: group_courses_report
  endpoint:
    path: /reports/groups/{groupId}/courses
    method: GET
    data_selector: courses
    params:
      limit: '50'
- name: list_learning_paths
  endpoint:
    path: /learning-paths
    method: GET
    data_selector: ''
    params:
      limit: 50
- name: get_learning_path_details
  endpoint:
    path: /learning-paths/{learningPathId}
    method: GET
    data_selector: ''
    params: {}
- name: list_courses_in_learning_path
  endpoint:
    path: /learning-paths/{learningPathId}/courses
    method: GET
    data_selector: ''
    params:
      limit: 50
notes:
- user.created events will be delayed for SSO users by 5-10 minutes.
- user.created events are NOT triggered for SAML users who are removed from your IDP
  and added again unless they are also removed from your Rise account.
- The completion record is associated with the current published version of the course.
- Multiple calls to this endpoint with the same courseId and userId will override
  the date parameters provided in previous calls.
- The user does not have to be enrolled in the course prior to the request.
- Self-registration links will continue to work after you migrate to Reach 360 for
  as long as Rise.com is supported by Articulate.
errors:
- 'user_not_found: cannot retrieve user because user does not exist'
- 'course_not_found: cannot retrieve course because course does not exist'
- Any response outside of the 200 range indicates an error.
- 'group_not_found: cannot retrieve group because group does not exist'
- 'read_only_group: cannot make changes to the specified group'
- 'sso_group: the group you have specified is an SSO provisioned group and cannot
  be modified'
- 'learning_path_not_found: cannot unenroll group from learning path because learning
  path does not exist'
- 'group_not_found: cannot unenroll group from learning path because group does not
  exist'
- learning_path_not_found
- group_not_found
- 'validation_failed: The request body has a validation error'
- 'invalid_email: The email property is not a correctly formatted email address'
- 'missing_api_key: The request is missing an API Key'
- 'invalid_api_key: The API Key provided is invalid'
- 'invalid_content_type: The request is missing/has the incorrect content type'
- 'duplicate_target_url: cannot create webhook because the targetUrl is already in
  use by another webhook.'
- 'webhook_not_found: cannot retrieve or delete webhook because the webhook doesn''t
  exist'
- 'group_not_found: cannot list reporters because group does not exist'
- 'user_not_found: cannot remove reporter for group because user does not exist'
- 'invalid_user_role: cannot remove reporter for group because user is not a reporter'
- 'everyone_reporter: cannot remove reporter for group because user reports on Everyone
  group'
- 'relationship_not_found: cannot remove reporter for group because user does not
  report for group'
- 'learning_path_not_found: cannot retrieve report because learning path does not
  exist'
- 'group_not_found: can''t retrieve report because group does not exist'
- course_not_found
- course_not_published
- user_not_found
- Any response outside of the 200 range indicates an error. In that case, Rise will
  retry to send the request 14 more times over the next 48 hours.
- 'user_not_found: cannot list user''s groups because user does not exist'
- 'group_not_found: cannot remove user from group because group does not exist'
- 'course_not_found: cannot unenroll group from course because course does not exist'
- 'group_not_found: cannot unenroll group from course because group does not exist'
- 'learning_path_not_found: cannot retrieve learning path because learning path does
  not exist'
- '''user_exists'': cannot create an invitation because the specified email address
  already has an account'
- '''invite_pending'': cannot create an invitation because the specified email address
  already has an invite pending'
- '''max_invites_reached'': cannot create an invitation because you’ve hit your limit
  for your trial account. Please upgrade your plan or contact support to have this
  limit increased.'
- '''invalid_reporting_groups'': cannot create an invitation because the reporter
  invitee cannot be assigned to report on the "Everyone" group along with additional
  groups'
- '''invalid_user_role'': cannot create an invitation because the invitee must have
  role set to reporter in order to set reportingGroups'
- '''invitation_not_found'': cannot retrieve invitation because the invitation does
  not exist'
- 'user_exists: cannot create an invitation because the specified email address already
  has an account'
- 'invite_pending: cannot create an invitation because the specified email address
  already has an invite pending'
- 'max_invites_reached: cannot create an invitation because you’ve hit your limit
  for your trial account. Please upgrade your plan or contact support to have this
  limit increased.'
- 'invalid_reporting_groups: cannot create an invitation because the reporter invitee
  cannot be assigned to report on the ''Everyone'' group along with additional groups'
- 'invalid_user_role: cannot create an invitation because the invitee must have role
  set to ''reporter'' in order to set reportingGroups'
- 'invitation_not_found: cannot retrieve invitation because the invitation does not
  exist'
- 'user_not_found: can''t list user''s favorites because the user does not exist'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.rise.com
  auth:
    type: apikey
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Rise-API-Version: '2020-07-16'
  paginator:
    type: cursor
    cursor_param: nextUrl
    page_size_param: limit
    default_page_size: 50
source_metadata: null
