resources:
- name: xls_to_txt
  endpoint:
    path: /v1/xls/convert/to/txt
    method: POST
    data_selector: url
    params: {}
- name: convert_from_email
  endpoint:
    path: /v1/pdf/convert/from/email
    method: POST
    data_selector: ''
    params: {}
- name: pdf_optimize
  endpoint:
    path: /v1/pdf/optimize
    method: POST
    data_selector: url
    params: {}
- name: pdf_info
  endpoint:
    path: /v1/pdf/info
    method: POST
    data_selector: info
    params: {}
- name: pdf_info_fields
  endpoint:
    path: /v1/pdf/info/fields
    method: POST
    data_selector: fields
    params: {}
- name: pdf_info_fields
  endpoint:
    path: /v1/pdf/info/fields
    method: POST
    data_selector: fields
- name: fields
  endpoint:
    path: /pdf/info/fields
    method: POST
    data_selector: info
    params: {}
- name: rotate_pages
  endpoint:
    path: /v1/pdf/edit/rotate
    method: POST
    data_selector: ''
    params: {}
- name: rotate_pages_auto
  endpoint:
    path: /v1/pdf/edit/rotate/auto
    method: POST
    data_selector: ''
    params: {}
- name: convert_html_to_pdf
  endpoint:
    path: /v1/pdf/convert/from/html
    method: POST
    data_selector: url
    params: {}
- name: split_by_barcode
  endpoint:
    path: /v1/pdf/split2
    method: POST
    data_selector: urls
- name: html_template
  endpoint:
    path: /templates/html/:id
    method: GET
    data_selector: id
    params: {}
- name: pdf_convert_from_html
  endpoint:
    path: /v1/pdf/convert/from/html
    method: POST
    data_selector: response
    params: {}
- name: html_templates
  endpoint:
    path: /templates/html
    method: GET
    data_selector: templates
    params: {}
- name: html_template
  endpoint:
    path: /v1/templates/html/:id
    method: GET
    data_selector: id
    params: {}
- name: delete_pages
  endpoint:
    path: /v1/pdf/edit/delete-pages
    method: POST
    data_selector: ''
    params: {}
- name: extract_attachments
  endpoint:
    path: /email/extract-attachments
    method: POST
    data_selector: body
    params: {}
- name: send_email
  endpoint:
    path: /email/send
    method: POST
    data_selector: body
    params: {}
- name: background_job_check
  endpoint:
    path: /v1/job/check
    method: POST
    data_selector: status
    params: {}
- name: barcode_read_from_url
  endpoint:
    path: /v1/barcode/read/from/url
    method: POST
    data_selector: barcodes
    params: {}
- name: pdf_convert_from_csv
  endpoint:
    path: /v1/pdf/convert/from/csv
    method: POST
    data_selector: ''
    params: {}
- name: pdf_security_add
  endpoint:
    path: /v1/pdf/security/add
    method: POST
    data_selector: null
    params: {}
- name: pdf_security_remove
  endpoint:
    path: /v1/pdf/security/remove
    method: POST
    data_selector: null
    params: {}
- name: barcode_generate
  endpoint:
    path: /barcode/generate
    method: POST
    data_selector: url
    params: {}
- name: barcode_generate
  endpoint:
    path: /v1/barcode/generate
    method: POST
    data_selector: url
- name: xls_to_json
  endpoint:
    path: /v1/xls/convert/to/json
    method: POST
    data_selector: url
    params: {}
- name: pdf_split
  endpoint:
    path: /v1/pdf/split
    method: POST
    data_selector: urls
- name: merge_pdfs
  endpoint:
    path: /v1/pdf/merge
    method: POST
    data_selector: result
    params: {}
- name: read_custom_encrypted_pdf
  endpoint:
    path: /v1/pdf/info
    method: POST
    data_selector: result
    params: {}
- name: convert_to_json
  endpoint:
    path: /v1/pdf/convert/to/json2
    method: POST
    data_selector: body
- name: convert_pdf_to_json_meta
  endpoint:
    path: /v1/pdf/convert/to/json-meta
    method: POST
    data_selector: body.document
    params: {}
- name: xls_to_csv
  endpoint:
    path: /v1/xls/convert/to/csv
    method: POST
    data_selector: url
    params: {}
- name: get_presigned_url
  endpoint:
    path: /v1/file/upload/get-presigned-url
    method: GET
    data_selector: presignedUrl
- name: upload_file
  endpoint:
    path: /file/upload
    method: PUT
- name: file_hash
  endpoint:
    path: /v1/file/hash
    method: POST
    data_selector: hash
- name: convert_to_xlsx
  endpoint:
    path: /v1/pdf/convert/to/xlsx
    method: POST
    data_selector: url
    params: {}
- name: replace_text_with_image
  endpoint:
    path: /pdf/edit/replace-text-with-image
    method: POST
    data_selector: response
    params: {}
- name: replace_text_with_image
  endpoint:
    path: /pdf/edit/replace-text-with-image
    method: POST
- name: replace_text_with_image
  endpoint:
    path: /pdf/edit/replace-text-with-image
    method: POST
    data_selector: url
    params: {}
- name: replace_text_with_image
  endpoint:
    path: /v1/pdf/edit/replace-text-with-image
    method: POST
    data_selector: null
    params: {}
- name: replace_text_with_image
  endpoint:
    path: /pdf/edit/replace-text-with-image
    method: POST
    data_selector: url
    params: {}
- name: replace_text_with_image
  endpoint:
    path: /v1/pdf/edit/replace-text-with-image
    method: POST
    data_selector: result
    params: {}
- name: replace_text_with_image
  endpoint:
    path: /pdf/edit/replace-text-with-image
    method: POST
    data_selector: url
    params: {}
- name: pdf_edit_replace_text
  endpoint:
    path: /v1/pdf/edit/replace-text
    method: POST
    data_selector: ''
    params: {}
- name: convert_to_tiff
  endpoint:
    path: /v1/pdf/convert/to/tiff
    method: POST
    data_selector: ''
    params: {}
- name: barcode_read_from_url
  endpoint:
    path: /v1/barcode/read/from/url
    method: POST
    data_selector: barcodes
    params: {}
- name: xls_to_pdf
  endpoint:
    path: /v1/xls/convert/to/pdf
    method: POST
    data_selector: url
    params: {}
- name: pdf_to_html
  endpoint:
    path: /v1/pdf/convert/to/html
    method: POST
    data_selector: url
- name: convert_pdf_to_xml
  endpoint:
    path: /v1/pdf/convert/to/xml
    method: POST
    data_selector: body
- name: pdf_edit_add
  endpoint:
    path: /v1/pdf/edit/add
    method: POST
    data_selector: url
- name: convert_to_xls
  endpoint:
    path: /v1/pdf/convert/to/xls
    method: POST
    data_selector: ''
    params: {}
- name: convert_images_to_pdf
  endpoint:
    path: /v1/pdf/convert/from/image
    method: POST
    data_selector: ''
    params: {}
- name: create_pdf_fields
  endpoint:
    path: /v1/pdf/edit/add
    method: POST
    data_selector: url
- name: pdf_convert_to_webp
  endpoint:
    path: /v1/pdf/convert/to/webp
    method: POST
    data_selector: urls
    params: {}
- name: document_parser_template
  endpoint:
    path: /pdf/documentparser/templates/:id
    method: GET
- name: document_parser
  endpoint:
    path: /v1/pdf/documentparser
    method: POST
    data_selector: ''
    params: {}
- name: document_templates
  endpoint:
    path: /v1/pdf/documentparser/templates
    method: GET
    data_selector: ''
    params: {}
- name: add_text_images
  endpoint:
    path: /pdf/edit/add
    method: POST
    data_selector: response
    params: {}
- name: pdf_edit_add
  endpoint:
    path: /v1/pdf/edit/add
    method: POST
- name: convert_doc_to_pdf
  endpoint:
    path: /v1/pdf/convert/from/doc
    method: POST
    data_selector: ''
    params: {}
- name: pdf_to_jpg
  endpoint:
    path: /v1/pdf/convert/to/jpg
    method: POST
    data_selector: urls
    params: {}
- name: file_upload_get_presigned_url
  endpoint:
    path: /file/upload/get-presigned-url
    method: GET
- name: file_upload
  endpoint:
    path: /file/upload
    method: POST
- name: file_delete
  endpoint:
    path: /file/delete
    method: POST
- name: file_hash
  endpoint:
    path: /file/hash
    method: POST
- name: xls_to_html
  endpoint:
    path: /v1/xls/convert/to/html
    method: POST
    data_selector: url
- name: pdf_to_csv
  endpoint:
    path: /convert/pdf/to/csv
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_json
  endpoint:
    path: /convert/pdf/to/json
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_text
  endpoint:
    path: /convert/pdf/to/text
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_xls
  endpoint:
    path: /convert/pdf/to/xls
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_xlsx
  endpoint:
    path: /convert/pdf/to/xlsx
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_xml
  endpoint:
    path: /convert/pdf/to/xml
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_html
  endpoint:
    path: /convert/pdf/to/html
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_jpg
  endpoint:
    path: /convert/pdf/to/jpg
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_png
  endpoint:
    path: /convert/pdf/to/png
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_tiff
  endpoint:
    path: /convert/pdf/to/tiff
    method: POST
    data_selector: data
    params: {}
- name: csv_to_pdf
  endpoint:
    path: /convert/csv/to/pdf
    method: POST
    data_selector: data
    params: {}
- name: pdf_to_png_conversion
  endpoint:
    path: /v1/pdf/convert/to/png
    method: POST
    data_selector: urls
    params: {}
- name: pdf_convert_from_url
  endpoint:
    path: /v1/pdf/convert/from/url
    method: POST
    data_selector: ''
    params: {}
- name: pdf_split
  endpoint:
    path: /v1/pdf/split2
    method: POST
    data_selector: urls
- name: delete_text
  endpoint:
    path: /pdf/edit/delete-text
    method: POST
    data_selector: url
    params: {}
- name: xls_to_xml
  endpoint:
    path: /v1/xls/convert/to/xml
    method: POST
    data_selector: url
- name: upload_temp_file
  endpoint:
    path: /v1/file/upload/get-presigned-url
    method: GET
    data_selector: presignedUrl
    params: {}
- name: credit_balance
  endpoint:
    path: /v1/account/credit/balance
    method: GET
    data_selector: body
    params: {}
- name: make_searchable
  endpoint:
    path: /v1/pdf/makesearchable
    method: POST
    data_selector: url
    params: {}
- name: make_unsearchable
  endpoint:
    path: /v1/pdf/makeunsearchable
    method: POST
    data_selector: url
    params: {}
- name: attachments_extract
  endpoint:
    path: /v1/pdf/attachments/extract
    method: POST
    data_selector: urls
- name: ai_invoice_parser
  endpoint:
    path: /v1/ai-invoice-parser
    method: POST
    data_selector: jobId
    params: {}
- name: convert_pdf_to_csv
  endpoint:
    path: /v1/pdf/convert/to/csv
    method: POST
    data_selector: body
    params: {}
- name: convert_to_text_simple
  endpoint:
    path: /v1/pdf/convert/to/text-simple
    method: POST
    data_selector: body
- name: job_build
  endpoint:
    path: /v1/textsense/job/build
    method: POST
    data_selector: body.objects
    params: {}
- name: find_table
  endpoint:
    path: /pdf/find/table
    method: POST
    data_selector: body.tables
    params: {}
- name: classifier
  endpoint:
    path: /v1/pdf/classifier
    method: POST
    data_selector: body
    params: {}
- name: pdf_find
  endpoint:
    path: /v1/pdf/find
    method: POST
    data_selector: body
    params: {}
- name: pdf_merge
  endpoint:
    path: /v1/pdf/merge
    method: POST
    data_selector: url
    params: {}
- name: pdf_merge
  endpoint:
    path: /v1/pdf/merge2
    method: POST
    data_selector: url
notes:
- For data security, you have the option to encrypt output files and decrypt input
  files.
- To upload files via API, check out the Files Upload section.
- If you experience intermittent `Too Many Requests` or `Access Denied` errors, please
  try to add `cache:` to enable built-in URL caching.
- To upload files via API, Check out the Files Upload section.
- To start a new async background job, you should set `async` to `true` for API methods.
- If you experience intermittent 'Too Many Requests' or 'Access Denied' errors, please
  try to add 'cache:' to enable built-in URL caching.
- Supports links from Google Drive, Dropbox, and PDF.co built-in files storage.
- AI powered conversion
- Requires valid API key
- The body payload requires a valid URL and image data in base64 format.
- The 'pages' parameter accepts a zero-based index.
- PDF Search and Replace Text endpoint has certain limitations and restrictions.
- To process large documents or files please use asynchronous mode.
- To find form fields please use PDF.co PDF Edit Add Helper.
- No query parameters accepted.
- No body parameters accepted.
- Set the templateId parameter to 1 to use the General Invoice Template.
- For large documents or files please use asynchronous mode.
- If a file contains many pages then specify a page range using the pages parameter.
- If you experience intermittent `Too Many Requests` or `Access Denied` errors, try
  to add `cache:` to enable built-in URL caching.
- Rate Limit Error 429 too many requests - from Account Questions
- Error 403, Can’t download file, Input document is damaged, or Login page is converted
  instead of the file content - from Errors
- To check the status of async job you should use the job/check endpoint.
- Output will be available at provided callback Webhook URL.
- Generated output files are securely stored, encrypted at rest, and auto removed.
- Output links automatically expire in 1 hour by default.
- Supports regular expressions if you set the regexSearch param to true.
- Recommended to use this endpoint in async mode because it may need to convert source
  documents to pdf.
- This endpoint also consumes more credits because of the internal conversions.
errors:
- 'Too Many Requests: Throttle API calls or reduce frequency'
- 'Access Denied: Check file permissions or URL validity'
- '200: The request has succeeded'
- '400: bad input parameters'
- '401: unauthorized'
- '403: not enough credits'
- '405: Timeout error.'
- 'Access Denied: Check URL permissions'
- '405: Timeout error'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'Too Many Requests: Reduce frequency of API calls.'
- 'Access Denied: Check URL permissions.'
- '405: Timeout error. To process large documents or files please use asynchronous
  mode.'
- 'Access Denied: Check your URL and permissions'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Check the request format'
- 'Too Many Requests: Try to reduce request frequency.'
- 'Access Denied: Check access permissions for the source URL.'
- '405: Timeout error. To process large documents or files please use asynchronous
  mode (set async parameter to true) and then check the status using /job/check endpoint.'
- 'Access Denied: Check API key or permissions'
- 'Too Many Requests: Please try to add cache to enable built-in URL caching.'
- 'Access Denied: Ensure the URL is accessible.'
- 'Access Denied: Check your permissions or API key'
- '400 Bad Request: Check the request payload structure'
- 'Access Denied: Check your API key and permissions'
- 400 bad input parameters
- 401 unauthorized
- 403 not enough credits
- 405 Timeout error. To process large documents or files please use asynchronous mode
  ( set async parameter to true) and then check the status using /job/check endpoint.
- '405: Timeout error. To process large documents or files please use asynchronous
  mode'
- 'Too Many Requests: Try to add cache to enable built-in URL caching.'
- '405: Timeout error. To process large documents or files please use asynchronous
  mode ( set async parameter to true) and then check the status using /job/check endpoint.'
- 'Access Denied: Check the access permissions of the source URL'
- Rate Limit Error 429 too many requests - from Account Questions
- Error 403, Can’t download file, Input document is damaged, or Login page is converted
  instead of the file content - from Errors
- 'Too Many Requests: If you experience intermittent errors, please try to add cache
  to enable built-in URL caching.'
- 'Access Denied: If you experience intermittent errors, please try to add cache to
  enable built-in URL caching.'
- 'Access Denied: Ensure the URL is accessible and valid.'
- 'Too Many Requests: Try adding cache to enable built-in URL caching.'
- 'Access Denied: Ensure the source URL is accessible.'
- 'Too Many Requests: Consider adding cache to enable built-in URL caching.'
- 'Access Denied: Check source file URL and access permissions.'
- 'Access Denied: Check URL access permissions.'
- 'Too Many Requests: Add cache to the URL or reduce request frequency'
- 'Access Denied: Check URL access permissions'
- 'Access Denied: Ensure proper access to the source URL.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.pdf.co
  auth:
    type: apikey
    location: header
    header_name: x-api-key
    httpusername: '{{ dlt.secrets[''http_username''] }}'
    httppassword: '{{ dlt.secrets[''http_password''] }}'
  headers:
    Content-Type: application/json
    x-api-key: ''
source_metadata: null
