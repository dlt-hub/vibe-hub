resources:
- name: inbound_event
  endpoint:
    path: /inbound
    method: POST
    data_selector: payload
    params: {}
- name: outbound_event
  endpoint:
    path: /outbound
    method: POST
    data_selector: payload
    params: {}
- name: note_event
  endpoint:
    path: /note
    method: POST
    data_selector: payload
    params: {}
- name: ticket_label_added_event
  endpoint:
    path: /ticket_label_added
    method: POST
    data_selector: payload
    params: {}
- name: ticket_label_deleted_event
  endpoint:
    path: /ticket_label_deleted
    method: POST
    data_selector: payload
    params: {}
- name: ticket_assigned_event
  endpoint:
    path: /ticket_assigned
    method: POST
    data_selector: payload
    params: {}
- name: ticket_closed_event
  endpoint:
    path: /ticket_closed
    method: POST
    data_selector: payload
    params: {}
- name: ticket_reopened_event
  endpoint:
    path: /ticket_reopened
    method: POST
    data_selector: payload
    params: {}
- name: ticket_marked_as_spam_event
  endpoint:
    path: /ticket_marked_as_spam
    method: POST
    data_selector: payload
    params: {}
- name: ticket_unmarked_as_spam_event
  endpoint:
    path: /ticket_unmarked_as_spam
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_started_event
  endpoint:
    path: /voice_call_started
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_ended_event
  endpoint:
    path: /voice_call_ended
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_recorded_event
  endpoint:
    path: /voice_call_recorded
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_missed_event
  endpoint:
    path: /voice_call_missed
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_route_number_event
  endpoint:
    path: /voice_call_route_number
    method: POST
    data_selector: payload
    params: {}
- name: custom_channel_message
  endpoint:
    path: /custom/channel/message
    method: POST
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /capture/[..]
    method: POST
- name: inbound_webhook
  endpoint:
    path: /webhooks/inbound
    method: POST
    data_selector: payload
    params: {}
- name: outbound_webhook
  endpoint:
    path: /webhooks/outbound
    method: POST
    data_selector: payload
    params: {}
- name: note_webhook
  endpoint:
    path: /webhooks/note
    method: POST
    data_selector: payload
    params: {}
- name: ticket_label_added_webhook
  endpoint:
    path: /webhooks/ticket_label_added
    method: POST
    data_selector: payload
    params: {}
- name: ticket_label_deleted_webhook
  endpoint:
    path: /webhooks/ticket_label_deleted
    method: POST
    data_selector: payload
    params: {}
- name: ticket_assigned_webhook
  endpoint:
    path: /webhooks/ticket_assigned
    method: POST
    data_selector: payload
    params: {}
- name: ticket_closed_webhook
  endpoint:
    path: /webhooks/ticket_closed
    method: POST
    data_selector: payload
    params: {}
- name: ticket_reopened_webhook
  endpoint:
    path: /webhooks/ticket_reopened
    method: POST
    data_selector: payload
    params: {}
- name: ticket_marked_as_spam_webhook
  endpoint:
    path: /webhooks/ticket_marked_as_spam
    method: POST
    data_selector: payload
    params: {}
- name: ticket_unmarked_as_spam_webhook
  endpoint:
    path: /webhooks/ticket_unmarked_as_spam
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_started_webhook
  endpoint:
    path: /webhooks/voice_call_started
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_ended_webhook
  endpoint:
    path: /webhooks/voice_call_ended
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_recorded_webhook
  endpoint:
    path: /webhooks/voice_call_recorded
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_missed_webhook
  endpoint:
    path: /webhooks/voice_call_missed
    method: POST
    data_selector: payload
    params: {}
- name: voice_call_route_number_webhook
  endpoint:
    path: /webhooks/voice_call_route_number
    method: POST
    data_selector: payload
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Dynamic content is limited to 10 content type objects per request (subsequent objects
  are ignored)
- Failed request will skip the dynamic content all together
- Request must respond within 5 seconds
- Images/Videos/Files have a 20MB size limit
- Currently not possible to view a log of requests that were executed by the HTTP
  action, but this is planned for the future.
- If your website uses a Content Security Policy, the following sources have to be
  added in order to use our widget.
- The Trengo Widget uses specific sources in its default configuration.
- Only absolute CSS values are a valid value.
- Make sure the request is authorized by matching the auth_token from the URL to the
  secret.
- Informazioni pratiche su come utilizzare la libreria per integrare Trengo nel software.
- We recommend verifying the webhook signature to make sure the data received is coming
  from Trengo.
- The Trengo-Signature header is sent with every webhook, it consists of a timestamp
  and hash concatenated together with a ; in between.
- The hash is a lowercase hexadecimal SHA256 HMAC digest of the timestamp, a . and
  the request's body. It uses your signing secret as key.
- This feature only works for web chat channels on the widget.
- The `field_id` must be an existing `custom_field` with the type `contact`.
- To prevent odd situations for visitors, set the `render` property to `false`.
- Introduceer een gecontroleerde vertraging binnen de Journey, waarbij je een bepaalde
  tijd pauzeert voordat je doorgaat naar de volgende stap.
- 'Available channel types are: chat, email, facebook, twitter, sms, voice, help_center,
  whatsapp.'
- Webhook URL is specific to the journey created.
- All requests to the Trengo API are rate limited to prevent abuse or possible high
  CPU / memory usage.
- The current rate limit is 120 requests per minute.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 'Status code not in the 200 range: Automatically retry the request up to 3 times
  with an incremental delay of up to 3 seconds.'
- '401 Unauthorized: Recheck API_TOKEN or auth_token'
- '429 Too Many Requests: When you hit the ratelimit.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  headers:
    Authorization: Bearer {{YOUR_TOKEN}}
    Accept: application/json
    Content-Type: application/json
  base_url: https://your-instance.api-name.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  resources:
  - name: tickets
    endpoint:
      path: /tickets
      method: GET
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
