resources:
- name: Simple array
  endpoint:
    path: /path/to/simple/array
    method: GET
    data_selector: records
    params: {}
- name: JSON simple collection
  endpoint:
    path: /path/to/json/simple/collection
    method: GET
    data_selector: records
    params: {}
- name: JSON array of simple collections
  endpoint:
    path: /path/to/json/array/simple/collections
    method: GET
    data_selector: records
    params: {}
- name: JSON collection complex values
  endpoint:
    path: /path/to/json/collection/complex/values
    method: GET
    data_selector: records
    params: {}
- name: JSON array of collections complex values
  endpoint:
    path: /path/to/json/array/collections/complex/values
    method: GET
    data_selector: records
    params: {}
- name: JSON array of collections of really complex values
  endpoint:
    path: /path/to/json/array/collections/really/complex/values
    method: GET
    data_selector: records
    params: {}
- name: gmail
  endpoint:
    path: /oauth2/v4/token
    method: POST
- name: email_content
  endpoint:
    path: /email/extract
    method: POST
    data_selector: html
    params: {}
- name: Voice AI Project
  endpoint:
    path: /projects/voice-ai
    method: GET
    data_selector: projects
    params: {}
- name: line_items
  endpoint:
    path: /v0/your_base_id/your_table_name
    method: GET
    data_selector: records
    params: {}
- name: company_info
  endpoint:
    path: /output.json
    method: GET
    data_selector: body.objects
    params: {}
- name: video_plan
  endpoint:
    path: /videos/create
    method: POST
    data_selector: video_details
- name: google_forms
  endpoint:
    path: /forms/submissions
    method: POST
    data_selector: data
    params: {}
- name: google_sheets
  endpoint:
    path: /sheets/master_review_tracking
    method: GET
    data_selector: data
    params: {}
- name: telegram_bot
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: emails
  endpoint:
    path: /gmail/v1/users/me/messages
    method: GET
    data_selector: messages
    params: {}
- name: submission
  endpoint:
    path: /submit/251613555592056
    method: POST
    data_selector: submission
    params: {}
- name: array
  endpoint:
    path: /array
    method: GET
    data_selector: array
- name: Simple array
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: JSON simple collection
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: JSON array of simple collections
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: JSON collection complex values
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: JSON array of collections complex values
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: JSON array of collections of really complex values
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: lead_reactivation
  endpoint:
    path: /api/leads/reactivate
    method: POST
    data_selector: data
- name: appointment_confirmation
  endpoint:
    path: /api/appointments/confirm
    method: POST
    data_selector: data
- name: google_search
  endpoint:
    path: /search
    method: GET
    data_selector: result.organic_results
    params:
      query: '{{search_query}}'
      language: en
      country: US
- name: web_unlocker
  endpoint:
    path: /scrape
    method: POST
    data_selector: content
    params:
      url: '{{url}}'
      js_render: 'true'
      headless: 'true'
      country: World Wide
      js_instructions: '[{"wait":1000}]'
- name: anthropic_claude
  endpoint:
    path: /v1/messages
    method: POST
    data_selector: summary
    params:
      model: claude-3-sonnet-20240229
      max_tokens: '1000'
- name: http_webhook
  endpoint:
    path: /send
    method: POST
    data_selector: response
    params:
      body:
        embeds:
        - title: '{{title}}'
          description: '*{{content}}*'
          url: '{{link}}'
          color: 3447003
          footer:
            text: Analysis complete
- name: task_type
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: array
    params: {}
- name: data_extraction
  endpoint:
    path: /data/extraction
    method: POST
- name: content_generation
  endpoint:
    path: /content/generation
    method: POST
- name: createJSONChatCompletion
  endpoint:
    method: POST
notes:
- formatDate() only works in English so an alternative method is needed.
- Ensure months are not surrounded by a solid color when copying code.
- 'Regex pattern used to split date: (\d{1,2})\s([a-zéû.]+)\s(\d{4})'
- I have a form that outputs dates in the format 'DD/MM/YYYY', using the format date
  function I have tried to switch this to 'YYYY-MM-DD' which works fine, except when
  the Day of the month is lower than 12. in this case it flips the month and the day.
- This forum might have or already changed your text / JSON
- When pasting JSON or text into this forum, you should format the example text using
  the rich-text editor, otherwise the forum software might modify the displayed text,
  and you might get incorrect answers from others because of it.
- 'Some things this forum software might do to mangle your text: – remove extra spaces
  (which may be necessary) – convert links to titles (when copied is incorrect) –
  incorrect joined links – convert single and double quotes to smart angled quotes
  () – emojis – etc.'
- 'This interferes with you receiving correct answers, because it: – makes JSON invalid
  (you can verify when copy-paste into https://jsonformatter.org) – makes incorrect
  text examples when we need to build a pattern for text parsing'
- To prevent this in future, please format text in code blocks
- You might need to re-copy the original text
- Once the post has been submitted, it’s too late to format it since it’s already
  butchered, and you need to make a re-copy of the text, and format it before submitting
  the forum post.
- Thanks for the tip. I have reformatted my post. I have also validated the format
  at https://jsonlint.com/. The JSON is valid. I am not sure what the issue is at
  this point. It does not give me any other option.
- You need to set your OAuth application to 'Production', otherwise the credentials
  expire very frequently.
- Use redirect URIs that match the Make OAuth2 callback URLs.
- New GPT-4o model requires an HTTP Header parameter to be passed when using v2 of
  the Assistants API.
- Known issue with the '4o' model; dev team is working on an update.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Expertise in creating Voice AI Assistants using VAPI and Retell AI
- Offers assistance with workflow setup and actionable insights
- Due to inconsistencies in Make’s implementation of the connections, there are two
  separate entries where one is `google` and another ending in a forward slash `google/`.
- Output link valid till 2025-06-13T11:41:30.4434661+00:00
- YouTube doesn’t expose CTR through its standard API, alternative method required.
- Ensure the process runs reliably on a recurring schedule.
- Make sure 'Continue the execution of the route even if the module returns no results'
  is YES, because we want to send the reminder if there are NO results.
- The video aims to use tennis as a lens to understand strategic thinking and systems
  design.
- Validation failed for 1 parameter(s). Missing value of required parameter 'key'
- To accurately parse specific pages from your PDF file using the PDF.co Document
  Parser, please use the pages parameter.
- Uses OAuth2 with refresh token — requires setup of connected app in Salesforce
- OpenAI has been returning an error stating that 'It seems there is a technical issue
  with file search.'
- 'An unexpected error occurred: Invalid URL (GET /v1/vector_stores/vs_6850129d2074819189372de9aed62674/associations)'
- You’ll need to set your OAuth application to 'Production', otherwise the credentials
  expire very frequently.
- To display data in another format, use `formatDate()` when mapping variables in
  another module.
- You need to use `parseDate()` to parse the string into a date variable type using
  the Date Format Tokens.
- You can set a lower polling interval, like 1-3 minutes, but that will use more 'check'
  operations.
- If you want instantly, that is quite advanced because you also have to handle security
  checks from Discord itself.
- Triggers are set up to manage submissions and prevent duplicate reviews.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- TikTok support is only available on paid plans (starts at €14/month). Free plan
  doesn’t include TikTok.
- The Match pattern module enables you to find and extract string elements matching
  a search pattern from a given text.
- Ensure proper OAuth setup in Google Cloud Console
- The webhook URL is used for submissions.
- The submission event ID is included in the response.
- Currently observing an issue on Meta’s end that may be affecting your experience,
  with intermittent behavior.
- Some functions may work as expected at times but may produce errors at others.
- Uses Google Sheets for lead data
- Integrates with OpenAI, Hunter.io, and Lemlist
- Uses AI to automate guest communications in Japanese hotels
- Supports multiple communication channels including voice
- Users can now manually enter keys and scan a QR code.
- Client Secret is now hidden from the end user the same way passwords are masked
  in password managers.
- Ensure auto-responses to messages whether a chat exists or not.
- Common issue in Make scenarios when required fields aren’t dynamically populated.
- Double-check the credentials, especially the URL. It should end in /wp-json/
- Ensure that Pretty Permalinks are being used
- Due to inconsistencies in Make’s implementation of the connections, there are two
  separate entries where has one is `google/`
- Once you’ve set these up, you can use/reuse the same Google OAuth App ID + Secret
  for all the supported Google connections and modules on Make - you’ll just have
  to enable the relevant Google APIs!
errors:
- '400 (failedPrecondition): Mail service not enabled'
- Invalid credentials (Failure)
- '400: The requested model ''gpt-4o-2024-05-13'' cannot be used with the Assistants
  API in v1.'
- '400: You must provide the ‘OpenAI-Beta’ header to access the Assistants API.'
- '403 Access Denied: Check API connection and permissions'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- It seems there is a technical issue with file search.
- 'An unexpected error occurred: Invalid URL'
- 'invalid_json (200): Error posting to the Slack endpoint'
- 'invalid_form_data: Error when using form-urlencoded content type'
- '404 Could not find database with ID: 255a9748-771b-47b2-a043-bf16271b725c. Make
  sure the relevant pages and databases are shared with your integration.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Publish failed or unknown final status: None'
- '400 Bad Request: Check the request format'
- '401 Unauthorized: Verify OAuth token validity'
- '403 Forbidden: Ensure the API is enabled for the project'
- Unsupported get request. Object with ID '4070348869898387' does not exist, cannot
  be loaded due to missing permissions, or does not support this operation.
- API reliability issues with OpenAI Assistant API returning errors approximately
  2% of the time
- '400: Invalid request error'
- '404 (error code: rest_no_route): This issue occurs when an incorrect connection
  setup causes the API endpoint to be missing from the WordPress installation.'
- 'Status 403: Generally, the 403 error appears when there’s an issue with the server’s
  firewall.'
- 'Status code: 401: This is a plugin conflict issue, and the error means something
  is interfering with the processing of the WordPress REST API.'
- '403: Client-side issues, possibly due to firewall or CloudFlare blocking'
- '401: Plugin conflict affecting REST API access'
- 'ETIMEDOUT: Service is temporarily unavailable'
- '404: Common issue with permalink settings'
- 'rest_no_route: Incorrect connection setup causing missing API endpoint'
auth_info:
  mentioned_objects:
  - OAuth client ID
  - OAuth consent screen
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://my-wordpress-site.com/wp-json/
  headers:
    Accept: application/json
    OpenAI-Beta: assistants=v2
    Content-Type: application/json
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://oauth2.googleapis.com/token
    client_id: '{{ dlt.secrets[''gmail_client_id''] }}'
    client_secret: '{{ dlt.secrets[''gmail_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''gmail_refresh_token''] }}'
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
