resources:
- name: examples
  endpoint:
    path: /my-namespace/v1/examples
    method: GET
- name: books
  endpoint:
    path: /my-namespace/v1/books
    method: GET
- name: batch
  endpoint:
    path: /my-namespace/v1/batch
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /rest/v1.1/sites/{id}/posts
    method: GET
    data_selector: posts
- name: comments
  endpoint:
    path: /rest/v1.1/sites/{id}/comments
    method: GET
    data_selector: comments
- name: admin
  endpoint:
    path: /wp-admin/
    method: GET
    data_selector: ''
    params: {}
- name: cache
  endpoint:
    path: /wp-cli/commands/cache/
    method: GET
    data_selector: ''
    params: {}
- name: cap
  endpoint:
    path: /wp-cli/commands/cap/
    method: GET
    data_selector: ''
    params: {}
- name: cli
  endpoint:
    path: /wp-cli/commands/cli/
    method: GET
    data_selector: ''
    params: {}
- name: comment
  endpoint:
    path: /wp-cli/commands/comment/
    method: GET
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /wp-cli/commands/config/
    method: GET
    data_selector: ''
    params: {}
- name: core
  endpoint:
    path: /wp-cli/commands/core/
    method: GET
    data_selector: ''
    params: {}
- name: cron
  endpoint:
    path: /wp-cli/commands/cron/
    method: GET
    data_selector: ''
    params: {}
- name: db
  endpoint:
    path: /wp-cli/commands/db/
    method: GET
    data_selector: ''
    params: {}
- name: dist-archive
  endpoint:
    path: /wp-cli/commands/dist-archive/
    method: GET
    data_selector: ''
    params: {}
- name: embed
  endpoint:
    path: /wp-cli/commands/embed/
    method: GET
    data_selector: ''
    params: {}
- name: eval
  endpoint:
    path: /wp-cli/commands/eval/
    method: GET
    data_selector: ''
    params: {}
- name: eval-file
  endpoint:
    path: /wp-cli/commands/eval-file/
    method: GET
    data_selector: ''
    params: {}
- name: export
  endpoint:
    path: /wp-cli/commands/export/
    method: GET
    data_selector: ''
    params: {}
- name: find
  endpoint:
    path: /wp-cli/commands/find/
    method: GET
    data_selector: ''
    params: {}
- name: help
  endpoint:
    path: /wp-cli/commands/help/
    method: GET
    data_selector: ''
    params: {}
- name: i18n
  endpoint:
    path: /wp-cli/commands/i18n/
    method: GET
    data_selector: ''
    params: {}
- name: import
  endpoint:
    path: /wp-cli/commands/import/
    method: GET
    data_selector: ''
    params: {}
- name: language
  endpoint:
    path: /wp-cli/commands/language/
    method: GET
    data_selector: ''
    params: {}
- name: maintenance-mode
  endpoint:
    path: /wp-cli/commands/maintenance-mode/
    method: GET
    data_selector: ''
    params: {}
- name: media
  endpoint:
    path: /wp-cli/commands/media/
    method: GET
    data_selector: ''
    params: {}
- name: menu
  endpoint:
    path: /wp-cli/commands/menu/
    method: GET
    data_selector: ''
    params: {}
- name: network
  endpoint:
    path: /wp-cli/commands/network/
    method: GET
    data_selector: ''
    params: {}
- name: option
  endpoint:
    path: /wp-cli/commands/option/
    method: GET
    data_selector: ''
    params: {}
- name: package
  endpoint:
    path: /wp-cli/commands/package/
    method: GET
    data_selector: ''
    params: {}
- name: plugin
  endpoint:
    path: /wp-cli/commands/plugin/
    method: GET
    data_selector: ''
    params: {}
- name: post
  endpoint:
    path: /wp-cli/commands/post/
    method: GET
    data_selector: ''
    params: {}
- name: post-type
  endpoint:
    path: /wp-cli/commands/post-type/
    method: GET
    data_selector: ''
    params: {}
- name: profile
  endpoint:
    path: /wp-cli/commands/profile/
    method: GET
    data_selector: ''
    params: {}
- name: rewrite
  endpoint:
    path: /wp-cli/commands/rewrite/
    method: GET
    data_selector: ''
    params: {}
- name: role
  endpoint:
    path: /wp-cli/commands/role/
    method: GET
    data_selector: ''
    params: {}
- name: scaffold
  endpoint:
    path: /wp-cli/commands/scaffold/
    method: GET
    data_selector: ''
    params: {}
- name: search-replace
  endpoint:
    path: /wp-cli/commands/search-replace/
    method: GET
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /wp-cli/commands/server/
    method: GET
    data_selector: ''
    params: {}
- name: shell
  endpoint:
    path: /wp-cli/commands/shell/
    method: GET
    data_selector: ''
    params: {}
- name: sidebar
  endpoint:
    path: /wp-cli/commands/sidebar/
    method: GET
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /wp-cli/commands/site/
    method: GET
    data_selector: ''
    params: {}
- name: super-admin
  endpoint:
    path: /wp-cli/commands/super-admin/
    method: GET
    data_selector: ''
    params: {}
- name: taxonomy
  endpoint:
    path: /wp-cli/commands/taxonomy/
    method: GET
    data_selector: ''
    params: {}
- name: term
  endpoint:
    path: /wp-cli/commands/term/
    method: GET
    data_selector: ''
    params: {}
- name: theme
  endpoint:
    path: /wp-cli/commands/theme/
    method: GET
    data_selector: ''
    params: {}
- name: transient
  endpoint:
    path: /wp-cli/commands/transient/
    method: GET
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: /wp-cli/commands/user/
    method: GET
    data_selector: ''
    params: {}
- name: widget
  endpoint:
    path: /wp-cli/commands/widget/
    method: GET
    data_selector: ''
    params: {}
- name: block_theme
  endpoint:
    path: /themes/block
    method: GET
    data_selector: themes
    params: {}
- name: classic_theme
  endpoint:
    path: /themes/classic
    method: GET
    data_selector: themes
    params: {}
- name: posts
  endpoint:
    path: /wp/v2/posts
    method: GET
    data_selector: posts
- name: pages
  endpoint:
    path: /wp/v2/pages
    method: GET
    data_selector: pages
- name: users
  endpoint:
    path: /wp/v2/users
    method: GET
    data_selector: users
- name: admin
  endpoint:
    path: /wp-admin/
    method: GET
    data_selector: ''
    params: {}
- name: cache
  endpoint:
    path: /cache/
    method: GET
    data_selector: ''
    params: {}
- name: cap
  endpoint:
    path: /cap/
    method: GET
    data_selector: ''
    params: {}
- name: cli
  endpoint:
    path: /cli/
    method: GET
    data_selector: ''
    params: {}
- name: comment
  endpoint:
    path: /comment/
    method: GET
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /config/
    method: GET
    data_selector: ''
    params: {}
- name: core
  endpoint:
    path: /core/
    method: GET
    data_selector: ''
    params: {}
- name: cron
  endpoint:
    path: /cron/
    method: GET
    data_selector: ''
    params: {}
- name: db
  endpoint:
    path: /db/
    method: GET
    data_selector: ''
    params: {}
- name: dist-archive
  endpoint:
    path: /dist-archive/
    method: GET
    data_selector: ''
    params: {}
- name: embed
  endpoint:
    path: /embed/
    method: GET
    data_selector: ''
    params: {}
- name: eval
  endpoint:
    path: /eval/
    method: GET
    data_selector: ''
    params: {}
- name: eval-file
  endpoint:
    path: /eval-file/
    method: GET
    data_selector: ''
    params: {}
- name: export
  endpoint:
    path: /export/
    method: GET
    data_selector: ''
    params: {}
- name: find
  endpoint:
    path: /find/
    method: GET
    data_selector: ''
    params: {}
- name: help
  endpoint:
    path: /help/
    method: GET
    data_selector: ''
    params: {}
- name: i18n
  endpoint:
    path: /i18n/
    method: GET
    data_selector: ''
    params: {}
- name: import
  endpoint:
    path: /import/
    method: GET
    data_selector: ''
    params: {}
- name: language
  endpoint:
    path: /language/
    method: GET
    data_selector: ''
    params: {}
- name: maintenance-mode
  endpoint:
    path: /maintenance-mode/
    method: GET
    data_selector: ''
    params: {}
- name: media
  endpoint:
    path: /media/
    method: GET
    data_selector: ''
    params: {}
- name: menu
  endpoint:
    path: /menu/
    method: GET
    data_selector: ''
    params: {}
- name: network
  endpoint:
    path: /network/
    method: GET
    data_selector: ''
    params: {}
- name: option
  endpoint:
    path: /option/
    method: GET
    data_selector: ''
    params: {}
- name: package
  endpoint:
    path: /package/
    method: GET
    data_selector: ''
    params: {}
- name: plugin
  endpoint:
    path: /plugin/
    method: GET
    data_selector: ''
    params: {}
- name: post
  endpoint:
    path: /post/
    method: GET
    data_selector: ''
    params: {}
- name: post-type
  endpoint:
    path: /post-type/
    method: GET
    data_selector: ''
    params: {}
- name: profile
  endpoint:
    path: /profile/
    method: GET
    data_selector: ''
    params: {}
- name: rewrite
  endpoint:
    path: /rewrite/
    method: GET
    data_selector: ''
    params: {}
- name: role
  endpoint:
    path: /role/
    method: GET
    data_selector: ''
    params: {}
- name: scaffold
  endpoint:
    path: /scaffold/
    method: GET
    data_selector: ''
    params: {}
- name: search-replace
  endpoint:
    path: /search-replace/
    method: GET
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /server/
    method: GET
    data_selector: ''
    params: {}
- name: shell
  endpoint:
    path: /shell/
    method: GET
    data_selector: ''
    params: {}
- name: sidebar
  endpoint:
    path: /sidebar/
    method: GET
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /site/
    method: GET
    data_selector: ''
    params: {}
- name: super-admin
  endpoint:
    path: /super-admin/
    method: GET
    data_selector: ''
    params: {}
- name: taxonomy
  endpoint:
    path: /taxonomy/
    method: GET
    data_selector: ''
    params: {}
- name: term
  endpoint:
    path: /term/
    method: GET
    data_selector: ''
    params: {}
- name: theme
  endpoint:
    path: /theme/
    method: GET
    data_selector: ''
    params: {}
- name: transient
  endpoint:
    path: /transient/
    method: GET
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: /user/
    method: GET
    data_selector: ''
    params: {}
- name: widget
  endpoint:
    path: /widget/
    method: GET
    data_selector: ''
    params: {}
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: posts
- name: user
  endpoint:
    path: /users/{username}
    method: GET
    data_selector: body
    params: {}
- name: wp_remote_retrieve_header
  endpoint:
    path: /wp-includes/http.php
    method: GET
    data_selector: headers
    params: {}
- name: wp_remote_retrieve_body
  endpoint:
    path: /wp-includes/http.php
    method: GET
    data_selector: body
    params: {}
- name: wp_remote_post
  endpoint:
    path: /wp_remote_post/
    method: POST
    data_selector: response
    params: {}
- name: wp_remote_request
  endpoint:
    path: /wp-includes/http.php
    method: GET
    data_selector: response
    params: {}
- name: transient
  endpoint:
    path: /set_transient
    method: POST
    data_selector: result
    params: {}
- name: posts
  endpoint:
    path: /wp/v2/posts
    method: GET
    data_selector: posts
- name: users
  endpoint:
    path: /wp/v2/users
    method: GET
    data_selector: users
- name: actions
  endpoint:
    path: /wp-json/wp/v2/actions
    method: GET
- name: filters
  endpoint:
    path: /wp-json/wp/v2/filters
    method: GET
- name: Top-level Menus
  endpoint:
    path: /plugins/administration-menus/top-level-menus/
    method: GET
    data_selector: menus
- name: Sub-Menus
  endpoint:
    path: /plugins/administration-menus/sub-menus/
    method: GET
    data_selector: sub_menus
- name: settings_api
  endpoint:
    path: /wp/v2/settings
    method: GET
    data_selector: settings
    params: {}
- name: options_api
  endpoint:
    path: /wp/v2/options
    method: GET
    data_selector: options
    params: {}
- name: Custom Post Types
  endpoint:
    path: /plugins/post-types/
    method: GET
    data_selector: post_types
    params: {}
- name: term_taxonomy
  endpoint:
    path: /wp/v2/taxonomies
    method: GET
    data_selector: items
    params: {}
- name: terms
  endpoint:
    path: /wp/v2/terms
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /wp/v2/users
    method: GET
    data_selector: data
    params: {}
- name: liveshoutbox
  endpoint:
    path: /wp-content/plugins/plugindir/pluginfile.php
    method: POST
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /wp/v2/posts
    method: GET
- name: comments
  endpoint:
    path: /wp/v2/comments
    method: GET
- name: posts
  endpoint:
    path: /wp/v2/posts
    method: GET
    data_selector: posts
- name: pages
  endpoint:
    path: /wp/v2/pages
    method: GET
    data_selector: pages
- name: comments
  endpoint:
    path: /wp/v2/comments
    method: GET
    data_selector: comments
- name: posts
  endpoint:
    path: /wp/v2/posts
    method: GET
- name: categories
  endpoint:
    path: /wp/v2/categories
    method: GET
- name: tags
  endpoint:
    path: /wp/v2/tags
    method: GET
- name: pages
  endpoint:
    path: /wp/v2/pages
    method: GET
- name: comments
  endpoint:
    path: /wp/v2/comments
    method: GET
- name: media
  endpoint:
    path: /wp/v2/media
    method: GET
- name: users
  endpoint:
    path: /wp/v2/users
    method: GET
- name: plugins
  endpoint:
    path: /wp/v2/plugins
    method: GET
notes:
- The REST API is designed to be used remotely over HTTP.
- Using a batch endpoint can net you huge performance gains, as you will only make
  one HTTP request to get a response for multiple endpoints.
- Requires an active WordPress.com account.
- Rate limits apply.
- The API provides access to WordPress content via JSON.
- Authentication is required for private or protected content.
- Caching is a practice whereby commonly used objects or objects requiring significant
  time to build are saved into a fast object store for quick retrieval on later requests.
- If you are dealing with real time data or the API specifically says not to cache
  in the headers you may not want to cache.
- 'You may come across following error: http_build_query() expects parameter 1 to
  be array, string given'
- This is not a recommended standard and WordPress will not let you do it.
- Retrieves only the body from the raw response.
- Returns an empty string if no body or incorrect parameter given.
- Post data should be sent in the body as an array.
- Setting sslverify to false is insecure.
- Default ‘GET’ for wp_remote_get()
- Default ‘POST’ for wp_remote_post()
- Default ‘HEAD’ for wp_remote_head()
- Transient key names are limited to 191 characters due to the database schema in
  the wp_options table.
- Unless you’re using an external object cache, when using `set_transient()` to update
  an existing transient that has an existing expiration, not providing an expiration
  value will maintain the existing expiration.
- This might seem like a good idea but caching a `WP_Query` in a transient like this
  will cause a performance hit. This is because [WP_Query](https://developer.wordpress.org/reference/classes/wp_query/)
  bulk fetches the post objects, their terms, and their taxonomies in advance into
  WP_Cache to avoid database queries.
- Note that `WP_CACHE` has to be true in `wp-config.php` for transients to work.
- Hooks are a way for one piece of code to interact/modify another piece of code at
  specific, pre-defined spots.
- We recommend developers with a single option page to add it as Sub-menu to one of
  the existing Top-level menus; such as Settings or Tools.
- As a security precaution, running PHP inside WordPress content is forbidden; to
  allow dynamic interactions with the content, Shortcodes were presented in WordPress
  version 2.5.
- Each WordPress user has, at the bare minimum, a username, password and email address.
- Recommended to have plugin automatically create its database tables.
- You should not disable the REST API; doing so will break WordPress Admin functionality
  that depends on the API being active.
- If you find that query parameters such as ?page=2 or ?_embed are not having any
  effect, your server may not be properly configured to detect them.
- Uses OAuth2 for authentication.
errors:
- 'rest_invald_param: The requests parameter must be an array of requests.'
- '403 Forbidden: Invalid credentials or insufficient permissions'
- '404 Not Found: Resource does not exist'
- '429 Too Many Requests: Rate limit exceeded'
- 200 OK
- 403 Forbidden
- 404 Resource not found
- 500 Internal server error
- 503 Service unavailable
- http_build_query() expects parameter 1 to be array, string given
- is_wp_error() to handle errors
- '401 Unauthorized: You are not currently logged in.'
- '401 Unauthorized: Check your credentials.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://ourawesomesite.com/wp-json
  auth:
    type: oauth2
source_metadata: null
