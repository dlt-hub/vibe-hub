resources:
- name: campaigns
  endpoint:
    path: /publisher/campaigns
    method: GET
- name: campaigns
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: Campaign Advertiser Global Postback
  endpoint:
    path: /advertiser/global_postback
    method: GET
    data_selector: postback_url
    params: {}
- name: Network Global Postback
  endpoint:
    path: /network/global_postback
    method: GET
    data_selector: postback_url
    params: {}
- name: pixel
  endpoint:
    path: /api/pixel
    method: GET
    data_selector: data
    params: {}
- name: offers
  endpoint:
    path: /api/offers
    method: GET
    data_selector: data
- name: campaign
  endpoint:
    path: /campaigns
    method: POST
    data_selector: data
    params: {}
- name: publisher_tracking_link
  endpoint:
    path: /tracking/link
    method: GET
    data_selector: tracking_link
    params: {}
- name: smart_link
  endpoint:
    path: /api/smartlink
    method: POST
    data_selector: data
    params: {}
- name: publisher_tracking_link_parameters
  endpoint:
    path: /api/publisher/tracking/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: publisher_postback_macros
  endpoint:
    path: /api/publisher/postback/macros
    method: GET
    data_selector: macros
    params: {}
- name: postback_url
  endpoint:
    path: /trackier/postback
    method: POST
- name: tracking_link
  endpoint:
    path: /trackier/tracking-link
    method: GET
- name: Publisher Postback
  endpoint:
    path: /PublisherPostbackDomain/acquisition
    method: GET
    data_selector: click_id={p1}&security_token=xxxxx
- name: Publisher Tracking Link
  endpoint:
    path: /YourDomain/click
    method: GET
    data_selector: campaign_id=xx&pub_id=xx&p1={click_id}
- name: Advertiser Postback
  endpoint:
    path: /YourDomain/acquisition
    method: GET
    data_selector: click_id={subid4}&security_token=xxx
- name: conversion_pixel
  endpoint:
    path: /conversion/pixel
    method: POST
    data_selector: pixel_data
- name: errors
  endpoint:
    path: /errors
    method: GET
    data_selector: errors
    params: {}
- name: pixel_verification
  endpoint:
    path: /pixel_verification
    method: GET
    data_selector: verification_results
    params: {}
- name: whitelisting_process
  endpoint:
    path: /whitelisting
    method: GET
    data_selector: whitelisting_info
    params: {}
- name: publisher
  endpoint:
    path: /api/publisher
    method: GET
    data_selector: publishers
    params: {}
- name: publisher
  endpoint:
    path: /v1/publisher
    method: GET
    data_selector: data
- name: targeting_variables
  endpoint:
    path: /api/v1/targeting/variables
    method: GET
    data_selector: variables
- name: targeting_rule
  endpoint:
    path: /api/v1/targeting/rules
    method: POST
    data_selector: rules
- name: privacy_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: data
    params:
      click_id: CLICK_ID
      security_token: b50346a1c529c82dac33
      p8: '{af_adset_id}'
- name: create_campaign
  endpoint:
    path: /api/campaigns
    method: POST
    data_selector: data
    params: {}
- name: Fallback Campaign
  endpoint:
    path: /api/v1/fallback_campaign
    method: GET
    data_selector: data
    params: {}
- name: Fallback URL
  endpoint:
    path: /api/v1/fallback_url
    method: GET
    data_selector: data
    params: {}
- name: publisher_privacy_postback
  endpoint:
    path: /click
    method: GET
    data_selector: conversion
    params:
      campaign_id: fixed_value
      pub_id: fixed_value
      pub_camp_id: publisher
      sub_source: '38389393'
      p1: '{pub_click_id}'
      source: xyz
- name: smart_link
  endpoint:
    path: /smartlink
    method: POST
    data_selector: data
    params: {}
- name: Publisher Tracking Link
  endpoint:
    path: /generate/tracking/link
    method: POST
    data_selector: tracking_link
    params: {}
- name: smart_link
  endpoint:
    path: /api/v1/smartlink
    method: POST
    data_selector: smart_link_data
    params: {}
- name: publisher_tracking_link_parameters
  endpoint:
    path: /api/publisher/tracking/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: publisher_postback_macros
  endpoint:
    path: /api/publisher/postback/macros
    method: GET
    data_selector: macros
    params: {}
- name: tracking_link
  endpoint:
    path: /tracking
    method: POST
    data_selector: tracking_link
    params: {}
- name: publisher_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: postback
    params: {}
- name: advertiser_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: postback
    params: {}
- name: tracking_link
  endpoint:
    path: /click
    method: GET
    data_selector: tracking_link
    params: {}
- name: conversion_pixel
  endpoint:
    path: /conversion/pixel
    method: POST
    data_selector: data
    params: {}
- name: advertisers
  endpoint:
    path: /api/v1/advertisers
    method: GET
    data_selector: data
    params: {}
- name: publishers
  endpoint:
    path: /api/v1/publishers
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: ftp_uploads
  endpoint:
    path: /ftp/uploads
    method: POST
- name: postback
  endpoint:
    path: /postback
    method: POST
    data_selector: data
    params: {}
- name: whitelisting_process
  endpoint:
    path: /domain/whitelisting
    method: POST
    data_selector: response
    params: {}
- name: publisher
  endpoint:
    path: /v1/publisher
    method: GET
    data_selector: data
    params: {}
- name: advertiser
  endpoint:
    path: /advertiser
    method: GET
    data_selector: data
- name: privacy_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: postback_data
    params: {}
- name: campaigns
  endpoint:
    path: /publisher/campaigns
    method: GET
- name: postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: none
    params:
      click_id: '{source}'
      sale_amount: '{revenue}'
      security_token: b50346a1c529c82dac33
- name: advertiser_settings
  endpoint:
    path: /advertiser/settings
    method: GET
    data_selector: settings
    params: {}
- name: Publisher Privacy Postback
  endpoint:
    path: /click
    method: GET
    data_selector: conversion
    params:
      campaign_id: fixed_value
      pub_id: fixed_value
      pub_camp_id: publisher
      sub_source: '38389393'
      p1: '{pub_click_id}'
      source: xyz
- name: postback
  endpoint:
    path: /postback
    method: POST
    data_selector: data
    params: {}
- name: advertiser_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: parameters
    params: {}
- name: pixel_integration
  endpoint:
    path: /trackier/pixel/integration
    method: GET
    data_selector: pixels
    params: {}
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: Server Postback
  endpoint:
    path: https://demo.trackier.co/acquisition
    method: GET
    data_selector: null
    params:
      click_id: CLICK_ID
      security_token: b503xxxxxxxxxxxxac33
      sale_amount: AMOUNT
      currency: INR
- name: Image Pixel
  endpoint:
    path: https://demo.vnative.net/pixel
    method: GET
    data_selector: null
    params:
      adid: 64bexxxxxxxxxxxxxxxx4e28
      sale_amount: AMOUNT
      currency: INR
- name: IFrame Pixel
  endpoint:
    path: https://demo.gotrackier.com/pixel
    method: GET
    data_selector: null
    params:
      adid: 5fcfxxxxxxxxxxxxxxx0dc3
- name: google_capi
  endpoint:
    path: /google/capi
    method: POST
    data_selector: data
    params: {}
- name: amazon_integration
  endpoint:
    path: /amazon/integration
    method: GET
    data_selector: data
    params: {}
- name: flipkart_integration
  endpoint:
    path: /flipkart/integration
    method: GET
    data_selector: data
    params: {}
- name: zid_integration
  endpoint:
    path: /zid/integration
    method: GET
    data_selector: data
    params: {}
- name: pixel
  endpoint:
    path: /api/v1/pixel
    method: POST
    data_selector: data
    params: {}
- name: invoice_edit
  endpoint:
    path: /invoice/edit
    method: POST
- name: multiple_currencies_invoice_edit
  endpoint:
    path: /invoice/multiple-currencies/edit
    method: POST
- name: google_ads_link_feature
  endpoint:
    path: /google/ads/link
    method: POST
- name: bulk_download_invoices
  endpoint:
    path: /invoices/bulk/download
    method: GET
- name: upload_lp_id_csv
  endpoint:
    path: /landing-pages/upload/csv
    method: POST
- name: campaign_expiry_date_filter
  endpoint:
    path: /campaigns/filter/expiry-date
    method: GET
- name: multiple_category_payout_feature
  endpoint:
    path: /campaigns/payout/multiple-category
    method: POST
- name: goal_report
  endpoint:
    path: /goal/report
    method: GET
    data_selector: reports
- name: campaign_report
  endpoint:
    path: /api/campaign/report
    method: GET
    data_selector: results
- name: postback
  endpoint:
    path: /postback
    method: POST
    data_selector: data
    params: {}
- name: cohort_report
  endpoint:
    path: /cohort/report
    method: GET
    data_selector: data
    params: {}
- name: click_report
  endpoint:
    path: /report/clicks
    method: GET
    data_selector: clicks
- name: advertisers
  endpoint:
    path: /api/v1/advertisers
    method: GET
    data_selector: data
    params: {}
- name: publishers
  endpoint:
    path: /api/v1/publishers
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: subid_report
  endpoint:
    path: /subid/report
    method: GET
    data_selector: data
    params: {}
- name: ftp_uploads
  endpoint:
    path: /ftp/uploads
    method: POST
- name: conversion_report
  endpoint:
    path: /conversion/report
    method: GET
    data_selector: data
    params: {}
- name: team_members
  endpoint:
    path: /team_members
    method: GET
    data_selector: records
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: records
- name: partners
  endpoint:
    path: /partners
    method: GET
    data_selector: records
- name: hourly_report
  endpoint:
    path: /api/v1/hourly_report
    method: GET
    data_selector: data
    params: {}
- name: performance_report
  endpoint:
    path: /performance/report
    method: GET
    data_selector: data
    params: {}
- name: click_conversion_impressions
  endpoint:
    path: /performance/clicks-conversions-impressions
    method: GET
    data_selector: data
    params: {}
- name: goal_based_view
  endpoint:
    path: /performance/goal-based-view
    method: GET
    data_selector: data
    params: {}
- name: hourly_data
  endpoint:
    path: /performance/hourly-data
    method: GET
    data_selector: data
    params: {}
- name: daily_report
  endpoint:
    path: /daily_report
    method: GET
    data_selector: reports
    params: {}
- name: advertiser
  endpoint:
    path: /advertisers
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /publisher/campaigns
    method: GET
- name: publisher_report
  endpoint:
    path: /api/v1/publisher/report
    method: GET
    data_selector: data
    params: {}
- name: postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: ''
    params: {}
- name: advertiser_settings
  endpoint:
    path: /advertiser/settings
    method: GET
    data_selector: data
    params: {}
- name: Leads
  endpoint:
    path: /services/data/vXX.X/sobjects/Lead
    method: GET
    data_selector: records
- name: Advertiser Postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: parameters
    params: {}
- name: pixel_integration
  endpoint:
    path: /api/v1/pixels
    method: POST
    data_selector: pixel_data
    params: {}
- name: FTP Setup
  endpoint:
    path: /setup/ftp
    method: POST
    data_selector: integration
    params: {}
- name: Postback Setup
  endpoint:
    path: /setup/postback
    method: POST
    data_selector: integration
    params: {}
- name: Server Postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: null
    params:
      click_id: CLICK_ID
      security_token: b503xxxxxxxxxxxxac33
      sale_amount: AMOUNT
      currency: INR
- name: Image Pixel
  endpoint:
    path: /pixel
    method: GET
    data_selector: null
    params:
      adid: 64bexxxxxxxxxxxxxxxx4e28
      sale_amount: AMOUNT
      currency: INR
- name: IFrame Pixel
  endpoint:
    path: /pixel
    method: GET
    data_selector: null
    params:
      adid: 5fcfxxxxxxxxxxxxxxx0dc3
- name: click_data
  endpoint:
    path: /path/to/click/data
    method: GET
    data_selector: clicks
- name: conversion_data
  endpoint:
    path: /path/to/conversion/data
    method: GET
    data_selector: conversions
- name: conversions
  endpoint:
    path: /datafeed/listReports
    method: GET
    data_selector: conversions
    params: {}
- name: pixel
  endpoint:
    path: /pixel
    method: GET
    data_selector: pixels
    params: {}
- name: integration
  endpoint:
    path: /integration
    method: POST
    data_selector: data
    params:
      incremental: updated_at
- name: Shopify App Install
  endpoint:
    path: /api/v1/shopify/install
    method: POST
- name: Cancelled Orders
  endpoint:
    path: /api/v1/shopify/cancelled_orders
    method: POST
- name: integration
  endpoint:
    path: /integration/setup
    method: POST
- name: custom_reports
  endpoint:
    path: /reports/custom
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /path/to/campaigns
    method: GET
- name: conversion_data
  endpoint:
    path: /path/to/conversion_data
    method: GET
- name: goal_report
  endpoint:
    path: /goal/report
    method: GET
    data_selector: data
- name: campaign_report
  endpoint:
    path: /api/campaign/report
    method: GET
    data_selector: data
    params: {}
- name: postback_install
  endpoint:
    path: /acquisition
    method: POST
    data_selector: install
    params: {}
- name: postback_event
  endpoint:
    path: /acquisition
    method: POST
    data_selector: event
    params: {}
- name: install_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: ''
    params:
      click_id: '{clickid}'
      security_token: xxxxxxxxxxxxxxx
      idfa: '{idfa}'
      gaid: '{gaid}'
- name: event_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: ''
    params:
      click_id: '{clickid}'
      security_token: xxxxxxxxxxxxxxx
      idfa: '{idfa}'
      gaid: '{gaid}'
      goal_value: '{event_name}'
- name: install_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: records
    params:
      click_id: '{cl?Network Name}'
      security_token: xxxxxxxxxxxxxxx
      idfa: '{IDFA}'
      gaid: '{AIFA}'
- name: event_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: records
    params:
      click_id: '{cl?Network Name}'
      security_token: xxxxxxxxxxxxxxx
      idfa: '{IDFA}'
      gaid: '{AIFA}'
      goal_value: '{EVTNAME}'
- name: subid_report
  endpoint:
    path: /api/v1/subid/report
    method: GET
    data_selector: data
    params:
      incremental: date
- name: event_postback
  endpoint:
    path: /event/postback
    method: POST
    data_selector: data
    params: {}
- name: install_postback
  endpoint:
    path: /install/postback
    method: POST
    data_selector: data
    params: {}
- name: install_callback
  endpoint:
    path: /install/callback
    method: POST
- name: conversion_report
  endpoint:
    path: /conversion/report
    method: GET
    data_selector: data
    params: {}
- name: clicks
  endpoint:
    path: /api/clicks
    method: POST
    data_selector: data
    params: {}
- name: impressions
  endpoint:
    path: /api/impressions
    method: POST
    data_selector: data
    params: {}
- name: daily_report
  endpoint:
    path: /api/daily-report
    method: GET
    data_selector: data
    params: {}
- name: install_postback
  endpoint:
    path: /install_postback
    method: GET
    data_selector: response
    params: {}
- name: event_postback
  endpoint:
    path: /event_postback
    method: GET
    data_selector: response
    params: {}
- name: advertiser_report
  endpoint:
    path: /api/v1/advertiser/report
    method: GET
    data_selector: data
    params: {}
- name: partner_daily_report
  endpoint:
    path: /partner/daily/report
    method: GET
- name: publisher_report
  endpoint:
    path: /v1/publisher/report
    method: GET
    data_selector: data
    params: {}
- name: tracking_link
  endpoint:
    path: /Tracking/CreateTracker
    method: POST
    data_selector: tracker
    params: {}
- name: postback
  endpoint:
    path: /Postbacks
    method: POST
    data_selector: postback
    params: {}
- name: privacy_postback
  endpoint:
    path: /privacy_postback
    method: GET
    data_selector: records
    params: {}
- name: Leads
  endpoint:
    path: /services/data/vXX.X/sobjects/Leads
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
- name: product_feed
  endpoint:
    path: /api/v1/product_feed
    method: GET
    data_selector: data
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
- name: FTP Setup
  endpoint:
    path: /setup/ftp
    method: POST
    data_selector: integration
    params: {}
- name: Postback Setup
  endpoint:
    path: /setup/postback
    method: POST
    data_selector: integration
    params: {}
- name: skadnetwork_id
  endpoint:
    path: /contact/request/ad-network-id
    method: GET
    data_selector: skadnetwork_id
    params: {}
- name: integration
  endpoint:
    path: /integration/awin
    method: POST
    data_selector: data
    params:
      publisher_id: your_publisher_id
      key: your_authentication_key
      click_id: your_click_id_param
- name: privacy_postback
  endpoint:
    path: /privacy_postback
    method: GET
    data_selector: records
    params: {}
- name: conversion_data
  endpoint:
    path: /datafeed/listReports
    method: GET
    params:
      format: text
- name: track_event
  endpoint:
    path: /track_event
    method: POST
    data_selector: data
- name: integration
  endpoint:
    path: /integration
    method: POST
- name: track_data
  endpoint:
    path: /tracking/setup
    method: POST
- name: Shopify App Install
  endpoint:
    path: /admin/api/auth/access_token
    method: POST
    data_selector: access_token
- name: mixpanel_integration
  endpoint:
    path: /integration/mixpanel
    method: POST
    params:
      api_key: API Key
      api_secret: API Secret
      api_token: API Token
      status: active
- name: LinkConnectorIntegration
  endpoint:
    path: /api/integration
    method: POST
- name: AWS S3 Integration
  endpoint:
    path: /integration/aws-s3
    method: POST
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
    params: {}
- name: conversions
  endpoint:
    path: /conversions
    method: GET
    data_selector: data
    params: {}
- name: install_postback
  endpoint:
    path: /acquisition
    method: POST
    data_selector: postback
    params: {}
- name: in_app_event_postback
  endpoint:
    path: /acquisition
    method: POST
    data_selector: postback
    params: {}
- name: bulk_targeting
  endpoint:
    path: /campaigns/bulk_targeting
    method: POST
    data_selector: results
    params:
      max_rows: 500
- name: install_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: postbacks
    params:
      click_id: '{clickid}'
      security_token: xxxxxxxxxxxxxxx
      idfa: '{idfa}'
      gaid: '{gaid}'
- name: event_postback
  endpoint:
    path: /acquisition
    method: GET
    data_selector: postbacks
    params:
      click_id: '{clickid}'
      security_token: xxxxxxxxxxxxxxx
      idfa: '{idfa}'
      gaid: '{gaid}'
      goal_value: '{event_name}'
- name: attribution_link
  endpoint:
    path: /acquisition
    method: GET
    data_selector: data
    params: {}
- name: landing_pages
  endpoint:
    path: /bulk-upload/landing-pages
    method: POST
    data_selector: data
    params: {}
- name: Adjust Integration
  endpoint:
    path: /api/integration
    method: GET
    data_selector: data
    params: {}
- name: conversion_data
  endpoint:
    path: /data/import/conversion
    method: POST
    data_selector: conversion_records
- name: clicks
  endpoint:
    path: /clicks
    method: POST
    data_selector: click_data
- name: impressions
  endpoint:
    path: /impressions
    method: POST
    data_selector: impression_data
- name: advertiser
  endpoint:
    path: /advertisers
    method: POST
    data_selector: data
    params: {}
- name: partner_report
  endpoint:
    path: /reports/partner
    method: GET
    data_selector: data
    params: {}
- name: bulk_campaigns
  endpoint:
    path: /bulk-upload/campaigns
    method: POST
    data_selector: data
    params: {}
- name: privacy_postback
  endpoint:
    path: /privacy_postback
    method: GET
    data_selector: records
    params: {}
- name: fraud_rule
  endpoint:
    path: /api/fraud/rules
    method: POST
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: integration
  endpoint:
    path: /Anti-FraudTools/Botman.ninja/Config
    method: GET
- name: Fraud Score
  endpoint:
    path: /fraudscore
    method: POST
    data_selector: data
- name: skadnetwork_registration
  endpoint:
    path: /register/skadnetwork
    method: POST
    data_selector: response
    params: {}
- name: skadnetwork_details
  endpoint:
    path: /settings/skadnetwork
    method: GET
    data_selector: details
    params: {}
- name: fraud_rule
  endpoint:
    path: /api/fraud_rule
    method: POST
    data_selector: result
    params: {}
- name: privacy_postback
  endpoint:
    path: /privacy_postback
    method: GET
    data_selector: records
    params: {}
- name: fraud_rules
  endpoint:
    path: /api/v1/fraud_rules
    method: POST
- name: fraud_rule
  endpoint:
    path: /api/v1/fraud_rule
    method: POST
- name: Mixpanel
  endpoint:
    path: /integration/mixpanel
    method: POST
    data_selector: data
- name: Send PIN
  endpoint:
    path: /send-pin
    method: POST
- name: Verify PIN
  endpoint:
    path: /verify-pin
    method: POST
- name: AWS S3
  endpoint:
    path: /integration/aws-s3
    method: POST
    data_selector: data
    params: {}
- name: offers
  endpoint:
    path: /api/offers
    method: GET
    data_selector: offers
- name: payouts
  endpoint:
    path: /payouts/upload
    method: POST
- name: offers
  endpoint:
    path: /offers
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: email_notifications
  endpoint:
    path: /api/email/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: landing_pages
  endpoint:
    path: /api/v1/landing_pages
    method: POST
    data_selector: data
    params:
      incremental: updated_at
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notification
    params: {}
- name: notification_settings
  endpoint:
    path: /api/notification_settings
    method: GET
    data_selector: notifications
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: advertiser
  endpoint:
    path: /api/advertiser
    method: GET
    data_selector: advertisers
    params: {}
- name: publisher
  endpoint:
    path: /api/publisher
    method: GET
    data_selector: publishers
    params: {}
- name: invoice
  endpoint:
    path: /api/invoice
    method: GET
    data_selector: invoices
    params: {}
- name: team_members
  endpoint:
    path: /api/team_members
    method: GET
    data_selector: members
    params: {}
- name: advertisers
  endpoint:
    path: /api/v1/advertisers
    method: POST
    data_selector: data
    params: {}
- name: whitelabel_login
  endpoint:
    path: /services/data/vXX.X/whitelabel/login
    method: GET
- name: whitelabel_postback
  endpoint:
    path: /services/data/vXX.X/whitelabel/postback
    method: GET
- name: whitelabel_api
  endpoint:
    path: /services/data/vXX.X/whitelabel/api
    method: GET
- name: affiliate
  endpoint:
    path: /affiliate
    method: GET
    data_selector: data
- name: fraud_rule
  endpoint:
    path: /api/fraud_rule
    method: POST
- name: fraud_rule
  endpoint:
    path: /anti-fraud/rules
    method: POST
    data_selector: rules
    params: {}
- name: fraud_score
  endpoint:
    path: /api/v1/fraudscore
    method: POST
    data_selector: data
    params: {}
- name: fraud_rule
  endpoint:
    path: /api/fraud_rule
    method: POST
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
- name: conversion
  endpoint:
    path: /api/conversions
    method: GET
    data_selector: data
- name: fraud_rule
  endpoint:
    path: /api/v1/fraud/rules
    method: POST
    data_selector: rules
    params: {}
- name: reports
  endpoint:
    path: /v2/publishers/reports
    method: GET
- name: fraud_rules
  endpoint:
    path: /api/fraud/rules
    method: POST
    data_selector: ruleData
- name: Send PIN
  endpoint:
    path: /send_pin
    method: POST
    data_selector: response
    params: {}
- name: Verify PIN
  endpoint:
    path: /verify_pin
    method: POST
    data_selector: response
    params: {}
- name: account_updates
  endpoint:
    path: /api/v1/account/updates
    method: GET
    data_selector: data
    params: {}
- name: offers
  endpoint:
    path: /offers
    method: GET
    data_selector: data
- name: offers
  endpoint:
    path: /offers
    method: GET
    data_selector: offers
- name: personal_access_token
  endpoint:
    path: /authentication/personal_access_tokens
    method: POST
    data_selector: token
    params: {}
- name: requestor_cid
  endpoint:
    path: /account/requestor_cid
    method: GET
    data_selector: cid
    params: {}
- name: website_id
  endpoint:
    path: /account/websites
    method: GET
    data_selector: website_id
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: advertiser
  endpoint:
    path: /advertiser
    method: GET
    data_selector: records
- name: publisher
  endpoint:
    path: /publisher
    method: GET
    data_selector: records
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: records
- name: team_members
  endpoint:
    path: /team_members
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
- name: custom_tracking_domain
  endpoint:
    path: /customize/domain
    method: POST
    data_selector: domain_setup
- name: postback
  endpoint:
    path: /acquisition
    method: POST
    data_selector: conversion_data
    params:
      click_id: click_id
      security_token: security_token
- name: custom_domains
  endpoint:
    path: /custom/domains
    method: GET
    data_selector: domains
- name: tracking_invoices
  endpoint:
    path: /tracking/invoices
    method: GET
    data_selector: invoices
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
    params: {}
- name: SSO Configuration
  endpoint:
    path: /sso/configuration
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /v2/publishers/reports
    method: GET
- name: publishers
  endpoint:
    path: /v2/publishers
    method: GET
- name: Cname for API domain
  endpoint:
    path: /api/domain/cname
    method: POST
    data_selector: response
    params: {}
- name: Cname for tracking domain
  endpoint:
    path: /api/domain/cname/tracking
    method: POST
    data_selector: response
    params: {}
- name: Cname for postback/Pixel domain
  endpoint:
    path: /api/domain/cname/postback
    method: POST
    data_selector: response
    params: {}
- name: Login domain
  endpoint:
    path: /api/domain/login
    method: POST
    data_selector: response
    params: {}
- name: SSL enablement
  endpoint:
    path: /api/domain/ssl
    method: POST
    data_selector: response
    params: {}
- name: conversion_report
  endpoint:
    path: /conversion/report
    method: GET
    data_selector: records
    params: {}
- name: conversion_report
  endpoint:
    path: /api/conversion_report
    method: GET
    data_selector: data
    params: {}
- name: conversion_report
  endpoint:
    path: /conversion/report
    method: GET
    data_selector: data
- name: global_postback
  endpoint:
    path: /global_postback
    method: GET
- name: event_postback
  endpoint:
    path: /event_postback
    method: GET
- name: campaign_settings
  endpoint:
    path: /api/v1/campaigns/settings
    method: GET
    data_selector: data
    params: {}
- name: allowed_publishers
  endpoint:
    path: /campaigns/allowed_publishers
    method: POST
    data_selector: publishers
- name: blocked_publishers
  endpoint:
    path: /campaigns/blocked_publishers
    method: POST
    data_selector: publishers
- name: postback
  endpoint:
    path: /acquisition
    method: POST
    data_selector: conversion tracking
    params:
      click_id: click_id
- name: Publisher KPI Display Settings
  endpoint:
    path: /api/publisher/kpi/display
    method: GET
- name: Publisher General Settings
  endpoint:
    path: /api/publisher/general/settings
    method: GET
- name: campaigns
  endpoint:
    path: /publisher/campaigns
    method: GET
- name: customization
  endpoint:
    path: /api/customization
    method: GET
    data_selector: customSettings
- name: reports
  endpoint:
    path: /v2/publishers/reports
    method: GET
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: data
    params: {}
- name: publishers
  endpoint:
    path: /v2/publishers
    method: GET
- name: conversion_report
  endpoint:
    path: /conversion/report
    method: GET
    data_selector: records
- name: conversion_report
  endpoint:
    path: /conversion/report
    method: GET
    data_selector: data
    params: {}
- name: conversion_report
  endpoint:
    path: /conversion/report
    method: GET
    data_selector: report_data
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: allowed_publishers
  endpoint:
    path: /api/v1/allowed_publishers
    method: GET
    data_selector: data
- name: blocked_publishers
  endpoint:
    path: /api/v1/blocked_publishers
    method: GET
    data_selector: data
- name: campaigns
  endpoint:
    path: /publisher/campaigns
    method: GET
    data_selector: ''
- name: reports
  endpoint:
    path: /v2/publishers/reports
    method: GET
    data_selector: data
notes:
- Campaigns can generate tracking links, set multiple targeting options, select revenue
  and payout, and set different goals.
- You can track the conversions through either global-level postback or advertiser-level
  postback.
- Advertiser-level postback is generally recommended by our tech experts.
- Ensure pixels are placed in the <body> tag of the thank-you page.
- API Key is required for authentication.
- Ensure to get advertiser approval for at least one offer.
- If you select certain offers, then only those offers will be fetched on Trackier,
  and only those will be checked when the API refreshes.
- If you want all offers to be fetched, then do not select any particular offer and
  move to the next step to review the API setup.
- The API will instantly fetch offers based on the settings. If more offers are approved
  afterwards, then they will be fetched on the next refresh based on the frequency
  set while creating integration.
- You can add multiple rules by clicking on add new rule block.
- You can upload a CSV for bulk allow/deny source, GAID, and IDFA.
- Campaigns can generate tracking links and set multiple targeting options.
- Trackier provides an in-house customer support team available for instant query
  resolution.
- You can reach out to us via email at support@trackier.com.
- 'The priority of the fallback level is set as: campaign level, then advertiser level,
  then global level.'
- The fallback mechanism works only once, and chaining multiple fallbacks is not allowed.
- Publisher can generate a smart link from the publisher interface.
- You can only generate a Smart Link after it has been set up.
- When creating a Smart Link using the Category type, Country targeting is applied
  by default, so the Country checkbox is not shown.
- Automatically optimizes the smart link by monitoring campaign performance.
- Allows customizing traffic flow to campaigns based on performance.
- A publisher tracking link is a unique URL generated within every campaign.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- If you are not able to find a value corresponding to the parameter in the report,
  that means the publisher is not sending you the data correctly.
- When you retrieve the tracking link from the Trackier panel and paste it into the
  target URL field in the Propeller Ads panel, then please include the Propeller Ads
  macro for ${SUBID} against the Trackier p1 parameter.
- If manually adding multiple postbacks feels time-consuming, you also have the option
  to upload them via a CSV file.
- Ensure to pass Trackier click Id in the landing page URL
- Integration code must be placed in the <head> and <body> tags
- Always use Javascript Pixel while integrating with Google Tag Manager.
- Please ensure that the domain used in your campaign URL matches the one in your
  tracking link for Google Ads.
- Please do not include sub-domains in the Google Ads link, as they will not function
  under the specified domain in the campaign URL.
- If you encounter an error where the {lpurl} is missing, there's a straightforward
  solution. Simply add the same macro {lpurl} to the parameter you're not currently
  utilizing, from p1 to p10, and the issue should be resolved.
- Clients need to provide their privacy policy URL.
- All campaigns created in Google Ads must include a 'force transparent' parameter
  in their tracking links.
- Google Ads may disapprove your ads due to invalid tracking templates or destination
  mismatch.
- Ensure all URLs, including the final destination and redirect links, use secure
  HTTPS protocols.
- Some API endpoints may require additional parameters based on the request type.
- Some endpoints may have rate limits.
- Append &vta=1 in your privacy postback to record impression conversions.
- Requires setup of connected app in Trackier
- The most important macro to place in the publisher's postback is {p1}. This is the
  parameter in which we receive the click ID from the publisher; hence, the same needs
  to be passed in the postback to send back the click IDs.
- If the server status is 200 and still the postbacks are not received at the publisher's
  end, there is a possibility that the publisher's server is not accepting those conversions
  and hence needs to be checked at their end.
- If both fallback URL and fallback campaign are specified, the fallback campaign
  takes priority.
- Postbacks do not fire for private goals.
- There is no need to pass the click ID parameters. Postback will be sent via the
  campaign ID and the source ID.
- When creating a Smart Link using the Category type, Country targeting is applied
  by default.
- All the added postbacks will be saved in the pending state until your account manager
  approves them.
- Publishers can add the postback by navigating to the 'Integration' section and selecting
  'Postback.'
- To view the sent postback logs, click on 'See Logs.'
- Check back regularly for all the newest updates!
- You can now create and perform CRUD operations on Smartlink via API. The timeline
  will be updated for the changes you have made via API. Update and delete operations
  can be performed via the smart-link sort ID.
- This feature can be enabled from the backend if you desire us to do so.
- Include the Propeller Ads macro for ${SUBID} against the Trackier p1 parameter.
- Uses OAuth2 with refresh token — requires setup of connected app in Trackier
- Trackier can route conversions recorded against the click ID of your old platform.
- Ensure to pass the Trackier click Id in the landing page URL
- Add the script mentioned on all landing pages
- Trackier provides you with an option to reject the pixel if a particular required
  information is not received.
- Trackier provides an in-house customer support team, available for instant query
  resolutions.
- FTP allows for user authentication, ensuring that only authorized individuals have
  access to the files.
- You have the ability to enable 2-FA for yourself as an admin, but not for your team
  members.
- Both advertisers and publishers have the option to utilize 2-FA authentication.
- Ensure that the domain used in your campaign URL matches the one in your tracking
  link for Google Ads.
- Ensure all URLs use secure HTTPS protocols.
- Avoid using undefined variables in tracking templates.
- The widgets mentioned above are the most commonly used and are typically enabled
  by Admins for their advertisers.
- Ensure proper OAuth setup for authentication.
- Ensure to whitelist advertiser IP for secure tracking
- Uses new parameters for tracking conversions without click IDs
- Every API request must have a valid API key.
- Ensure that your Trackier campaign is configured to generate a unique click ID for
  each affiliate click.
- Map the Click ID custom field to Trackier's 'click_id' parameter and the sale amount
  to Trackier's 'sale_amount' parameter.
- The most important macro to place in the publisher's postback is {p1}. This is the
  parameter in which we receive the click ID from the publisher; hence, the same needs
  to be passed in the postback to send back the click IDs. In publisher's transactionid/clickid
  parameter, pass the macro {p1}
- In the postback edit section, make sure the conversion status is always set to approved
  in order for the postback to be sent to the publisher.
- Postbacks do not fire for the private goals.
- Enabling 2FA will require additional OTP verification.
- The publisher postback for iOS 14 requires the inclusion of PUB_CAMP_ID_PARA and
  PUB_SOURCE_ID_PARA as mentioned by the publisher.
- You need to ask the advertiser to place their macro against Trackier's parameter.
- Use Server Postback when the advertiser is using some tracking network, and Pixel
  when it is a direct advertiser/brand without any tracking platform.
- iFrame and Image pixel are used when you are working with a direct Advertiser and
  they don't have any tracking platform.
- The pixel doesn't work for CPI campaigns.
- If you are creating a pixel-based campaign, then while creating the campaign, you
  have to select either the iframe pixel or image pixel option while selecting the
  conversion tracking option.
- Pixels need to be placed on the Thank-You page of the website inside the <body>
  tag.
- 'Note: The maximum number of unique source grouping reports is 512'
- Uses OAuth2 authentication.
- Uses various filters for campaign reporting such as Campaign Name, Campaign ID,
  Publisher ID, etc.
- Make sure to replace the tokens with the corresponding values received via the Trackier
  Postback URL.
- Some click reports may return nulls in deeply nested fields
- Ensure to set up the OAuth2 credentials in the Trackier dashboard.
- This API provides insights into campaign performance via SubID reports.
- You have the ability to enable 2-FA for yourself as an admin, but not for your team
  members. You can advise your team members to enable 2FA for themselves.
- You can save the conversion report and create a quick link to access it whenever
  you want.
- Ensure all team members have their own accounts with the correct access levels
- Use built-in features to protect data and sensitive information
- Campaigns can be monitored hourly for performance insights.
- Please ensure to set up OAuth2 for authentication.
- The publisher report provides insights on traffic, conversions, and revenue.
- Ensure Trackier campaign is configured to generate a unique click ID for each affiliate
  click.
- Configure the Postback in LeadByte, mapping the Click ID custom field to Trackier's
  'click_id' parameter and the sale amount to Trackier's 'sale_amount' parameter.
- This feature helps optimize offer conversion rates by monitoring performance, sending
  alerts, and automatically blocking sources based on rules.
- Create a connected app in Salesforce with the name Trackier.
- Choose 'All users can authorize themselves' for Permitted Users.
- 'To use status in the postback: Approved, Cancelled, Rejected, Pending'
- Product feeds are updated every 24 hours to reflect any changes in the product feed
  made by the brand.
- You need to provide the correct host address to ensure a successful connection.
- You can only fetch data up to a day ago in AWIN integration.
- Make sure the security token in the error log matches with the advertiser-level
  global postback.
- The Amazon integration will only function on the website and not on the app.
- The conversion is retrieved from the store ID provided by Amazon.
- Select either the iframe pixel or image pixel option while creating the campaign.
- When adding pixels to an advertiser's website via Tag Manager, make sure you have
  white-labeled the tracking domain.
- Integration requires Publisher ID and Domain from Partnerize.
- Ensure to replace placeholders in tracking links correctly.
- 'Post-back URL: An exchange of data between servers that is used to attribute and
  report on a user''s action and behaviour on a website, app, or network.'
- Ensure to select the required scopes in Shopify Admin API.
- Custom reports help measure performance across different publishers, campaigns,
  and conversions.
- To get an API key for your Cuelinks account, you must be a registered publisher
  earning at least ₹10,000 per month in commissions.
- Campaign data can be filtered by various parameters such as advertiser, publisher,
  city, device, etc.
- Campaign reports include fields like gross clicks, approved conversions, payout,
  revenue, and profit.
- Filters can be applied for conditions like gross clicks.
- Integration will be done with Network Level Event and Install Postback.
- You do not need to change the Postback if you are working with multiple advertisers.
- If you want to approve the clicks received from pixel, you can contact your account
  manager as Trackier has a workaround for that request.
- The maximum number of unique source grouping reports is 512
- The integration will be done with Network Level Event and Install Postback.
- Filters available for unique clicks, pending conversions, rejected conversions,
  CTR, etc.
- No pre-integration setup is needed with Adjust.
- You can find the install postback in your Trackier panel under Automation > Integration
  > Mobile App Tracking > Adjust Setup.
- You can save the conversion report and create a quick link to access it whenever
  you want with zero hassle.
- Integration requires filling out a form with business details and click/impression
  macros.
- Ensure correct setup of authentication to access reports
- Once you submit the form, the process is complete, and you will need to wait to
  hear back from Kochava in 3–4 business days.
- To prevent fraud liabilities and ensure that your ad network is not attributed to
  fraudulent clicks, it is advisable to implement signature validation for clicks.
- In certain instances, traffic may originate from multiple sources within an ad-network.
- Enter the API token received from your Appsflyer account.
- Report can be filtered by date range and other criteria.
- This article is intended for ad networks that want to integrate with the Appmetrica
  MMP platform.
- The CR rule is set up at the advertiser level.
- Ensure that you have completed the SKAdNetwork Setup with Apple in order to receive
  conversions on Trackier.
- Your postbacks may vary depending on the integration you select.
- Create a connected app using the name Trackier on the Salesforce website.
- Allow data management rights for Trackier on the Salesforce website.
- Ensure accurate mapping of AppsFlyer parameters and Trackier macros in the tracking
  URL.
- Product feeds are updated every 24 hours.
- It might take up to 24 hours to get the postback from the MMP partner.
- Uploading a CSV file is entirely optional and depends on your specific requirements.
- Secure your private keys as you would other credentials, such as passwords.
- Share only your public key.
- Connect with the Adjust team to place the postback at their end.
- Only conversions received through our tracking link will be counted.
- Enable Server Postback as a conversion tracking method inside a campaign
- Enter the Global Postback URL Security Token in Segment for integration
- Ensure to replace INSERT_CLICKID with {click_id} in the tracking link.
- Requires setup of API scopes in Shopify.
- Enable toggle to activate the LinkConnector integration.
- API Key can be found from your LinkConnector account.
- Access and Secret Key credentials authenticate and authorise the platform to access
  your S3 bucket.
- The AWS Secret Access Key can only be viewed once, immediately after it’s created.
- You need to add an API token, which you will get after signup on Mobrand
- CSV upload system supports up to 50,000 rows, if there are more than 50,000 rows
  we recommend splitting the file in two different parts and uploading them.
- You can also delete the manually uploaded data. You will have a window of '90 days'
  to delete the manually uploaded files post which you won't be able to do it yourself.
- Supports up to 50,000 rows for CSV upload
- You can upload a maximum of 500 rows per CSV.
- You can go to the Automation section, click on Integrations, and navigate to mobile
  app tracking.
- CSV upload system supports up to 50,000 rows, if there are more than 50,000 rows
  we recommend splitting the file into two different parts and uploading them.
- There is no need for a pre-integration setup with the Adjust platform.
- If you have included IP whitelisting in the advertiser settings, then priority will
  be given to those specific IPs instead of the entire list of IPs provided and updated
  by Adjust.
- If the payout or revenue is uploaded in percentage format, the system will not accept
  the upload.
- Trackier supports both server-side and client-side data for impressions.
- System supports uploading up to 50,000 rows in CSV files.
- If there are more than 50,000 rows, split the file into two parts.
- CSV upload system supports up to 50 thousand rows, if there are more than 50,000
  rows, we recommend that the file be split into two parts and uploaded separately.
- You can delete the manually uploaded data. You will have a window of '90 days' to
  delete the manually uploaded files post which you won't be able to do it yourself.
- Enter the API token that you received from your Appsflyer account.
- Enter the App ID of the one you want to view reports on Trackier.
- CSV upload system supports up to 50 thousand rows, if there are more than 50,000
  rows, we recommend that the file be split in two parts and uploaded separately.
- This article will help you understand how to use the anti-fraud tool to combat fraudulent
  activities in your campaigns.
- Ensure that all fields are correctly filled and mapped before running to avoid any
  issues during the integration process.
- Ensure all fields are correctly filled and mapped before running to avoid any issues
  during the integration process.
- It might take up to 24 hours to get the postback from the MMP partner
- The Fraudscore Key can be obtained from the Fraud Score.
- The API key for 'FraudScore Realtime' is separate from the FraudScore API key.
- You must register on Apple to get your SKadnetwork ID.
- Secure your private keys as you would other credentials.
- Please ensure that all fields are correctly filled and mapped before running to
  avoid any issues during the integration process.
- You need to connect with the Adjust team to place the postback at their end.
- It is suggested that you enter the Global Postback URL Security Token to get the
  integration to work.
- Select 'Server to Server' as your tracking method.
- Make sure to append the {P1} macro to the end of the link.
- Ensure Click Pixel setting is enabled for proper tracking.
- Impact does not allow the panel to automatically fetch goals; therefore, they need
  to be created manually.
- The API will instantly fetch offers based on the settings.
- If more offers are approved afterwards, then they will be fetched on the next refresh
  based on the frequency set while creating integration.
- Default visibility is Private.
- Default offer status is Active.
- Please remove the unwanted column while uploading it.
- The CSV upload system supports up to 50,000 rows, if there are more than 50,000
  rows, we recommend splitting the file into two different parts and uploading them.
- You can delete the manually uploaded data. You will have a window of '90 days' to
  delete the manually uploaded files, which you won't be able to do yourself.
- If you lose or forget your token, you’ll need to generate a new one.
- Email notifications can be triggered automatically or manually.
- SMTP details must be configured in the panel to send email notifications.
- If the payout or revenue is uploaded in percentage format, the system will not accept
  the upload and will display an error.
- CSV upload system supports up to 50 thousand rows.
- You can delete the manually uploaded data within 90 days.
- The publisher access section will only be visible when the campaign is private.
- The most important macro to place in the publisher's postback is {p1}. This is the
  parameter in which we receive the click ID from the publisher; hence, the same needs
  to be passed in the postback to send back the click IDs. In publisher's transactionid/clickid
  parameter, pass the macro {p1}  * **&transactionid={p1}**
- Customers on the Trackier Agency and Enterprise Plans have access to the white-label
  feature.
- Once uploaded, it takes 1 min to 4 hours for the data to get processed depending
  on CSV size.
- Trackier offers an integrated anti-fraud solution designed to address the issue
  of fraudulent traffic.
- It is mandatory to give your rule a name, otherwise you will not be able to move
  on to the next step.
- Whitelabeling allows you to customize domains for login, postback, and API.
- Trackier provides SSL for your customised domain only in the Enterprise Plan.
- The API has rate limits that may affect integration.
- Ensure to handle token expiration appropriately.
- Once you have added a personal tracking domain and set it as the default tracking
  domain, it will be visible to you and your publishers in any new campaigns that
  are created after the tracking domain has been added.
- The organisation ID can be obtained from the traffic guard.
- The API Token can be obtained from the traffic guard.
- By default, all publishers are whitelisted.
- By default, all campaigns are whitelisted.
- Even if the user logs out, they will be redirected to your custom login page.
- Trackier also provides you with the ability to show invalid credentials when entered
  by any user.
- You can get all the information you need from your SMTP server, and if you're adding
  an Amazon or Google SMTP server, make sure 2-step authentication is turned off.
- The Botman Key/ID can be obtained from the Botman.ninja
- The click-level integration requires a Biz ID, which is only provided by Botman.ninja
- Use the Google Workspace SMTP relay service to send mail from these devices, as
  it authenticates with IP addresses.
- For enabling any of the settings, make sure you have administrator rights; otherwise,
  you won't be able to make any changes or set up anything.
- Fraudscore Key obtained from the Fraud Score.
- Token is provided solely by Fraud Score.
- Default status for campaigns and publishers is whitelisted.
- API requires proper OAuth2 setup for authentication
- Generate API key from the panel, which will be visible on publisher's panel under
  API section.
- Ensure Click Pixel is enabled for smooth functionality.
- Reach out to support@trackier.com for assistance with account issues.
- Cname must be added correctly.
- SSL for your domain should be enabled.
- The API will instantly fetch offers based on the settings. If more offers are approved
  afterwards, then they will be fetched on the next refresh based on the frequency
  set while creating integration on step 4.
- You need to check with your advertiser whether the offers that you are referring
  to are approved by your advertiser or not.
- Offers will be fetched as per basic details and integration settings.
- By default, the status is set to Active.
- The default visibility is Private.
- By default, All offer models are selected and will be imported.
- 'Once you click on Register, you''ll see a message: ''New Personal Access Token
  Created''.'
- Global Postback notifies conversions across all offers for an advertiser, while
  standard postbacks are specific to a single offer.
- If publishers and advertisers are uploaded by CSV, the email notification will not
  be triggered.
- The request email will be sent to the account manager of the publisher only.
- This email will be sent to the publisher when any of its campaign import integration
  is completed.
- This will send email to publisher only.
- This will send email to advertiser only.
- Ensure proper access is assigned to the publisher for campaign visibility.
- For event postback, you can add &goal_value={event_name}
- The revenue can be set to 100% if you own the entire commission in sale_amount.
- Is data transferred outside the EU? No
- click_id the most important and mandatory information to track the conversions
- Customers on the Trackier Agency and Enterprise Plans have access to white-labeling
  features.
- Whitelabeling your login and postback domains allows you to give partners, advertisers,
  and publishers a more professional experience.
- SSL will be automatically provided if the domain is purchased through Cloudflare.
- Advertisers need to ensure they include a click_id when firing an API request with
  a POST method.
- Your advertiser needs to send the correct macros against our parameters.
- Custom applications are accessible to account admin and sub-administrators.
- Some objects may return nulls in deeply nested fields
- Before submitting the form, Base64 encode the password to ensure special characters
  are preserved.
- Make sure to include a hidden input field named is_pass_encoded and set its value
  to true.
- Non-Targeted Campaign Status can be set as either 'Cancelled' or 'Rejected'.
- CAPs to Publishers can be set to visible or hidden.
- Ensure administrator rights to make changes.
- Turn off 2-factor authentication.
- Key settings include Entity ID, Assertion Consumer Service (ACS) URL, XML file,
  and certificates.
- Admins can control whether login via email and password is allowed or completely
  disabled for users, publishers, or advertisers.
- Integrating Slack with Trackier sends real-time updates, automated reports, and
  budget alerts directly to Slack.
- Trackier will automatically fetch your available Slack channels along with their
  respective Channel IDs.
- Some objects like Contact may return nulls in deeply nested fields
- Trackier identifies and anonymizes any Personally Identifiable Information (PII)
  or sensitive data of users before storing the data on its servers.
- For deleted or expired accounts, the data is deleted within 45 to 90 days from the
  date of expiry.
- You can generate API key from the panel, which will be visible on publisher's panel
  under API section.
- Trackier is fully committed to complying with the General Data Protection Regulation
  (GDPR).
- Data is encrypted both in transit and at rest.
- Reach out to support@trackier.com for assistance with account updates.
- Users can export the conversion log CSV file for offline report.
- Traffic that does not meet the targeting condition will be visible in the rejected
  state.
- To view all the filters, please access the admin's conversion report.
- Ensure cookies are allowed for testing pixels
- Test the pixel using the Trackier tracking link
- You can export the conversion log CSV file from the Export CSV button to view the
  reports offline.
- Contact support at support@trackier.com for inquiries.
- There is a certain impression quota provided in each plan. There will be overage
  charges for extra impressions tracked.
- The {imp_id} macro is mandatory to be placed on the advertiser URL with the impression
  parameter.
- Trackier collects user IP and User Agent.
- Data is not transferred outside the EU.
- Ensure to check the tracking settings for accurate data.
- click_id the most important and mandatory information to track the conversions.
- Campaign visibility must be set to private to allow or block publishers.
- If not a single KPI is selected, then by default, the system assumes all the KPIs
  are selected.
- API key must be used as a header request with the parameter X-API-Key.
- IP addresses can be whitelisted for additional security.
- Customization options available for admins and sub-administrators.
- Advertiser panel settings can be customized directly from the panel.
- From the manage publishers section, you can generate API key from the panel, which
  will be visible on publisher's panel under API section.
- Campaign settings include options for non-targeted status, CAP visibility, and conversion
  payout overrides.
- Custom questions can be set for permission-driven campaigns.
- SSO Configuration in Trackier enhances security and user convenience by centralizing
  authentication.
- Proper setup ensures seamless login experiences, reduces password fatigue, and provides
  flexibility in managing access for publishers, advertisers, and team members.
- Integrates with Slack for real-time updates.
- Requires Slack app creation and permission setup.
- If you’ve added new channels in Slack, don’t forget to click on refresh to ensure
  the channels are updated.
- Trackier is fully committed to complying with the General Data Protection Regulation
  (GDPR) to ensure the privacy, security, and proper handling of visitor and campaign
  data.
- Performance Report allows viewing aggregated campaign performance based on various
  parameters.
- The {imp_id} macro is mandatory to be placed on the advertiser URL with the impression
  parameter. This will help you capture the impression ID effectively.
- Ensure campaigns are configured correctly for optimal performance.
- When campaign visibility is set to private, provide access to publishers by adding
  them to 'Approved' publishers.
- There is no limit on the number of publishers that can be added to the blocked list.
- API key must be included in every request as a header.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request parameters and body.'
- '401 Unauthorized: Recheck OAuth token.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Ensure API key is valid'
- '404 Not Found: Verify the endpoint path'
- 'BLANK: It means no pixel is placed on the advertiser''s end or is not in the <body>
  tag.'
- 'NO_SESSION_ID: Users have not landed on the landing page from the tracking link;
  it might be an organic conversion.'
- 'NO_CLICK_FOR_SESSION: It means no valid click is available against this pixel firing.'
- 'DUPLICATE_CLICK_ID: It means conversion is already recorded with the same click
  id.'
- 'INVALID_CLICK_ID: It means the click ID doesn''t belong to the Trackier platform.'
- 'INVALID_CAMPAIGN_ID: It means a pixel from another campaign is placed on the advertiser''s
  end.'
- 'INVALID_GOAL_VALUE: The goal value created in the campaign does not match what
  we are getting in the fired pixel log.'
- 'ORDER_DATE_IN_PAST: This error can arise if the click time is before the conversion
  time.'
- 'destination mismatch url: occurs when targeting is set at a click level within
  the campaign.'
- 'Malicious Software: Verify the tracking template and check for malware.'
- 'Compromised Website: Scan for security issues and request a review after resolving.'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Verify the authentication credentials.'
- '404 Not Found: Ensure the endpoint exists.'
- '401 Unauthorized: Check the provided credentials.'
- '429 Too Many Requests: Slow down the request rate.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'BLANK (there is nothing on the page): It means no pixel is placed on the advertiser''s
  end or is not in the <body> tag.'
- 'DUPLICATE_CLICK_ID: It means conversion is already recorded with the same click
  id if it is a purchase-type campaign; then enable tracking multiple conversions
  from the same click id from the campaign setting.'
- 'INVALID_CLICK_ID: It means the click ID doesn''t belong to the Trackier platform,
  and it is not a genuine test with the Trackier tracking link.'
- 'INVALID_CAMPAIGN_ID: It means a pixel from another campaign is placed on the advertiser''s
  end; please check and share the pixel again.'
- 'ORDER_DATE_IN_PAST: This error can arise because of two situations: If the click
  time is before the conversion time or if the time in &order_date in the pixel tag
  is before the actual time of the conversion.'
- 'Malicious Software: Check for malware and ensure URLs are correct.'
- 'Compromised Website: Scan for security issues and request a review.'
- '401 Unauthorized: Check your API credentials'
- '403 Forbidden: No permission for this action'
- If the server status is 200 and still the postbacks are not received at the publisher's
  end, there is a possibility that the publisher's server is not accepting those conversions
  and hence needs to be checked at their end.
- 'INVALID_CLICK_ID: Click doesn''t belong to the Trackier platform'
- 'DUPLICATE_CLICK_ID: Tracking multiple conversions from the same click ID not enabled'
- 'INVALID_SECURITY_TOKEN: Incorrect postback shared with the advertiser'
- 'INVALID_GOAL_VALUE: Incorrect goal value provided in postback'
- '400 Bad Request: Check for missing or invalid parameters'
- '401 Unauthorized: Verify credentials and access permissions'
- '401 Unauthorized: Check your OAuth token and scopes.'
- '429 Too Many Requests: Rate limit exceeded, please try again later.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Check the endpoint path.'
- 'Global Targeting doesn’t allow conversion to be approved: The conversion originated
  from outside the campaign''s targeted areas.'
- 'Campaign Targeting doesn’t allow conversion to be approved: The conversion originated
  from outside the campaign''s targeted areas.'
- 'The CAP does not allow the conversion to be approved: The conversion cancelled
  because the conversion cap has reached.'
- '401 Unauthorized: Check your client credentials and token.'
- '401 Unauthorized: Check API credentials and permissions.'
- 'Invalid Client ID: Recheck Consumer Key.'
- 'Unauthorized: Ensure correct OAuth scopes are set.'
- 'INVALID_CLICK_ID: Click doesn''t belong to the Trackier platform, advertiser tried
  to manually fire postback with a random click ID.'
- 'DUPLICATE_CLICK_ID: When you are tracking multiple conversions from the same click
  ID and you have not enabled the option to track multiple conversions.'
- 'INVALID_SECURITY_TOKEN: You have shared the incorrect postback with the advertiser.'
- 'INVALID_GOAL_VALUE: You have created a goal with the incorrect goal value.'
- 'Invalid Access Token: Verify the token or permissions.'
- 'API Scope Error: Ensure appropriate scopes are selected.'
- 'Due to campaign status ''paused,'' the conversion stands cancelled: If a conversion
  is generated while the campaign is paused, the conversion status will be marked
  as canceled.'
- '400 Bad Request: Check the parameters sent in the request.'
- '401 Unauthorized: Verify credentials and access rights.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Server issues, try again later'
- '401 Unauthorized: Check credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '500 Internal Server Error: Check server logs for more details'
- '400 Bad Request: Ensure CSV format is correct and required columns are filled'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'PUBLISHER_NOT_ACTIVE: The publisher you have added to the campaign is not active.'
- 'INVALID_PUBLISHER_ID: The publisher has changed the publisher ID in the tracking
  link.'
- 'INVALID_OFFER_ID: The publisher has changed the offer ID in the tracking link.'
- 'OFFER_NOT_ACTIVE: The campaign is either paused or disabled.'
- 'INSUFFICIENT_PERMISSION: Publisher does not have permission to run the campaign.'
- 'LP_PAUSED_OR_TARGETING: The landing page and targeting are mismatched.'
- 'LINK_DISABLED OR CAP_REACHED: The campaign has reached the limit of the ''CAP.'''
- 'ADV_INACTIVE: The advertiser you have added to the campaign is not active.'
- 'PUB_BLOCKED_ON_ADV OR PUB_BLOCKED_ON_CAMP: The publisher is blocked by the respective
  advertiser.'
- 'ADV_NOT_WHITELISTED_ON_PUB: Advertiser is not being whitelisted by the publisher.'
- '401 Unauthorized: Invalid credentials or token expired.'
- 'Invalid Credentials: Check for special characters in the password.'
- '400 Bad Request: Check for required fields in the request.'
- '401 Unauthorized: Verify API Key.'
- '401 Unauthorized: Check client credentials'
- '404 Not Found: Verify endpoint URL'
- If offers are not reflecting, check if they have been approved by the publisher.
- 'Resource not found: Check the API URL.'
- '400 Bad Request: Invalid request parameters.'
- '401 Unauthorized: Invalid or expired credentials.'
- 'LP_PAUSED_OR_TARGETING: There can be multiple reasons for this error.'
- The DNS record has not propagated fully.
- The CNAME record was added at the wrong domain level.
- The host field was entered incorrectly, resulting in a mismatch.
- '401 Unauthorized: Recheck API request parameters or authorization'
- 'Invalid Credentials: Check for special characters in the password that may cause
  a mismatch.'
- 'The clicks have reached cap: If conversions are received but display as cancelled
  after the cap is reached, it may be because the clicks were attributed before the
  cap was reached.'
- 'The advertiser may/may not write a note: Conversions that do not meet agreed upon
  terms can be manually cancelled by the advertiser.'
- 'The Fraud detection rules do not allow the conversion to be approved: If the system
  detects fraudulent conversions as per the rules, the conversions will be cancelled.'
- '401 Unauthorized: Check OAuth token validity.'
- '404 Not Found: Verify the endpoint URL.'
- 'Unauthorized: Check API key validity.'
- '401 Unauthorized: Check credentials and permissions'
- '400 Bad Request: Validate request parameters'
- '401 Unauthorized: Check token and permissions'
- '404 Not Found: Verify endpoint and parameters'
- 'Due to campaign status “paused,” the conversion stands cancelled: If a conversion
  is generated while the campaign is paused, the conversion status will be marked
  as canceled.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'AUTHENTICATION_FAILED: Verify client credentials.'
- 'RESOURCE_NOT_FOUND: Ensure the requested resource exists.'
- '403 Forbidden: Check if publisher access is allowed.'
- '404 Not Found: Ensure the publisher ID is correct.'
- 'Unauthorized: Check API key'
auth_info:
  mentioned_objects:
  - OAuthToken
  - AuthProvider
  - NamedCredential
  - OauthToken
  - Publisher ID
  - Domain
  - User Application Key
  - User API Key
client:
  base_url: https://api.trackier.io
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.trackier.com/oauth2/token
    client_id: '{{ dlt.secrets[''trackier_client_id''] }}'
    client_secret: '{{ dlt.secrets[''trackier_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''trackier_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
