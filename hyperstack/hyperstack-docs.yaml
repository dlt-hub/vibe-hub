resources:
- name: enable_ssh_access
  endpoint:
    path: /core/virtual-machines/{virtual-machine-id}/sg-rules
    method: POST
    data_selector: ''
    params: {}
- name: firewall_rule
  endpoint:
    path: /core/virtual-machines/<VM-ID>/sg-rules
    method: POST
    data_selector: remote_ip_prefix
    params: {}
- name: virtual_machines
  endpoint:
    path: /core/virtual-machines
    method: GET
    data_selector: instances
- name: stop_virtual_machine
  endpoint:
    path: /v1/core/virtual-machines/{virtual_machine_id}/stop
    method: GET
- name: start_virtual_machine
  endpoint:
    path: /v1/core/virtual-machines/{virtual_machine_id}/start
    method: GET
- name: create_inbound_rule
  endpoint:
    path: /v1/core/virtual-machines/{VM ID HERE}/sg-rules
    method: POST
- name: create_outbound_rule
  endpoint:
    path: /v1/core/virtual-machines/{VM ID HERE}/sg-rules
    method: POST
- name: sg_rules
  endpoint:
    path: /core/virtual-machines/{virtual-machine-id}/sg-rules
    method: POST
    data_selector: ''
    params: {}
- name: virtual_machine
  endpoint:
    path: /core/virtual-machines/<VM-ID>/sg-rules
    method: POST
    data_selector: null
    params: {}
- name: virtual_machines
  endpoint:
    path: /v1/core/virtual-machines
    method: GET
    data_selector: instances
- name: stop_vm
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}/stop
    method: GET
    data_selector: message
    params: {}
- name: start_vm
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}/start
    method: GET
    data_selector: message
    params: {}
- name: create_inbound_rule
  endpoint:
    path: /core/virtual-machines/{VM ID HERE}/sg-rules
    method: POST
    data_selector: security_rule
    params: {}
- name: create_outbound_rule
  endpoint:
    path: /core/virtual-machines/{VM ID HERE}/sg-rules
    method: POST
    data_selector: security_rule
    params: {}
- name: volume_attachment
  endpoint:
    path: /api-reference/core-resources/volumes/volume-attachment
    method: POST
- name: bootable_volumes
  endpoint:
    path: /storage/volumes/bootable-volumes
    method: GET
- name: shared_storage_volumes
  endpoint:
    path: /storage/volumes/shared-storage-volumes
    method: GET
- name: create_image
  endpoint:
    path: /core/snapshots/{id}/image
    method: POST
- name: list_images
  endpoint:
    path: /core/images
    method: GET
- name: retrieve_image
  endpoint:
    path: /core/images/{id}
    method: GET
- name: delete_image
  endpoint:
    path: /core/images/{id}
    method: DELETE
- name: create_snapshot
  endpoint:
    path: /core/virtual-machines/{id}/snapshots
    method: POST
- name: list_snapshots
  endpoint:
    path: /core/snapshots
    method: GET
- name: delete_snapshot
  endpoint:
    path: /core/virtual-machines/{id}/snapshots/{id}
    method: DELETE
- name: restore_snapshot
  endpoint:
    path: /core/snapshots/{id}/restore
    method: POST
- name: retrieve_snapshot_details
  endpoint:
    path: /core/snapshots/{id}
    method: GET
- name: create_volume
  endpoint:
    path: /api-reference/core-resources/volumes/create-volume
    method: POST
- name: attach_volumes
  endpoint:
    path: /api-reference/core-resources/volumes/volume-attachment/attach-volumes
    method: POST
- name: attach_public_ip
  endpoint:
    path: /core/virtual-machines/{id}/attach-floatingip
    method: POST
- name: detach_public_ip
  endpoint:
    path: /core/virtual-machines/{id}/detach-floatingip
    method: POST
- name: regions
  endpoint:
    path: /docs/resource-management/regions
    method: GET
    data_selector: regions
    params: {}
- name: data_centers
  endpoint:
    path: /docs/resource-management/data-centers
    method: GET
    data_selector: data_centers
    params: {}
- name: create_virtual_machine
  endpoint:
    path: /virtual-machines
    method: POST
    data_selector: user_data
- name: create_virtual_machine
  endpoint:
    path: /v1/core/virtual-machines
    method: POST
    data_selector: user_data
- name: virtual_machine_metrics
  endpoint:
    path: /core/virtual-machines/{id}/metrics
    method: GET
    data_selector: metrics
- name: virtual_machine_events
  endpoint:
    path: /core/virtual-machines/{id}/events
    method: GET
    data_selector: events
- name: firewalls
  endpoint:
    path: /core/firewalls
    method: GET
    data_selector: firewalls
    params: {}
- name: firewall_details
  endpoint:
    path: /core/firewalls/{id}
    method: GET
    data_selector: firewall_details
    params: {}
- name: create_firewall
  endpoint:
    path: /core/firewalls
    method: POST
    data_selector: create_firewall_response
    params: {}
- name: delete_firewall
  endpoint:
    path: /core/firewalls/{id}
    method: DELETE
    data_selector: delete_firewall_response
    params: {}
- name: add_firewall_rule
  endpoint:
    path: /core/firewalls/{firewall_id}/firewall-rules
    method: POST
    data_selector: add_firewall_rule_response
    params: {}
- name: remove_firewall_rule
  endpoint:
    path: /core/firewalls/{firewall_id}/firewall-rules/{firewall_rule_id}
    method: DELETE
    data_selector: remove_firewall_rule_response
    params: {}
- name: attach_firewall_to_vms
  endpoint:
    path: /core/firewalls/{firewall_id}/update-attachments
    method: POST
    data_selector: attach_firewall_response
    params: {}
- name: add_firewall_rule_to_vm
  endpoint:
    path: /core/virtual-machines/{id}/sg-rules
    method: POST
    data_selector: add_firewall_rule_to_vm_response
    params: {}
- name: delete_firewall_rule_from_vm
  endpoint:
    path: /core/virtual-machines/{id}/sg-rules/{sg_rule_id}
    method: DELETE
    data_selector: delete_firewall_rule_from_vm_response
    params: {}
- name: retrieve_organization_details
  endpoint:
    path: /auth/organizations
    method: GET
    data_selector: details
- name: remove_organization_member
  endpoint:
    path: /auth/organizations/remove-member
    method: POST
    data_selector: status
- name: change_organization_name
  endpoint:
    path: /auth/organizations/update
    method: PUT
    data_selector: status
- name: invite_organization_member
  endpoint:
    path: /auth/invites
    method: POST
    data_selector: invite_status
- name: list_organization_invitations
  endpoint:
    path: /auth/invites
    method: GET
    data_selector: invitations
- name: delete_organization_invitations
  endpoint:
    path: /auth/invites/{id}
    method: DELETE
    data_selector: delete_status
- name: list_rbac_roles
  endpoint:
    path: /auth/roles
    method: GET
    data_selector: roles
- name: create_rbac_role
  endpoint:
    path: /auth/roles
    method: POST
    data_selector: role_creation_status
- name: retrieve_rbac_role_details
  endpoint:
    path: /auth/roles/{id}
    method: GET
    data_selector: role_details
- name: update_rbac_role
  endpoint:
    path: /auth/roles/{id}
    method: PUT
    data_selector: update_status
- name: delete_rbac_role
  endpoint:
    path: /auth/roles/{id}
    method: DELETE
    data_selector: delete_status
- name: assign_rbac_role_to_organization_member
  endpoint:
    path: /auth/users/{user_id}/assign-roles
    method: PUT
    data_selector: assignment_status
- name: revoke_rbac_role_from_organization_member
  endpoint:
    path: /auth/users/{user_id}/roles
    method: DELETE
    data_selector: revocation_status
- name: list_permissions
  endpoint:
    path: /auth/permissions
    method: GET
    data_selector: permissions
- name: list_policies
  endpoint:
    path: /auth/policies
    method: GET
    data_selector: policies
- name: list_my_permissions
  endpoint:
    path: /auth/users/me/permissions
    method: GET
    data_selector: my_permissions
- name: list_user_permissions
  endpoint:
    path: /auth/users/{id}/permissions
    method: GET
    data_selector: user_permissions
- name: attach_callback_to_virtual_machine
  endpoint:
    path: /core/virtual-machines/{id}/attach-callback
    method: POST
- name: update_virtual_machine_callback
  endpoint:
    path: /core/virtual-machines/{id}/update-callback
    method: PUT
- name: delete_virtual_machine_callback
  endpoint:
    path: /core/virtual-machines/{id}/delete-callback
    method: DELETE
- name: attach_callback_to_volume
  endpoint:
    path: /core/volumes/{id}/attach-callback
    method: POST
- name: update_volume_callback
  endpoint:
    path: /core/volumes/{id}/update-callback
    method: PUT
- name: delete_volume_callback
  endpoint:
    path: /core/volumes/{id}/delete-callback
    method: DELETE
- name: ubuntu_server_20_04_lts_r535_cuda_12_2
  endpoint:
    path: /deploy-virtual-machine/images/ubuntu_server_20_04_lts_r535_cuda_12_2
    method: GET
    data_selector: images
    params: {}
- name: ubuntu_server_22_04_lts_r535_cuda_12_2
  endpoint:
    path: /deploy-virtual-machine/images/ubuntu_server_22_04_lts_r535_cuda_12_2
    method: GET
    data_selector: images
    params: {}
- name: ubuntu_server_22_04_lts_r550_cuda_12_4
  endpoint:
    path: /deploy-virtual-machine/images/ubuntu_server_22_04_lts_r550_cuda_12_4
    method: GET
    data_selector: images
    params: {}
- name: ubuntu_server_22_04_lts_r570_cuda_12_8
  endpoint:
    path: /deploy-virtual-machine/images/ubuntu_server_22_04_lts_r570_cuda_12_8
    method: GET
    data_selector: images
    params: {}
- name: ubuntu_server_24_04_lts_r570_cuda_12_8
  endpoint:
    path: /deploy-virtual-machine/images/ubuntu_server_24_04_lts_r570_cuda_12_8
    method: GET
    data_selector: images
    params: {}
- name: virtual_machines
  endpoint:
    path: /core/virtual-machines
    method: GET
    data_selector: instances
- name: start_virtual_machine
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}/start
    method: GET
- name: stop_virtual_machine
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}/stop
    method: GET
- name: hard_reboot_virtual_machine
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}/hard-reboot
    method: GET
- name: hibernate_virtual_machine
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}/hibernate
    method: GET
- name: restore_virtual_machine_from_hibernation
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}/hibernate-restore
    method: GET
- name: delete_virtual_machine
  endpoint:
    path: /core/virtual-machines/{virtual_machine_id}
    method: DELETE
- name: create_profile
  endpoint:
    path: /core/profiles
    method: POST
- name: list_profiles
  endpoint:
    path: /core/profiles
    method: GET
- name: retrieve_profile_details
  endpoint:
    path: /core/profiles/{id}
    method: GET
- name: delete_profile
  endpoint:
    path: /core/profiles/{id}
    method: DELETE
- name: console_logs
  endpoint:
    path: /docs/api-reference/core-resources/virtual-machines/vm-logs/
    method: GET
    data_selector: logs
    params: {}
- name: keypairs
  endpoint:
    path: /core/keypairs
    method: GET
    data_selector: keypairs
- name: import_keypair
  endpoint:
    path: /core/keypairs
    method: POST
    data_selector: keypair
- name: update_keypair
  endpoint:
    path: /core/keypair/{id}
    method: PUT
    data_selector: keypair
- name: delete_keypair
  endpoint:
    path: /core/keypair/{id}
    method: DELETE
    data_selector: keypair
notes:
- Currently, Hyperstack doesn't support volume snapshots or backup features.
- A volume can only be attached to a single virtual machine at a time due to the lack
  of support for parallel access to a single disk by most operating systems and file
  systems.
- Uses OAuth2 with refresh token — requires setup of connected app in Hyperstack
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Billing continues for VMs in the ACTIVE and SHUTOFF states.
- No charges for transitional states like HIBERNATING or RESTORING.
- 'Note: Allowing all traffic might pose firewall risks, so use this configuration
  carefully.'
- A volume can only be attached to one virtual machine at a time.
- Hyperstack now supports the use of custom operating system images, allowing users
  to launch VMs with their preferred OS.
- Environments now feature dedicated networks, allowing VMs in each environment to
  operate on separate networks.
- Flavors in Hyperstack include specific labels that define their features, restrictions,
  and suitability for various use cases.
- Snapshots are limited to a maximum of 100 GB in storage.
- A snapshot must complete before another can be created for the same VM.
- Snapshots are not supported for VMs that are part of a Kubernetes cluster.
- Snapshots are not supported for VMs deployed from bootable volumes.
- Ephemeral disks are only used for temporary storage.
- The ephemeral disk is mounted by default under /ephemeral.
- 'The first line of a cloud-config file must contain the special identifier: #cloud-config'
- Precise indentation of the cloud-config YAML must be maintained in the user_data
  field to avoid error.
- VMs are only billed when in the ACTIVE and SHUTOFF states.
- Transitional states like HIBERNATING or RESTORING do not incur charges.
- The hibernating of VMs can take time, but we're actively working to speed up the
  process.
- When a virtual machine is HIBERNATING, options for further state modification are
  disabled until the VM reaches a fully HIBERNATED state.
- Spot VMs provide substantial cost savings compared to on-demand VMs.
- Data stored on Spot VMs is ephemeral and will be permanently lost upon termination.
- Make sure they replace `/path/to/private_key` with the path to their private key
  file, `user` with their username on the server, and `server_ip` with your server's
  IP address or hostname.
- For enhanced security, SSH is required for the initial login to your virtual machine.
- Accessing your VM via SSH is more secure than using a password-only connection through
  the VNC console.
- It may take a few minutes to initialize RDP, and in rare cases, the process may
  take significantly longer than expected.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key or token expiration.'
- '400 - Bad Request: The format request was invalid.'
- '401 - Unauthorized: No valid API key provided'
- '403 - Forbidden: Access is denied.'
- '404 - Not Found: Requested resource does not exist.'
- '405 - Method Not Allowed: Invalid HTTP method.'
- '406 - Not Acceptable: Requested format not supported.'
- '409 - Conflict: Resource being created already exists.'
- '500 - Internal Server Error: Something went wrong on Infrahub''s end. These errors
  are rare.'
- Boot from Volume Not Possible for this flavor.
- '401 Unauthorized: Recheck API key or permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://infrahub-api.nexgencloud.com
source_metadata: null
