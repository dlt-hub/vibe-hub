resources:
- name: user
  endpoint:
    path: /users/{{example_user_id}}
    method: GET
    data_selector: response
    params: {}
- name: bulk_create_activities
  endpoint:
    path: /developer_api/v1/activities/bulk_create
    method: POST
    data_selector: activities
- name: opportunity
  endpoint:
    path: /opportunities/{{delete_opportunity_id}}
    method: DELETE
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: records
- name: s3_signed_url
  endpoint:
    path: /{{entity_type}}/{{entity_id}}/files/s3_signed_url
    method: GET
- name: task
  endpoint:
    path: /tasks/{{delete_task_id}}
    method: DELETE
    data_selector: id
- name: related_links
  endpoint:
    path: /developer_api/v1/related_links
    method: GET
    params:
      custom_field_definition_id: '{{custom_field_definition_id}}'
      source_type: '{{source_type}}'
      source_id: '{{source_id}}'
- name: task
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: tasks_search
  endpoint:
    path: /tasks/search
    method: POST
    data_selector: records
- name: tasks
  endpoint:
    path: /tasks/search
    method: POST
    data_selector: tasks
    params: {}
- name: task
  endpoint:
    path: /tasks/{{example_task_id}}
    method: GET
    data_selector: id
- name: bulk_update_companies
  endpoint:
    path: /companies/bulk_update
    method: POST
    data_selector: companies
    params: {}
- name: leads_bulk_update
  endpoint:
    path: /leads/bulk_update
    method: POST
- name: loss_reasons
  endpoint:
    path: /developer_api/v1/loss_reasons
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /projects
    method: POST
    data_selector: id
    params: {}
- name: leads
  endpoint:
    path: /leads/search
    method: POST
    data_selector: records
- name: leads_search
  endpoint:
    path: /leads/search
    method: POST
    data_selector: records
- name: leads_search
  endpoint:
    path: /leads/search
    method: POST
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /search
    method: POST
    data_selector: records
    params: {}
- name: lead
  endpoint:
    path: /leads/{{example_lead_id}}
    method: PUT
    data_selector: details
    params: {}
- name: pipelines
  endpoint:
    path: /pipelines
    method: GET
    data_selector: ''
- name: pipeline_stages
  endpoint:
    path: /developer_api/v1/pipeline_stages/pipeline/{pipeline_id}
    method: GET
    data_selector: records
- name: lead
  endpoint:
    path: /leads/{{example_lead_id}}
    method: GET
    data_selector: records
    params: {}
- name: opportunities
  endpoint:
    path: /api/opportunities
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /developer_api/v1/projects/{{delete_project_id}}
    method: DELETE
    data_selector: id
- name: related_opportunities
  endpoint:
    path: /people/{{person_id}}/related/opportunities
    method: GET
    data_selector: ''
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: id
- name: person
  endpoint:
    path: /people/{{example_person_id}}
    method: PUT
    data_selector: null
    params: {}
- name: notification
  endpoint:
    path: /
    method: POST
    data_selector: ids
    params: {}
- name: activities_search
  endpoint:
    path: /activities/search
    method: POST
    data_selector: records
- name: company_activities
  endpoint:
    path: /companies/{{example_company_id}}/activities
    method: POST
    data_selector: activities
- name: pipeline_stages
  endpoint:
    path: /pipeline_stages
    method: GET
    data_selector: records
- name: phone_number_search
  endpoint:
    path: /search
    method: POST
    data_selector: results
    params: {}
- name: activity
  endpoint:
    path: /activities/{{delete_activity_id}}
    method: DELETE
- name: related_records
  endpoint:
    path: /people/{{entity_id}}/related/
    method: GET
    data_selector: records
- name: relate_record
  endpoint:
    path: /{{entity}}/{{entity_id}}/related
    method: POST
    data_selector: added
    params: {}
- name: account
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: people
  endpoint:
    path: /v1/people
    method: GET
- name: leads
  endpoint:
    path: /v1/leads
    method: GET
- name: opportunities
  endpoint:
    path: /v1/opportunities
    method: GET
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: POST
- name: company
  endpoint:
    path: /companies/{{example_company_id}}
    method: GET
    data_selector: ''
- name: companies
  endpoint:
    path: /companies
    method: POST
    data_selector: null
    params: {}
- name: contact_types
  endpoint:
    path: /contact_types
    method: GET
    data_selector: ''
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: task
  endpoint:
    path: /developer_api/v1/tasks/{{example_task_id}}
    method: PUT
    data_selector: details
    params: {}
- name: delete_connection
  endpoint:
    path: /developer_api/v1/related_links/{{connection_id}}
    method: DELETE
    data_selector: ids
- name: custom_field_definitions
  endpoint:
    path: /developer_api/v1/custom_field_definitions/{{custom_field_definition_id}}
    method: PUT
    data_selector: id
    params: {}
- name: delete_file
  endpoint:
    path: /{{entity_type}}/{{entity_id}}/files/{{file_id}}
    method: DELETE
    data_selector: removed
    params: {}
- name: custom_field_definitions
  endpoint:
    path: /custom_field_definitions
    method: POST
    data_selector: id
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: person
  endpoint:
    path: /people/fetch_by_email
    method: POST
    data_selector: results
    params: {}
- name: companies
  endpoint:
    path: /companies/bulk_create
    method: POST
- name: bulk_create_opportunities
  endpoint:
    path: /opportunities/bulk_create
    method: POST
    data_selector: opportunities
- name: field_layouts_people
  endpoint:
    path: /field_layouts/by_entity/people
    method: GET
- name: field_layouts_opportunities
  endpoint:
    path: /field_layouts/by_entity/opportunities
    method: GET
- name: search
  endpoint:
    params:
      page_size: 20
      page_number: 1
      sort_by: date_modified
      sort_direction: desc
- name: upload_file
  endpoint:
    path: /{{entity_type}}/{{entity_id}}/files
    method: POST
    data_selector: ''
    params: {}
- name: task
  endpoint:
    path: /tasks
    method: POST
    data_selector: id
    params: {}
- name: webhook_subscription
  endpoint:
    path: /webhooks/{{subscription_id}}
    method: PUT
    data_selector: success
    params: {}
- name: leads
  endpoint:
    path: /leads/upsert
    method: PUT
- name: person
  endpoint:
    path: /api/v1/people
    method: GET
    data_selector: records
    params: {}
- name: people_bulk_create
  endpoint:
    path: /people/bulk_create
    method: POST
    data_selector: people
    params: {}
- name: custom_activity_type
  endpoint:
    path: /custom_activity_types/{{custom_activity_type_id}}
    method: GET
    data_selector: id
- name: related_links
  endpoint:
    path: /related_links
    method: GET
    params:
      source_type: '{{source_type}}'
      source_id: '{{source_id}}'
- name: person
  endpoint:
    path: /people/{{example_person_id}}
    method: GET
    data_selector: id
- name: webhook
  endpoint:
    path: /developer_api/v1/webhooks/{{example_webhook_id}}
    method: DELETE
    data_selector: id
    params: {}
- name: custom_activity_type
  endpoint:
    path: /developer_api/v1/custom_activity_types/{{custom_activity_type_id}}
    method: PUT
    data_selector: icon_type
    params: {}
- name: leads_search
  endpoint:
    path: /leads/search
    method: POST
    data_selector: custom_fields
- name: leads_search
  endpoint:
    path: /leads/search
    method: POST
    data_selector: custom_fields
- name: upload_file
  endpoint:
    path: /
    method: POST
    data_selector: PostResponse
    params: {}
- name: lead
  endpoint:
    path: /developer_api/v1/leads/{{example_lead_id}}
    method: DELETE
- name: custom_field_definitions
  endpoint:
    path: /developer_api/v1/custom_field_definitions/{{custom_field_definition_id}}
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /projects/{{example_project_id}}
    method: GET
    data_selector: id
    params: {}
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
- name: remove_relationship
  endpoint:
    path: /{{entity}}/{{entity_id}}/related
    method: DELETE
    data_selector: removed
    params: {}
- name: custom_field_definitions
  endpoint:
    path: /custom_field_definitions
    method: GET
    data_selector: ''
- name: api_user
  endpoint:
    path: /developer_api/v1/users/me
    method: GET
- name: opportunity
  endpoint:
    path: /opportunities
    method: POST
    data_selector: id
    params: {}
- name: customer_sources
  endpoint:
    path: /developer_api/v1/customer_sources
    method: GET
    data_selector: records
    params: {}
- name: custom_activity_types
  endpoint:
    path: /developer_api/v1/custom_activity_types
    method: POST
    data_selector: id
    params: {}
- name: attached_files
  endpoint:
    path: /{{entity_type}}/{{entity_id}}/files
    method: GET
    data_selector: files
- name: people
  endpoint:
    path: /people
    method: POST
- name: company
  endpoint:
    path: /companies/{{delete_company_id}}
    method: DELETE
- name: opportunities
  endpoint:
    path: /opportunities/search
    method: POST
- name: opportunities
  endpoint:
    path: /opportunities/search
    method: POST
    data_selector: records
    params:
      page_size: 25
      sort_by: name
- name: opportunities_search
  endpoint:
    path: /opportunities/search
    method: POST
    data_selector: records
    params:
      page_size: 25
      sort_by: name
- name: opportunities
  endpoint:
    path: /opportunities/search
    method: POST
    data_selector: records
- name: opportunities
  endpoint:
    path: /opportunities/search
    method: POST
    data_selector: records
    params: {}
- name: webhook
  endpoint:
    path: /webhooks{{example_webhook_id}}
    method: GET
    data_selector: id
    params: {}
- name: leads
  endpoint:
    path: /leads/upsert
    method: PUT
    data_selector: properties
    params: {}
- name: leads
  endpoint:
    path: /leads/bulk_create
    method: POST
    data_selector: leads
- name: projects
  endpoint:
    path: /projects/{{example_project_id}}
    method: PUT
    data_selector: details
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: id
    params: {}
- name: opportunity
  endpoint:
    path: /opportunities/{{example_opportunity_id}}
    method: GET
    data_selector: records
- name: activity
  endpoint:
    path: /developer_api/v1/activities/{{update_activity_id}}
    method: PUT
    data_selector: id
    params: {}
- name: contact_types
  endpoint:
    path: /contact_types
    method: GET
    data_selector: records
- name: custom_field_definitions
  endpoint:
    path: /developer_api/v1/custom_field_definitions/{{custom_field_definition_id}}
    method: DELETE
- name: activities
  endpoint:
    path: /activities
    method: POST
    data_selector: id
    params: {}
- name: lead_conversion
  endpoint:
    path: /leads/{{example_leadconvert_id}}/convert
    method: POST
    data_selector: details
- name: custom_activity_types
  endpoint:
    path: /developer_api/v1/custom_activity_types
    method: GET
    data_selector: ''
    params: {}
- name: lead
  endpoint:
    path: /services/data/vXX.X/sobjects/Lead
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /developer_api/v1/companies/{{example_company_id}}
    method: PUT
    data_selector: details
    params: {}
- name: lead
  endpoint:
    path: /leads
    method: POST
    data_selector: id
- name: customer_sources
  endpoint:
    path: /developer_api/v1/customer_sources
    method: GET
    data_selector: records
- name: activity
  endpoint:
    path: /activities/{{example_activity_id}}
    method: GET
    data_selector: id
    params: {}
- name: file_metadata
  endpoint:
    path: /{{entity_type}}/{{entity_id}}/files/{{file_id}}
    method: GET
    data_selector: id
    params: {}
- name: related_links
  endpoint:
    path: /developer_api/v1/related_links
    method: POST
    data_selector: null
    params: {}
- name: companies_search
  endpoint:
    path: /companies/search
    method: POST
    data_selector: records
    params:
      page_size: 25
      sort_by: name
- name: lead_activities
  endpoint:
    path: /leads/{{example_lead_id}}/activities
    method: POST
    data_selector: activity_types
    params: {}
- name: users
  endpoint:
    path: /users/search
    method: POST
    data_selector: records
    params:
      page_number: 1
- name: projects_search
  endpoint:
    path: /projects/search
    method: POST
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /projects/search
    method: POST
    data_selector: projects
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: activities
    params: {}
- name: bulk_update_people
  endpoint:
    path: /people/bulk_update
    method: POST
- name: lead_statuses
  endpoint:
    path: /lead_statuses
    method: GET
    data_selector: records
- name: opportunity
  endpoint:
    path: /opportunities/{{example_opportunity_id}}
    method: PUT
    data_selector: details
- name: person
  endpoint:
    path: /developer_api/v1/people/{{example_person_id}}
    method: DELETE
    data_selector: id
    params: {}
- name: activity_types
  endpoint:
    path: /activity_types
    method: GET
    data_selector: user
    params: {}
- name: tag
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: person_activities
  endpoint:
    path: /people/{{example_person_id}}/activities
    method: POST
    data_selector: activity_types
    params: {}
- name: people_search
  endpoint:
    path: /people/search
    method: POST
    data_selector: records
    params: {}
- name: people_search
  endpoint:
    path: /people/search
    method: POST
    data_selector: records
    params: {}
- name: people_search
  endpoint:
    path: /people/search
    method: POST
    data_selector: records
    params: {}
notes:
- Your application provides an HTTPS callback endpoint redirect_uri capable of receiving
  POST requests
- You have registered your application and received your client_id and client_secret
  credentials
- Special ID 'me' can be passed in to obtain the current API user
- This is a bulk-create endpoint with a maximum request size of 10.
- Our bulk APIs have an additional rate limit of 3 requests per second.
- Requires X-PW-AccessToken for authentication
- This API endpoint is step 1 of 3 to upload a file and attach it to an existing entity.
- API Keys are suitable for individual users, while OAuth2.0 is the preferred approach
  for partner integrations.
- Access tokens do not expire and do not need to be refreshed.
- Search requests are limited to returning only the first 100,000 records regardless
  of the pagination parameters.
- Custom fields can be searched by various criteria including statuses, due dates,
  and multi-select dropdowns.
- Company email_domains must be unique so there must be no overlap between email_domains
  in the system and emails provided in your bulk update request.
- This endpoint is eligible to return computed custom field values.
- Custom fields can be empty or set to a value.
- Use X-PW-AccessToken for authentication
- Use X-PW-Application for application name
- Use X-PW-UserEmail for user email
- Replace {pipeline_id} with the actual pipeline ID in the request URL.
- Requires X-PW-UserEmail header for user-specific access
- The API key must belong to an administrator.
- For more details please see the notes at the /activities endpoint.
- Unique identifier for the Pipeline Stage.
- The expected probability of winning an Opportunity in this Pipeline Stage. Valid
  values are [0-100] (inclusive).
- Match scheme is partial if the input string is 6 digits or fewer. For an input string
  7 digits or more, the default behavior is fuzzy search if a match scheme is not
  specified.
- This request permanently removes a record from your Copper account.
- Requires X-PW-AccessToken, X-PW-UserEmail headers for authentication
- Requires setup of access token and user email.
- Updates are only applied to fields explicitly specified in the request body.
- A minimum of one option is required for Dropdown and a minimum of 2 options is required
  for MultiSelect
- Email address is a unique key for People records in Copper.
- Company email_domains must be unique so there must be no overlap between email_domains
  in the system and emails provided in your bulk create request.
- Related Items may be added or removed, but not modified. (To 'modify' a Related
  Item, remove it and add a new one.)
- The Related Items API uses Identifiers (as opposed to full objects) to uniquely
  identify related items.
- Endpoint is eligible to return computed custom field values
- Must provide a valid URL for the target field.
- Custom key/value pairs can be sent with every notification.
- Eligible to return computed custom field values
- Contact emails must be unique so there must be no overlap between emails in the
  system and emails provided in your bulk create request.
- Request requires headers for access token and user email
- Custom fields are available for each of the entities (Leads, People, Companies,
  Opportunities, Projects, and Tasks).
- Text fields are not searchable at this point.
- This API endpoint is step 2 of 3 to upload a file and attach it to an existing entity.
- This request permanently removes a Lead from your Copper account.
- Email domain is a unique key for Companies and no two records can have the same
  domain name.
- Removing the relationship does not cause any of the records involved to be deleted
  from the system.
- Custom Field Definitions specify account specific fields not included as part of
  the standard resource fields.
- 'The following fields are required for this request: name, primary_contact_id'
- Opportunities are created for People and Companies that are interested in buying
  your products or services.
- Search requests are limited to returning only the first 100,000 records.
- Requires setup of access token and user email in headers
- Upsert operation avoids creating duplicate Leads
- Match criteria include Name and Custom Fields
- The URL of your webhook endpoint must be a valid URL.
- 'The entity type valid values are: "lead", "person", "company", "opportunity", "project",
  "task".'
- 'The event valid values are: "new", "update", "delete".'
- Example requests show required headers for API calls
- Ensure to replace YOUR_TOKEN_HERE and YOUR_EMAIL_HERE in the request headers with
  valid credentials.
- Ensure to include valid access token and user email in headers
- This request creates a Person record from a Lead record.
- 'entity_type must be one of: ''leads'', ''people'', ''opportunities'', ''companies'',
  ''projects'''
- Certain fields can be filtered by an empty value.
- Filtering criteria have an 'AND' relationship.
- This request will show the Activity entries created for a specific Lead.
- Custom fields can return nulls or boolean values
- Only 'User' type Activities can be created or modified using the developer API
- '''System'' type Activities are read-only'
- Contact emails must be unique so there must be no overlap between emails in the
  system and emails provided in your bulk update request.
- Date formats are in Unix Timestamp format and values are set and returned as 10
  digit long integers.
- The API respects team permissions. It is recommended to use the API credentials
  of an admin user when using the Dev API.
- If you use the Dev API to create records in Copper, it is advisable to create a
  separate (non-personal) user just for integration purposes.
- This request permanently removes a Person from your Copper account.
- You may have up to 100 active subscriptions per account.
- 'The number of notifications sent are bound by the following limits: 600 notifications
  per minute per account, 1,800 notifications per account for every 10 minutes.'
- Our notifications always send an array with the IDs of the records involved. The
  array contains at least 1 ID and may contain up to 30 ID's in a single notification.
- For security reasons only https:// endpoints are accepted for the notification URL.
- Custom Activity Types that have been removed from the list in the Settings page
  are not deleted from Copper.
- All requests must be sent using HTTPS with TLS 1.2 or higher.
- All API calls are limited to 180 requests per minute.
- Only the developer/v1/all scope is supported, which grants full read and modify
  access to the authenticated user's records.
- Refer to the Activities section for more details.
- Custom fields can be included in search queries
- Pagination is limited to 25 results per request
- Requests are limited to returning only the first 100,000 records.
errors:
- '422: Request size too large, limit is 10'
- '429: Rate limit exceeded'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '422: Unprocessable Entity'
- '429: Too Many Requests'
- '500: Internal Server Error'
- 'REQUEST_SIZE_TOO_LARGE: Request size too large, limit is 10'
- '401 Unauthorized: Recheck access token or user email'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '422: Invalid input: Invalid URI For External Request'
- '401 Unauthorized: Recheck authorization credentials'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck your token or email'
- '401 Unauthorized: Recheck your access token'
- '422: More than one match found'
- 'Unauthorized: Check your access token'
- 'Bad Request: Ensure your request data is correctly formatted'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.copper.com/developer_api/v1
  auth:
    type: apikey
    token_url: https://app.copper.com/oauth/token
    client_id: '{{ dlt.secrets[''client_id''] }}'
    client_secret: '{{ dlt.secrets[''client_secret''] }}'
    location: header
    header_name: X-PW-AccessToken
    flow: authorization_code
  headers:
    X-PW-Application: developer_api
    Content-Type: application/json
    X-PW-UserEmail: '{{ dlt.secrets[''user_email''] }}'
  paginator:
    page_size_param: page_size
    default_page_size: 25
    type: page
source_metadata: null
