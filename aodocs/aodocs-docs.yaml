resources:
- name: library_info
  endpoint:
    path: /30-manage-aodocs-documents/10-get-library-and-class-info/10-get-library-info/
    method: GET
- name: class_info
  endpoint:
    path: /30-manage-aodocs-documents/10-get-library-and-class-info/20-get-document-class-info/
    method: GET
- name: create_documents
  endpoint:
    path: /30-manage-aodocs-documents/20-create-modify-delete-documents/10-create-new-documents-with-attachments/
    method: POST
- name: modify_document_properties
  endpoint:
    path: /30-manage-aodocs-documents/20-create-modify-delete-documents/20-modify-field-values-of-document-properties/
    method: PATCH
- name: modify_attachments
  endpoint:
    path: /30-manage-aodocs-documents/20-create-modify-delete-documents/30-modify-document-attachments/
    method: PATCH
- name: list_search_count_documents
  endpoint:
    path: /30-manage-aodocs-documents/20-create-modify-delete-documents/35-list-search-and-count-documents/
    method: GET
- name: delete_document
  endpoint:
    path: /30-manage-aodocs-documents/20-create-modify-delete-documents/40-delete-document/
    method: DELETE
- name: libraries
  endpoint:
    path: /30-manage-aodocs-documents/10-get-library-and-class-info/10-get-library-info/
    method: GET
- name: classes
  endpoint:
    path: /30-manage-aodocs-documents/10-get-library-and-class-info/20-get-document-class-info/
    method: GET
- name: libraries
  endpoint:
    path: /30-manage-aodocs-documents/10-get-library-and-class-info/10-get-library-info/
    method: GET
- name: classes
  endpoint:
    path: /30-manage-aodocs-documents/10-get-library-and-class-info/20-get-document-class-info/
    method: GET
- name: library
  endpoint:
    path: /aodocs#library
    method: GET
    data_selector: kind
    params: {}
- name: document
  endpoint:
    path: /ApiDocument
    method: GET
    data_selector: kind
    params: {}
- name: library
  endpoint:
    path: /library/v1
    method: PUT
- name: library_create
  endpoint:
    path: /library/v1/library
    method: POST
- name: library_get
  endpoint:
    path: /library/v1/{libId}
    method: GET
- name: library_update
  endpoint:
    path: /library/v1/{libId}
    method: PUT
- name: library_delete
  endpoint:
    path: /library/v1/{libId}
    method: DELETE
notes:
- Each library is associated with a specific storage account.
- A Drive file can be attached to one and only one AODocs document.
- Files created in a TF library’s folder will create AODocs documents automatically.
- You can get a partial resource back if you filter the response fields using the
  fields parameter.
- Using security codes for authentication is inherently less secure than the OAuth
  2.0 mechanism.
- For testing purposes and other simple internal use-cases, security codes are the
  quickest way to get started with AODocs APIs.
- Access tokens usually start with the string `ya29.`
- ID token is sufficient to perform AODocs-only actions.
- To access AODocs APIs via OAuth 2.0, you need to provide an access token with each
  request.
- Unlike the out of the box security code solution, access and ID tokens require setting
  up a process on AODocs to whitelist client IDs.
- You can perform most of the tasks in this tutorial either using the API or on your
  homepage in the AODocs user interface (UI). Use the one that suits your needs, or
  you can do them both to understand how they map to each other.
- We recommend following the sequence as some steps depend on previous steps.
- Access APIs with security codes
- Access APIs with Bearer tokens
- Requesting that the results that come back be filtered down to a manageable subset
- Grouping the results into pages of specific length
- Requesting filtered results can improve performance.
- Use pagination parameters to manage large collections of results.
- Requests for collections often return too many results and are best handled using
  pagination.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '2xx: Success'
- '4xx: Failure'
- '5xx: Other condition'
- missing
- incorrect
- expired
- '401: Unauthorized: Token errors occur when the token is missing, incorrect, or
  expired.'
- '401: Unauthorized: Token is missing, incorrect, or expired'
- '400 Bad Request: Look at the error message to see what''s wrong, but it''s usually
  your parameters.'
- '401 Unauthorized: Check if you included your credentials, and if they are correct.'
- '403 Forbidden: Check if you have access to the resource / action you’re trying
  to access / perform.'
- '404 Not Found: The resource was either moved to a different location or deleted.
  You might also have an invalid request URL.'
- '409 Conflict: This is the only 400-series condition you should ever retry.'
- '500 Internal Server Error: Retry with exponential backoff.'
- '400: Bad Request: You provided something wrong in the input — something in the
  query is missing or not valid.'
- '401: Unauthorized: Authentication has failed or has not been provided.'
- '403: Forbidden: Your credentials are valid and accepted by the server, but the
  action is still not authorized.'
- '404: Not Found: The resource you are looking for does not exist here at this location.'
- '409: Conflict: Concurrent modification is not allowed at the moment, resulting
  in a conflict condition.'
- '500: Internal Server Error: Something is wrong on our end but we have no explanation.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://aodocs.altirnao.com
  auth:
    type: Bearer
source_metadata: null
