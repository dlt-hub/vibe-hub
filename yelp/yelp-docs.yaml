resources:
- name: lead_interaction_event
  endpoint:
    path: /path/to/lead_interaction_event
    method: POST
    data_selector: data
    params: {}
- name: masked_phone_number_opt_in_status_event
  endpoint:
    path: /path/to/masked_phone_number_opt_in_status_event
    method: POST
    data_selector: data
    params: {}
- name: features
  endpoint:
    path: /features
    method: GET
    data_selector: features
    params: {}
- name: lead
  endpoint:
    path: /v3/leads/{lead_id}
    method: GET
- name: Get business by Id
  endpoint:
    path: /get_business_by_id
    method: GET
- name: Mark Lead as replied
  endpoint:
    path: /mark_lead_as_replied
    method: POST
- name: project_draft
  endpoint:
    path: /program/program//portfolio/v1
    method: POST
- name: get_quota
  endpoint:
    path: /businesses/subscriptions/YELP_KNOWLEDGE/quota
    method: GET
- name: get_subscriptions
  endpoint:
    path: /businesses/subscriptions
    method: GET
    params:
      subscription_type: YELP_KNOWLEDGE
- name: create_subscriptions
  endpoint:
    path: /businesses/subscriptions
    method: POST
- name: remove_subscriptions
  endpoint:
    path: /businesses/subscriptions
    method: DELETE
- name: business_subscriptions
  endpoint:
    path: /v3/businesses/subscriptions
    method: GET
    data_selector: subscriptions
    params:
      subscription_type: WEBHOOK
- name: waitlist_status
  endpoint:
    path: /v3/businesses/${BUSINESS_ID}/waitlist/status
    method: GET
    data_selector: business_id
- name: reservation_status
  endpoint:
    path: /v3/bookings/reservation/{reservation_id}/status
    method: GET
    data_selector: active
    params:
      reservation_id: ''
- name: reservation_cancel
  endpoint:
    path: /v3/bookings/reservation/{reservation_id}/cancel
    method: POST
    data_selector: ''
    params:
      reservation_id: ''
- name: business_search
  endpoint:
    path: /businesses/search
    method: GET
    params:
      reservation_time: ''
      reservation_date: ''
      reservation_covers: ''
- name: openings
  endpoint:
    path: /bookings/{business-id}/openings
    method: GET
    params:
      time: ''
      date: ''
      covers: ''
- name: holds
  endpoint:
    path: /bookings/{business_id}/holds
    method: POST
    params:
      time: ''
      date: ''
      covers: ''
      unique_id: ''
- name: reservations
  endpoint:
    path: /bookings/{business_id}/reservations
    method: POST
    params:
      time: ''
      date: ''
      covers: ''
      first_name: ''
      last_name: ''
      phone: ''
      email: ''
      unique_id: ''
      hold_id: ''
- name: business
  endpoint:
    path: /v3/businesses/{id}
    method: GET
    data_selector: businesses
    params: {}
- name: business
  endpoint:
    path: /v3/businesses/{id}
    method: GET
    data_selector: business
    params: {}
- name: business_search
  endpoint:
    path: /ai/chat/v2
    method: POST
    data_selector: response
    params: {}
- name: ingest_status
  endpoint:
    path: /v1/ingest/status/{job_id}
    method: GET
    data_selector: status
    params:
      detail_level: '2'
- name: partner_restaurants
  endpoint:
    path: /v3/partner/restaurants
    method: GET
- name: waitlist_status
  endpoint:
    path: /v3/businesses/{business_id}/waitlist/status
    method: GET
- name: waitlist_info
  endpoint:
    path: /v3/businesses/{business_id}/waitlist/info
    method: GET
- name: create_omw_visit
  endpoint:
    path: /v3/businesses/{business_id}/waitlist/on-my-way
    method: POST
- name: join_waitlist
  endpoint:
    path: /v3/businesses/{business_id}/waitlist/visits
    method: POST
- name: visit_details
  endpoint:
    path: /v3/visits/{visit_id}
    method: GET
- name: cancel_visit
  endpoint:
    path: /v3/visits/{visit_id}/cancel
    method: POST
- name: mark_as_read
  endpoint:
    path: /v3/leads/{lead_id}/events/mark_as_read
    method: POST
    data_selector: event_id
- name: businesses
  endpoint:
    path: s3://yelp-syndication/{partner}/
    method: GET
- name: delete_features
  endpoint:
    path: /program//features/v1
    method: DELETE
    data_selector: null
    params: {}
- name: confirmation_status
  endpoint:
    path: /checkout/orders//confirmation_status/v3
    method: POST
- name: respond_to_review
  endpoint:
    path: /reviews/v1/{review_id}
    method: POST
- name: business_owner_profile
  endpoint:
    path: /v1/business_owner/me/profile
    method: GET
- name: create
  endpoint:
    path: /create
    method: POST
- name: status
  endpoint:
    path: /status/{job_id}
    method: GET
- name: businesses_search_phone
  endpoint:
    path: /businesses/search/phone
    method: GET
- name: categories
  endpoint:
    path: /api/v1/categories
    method: GET
    data_selector: categories
    params: {}
- name: create_program
  endpoint:
    path: /reseller/program/create
    method: POST
    data_selector: ''
    params:
      business_id: string
      program_name: string
      start: date
      end: date
- name: modify_program
  endpoint:
    path: /reseller/program/{program_id}/edit
    method: POST
    data_selector: ''
    params:
      program_id: string
      start: date
      end: date
- name: terminate_program
  endpoint:
    path: /reseller/program/{program_id}/end
    method: POST
    data_selector: ''
    params:
      program_id: string
- name: status_job
  endpoint:
    path: /reseller/status/{job_id}
    method: GET
    data_selector: ''
    params:
      job_id: string
- name: delete_photo
  endpoint:
    path: /program/portfolio/photos/v1
    method: DELETE
- name: create_business
  endpoint:
    path: /ingest/create
    method: POST
    data_selector: businesses
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: suggestions
    params: {}
- name: set_up_features
  endpoint:
    path: /program/feature
    method: POST
- name: business_insights
  endpoint:
    path: /businesses/insights
    method: GET
- name: visit
  endpoint:
    path: /v3/visits/{VISIT_ID}
    method: GET
    data_selector: records
- name: waitlist_info
  endpoint:
    path: /${BUSINESS_ID}/waitlist/info
    method: GET
    data_selector: ''
- name: opportunity
  endpoint:
    path: /opportunity
    method: POST
    data_selector: availability_status
    params: {}
- name: chat
  endpoint:
    path: /chat/v2
    method: POST
    data_selector: response
    params: {}
- name: daily_reports
  endpoint:
    path: /businesses/daily_reports
    method: POST
- name: monthly_reports
  endpoint:
    path: /businesses/monthly_reports
    method: POST
- name: fetch_daily_report
  endpoint:
    path: /businesses/daily_reports/{report_id}
    method: GET
- name: fetch_monthly_report
  endpoint:
    path: /businesses/monthly_reports/{report_id}
    method: GET
- name: setHeight
  endpoint:
    path: /setHeight
    method: POST
    data_selector: null
    params:
      body_height: $body_height
- name: getViewportHeight
  endpoint:
    path: /getViewportHeight
    method: POST
    data_selector: null
    params: {}
- name: getPopupPosition
  endpoint:
    path: /getPopupPosition
    method: POST
    data_selector: null
    params:
      popup_height: $popup_height
- name: scrollTop
  endpoint:
    path: /scrollTop
    method: POST
    data_selector: null
    params:
      offset: $offset
- name: displayLoading
  endpoint:
    path: /displayLoading
    method: POST
    data_selector: null
    params: {}
- name: hideLoading
  endpoint:
    path: /hideLoading
    method: POST
    data_selector: null
    params: {}
- name: displayFixedButton
  endpoint:
    path: /displayFixedButton
    method: POST
    data_selector: null
    params:
      amount: $amount
      buttonType: $BUTTON_TYPE
- name: hideFixedButton
  endpoint:
    path: /hideFixedButton
    method: POST
    data_selector: null
    params: {}
- name: cancel_reservation
  endpoint:
    path: /v3/bookings/reservation/{reservation_id}/cancel
    method: POST
- name: partner_biz_claim_request_status
  endpoint:
    path: /partner_biz_claim/request/status
    method: GET
- name: user_info
  endpoint:
    path: /checkout/orders//user_info/v3
    method: GET
- name: events
  endpoint:
    path: /v3/leads/{ID}/events
    method: GET
    params:
      limit: 20
- name: monthly_report
  endpoint:
    path: /reporting/businesses/monthly/
    method: GET
- name: business_search
  endpoint:
    path: /businesses/search
    method: GET
- name: phone_search
  endpoint:
    path: /businesses/search/phone
    method: GET
- name: business_match
  endpoint:
    path: /businesses/matches
    method: GET
- name: business_details
  endpoint:
    path: /businesses/{id}
    method: GET
- name: transaction_search
  endpoint:
    path: /transactions/{transaction_type}/search
    method: GET
- name: business_engagement_metrics
  endpoint:
    path: /businesses/engagement
    method: GET
- name: business_service_offerings
  endpoint:
    path: /businesses/{business_id_or_alias}/service_offerings
    method: GET
- name: reviews
  endpoint:
    path: /businesses/{business_id_or_alias}/reviews
    method: GET
- name: review_highlights
  endpoint:
    path: /businesses/{business_id_or_alias}/review_highlights
    method: GET
- name: events_search
  endpoint:
    path: /events
    method: GET
- name: event_lookup
  endpoint:
    path: /events/{event_id}
    method: GET
- name: featured_event
  endpoint:
    path: /events/featured
    method: GET
- name: category_search
  endpoint:
    path: /categories
    method: GET
- name: category_search_by_alias
  endpoint:
    path: /categories/{alias}
    method: GET
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
- name: webhook_message
  endpoint:
    path: /webhook/verified_license_status
    method: POST
    data_selector: data.updates
    params: {}
- name: categories
  endpoint:
    path: /v3/categories
    method: GET
    data_selector: categories
    params: {}
- name: business_owner_profile
  endpoint:
    path: /business_owner/me/profile
    method: GET
    data_selector: profile
    params: {}
- name: engagement
  endpoint:
    path: /businesses/engagement
    method: GET
    data_selector: data
    params:
      business_ids: comma separated list of Yelp business id
      date_range_start: '2018-02-01'
      date_range_end: '2018-03-01'
- name: service_offerings
  endpoint:
    path: /businesses//service_offerings
    method: GET
- name: daily_report
  endpoint:
    path: /reporting/businesses/daily/
    method: GET
- name: waitlist_visits
  endpoint:
    path: /v3/businesses/{BUSINESS_ID}/waitlist/visits
    method: POST
    data_selector: visit_id
- name: business_match
  endpoint:
    path: /businesses/matches
    method: GET
- name: businesses_list
  endpoint:
    path: /listing_management/businesses/v1
    method: GET
    data_selector: subscriptions
    params:
      limit: 50
      offset: 0
- name: businesses_add
  endpoint:
    path: /listing_management/businesses/add/v1
    method: POST
    data_selector: null
    params: {}
- name: businesses_remove
  endpoint:
    path: /listing_management/businesses/remove/v1
    method: POST
    data_selector: null
    params: {}
- name: pause_cpc_program
  endpoint:
    path: /program//pause/v1
    method: POST
- name: cta_button
  endpoint:
    path: /api/v1/cta/button
    method: GET
    data_selector: buttons
    params: {}
- name: cta_description
  endpoint:
    path: /api/v1/cta/description
    method: GET
    data_selector: descriptions
    params: {}
- name: fusion_ai_api
  endpoint:
    path: /ai/chat/v2
    method: POST
    data_selector: output
- name: event
  endpoint:
    path: /leads/{lead_id}/events
    method: POST
    data_selector: request_content
    params: {}
- name: Get Lead
  endpoint:
    path: /v3/leads
    method: GET
- name: quota
  endpoint:
    path: /v3/businesses/subscriptions//quota
    method: GET
- name: submit_business_claim
  endpoint:
    path: /ingest/create
    method: POST
    data_selector: businesses
    params: {}
- name: revoke_business_claim
  endpoint:
    path: /ingest/create
    method: POST
    data_selector: businesses
    params: {}
- name: business_claim_status
  endpoint:
    path: /v2/partner_biz_claim/request/status
    method: GET
    data_selector: partner_biz_claim_results
    params: {}
- name: opportunity
  endpoint:
    path: /v3
    method: GET
- name: get_subscriptions
  endpoint:
    path: /v3/businesses/subscriptions
    method: GET
    params:
      subscription_type: WEBHOOK
- name: create_subscriptions
  endpoint:
    path: /v3/businesses/subscriptions
    method: POST
    data_selector: response
    params:
      subscription_types:
      - WEBHOOK
      business_ids:
      - bzRqPKp63X0u6fUtbg
- name: remove_subscriptions
  endpoint:
    path: /v3/businesses/subscriptions
    method: DELETE
    data_selector: response
    params:
      subscription_types:
      - WEBHOOK
      business_ids:
      - VXi7gzRqPKp63X0u6fUtbg
- name: business_claim
  endpoint:
    path: /ingest/create
    method: POST
    data_selector: businesses
    params: {}
- name: event
  endpoint:
    path: /v3/events/
    method: GET
- name: businesses
  endpoint:
    path: /create
    method: POST
    data_selector: businesses
- name: photos
  endpoint:
    path: /program/portfolio/photos/v1
    method: POST
- name: daily_business_metrics
  endpoint:
    path: /reporting/businesses/daily
    method: POST
- name: monthly_business_metrics
  endpoint:
    path: /reporting/businesses/monthly
    method: POST
- name: fetch_daily_report
  endpoint:
    path: /reporting/businesses/daily/{report_id}
    method: GET
- name: fetch_monthly_report
  endpoint:
    path: /reporting/businesses/monthly/{report_id}
    method: GET
- name: reservation_status
  endpoint:
    path: /v3/bookings/reservation//status
    method: GET
- name: cancel_order
  endpoint:
    path: /cancel
    method: POST
    data_selector: order_request_id
    params: {}
- name: portfolio
  endpoint:
    path: /program//portfolio//v1
    method: PUT
    data_selector: null
    params: {}
- name: add_business
  endpoint:
    path: /syndication/feed/add
    method: POST
    data_selector: new
    params: {}
- name: remove_business
  endpoint:
    path: /syndication/feed/remove
    method: POST
    data_selector: status
    params: {}
- name: get_quota
  endpoint:
    path: /syndication/feed/quota
    method: GET
    data_selector: number_of_active_businesses
    params: {}
- name: list_businesses
  endpoint:
    path: /syndication/feed/list
    method: GET
    data_selector: biz_ids
    params:
      limit: 1
      offset: 0
- name: programs
  endpoint:
    path: /programs/list/
    method: GET
- name: review_highlights
  endpoint:
    path: /v3/businesses//review_highlights
    method: GET
- name: ads
  endpoint:
    path: /v3/ad
    method: GET
    data_selector: ads
    params: {}
- name: campaigns
  endpoint:
    path: /v3/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: modify_program
  endpoint:
    path: /reseller/program//edit
    method: POST
- name: events
  endpoint:
    path: /v3/events
    method: GET
    data_selector: events
- name: create_review_response
  endpoint:
    path: /reviews/v1/
    method: POST
- name: reservations
  endpoint:
    path: /v3/bookings/victors-french-bistro-test-listing-san-francisco/reservations
    method: POST
    data_selector: ''
- name: waitlist_on_my_way
  endpoint:
    path: /businesses/{BUSINESS_ID}/waitlist/on-my-way
    method: POST
    data_selector: visit_id
- name: rapc_enabledness
  endpoint:
    path: /businesses/{id}/rapc_enabledness
    method: POST
- name: mark_as_replied
  endpoint:
    path: /v3/leads/{lead_id}/mark_as_replied
    method: POST
    data_selector: null
    params: {}
- name: Opportunity
  endpoint:
    path: /opportunity
    method: GET
    data_selector: records
- name: CustomerAddressConstraint
  endpoint:
    path: /customer_address_constraint
    method: GET
    data_selector: records
- name: RepeatOrderConstraint
  endpoint:
    path: /repeat_order_constraint
    method: GET
    data_selector: records
- name: monthly_business_report
  endpoint:
    path: /reporting/businesses/monthly
    method: POST
- name: iframe_url_template
  endpoint:
    path: /iframe/url/template
    method: GET
    data_selector: url_template
    params: {}
- name: message_sending
  endpoint:
    path: /iframe/message/sending
    method: POST
    data_selector: message
    params: {}
- name: OrderStatusNotification
  endpoint:
    path: /checkout/orders//notifications/v3
    method: GET
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
    params:
      locale: locale
- name: order_status
  endpoint:
    path: /checkout/orders//status/v3
    method: GET
- name: business_subscriptions
  endpoint:
    path: /listing_management/businesses/v1
    method: GET
- name: retrieve_features
  endpoint:
    path: /program/<program_id>/features/v1
    method: GET
- name: update_features
  endpoint:
    path: /program/<program_id>/features/v1
    method: POST
- name: delete_features
  endpoint:
    path: /program/<program_id>/features/v1
    method: DELETE
- name: New Lead
  endpoint:
    method: POST
- name: New Consumer Message
  endpoint:
    method: POST
- name: New Business Message
  endpoint:
    method: POST
- name: Phone Availability
  endpoint:
    method: POST
- name: Create Message
  endpoint:
    method: POST
- name: Mark Lead as Replied
  endpoint:
    method: POST
- name: Mark Lead Message as Read
  endpoint:
    method: POST
- name: Get Business Details
  endpoint:
    method: GET
- name: Get Lead Details
  endpoint:
    method: GET
- name: restaurants
  endpoint:
    path: /v3/partner/restaurants
    method: GET
    data_selector: restaurants
- name: business
  endpoint:
    path: /v3/businesses/
    method: GET
- name: reseller_status
  endpoint:
    path: /v1/reseller/status/
    method: GET
- name: featured_event
  endpoint:
    path: /events/featured
    method: GET
    data_selector: event
    params: {}
- name: engagement_metrics
  endpoint:
    path: /businesses/engagement
    method: GET
- name: openings
  endpoint:
    path: /v3/bookings/{business_id}/openings
    method: GET
    data_selector: reservation_times
    params:
      covers: 2
      date: '2017-12-30'
      time: '18:00'
- name: conversion_event
  endpoint:
    path: /conversion/event
    method: POST
    data_selector: event
    params: {}
- name: conversion_events
  endpoint:
    path: /conversion/events
    method: POST
    data_selector: events
    params: {}
- name: single_event
  endpoint:
    path: /conversion/event
    method: POST
- name: bulk_events
  endpoint:
    path: /conversion/events
    method: POST
- name: event
  endpoint:
    path: /v3/conversion/event
    method: POST
    data_selector: event
- name: businesses
  endpoint:
    path: /token/v1/businesses
    method: GET
- name: checkout_order
  endpoint:
    path: /checkout/orders/create/v3
    method: POST
    data_selector: yelp_order_id
- name: holds
  endpoint:
    path: /bookings/{listing_id}/holds
    method: POST
    data_selector: null
    params: {}
- name: location_updates
  endpoint:
    path: /v3/businesses/{id}/update
    method: POST
- name: merge_duplicates
  endpoint:
    path: /v3/businesses/merge
    method: POST
- name: get_subscriptions
  endpoint:
    path: /v3/businesses/subscriptions
    method: GET
    params:
      subscription_type: LISTING_MANAGEMENT
- name: create_subscriptions
  endpoint:
    path: /v3/businesses/subscriptions
    method: POST
    params: {}
- name: remove_subscriptions
  endpoint:
    path: /v3/businesses/subscriptions
    method: DELETE
    params: {}
- name: portfolio_project
  endpoint:
    path: /program//portfolio//v1
    method: GET
- name: daily_business_report
  endpoint:
    path: /reporting/businesses/daily
    method: POST
- name: reviews
  endpoint:
    path: /v3/businesses//reviews
    method: GET
- name: business_subscriptions
  endpoint:
    path: /businesses/subscriptions
    method: DELETE
    data_selector: null
    params: {}
- name: quota
  endpoint:
    path: /syndication/quota/v2
    method: GET
    data_selector: data
    params: {}
- name: create_program
  endpoint:
    path: /reseller/program/create
    method: POST
- name: risk_signals
  endpoint:
    path: /businesses//insights/risk_signals
    method: GET
- name: lead_ids
  endpoint:
    path: /v3/businesses//lead_ids
    method: GET
- name: webhook_payload
  endpoint:
    path: /webhooks/reviews
    method: POST
    data_selector: data.updates
    params: {}
- name: portfolio_project
  endpoint:
    path: /program/portfolio/v1
    method: DELETE
- name: transactions_search
  endpoint:
    path: /transactions//search
    method: GET
- name: daily_reports
  endpoint:
    path: /analytics/v2/businesses/daily_reports/{report_id}
    method: GET
- name: event_categories
  endpoint:
    path: /events/search
    method: GET
    data_selector: categories
    params: {}
- name: food_and_drinks_insights
  endpoint:
    path: /v3/businesses//insights/food_and_drinks
    method: GET
- name: business_info
  endpoint:
    path: /v1/business_info/<business_ids>
    method: GET
- name: business_migration_info
  endpoint:
    path: /v1/business_migration_info/<business_ids>
    method: GET
- name: program_info
  endpoint:
    path: /v1/programs/info/<program_ids>
    method: GET
- name: program_list
  endpoint:
    path: /v1/programs/list/<business_ids>
    method: GET
- name: program_list_all
  endpoint:
    path: /programs/v1
    method: GET
- name: Opportunity
  endpoint:
    path: /opportunities
    method: GET
    data_selector: records
- name: business_subscriptions
  endpoint:
    path: /syndication/feed/list
    method: GET
    data_selector: biz_id
- name: photos
  endpoint:
    path: /portfolio/photos/v1
    method: GET
- name: reviews
  endpoint:
    path: /v3/private/businesses/{business_id}/reviews
    method: GET
    data_selector: reviews
    params:
      business_ids: ''
      locale: ''
- name: business_subscriptions
  endpoint:
    path: /businesses/subscriptions
    method: POST
    data_selector: null
    params: {}
notes:
- Webhooks are sent whenever an event starts showing on Yelp for Business.
- You will receive lead webhook notifications for subscribed business ids.
- 'To receive lead webhook notifications, subscribe to the business ids using event
  ''subscription_types'': [''WEBHOOK'']'
- Syncing your business subscriptions is an ongoing process, recommended at least
  once every 24 hours
- Each API requires a separate set of credentials (username/password).
- Location Subscription API is deprecated
- Please migrate to the Business Subscriptions API
- Each subscription type requires configuration by Yelp to access.
- In order to use this endpoint, the caller should be an onboarded Yelp Waitlist partner
- Currently does not support providing step-by-step directions to a business location.
- Non-business-related queries (e.g., health advice, financial advice) are not supported.
- Non-business-related queries are not supported.
- Currently does not support non-business-related queries (e.g., health advice, financial
  advice).
- Access is disabled by default. See Yelp Partner APIs on how to get access.
- Yelp will provide a file with a filename like {partner}_s3_credentials.asc This
  file contains S3 access key ID and secret access key, but is encrypted.
- This API is only for specific food partners.
- A notification will not be sent in certain scenarios.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The Yelp User Operations team will need to approve the new business listing once
  created (1-2 days).
- You're only able to delete photos that you added.
- At this time, the API does not return businesses without any reviews.
- When the Advertising API returns a job_id, the response from the /reseller/status/
  endpoint may contain errors.
- Even if the business_results.status field is set to COMPLETED, there may be errors
  in when the update_results.program_added.status or update_results.program_modified.status
  is set to REJECTED.
- This endpoint requires special configuration, please get in touch if you would like
  access.
- The businesses and fields that can be updated are contract-dependent.
- The API does not return businesses without any reviews.
- Requests are processed asynchronously. A successful response only represents the
  successful start of processing the request.
- The recommended precedence order for checking constraints includes service type,
  hours, address, and re-order.
- You can only get leads data for businesses that are currently advertising on Yelp.
- Familiarize yourself with the API error codes to gracefully handle issues like invalid
  requests or rate limits.
- Reporting API requires separate credentials from Data Ingestion or Ads API.
- The $body_height must satisfy 1 <= $body_height < 99999
- $BUTTON_TYPE is one of {CHECKOUT | VIEW_ORDER | DONE}
- This may only be called after the user submitted their billing or fulfillment info
  on Yelp's checkout page (i.e. Order status needs to be anything but `pending_user_submit`)
- Webhook sends HTTP POST payload to the configured URL.
- Webhooks API is deprecated
- At the moment, the API allows you to find businesses which support Yelp Reservations,
  get open reservation times, place a hold for a reservation, and place a reservation.
  You cannot edit reservations or retrieve users' booking histories, but you will
  be able to remotely retrieve the reservation status and cancel any confirmed reservation
  bookings.
- This endpoint requires special permissions to be enabled for your Yelp Fusion API
  Key.
- Prior to making a call to this endpoint, the restaurant must currently be on a wait.
- In order to use this endpoint, the caller should be an onboarded Yelp Waitlist partner.
- CTA Button on desktop must match the destination.
- Test URLs before passing through via API to make sure links function properly.
- Conversational restaurant reservations feature is available on request.
- API key should be stored securely.
- Currently, only text messages are supported.
- Access to masked emails and phone numbers is disabled by default and requires configuration
  by Yelp.
- When testing a Zap workflow, you may want to test with actual leads on your Yelp
  business account.
- New Lead and New Message triggers only provide a dummy data set to test with.
- To successfully test your Zap before publishing, you will need to generate a new
  test lead and obtain its lead ID.
- Once the lead has been generated, you can find a new messaging thread for the lead
  in your Yelp Inbox.
- Input your test lead ID into the Yelp Lead ID field of the Configure substep.
- Reach out to [email protected] to help you get started with your Yelp Fusion App.
- Authentication was simplified and is now using a Yelp Fusion App.
- If you make queries against the API too quickly, you may get HTTP 429 errors.
- Your remaining calls, along with your maximum and the time at which your limit will
  reset are returned in the header of each response.
- Any request sent after hitting the daily rate limit will return a HTTP 429.
- New limits for Business Search endpoint reduces maximum number of businesses returned
  from 1,000 to 240 for non-paying users.
- Response status changed from 200 to 202 for create and delete requests.
- The whitelist_business_ids_count has been removed as updates are processed asynchronously.
- Currently, Yelp Reservations API does not support reservations which require a credit
  card.
- Orders that have stayed in the 'pending_user_submit' state for longer than two weeks
  will be auto-cancelled by Yelp.
- The request body must be valid JSON.
- We need you to collect fulfillment related information (special instructions, tip
  amount, anything custom like party size, or anything unique to your vertical).
- You are allowed to enable the user to change their delivery address at any point.
- You may cache Yelp Fusion API content for a maximum of 24 hours.
- Analysis is not permitted for Yelp Fusion integrations.
- GraphQL is still in beta period
- Limit GraphQL to 10,000 queries per day
- Only new advertisers are eligible to use promo codes.
- Identifying the promo program based on the same start date, knowing what budget
  to look for based on the input promo code.
- Become an official Yelp advertising, listing management, or knowledge partner.
- 'Only after you''re become an official partner, share this info with your Yelp rep
  to set up your api access: Your Yelp Fusion client ID and the webhook URL that will
  receive HTTP POST requests.'
- Yelp will not automatically retry webhook URL verification; it is a process triggered
  manually by a Yelp employee.
- Yelp reserves the right in its sole discretion to deem any business eligible or
  ineligible for a listing on Yelp.
- Public response is available and ready to use via API.
- Private responses are not available in the API at the moment.
- All parameters being sent into the reservations endpoint needs to be sent as form
  data inside of the request body.
- You will receive an error if you don’t pass the exact same reservation time, date
  and covers values as you supplied to the Holds endpoint.
- Reservation_openings will only appear if you make a specific query using reservation_time,
  reservation_date and reservation_covers.
- In production, you can trust that we’ll simply display all openings returned by
  the server.
- Specifying the locale in the header is optional, if you do not provide one we will
  default to en_US.
- Check whether the business is eligible using the Get business by ID endpoint and
  inspecting the *rapc* object.
- To mark a lead as replied through a specified reply medium.
- Must use HTTPS for iframe page and assets
- Partners must validate GET params to prevent targetOrigin hijacking
- This endpoint is part of the OAuth Authorization flow
- Partner Server is free to poll the status of an order at any time.
- Listing Management API is deprecated
- Each user has a limit of 25,000 points worth of data that they can obtain via Yelp's
  GraphQL API. This resets at midnight GMT.
- Points values per node are subject to change as we iterate and improve upon this
  system.
- MUST support idempotent processing of notifications
- notification_url must be HTTPS
- Use API Key for authentication
- CAPI will use the same authentication as detailed
- To use the Conversion API you need an Access Key. Please talk to your rep on enabling
  this and see https://docs.developer.yelp.com/docs/fusion-intro for generating a
  token
- All parameters being sent into the holds endpoint needs to be sent as form data
  inside of the request body.
- Authentication uses basic HTTP authentication over SSL. Credentials are provided
  separately.
- Default of 1000 requests per 30 minutes.
- Keep the API Key to yourself since it is the credential for your call to Yelp's
  API.
- To access this endpoint, you require either the Enhanced Plan or Premium Plan permission.
- Each subscription type requires configuration by Yelp to access, please reach out
  to [email protected] to configure access.
- Webhook does not return notifications on test locations.
- Yelp Webhook currently does not return full text reviews.
- The API uses ISO 3166-2 subdivision codes for the 'state' field in requests and
  responses.
- In countries with multiple layers of subdivisions, the API may support some but
  not all.
- Currently, this endpoint only supports food delivery in the US.
- This endpoint is part of the Program Feature API, visit Program Feature API to learn
  more.
- Reporting API V2 is deprecated
- Please migrate to Reporting API V3
- Yelp Partner APIs are disabled by default and require set up by Yelp before you
  can use them.
- Access to these APIs are not enabled by default and are reserved for contracted
  Yelp partners.
- Currently only prepaid is supported.
- Partner may use the 'read' APIs (Get Lead/ Get Interaction events) to get the full
  list of interaction events for a particular lead.
- Partner may use the 'write' APIs to reply to a lead, mark a lead as 'read' or as
  'replied outside of Yelp.'
errors:
- '404: Biz user oauth token doesn''t have access to the business or the lead doesn''t
  exist'
- '413: The number of businesses in the request exceeded the maximum (500)'
- 'INVALID_RESERVATION_ID: The Reservation ID you provided is not valid.'
- 'RESERVATION_CANCELED: This reservation has been canceled.'
- 'RESERVATION_ALREADY_CANCELED: This reservation has already been canceled.'
- 'RESERVATION_CANCEL_CONFLICT: The reservation could not be canceled due to a conflict.'
- 'DATE_TIME_VALIDATION_ERROR: Invalid format, expected format is %H:%M'
- 'COVERS_VALUE_OUT_OF_RANGE: This restaurant only accepts online reservations between
  {minvalue} and {max_value} people.'
- 'INVALID_HOLD_ID: The Hold ID you provided is not valid.'
- 'RESERVATIONS_PARAMS_DONT_MATCH_HOLDS_PARAMS: Input parameters must match the values
  provided to the Holds endpoint.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- Check that you are using the S3 credentials generated & provided by Yelp, rather
  than your existing credentials.
- Check that the S3 Access Key ID and Secret Access Key you are using are correct
  by re-decrypting the credentials file provided by Yelp.
- Photo is missing, unacceptable, or pending.
- Unacceptable biz user name.
- You do not have permission to comment on that review.
- Review does not exist.
- Review already has a comment by a different business user.
- Internal Error.
- This location does not include the respond-to-reviews feature.
- Cannot determine the status of your business.
- You are not allowed to comment at this time.
- Invalid response text.
- 'REQUEST_LIMIT_EXCEEDED: 30 requests per 5 minutes for creating an ingestion job'
- 'REQUEST_LIMIT_EXCEEDED: 30 requests per 5 minutes for querying the status of an
  ingestion job'
- 'INVALID_JSON: The submitted JSON is invalid'
- 'BUSINESS_CREATE_REJECTED: The created business was removed by our User Ops team.'
- 'ATTRIBUTES_CONFLICT: The attributes {first_attribute} and {second_attribute} cannot
  both be set.'
- 'ATTRIBUTE_ALREADY_HAS_VALUE: The value that was submitted for this attribute already
  exists on the business.'
- 'ATTRIBUTE_ALREADY_IN_QUEUE: The value that was submitted for this attribute is
  already in Yelp''s User Ops queue.'
- 'ATTRIBUTE_AUTHORIZATION_FAILED: You are not authorized to update this attribute.'
- 'ATTRIBUTE_CANNOT_BE_UPDATED_ ON_AN_EXISTING_PHOTO_ERROR: This attribute cannot
  be updated on preexisting photos.'
- 'ATTRIBUTE_LOCKED: The value that was submitted wasn''t used because the attribute
  is locked.'
- 'ATTRIBUTE_REMOVED_FROM_QUEUE: This attribute has been replaced in the queue by
  a more recent attribute change.'
- 'BUSINESS_AUTHORIZATION_FAILED: You are not authorized to change this business:
  {message}.'
- 'BUSINESS_DOES_NOT_HAVE_ PRIMARY_VIDEO: Business {business_id} does not have an
  active advertiser video.'
- 'BUSINESS_MATCH_FAILED: Failed to find matching business.'
- 'BUSINESS_NOT_ACTIVE: This business cannot be accessed because it is {inactive_type}.'
- 'BUSINESS_NOT_ELIGIBLE_FOR_ SERVICE_AREA: Based on its categories, this business
  is not eligible for service areas.'
- 'CATEGORY_ALIAS_NOT_RECOGNIZED: The provided category alias does not exist.'
- 'CATEGORY_LIMIT_EXCEEDED: The number of categories supplied exceeds the limit.'
- 'CTA_BELONGS_TO_OTHER_SOURCE: Cannot end a CTA that you do not own.'
- 'CTA_UPDATE_FAILED: Unable to update Call to Action buttons because this business
  does not have an active or future Branded Profile or Enhanced Profile program.'
- 'DATA_IS_OBVIATED: Our User Ops team has determined that the submitted value is
  not as up to date as the value that we have in our records.'
- 'DISALLOWED_CHARACTER: The disallowed character {disallowed_character} was found
  at position {position} of the input string.'
- 'EMAIL_IN_USE_ERROR: Email already in use.'
- 'INVALID_ALIAS: The business alias you provided for yelp_business_id is not currently
  associated with any Yelp businesses.'
- 'INVALID_CATEGORY_FOR_PARTNER: The provided category is invalid for the partner''s
  configuration.'
- 'INVALID_FORMAT: The format of this value is not consistent with what is expected.'
- 'INVALID_HOURS: The submitted hours are invalid.'
- 'INVALID_IMAGE_DATA: The data at the provided url was not in a recognized image
  format.'
- 'INCOMPATIBLE_JOB_ATTRIBUTE_VALUES: ValidationError: Job cannot be false if Attribute
  is true {job_and_attribute_aliases}.'
- 'INVALID_JOB_ATTRIBUTE_RELATIONSHIP: ValidationError: Job+Relation+Entity:{job_relation_entity_aliases}
  are invalid together.'
- 'INVALID_JSON: The submitted JSON is invalid. {reason}.'
- 'INVALID_LIST_INDEXES: The list expected all items to validate. However, it contains
  errors at the following indexes: ({indexes_with_errors}).'
- 'INVALID_MONEY_STRING: The amount provided is not a valid representation of money.'
- 'INVALID_OR_MISSING_REQUIRED_ KEY: Invalid or missing required key(s): {required_keys}.'
- 'INVALID_SERVICE_AREA: The service area provided is not valid.'
- 'INVALID_POLYGON_INTERSECTING_ EDGES: The polygon provided is not valid. Its edges
  are intersecting.'
- 'INVALID_POLYGON_INSUFFICIENT_ POINTS: The polygon provided is not valid. It must
  be defined by at least three points.'
- 'INVALID_POLYGON_VOID: The polygon provided is not valid. Coordinates not provided.'
- 'INVALID_SERVICE_CHARGE: The service charge provided is not valid.'
- 'INVALID_VALUE: The value is not consistent with what is expected.'
- 'INVALID_YELP_BUSINESS_ID: The yelp business id is invalid.'
- 'JOB_AUTHORIZATION_FAILED: You are not authorized to retrieve this job.'
- 'JOB_ID_NOT_RECOGNIZED: The provided job id was not found in our records.'
- 'MATCHING_CRITERIA_NOT_A_DICT: Matching criteria is expected to be a dictionary,
  but the value received was not a dictionary.'
- 'MATCHING_CRITERIA_NOT_FOUND: Matching criteria is required.'
- 'MINIMUM_GREATER_THAN_MAXIMUM_ ARRIVAL_TIME_ERROR: The provided minimum arrival
  time ({minimum}) was greater than provided maximum arrival time ({maximum}).'
- 'MISSING_ALL_OPTIONAL_KEYS: One key from this set of keys: ({optional_set_of_keys})
  must contain a valid value. However, none was given.'
- 'MISSING_GEOGRAPHIC_COORDINATES: Both latitude and longitude must be present and
  valid for manual geocoding.'
- 'MULTIPLE_PHOTO_TYPES: A photo cannot be a business owner photo and a user photo
  at the same time.'
- 'PARENT_WAS_FAILED: This item''s parent was failed, and as a result this item was
  also failed.'
- 'PARENT_WAS_REJECTED: This item''s parent was rejected, and as a result this item
  was also rejected.'
- 'PHOTO_FAILED_TO_DOWNLOAD: The submitted photo failed to download.'
- 'PHOTO_TYPE_AUTHORIZATION_FAILED: You are not authorized to add photos of this type.'
- 'REJECTED_BY_USER_OPS: The value that was provided was rejected by the user ops
  team.'
- 'SERVICE_AREA_NOT_FOUND: Unable to find the given location: {location}.'
- 'SERVICE_AREA_TOO_WIDE: The service area is too wide as the submitted locations
  are more than {max_distance} miles apart.'
- 'TEXT_TOO_LONG: Inputted text exceeds maximum length.'
- 'TOO_MANY_CAPITAL_LETTERS: Inputted text has too many capital letters.'
- 'TOO_MANY_CONSECUTIVE_CAPITAL_LETTERS: Inputted text has too many consecutive capital
  letters.'
- 'TOO_MANY_PARTNER_BUSINESS_ERROR: The number of businesses in the request exceeded
  the maximum of 200.'
- 'TOO_MANY_SERVICE_AREAS: The number of service area locations in the request exceeded
  the maximum number of allowed service areas for a business.'
- 'TOO_MANY_SPECIAL_CHARACTERS: Inputted text has too many special characters.'
- 'TYPE_NOT_ACCEPTED: Unknown item type: {type_received}.'
- 'UNCATEGORIZED_BUSINESS_UPDATE_NEEDS_CATEGORIES: This business is uncategorized
  and requires a category update in order to update any other attribute.'
- 'UNKNOWN_ATTRIBUTE: The specified attribute is not recognized by our system.'
- 'UNKNOWN_OPTIONS: The specified keys are not recognized by our system: {keys}.'
- 'USER_ID_IS_NOT_VALID: The specified user id is not valid.'
- 'VALIDATION_FAILED: {original_message}'
- 'VALUE_AUTHORIZATION_FAILED: You are not authorized to update this attribute with
  the given value.'
- 'VALUE_NOT_AVAILABLE_FOR_ATTRIBUTE: This value can not be set on this attribute.'
- 'VALUE_NOT_AVAILABLE_FOR_COUNTRY: This value can not be set on businesses from this
  country.'
- 'VALUE_NOT_A_DICT: The given value was not a dictionary, but a dictionary was expected.'
- 'VALUE_NOT_A_LIST: The given value was not a list, but a list was expected.'
- 'VALUE_NOT_NULLABLE: Null was set as the value for this attribute, but this value
  is not nullable.'
- 'YELP_BUSINESS_ID_MISMATCH: The business id you passed ({partner_yelp_business_id})
  did not match what we found ({matched_yelp_business_id}).'
- 'ZERO_GEOGRAPHIC_COORDINATES: The given latitude and longitude values were zero.'
- 'BUSINESS_NOT_ACTIVE: This business cannot be accessed because it is closed.'
- 'PROGRAM_NOT_ACTIVE_CLOSED_BUSINESS: This program is no longer active because has
  been closed.'
- 'PROGRAM_NOT_ACTIVE_BUSINESS_REMOVED_FROM_SEARCH: This program is no longer active
  because the business has been removed from search by Yelp due to duplicate, eligibility
  status, etc.'
- 'PROGRAM_HAS_EXPIRED: This program cannot be modified. The program is no longer
  active because the program end date has passed, or the business has been removed
  from search by Yelp due to being a duplicate listing, eligibility status, etc.'
- 'INVALID_OR_MISSING_KEY: Invalid or missing required key(s): {required_keys}'
- 'PROGRAM_ALREADY_RUNNING_BY_ANOTHER_PROVIDER: You cannot run this program because
  the client has already purchased this product from another provider.'
- 'CANNOT_ADD_PROGRAM_IN_PAST: Cannot add a program that starts in the past.'
- 'PROGRAM_ALREADY_REQUESTED: You already requested to enable this product for this
  client.'
- 'CONFLICTS_WITH_ANOTHER_ACTIVE_PROGRAM: This program conflicts with a currently
  active or recently ended program.'
- 'PARENT_WAS_REJECTED: Another part of your request failed, check the other attributes
  of our response to find the root error cause.'
- 'CANNOT_DECREASE_BUDGET_BELOW_AMOUNT_ALREADY_SPENT: Campaign has already spent {amount_spent}.
  Cannot decrease budget below actual spend.'
- 'CURRENCY_MISMATCH: Cannot change current type; currency must remain consistent.'
- 'BUSINESS_RESTRICTED_FROM_ADVERTISING: Yelp has blocked this locations ability to
  purchase advertising.'
- 'INVALID_PRICE: Invalid price. Must be numerical formatted in cents.'
- 'UNSUPPORTED_CATEGORIES: Category is not supported: The category of the business
  you are trying to advertise is declined due to policy restrictions.'
- 'BID_TOO_HIGH_FOR_BUDGET: Bid exceeds total prorated budget. Please increase budget
  to increase your chances of ad display.'
- 'COULD_NOT_MODIFY_PROGRAM: Could not modify specified program.'
- 'NO_CATEGORIES: The business does not have categories or they are awaiting approval.'
- 'CAMPAIGN_BUDGET_VIOLATES_PROMO_RESTRICTIONS: Campaign budgeted outside of restrictions
  set by associated promo.'
- '503: Service Unavailable'
- '403: Authorization Error'
- '500: Internal Error'
- '202: Job not complete'
- '400: Invalid Request'
- '401: Authentication Error'
- '404: Not Found'
- All the Leads API endpoints have a default rate limit of 5 requests per second per
  client per endpoint.
- '422 CURRENTLY_NO_WAIT: The restaurant is not currently on a wait.'
- '201 Created: Successful POST call.'
- You don’t have access to this business.
- 'invalid_request: The request is missing a required parameter, includes an invalid
  parameter value, includes a parameter more than once, or is otherwise malformed.'
- 'access_denied: The state supplied in the request is not unique/has been used before.'
- 'invalid_scope: The request is unauthorized for the given scope.'
- 'unsupported_response_type: Unsupported response type.'
- 'server_error: Server error.'
- code is now a string value describing the error in more detail.
- description renamed for consistency with other Yelp API errors.
- 'HTTP 429: You have exceeded the queries-per-second limit for this endpoint.'
- 'HTTP 429: You''ve reached the access limit for this client.'
- 'invalid_job_id: The submitted job ID was not a valid job ID.'
- 'invalid_biz_ids: A list of input business IDs that were not valid Yelp business
  IDs.'
- 'job_id_with_no_claim_results: The submitted job ID had no associated claim requests.'
- 'biz_ids_with_no_claim_results: A list of submitted Yelp business IDs with no associated
  claim requests.'
- 'ADDITION_EXCEEDS_BIZ_QUOTA: The new additions would exceed the business quota.'
- 'BAD_POST_BODY: A list mapped to the key ''biz_ids'' is required in the request
  body.'
- 'BIZ_ID_LIST_TOO_LARGE: The biz id list is larger than the maximum size of 1000.'
- 'INVALID_LIMIT_VALUE: The limit must be greater than 0 and less or equal to 10000.'
- 'INVALID_JSON_OBJECT: The request body could not be parsed into a JSON object.'
- 'INVALID_OFFSET_VALUE: The offset must be greater or equal to 0.'
- 'INVALID_QUERY_PARAM_TYPE: Query parameters must be of type integer.'
- 'INVALID_IDS_IN_POST_BODY: The post body contains invalid business IDs.'
- 'REMOVE_EXCEEDS_LIMIT: The remove call exceeds the yearly remove limit.'
- '429: Too Many Requests'
- 'PROMOTION_UNAVAILABLE: The promotion is unavailable. This promotional code is invalid.'
- 'COULD_NOT_ADD_PROGRAM: Could not add program for businesses.'
- The webhook URL does not exist, i.e. HTTP 404
- The webhook URL exists, but when Yelp sends the verification GET request there is
  either no response (i.e. request times out) or the response does not conform to
  the format described above.
- This location does not include the respond-to-reviews feature. Contact your official
  Yelp Partner for more information.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: INVALID_LOCALE'
- '202 accepted: Successful POST call'
- '201 created: Successful response for marking lead as replied.'
- '401_UNAUTHORIZED: This server could not verify that you are authorized to access
  the document requested. Either you supplied the wrong credentials (e.g., bad password),
  or your browser doesn''t understand how to supply the credentials required.'
- 'DAILY_POINTS_LIMIT_REACHED: You have reached the GraphQL daily points limit for
  this API key. The limit will reset at midnight GMT.'
- '401 Unauthorized: Verify API Key is correctly attached in the headers.'
- '400 Bad Request: Fields which are marked required in the schema must be included
  and the fields marked hashed must be hashed.'
- '429 Too Many Requests: You’ve hit the rate limits for these endpoints.'
- '404 Not Found: Verify that our team has reached out to you to let you know that
  your key is active.'
- 'HTTP Status Code: 413 - The number of businesses in the request exceeded the maximum
  (500)'
- error_code: NOT_AUTHENTICATED
  error_message: please authenticate
  more_info: '[http://www.yelp.com/developers/documentation/v2/overview](http://www.yelp.com/developers/documentation/v2/overview)'
- error_code: FIELD_REQUIRED
  error_message: is required
- error_code: VALIDATION_ERROR
  error_message: 'is invalid: '
- error_code: UNAUTHORIZED
  error_message: Please authenticate
- error_code: INTERNAL_SERVER_ERROR
  error_message: Something is wrong with Yelp
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.yelp.com/v3
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://api.yelp.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  headers:
    Accept: application/json
    Content-Type: application/json
    Authorization: Bearer API_KEY
    content-type: application/x-www-form-urlencoded
    Accept-Language: en_US
    accept: application/json
  paginator:
    type: cursor
    page_size_param: limit
    default_page_size: 100
    cursor_param: newer_than_cursor
  resources:
  - name: resume_cpc_program
    endpoint:
      path: /resume/v1
      method: POST
source_metadata: null
