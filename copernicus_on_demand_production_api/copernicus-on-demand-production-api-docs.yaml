resources:
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: Temperature and Reflectance
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance
    method: GET
    data_selector: records
- name: Snow
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow
    method: GET
    data_selector: records
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: ProductionOrder
  endpoint:
    path: /odata/v1/ProductionOrder/OData.CSC.Order
    method: POST
    data_selector: result
    params: {}
- name: ProductionOrders
  endpoint:
    path: /odata/v1/ProductionOrders
    method: GET
    data_selector: value
    params: {}
- name: Workflows
  endpoint:
    path: /Workflows
    method: GET
    data_selector: value
    params: {}
- name: Production Orders
  endpoint:
    path: /ProductionOrders
    method: GET
    data_selector: value
    params: {}
- name: Production Order
  endpoint:
    path: /ProductionOrder/OData.CSC.Order
    method: POST
    data_selector: ''
    params: {}
- name: BatchOrder
  endpoint:
    path: /odata/v1/BatchOrder/OData.CSC.Order
    method: POST
    data_selector: response
    params: {}
- name: ProductionOrder
  endpoint:
    path: /odata/v1/ProductionOrder/OData.CSC.Order
    method: POST
    data_selector: response
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/BatchOrder(<batch_order_id>)/Products
    method: GET
    data_selector: response
    params: {}
- name: SingleBatchOrder
  endpoint:
    path: /odata/v1/BatchOrder(<batch_order_id>)
    method: GET
    data_selector: response
    params: {}
- name: lake_ice_extent
  endpoint:
    path: /services/data/lake_ice_extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /services/data/lake_water_quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /services/data/land_surface_temperature
    method: GET
    data_selector: records
- name: snow_water_equivalent
  endpoint:
    path: /services/data/snow_water_equivalent
    method: GET
    data_selector: records
- name: snow_cover_extent
  endpoint:
    path: /services/data/snow_cover_extent
    method: GET
    data_selector: records
- name: land_cover
  endpoint:
    path: /services/data/land_cover
    method: GET
    data_selector: records
- name: LakeIceExtent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent/
    method: GET
    data_selector: records
- name: LakeWaterQuality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality/
    method: GET
    data_selector: records
- name: LandSurfaceTemperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature/
    method: GET
    data_selector: records
- name: SnowWaterEquivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent/
    method: GET
    data_selector: records
- name: SnowCoverExtent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-cover-extent/
    method: GET
    data_selector: records
- name: GlobalDynamicLandCover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover/
    method: GET
    data_selector: records
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Land Surface Temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
- name: Snow Water Equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
- name: Snow Cover Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-cover-extent
    method: GET
- name: Global Dynamic Land Cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
- name: AnnualReports
  endpoint:
    path: /APIs/AnnualReports
    method: GET
    data_selector: records
- name: Token
  endpoint:
    path: /APIs/Token
    method: POST
    data_selector: token
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Land Surface Temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
- name: Snow Water Equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
- name: lake_ice_extent
  endpoint:
    path: /services/data/v1/lake_ice_extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /services/data/v1/lake_water_quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /services/data/v1/land_surface_temperature
    method: GET
    data_selector: records
- name: snow_water_equivalent
  endpoint:
    path: /services/data/v1/snow_water_equivalent
    method: GET
    data_selector: records
- name: snow_cover_extent
  endpoint:
    path: /services/data/v1/snow_cover_extent
    method: GET
    data_selector: records
- name: land_cover
  endpoint:
    path: /services/data/v1/land_cover
    method: GET
    data_selector: records
- name: Sentinel-1 SLC Bursts
  endpoint:
    path: /APIs/Sentinel-1%20SLC%20Burst.html
    method: GET
- name: Catalog subscriptions
  endpoint:
    path: /APIs/Subscriptions.html
    method: GET
- name: STAC product catalogue
  endpoint:
    path: /APIs/STAC.html
    method: GET
- name: Water Bodies 2020-present (raster 100 m), global, monthly
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/water-bodies/wb_global_100m_monthly_v1
    method: GET
- name: River and Lake Ice Extent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Temperature and Reflectance
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance
    method: GET
- name: Snow
  endpoint:
    path: /data/clms/bio-geophysical-parameters/snow
    method: GET
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /data/clms/land-cover-and-land-use-mapping
    method: GET
- name: Sentinel-1 Level 1 Ground Range Detected (GRD)
  endpoint:
    path: /Data/SentinelMissions/Sentinel1.html#sentinel-1-level-1-ground-range-detected-grd
    method: GET
    data_selector: archiveStatus
    params: {}
- name: Sentinel-1 Level 1 Single Look Complex (SLC)
  endpoint:
    path: /Data/SentinelMissions/Sentinel1.html#sentinel-1-level-1-single-look-complex-slc
    method: GET
    data_selector: archiveStatus
    params: {}
- name: Sentinel-1 Level 2 Ocean (OCN)
  endpoint:
    path: /Data/SentinelMissions/Sentinel1.html#sentinel-1-level-2-ocean-ocn
    method: GET
    data_selector: archiveStatus
    params: {}
- name: Level 0 Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'SENTINEL-1' and Online eq true
- name: Precise Orbit Determination Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'SENTINEL-1' and Online eq true
- name: Level 3 Monthly Mosaics
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'GLOBAL-MOSAICS' and Online eq true
- name: Level 2A Surface Reflectance
  endpoint:
    path: /collections/sentinel-2-l2a
    method: GET
    data_selector: features
    params: {}
- name: Level 1C Top of Atmosphere (TOA)
  endpoint:
    path: /collections/sentinel-2-l1c
    method: GET
    data_selector: features
    params: {}
- name: Level 1B
  endpoint:
    path: /collections/sentinel-2-l1b
    method: GET
    data_selector: features
    params: {}
- name: Level 3 Quarterly Mosaics
  endpoint:
    path: /collections/sentinel-2-global-mosaics
    method: GET
    data_selector: features
    params: {}
- name: AUX_GNSSRD
  endpoint:
    path: /eodata/Sentinel-2/AUX/AUX_GNSSRD/
    method: GET
    data_selector: Products
- name: AUX_PROQUA
  endpoint:
    path: /eodata/Sentinel-2/AUX/AUX_PROQUA/
    method: GET
    data_selector: Products
- name: AUX_POEORB
  endpoint:
    path: /eodata/Sentinel-2/AUX/AUX_POEORB/
    method: GET
    data_selector: Products
- name: water_bodies
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: land_cover
  endpoint:
    path: /data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: Sentinel-3 OLCI Level 1
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-3%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OLCI%27)%20and%20(Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OL_1_EFR___%27)%20or%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OL_1_ERR___%27)&$top=10
    method: GET
    data_selector: records
- name: Sentinel-3 OLCI Level 2
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-3%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OLCI%27)%20and%20(Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OL_2_LFR___%27)%20or%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OL_2_LRR___%27)%20or%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OL_2_WFR___%27)%20or%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27OL_2_WRR___%27)&$top=10
    method: GET
    data_selector: records
- name: Sentinel-3 SLSTR Level 1
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-3%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27SLSTR%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27SL_1_RBT___%27)&$top=10
    method: GET
    data_selector: records
- name: Sentinel-3 SLSTR Level 2
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-3%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27SLSTR%27)%20and%20(Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27SL_2_AOD___%27)%20or%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27SL_2_FRP___%27)%20or%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27SL_2_LST___%27)%20or%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27SL_2_WST___%27)&$top=10
    method: GET
    data_selector: records
- name: POD products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: water_bodies_1km_10daily
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/water-bodies/wb_global_1km_10daily_v2.html
    method: GET
    data_selector: records
    params: {}
- name: water_bodies_300m_10daily
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/water-bodies/wb_global_300m_10daily_v1.html
    method: GET
    data_selector: records
    params: {}
- name: water_bodies_100m_monthly
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/water-bodies/wb_global_100m_monthly_v1.html
    method: GET
    data_selector: records
    params: {}
- name: Level 2 Aerosol Index
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-5P%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27TROPOMI%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27L2__AER_AI%27)%20and%20Online%20eq%20true&$top=10
    method: GET
    data_selector: records
- name: Level 2 Carbon Monoxide
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-5P%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27TROPOMI%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27L2__CO____%27)%20and%20Online%20eq%20true&$top=10
    method: GET
    data_selector: records
- name: Level 2 Cloud
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-5P%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27TROPOMI%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27L2__CLOUD_%27)%20and%20Online%20eq%20true&$top=10
    method: GET
    data_selector: records
- name: Level 2 Formaldehyde
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-5P%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27TROPOMI%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27L2__HCHO__%27)%20and%20Online%20eq%20true&$top=10
    method: GET
    data_selector: records
- name: Level 2 Methane
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-5P%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27TROPOMI%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27L2__CH4___%27)%20and%20Online%20eq%20true&$top=10
    method: GET
    data_selector: records
- name: Level 2 Nitrogen Dioxide
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27SENTINEL-5P%27%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27instrumentShortName%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27TROPOMI%27)%20and%20Attributes/OData.CSC.StringAttribute/any(att:att/Name%20eq%20%27productType%27%20and%20att/OData.CSC.StringAttribute/Value%20eq%20%27L2__NO2___%27)%20and%20Online%20eq%20true&$top=10
    method: GET
    data_selector: records
- name: Ozone
  endpoint:
    path: /web/s5p-processing#S5PProcessing-Ozone(O3)FullVerticalprofile
    method: GET
    data_selector: records
    params: {}
- name: Sulfur Dioxide
  endpoint:
    path: /web/s5p-processing#S5PProcessing-SO2VerticalColumn
    method: GET
    data_selector: records
    params: {}
- name: Level 1B
  endpoint:
    path: /web/s5p-processing#S5PProcessing-L1BAlgorithmsS5P-Processing-L1B-Algorithms
    method: GET
    data_selector: records
    params: {}
- name: water_bodies
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
- name: AUX_GNSSRD
  endpoint:
    path: /odata/v1/Products?$filter=((Online%20eq%20true)%20and%20(((((((Attributes/OData.CSC.StringAttribute/any(i0:i0/Name%20eq%20%27productType%27%20and%20i0/Value%20eq%20%27AUX_GNSSRD%27))))%20and%20(Collection/Name%20eq%20%27SENTINEL-6%27)))))))
    method: GET
    data_selector: records
    params: {}
- name: AUX_PROQUA
  endpoint:
    path: /odata/v1/Products?$filter=((Online%20eq%20true)%20and%20(((((((Attributes/OData.CSC.StringAttribute/any(i0:i0/Name%20eq%20%27productType%27%20and%20i0/Value%20eq%20%27AUX_PROQUA%27))))%20and%20(Collection/Name%20eq%20%27SENTINEL-6%27)))))))
    method: GET
    data_selector: records
    params: {}
- name: AX____ROE__AX
  endpoint:
    path: /odata/v1/Products?$filter=((Online%20eq%20true)%20and%20(((((((Attributes/OData.CSC.StringAttribute/any(i0:i0/Name%20eq%20%27productType%27%20and%20i0/Value%20eq%20%27AX____ROE__AX%27))))%20and%20(Collection/Name%20eq%20%27SENTINEL-6%27)))))))
    method: GET
    data_selector: records
    params: {}
- name: P4_1B_LR_____
  endpoint:
    path: /odata/v1/Products?$filter=(%20(Online%20eq%20true)%20and%20(Attributes/OData.CSC.StringAttribute/any(i0:i0/Name%20eq%20%27productType%27%20and%20i0/Value%20eq%20%27P4_1B_LR_____%27))%20and%20(Collection/Name%20eq%20%27SENTINEL-6%27)%20)
    method: GET
    data_selector: records
    params: {}
- name: P4_2_LR_____
  endpoint:
    path: /odata/v1/Products?$filter=(%20(Online%20eq%20true)%20and%20(Attributes/OData.CSC.StringAttribute/any(i0:i0/Name%20eq%20%27productType%27%20and%20i0/Value%20eq%20%27P4_2__LR_____%27))%20and%20(Collection/Name%20eq%20%27SENTINEL-6%27)%20)
    method: GET
    data_selector: records
    params: {}
- name: CLMS
  endpoint:
    path: /APIs/SentinelHub/Data/CLMS.html
    method: GET
    data_selector: records
- name: water_bodies_global_1km_10daily
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/water-bodies/wb_global_1km_10daily_v2
    method: GET
- name: river_and_lake_ice_extent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: lake_water_quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: land_surface_temperature
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
- name: snow_water_equivalent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
- name: global_dynamic_land_cover
  endpoint:
    path: /data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
- name: Global Dynamic Land Cover
  endpoint:
    path: /EODATA/CLMS/landcover_landuse/dynamic_land_cover
    method: GET
    data_selector: dataset
    params: {}
- name: Soil Moisture
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/soil_water_index
    method: GET
    data_selector: dataset
    params: {}
- name: snow_cover_extent_europe
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/snow_cover_extent/sce_europe_500m_daily_v1
    method: GET
    data_selector: records
    params: {}
- name: snow_cover_extent_northern_hemisphere
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/snow_cover_extent/sce_northernhemisphere_1km_daily_v1
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent_northern_hemisphere_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/snow_water_equivalent/swe_northernhemisphere_5km_daily_v1
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent_northern_hemisphere_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/snow_water_equivalent/swe_northernhemisphere_5km_daily_v2
    method: GET
    data_selector: records
    params: {}
- name: burnt_area_monthly_v3
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/burnt_area/ba_global_300m_monthly_v3
    method: GET
    data_selector: records
    params:
      filter: Collection/Name eq 'CLMS' and Attributes/OData.CSC.StringAttribute/any(att:att/Name
        eq 'datasetIdentifier' and att/OData.CSC.StringAttribute/Value eq 'ba_global_300m_monthly_v3')
- name: burnt_area_daily_v3
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/burnt_area/ba_global_300m_daily_v3
    method: GET
    data_selector: records
    params:
      filter: Collection/Name eq 'CLMS' and Attributes/OData.CSC.StringAttribute/any(att:att/Name
        eq 'datasetIdentifier' and att/OData.CSC.StringAttribute/Value eq 'ba_global_300m_daily_v3')
- name: vegetation_properties_fcover_300m
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/vegetation_properties/fcover_global_300m_10daily_v1
    method: GET
    data_selector: records
    params:
      filter: Collection/Name eq 'CLMS' and Attributes/OData.CSC.StringAttribute/any(att:att/Name
        eq 'datasetIdentifier' and att/OData.CSC.StringAttribute/Value eq 'fcover_global_300m_10daily_v1')
- name: gdmp_global_1km_10daily_v2
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'CLMS' and Attributes/OData.CSC.StringAttribute/any(att:att/Name
        eq 'datasetIdentifier' and att/OData.CSC.StringAttribute/Value eq 'gdmp_global_1km_10daily_v2')
      count: 'true'
      expand: Attributes
- name: npp_global_300m_10daily_v1
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'CLMS' and Attributes/OData.CSC.StringAttribute/any(att:att/Name
        eq 'datasetIdentifier' and att/OData.CSC.StringAttribute/Value eq 'npp_global_300m_10daily_v1')
      count: 'true'
      expand: Attributes
- name: gpp_global_300m_10daily_v1
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'CLMS' and Attributes/OData.CSC.StringAttribute/any(att:att/Name
        eq 'datasetIdentifier' and att/OData.CSC.StringAttribute/Value eq 'gpp_global_300m_10daily_v1')
      count: 'true'
      expand: Attributes
- name: wb_global_100m_monthly_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/water_bodies/wb_global_100m_monthly_v1
    method: GET
    data_selector: records
    params: {}
- name: wb_global_300m_monthly_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/water_bodies/wb_global_300m_monthly_v2
    method: GET
    data_selector: records
    params: {}
- name: wb_global_300m_10daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/water_bodies/wb_global_300m_10daily_v1
    method: GET
    data_selector: records
    params: {}
- name: wb_global_1km_10daily_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/water_bodies/wb_global_1km_10daily_v2
    method: GET
    data_selector: records
    params: {}
- name: lie_europe_250m_daily_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/river_and_lake_ice_extent/lie_europe_250m_daily_v2
    method: GET
    data_selector: records
    params: {}
- name: lie_baltic_250m_daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/river_and_lake_ice_extent/lie_baltic_250m_daily_v1
    method: GET
    data_selector: records
    params: {}
- name: lie_northernhemisphere_500m_daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/river_and_lake_ice_extent/lie_northernhemisphere_500m_daily_v1
    method: GET
    data_selector: records
    params: {}
- name: lie_global_500m_daily_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/river_and_lake_ice_extent/lie_global_500m_daily_v2
    method: GET
    data_selector: records
    params: {}
- name: wl-lakes_global_vector_daily_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/river_and_lake_water_level/wl-lakes_global_vector_daily_v2
    method: GET
    data_selector: records
    params: {}
- name: wl-rivers_global_vector_daily_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/river_and_lake_water_level/wl-rivers_global_vector_daily_v2
    method: GET
    data_selector: records
    params: {}
- name: lwq-nrt_global_100m_10daily_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/lake_water_quality/lwq-nrt_global_100m_10daily_v2
    method: GET
    data_selector: records
    params: {}
- name: lwq-nrt_global_100m_10daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/lake_water_quality/lwq-nrt_global_100m_10daily_v1
    method: GET
    data_selector: records
    params: {}
- name: lwq-nrt_global_300m_10daily_v2
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/lake_water_quality/lwq-nrt_global_300m_10daily_v2
    method: GET
    data_selector: records
    params: {}
- name: lwq-nrt_global_300m_10daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/lake_water_quality/lwq-nrt_global_300m_10daily_v1
    method: GET
    data_selector: records
    params: {}
- name: lwq-reproc_global_300m_10daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/lake_water_quality/lwq-reproc_global_300m_10daily_v1
    method: GET
    data_selector: records
    params: {}
- name: lwq-nrt_global_1km_10daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/lake_water_quality/lwq-nrt_global_1km_10daily_v1
    method: GET
    data_selector: records
    params: {}
- name: lwq-reproc_global_1km_10daily_v1
  endpoint:
    path: /EODATA/CLMS/bio-geophysical/lake_water_quality/lwq-reproc_global_1km_10daily_v1
    method: GET
    data_selector: records
    params: {}
- name: Products
  endpoint:
    path: /odata/Products
    method: GET
    data_selector: value
    params: {}
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Land Surface Temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
- name: Snow Water Equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
- name: Global Dynamic Land Cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
- name: GeoEye-1
  endpoint:
    path: /eodata/CCM/VHR_IMAGE_2015/GIS_MS4_OR/*
    method: GET
    data_selector: records
    params: {}
- name: GeoSat-1
  endpoint:
    path: /eodata/CCM/DWH_MG2_CORE_09/SL6_22P_1R*
    method: GET
    data_selector: records
    params: {}
- name: GeoSat-2
  endpoint:
    path: /eodata/CCM/VHR_IMAGE_20nn/HRS_MS4_1B*
    method: GET
    data_selector: records
    params: {}
- name: Kompsat 3-3A
  endpoint:
    path: /eodata/CCM/VHR_IMAGE_20nn/AIS_MSP_1R*
    method: GET
    data_selector: records
    params: {}
- name: PlanetScope
  endpoint:
    path: /eodata/CCM/VHR_IMAGE_2018/DOV_MS_L1A*
    method: GET
    data_selector: records
    params: {}
- name: Pleiades
  endpoint:
    path: /eodata/CCM/VHR_IMAGE_20nn/PHR_BUN_1A*
    method: GET
    data_selector: records
    params: {}
- name: PNE_MS2__3
  endpoint:
    path: /eodata/CCM/VHR_IMAGE_2024/PNE_MS2__3*
    method: GET
    data_selector: records
    params: {}
- name: SAR_HIM_1B
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_HIM_1B*
    method: GET
    data_selector: records
    params: {}
- name: SAR_HIM_1C
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_HIM_1C*
    method: GET
    data_selector: records
    params: {}
- name: SAR_HIM_AB
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_HIM_AB*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SCH_1B
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SCH_1B*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SCH_1C
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SCH_1C*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SCH_AB
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SCH_AB*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SCW_1B
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SCW_1B*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SCW_1C
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SCW_1C*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SCW_1D
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SCW_1D*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SCW_AB
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SCW_AB*
    method: GET
    data_selector: records
    params: {}
- name: SAR_SPP_1C
  endpoint:
    path: /eodata/CCM/DWH_MG1_CORE_11/SAR_SPP_1C*
    method: GET
    data_selector: records
    params: {}
- name: catalogue
  endpoint:
    path: /catalogue
    method: GET
    data_selector: catalogue_entries
- name: SAR_SEA_ICE
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: records
    params:
      dataset: SAR_SEA_ICE
- name: COP_DEM
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: records
    params:
      dataset: COP-DEM_GLO-30-DGED
- name: Soil Water Index
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/soil-moisture/soil-water-index
    method: GET
    data_selector: records
    params: {}
- name: Surface Soil Moisture
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/soil-moisture/surface-soil-moisture
    method: GET
    data_selector: records
    params: {}
- name: water_bodies
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
- name: river_and_lake_ice_extent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
- name: snow_water_equivalent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
- name: L1B
  endpoint:
    path: /resto/api/collections/SMOS/search.json?processingLevel=1B
    method: GET
    data_selector: products
    params: {}
- name: L1CL
  endpoint:
    path: /resto/api/collections/SMOS/search.json?processingLevel=other:%201C
    method: GET
    data_selector: products
    params: {}
- name: L1CS
  endpoint:
    path: /resto/api/collections/SMOS/search.json?processingLevel=other:%201C
    method: GET
    data_selector: products
    params: {}
- name: L2OS
  endpoint:
    path: /resto/api/collections/SMOS/search.json?processingLevel=2
    method: GET
    data_selector: products
    params: {}
- name: L2SM
  endpoint:
    path: /resto/api/collections/SMOS/search.json?processingLevel=2
    method: GET
    data_selector: products
    params: {}
- name: water_bodies
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
    params: {}
- name: land_cover
  endpoint:
    path: /data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
    params: {}
- name: MERIS_FRS_1P
  endpoint:
    path: /resto/api/collections/ENVISAT/search.json?productType=FRS
    method: GET
    data_selector: products
    params: {}
- name: OData_Products
  endpoint:
    path: /odata/v1/Products?$filter=Collection/Name%20eq%20%27ENVISAT%27
    method: GET
    data_selector: value
    params: {}
- name: Landsat-5 TM-L1G
  endpoint:
    path: /resto/api/collections/Landsat5/search.json?
    method: GET
    data_selector: products
    params:
      productType: L1G
- name: Landsat-5 TM-L1T
  endpoint:
    path: /resto/api/collections/Landsat5/search.json?
    method: GET
    data_selector: products
    params:
      productType: L1T
- name: ETM-GTC-1P
  endpoint:
    path: /resto/api/collections/Landsat7/search.json?productType=GTC_1P
    method: GET
    data_selector: records
    params: {}
- name: ETM-L1G
  endpoint:
    path: /resto/api/collections/Landsat7/search.json?productType=L1G
    method: GET
    data_selector: records
    params: {}
- name: ETM-L1GT
  endpoint:
    path: /resto/api/collections/Landsat7/search.json?productType=L1GT
    method: GET
    data_selector: records
    params: {}
- name: ETM-L1T
  endpoint:
    path: /resto/api/collections/Landsat7/search.json?productType=L1T
    method: GET
    data_selector: records
    params: {}
- name: OLI/TIRS_L1GT
  endpoint:
    path: /landsat-8/OLI/TIRS_L1GT
    method: GET
    data_selector: products
    params: {}
- name: OLI/TIRS_L1T
  endpoint:
    path: /landsat-8/OLI/TIRS_L1T
    method: GET
    data_selector: products
    params: {}
- name: OLI/TIRS_L1TP
  endpoint:
    path: /landsat-8/OLI/TIRS_L1TP
    method: GET
    data_selector: products
    params: {}
- name: OLI/TIRS_L2SP
  endpoint:
    path: /landsat-8/OLI/TIRS_L2SP
    method: GET
    data_selector: products
    params: {}
- name: access_token
  endpoint:
    path: /APIs/Token.html
    method: POST
- name: odata
  endpoint:
    path: /APIs/OData.html
    method: GET
- name: opensearch
  endpoint:
    path: /APIs/OpenSearch.html
    method: GET
- name: water_bodies
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/water-bodies
    method: GET
    data_selector: records
- name: river_and_lake_ice_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: temperature_and_reflectance
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance
    method: GET
    data_selector: records
- name: snow
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow
    method: GET
    data_selector: records
- name: land_cover_and_land_use_mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: OLI/TIRS_L1TP
  endpoint:
    path: /resto/api/collections/LANDSAT-9/search.json?instrument=OLI_TIRS&productType=L1TP
    method: GET
    data_selector: records
- name: OLI/TIRS_L1GT
  endpoint:
    path: /resto/api/collections/LANDSAT-9/search.json?instrument=OLI_TIRS&productType=L1GT
    method: GET
    data_selector: records
- name: OLI_L1TP
  endpoint:
    path: /resto/api/collections/LANDSAT-9/search.json?instrument=OLI&productType=L1TP
    method: GET
    data_selector: records
- name: OLI_L1GT
  endpoint:
    path: /resto/api/collections/LANDSAT-9/search.json?instrument=OLI&productType=L1GT
    method: GET
    data_selector: records
- name: TIRS_L1GT
  endpoint:
    path: /resto/api/collections/LANDSAT-9/search.json?instrument=TIRS&productType=L1GT
    method: GET
    data_selector: records
- name: water_bodies
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
- name: river_and_lake_ice_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
- name: snow_water_equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
- name: snow_cover_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-cover-extent
    method: GET
    data_selector: records
- name: land_cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: Water Bodies
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies
    method: GET
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
- name: Temperature and Reflectance
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance
    method: GET
- name: Snow
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow
    method: GET
- name: Global Fire Assimilation System (GFAS)
  endpoint:
    path: /eodata/CAMS/GFAS/
    method: GET
- name: Global Atmospheric Composition Forecasts (GLOBAL)
  endpoint:
    path: /eodata/CAMS/GLOBAL/
    method: GET
- name: GLOBAL ADDITIONAL
  endpoint:
    path: /eodata/CAMS/GLOBAL_ADDITIONAL/
    method: GET
- name: WMO ESSENTIALS
  endpoint:
    path: /eodata/CAMS/WMO_ESSENTIAL/
    method: GET
- name: Sentinel-2 Level 2A WorldCover Annual Cloudless Mosaics (RGBNIR)
  endpoint:
    path: /Data/ComplementaryData/Additional.html#sentinel-2-level-2a-worldcover-annual-cloudless-mosaics-rgbnir
    method: GET
    data_selector: global cloud-free analysis ready mosaics
    params: {}
- name: Sentinel-2 Mosaics
  endpoint:
    path: /Data/ComplementaryData/Additional.html#sentinel-2-mosaics
    method: GET
    data_selector: best pixel values for 10-daily periods
    params: {}
- name: Sentinel-2 GLC (S2GLC)
  endpoint:
    path: /Data/ComplementaryData/Additional.html#sentinel-2-glc-s2glc
    method: GET
    data_selector: high resolution land cover map
    params: {}
- name: Copernicus Digital Elevation Model (COP DEM) Global
  endpoint:
    path: /Data/ComplementaryData/Additional.html#copernicus-digital-elevation-model-cop-dem-global
    method: GET
    data_selector: global elevation data
    params: {}
- name: Copernicus Digital Elevation Model (COP DEM) Europe
  endpoint:
    path: /Data/ComplementaryData/Additional.html#copernicus-digital-elevation-model-cop-dem-europe
    method: GET
    data_selector: elevation data for Europe
    params: {}
- name: Shuttle Radar Topography Mission DEM (SRTM DEM)
  endpoint:
    path: /Data/ComplementaryData/Additional.html#shuttle-radar-topography-mission-dem-srtm-dem
    method: GET
    data_selector: high-resolution digital topographic database
    params: {}
- name: lake_ice_extent
  endpoint:
    path: /services/data/lake_ice_extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /services/data/lake_water_quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /services/data/land_surface_temperature
    method: GET
    data_selector: records
- name: snow_water_equivalent
  endpoint:
    path: /services/data/snow_water_equivalent
    method: GET
    data_selector: records
- name: Products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      $filter: ContentDate/Start gt 2019-05-15T00:00:00.000Z and ContentDate/End lt
        2019-05-15T00:05:00.000Z
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params:
      $filter: Collection/Name eq 'SENTINEL-1' and DeletionDate gt 2023-04-01T00:00:00.000Z
        and DeletionDate lt 2023-05-30T23:59:59.999Z
      $orderby: DeletionDate desc
      $count: 'True'
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      $filter: OData.CSC.Intersects(area=geography'SRID=4326;POINT(-0.5319577002158441
        28.65487836189358)') and Collection/Name eq 'SENTINEL-1'
      $top: 20
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params:
      $filter: Collection/Name eq 'SENTINEL-1' and DeletionDate gt 2023-04-01T00:00:00.000Z
        and DeletionDate lt 2023-05-30T23:59:59.999Z
      $orderby: DeletionDate desc
      $count: 'True'
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      $filter: Collection/Name eq 'SENTINEL-1' and Attributes/OData.CSC.StringAttribute/any(att:att/Name
        eq 'datasetIdentifier' and att/OData.CSC.StringAttribute/Value eq 'swi-timeseries_global_12.5km_daily_v3')
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params:
      $filter: Collection/Name eq 'SENTINEL-1' and DeletionDate gt 2023-04-01T00:00:00.000Z
        and DeletionDate lt 2023-05-30T23:59:59.999Z
      $orderby: DeletionDate desc
      $count: 'True'
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      $count: 'true'
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent/
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality/
    method: GET
- name: Temperature and Reflectance
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/
    method: GET
- name: Snow
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/
    method: GET
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/
    method: GET
- name: Products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      count: 'True'
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'SENTINEL-1'
      orderby: ContentDate/Start desc
      top: 10
      expand: Locations
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params:
      filter: Collection/Name eq 'SENTINEL-1' and DeletionDate gt 2023-04-01T00:00:00.000Z
        and DeletionDate lt 2023-05-30T23:59:59.999Z
      orderby: DeletionDate desc
      count: 'true'
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: $value
    params: {}
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params:
      $filter: Collection/Name eq 'SENTINEL-1' and DeletionDate gt 2023-04-01T00:00:00.000Z
        and DeletionDate lt 2023-05-30T23:59:59.999Z
      $orderby: DeletionDate
      $top: 20
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: deleted_products
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: DeletedProducts
  endpoint:
    path: /odata/v1/DeletedProducts
    method: GET
    data_selector: value
    params:
      $filter: Collection/Name eq 'SENTINEL-1' and DeletionDate gt 2023-04-01T00:00:00.000Z
        and DeletionDate lt 2023-05-30T23:59:59.999Z
      $orderby: DeletionDate desc
      $count: 'True'
- name: Products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: attributes
  endpoint:
    path: /odata/v1/Attributes
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: value
    params: {}
- name: water_bodies
  endpoint:
    path: /data/water-bodies
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /data/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /data/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: water_bodies
  endpoint:
    path: /services/data/vXX.X/sobjects/WaterBodies
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /services/data/vXX.X/sobjects/LakeWaterQuality
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /Subscriptions
    method: POST
    data_selector: Id
    params: {}
- name: Notification
  endpoint:
    path: /Notification
    method: GET
    data_selector: '@odata.context'
    params: {}
- name: Notification
  endpoint:
    path: /Notification
    method: GET
    data_selector: value
- name: DeletedProducts
  endpoint:
    path: /DeletedProducts
    method: GET
    data_selector: value
- name: Ack Subscription
  endpoint:
    path: /odata/v1/Subscriptions(subscription_Id)/Ack
    method: POST
    data_selector: AckMessagesNum
    params: {}
- name: Create Subscription
  endpoint:
    path: /odata/v1/Subscriptions
    method: POST
    data_selector: Id
    params: {}
- name: notification
  endpoint:
    path: /Notification
    method: GET
    data_selector: value
    params: {}
- name: products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
    params: {}
- name: notification
  endpoint:
    path: /Notification
    method: GET
    data_selector: value
    params: {}
- name: deleted_products
  endpoint:
    path: /DeletedProducts
    method: GET
    data_selector: value
    params: {}
- name: list_current_subscriptions
  endpoint:
    path: /odata/v1/Subscriptions/Info
    method: GET
    data_selector: records
- name: get_specific_subscription
  endpoint:
    path: /odata/v1/Subscriptions(subscription_id)
    method: GET
    data_selector: records
- name: update_subscription
  endpoint:
    path: /odata/v1/Subscriptions(subscription_id)
    method: PATCH
    data_selector: records
- name: delete_subscription
  endpoint:
    path: /odata/v1/Subscriptions(subscription_id)
    method: DELETE
    data_selector: records
- name: water_bodies
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
    params: {}
- name: land_cover
  endpoint:
    path: /data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
    params: {}
- name: Bursts
  endpoint:
    path: /Bursts
    method: GET
    data_selector: records
    params: {}
- name: bursts
  endpoint:
    path: /odata/v1/Bursts
    method: GET
    data_selector: value
    params:
      $top: 20
      $skip: 0
      $count: false
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
- name: collections
  endpoint:
    path: /resto/api/collections/search.json
    method: GET
    data_selector: features
- name: Sentinel-1 Collection
  endpoint:
    path: /describe.xml
    method: GET
    data_selector: ShortName, Description
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
- name: specific_collection
  endpoint:
    path: /collections/sentinel-2-l2a
    method: GET
    data_selector: collection
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: features
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: items
    params:
      q: grd
- name: Lake Ice Extent
  endpoint:
    path: /lie
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /lwq
    method: GET
    data_selector: records
- name: Land Surface Temperature
  endpoint:
    path: /lst
    method: GET
    data_selector: records
- name: Snow Water Equivalent
  endpoint:
    path: /swe
    method: GET
    data_selector: records
- name: Land Cover
  endpoint:
    path: /lc
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
    params: {}
- name: items
  endpoint:
    path: /search
    method: GET
    data_selector: features
    params: {}
- name: search
  endpoint:
    path: /stac/search
    method: POST
    data_selector: results
- name: eodata
  endpoint:
    path: /
    method: GET
    data_selector: buckets
- name: Lake Ice Extent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: Lake Water Quality
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: Land Surface Temperature
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: Snow Water Equivalent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
    params: {}
- name: Global Dynamic Land Cover
  endpoint:
    path: /APIs/SentinelHub/Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
    params: {}
- name: traces
  endpoint:
    path: /v1/traces/name/{trace_name}
    method: GET
    data_selector: traces
    params: {}
- name: lake_ice_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
    params: {}
- name: snow_cover_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-cover-extent
    method: GET
    data_selector: records
    params: {}
- name: global_dynamic_land_cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
    params: {}
- name: Lake Ice Extent
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: Temperature and Reflectance
  endpoint:
    path: /clms/bio-geophysical-parameters/temperature-and-reflectance
    method: GET
    data_selector: records
- name: Snow
  endpoint:
    path: /clms/bio-geophysical-parameters/snow
    method: GET
    data_selector: records
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: Job Configuration
  endpoint:
    path: /APIs/openEO/job_config.html
    method: GET
- name: land_cover
  endpoint:
    path: /services/data/vXX.X/sobjects/LandCover
    method: GET
    data_selector: records
    params: {}
- name: lake_quality
  endpoint:
    path: /services/data/vXX.X/sobjects/LakeWaterQuality
    method: GET
    data_selector: records
    params: {}
- name: job_configuration
  endpoint:
    path: /api/jobs
    method: POST
    data_selector: data
    params: {}
- name: lake_ice_extent
  endpoint:
    path: /services/data/lake_ice_extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /services/data/lake_water_quality
    method: GET
    data_selector: records
    params: {}
- name: Sentinel-1 GRD
  endpoint:
    path: /APIs/SentinelHub/Data/S1GRD.html
- name: Sentinel-2 L1C
  endpoint:
    path: /APIs/SentinelHub/Data/S2L1C.html
- name: Sentinel-2 L2A
  endpoint:
    path: /APIs/SentinelHub/Data/S2L2A.html
- name: Sentinel-3 OLCI L1B
  endpoint:
    path: /APIs/SentinelHub/Data/S3OLCI.html
- name: Sentinel-3 OLCI L2
  endpoint:
    path: /APIs/SentinelHub/Data/S3OLCIL2.html
- name: Sentinel-3 SLSTR L1B
  endpoint:
    path: /APIs/SentinelHub/Data/S3SLSTR.html
- name: Sentinel-3 SYN L2
  endpoint:
    path: /APIs/SentinelHub/Data/S3SYNL2.html
- name: Sentinel-5P L2
  endpoint:
    path: /APIs/SentinelHub/Data/S5PL2.html
- name: Digital Elevation Model (DEM) Data
  endpoint:
    path: /APIs/SentinelHub/Data/DEM.html
- name: water_bodies
  endpoint:
    path: /data/water-bodies
    method: GET
    data_selector: results
    params: {}
- name: land_cover
  endpoint:
    path: /data/land-cover
    method: GET
    data_selector: results
    params: {}
- name: Lake Ice Extent
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: ''
- name: Lake Water Quality
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: ''
- name: Temperature and Reflectance
  endpoint:
    path: /clms/bio-geophysical-parameters/temperature-and-reflectance
    method: GET
    data_selector: ''
- name: Snow
  endpoint:
    path: /clms/bio-geophysical-parameters/snow
    method: GET
    data_selector: ''
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: ''
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: Land Surface Temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
- name: Snow Water Equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
- name: Global Dynamic Land Cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: Land Surface Temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: Snow Water Equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
    params: {}
- name: Snow Cover Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-cover-extent
    method: GET
    data_selector: records
    params: {}
- name: Global Dynamic Land Cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
    params: {}
- name: lake_ice_extent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: context
    params:
      limit: 5
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: feature_manifest
  endpoint:
    path: /featureManifest
    method: GET
    data_selector: features
- name: execution_database
  endpoint:
    path: /executionDatabase
    method: GET
    data_selector: features
- name: lake_ice_extent
  endpoint:
    path: /data/lakeIceExtent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /data/lakeWaterQuality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /data/landSurfaceTemperature
    method: GET
    data_selector: records
- name: snow_water_equivalent
  endpoint:
    path: /data/snowWaterEquivalent
    method: GET
    data_selector: records
- name: lake_ice_extent
  endpoint:
    path: /data/lake_ice_extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /data/lake_water_quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /data/land_surface_temperature
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent
  endpoint:
    path: /data/snow_water_equivalent
    method: GET
    data_selector: records
    params: {}
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
- name: water_bodies
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
- name: river_and_lake_ice_extent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
- name: snow_water_equivalent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
- name: global_dynamic_land_cover
  endpoint:
    path: /data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
- name: Lake Ice Extent
  endpoint:
    path: /services/data/vXX.X/sobjects/LakeIceExtent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /services/data/vXX.X/sobjects/LakeWaterQuality
    method: GET
    data_selector: records
- name: Land Surface Temperature
  endpoint:
    path: /services/data/vXX.X/sobjects/LandSurfaceTemperature
    method: GET
    data_selector: records
- name: Snow Water Equivalent
  endpoint:
    path: /services/data/vXX.X/sobjects/SnowWaterEquivalent
    method: GET
    data_selector: records
- name: Snow Cover Extent
  endpoint:
    path: /services/data/vXX.X/sobjects/SnowCoverExtent
    method: GET
    data_selector: records
- name: Global Dynamic Land Cover
  endpoint:
    path: /services/data/vXX.X/sobjects/GlobalDynamicLandCover
    method: GET
    data_selector: records
- name: validate
  endpoint:
    path: /validate
    method: POST
- name: result
  endpoint:
    path: /result
    method: POST
- name: capabilities
  endpoint:
    path: /
    method: GET
- name: collections
  endpoint:
    path: /collections
    method: GET
- name: collection_details
  endpoint:
    path: /collections/{collectionId}
    method: GET
- name: service_versions
  endpoint:
    path: /versions
    method: GET
- name: file_formats
  endpoint:
    path: /file_formats
    method: GET
- name: supported_processes
  endpoint:
    path: /processes
    method: GET
- name: account_quotas
  endpoint:
    path: /api/v1/dataimport/accountquotas/{collectionId}
    method: GET
    data_selector: collectionId
- name: search_items
  endpoint:
    path: /search
    method: GET
    data_selector: items
    params:
      collections: sentinel-2-l2a
- name: async_process
  endpoint:
    path: /async/process
    method: POST
    data_selector: results
- name: account_quotas
  endpoint:
    path: /api/v1/dataimport/accountquotas/{collectionId}
    method: GET
    data_selector: collectionId
    params: {}
- name: get_all_tiles
  endpoint:
    path: /get/all/tiles
    method: GET
- name: retrieve_a_single_tile
  endpoint:
    path: /retrieve/single/tile
    method: GET
- name: get_properties_of_all_supported_tiling_grids
  endpoint:
    path: /get/properties/all/tiling/grids
    method: GET
- name: get_properties_of_a_single_tiling_grid
  endpoint:
    path: /get/properties/single/tiling/grid
    method: GET
- name: submit_new_batch_processing_request
  endpoint:
    path: /submit/new/batch/processing/request
    method: POST
- name: query_batch_process_requests
  endpoint:
    path: /query/batch/process/requests
    method: GET
- name: retrieve_a_single_batch_process_task_by_id
  endpoint:
    path: /retrieve/single/batch/process/task/by/id
    method: GET
- name: update_a_batch_process_request
  endpoint:
    path: /update/a/batch/process/request
    method: PUT
- name: request_analysis_of_a_batch_process_request
  endpoint:
    path: /request/analysis/of/a/batch/process/request
    method: GET
- name: start_processing_of_a_batch_process_request
  endpoint:
    path: /start/processing/of/a/batch/process/request
    method: POST
- name: stop_a_batch_process_request
  endpoint:
    path: /stop/a/batch/process/request
    method: POST
- name: submit_statistical_request
  endpoint:
    path: /submit/statistical/request
    method: POST
- name: account_quotas
  endpoint:
    path: /api/v1/dataimport/accountquotas/{collectionId}
    method: GET
    params: {}
- name: collection
  endpoint:
    path: /api/v1/dataimport/accountquotas/{collectionId}
    method: GET
    data_selector: collectionId
    params: {}
- name: tile
  endpoint:
    path: /api/v1/dataimport/accountquotas/{collectionId}/{tileId}
    method: GET
    data_selector: collectionId
    params: {}
- name: account_quotas
  endpoint:
    path: /accountquotas/{collectionId}
    method: GET
    data_selector: records
- name: search_data
  endpoint:
    path: /search
    method: POST
    data_selector: data
- name: create_order
  endpoint:
    path: /order
    method: POST
    data_selector: data
- name: account_quotas
  endpoint:
    path: /api/v1/dataimport/accountquotas/{collectionId}
    method: GET
    data_selector: records
- name: import_quota
  endpoint:
    path: /api/v1/dataimport/accountquotas/{collectionId}
    method: GET
    data_selector: collectionId
- name: Lake Ice Extent
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: Land Surface Temperature
  endpoint:
    path: /clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
- name: Snow Water Equivalent
  endpoint:
    path: /clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
- name: Global Dynamic Land Cover
  endpoint:
    path: /clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
- name: water_bodies
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies
    method: GET
- name: lake_water_quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: land_surface_temperature
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
- name: snow_water_equivalent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
- name: access_token
  endpoint:
    path: /APIs/Token.html
    method: POST
- name: odata
  endpoint:
    path: /APIs/OData.html
    method: GET
- name: opens_search
  endpoint:
    path: /APIs/OpenSearch.html
    method: GET
- name: mystorage
  endpoint:
    path: /mystorage
    method: GET
- name: samples
  endpoint:
    path: /samples
    method: GET
- name: lake_ice_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: snow
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow
    method: GET
    data_selector: records
    params: {}
- name: land_cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
    params: {}
- name: access_token
  endpoint:
    path: /APIs/Token.html
    method: POST
- name: openEO
  endpoint:
    path: /APIs/openEO/openEO.html
    method: GET
- name: lake_ice_extent
  endpoint:
    path: /data/lake-ice-extent
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /data/lake-water-quality
    method: GET
    data_selector: records
- name: organization
  endpoint:
    path: /profile/organization
    method: GET
    data_selector: organization_details
- name: invite_member
  endpoint:
    path: /team/invite
    method: POST
    data_selector: invitation_status
- name: accept_invitation
  endpoint:
    path: /team/accept_invitation
    method: POST
    data_selector: acceptance_status
- name: switch_organization
  endpoint:
    path: /profile/switch_organization
    method: POST
    data_selector: switch_status
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
- name: Lake Ice Extent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: Lake Water Quality
  endpoint:
    path: /data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: Land Surface Temperature
  endpoint:
    path: /data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: Snow Water Equivalent
  endpoint:
    path: /data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
    params: {}
- name: Land Cover
  endpoint:
    path: /data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover
    method: GET
    data_selector: records
    params: {}
- name: Water Bodies
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies
    method: GET
- name: River and Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
- name: Temperature and Reflectance
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance
    method: GET
- name: Snow
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow
    method: GET
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
- name: lake_ice_extent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
    params: {}
- name: snow_cover_extent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/snow/snow-cover-extent
    method: GET
    data_selector: records
    params: {}
- name: land_cover
  endpoint:
    path: /APIs/SentinelHub/Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
    params: {}
- name: Lake Ice Extent
  endpoint:
    path: /services/data/vXX.X/sobjects/LakeIceExtent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /services/data/vXX.X/sobjects/LakeWaterQuality
    method: GET
    data_selector: records
- name: Land Surface Temperature
  endpoint:
    path: /services/data/vXX.X/sobjects/LandSurfaceTemperature
    method: GET
    data_selector: records
- name: Snow Water Equivalent
  endpoint:
    path: /services/data/vXX.X/sobjects/SnowWaterEquivalent
    method: GET
    data_selector: records
- name: Snow Cover Extent
  endpoint:
    path: /services/data/vXX.X/sobjects/SnowCoverExtent
    method: GET
    data_selector: records
- name: Global Dynamic Land Cover
  endpoint:
    path: /services/data/vXX.X/sobjects/GlobalDynamicLandCover
    method: GET
    data_selector: records
- name: lake_ice_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent/
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality/
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature/
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent/
    method: GET
    data_selector: records
    params: {}
- name: snow_cover_extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-cover-extent/
    method: GET
    data_selector: records
    params: {}
- name: land_cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/
    method: GET
    data_selector: records
    params: {}
- name: water_bodies
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies
    method: GET
    data_selector: records
- name: lake_water_quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: land_surface_temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
- name: snow
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow
    method: GET
    data_selector: records
- name: land_cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: lake_ice_extent
  endpoint:
    path: /services/data/v1/lake_ice_extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /services/data/v1/lake_water_quality
    method: GET
    data_selector: records
    params: {}
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent/
    method: GET
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality/
    method: GET
- name: Land Surface Temperature
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature/
    method: GET
- name: Snow Water Equivalent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent/
    method: GET
- name: Global Dynamic Land Cover
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping/global-dynamic-land-cover/
    method: GET
- name: lake_ice_extent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/temperature-and-reflectance/land-surface-temperature
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/snow/snow-water-equivalent
    method: GET
    data_selector: records
    params: {}
- name: snow_cover_extent
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/snow/snow-cover-extent
    method: GET
    data_selector: records
    params: {}
- name: lake_ice_extent
  endpoint:
    path: /path/to/lake_ice_extent
    method: GET
    data_selector: records
    params: {}
- name: lake_water_quality
  endpoint:
    path: /path/to/lake_water_quality
    method: GET
    data_selector: records
    params: {}
- name: land_surface_temperature
  endpoint:
    path: /path/to/land_surface_temperature
    method: GET
    data_selector: records
    params: {}
- name: snow_water_equivalent
  endpoint:
    path: /path/to/snow_water_equivalent
    method: GET
    data_selector: records
    params: {}
- name: snow_cover_extent
  endpoint:
    path: /path/to/snow_cover_extent
    method: GET
    data_selector: records
    params: {}
- name: land_cover
  endpoint:
    path: /path/to/land_cover
    method: GET
    data_selector: records
    params: {}
- name: GDPR
  endpoint:
    path: https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A02016R0679-20160504&qid=1532348683434
    method: GET
- name: Data Governance Act
  endpoint:
    path: https://eur-lex.europa.eu/legal-content/en/TXT/?uri=CELEX%3A32022R0868
    method: GET
- name: Data Act
  endpoint:
    path: http://data.europa.eu/eli/reg/2023/2854
    method: GET
- name: Cloud Computing Policy
  endpoint:
    path: https://digital-strategy.ec.europa.eu/en/policies/cloud-computing
    method: GET
- name: Digital Market Act
  endpoint:
    path: https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A32022R1925&qid=1700125375248
    method: GET
- name: Digital Services Act
  endpoint:
    path: https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A32022R2065&qid=1700125375248
    method: GET
- name: Lake Ice Extent
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /Data/clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /Data/clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /odata/v1/Products
    method: GET
- name: Lake Ice Extent
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent
    method: GET
    data_selector: records
- name: Lake Water Quality
  endpoint:
    path: /clms/bio-geophysical-parameters/water-bodies/lake-water-quality
    method: GET
    data_selector: records
- name: Land Cover and Land Use Mapping
  endpoint:
    path: /clms/land-cover-and-land-use-mapping
    method: GET
    data_selector: records
- name: sentinel1_search
  endpoint:
    path: /stac/collections/SENTINEL-1/items
    method: GET
    data_selector: features
    params:
      ids: S1A_IW_GRDH_1SDV_20240604T110100_20240604T110131_054172_069690_E33E.SAFE
- name: QUICKLOOK
  endpoint:
    path: /odata/v1/Assets(28feb491-5c4f-41d4-8444-1e5d8426c478)/$value
    method: GET
    data_selector: href
    params: {}
- name: PRODUCT
  endpoint:
    path: /odata/v1/Products(521bd8f9-48a5-4e1f-9435-58f97cb64d39)/$value
    method: GET
    data_selector: href
    params: {}
- name: features
  endpoint:
    path: /search.json
    method: GET
    data_selector: features
    params:
      startDate: '2022-05-03T00:00:00Z'
- name: Product Search
  endpoint:
    path: /api/products
    method: GET
    data_selector: records
- name: Data Collections
  endpoint:
    path: /api/collections
    method: GET
    data_selector: collections
- name: LIE 2021-present (raster 500 m), Northern Hemisphere, daily – version 1
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent/lie_northernhemisphere_500m_daily_v1.html
    method: GET
    data_selector: records
    params: {}
- name: LIE 2024-present (raster 250 m), Europe, daily – version 2
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent/lie_europe_250m_daily_v2.html
    method: GET
    data_selector: records
    params: {}
- name: Lake Ice Extent global 500m version 2
  endpoint:
    path: /APIs/SentinelHub/Data/clms/bio-geophysical-parameters/water-bodies/river-and-lake-ice-extent/lie_global_500m_daily_v2.html
    method: GET
    data_selector: records
    params: {}
- name: Products
  endpoint:
    path: /odata/v1/Products
    method: GET
    data_selector: '@odata.context'
    params: {}
- name: Sentinel1
  endpoint:
    path: /resto/api/collections/Sentinel1/search.json
    method: GET
    data_selector: records
    params: {}
- name: SENTINEL-1
  endpoint:
    path: /stac/collections/SENTINEL-1/items
    method: GET
    data_selector: features
    params: {}
- name: QUICKLOOK
  endpoint:
    path: /odata/v1/Assets(28feb491-5c4f-41d4-8444-1e5d8426c478)/$value
    method: GET
    data_selector: QUICKLOOK
    params: {}
- name: PRODUCT
  endpoint:
    path: /odata/v1/Products(521bd8f9-48a5-4e1f-9435-58f97cb64d39)/$value
    method: GET
    data_selector: PRODUCT
    params: {}
- name: Products
  endpoint:
    path: /Products
    method: GET
    data_selector: value
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The workflow based on the reference will identify required Level-0 inputs and produces
  an equivalent of the reference product.
- Access to the API is limited by the Authentication service.
- Only authorized users are allowed to interact with the processing service.
- Uses OAuth2 — requires setup of Keycloak for token generation
- Requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in SentinelHub
- Sentinel-1 RTC (Radiometric Terrain Correction) is compliant with CEOS Analysis
  Ready Data for Land (CARD4L) specifications.
- SAR backscatter computation is automatically applied using the sigma0-ellipsoid
  coefficient.
- API requires setup of connected app in SentinelHub
- Level 2A product provides atmospherically corrected Surface Reflectance images.
- Quarterly Mosaics are generated from three months of Sentinel-2 level 2A.
- S-2 AUX_POEORB currently not available. The backlog will be generated by CPOD, and
  made available on CPODIP, but it will require coordination with ESA/Copernicus Data
  Space Ecosystem.
- Some datasets may have specific access limitations
- 'Processing restrictions in openEO: users are limited to processing or downloading
  only one band at a time.'
- Uses OAuth2 with refresh token — requires setup of connected app in SentinelHub
- API supports multiple datasets for environmental monitoring.
- Rate limiting may apply based on the number of requests.
- The API provides metadata attributes related to CLMS OData.
- The maximum across track angle can be specified in this field.
- Access to SMOS data is possible via API
- Data products are designed for scientific and operational users
- Access to ENVISAT MERIS data is possible via API.
- In order to get access to data at specific processing level as well as for specific
  product types, you are advised to use queries provided in each section.
- Landsat-8 Collection 2 Level-1 products with full worldwide coverage will soon be
  added.
- Uses OAuth2 with client credentials
- Uses OAuth2 for authentication
- Access to this collection is exclusively available through S3 access.
- Requires setup of connected app in API
- Crucial for the search performance is specifying the collection name.
- It is highly recommended to utilize OData Subscriptions for efficient querying.
- Polygon must start and end with the same point.
- Coordinates must be given in EPSG 4326.
- The count option is disabled by default to accelerate query performance.
- Users can access Sentinel-1 (RAW, GRD, SLC) data stored in native format and compressed
  for one month following their publication date within Data Space Catalogue.
- Count option can be used to filter Deleted Products.
- Expand option can be used to see full metadata of results.
- The geometry is validated using the Shapely library, and invalid geometries result
  in an error.
- To ensure efficient and permanent querying of the Copernicus Data Space Ecosystem
  Catalogue, it is highly recommended to utilize OData Subscriptions.
- Uses OData queries for accessing product data
- The count option is disabled by default to accelerate the query performance.
- Expand option allows users to specify the type of information they would like to
  see in detail.
- The geometry is validated using the Shapely library, and invalid geometries results
  in an error.
- Access Token required for API calls
- Filtering by ContentDate/Start is much faster than by ContentDate/End for big collections.
- The default value for Top option is set to 20.
- The default value for Skip option is set to 0.
- To get the exact number of products for a given query, use the count option.
- The product is saved to a file with the '.zip' extension.
- Users can access Sentinel-1 (RAW, GRD, SLC) data stored in native format and compressed
  for one month following their publication date.
- By default, if the orderby option is not used, the results are not ordered.
- The default value for top option is set to 20.
- The default value for skip option is set to 0.
- The expand option allows users to specify the type of information they would like
  to see in detail.
- To access more information, please review Compressed products section within Sentinel-1
  mission description.
- Users can access Sentinel-1 (RAW, GRD, SLC) data stored in native format compressed
  for one month following publication date.
- To accelerate query performance, it is recommended to limit the query by specified
  dates.
- Count option can be used to get the total number of results.
- The default value for top is set to 20.
- The default value for skip is set to 0.
- 'The acceptable arguments for count option: True, true, 1, False, false, 0'
- The additional efficient way to accelerate the query performance is limiting the
  query by acquisition dates.
- Coordinates must be given in EPSG 4326
- The skip option's default value is set to 0.
- The count option lets users get the exact number of products matching the query.
- Don’t use count option if not necessary, it slows down the execution of the request.
- Requires setup of Two-Factor Authentication (2FA) for user registration and authentication
- The maximum queue length is 100 000 notifications.
- The maximum number of running subscriptions (PUSH and PULL) per user is 2.
- The total number of subscriptions (running and paused) cannot exceed 10.
- All Subscription Service endpoints enforce token-based authentication.
- Notifications about newly added, modified or deleted products are automatically
  sent to the user’s endpoint.
- The API supports notifications for product modifications and deletions.
- All notifications must be acknowledged after being read to prevent exceeding the
  queue limit.
- Notifications about newly added, modified or deleted products will be sent automatically.
- Notifications indicate product modifications or deletions.
- Some endpoints may have specific query parameters.
- Default top value is set to 20.
- Default skip value is set to 0.
- Uses OAuth2 for authentication.
- Most queries are case-sensitive.
- The default limit for items returned is set to 20.
- Users can filter items by attributes such as bbox, datetime, and ids.
- Requires registration on dataspace.copernicus.eu for credentials
- Secret Key will be displayed only once
- Some objects like Contact may return nulls in deeply nested fields
- In order to improve the download performance of EO products from the Copernicus
  Data Space Ecosystem platform, below is the recommended configuration of TCP stack
  for a machine with Linux operating system.
- The Traceability service uses X.509 Certificates to sign information sent to the
  API.
- Executing openEO workflows requires user authentication to manage user quotas, resources,
  and credit consumption effectively.
- It is recommended to complete the Copernicus Data Space Ecosystem registration before
  attempting to authenticate.
- Client credentials flow is required for authentication.
- Default settings are subject to change by the backend whenever needed.
- Dependencies must be compatible with the backend’s Python version, which is currently
  3.8.
- Dependencies must be compatible with the backend’s operating system, which is currently
  AlmaLinux 8.
- The backend has a limited set of Python dependencies that are preloaded, and cannot
  be changed, such as numpy.
- Every registered CDSE user is by default has the Copernicus General user type.
- Users can check their current credit balance in the openEO Algorithm Plaza under
  the ‘Billing’ tab.
- Higher quota (credits) is granted for Collaborative Ground Segment users or Copernicus
  Service users based on their specific usage needs.
- Processing larger areas, especially globally, presents significant challenges in
  earth observation.
- A more robust approach for production-grade projects would typically use a database
  or STAC catalogue service to monitor processing.
- User registration and authentication required
- Requires setup of OAuth2 credentials
- Users can request raw satellite data, simple band combinations, calculations of
  remote sensing indices, or advanced processing.
- Asynchronous Processing API is currently in beta release.
- The maximum output image size can not exceed 10000 pixels in any dimension.
- Evalscript can be either sent directly in the request or it can be stored in object
  storage and referenced in an async request.
- The processing is asynchronous, which means that you do not get results in a response
  of your request.
- Only a limited number of async requests can run concurrently for each Sentinel Hub
  user.
- The first request is the slowest while the subsequent requests run faster.
- The cost is the same as with Process API, except that the minimal cost is 10 PU
  per request.
- The BatchV2 API is only available for users with Copernicus Service accounts.
- Data won't be returned immediately but delivered to your specified object storage.
- Make sure that cogOutput=true and that the output format is a image/tiff
- If multi-band output is used in the request, the additionally generated bands will
  be named using a numerical suffix in ascending order
- This API is deprecated and will be removed in future versions. Please migrate to
  the Batch Processing V2 API as soon as possible.
- The Batch Processing API is only available for users with Copernicus Service accounts.
- Requires authentication for API access
- The default value of sampleType is FLOAT32.
- The Statistical API does not automatically exclude the no data pixels from calculating
  the statistics.
- The Batch Statistical API is only available for users with Copernicus Service accounts.
- Stale (inactive) requests will be deleted after a certain period of inactivity,
  depending on their status.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Bring Your Own COG API is only available for users with Copernicus Service accounts.
- Zarr Import API is only available for users with Copernicus Service accounts.
- A configuration instance defines which layers are part of your OGC service, how
  the data shall be processed and visualized for each of these layers.
- Current version of the service is in beta release.
- The service is still in development and the version might change in the future.
- Authentication is done using tokens.
- Service supports OIDC authentication.
- Uses OAuth2 authentication
- The API provides access to various environmental data.
- You need to be registered in Copernicus Data Space Ecosystem.
- User registration and authentication required.
- Each JupyterLab instance includes 10GB of storage provided by CloudFerro’s cloud
  infrastructure.
- The storage area remains intact when the user logs out or when the Jupyter kernel
  shuts down.
- It is preserved for up to 12 days from the last login.
- If no action is taken within this period, the files will be deleted from CloudFerro
  cloud storage after 12 days.
- The Jupyterlab instance remains running as long as there is interaction, and it
  is kept alive for an additional 8 hours after the last activity.
- User registration and authentication is required.
- Requires setup of connected app in Sentinel Hub
- Some fields may return nulls in deeply nested structures
- Requires setup of connected app in Copernicus Data Space Ecosystem
- Rate limiting may apply to API usage.
- Developers who are members of multiple organisations must ensure they are logged
  in to the correct organisation.
- A limitation of executing a service (User Defined Processes) in the Copernicus Data
  Space Ecosystem is that it only works with collections from 2017 onwards.
- Removing a service from the marketplace does not remove it from the orchestrators.
- By default, every published service has a prototype level.
- No added value is associated with services on a prototype or incubating levels.
- Though the required credit for direct download of the output data is two credits
  for all the services, it has a time limitation of 10 seconds to run the entire process.
  Otherwise, the download process will fail.
- API requires authentication configuration
- Some endpoints may have rate limiting
- Don’t switch on Disable OGC requests if you are creating a configuration you want
  to access in QGIS – the plugin is based on OGC requests!
- Uses OAuth2 with refresh token
- Requires setup of authentication credentials
- Some endpoints may have rate limits
- Every user account is set a limited quota to guarantee fair sharing of free tier
  resources within all users of Copernicus Data Space Ecosystem.
- 'The following limitations and quotas are monthly and reset on the first day of
  every month:'
- The total volume of downloads from the Copernicus Data Space Ecosystem for each
  user account is summed up for the last 30 days.
- Once the cumulative transfer for the last 30 days falls below the limit, the transfer
  speed will be restored to its nominal capacity.
- The current setup for downloading Copernicus Data utilizing research network connectivity
  is still in a process of optimisation.
- The GSLB automatically routes users to the foreseen endpoint and is used for failover
  in case of outages.
- User registration and authentication is required to access the API.
- Effective 2 February 2026, the OpenSearch Catalogue API will be decommissioned.
- After 2 February 2026, any requests to access OpenSearch Catalogue API will be rejected.
- Starting from 12 November 2024, the number of skipped results will be limited to
  10,000 items.
- After the change, when the skip value exceeds 10,000, the API will no longer return
  the @odata.nextLink for further pagination.
- After the change, when the '(page - 1) * maxRecords + index - 1' value exceeds 10,000,
  the API will no longer return the 'next' link for further pagination.
- After the change, when the '(page - 1) * limit' value exceeds 10,000, the API will
  no longer return the 'next' link for further pagination.
- We recommend reviewing the upcoming changes to Catalogue OData API described above
  to avoid disruption to your current scripts or apps.
- Datetime precision change for OData, OpenSearch and STAC APIs effective 2 September
  2024.
- The Sentinel-1 mission is the European Radar Observatory for the Copernicus joint
  initiative of the European Commission (EC) and the European Space Agency (ESA).
- We recommend reviewing the upcoming changes to Catalogue OData, OpenSearch and STAC
  API interfaces to avoid disruption to your current scripts or apps.
- Upcoming change to EvictionDate attribute effective July 31, 2024.
- Starting from 27th May 2024, all API requests without a specified timezone will
  be treated by default as datetime provided in UTC format.
- Currently, if a client does not specify a timezone in their date request, it defaults
  to Warsaw local time.
- We kindly ask that you ensure your date requests include the appropriate timezone
  information to prevent any disruptions to your services.
- The new error handling is described below.
- Please note that the dataset parameter will not be supported anymore. Any query
  with the dataset parameter will result in an error.
- 'We kindly remind you that for the status parameter, the only acceptable values
  will be: ONLINE, OFFLINE, ALL. Any other value will result in an error.'
- API requires OAuth2 authentication.
- Check for API limits and response formats.
- Starting from 8 July 2025, users will be obligated to define the SubscriptionType
  field in the request when creating a subscription.
- Starting from 17 March 2025, the format of displaying Attributes with the DateTimeOffset
  type will be changed to ensure uniformity with the ISO 8601.
- After the change, when the '(page - 1) * maxRecords + index - 1' value exceeds 10,000,
  the API will no longer return the 'next' link for further pagination using 'next'
  link.
- After the change, when the '(page - 1) * limit' value exceeds 10,000, the API will
  no longer return the 'next' link for further pagination using 'next' link.
- Review the upcoming changes to Catalogue OData API to avoid disruption to current
  scripts or apps.
- Datetime precision for attributes in OData, OpenSearch and STAC APIs has been extended
  to 6 digits.
- The Sentinel-1 mission includes C-band imaging operating in four exclusive imaging
  modes with different resolution (down to 5 m) and coverage (up to 400 km).
- Uses STAC API for data access
- EvictionDate attribute for products updated for clarity.
- Default timezone for API requests is UTC as of 28th May 2024.
- Any special characters need to be encoded in a specific way for API requests.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth token expiration'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Rate limit exceeded: Reduce frequency of API calls.'
- 'Invalid token: Reauthenticate to obtain a new token.'
- 'Failed to download file. Status code: {response.status_code}'
- '401 Unauthorized: Recheck OAuth token or scopes'
- '401 Unauthorized: Check access token.'
- '400 Bad Request: Check your query syntax.'
- '404 Not Found: Ensure the resource exists before querying.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Subscription with id not found.'
- '200 OK: Acknowledgment successful.'
- '200 OK: Successful request'
- '400: Requests over the limit of 200k will be rejected.'
- '400 Bad Request: Check your request parameters.'
- '404 Not Found: Verify the endpoint and parameters.'
- 'Failed to retrieve access token. Status code: 401'
- 'Failed to create temporary S3 credentials. Status code: 403'
- '401 Unauthorized: Ensure client ID and secret are correct.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Check OAuth token'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check your authentication credentials'
- 'USER_OUT_OF_PROCESSING_UNITS: Processing units are insufficient to continue the
  request.'
- 'REQUEST_LIMIT_EXCEEDED: User has exceeded the allowed number of requests.'
- 'ValidationError: Node save - Save format not set'
- 401 Unauthorized
- 404 Not found
- '404 Not found: Resource does not exist'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify client credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '422 Unprocessable Entity: Input should be less than or equal to 10000'
- '400 Bad Request: The ''(page - 1) * maxRecords + index - 1'' should be less than
  10000.'
- '400 Bad Request: The ''(page - 1) * limit'' should be less than 10000.'
- '404: Unknown collection.'
- '400: Unknown query parameter(s).'
- '400: Validation error.'
- Input should be less than or equal to 2000.
- 'Proper value types for specified attribute query parameters are: ''orbitNumber''-integer'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the requested resource.'
- '429 Too Many Requests: Rate limit exceeded.'
auth_info:
  mentioned_objects:
  - access_token
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - Client Credentials
  - Access Token
  - OIDC
client:
  base_url: https://dataspace.copernicus.eu
  auth:
    type: oauth2
source_metadata: null
