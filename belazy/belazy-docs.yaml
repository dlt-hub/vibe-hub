resources:
- name: projects
  endpoint:
    path: /reference/#tag/Projects
    method: GET
- name: files
  endpoint:
    path: /reference/#tag/Files
    method: POST
- name: vendor_portals
  endpoint:
    path: /reference/#tag/Vendor-Portal-Connections
    method: GET
- name: workspaces
  endpoint:
    path: /reference/#tag/Workspaces/operation/Workspaces_Create
    method: POST
- name: files
  endpoint:
    path: /reference/#tag/Files/operation/Files_Upload
    method: POST
- name: associate file
  endpoint:
    path: /reference/#tag/Workspaces/operation/WorkspaceFiles_Modify
    method: POST
- name: opportunity
  endpoint:
    path: /reference/#tag/Opportunities/operation/Opportunity_Create
    method: POST
- name: Project Extra Data
  endpoint:
    path: /project/extra-data
    method: GET
    data_selector: records
- name: Job Extra Data
  endpoint:
    path: /job/extra-data
    method: GET
    data_selector: records
- name: project_extra_data
  endpoint:
    path: /project_extra_data
    method: GET
    data_selector: records
- name: example_languages
  endpoint:
    path: /example_languages
    method: GET
    data_selector: records
- name: project_extra_data
  endpoint:
    path: /projects/extra
    method: GET
    data_selector: records
- name: job_extra_data
  endpoint:
    path: /jobs/extra
    method: GET
    data_selector: records
- name: project_extra_data
  endpoint:
    path: /project/extra/data
    method: GET
    data_selector: data
    params: {}
- name: global_link
  endpoint:
    path: /global/link
    method: GET
    data_selector: data
    params: {}
- name: job_extra_data
  endpoint:
    path: /job/extra/data
    method: GET
    data_selector: data
    params: {}
- name: smartling
  endpoint:
    path: /smartling
    method: GET
    data_selector: data
    params: {}
- name: crowdin
  endpoint:
    path: /crowdin
    method: GET
    data_selector: data
    params: {}
- name: xtm_linguist
  endpoint:
    path: /xtm/linguist
    method: GET
    data_selector: data
    params: {}
- name: xtm_pm
  endpoint:
    path: /xtm/pm
    method: GET
    data_selector: data
    params: {}
- name: project_extra_data
  endpoint:
    path: /project/extra_data
    method: GET
    data_selector: data
    params: {}
- name: job_extra_data
  endpoint:
    path: /job/extra_data
    method: GET
    data_selector: data
    params: {}
- name: Project Extra Data
  endpoint:
    path: /project/extraData
    method: GET
    data_selector: records
    params: {}
- name: Job Extra Data
  endpoint:
    path: /job/extraData
    method: GET
    data_selector: records
    params: {}
- name: project_extra_data
  endpoint:
    path: /project/extraData
    method: GET
    data_selector: records
- name: job_extra_data
  endpoint:
    path: /job/extraData
    method: GET
    data_selector: records
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
- name: connectorSpecificConfig
  endpoint:
    path: /reference/#operation/Connections_SyncProject
    method: POST
    data_selector: default
    params: {}
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
    params: {}
- name: languages
  endpoint:
    path: /titles
    method: GET
    data_selector: values
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
    params: {}
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
    params: {}
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
    params: {}
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
    params: {}
- name: 1 step workflow
- name: 2 step workflow
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
    params: {}
- name: 1 step workflow
- name: 2 step workflow
- name: service
  endpoint:
    path: /titles
    method: GET
    data_selector: values
- name: type
  endpoint:
    path: /type
    method: GET
    data_selector: values
    params: {}
- name: 'Service #1'
  endpoint:
    path: /services/data/vXX.X/sobjects/Service#1
    method: GET
    data_selector: records
    params: {}
- name: 'Service #2'
  endpoint:
    path: /services/data/vXX.X/sobjects/Service#2
    method: GET
    data_selector: records
    params: {}
- name: 'Service #3'
  endpoint:
    path: /services/data/vXX.X/sobjects/Service#3
    method: GET
    data_selector: records
    params: {}
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
- name: Repetitions
  endpoint:
    path: /Repetitions
    method: GET
- name: 100%
  endpoint:
    path: /100%
    method: GET
- name: 95-99%
  endpoint:
    path: /95-99%
    method: GET
- name: 85-94%
  endpoint:
    path: /85-94%
    method: GET
- name: 75-84%
  endpoint:
    path: /75-84%
    method: GET
- name: 50-74%
  endpoint:
    path: /50-74%
    method: GET
- name: No match
  endpoint:
    path: /No match
    method: GET
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
    params: {}
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: values
notes:
- Include an Authorization HTTP header with the content 'Apikey {your_access_token}'
- You have to include an Authorization HTTP header along with your request, the content
  of which should be `Apikey {your_access_token}`.
- Various project extra data fields available for each job.
- Some objects may return nulls in deeply nested fields
errors:
- 'REQUEST_LIMIT_EXCEEDED: You will see an error message if you reach the limit of
  100 requests per minute.'
- 'REQUEST_LIMIT_EXCEEDED: You will see an error message if you reach this limit.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.belazy.cat/api
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
