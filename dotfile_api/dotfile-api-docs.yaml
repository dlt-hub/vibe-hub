resources:
- name: cases
  endpoint:
    path: /cases
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
- name: individuals
  endpoint:
    path: /individuals
    method: GET
- name: checks
  endpoint:
    path: /checks
    method: GET
- name: documents
  endpoint:
    path: /documents
    method: GET
- name: templates
  endpoint:
    path: /templates
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: aml_check
  endpoint:
    path: /v1/checks/aml
    method: POST
- name: retrieve_aml_check
  endpoint:
    path: /v1/checks/aml/{id}
    method: GET
- name: review_aml_hits
  endpoint:
    path: /v1/checks/aml/{id}/hits/review
    method: PATCH
- name: review_aml_check
  endpoint:
    path: /v1/checks/aml/{id}/review
    method: PATCH
- name: update_aml_check_monitoring
  endpoint:
    path: /v1/checks/aml/{id}/monitoring
    method: PATCH
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: case
  endpoint:
    path: /cases
    method: GET
    data_selector: cases
- name: individual
  endpoint:
    path: /individuals
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: suspended_users
  endpoint:
    path: /suspended_users
    method: GET
    data_selector: users
    params:
      include_suspended: 'true'
- name: custom_email_domains
  endpoint:
    path: /docs/outbound-communications-configurations
    method: GET
- name: automated_communications
  endpoint:
    path: /docs/automated-communications
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Risk Engine
  endpoint:
    path: /risk-engine
    method: GET
    data_selector: records
    params: {}
- name: Tables
  endpoint:
    path: /tables
    method: POST
    data_selector: records
    params: {}
- name: case
  endpoint:
    path: /cases
    method: GET
    data_selector: records
- name: suspended_users
  endpoint:
    path: /suspended_users
    method: GET
    data_selector: users
    params:
      include_suspended: 'true'
- name: Analytics Dashboard
  endpoint:
    path: /analytics/dashboard
    method: GET
    data_selector: data
    params: {}
- name: Delegator individual
  endpoint:
    path: /delegator/individual
    method: GET
    data_selector: data
    params: {}
- name: Kyckr company data
  endpoint:
    path: /company/data/kyckr
    method: GET
    data_selector: data
    params: {}
- name: VideoAuto
  endpoint:
    path: /videoauto
    method: GET
- name: VideoCertified
  endpoint:
    path: /videocertified
    method: GET
- name: VideoExpert
  endpoint:
    path: /videoexpert
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: case_document
  endpoint:
    path: /reference/case-get-document
    method: GET
- name: case_generate_report
  endpoint:
    path: /reference/case-generate-report
    method: GET
- name: activities
  endpoint:
    path: /reference/activity-get-many
    method: GET
    data_selector: activities
    params: {}
- name: case_graph
  endpoint:
    path: /case-graph
    method: GET
    data_selector: entities
- name: custom_properties
  endpoint:
    path: /docs/custom-properties
    method: GET
    data_selector: records
- name: id_document_data_comparison
  endpoint:
    path: /docs/id-document-data-comparison
    method: GET
    data_selector: records
- name: case_last_activity
  endpoint:
    path: /docs/case-last-activity
    method: GET
    data_selector: records
- name: case_report
  endpoint:
    path: /reference/case-generate-report
    method: GET
- name: Retrieve Case Documents
  endpoint:
    path: /reference/case-get-document
    method: GET
- name: Document Review
  endpoint:
    path: /reference/document-review
    method: POST
- name: AML Review
  endpoint:
    path: /reference/aml-review
    method: POST
- name: ID Document Review
  endpoint:
    path: /reference/id-document-review
    method: POST
- name: Identity Verification
  endpoint:
    path: /reference/id-verification-review
    method: POST
- name: AML Review Hits
  endpoint:
    path: /reference/aml-review-hits
    method: POST
- name: Case Tags
  endpoint:
    path: /reference/case-tag-create-case-tags
    method: POST
- name: activities
  endpoint:
    path: /reference/activity-get-many
    method: GET
    data_selector: activities
- name: case_graph
  endpoint:
    path: /reference/cases-guide#case-relation
    method: GET
- name: ID Verification
  endpoint:
    path: /docs/identity-verification
    method: GET
    data_selector: results
    params: {}
- name: identity_verification
  endpoint:
    path: /api/v1/identity-verification
    method: POST
    data_selector: results
- name: identity_document_check
  endpoint:
    path: /api/v1/identity-document-check
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company_monitoring
  endpoint:
    path: /company/monitoring
    method: POST
    data_selector: data
    params: {}
- name: document_analysis
  endpoint:
    path: /reference/document-create-one
    method: GET
    data_selector: records
    params: {}
- name: document_templates
  endpoint:
    path: /document-templates
    method: POST
    data_selector: data
    params: {}
- name: electronic_signature_check
  endpoint:
    path: /electronic-signature-check
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: internal_documents
  endpoint:
    path: /internal/documents
    method: GET
    data_selector: records
    params: {}
- name: client_portal_steps
  endpoint:
    path: /api/v1/client_portal/steps
    method: GET
    data_selector: steps
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: collaboration_settings
  endpoint:
    path: /api/collaboration/settings
    method: GET
    data_selector: settings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: query_parameters
  endpoint:
    path: /[ClientPortal_ID]/forms
    method: GET
    data_selector: parameters
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notification_events
  endpoint:
    path: /settings/communications
    method: GET
- name: Sender Configuration
  endpoint:
    path: /settings/communications/sender-configuration
    method: GET
    data_selector: sender_config
    params: {}
- name: auto_assignment
  endpoint:
    path: /settings/users/auto_assignment_rules
    method: GET
- name: KYC Portal
  endpoint:
    path: /client-portals/kyc
    method: GET
    data_selector: records
- name: KYB Portal
  endpoint:
    path: /client-portals/kyb
    method: GET
    data_selector: records
- name: case_notes
  endpoint:
    path: /case_notes
    method: GET
    data_selector: notes
    params: {}
- name: individual_import
  endpoint:
    path: /import/individuals
    method: POST
    data_selector: records
    params: {}
- name: company_import
  endpoint:
    path: /import/companies
    method: POST
    data_selector: records
    params: {}
- name: case_report
  endpoint:
    path: /reference/case-generate-report
    method: GET
- name: document_export
  endpoint:
    path: /reference/case-get-document
    method: GET
- name: notification_events
  endpoint:
    path: /settings/communications
    method: GET
- name: reminders
  endpoint:
    path: /settings/communications/reminders
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: case_report
  endpoint:
    path: /reference/case-generate-report
    method: GET
    data_selector: case_report_data
- name: document_export
  endpoint:
    path: /reference/case-get-document
    method: GET
    data_selector: document_export_data
- name: Plan Details
  endpoint:
    path: /docs/billing/plan-details
    method: GET
    data_selector: records
- name: Ongoing Consumption
  endpoint:
    path: /docs/billing/ongoing-consumption
    method: GET
    data_selector: records
- name: Next Billing Date
  endpoint:
    path: /docs/billing/next-billing-date
    method: GET
    data_selector: records
- name: Invoice History
  endpoint:
    path: /docs/billing/invoice-history
    method: GET
    data_selector: records
- name: Payment Method
  endpoint:
    path: /docs/billing/payment-method
    method: GET
    data_selector: records
- name: Billing Address
  endpoint:
    path: /docs/billing/billing-address
    method: GET
    data_selector: records
- name: Billing Contact
  endpoint:
    path: /docs/billing/billing-contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    data_selector: records
- name: checks
  endpoint:
    path: /checks
    method: GET
    data_selector: records
- name: case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: create_case
  endpoint:
    path: /case-create-one
    method: POST
- name: company_search
  endpoint:
    path: /company-data-search
    method: GET
- name: fetch_company
  endpoint:
    path: /company-data-fetch
    method: GET
- name: create_company
  endpoint:
    path: /companies-guide
    method: POST
- name: create_individual
  endpoint:
    path: /individuals-guide
    method: POST
- name: check_results
  endpoint:
    path: /checks-guide
    method: GET
- name: cases
  endpoint:
    path: /reference/case-create-one
    method: POST
- name: individuals
  endpoint:
    path: /reference/individual-create-one
    method: POST
- name: checks
  endpoint:
    path: /reference/checks
    method: POST
- name: case_review
  endpoint:
    path: /reference/case-review-create-one
    method: POST
- name: approve_reject_case
  endpoint:
    path: /reference/case-approve-reject
    method: POST
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: logs
  endpoint:
    path: /webhooks/logs
    method: GET
    data_selector: logs
    params: {}
- name: cases
  endpoint:
    path: /v1/cases
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /v1/companies
    method: GET
    data_selector: records
- name: individuals
  endpoint:
    path: /v1/individuals
    method: GET
    data_selector: records
- name: checks
  endpoint:
    path: /v1/checks
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /v1/checks/document
    method: POST
    data_selector: records
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    data_selector: records
- name: ping
  endpoint:
    path: /v1/ping
    method: GET
- name: case
  endpoint:
    path: /cases
    method: GET
    data_selector: cases
- name: case_review
  endpoint:
    path: /case/review
    method: POST
    data_selector: review
- name: case_relation
  endpoint:
    path: /case/relation
    method: POST
    data_selector: relation
- name: company
  endpoint:
    path: /companies
    method: POST
- name: individual
  endpoint:
    path: /individuals
    method: POST
- name: relation
  endpoint:
    path: /case-relation-create-one
    method: POST
- name: create_case
  endpoint:
    path: /case-create-one
    method: POST
- name: company_search
  endpoint:
    path: /company-data-search
    method: GET
- name: fetch_company
  endpoint:
    path: /company-data-fetch
    method: GET
- name: create_company
  endpoint:
    path: /companies-guide
    method: POST
- name: create_individual
  endpoint:
    path: /individuals-guide
    method: POST
- name: cases
  endpoint:
    path: /v1/cases
    method: GET
    data_selector: records
    params:
      limit: 20
- name: case
  endpoint:
    path: /reference/case-create-one
    method: POST
- name: individual
  endpoint:
    path: /reference/individual-create-one
    method: POST
- name: check
  endpoint:
    path: /reference/check-create-one
    method: POST
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: checks
  endpoint:
    path: /v1/checks
    method: GET
    data_selector: records
    params: {}
- name: document_check
  endpoint:
    path: /v1/checks/document
    method: POST
    data_selector: check
    params: {}
- name: custom_document_types
  endpoint:
    path: /v1/custom_document_types
    method: GET
    data_selector: types
    params: {}
- name: document_types
  endpoint:
    path: /v1/document_types
    method: GET
    data_selector: types
    params: {}
- name: create_case
  endpoint:
    path: /v1/cases
    method: POST
- name: cases
  endpoint:
    path: /cases
    method: POST
    data_selector: response
    params: {}
- name: cases
  endpoint:
    path: /reference/case-get-many
    method: GET
- name: companies
  endpoint:
    path: /reference/company-get-many
    method: GET
- name: individuals
  endpoint:
    path: /reference/individual-get-many
    method: GET
- name: ping
  endpoint:
    path: /v1/ping
    method: GET
- name: cases
  endpoint:
    path: /v1/cases/id
    method: GET
    params:
      include_not_relevant: 'false'
      exclude_internal_checks: 'false'
- name: cases
  endpoint:
    path: /v1/cases/{id}
    method: PATCH
    data_selector: null
- name: case
  endpoint:
    path: /case
    method: GET
    data_selector: records
    params: {}
- name: create_case
  endpoint:
    path: /case/create
    method: POST
    data_selector: record
    params: {}
- name: update_case
  endpoint:
    path: /case/update
    method: PATCH
    data_selector: record
    params: {}
- name: delete_case
  endpoint:
    path: /case/delete
    method: DELETE
    data_selector: record
    params: {}
- name: retrieve_case_notes
  endpoint:
    path: /case/notes
    method: GET
    data_selector: records
    params: {}
- name: retrieve_case_documents
  endpoint:
    path: /case/documents
    method: GET
    data_selector: records
    params: {}
- name: delete_case
  endpoint:
    path: /v1/cases/{id}
    method: DELETE
- name: company
  endpoint:
    path: /companies
    method: POST
- name: individual
  endpoint:
    path: /individuals
    method: POST
- name: relation
  endpoint:
    path: /case-relation-create-one
    method: POST
- name: update_relation
  endpoint:
    path: /case-relation-update-one
    method: PATCH
- name: delete_relation
  endpoint:
    path: /case-relation-delete-one
    method: DEL
- name: case_notes
  endpoint:
    path: /v1/cases/{id}/notes
    method: GET
    data_selector: notes
    params:
      created_at: ''
      updated_at: ''
      sort: created_at
      page: 1
      limit: 20
- name: cases
  endpoint:
    path: /v1/cases
    method: GET
    data_selector: records
    params:
      limit: 20
- name: notes
  endpoint:
    path: /v1/cases/id/notes
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: case_documents
  endpoint:
    path: /v1/cases/{id}/documents
    method: GET
    data_selector: documents
    params: {}
- name: create_case
  endpoint:
    path: /v1/cases
    method: POST
- name: cases
  endpoint:
    path: /cases/id/documents
    method: GET
    data_selector: data
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: cases
- name: case
  endpoint:
    path: /v1/cases/{id}
    method: GET
    data_selector: case
    params: {}
- name: cases
  endpoint:
    path: /v1/cases/id
    method: GET
    params:
      include_not_relevant: 'false'
      exclude_internal_checks: 'false'
- name: automatic_risk
  endpoint:
    path: /v1/cases/{id}/risks
    method: POST
- name: risk
  endpoint:
    path: /cases/id/risks
    method: POST
    data_selector: object
- name: case
  endpoint:
    path: /reference/cases
    method: GET
- name: company_data
  endpoint:
    path: /reference/company-data
    method: GET
- name: individual
  endpoint:
    path: /reference/individuals
    method: GET
- name: check
  endpoint:
    path: /reference/checks
    method: GET
- name: document
  endpoint:
    path: /reference/document
    method: GET
- name: tag
  endpoint:
    path: /reference/tags
    method: GET
- name: file
  endpoint:
    path: /reference/files
    method: GET
- name: template
  endpoint:
    path: /reference/templates
    method: GET
- name: client_portal
  endpoint:
    path: /reference/client-portal
    method: GET
- name: user
  endpoint:
    path: /reference/users
    method: GET
- name: webhook
  endpoint:
    path: /reference/webhooks
    method: GET
- name: create_relation
  endpoint:
    path: /v1/cases/{caseId}/relations
    method: POST
- name: update_case
  endpoint:
    path: /v1/cases/{id}
    method: PATCH
- name: update_relation
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: PATCH
- name: case
  endpoint:
    path: /v1/cases/{id}
    method: DELETE
- name: delete_relation
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: DELETE
- name: case_notes
  endpoint:
    path: /v1/cases/{id}/notes
    method: GET
    data_selector: notes
    params:
      created_at: created_at.{operator}
      updated_at: updated_at.{operator}
      sort: created_at
      page: 1
      limit: 20
- name: countries
  endpoint:
    path: /company-data-countries
    method: GET
    data_selector: countries
    params: {}
- name: company_search
  endpoint:
    path: /company-data-search
    method: GET
    data_selector: companies
    params: {}
- name: company_data
  endpoint:
    path: /company-data-fetch
    method: GET
    data_selector: company_data
    params: {}
- name: available_documents
  endpoint:
    path: /company-data-get-available-documents
    method: GET
    data_selector: documents
    params: {}
- name: document_order
  endpoint:
    path: /company-data-document-order-create-one
    method: POST
    data_selector: order_response
    params: {}
- name: notes
  endpoint:
    path: /cases/id/notes
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: countries
  endpoint:
    path: /company-data/countries
    method: GET
    data_selector: countries
    params: {}
- name: cases
  endpoint:
    path: /cases/id/documents
    method: GET
- name: countries
  endpoint:
    path: /company-data/countries
    method: GET
    data_selector: data
- name: entity_legal_forms
  endpoint:
    path: /v1/company-data/entity-legal-forms
    method: GET
    data_selector: records
    params: {}
- name: case_review
  endpoint:
    path: /v1/cases/{id}/reviews
    method: POST
- name: entity_legal_forms
  endpoint:
    path: /company-data/entity-legal-forms
    method: GET
    data_selector: data
- name: case_review
  endpoint:
    path: /cases/id/reviews
    method: POST
    data_selector: object
    params: {}
- name: search_companies
  endpoint:
    path: /v1/company-data/search
    method: GET
    data_selector: companies
    params:
      country: required
      name: ''
      registration_number: ''
- name: automatic_risk
  endpoint:
    path: /v1/cases/{id}/risks
    method: POST
- name: company_data_search
  endpoint:
    path: /company-data/search
    method: GET
    data_selector: data
- name: fetch_company_data
  endpoint:
    path: /company-data/fetch
    method: GET
    data_selector: data
- name: risk
  endpoint:
    path: /cases/id/risks
    method: POST
    data_selector: object
    params: {}
- name: company_data
  endpoint:
    path: /company-data/fetch/{search_ref}
    method: GET
- name: company_data
  endpoint:
    path: /v1/company-data/fetch/search_ref
    method: GET
    data_selector: object
    params: {}
- name: create_relation
  endpoint:
    path: /v1/cases/{caseId}/relations
    method: POST
- name: available_documents
  endpoint:
    path: /v1/company-data/available-documents
    method: GET
    params:
      company_id: ''
      country: ''
      registration_number: ''
- name: update_relation
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: PATCH
- name: delete_relation
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: DELETE
- name: document_orders
  endpoint:
    path: /company-data/document-orders
    method: POST
- name: available_documents
  endpoint:
    path: /company-data/get-available-documents
    method: GET
- name: countries
  endpoint:
    path: /company-data-countries
    method: GET
- name: company_search
  endpoint:
    path: /company-data-search
    method: GET
- name: company_data
  endpoint:
    path: /company-data-fetch
    method: GET
- name: available_documents
  endpoint:
    path: /company-data-get-available-documents
    method: GET
- name: document_order
  endpoint:
    path: /company-data-document-order-create-one
    method: POST
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
    params:
      sort: created_at
      page: 1
      limit: 20
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: countries
  endpoint:
    path: /company-data/countries
    method: GET
    data_selector: countries
    params: {}
- name: countries
  endpoint:
    path: /company-data/countries
    method: GET
    data_selector: data
    params:
      include_none: 'false'
- name: create_company
  endpoint:
    path: /v1/companies
    method: POST
- name: entity_legal_forms
  endpoint:
    path: /v1/company-data/entity-legal-forms
    method: GET
    data_selector: records
    params: {}
- name: entity_legal_forms
  endpoint:
    path: /entity-legal-forms
    method: GET
    data_selector: data
    params: {}
- name: company
  endpoint:
    path: /v1/companies/{id}
    method: GET
    params:
      exclude_internal_checks: 'false'
- name: search_companies
  endpoint:
    path: /v1/company-data/search
    method: GET
    data_selector: companies
    params:
      country: ISO 3166-1 alpha-2 country code
- name: companies
  endpoint:
    path: /companies/id
    method: GET
    params:
      exclude_internal_checks: 'false'
- name: company_data_search
  endpoint:
    path: /company-data/search
    method: GET
    data_selector: data
- name: update_company
  endpoint:
    path: /v1/companies/{id}
    method: PATCH
- name: company_data
  endpoint:
    path: /company-data/fetch/{search_ref}
    method: GET
- name: company_vendor_data
  endpoint:
    path: /v1/companies/{id}/vendor-data
    method: GET
    data_selector: vendor_data
    params:
      id: uuid
      name: string
      fetched_at: string
      sort: string
      page: number
      limit: number
- name: company_data_search
  endpoint:
    path: /v1/company-data/fetch/search_ref
    method: GET
    data_selector: object
    params: {}
- name: available_documents
  endpoint:
    path: /v1/company-data/available-documents
    method: GET
    params:
      company_id: ''
      country: ''
      registration_number: ''
- name: vendor_data
  endpoint:
    path: /companies/id/vendor-data
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: document_order
  endpoint:
    path: /company-data/document-orders
    method: POST
- name: set_company_relevance
  endpoint:
    path: /v1/companies/{id}/set-relevant
    method: POST
- name: document_order
  endpoint:
    path: /company-data/document-orders
    method: POST
- name: available_documents
  endpoint:
    path: /company-data/get-available-documents
    method: GET
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      page: 1
      limit: 20
- name: individuals
  endpoint:
    path: /v1/individuals
    method: GET
    data_selector: records
    params:
      sort: created_at
      page: 1
      limit: 20
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    params:
      sort: created_at
      page: 1
      limit: 20
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: individual
  endpoint:
    path: /v1/individuals
    method: POST
- name: company
  endpoint:
    path: /v1/companies
    method: POST
- name: company
  endpoint:
    path: /v1/companies/{id}
    method: GET
    data_selector: company
    params:
      exclude_internal_checks: 'false'
- name: individual
  endpoint:
    path: /v1/individuals/{id}
    method: GET
    data_selector: individual
    params:
      exclude_internal_checks: 'false'
- name: company
  endpoint:
    path: /companies/id
    method: GET
    data_selector: object
- name: individual
  endpoint:
    path: /individuals/id
    method: GET
- name: update_company
  endpoint:
    path: /v1/companies/{id}
    method: PATCH
- name: individual
  endpoint:
    path: /v1/individuals/{id}
    method: PATCH
- name: individual_relevance
  endpoint:
    path: /v1/individuals/{id}/set-relevant
    method: POST
- name: company_vendor_data
  endpoint:
    path: /v1/companies/{id}/vendor-data
    method: GET
    data_selector: vendor_data
    params:
      id: uuid
      name: string
      fetched_at: string
      sort: string
      page: number
      limit: number
- name: checks
  endpoint:
    path: /reference/check-get-many
    method: GET
    data_selector: records
    params: {}
- name: company_vendor_data
  endpoint:
    path: /companies/id/vendor-data
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: checks
  endpoint:
    path: /v1/checks
    method: GET
    data_selector: records
    params: {}
- name: set_company_relevance
  endpoint:
    path: /v1/companies/{id}/set-relevant
    method: POST
- name: company_vendor_data
  endpoint:
    path: /companies/id/set-relevant
    method: POST
    data_selector: null
    params: {}
- name: checks
  endpoint:
    path: /checks
    method: GET
    data_selector: data
    params:
      sort: updated_at
      page: 1
      limit: 20
- name: individual
  endpoint:
    path: /individuals
    method: GET
    data_selector: records
    params: {}
- name: company_monitoring_check
  endpoint:
    path: /v1/checks/company-monitoring/{id}
    method: GET
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: company_monitoring
  endpoint:
    path: /checks/company-monitoring/id
    method: GET
- name: individual
  endpoint:
    path: /v1/individuals
    method: POST
- name: individual
  endpoint:
    path: /v1/individuals/{id}
    method: GET
    data_selector: ''
    params:
      exclude_internal_checks: 'false'
- name: electronic_signature
  endpoint:
    path: /checks/electronic_signature
    method: POST
    data_selector: result
    params: {}
- name: individual
  endpoint:
    path: /individuals/id
    method: GET
    params:
      exclude_internal_checks: 'false'
- name: electronic_signature_check
  endpoint:
    path: /v1/checks/electronic_signature/{id}
    method: GET
- name: individual
  endpoint:
    path: /v1/individuals/{id}
    method: PATCH
- name: electronic_signature
  endpoint:
    path: /checks/electronic_signature/id
    method: GET
- name: electronic_signature_check
  endpoint:
    path: /v1/checks/electronic_signature/{id}/review
    method: PATCH
- name: set_individual_relevance
  endpoint:
    path: /v1/individuals/{id}/set-relevant
    method: POST
- name: electronic_signature_check
  endpoint:
    path: /v1/checks/electronic_signature
    method: GET
    data_selector: object
- name: ID Document check
  endpoint:
    path: /id-document-checks-guide
    method: POST
    data_selector: results
    params: {}
- name: Review ID Document check
  endpoint:
    path: /id-document-review
    method: PATCH
    data_selector: results
    params: {}
- name: checks
  endpoint:
    path: /v1/checks
    method: GET
    data_selector: records
    params: {}
- name: checks
  endpoint:
    path: /checks
    method: GET
    data_selector: data
    params:
      sort: updated_at
      page: 1
      limit: 20
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document
    method: POST
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document
    method: POST
    data_selector: data
- name: company_monitoring_check
  endpoint:
    path: /v1/checks/company-monitoring/{id}
    method: GET
- name: company_monitoring
  endpoint:
    path: /checks/company-monitoring/id
    method: GET
    data_selector: object
- name: id_document_check
  endpoint:
    path: /checks/id_document/{id}
    method: GET
    data_selector: object
    params: {}
- name: electronic_signature_check
  endpoint:
    path: /v1/checks/electronic_signature
    method: POST
- name: add_files
  endpoint:
    path: /v1/checks/id_document/{id}/add_files
    method: POST
- name: id_document_check
  endpoint:
    path: /checks/id_document
    method: POST
- name: electronic_signature
  endpoint:
    path: /v1/checks/electronic_signature
    method: POST
    data_selector: object
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document/{id}/review
    method: PATCH
- name: electronic_signature_check
  endpoint:
    path: /v1/checks/electronic_signature/{id}
    method: GET
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document/{id}
    method: GET
    data_selector: object
    params: {}
- name: electronic_signature_check
  endpoint:
    path: /checks/electronic_signature/id
    method: GET
- name: id_verification_check
  endpoint:
    path: /id-verification-checks
    method: POST
    data_selector: check_results
- name: electronic_signature_review
  endpoint:
    path: /v1/checks/electronic_signature/{id}/review
    method: PATCH
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: check
  endpoint:
    path: /checks
    method: GET
- name: retrieve_electronic_signature_check
  endpoint:
    path: /v1/checks/electronic_signature/id/review
    method: PATCH
    data_selector: object
    params: {}
- name: ID Verification check
  endpoint:
    path: /v1/checks/id_verification
    method: POST
- name: id_document_check
  endpoint:
    path: /id-document-checks
    method: POST
    data_selector: result
- name: review_id_document_check
  endpoint:
    path: /id-document-review
    method: PATCH
    data_selector: result
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification
    method: POST
    data_selector: object
    params: {}
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document
    method: POST
- name: id_verification
  endpoint:
    path: /checks/id_verification/id
    method: GET
    data_selector: object
    params: {}
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document
    method: POST
    data_selector: data
    params: {}
- name: ID Verification check
  endpoint:
    path: /v1/checks/id_verification/{id}/review
    method: PATCH
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification
    method: GET
    data_selector: object
- name: id_document_check
  endpoint:
    path: /checks/id_document/id
    method: GET
    data_selector: result
    params: {}
- name: id_verification_refresh_url
  endpoint:
    path: /v1/checks/id_verification/{id}/refresh_url
    method: POST
- name: add_files
  endpoint:
    path: /v1/checks/id_document/{id}/add_files
    method: POST
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification
    method: GET
    data_selector: object
    params: {}
- name: id_document_check
  endpoint:
    path: /checks/id_document
    method: POST
    data_selector: result
    params: {}
- name: AML check
  endpoint:
    path: /aml-create-one
    method: POST
    data_selector: records
- name: Review AML check
  endpoint:
    path: /aml-review
    method: POST
    data_selector: review_result
- name: id_document_check_review
  endpoint:
    path: /v1/checks/id_document/{id}/review
    method: PATCH
- name: aml_check
  endpoint:
    path: /v1/checks/aml
    method: POST
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document
    method: GET
    data_selector: object
    params: {}
- name: ID Verification check
  endpoint:
    path: /id-verification-checks
    method: POST
    data_selector: results
- name: aml_check
  endpoint:
    path: /checks/aml
    method: POST
    data_selector: object
    params: {}
- name: webhook_events
  endpoint:
    path: /webhooks
    method: GET
- name: id_document_check
  endpoint:
    path: /id-document-check
    method: POST
- name: id_verification_check
  endpoint:
    path: /id-verification-check
    method: POST
- name: aml_check
  endpoint:
    path: /v1/checks/aml/{id}
    method: GET
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification
    method: POST
- name: aml_check
  endpoint:
    path: /checks/aml/id
    method: GET
    data_selector: object
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification
    method: POST
    data_selector: object
- name: aml_review_hits
  endpoint:
    path: /v1/checks/aml/{id}/hits/review
    method: PATCH
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification/{id}
    method: GET
- name: id_verification_check
  endpoint:
    path: /checks/id_verification/id
    method: GET
- name: aml_check
  endpoint:
    path: /checks/aml
    method: GET
    data_selector: object
    params: {}
- name: id_verification_check_review
  endpoint:
    path: /v1/checks/id_verification/{id}/review
    method: PATCH
- name: aml_check_review
  endpoint:
    path: /v1/checks/aml/{id}/review
    method: PATCH
- name: id_verification_check
  endpoint:
    path: /checks/id_verification
    method: GET
    data_selector: result
    params: {}
- name: aml_check
  endpoint:
    path: /v1/checks/aml/id/review
    method: PATCH
    data_selector: result
    params: {}
- name: id_verification_refresh_url
  endpoint:
    path: /v1/checks/id_verification/{id}/refresh_url
    method: POST
- name: AML check monitoring
  endpoint:
    path: /v1/checks/aml/{id}/monitoring
    method: PATCH
- name: id_verification_check
  endpoint:
    path: /checks/id_verification
    method: POST
- name: aml_check
  endpoint:
    path: /aml-create-one
    method: POST
    data_selector: records
    params: {}
- name: document_check
  endpoint:
    path: /document-checks
    method: POST
    data_selector: check
    params: {}
- name: custom_document_types
  endpoint:
    path: /custom-document/get-many
    method: GET
    data_selector: custom_documents
    params: {}
- name: review_aml_check
  endpoint:
    path: /aml-review
    method: POST
    data_selector: check_data
    params: {}
- name: aml_check
  endpoint:
    path: /v1/checks/aml
    method: POST
- name: review_check_result
  endpoint:
    path: /document-review
    method: PATCH
    data_selector: action
    params: {}
- name: document_check
  endpoint:
    path: /checks/document
    method: POST
    data_selector: data
    params: {}
- name: aml_check
  endpoint:
    path: /v1/checks/aml
    method: POST
    data_selector: object
    params: {}
- name: document_check_add_files
  endpoint:
    path: /v1/checks/document/{id}/add_files
    method: POST
- name: aml_check
  endpoint:
    path: /v1/checks/aml/{id}
    method: GET
- name: document_check
  endpoint:
    path: /v1/checks/document
    method: POST
    data_selector: object
    params: {}
- name: aml_check
  endpoint:
    path: /v1/checks/aml/id
    method: GET
    data_selector: object
- name: aml_review_hits
  endpoint:
    path: /v1/checks/aml/{id}/hits/review
    method: PATCH
- name: force_review
  endpoint:
    path: /v1/checks/document/{id}/force_review
    method: POST
- name: aml_check_review
  endpoint:
    path: /v1/checks/aml/{id}/review
    method: PATCH
- name: document_check
  endpoint:
    path: /checks/document
    method: GET
    data_selector: data
    params: {}
- name: aml_check
  endpoint:
    path: /checks/aml/{id}
    method: PATCH
    data_selector: data
- name: document_check
  endpoint:
    path: /v1/checks/document/{id}/review
    method: PATCH
- name: update_aml_check_monitoring
  endpoint:
    path: /v1/checks/aml/{id}/monitoring
    method: PATCH
- name: document_check
  endpoint:
    path: /v1/checks/document
    method: GET
    data_selector: result
    params: {}
- name: aml_check
  endpoint:
    path: /v1/checks/aml
    method: GET
    data_selector: results
- name: custom_document_types
  endpoint:
    path: /v1/custom_document_types
    method: GET
    params:
      include_archived: false
      sort: created_at.desc
      page: 1
      limit: 20
- name: document_check
  endpoint:
    path: /document-checks
    method: POST
    data_selector: data
    params: {}
- name: document_types
  endpoint:
    path: /custom-document-get-many
    method: GET
    data_selector: document_types
    params: {}
- name: custom_document_types
  endpoint:
    path: /custom_document_types
    method: GET
    data_selector: data
    params:
      sort: created_at.desc
      page: 1
      limit: 20
- name: review_document_check
  endpoint:
    path: /document-review
    method: PATCH
    data_selector: review_check_result
    params: {}
- name: create_document_check
  endpoint:
    path: /document-create-one
    method: POST
    data_selector: create_check_response
    params: {}
- name: document_types
  endpoint:
    path: /v1/document_types
    method: GET
    data_selector: records
    params: {}
- name: document_check
  endpoint:
    path: /checks/document
    method: POST
    data_selector: settings
    params: {}
- name: document_types
  endpoint:
    path: /v1/document_types
    method: GET
    data_selector: data
- name: add_files
  endpoint:
    path: /v1/checks/document/{id}/add_files
    method: POST
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation
    method: POST
- name: document_check
  endpoint:
    path: /v1/checks/document
    method: POST
    data_selector: object
    params: {}
- name: online_reputation_check
  endpoint:
    path: /checks/online_reputation
    method: POST
    data_selector: object
- name: document_check
  endpoint:
    path: /v1/checks/document/{id}
    method: GET
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation/{id}
    method: GET
- name: document_check
  endpoint:
    path: /checks/document
    method: GET
- name: force_review
  endpoint:
    path: /v1/checks/document/{id}/force_review
    method: POST
- name: online_reputation
  endpoint:
    path: /checks/online_reputation/id
    method: GET
    data_selector: result
    params: {}
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation/{id}/review
    method: PATCH
- name: document_check
  endpoint:
    path: /checks/document
    method: GET
    data_selector: data
    params: {}
- name: online_reputation
  endpoint:
    path: /checks/online_reputation/id/review
    method: PATCH
    data_selector: data
    params: {}
- name: note
  endpoint:
    path: /v1/notes
    method: POST
- name: document_check_review
  endpoint:
    path: /v1/checks/document/{id}/review
    method: PATCH
- name: note
  endpoint:
    path: /v1/notes
    method: POST
    data_selector: object
    params: {}
- name: document_check
  endpoint:
    path: /v1/checks/document
    method: PATCH
    data_selector: result
    params: {}
- name: note_comment
  endpoint:
    path: /v1/notes/{id}/comments
    method: POST
- name: custom_document_types
  endpoint:
    path: /v1/custom_document_types
    method: GET
    params:
      include_archived: false
      sort: created_at.desc
      page: 1
      limit: 20
- name: custom_document_types
  endpoint:
    path: /v1/custom_document_types
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: activities
    params:
      case_id: ''
      individual_id: ''
      company_id: ''
      type: ''
      author_id: ''
      sort: created_at
      page: 1
      limit: 20
- name: document_types
  endpoint:
    path: /v1/document_types
    method: GET
    data_selector: document_types
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: document_types
  endpoint:
    path: /document_types
    method: GET
    data_selector: data
    params:
      sort: created_at.desc
      page: 1
      limit: 20
- name: tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: POST
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation
    method: POST
    data_selector: ''
- name: case_tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: GET
    data_selector: tags
    params: {}
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation
    method: POST
    data_selector: object
    params: {}
- name: delete_case_tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: DELETE
    data_selector: tags
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation/{id}
    method: GET
- name: online_reputation_check
  endpoint:
    path: /checks/online_reputation/id
    method: GET
    data_selector: object
    params: {}
- name: tags
  endpoint:
    path: /v1/tags
    method: GET
    data_selector: tags
    params:
      page: 1
      limit: 20
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation/{id}/review
    method: PATCH
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: online_reputation
  endpoint:
    path: /v1/checks/online_reputation
    method: GET
    data_selector: object
    params: {}
- name: review_online_reputation
  endpoint:
    path: /v1/checks/online_reputation/id/review
    method: PATCH
    data_selector: object
    params: {}
- name: tag
  endpoint:
    path: /tags
    method: POST
    data_selector: object
    params: {}
- name: tag
  endpoint:
    path: /v1/tags/{id}
    method: GET
    data_selector: object
- name: note
  endpoint:
    path: /v1/notes
    method: POST
    data_selector: note
    params:
      case_id: uuid
      content: string
- name: tags
  endpoint:
    path: /v1/tags/{id}
    method: PATCH
    data_selector: object
- name: notes
  endpoint:
    path: /v1/notes
    method: POST
    data_selector: object
    params: {}
- name: files
  endpoint:
    path: /v1/files
    method: GET
- name: upload_file
  endpoint:
    path: /file-upload-file
    method: POST
- name: download_file
  endpoint:
    path: /v1/files/{file.id}
    method: GET
- name: activities
  endpoint:
    path: /v1/activities
    method: GET
    data_selector: activities
    params:
      case_id: ''
      individual_id: ''
      company_id: ''
      type: ''
      author_id: ''
      sort: created_at
      page: 1
      limit: 20
- name: Upload a file
  endpoint:
    path: /file-upload-file
    method: POST
- name: Download a File
  endpoint:
    path: /file-get-file
    method: GET
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: upload_file
  endpoint:
    path: /v1/files/upload
    method: POST
- name: case_tag
  endpoint:
    path: /v1/cases/{id}/tags
    method: POST
- name: case_tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: GET
    data_selector: tags
- name: file
  endpoint:
    path: /files/{id}
    method: GET
    data_selector: file
- name: delete_case_tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: DELETE
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
- name: run_template
  endpoint:
    path: /templates/run
    method: POST
    data_selector: result
- name: tags
  endpoint:
    path: /v1/tags
    method: GET
    data_selector: tags
    params:
      page: 1
      limit: 20
- name: templates
  endpoint:
    path: /v1/templates
    method: GET
    data_selector: results
    params:
      sort: updated_at
      page: 1
      limit: 20
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: tags
  endpoint:
    path: /tags
    method: POST
- name: template
  endpoint:
    path: /templates/{id}
    method: GET
    data_selector: object
    params: {}
- name: tag
  endpoint:
    path: /v1/tags/{id}
    method: GET
    data_selector: object
    params: {}
- name: run_template
  endpoint:
    path: /v1/templates/run
    method: POST
- name: tags
  endpoint:
    path: /v1/tags/{id}
    method: PATCH
- name: share_client_portal_link
  endpoint:
    path: /v1/cases/{id}/share-client-portal-link
    method: POST
- name: client_portal
  endpoint:
    path: /v1/client-portals
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: files
  endpoint:
    path: /v1/files
    method: GET
- name: upload_file
  endpoint:
    path: /file-upload-file
    method: POST
- name: download_file
  endpoint:
    path: /v1/files/{file_id}
    method: GET
- name: client_portals
  endpoint:
    path: /client-portals
    method: GET
    data_selector: data
- name: upload_file
  endpoint:
    path: /file-upload-file
    method: POST
- name: download_file
  endpoint:
    path: /file-get-file
    method: GET
- name: complete_client_portal_wait_step
  endpoint:
    path: /v1/cases/{id}/complete-client-portal-wait-step
    method: POST
- name: upload_file
  endpoint:
    path: /v1/files/upload
    method: POST
- name: tables
  endpoint:
    path: /tables
    method: GET
    data_selector: data
- name: files
  endpoint:
    path: /files/{id}
    method: GET
    data_selector: file
    params: {}
- name: tables
  endpoint:
    path: /tables/{id}
    method: GET
    data_selector: object
- name: templates
  endpoint:
    path: /templates/run
    method: POST
- name: custom_properties
  endpoint:
    path: /v1/custom-properties/{target_entity}
    method: GET
    data_selector: custom_properties
- name: templates
  endpoint:
    path: /v1/templates
    method: GET
    data_selector: records
    params: {}
- name: custom_properties
  endpoint:
    path: /v1/custom-properties/case
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: custom_property
  endpoint:
    path: /custom-properties/{target_entity}/{key}
    method: GET
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: template
  endpoint:
    path: /templates/{id}
    method: GET
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
    params:
      include_suspended: 'false'
      page: '1'
      limit: '20'
- name: run_template
  endpoint:
    path: /v1/templates/run
    method: POST
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: share_client_portal_link
  endpoint:
    path: /v1/cases/{id}/share-client-portal-link
    method: POST
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: object
    params: {}
- name: webhook
  endpoint:
    path: /webhook-create-one
    method: POST
    data_selector: payload
- name: client_portal
  endpoint:
    path: /v1/client-portals
    method: GET
    data_selector: records
    params: {}
- name: client_portals
  endpoint:
    path: /client-portals
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: complete_client_portal_wait_step
  endpoint:
    path: /v1/cases/{id}/complete-client-portal-wait-step
    method: POST
    data_selector: completed_wait_step_keys
    params: {}
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: tables
  endpoint:
    path: /reference/table-get-many
    method: GET
    data_selector: tables
- name: tables
  endpoint:
    path: /tables
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: object
    params: {}
- name: table
  endpoint:
    path: /tables/{id}
    method: GET
    data_selector: object
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/{id}
    method: GET
- name: custom_properties
  endpoint:
    path: /v1/custom-properties/{target_entity}
    method: GET
    data_selector: custom_properties
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/id
    method: GET
    data_selector: object
    params: {}
- name: custom_properties
  endpoint:
    path: /custom-properties/case
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: object
    params: {}
- name: custom_property
  endpoint:
    path: /custom-properties/{target_entity}/{key}
    method: GET
    data_selector: 200 Detailed custom property
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/{id}
    method: DELETE
    data_selector: null
    params:
      id: uuid
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: ''
- name: cases
  endpoint:
    path: /reference/cases
    method: GET
- name: companies
  endpoint:
    path: /reference/companies
    method: GET
- name: individuals
  endpoint:
    path: /reference/individuals
    method: GET
- name: checks
  endpoint:
    path: /reference/checks
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: cases
  endpoint:
    params:
      filter: name.eq=john
      sort: status,updated_at.desc
- name: webhooks
  endpoint:
    params:
      filter: type.eq=user
      sort: created_at
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: object
    params: {}
- name: ping
  endpoint:
    path: /v1/ping
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
    params: {}
- name: case
  endpoint:
    path: /cases
    method: GET
    data_selector: cases
- name: case_review
  endpoint:
    path: /case/review
    method: POST
    data_selector: review
- name: case_relation
  endpoint:
    path: /case/relation
    method: POST
    data_selector: relation
- name: create_company
  endpoint:
    path: /companies
    method: POST
- name: create_individual
  endpoint:
    path: /individuals
    method: POST
- name: create_relation
  endpoint:
    path: /case-relation-create-one
    method: POST
- name: update_relation
  endpoint:
    path: /case-relation-update-one
    method: PATCH
- name: delete_relation
  endpoint:
    path: /case-relation-delete-one
    method: DELETE
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: countries
  endpoint:
    path: /reference/company-data-countries
    method: GET
    data_selector: countries
- name: companies
  endpoint:
    path: /reference/company-get-many
    method: GET
    data_selector: companies
- name: search_companies
  endpoint:
    path: /reference/company-data-search
    method: GET
    data_selector: companies
- name: fetch_company_data
  endpoint:
    path: /reference/company-data-fetch
    method: GET
    data_selector: company_data
- name: available_documents
  endpoint:
    path: /reference/company-data-get-available-documents
    method: GET
    data_selector: documents
- name: create_document_order
  endpoint:
    path: /reference/company-data-document-order-create-one
    method: POST
    data_selector: order_confirmation
- name: create_webhook
  endpoint:
    path: /v1/webhooks
    method: POST
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: events
    params: {}
- name: countries
  endpoint:
    path: /reference/company-data-countries
    method: GET
- name: company_data
  endpoint:
    path: /reference/company-data-fetch
    method: GET
- name: search_companies
  endpoint:
    path: /reference/company-data-search
    method: GET
- name: webhook
  endpoint:
    path: /v1/webhooks/{id}
    method: GET
- name: webhook
  endpoint:
    path: /v1/webhooks/id
    method: GET
    data_selector: object
    params: {}
- name: companies
  endpoint:
    path: /v1/companies
    method: GET
    data_selector: companies
    params:
      sort: created_at
      page: 1
      limit: 20
- name: update_webhook
  endpoint:
    path: /v1/webhooks/{id}
    method: PATCH
- name: webhook
  endpoint:
    path: /v1/webhooks/id
    method: PATCH
    data_selector: data
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    data_selector: records
    params:
      limit: '20'
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    params:
      sort: created_at
      page: 1
      limit: 20
- name: cases
  endpoint:
    path: /cases
    method: GET
    params:
      limit: '50'
      page: '23'
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    params:
      page: '42'
- name: checks
  endpoint:
    path: /reference/check-get-many
    method: GET
    data_selector: records
    params: {}
- name: create_check
  endpoint:
    path: /reference/check-create-one
    method: POST
    data_selector: records
    params: {}
- name: delete_check
  endpoint:
    path: /reference/check-delete-one
    method: DELETE
    data_selector: records
    params: {}
- name: company_monitoring
  endpoint:
    path: /checks/company-monitoring/id
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: case
  endpoint:
    path: /cases
    method: GET
    data_selector: cases
- name: company
  endpoint:
    path: /companies
    method: POST
- name: individual
  endpoint:
    path: /individuals
    method: POST
- name: relation
  endpoint:
    path: /case-relation-create-one
    method: POST
- name: electronic_signature
  endpoint:
    path: /checks/electronic_signature
    method: POST
    data_selector: object
    params: {}
- name: id_document_check
  endpoint:
    path: /id-document-checks
    method: POST
    data_selector: check_result
- name: review_id_document_check
  endpoint:
    path: /id-document-review
    method: PATCH
    data_selector: review_result
- name: countries
  endpoint:
    path: /reference/company-data-countries
    method: GET
    data_selector: countries
- name: company_search
  endpoint:
    path: /reference/company-data-search
    method: GET
    data_selector: companies
- name: company_data
  endpoint:
    path: /reference/company-data-fetch
    method: GET
    data_selector: company_data
- name: available_documents
  endpoint:
    path: /reference/company-data-get-available-documents
    method: GET
    data_selector: documents
- name: document_order
  endpoint:
    path: /reference/company-data-document-order-create-one
    method: POST
    data_selector: order_response
- name: countries
  endpoint:
    path: /reference/company-data-countries
    method: GET
- name: company
  endpoint:
    path: /reference/company-data-fetch
    method: GET
- name: individuals
  endpoint:
    path: /reference/individuals
    method: GET
- name: ID Verification check
  endpoint:
    path: /id-verification-checks
    method: POST
    data_selector: results
    params: {}
- name: Review ID Verification check
  endpoint:
    path: /id-verification-review
    method: PATCH
    data_selector: results
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params:
      page: 1
      limit: 20
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: AML check
  endpoint:
    path: /aml-create-one
    method: POST
    data_selector: records
- name: Review AML hits
  endpoint:
    path: /aml-review-hits
    method: PATCH
    data_selector: records
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: AML check
  endpoint:
    path: /aml-review
    method: POST
    data_selector: check data review object
- name: individuals
  endpoint:
    path: /individuals
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: document_check
  endpoint:
    path: /document-checks
    method: POST
    data_selector: check
    params: {}
- name: list_custom_document_types
  endpoint:
    path: /custom-document-get-many
    method: GET
    data_selector: document_types
    params: {}
- name: review_check_result
  endpoint:
    path: /document-review
    method: POST
    data_selector: ''
    params: {}
- name: company_monitoring_check
  endpoint:
    path: /v1/checks/company-monitoring/{id}
    method: GET
    data_selector: response_data
    params:
      id: uuid
- name: online_reputation
  endpoint:
    path: /v1/checks/online_reputation
    method: POST
    data_selector: object
    params: {}
- name: company_monitoring
  endpoint:
    path: /checks/company-monitoring
    method: GET
    data_selector: data
    params: {}
- name: note
  endpoint:
    path: /v1/notes
    method: POST
- name: electronic_signature
  endpoint:
    path: /checks/electronic_signature
    method: POST
    data_selector: object
    params: {}
- name: notes
  endpoint:
    path: /v1/notes
    method: POST
    data_selector: object
    params: {}
- name: activities
  endpoint:
    path: /v1/activities
    method: GET
    data_selector: activities
- name: ID Document check
  endpoint:
    path: /id-document-checks-guide
    method: POST
    data_selector: data
    params: {}
- name: Review ID Document check
  endpoint:
    path: /id-document-review
    method: PATCH
    data_selector: data
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: identity_verification_check
  endpoint:
    path: /id-verification-checks
    method: post
    data_selector: results
    params: {}
- name: review_id_verification_check
  endpoint:
    path: /id-verification-review
    method: patch
    data_selector: results
    params: {}
- name: tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: POST
- name: case
  endpoint:
    path: /reference/cases
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /reference/companies
    method: GET
    data_selector: records
- name: individual
  endpoint:
    path: /reference/individuals
    method: GET
    data_selector: records
- name: check
  endpoint:
    path: /reference/checks
    method: GET
    data_selector: records
- name: document
  endpoint:
    path: /reference/documents
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /v1/files
    method: GET
- name: upload_file
  endpoint:
    path: /file-upload-file
    method: POST
- name: download_file
  endpoint:
    path: /v1/files/{file_id}
    method: GET
- name: aml_check
  endpoint:
    path: /aml-create-one
    method: POST
    data_selector: check
    params: {}
- name: upload_file
  endpoint:
    path: /file-upload-file
    method: POST
- name: download_file
  endpoint:
    path: /file-get-file
    method: GET
- name: AML check
  endpoint:
    path: /aml-review
    method: POST
    data_selector: review_check_result
    params: {}
- name: templates
  endpoint:
    path: /templates
    method: GET
- name: run_template
  endpoint:
    path: /templates/run
    method: POST
- name: document_check
  endpoint:
    path: /document-checks
    method: POST
    data_selector: document_check
    params: {}
- name: review_check
  endpoint:
    path: /document-review
    method: PATCH
    data_selector: review_result
    params: {}
- name: share_client_portal_link
  endpoint:
    path: /v1/cases/{id}/share-client-portal-link
    method: POST
- name: online_reputation_check
  endpoint:
    path: /checks/online_reputation
    method: POST
- name: note
  endpoint:
    path: /v1/notes
    method: POST
- name: note
  endpoint:
    path: /v1/notes
    method: POST
    data_selector: object
    params: {}
- name: custom_properties
  endpoint:
    path: /v1/custom-properties/{target_entity}
    method: GET
    data_selector: custom_properties
    params:
      sort: created_at
- name: custom_properties
  endpoint:
    path: /custom-properties
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: activities
  endpoint:
    path: /v1/activities
    method: GET
    data_selector: activities
    params:
      limit: 20
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: data
    params:
      sort: created_at
      page: 1
      limit: 20
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params:
      include_suspended: 'false'
      page: 1
      limit: 20
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params:
      page: 1
      limit: 20
- name: add_tags_to_case
  endpoint:
    path: /v1/cases/{id}/tags
    method: POST
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
- name: files
  endpoint:
    path: /v1/files
    method: GET
- name: upload_file
  endpoint:
    path: /file-upload-file
    method: POST
- name: download_file
  endpoint:
    path: /v1/files/{file.id}
    method: GET
- name: upload_file
  endpoint:
    path: /file-upload-file
    method: POST
- name: download_file
  endpoint:
    path: /file-get-file
    method: GET
- name: templates
  endpoint:
    path: /templates
    method: GET
- name: run_template
  endpoint:
    path: /templates/run
    method: POST
- name: share_client_portal_link
  endpoint:
    path: /v1/cases/{id}/share-client-portal-link
    method: POST
- name: case
  endpoint:
    path: /v1/cases
    method: GET
    data_selector: cases
    params: {}
- name: case_notes
  endpoint:
    path: /v1/cases/{id}/notes
    method: GET
    data_selector: notes
    params: {}
- name: case_documents
  endpoint:
    path: /v1/cases/{id}/documents
    method: GET
    data_selector: documents
    params: {}
- name: tables
  endpoint:
    path: /reference/table-get-many
    method: GET
    data_selector: records
- name: custom_properties
  endpoint:
    path: /custom-properties/{target_entity}
    method: GET
    data_selector: custom_properties
    params: {}
- name: case
  endpoint:
    path: /v1/cases/{id}
    method: GET
    data_selector: ''
    params:
      id: ''
- name: case_review
  endpoint:
    path: /v1/cases/{id}/reviews
    method: POST
    data_selector: ''
    params:
      id: ''
- name: risk
  endpoint:
    path: /v1/cases/{id}/risks
    method: POST
    data_selector: ''
    params:
      id: ''
- name: case_relation
  endpoint:
    path: /v1/cases/{caseId}/relations
    method: POST
    data_selector: ''
    params:
      caseId: ''
- name: update_case_relation
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: PATCH
    data_selector: ''
    params:
      caseId: ''
      caseRelationId: ''
- name: delete_case_relation
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: DELETE
    data_selector: ''
    params:
      caseId: ''
      caseRelationId: ''
- name: countries
  endpoint:
    path: /v1/company-data/countries
    method: GET
    data_selector: ''
    params: {}
- name: entity_legal_forms
  endpoint:
    path: /v1/company-data/entity-legal-forms
    method: GET
    data_selector: ''
    params: {}
- name: company_search
  endpoint:
    path: /v1/company-data/search
    method: GET
    data_selector: ''
    params: {}
- name: company_data_fetch
  endpoint:
    path: /v1/company-data/fetch/{search_ref}
    method: GET
    data_selector: ''
    params:
      search_ref: ''
- name: available_documents
  endpoint:
    path: /v1/company-data/available-documents
    method: GET
    data_selector: ''
    params: {}
- name: document_order
  endpoint:
    path: /v1/company-data/document-orders
    method: POST
    data_selector: ''
    params: {}
- name: list_companies
  endpoint:
    path: /v1/companies
    method: GET
    data_selector: ''
    params: {}
- name: custom_properties
  endpoint:
    path: /custom-properties/case
    method: GET
    params:
      sort: created_at
      page: 1
      limit: 20
- name: users
  endpoint:
    path: /v1/users
    method: GET
    params:
      include_suspended: 'false'
      page: 1
      limit: 20
- name: company
  endpoint:
    path: /v1/companies/{id}
    method: GET
    data_selector: companies
    params: {}
- name: individual
  endpoint:
    path: /v1/individuals
    method: GET
    data_selector: individuals
    params: {}
- name: check
  endpoint:
    path: /v1/checks
    method: GET
    data_selector: checks
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params:
      page: '1'
      limit: '20'
- name: checks
  endpoint:
    path: /v1/checks
    method: GET
    data_selector: checks
    params:
      page: 1
      limit: 20
      sort: updated_at
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: payload
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification/{id}
    method: GET
    data_selector: payload
- name: aml_check
  endpoint:
    path: /v1/checks/aml
    method: POST
    data_selector: payload
- name: document_check
  endpoint:
    path: /v1/checks/document
    method: POST
    data_selector: payload
- name: cases
  endpoint:
    path: /v1/cases
    method: GET
    data_selector: cases
- name: case_notes
  endpoint:
    path: /v1/cases/{id}/notes
    method: GET
    data_selector: notes
- name: case_documents
  endpoint:
    path: /v1/cases/{id}/documents
    method: GET
    data_selector: documents
- name: online_reputation_check
  endpoint:
    path: /v1/checks/online_reputation
    method: POST
- name: online_reputation_get_one
  endpoint:
    path: /v1/checks/online_reputation/{id}
    method: GET
- name: online_reputation_review
  endpoint:
    path: /v1/checks/online_reputation/{id}/review
    method: PATCH
- name: note_create_one_note
  endpoint:
    path: /v1/notes
    method: POST
- name: note_create_one_note_comment
  endpoint:
    path: /v1/notes/{id}/comments
    method: POST
- name: activity_get_many
  endpoint:
    path: /v1/activities
    method: GET
- name: case_review
  endpoint:
    path: /v1/cases/{id}/reviews
    method: POST
    data_selector: '201'
    params:
      id:
        required: true
- name: case_risk
  endpoint:
    path: /v1/cases/{id}/risks
    method: POST
    data_selector: '201'
    params:
      id:
        required: true
- name: case_relation
  endpoint:
    path: /v1/cases/{caseId}/relations
    method: POST
    data_selector: '201'
    params:
      caseId:
        required: true
- name: case_relation_update
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: PATCH
    data_selector: '200'
    params:
      caseId:
        required: true
      caseRelationId:
        required: true
- name: case_relation_delete
  endpoint:
    path: /v1/cases/{caseId}/relations/{caseRelationId}
    method: DELETE
    data_selector: '204'
    params:
      caseId:
        required: true
      caseRelationId:
        required: true
- name: company_data_countries
  endpoint:
    path: /v1/company-data/countries
    method: GET
    data_selector: '200'
    params: {}
- name: company_data_entity_legal_forms
  endpoint:
    path: /v1/company-data/entity-legal-forms
    method: GET
    data_selector: '200'
    params: {}
- name: company_data_search
  endpoint:
    path: /v1/company-data/search
    method: GET
    data_selector: '200'
    params:
      country:
        required: true
- name: company_data_fetch
  endpoint:
    path: /v1/company-data/fetch/{search_ref}
    method: GET
    data_selector: '200'
    params:
      search_ref:
        required: true
- name: company_data_available_documents
  endpoint:
    path: /v1/company-data/available-documents
    method: GET
    data_selector: '200'
    params: {}
- name: company_data_document_order
  endpoint:
    path: /v1/company-data/document-orders
    method: POST
    data_selector: '201'
    params: {}
- name: company_get_many
  endpoint:
    path: /v1/companies
    method: GET
    data_selector: '200'
    params: {}
- name: case_tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: POST
    data_selector: tags
    params:
      id: required
- name: tag
  endpoint:
    path: /v1/tags
    method: GET
    data_selector: tags
    params: {}
- name: file_upload
  endpoint:
    path: /v1/files/upload
    method: POST
    data_selector: uploadedFile
    params: {}
- name: file_download
  endpoint:
    path: /v1/files/{id}
    method: GET
    data_selector: file
    params:
      id: required
- name: company
  endpoint:
    path: /v1/companies/{id}
    method: GET
- name: individual
  endpoint:
    path: /v1/individuals
    method: GET
- name: check
  endpoint:
    path: /v1/checks
    method: GET
- name: template
  endpoint:
    path: /v1/templates/{id}
    method: GET
- name: client_portal
  endpoint:
    path: /v1/cases/{id}/share-client-portal-link
    method: POST
- name: check
  endpoint:
    path: /v1/checks
    method: GET
    data_selector: checks
    params: {}
- name: company_monitoring_check
  endpoint:
    path: /v1/checks/company-monitoring/{id}
    method: GET
    data_selector: check
    params: {}
- name: electronic_signature_check
  endpoint:
    path: /v1/checks/electronic_signature
    method: POST
    data_selector: check
    params: {}
- name: id_document_check
  endpoint:
    path: /v1/checks/id_document
    method: POST
    data_selector: check
    params: {}
- name: id_verification_check
  endpoint:
    path: /v1/checks/id_verification
    method: POST
    data_selector: check
    params: {}
- name: updated_at
  endpoint:
    params:
      updated_at:
        required: false
        in: query
        description: Filter items by the `updated_at.{operator}` field.
- name: status
  endpoint:
    params:
      status:
        required: false
        in: query
        description: Filter items by the `status.{operator}` field.
- name: type
  endpoint:
    params:
      type:
        required: false
        in: query
        description: Filter items by the `type.{operator}` field.
- name: url
  endpoint:
    params:
      url:
        required: false
        in: query
        description: Filter items by the `url.{operator}` field.
- name: events
  endpoint:
    params:
      events:
        required: false
        in: query
        description: Filter items by the `events.{operator}` field.
- name: sort
  endpoint:
    params:
      sort:
        required: false
        in: query
        description: Use this parameter to sort query results.
- name: page
  endpoint:
    params:
      page:
        required: false
        in: query
        description: Query response is paginated.
- name: limit
  endpoint:
    params:
      limit:
        required: false
        in: query
        description: Query response is paginated.
- name: id_verification
  endpoint:
    path: /v1/checks/id_verification/{id}
    method: POST
    data_selector: data
    params:
      id:
        required: true
- name: aml_check
  endpoint:
    path: /v1/checks/aml
    method: POST
    data_selector: data
    params: {}
- name: document_check
  endpoint:
    path: /v1/checks/document
    method: POST
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/{id}
    method: GET
    data_selector: webhook
    params: {}
- name: webhook_update
  endpoint:
    path: /v1/webhooks/{id}
    method: PATCH
    data_selector: webhook
    params: {}
- name: webhook_delete
  endpoint:
    path: /v1/webhooks/{id}
    method: DELETE
    data_selector: webhook
    params: {}
- name: activities
  endpoint:
    path: /v1/activities
    method: GET
    data_selector: activities
    params:
      limit: 20
- name: case-tags
  endpoint:
    path: /v1/cases/{id}/tags
    method: post
    data_selector: content
    params:
      id:
        required: true
        in: path
        description: Id of the case
- name: tag
  endpoint:
    path: /v1/tags
    method: get
    data_selector: content
    params: {}
- name: upload-file
  endpoint:
    path: /v1/files/upload
    method: post
    data_selector: content
    params: {}
- name: CompanySearch
  endpoint:
    path: /company-search
    method: GET
    data_selector: data
    params: {}
- name: CompanyData
  endpoint:
    path: /company-data
    method: GET
    data_selector: data
    params: {}
- name: CompanyList
  endpoint:
    path: /company/list
    method: GET
    data_selector: data
    params: {}
- name: PaginatedCompanyList
  endpoint:
    path: /company/paginated
    method: GET
    data_selector: data
    params: {}
- name: template
  endpoint:
    path: /v1/templates
    method: GET
    data_selector: templates
- name: template_detail
  endpoint:
    path: /v1/templates/{id}
    method: GET
    data_selector: template
- name: run_template
  endpoint:
    path: /v1/templates/run
    method: POST
    data_selector: execution
- name: client_portal_link
  endpoint:
    path: /v1/cases/{id}/share-client-portal-link
    method: POST
    data_selector: clientPortalLink
- name: complete_wait_step
  endpoint:
    path: /v1/cases/{id}/complete-client-portal-wait-step
    method: POST
    data_selector: completedWaitStep
- name: client_portals
  endpoint:
    path: /v1/client-portals
    method: GET
    data_selector: clientPortals
- name: tables
  endpoint:
    path: /v1/tables
    method: GET
    data_selector: tables
- name: table_detail
  endpoint:
    path: /v1/tables/{id}
    method: GET
    data_selector: table
- name: custom_properties
  endpoint:
    path: /v1/custom-properties/{target_entity}
    method: GET
    data_selector: customProperties
- name: custom_property_detail
  endpoint:
    path: /v1/custom-properties/{target_entity}/{key}
    method: GET
    data_selector: customProperty
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
- name: user_detail
  endpoint:
    path: /v1/users/{id}
    method: GET
    data_selector: user
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: webhooks
- name: webhooks
  endpoint:
    params:
      updated_at: ''
      status: ''
      type: ''
      url: ''
      events: ''
      sort: updated_at
      page: 1
      limit: 20
- name: IdVerificationCheckData
  endpoint:
    path: /id-verification/check
    method: POST
    data_selector: data
- name: IdVerificationCheck
  endpoint:
    path: /id-verification/checks
    method: GET
    data_selector: checks
- name: webhook-create-one
  endpoint:
    path: /webhook-create-one
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/{id}
    method: GET
    data_selector: webhook
    params:
      id: ''
- name: webhook_update
  endpoint:
    path: /v1/webhooks/{id}
    method: PATCH
    data_selector: webhook
    params:
      id: ''
- name: webhook_delete
  endpoint:
    path: /v1/webhooks/{id}
    method: DELETE
    data_selector: ''
    params:
      id: ''
- name: Activity
  endpoint:
    path: /api/activity
    method: GET
    data_selector: data
    params: {}
- name: CompanySearch
  endpoint:
    path: /company/search
    method: GET
    data_selector: data
    params: {}
- name: CompanyData
  endpoint:
    path: /company/data
    method: GET
    data_selector: data
    params: {}
- name: company_list
  endpoint:
    path: /companies
    method: GET
    data_selector: data
    params: {}
- name: company_create
  endpoint:
    path: /companies/create
    method: POST
    data_selector: data
    params: {}
- name: IdVerificationCheck
  endpoint:
    path: /api/id_verification_check
    method: POST
    data_selector: data
- name: aml_check
  endpoint:
    path: /aml/check
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: WebhookCreate
  endpoint:
    path: /webhooks/create
    method: POST
    data_selector: data
    params: {}
- name: WebhookUpdate
  endpoint:
    path: /webhooks/update
    method: PUT
    data_selector: data
    params: {}
- name: WebhookList
  endpoint:
    path: /webhooks
    method: GET
    data_selector: data
    params: {}
- name: CheckDeletedWebhook
  endpoint:
    path: /webhooks/check-deleted
    method: POST
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Dotfile is an End-to-End Business Verification platform that allows you to verify
  your customers anywhere in the world.
- A significant advantage of Dotfile is its flexibility. You can opt to do information
  collection through your own product or front-end.
- Two-factor authentication (2FA) adds an additional step to logging in for increased
  security.
- 2FA can be enabled by all user types and is recommended for security.
- Cases have a Unique ID, a Name, and a Status - Draft, Open, Approved, or Rejected.
- The Case status can be changed manually at any time or can be set to switch to Approved
  automatically once all the Checks - on all the Entities in the Case - are Approved
  themselves.
- Individuals can be marked as 'not relevant' without losing historical data.
- Custom properties allow you to extend the data model of the Case, Company, and Individual
  entities.
- Custom properties allow you to extend the data model of the Case, Company, and Individual
  entities if you need to save specific information that is not part of the default
  properties of these entities.
- World-Check One integration needs to be activated for your workspace.
- Export any custom view’s data in just a few clicks (async via notification)
- Download in CSV or XLSX format—perfect for reporting, analysis, and compliance
- 'Smart selection: Select multiple items using checkboxes or select all on filtered
  or paginated views.'
- 'Contextual actions: A Bulk Actions menu shows only what’s relevant for the entity
  type.'
- IDnow is now a provider for automated ID document checks, offering a solid alternative
  to Veriff.
- We’ve also updated how verification results are displayed for improved clarity.
- To use Dotfile's integration, you must have an active World-Check One account including
  API access.
- Filters in your check view are now more precise. You can narrow results by AML hit
  types, vendor type, specific document type, and more.
- If you already have an existing contract with INPI (or any of our company data providers),
  you can use your own credentials through Dotfile for seamless access.
- Low-code interface for risk assessment rules
- 'Important: use this feature in combination with the new Draft Case Status.'
- Country registration number and country are now optional.
- Check expiration has been disabled for ID verifications and ID document checks.
- Introducing a new 'Draft' status for the Case object in Dotfile.
- End users can now edit Client Portal information after reaching the final 'Check'
  step.
- Suspended users will remain visible in the console and activity logs but will no
  longer have access to the workspace.
- Workflows allow you to define with JavaScript which Templates or Checks will be
  run when a user submit an application through the Client Portal.
- Custom wordings allow you to personalize the labels and descriptions of each check
  on the last page of the Client Portal.
- You can now mark individuals as 'Not Relevant'. This might be useful for instance
  for previous UBOs or Legal Representatives who are not active in the company anymore.
- We also introduced a new Case status, 'Closed'​, that in principle behaves similarly
  to the 'Rejected' status - hides checks from tasks.
- Check expiration feature for ID verifications has been disabled.
- Empty strings are considered as null
- Better handle date and date-time
- Filter operators are now consistent and documented
- AI Document Analysis can be added directly to the Client Portal or used through
  our API.
- We also introduced a new Case status, 'Closed' that in principle behaves similarly
  to the 'Rejected' status - hides checks from tasks.
- You can now use the in-app interface to create the webhooks you want instead of
  relying on the API only.
- You can also view logs and retry webhooks as well as easily switch from online to
  offline.
- Logging into Dotfile just got easier. We've introduced Google SSO to Dotfile, allowing
  you to log in with your Google account.
- New endpoint for retrieving case documents.
- Ability to approve or reject checks via API.
- The system captures video footage and images of the ID and the face, which are then
  analyzed through several layers of verification.
- To enable Veriff, navigate to your settings and select Veriff as your verification
  provider.
- The automated ID document check consists of analyzing the ID file provided by the
  user through a series of verifications.
- Logging into Dotfile just got easier. We've introduced Google SSO to Dotfile.
- This section explains how the client portal addresses data mismatches during the
  ID verification process, helping to streamline the user experience and reduce inconclusive
  checks in the Dotfile workspace.
- The goal is to improve the success rate of ID verification, reduce the need for
  manual interventions by analysts, and prevent users from being stuck in repetitive
  rejection loops caused by issues such as typographical errors in the questionnaire
  or mismatches in document data.
- Checks can be initiated via API.
- Status of check can be 'Processing', 'Approved', or 'Rejected'.
- AI Document Analysis can be added directly to the Onboarding Flow or used through
  our API.
- 'Global Coverage: Supports a wide range of identity documents from numerous countries,
  making it accessible to a broad user base.'
- 'Document Verification: Uses AI to authenticate passports, driver’s licenses, and
  ID cards while detecting fraud attempts.'
- 'Biometric Verification: Matches users’ selfies or live video recordings with their
  submitted documents to confirm identity.'
- 'Detailed Check Results: Provides granular insights into verification outcomes,
  helping businesses make informed decisions.'
- Document Forensics adds an advanced layer of control to Dotfile’s document review
  automation.
- If any forensics indicator flags a document as high risk, Dotfile overrides automatic
  approval and routes the check for manual review.
- Dotfile leverages Large Langue Models (LLM) to streamline decision-making on AML
  screening hits.
- Monitoring is available to receive alerts if new potential matches emerge.
- Documents are exclusively stored in AWS/s3 (EU) regardless of the chosen LLM provider.
- The Electronic signature Check requires Document Templates configuration to define
  the content of the document to sign.
- This check requires OpenAI to be configured in Dotfile AI vendor preference
- World-Check integration needs to be activated for your workspace.
- Once a user has reached the Check Page, they cannot go back.
- Over 90% of hits are pre-qualified by artificial intelligence
- Human reviewers retain ultimate control
- The Electronic signature Check requires Document Templates configuration to define
  the content of the document to sign by adding static content, dynamic fields from
  the case or the individual and the position of the signature anchor in the document.
- Progress is auto-saved every time the end user clicks Next on the form.
- It may take some time for the SSL certificate to be generated and for the DNS to
  fully propagate.
- 'Your client portal custom domain can be a top-level domain, but it must be a dedicated
  one (ex: dedicated-domain.com).'
- 'Otherwise, it should be a subdomain of your existing top-level domain (ex: onboarding.mydomain.com).'
- To order documents, navigate to the Company Profile and access the Document Store.
- Custom wordings allow you to personalize the labels of each check on the last page
  of the Client Portal.
- Client Portals are customer-facing pages that allow you to collect information and
  documents from your counterparties.
- If Sender Name is left blank, the default sender name will be the Workspace name.
- By default, Sender User will be set to communication-hub.
- Automated risk via API allows managing risk assessment on your side.
- Support and Services for Risk Engine Deployment are available from the Dotfile team.
- You can choose between two types of portals and define the default language.
- Interactive Visualizations
- Real-Time Data Updates
- Filtering Options
- Comprehensive Cases Overview
- Dedicated Tabs for Different Checks and Risk Scoring
- Downloadable data
- You can cancel a running bulk action. Items not yet started are marked as canceled;
  processing stops as soon as cancellation is detected.
- You can retry failed items from a completed job (disabled if there is an ongoing
  bulk action in the workspace).
- Automated risk via API allows for managing risk assessment on your side.
- Support and Services for Risk Engine Deployment is available from the Dotfile team.
- Some objects like Case may return nulls in deeply nested fields
- 'For individuals, you need to have at least the following columns for the import
  to be successful: first_name, last_name, is_beneficial_owner, is_business_contact.
  The other columns you can add to your import are: email (required if is_business_contact
  is set to true), birthdate, birth_country or residence_country.'
- 'Be aware that country names must follow ISO 3166-1 alpha-2 standard (e.g: FR, DE,
  NL) and that dates need to be formatted like yyyy-mm-dd.'
- The export is performed asynchronously.
- If the export exceeds 10,000 rows, the download will be a ZIP archive containing
  multiple CSV or XLSX files, each file limited to 10,000 rows.
- Google Sheets has a limit of 10,000,000 cells. If this limit is reached, synchronization
  will fail and the file will be empty.
- Never write directly in the Google Sheet tabs where the data is imported, otherwise
  the synchronization will break.
- API requests must be made over HTTPS. API requests made over plain HTTP will fail.
- API requests without authentication will also fail.
- Created webhooks are online by default, but can be turned offline.
- Webhooks can shut down after 50 errors in 24 hours.
- The status field in case request bodies will no longer accept "approved" and "rejected"
  values.
- Values "approved" or "rejected" will return an HTTP response 400 BAD REQUEST.
- Dotfile is the all-in-one platform for customer verification.
- This endpoint allows you to test your API key.
- All API requests must be made over HTTPS. API requests made over plain HTTP will
  fail.
- Cases can be created via the Console or API
- External ID must be unique
- Query response is paginated.
- Use the 'page' parameter to choose which page you want to display.
- The `status` field in case request bodies will no longer accept "approved" and "rejected"
  values.
- Update case properties.
- Case can be created via the Console or via the API.
- Query response is paginated. Use page parameter to choose which page you want to
  display.
- Query response is paginated
- Redirect URL can be configured after the identification flow is completed.
- Currently only ID card and Passport documents are supported.
- Check status `expired` is deprecated and will be removed Q1'25. It will be replaced
  with an expired flag.
- Webhook notifications for check results are available.
- Can attach at most 5 files per document check
- 'In request body, you must specify the action: approve or reject'
- Force the manual review of a Document check in status `in_progress` with files.
- You must review all AML hits before reviewing the AML check.
- 'Deprecated: use List all document types instead.'
- Query response is paginated. Page index starts at 1.
- Allowed tags are `p`, `b`, `i`, `em`, `strong`, `a` with attributes `href`, `target`
  and `rel`, `li`, `ul`, `span` with attributes `data-type`, `data-id` and `data-label`,
  `br` and `hr`.
- Invalid tag or attribute will be stripped out.
- URL will be transformed into link. `target` and `rel` will be automatically set.
- Line break `\n` will be replaced by `<br />`.
- A `<p>` will be added if the content doesn't start with a `<p>` or a `<ul>` tag.
- You can mention an user with `<span data-type="mention" data-id="user:d86b5c10-db43-4021-86b2-6c27df7819b0"></span>`.
  `data-label` and inner text will be automatically set and the user will receive
  a notification.
- Ignoring html tag, the content must be at most `3000`.
- Use case_id, individual_id, company_id, type, and author_id to filter results.
- Maximum file size is at most 20Mo but may vary depending on the usage afterward.
- The upload_ref is valid for about 1 day.
- If your individual has multiple roles, it will merge the checks with the same type.
- If you add a check to an auto-approved case, you will need to manually re-open the
  case. Approval on these newly added checks will trigger the auto-approval automation
  again.
- Query response is paginated. Use 'page' and 'limit' parameters for pagination.
- Dotfile sends POST requests with a raw JSON payload to your designated endpoint.
- We support securing webhooks through content hashing with a signature.
- A SHA256 HMAC signature is calculated for the content and delivered in the `Dotfile-Signature`
  header, which can be used for comparison.
- We also support secret rotation with no downtime.
- If you rotate your secret, we will provide a second header `Dotfile-Old-Signature`
  for you to validate against your old secret.
- To verify a webhook, calculate the signature from the request body using the webhook
  secret.
- It is recommended to use the raw request body content for hashing, as using JSON
  parsing may alter it.
- Webhook automatically set offline if your webhook has more than **50 calls in error
  within a rolling window of 24h**.
- You can promote a webhook to LIVE to keep it online even when there is a high amount
  of error.
- By default, only active users are returned.
- To include suspended users, set the include_suspended query parameter to 'true'.
- The request is either malformed or contain invalid parameters.
- Paginated queries return a pagination metadata object alongside the returned items.
- Rate limit allows up to an average of 300 requests per minute and a burst of 100
  requests per second per workspace API key.
- Any request over the limit will return a 429 Too Many Requests error.
- Cases can be created via the Console or API.
- A SHA256 HMAC signature is calculated for the content and delivered in the `Dotfile-Signature`
  header.
- Webhook events are delivered asynchronously; ordering is not guaranteed.
- To mitigate issues caused by out-of-order events, retrieve the latest state using
  API calls and track the case's `last_activity_at` field.
- Expect a `2XX` response code from your endpoint or we will retry the webhook with
  an exponential backoff.
- 'We will retry 4 times after the initial call: 1 hour, 4 hours, 13 hours, and 40
  hours after each failure.'
- If your webhook has more than 50 calls in error within a rolling window of 24h,
  it will automatically be set offline.
- Use query parameters to filter and sort results.
- 'A check can be in different status: in_progress, processing, need_review, approved,
  rejected, expired.'
- Rate limiting allows up to an average of 300 requests per minute and a burst of
  100 requests per second per workspace API key.
- The check status can be updated to Need review if an error occurs.
- AML Listings included are Sanctions, PEP, Warnings, Fitness and probity.
- Document Check status updates to Need review after upload
- You can attach at most 5 files per document check.
- Defaults to created_at for sorting.
- API requests require valid OAuth2 credentials.
- Filtering parameters may cause requests to fail if not properly formatted.
- Requires API keys for authentication
- Pagination is supported in some endpoints
- Limit defaults to 20, maximum value is 100.
- The API supports filtering, sorting, and pagination for cases.
- Maximum file size is at most 20Mo.
- Ensure UUIDs are valid when making requests.
- Ensure the id parameter is a valid UUID for all checks.
- For custom property `url`, maxLength=2000
- For custom property `date`, date in format [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
  (`yyyy-MM-dd` eg `2023-01-31`)
- For custom property `phone_number`, phone number in [E.164](https://en.wikipedia.org/wiki/E.164)
  format (eg `+33123456789`)
- For custom property `boolean`
- For custom property `numeric`, actual minimum and maximum will depend on the property
  settings but will be within -9007199254740991 and 9007199254740991
- For custom property `choices`, contains the `key` of the options
- For custom property `countries`, contains the [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
  country code (eg `FR`)
- When there are no value for this custom property on the company
- Maximum file size is at most **20Mo** but may vary depending on the usage afterward.
- Some objects may return nulls in deeply nested fields
- Actual minimum and maximum for custom property `numeric` will be within -9007199254740991
  and 9007199254740991
- The URL has a 15 min validity
- Only applies to ComplyAdvantage vendor.
- Some objects like Activity may return nulls in deeply nested fields
- Ensure the API keys are kept secure.
- Data may vary based on region and legal form.
- Requires OAuth2 authentication.
- Rate limits apply.
- Check status `expired` is deprecated and will be removed Q1'25.
- Settings are optional and if not set it will use your workspace default settings.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key'
- '400 Bad Request: Check query parameters for validity.'
- '401 Unauthorized: Ensure proper authentication setup.'
- '404 Not Found: Verify endpoint path.'
- '400: The request is either malformed or contain invalid parameters.'
- '400 BAD REQUEST: When using "approved" or "rejected" values in request body for
  the `status`.'
- '404: No case can be found.'
- '400: The request is either malformed or contain invalid parameters. Make sure the
  body payload matches the expected schema'
- '404: No case, company or individual can be found.'
- Limit reached. Contact us at support@dotfile.com to lift all limits.
- '400: The request is either malformed or contain invalid parameters. Make sure the
  identifier specified in the URL is a valid UUID. Make sure the body payload matches
  the expected schema. A case must have a `main` company to create relation in it.
  Relation from a given individual or company to another company must be unique.'
- '404: No company can be found.'
- '400: The request is either malformed or contain invalid parameters. Make sure the
  identifier specified in the URL is a valid UUID.'
- '404: No individual can be found.'
- '404: No check can be found.'
- '404: No Company Monitoring check can be found.'
- '404: No Electronic Signature check can be found.'
- '404: No ID Document check can be found.'
- 'Error: No result returned or Error status.'
- '404: No ID Verification check can be found.'
- '404: No AML check can be found.'
- '404: No Document check can be found.'
- '404: No Online Reputation check can be found.'
- '404: No note can be found.'
- '404: Case not found or tags not found on case.'
- '404: Case not found'
- '404: Case not found or tags not found on case'
- '404: No tag can be found.'
- 'Request limit exceeded: Throttle API calls or reduce frequency.'
- 'Query timeout: Break down filters or add selectivity.'
- '413: File too large, maximum file size is 20Mo.'
- '415: File type not supported.'
- '404: No file can be found.'
- '404: No template can be found.'
- '404: No case, client portal or business contact can be found.'
- '404: No table can be found.'
- '404: No user can be found.'
- '400: Invalid signature'
- '404: No webhook can be found.'
- '400 - Bad Request: The request could not be accepted, due to missing or incorrect
  parameters.'
- '401 - Unauthorized: No valid API key or no API key was provided.'
- '404 - Not Found: The requested resource could be not found.'
- '409 - Conflict: The request failed due to the current state of the resource.'
- '429 - Too Many Requests: Too many requests were received. We recommend spacing
  requests increasing.'
- '500 - Internal Server Error: The Dotfile API experienced an internal server error.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400 Bad Request: Check the payload structure.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Ensure the endpoint is correctly set up.'
- '400 Invalid signature: Signature verification failed'
- 'Webhook automatically set offline: More than 50 calls in error within a rolling
  window of 24h'
- '401 - Unauthorized: No valid API key or no API key was provided'
- '413 - Payload Too Large: The request payload is too large. Use for file upload
  (max 10Mo).'
- '500 - Internal Server Error: The Dotfile API experienced an internal server error.
  Our team has been notified and is working to fix it.'
- '429 Too Many Requests: Request over the limit'
- 'Error: Check status updated to Need review'
- '400 Bad Request: Check the request structure and required fields'
- '404 Not Found: Ensure the endpoint exists and is correct'
- '400: The request is either malformed or contain invalid parameters. Make sure the
  identifier specified in the URL is a valid UUID. Make sure the body payload matches
  the expected schema. Maximum items reached (default: 25). Contact us at support@dotfile.com
  if you need more items.'
- 'Invalid signature: The signature calculated does not match the provided signatures.'
- '400: The request is either malformed or contains invalid parameters.'
- '400 Bad Request: Invalid parameters provided'
- '404 Not Found: Requested resource was not found'
- '204 No Content: Successful deletion, but no content to return'
- Invalid signature
- '413: File too large, maximum file size is **20Mo**.'
- '400 Bad Request: Check the input parameters'
- '401 Unauthorized: Validate your authentication credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: The requested resource does not exist'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.dotfile.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.dotfile.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
