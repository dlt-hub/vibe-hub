resources:
- name: create_assignment_module
  endpoint:
    path: /api/assignments/create
    method: POST
    data_selector: module
    params: {}
- name: add_module_to_course
  endpoint:
    path: /api/courses/add_module
    method: POST
    data_selector: module
    params: {}
- name: evaluate_submission
  endpoint:
    path: /api/assignments/evaluate
    method: POST
    data_selector: evaluation
    params: {}
- name: discussion_module
  endpoint:
    path: /api/discussion_module
    method: POST
    data_selector: module
    params: {}
- name: course
  endpoint:
    path: /api/course
    method: POST
    data_selector: course
    params: {}
- name: scorm_module
  endpoint:
    path: /scorm/modules
    method: POST
    data_selector: module
    params: {}
- name: scorm_package
  endpoint:
    path: /scorm/packages
    method: POST
    data_selector: package
    params: {}
- name: admin_users
  endpoint:
    path: /api/admin_users
    method: GET
    data_selector: records
- name: branding
  endpoint:
    path: /api/branding
    method: GET
    data_selector: records
- name: general_settings
  endpoint:
    path: /api/general_settings
    method: GET
    data_selector: records
- name: website_menu
  endpoint:
    path: /api/website_menu
    method: GET
    data_selector: records
- name: courses
  endpoint:
    path: /api/courses
    method: GET
    data_selector: records
- name: certificates
  endpoint:
    path: /api/certificates
    method: GET
    data_selector: records
- name: ecommerce_settings
  endpoint:
    path: /api/ecommerce_settings
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: records
- name: automated_emails
  endpoint:
    path: /api/automated_emails
    method: GET
    data_selector: records
- name: integrations
  endpoint:
    path: /api/integrations
    method: GET
    data_selector: records
- name: portal_admin_permissions
  endpoint:
    path: /api/portal_admin_permissions
    method: GET
    data_selector: records
- name: Product
  endpoint:
    path: /courses
    method: GET
    data_selector: products
- name: user_list
  endpoint:
    path: /users/list
    method: GET
    data_selector: users
    params: {}
- name: user_profile
  endpoint:
    path: /users/profile
    method: GET
    data_selector: user
    params: {}
- name: course_overview
  endpoint:
    path: /reports/course_overview
    method: GET
    data_selector: data
- name: learning_path_overview
  endpoint:
    path: /reports/learning_path_overview
    method: GET
    data_selector: data
- name: course_insight
  endpoint:
    path: /reports/course_insight
    method: GET
    data_selector: data
- name: student_insight
  endpoint:
    path: /reports/student_insight
    method: GET
    data_selector: data
- name: learning_path_insight
  endpoint:
    path: /reports/learning_path_insight
    method: GET
    data_selector: data
- name: survey_report
  endpoint:
    path: /reports/survey_report
    method: GET
    data_selector: data
- name: yearly_sales
  endpoint:
    path: /reports/yearly_sales
    method: GET
    data_selector: data
- name: monthly_sales
  endpoint:
    path: /reports/monthly_sales
    method: GET
    data_selector: data
- name: product_breakdown
  endpoint:
    path: /reports/product_breakdown
    method: GET
    data_selector: data
- name: export_orders
  endpoint:
    path: /reports/export_orders
    method: GET
    data_selector: data
- name: cart_abandonment
  endpoint:
    path: /reports/cart_abandonment
    method: GET
    data_selector: data
- name: site_audit_report
  endpoint:
    path: /reports/site_audit
    method: GET
    data_selector: data
- name: admin_role
  endpoint:
    path: /admin/roles
    method: GET
    data_selector: roles
    params: {}
- name: student_role
  endpoint:
    path: /student/roles
    method: GET
    data_selector: roles
    params: {}
- name: instructor_role
  endpoint:
    path: /instructor/roles
    method: GET
    data_selector: roles
    params: {}
- name: group_admin_role
  endpoint:
    path: /group-admin/roles
    method: GET
    data_selector: roles
    params: {}
- name: super_admin_role
  endpoint:
    path: /super-admin/roles
    method: GET
    data_selector: roles
    params: {}
- name: user_types
  endpoint:
    path: /api/v1/user_types
    method: GET
    data_selector: users
    params: {}
- name: permissions
  endpoint:
    path: /api/v1/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: user
    params: {}
- name: bulk_upload
  endpoint:
    path: /bulk_upload
    method: POST
    data_selector: upload
    params: {}
- name: import_hubspot_contacts
  endpoint:
    path: /import_hubspot
    method: POST
    data_selector: import
    params: {}
- name: bulk_enrollment
  endpoint:
    path: /bulk_enrollment
    method: POST
    data_selector: bulk_enrollment_data
- name: course_enrollment_email
  endpoint:
    path: /course_enrollment_email
    method: GET
    data_selector: course_enrollment_email_data
- name: class_enrollment_email
  endpoint:
    path: /class_enrollment_email
    method: GET
    data_selector: class_enrollment_email_data
- name: user_list
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: user_profile
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
- name: gamification_settings
  endpoint:
    path: /admin/settings/gamification
    method: GET
    data_selector: settings
- name: badges
  endpoint:
    path: /admin/assets/badges
    method: GET
    data_selector: badges
- name: courses
  endpoint:
    path: /admin/courses
    method: GET
    data_selector: courses
- name: gamification_emails
  endpoint:
    path: /admin/settings/email/gamification
    method: GET
    data_selector: gamification_emails
- name: portal_creation
  endpoint:
    path: /api/portal_creation
    method: POST
    data_selector: response
    params: {}
- name: shopping_cart
  endpoint:
    path: /api/shopping_cart
    method: GET
    data_selector: cart_items
    params: {}
- name: billing_address
  endpoint:
    path: /api/billing_address
    method: POST
    data_selector: response
    params: {}
- name: payment_details
  endpoint:
    path: /api/payment
    method: POST
    data_selector: response
    params: {}
- name: course_management
  endpoint:
    path: /permissions/course_management
    method: GET
    data_selector: permissions
- name: user_management
  endpoint:
    path: /permissions/user_management
    method: GET
    data_selector: permissions
- name: ecommerce_subscription_management
  endpoint:
    path: /permissions/ecommerce_subscription_management
    method: GET
    data_selector: permissions
- name: reporting_logs
  endpoint:
    path: /permissions/reporting_logs
    method: GET
    data_selector: permissions
- name: email_communication_management
  endpoint:
    path: /permissions/email_communication_management
    method: GET
    data_selector: permissions
- name: gamification_engagement
  endpoint:
    path: /permissions/gamification_engagement
    method: GET
    data_selector: permissions
- name: integrations_site_management
  endpoint:
    path: /permissions/integrations_site_management
    method: GET
    data_selector: permissions
- name: course
  endpoint:
    path: /api/courses
    method: POST
    data_selector: course
    params: {}
- name: courses
  endpoint:
    path: /api/v1/courses
    method: POST
    data_selector: data
    params: {}
- name: classes
  endpoint:
    path: /api/v1/classes
    method: POST
    data_selector: data
    params: {}
- name: certificates
  endpoint:
    path: /api/v1/certificates
    method: POST
    data_selector: data
    params: {}
- name: course
  endpoint:
    path: /api/v1/courses
    method: POST
    data_selector: course
    params: {}
- name: class
  endpoint:
    path: /api/v1/classes
    method: POST
    data_selector: class
    params: {}
- name: certificate
  endpoint:
    path: /api/v1/certificates
    method: POST
    data_selector: certificate
    params: {}
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: products
    params: {}
- name: groups
  endpoint:
    path: /api/groups
    method: POST
    data_selector: data
    params: {}
- name: class_roster
  endpoint:
    path: /manage/roster
    method: GET
    data_selector: students
    params: {}
- name: course_activity
  endpoint:
    path: /manage/course/activity
    method: GET
    data_selector: activity_log
    params: {}
- name: create_category
  endpoint:
    path: /courses/extras/course_categories
    method: POST
    data_selector: category
    params: {}
- name: edit_category
  endpoint:
    path: /courses/extras/course_categories/{id}
    method: PUT
    data_selector: category
    params: {}
- name: delete_category
  endpoint:
    path: /courses/extras/course_categories/{id}
    method: DELETE
    data_selector: category
    params: {}
- name: learning_path
  endpoint:
    path: /learning_paths
    method: GET
    data_selector: learning_paths
- name: enroll_learner
  endpoint:
    path: /enrollLearner
    method: POST
    data_selector: records
- name: bulk_enroll_learners
  endpoint:
    path: /bulkEnrollLearners
    method: POST
    data_selector: records
- name: manage_learning_path
  endpoint:
    path: /manageLearningPath
    method: POST
    data_selector: records
- name: view_learning_paths
  endpoint:
    path: /viewLearningPaths
    method: GET
    data_selector: records
- name: edit_learning_path
  endpoint:
    path: /editLearningPath
    method: PUT
    data_selector: records
- name: clone_learning_path
  endpoint:
    path: /cloneLearningPath
    method: POST
    data_selector: records
- name: delete_learning_path
  endpoint:
    path: /deleteLearningPath
    method: DELETE
    data_selector: records
- name: courses
  endpoint:
    path: /api/courses
    method: POST
    data_selector: course
    params:
      status: Draft
- name: classes
  endpoint:
    path: /api/classes
    method: POST
    data_selector: classes
    params: {}
- name: students
  endpoint:
    path: /api/students
    method: POST
    data_selector: students
    params: {}
- name: class_enrollment_email
  endpoint:
    path: /api/enrollment/email
    method: POST
    data_selector: email_records
    params: {}
- name: upcoming_class_email
  endpoint:
    path: /api/upcoming/class/email
    method: POST
    data_selector: email_records
    params: {}
- name: email_types
  endpoint:
    path: /api/lms/email/types
    method: GET
    data_selector: emailTypes
    params: {}
- name: email_settings
  endpoint:
    path: /api/lms/email/settings
    method: GET
    data_selector: emailSettings
    params: {}
- name: Portals
  endpoint:
    path: /portals
    method: GET
    data_selector: portals
    params: {}
- name: portal_management
  endpoint:
    path: /portals
    method: GET
    data_selector: portals
- name: branding
  endpoint:
    path: /portals/{portal_id}/branding
    method: GET
    data_selector: branding
- name: access
  endpoint:
    path: /portals/{portal_id}/access
    method: GET
    data_selector: access
- name: admins
  endpoint:
    path: /portals/{portal_id}/admins
    method: GET
    data_selector: admins
- name: learners
  endpoint:
    path: /portals/{portal_id}/learners
    method: GET
    data_selector: learners
- name: sub_portals
  endpoint:
    path: /portals/{portal_id}/sub-portals
    method: GET
    data_selector: sub_portals
- name: announcements
  endpoint:
    path: /portals/{portal_id}/announcements
    method: GET
    data_selector: announcements
- name: courses
  endpoint:
    path: /api/courses
    method: GET
    data_selector: all_courses
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: all_users
    params: {}
- name: reports
  endpoint:
    path: /api/reports
    method: GET
    data_selector: all_reports
    params: {}
- name: quiz
  endpoint:
    path: /api/quizzes
    method: POST
    data_selector: quiz_data
    params: {}
- name: questions
  endpoint:
    path: /api/questions
    method: GET
    data_selector: questions_data
    params: {}
- name: Text/HTML Module
  endpoint:
    path: /modules/text-html
    method: GET
    data_selector: modules
    params: {}
- name: Courses
  endpoint:
    path: /courses
    method: GET
    data_selector: courses
    params: {}
- name: pdf_module
  endpoint:
    path: /api/pdf_module
    method: POST
    data_selector: module
    params: {}
- name: survey_feedback
  endpoint:
    path: /api/survey_feedback
    method: GET
    data_selector: responses
    params: {}
notes:
- 'All changes to General Settings can be made by following these steps: From the
  Admin Dashboard, choose Settings, then General Settings. Make necessary changes,
  and click Save Settings when you''re done.'
- Google reCAPTCHA is integrated into the registration page to ensure that only genuine
  users can create accounts.
- These keys will be required to integrate reCAPTCHA into the website's settings to
  activate the security feature.
- A video module can only have one video per module.
- If your file is larger than 512 MB, upload to a third party service like Vimeo.
- When uploading a large file, the progress bar may reach 98% or 99% and then stick
  there for a while as the rest of the upload process completes.
- For Direct Upload videos, the thumbnail displayed will be the middle frame of the
  video.
- For Vimeo and YouTube videos, the thumbnail will match the one selected on their
  respective platforms.
- Ensure to save changes to avoid losing them when navigating away from the page.
- Ensure SCORM packages are uploaded before adding to the module.
- Learners must view all SCORM slides for completion to be recorded.
- Creating and customizing site pages is essential to setting up your platform.
- If you plan to use Academy of Mine’s eCommerce features, you must include specific
  pages such as a Product Listing Page, a Cart Page, and a Checkout Page.
- Using Cloudflare is optional. If you prefer to use another DNS host, you can skip
  this step and proceed to Step 3.
- You will be able to see the currently existing API Keys.
- An Admin is allowed to view the dashboard only if the 'View Admin Dashboard' permission
  is set.
- Group Admins can take part in the Group as a Student.
- A password will be automatically generated if not included in bulk upload.
- Instructor Led courses may not be available to legacy users.
- There is a limit of 500 learners that can be uploaded per file.
- By default all fields will be visible in the View Profile Page.
- Users and admins will be able to fill out the fields.
- Learners can view their leaderboard status and badges in the My Achievements area.
- Instructor-led courses may not be available to legacy users.
- Instructor Led courses may not be available to legacy users or on all plans.
- Courses with 'Draft' status cannot be used or viewed by anyone.
- A new Course will have the Course Status 'Draft' in the first instance.
- Groups require a referral code for student enrollment.
- Group Admins can manage students and view activity.
- The Admin can edit the number of seats at any time.
- For unlimited seats, leave the field blank.
- Make sure to click Save Group to create the group.
- The page for updating seats might seem familiar if you have manually created a Group
  before.
- The recommended dimensions for your main logo are 350px by 80px, and 50px by 50px
  for the mobile logo.
- For better readability, we recommend a lighter color for body background color.
- We recommend a darker color for body text color that will work well with your body
  background color.
- If the background of your logo is transparent, keep in mind that the header background
  will fill in the background of the logo.
- Top bar email is optional and can be left blank.
- Top bar phone number can also be left blank.
- Footer text can include copyright information or anything else you'd like.
- This toggle setting lets you request that search engines avoid indexing your platform.
- Portal has the autonomy to define their own name and logo.
- The Logo represents your brand identity and will appear across all desktop views
  of your application or website.
- The Mobile Logo is specifically designed for smaller screens and mobile-friendly
  navigation menus.
- Specify the email addresses or domains that are permitted for registration. Separate
  multiple email addresses with commas.
- A maximum of 500 learners can be uploaded per file to avoid timeouts.
- Once a learner is enrolled in a Learning Path, they will receive an email notification.
- A new Course will have the Course Status 'Draft' preventing public availability
  until ready.
- Each class can be one time or recurring with specific date and time.
- Certificates of completion can be attached to courses.
- Students can self-enroll into classes.
- Products can only include one Instructor Led course.
- Administrators can create portals and set seat limits.
- Public users can create portals via eCommerce.
- Email notifications can be set for various activities related to course and user
  engagement.
- Quizzes can be static or dynamic with various question types.
- Real-time grading provides instant feedback to learners.
- Allows for adding custom HTML to the module
- Students need to scroll to the end for completion tracking if enabled
- Disallow large PDF files over 30 pages
- Tracking completion marked only when reaching the end of the PDF
errors:
- If you do not update before leaving a page you have made changes to, changes may
  not be saved.
auth_info:
  mentioned_objects: []
client:
  headers:
    Accept: application/json
  auth:
    type: apikey
    location: header
    header_name: Authorization
  base_url: https://your-instance.api-name.com
source_metadata: null
