resources:
- name: control_requests
  endpoint:
    path: /control/[domainid]
    method: POST
    data_selector: body
    params: {}
- name: request
  endpoint:
    path: /control/requests
    method: POST
    data_selector: body
    params:
      keyToken: string
      url: string
      _wt.encrypted: true
      _wt.track: 'true'
- name: track_requests
  endpoint:
    path: /track/{project_aliases}
    method: POST
    data_selector: conversionPoint
    params: {}
- name: control_requests
  endpoint:
    path: /control/[domainid]-[projectalias]
    method: POST
    data_selector: data
    params: {}
- name: multivariate_test
  endpoint:
    path: /api/multivariate/test
    method: GET
    data_selector: data
    params: {}
- name: tag_configuration
  endpoint:
    path: /api/v1/tag/configuration
    method: GET
    data_selector: configurations
- name: audit_trail
  endpoint:
    path: /audit_trail
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: records
- name: roles
  endpoint:
    path: /api/v1/roles
    method: GET
    data_selector: records
- name: User Cookie
  endpoint:
    path: /cookies/user
    method: GET
    data_selector: cookie_data
    params: {}
- name: Mode Cookie
  endpoint:
    path: /cookies/mode
    method: GET
    data_selector: cookie_data
    params: {}
- name: Project Cookie
  endpoint:
    path: /cookies/project
    method: GET
    data_selector: cookie_data
    params: {}
- name: Control Cookie
  endpoint:
    path: /cookies/control
    method: GET
    data_selector: cookie_data
    params: {}
- name: JSESSIONID Cookie
  endpoint:
    path: /cookies/jsessionid
    method: GET
    data_selector: cookie_data
    params: {}
- name: Tests History Cookie
  endpoint:
    path: /cookies/testsHistory
    method: GET
    data_selector: cookie_data
    params: {}
- name: Session Management Cookie
  endpoint:
    path: /cookies/sessionManagement
    method: GET
    data_selector: cookie_data
    params: {}
- name: Visit Count Cookie
  endpoint:
    path: /cookies/visitCount
    method: GET
    data_selector: cookie_data
    params: {}
- name: data_deletion_request
  endpoint:
    path: /data/deletion/request
    method: POST
    data_selector: request
    params: {}
- name: bulk_rtbf
  endpoint:
    path: /bulk/rtbf
    method: POST
    data_selector: bulk_request
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: POST
    data_selector: assets
    params: {}
- name: geolocation
  endpoint:
    path: /geolocation
    method: GET
    data_selector: _wm_
    params: {}
- name: _wm_TimeOffset
  endpoint:
    path: /geolocation/timeOffset
    method: GET
    data_selector: data
- name: _wm_city
  endpoint:
    path: /geolocation/city
    method: GET
    data_selector: data
- name: _wm_continentCode
  endpoint:
    path: /geolocation/continentCode
    method: GET
    data_selector: data
- name: _wm_countryCode
  endpoint:
    path: /geolocation/countryCode
    method: GET
    data_selector: data
- name: _wm_countryName
  endpoint:
    path: /geolocation/countryName
    method: GET
    data_selector: data
- name: _wm_dcCompanyName
  endpoint:
    path: /geolocation/dcCompanyName
    method: GET
    data_selector: data
- name: _wm_latitude
  endpoint:
    path: /geolocation/latitude
    method: GET
    data_selector: data
- name: _wm_longitude
  endpoint:
    path: /geolocation/longitude
    method: GET
    data_selector: data
- name: _wm_postalCode
  endpoint:
    path: /geolocation/postalCode
    method: GET
    data_selector: data
- name: _wm_regionName
  endpoint:
    path: /geolocation/regionName
    method: GET
    data_selector: data
- name: _wm_timezone
  endpoint:
    path: /geolocation/timezone
    method: GET
    data_selector: data
- name: user_profiles
  endpoint:
    path: /api/v1/user_profiles
    method: POST
    data_selector: data
    params: {}
- name: weather
  endpoint:
    path: /api/weather
    method: GET
    data_selector: data
    params: {}
- name: clone_test
  endpoint:
    path: /clone/test
    method: POST
    data_selector: result
- name: clone_project
  endpoint:
    path: /clone/project
    method: POST
    data_selector: result
- name: dashboard
  endpoint:
    path: /dashboard
    method: GET
    data_selector: data
    params: {}
- name: event
  endpoint:
    path: /api/event
    method: POST
    data_selector: data
- name: conversion
  endpoint:
    path: /api/conversion
    method: POST
    data_selector: data
- name: pageview
  endpoint:
    path: /api/pageview
    method: POST
    data_selector: data
    params: {}
- name: conversion
  endpoint:
    path: /api/conversion
    method: POST
    data_selector: data
    params: {}
- name: control_request
  endpoint:
    path: /control
    method: POST
    data_selector: response
    params: {}
- name: page_view
  endpoint:
    path: /pageview
    method: POST
    data_selector: response
    params: {}
- name: conversion
  endpoint:
    path: /conversion
    method: POST
    data_selector: response
    params: {}
- name: inform_method
  endpoint:
    path: /inform-method
    method: POST
    data_selector: data
    params: {}
- name: feature_flag
  endpoint:
    path: /cart/update.js
    method: POST
    data_selector: attributes
    params: {}
- name: control_request
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: page_view
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: conversion
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: feature_flags
  endpoint:
    path: /flags
    method: GET
    data_selector: flags
- name: force_experiment_widget
  endpoint:
    path: /acs/fxp/install_mobile.html
    method: GET
    data_selector: code
- name: Force Experiment Widget
  endpoint:
    path: /acs/fxp/install_mobile.html
    method: GET
    data_selector: widget
    params: {}
- name: preview_links
  endpoint:
    path: /acs/fxp/install.html
    method: GET
    data_selector: preview_links
    params: {}
- name: preview_links
  endpoint:
    path: /acs/fxp/preview_links
    method: GET
    data_selector: links
- name: metric_capture
  endpoint:
    path: /ots.webtrends-optimize.com
    method: GET
    data_selector: metrics
    params: {}
- name: states
  endpoint:
    path: /states
    method: GET
    data_selector: states
    params: {}
- name: states
  endpoint:
    path: /states
    method: GET
    data_selector: states
    params: {}
- name: context_switching
  endpoint:
    path: /context/switch
    method: GET
    data_selector: context_data
    params: {}
- name: statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: metrics
    params: {}
- name: project
  endpoint:
    path: /projects
    method: GET
- name: experience
  endpoint:
    path: /experiences
    method: GET
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: experiment_data
  endpoint:
    path: /api/v1/experiment_data
    method: GET
    data_selector: data
    params: {}
- name: experiment_views
  endpoint:
    path: /api/v1/experiment_views
    method: POST
    data_selector: data
    params: {}
- name: experiment_views
  endpoint:
    path: /push/experiment_views
    method: POST
    data_selector: event
    params: {}
- name: experiment_views
  endpoint:
    path: /trackDynamicVariable
    method: POST
    data_selector: data
    params: {}
- name: experiment_views
  endpoint:
    path: /pushing/data/to/contentsquare
    method: POST
    data_selector: trackDynamicVariable
    params: {}
- name: experiment_views
  endpoint:
    path: /path/to/experiment/views
    method: POST
    data_selector: FSEventPayload
    params: {}
- name: experiment_views
  endpoint:
    path: /api/v1/experiment_views
    method: POST
    data_selector: data
    params: {}
- name: optimize_view
  endpoint:
    path: /dataLayer
    method: POST
    data_selector: event
    params: {}
- name: optimize_view
  endpoint:
    path: /path/to/endpoint
    method: POST
    data_selector: dataLayer
    params: {}
- name: custom_dimensions
  endpoint:
    path: /custom_definitions
    method: POST
    data_selector: custom_dimensions
    params: {}
- name: custom_dimensions
  endpoint:
    path: /admin/custom_definitions
    method: POST
    data_selector: dimensions
    params: {}
- name: experience_view
  endpoint:
    path: /api/experience_view
    method: POST
    data_selector: events
    params: {}
- name: experience_view_events
  endpoint:
    path: /experience/view/events
    method: POST
- name: experiment_views
  endpoint:
    path: /api/v1/experiments
    method: POST
    data_selector: data
    params: {}
- name: experiment_views
  endpoint:
    path: /push/experiment_views
    method: POST
    data_selector: data
- name: event_tracking
  endpoint:
    path: /api/track/event
    method: POST
    data_selector: events
    params: {}
- name: cdp_segments
  endpoint:
    path: /bre/segments/cdp_segments
    method: GET
    data_selector: segments
    params: {}
- name: orders
  endpoint:
    path: /admin/api/orders.json
    method: GET
    data_selector: orders
- name: orders
  endpoint:
    path: /admin/api/orders.json
    method: GET
    data_selector: orders
- name: events
  endpoint:
    path: /producer
    method: POST
    data_selector: trackPayload
- name: event_tracking
  endpoint:
    path: /producer
    method: POST
- name: customer_profiles
  endpoint:
    path: /wto_customerprofile_stage/profiles_
    method: COPY INTO
    data_selector: records
- name: customer_profile
  endpoint:
    path: /wto_customerprofile_stage/profiles_
    method: COPY
    data_selector: profiles
    params:
      file_format: CSV
- name: pseudonymous_users
  endpoint:
    path: /path/to/pseudonymous_users
    method: GET
    data_selector: data
    params: {}
- name: pseudonymous_users
  endpoint:
    path: /services/data/vXX.X/sobjects/pseudonymous_users
    method: GET
    data_selector: records
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: Opportunities
  endpoint:
    path: /services/data/vXX.X/sobjects/Opportunities
    method: GET
- name: Account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: Opportunity
  endpoint:
    path: /services/data/vXX.X/sobjects/Opportunity
    method: GET
- name: Lead
  endpoint:
    path: /services/data/vXX.X/sobjects/Lead
    method: GET
- name: Case
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: lookup_api
  endpoint:
    path: /?id=lookup_item_id
    method: GET
    data_selector: rows
    params: {}
- name: full_sheet_api
  endpoint:
    path: /
    method: GET
    data_selector: rows
    params: {}
- name: sheet_search_api
  endpoint:
    path: /
    method: GET
    data_selector: rows
    params: {}
- name: lookup_api
  endpoint:
    path: /
    method: GET
    data_selector: rows
    params: {}
- name: full_sheet_api
  endpoint:
    path: /
    method: GET
    data_selector: rows
    params: {}
- name: sheet_search_api
  endpoint:
    path: /
    method: GET
    data_selector: rows
    params: {}
- name: recommendations
  endpoint:
    path: /endpoint
    method: POST
    data_selector: null
    params:
      limit: 5
- name: recently_viewed
  endpoint:
    path: /api/recently_viewed
    method: GET
    data_selector: data
    params: {}
- name: trending
  endpoint:
    path: /api/trending
    method: GET
    data_selector: data
    params: {}
- name: bought_with
  endpoint:
    path: /api/bought_with
    method: GET
    data_selector: data
    params: {}
- name: most_popular
  endpoint:
    path: /api/most_popular
    method: GET
    data_selector: data
    params: {}
- name: recommendations
  endpoint:
    path: /endpoint
    method: POST
    data_selector: ''
    params: {}
- name: store_behavioral_data
  endpoint:
    path: /api/webtrendsoptimize-store
    method: POST
    data_selector: N records inserted
- name: read_behavioral_data
  endpoint:
    path: /webtrendsoptimize-read
    method: GET
    data_selector: Array of JSON objects
- name: Shopify
  endpoint:
    path: /product.json
    method: GET
    data_selector: products
- name: Intelligent Reach
  endpoint:
    path: /feedexports/some-guid-here/filename.csv
    method: GET
    data_selector: feeds
- name: Google Shopping Feed
  endpoint:
    path: /google_shopping_feed
    method: GET
    data_selector: feeds
- name: Contentful
  endpoint:
    path: /content_delivery_api
    method: GET
    data_selector: entries
- name: social_proofing
  endpoint:
    path: /social-proofing
    method: POST
    data_selector: data
    params: {}
- name: store_event
  endpoint:
    path: /api/webtrendsoptimize-store
    method: POST
    data_selector: N records inserted
- name: read_event
  endpoint:
    path: /webtrendsoptimize-read
    method: GET
    data_selector: Array of JSON objects
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: surveys
  endpoint:
    path: /surveys/metrics
    method: GET
    data_selector: metrics
- name: tag_implementation
  endpoint:
    path: /tagging-options
    method: GET
    data_selector: tags
    params: {}
- name: core_services
  endpoint:
    path: /services/core
    method: GET
    data_selector: permissions
    params: {}
- name: all_services
  endpoint:
    path: /services/all
    method: GET
    data_selector: permissions
    params: {}
- name: tag
  endpoint:
    path: /acs/accounts/MY-ACCOUNT-ID-HERE/js/wt.js
    method: GET
    data_selector: script
    params: {}
- name: tag_implementation
  endpoint:
    path: /acs/accounts/abcdefgh-0123-ijkl-4567-mnopqrstuvqz/js/wt.js
    method: GET
    data_selector: script
    params: {}
- name: tag_implementation
  endpoint:
    path: /acs/accounts/MY-ACCOUNT-ID-HERE/js/wt.js
    method: GET
    data_selector: script
- name: tag_implementation
  endpoint:
    path: /tagging-guide
    method: GET
    data_selector: tagging_info
    params: {}
- name: content_masking
  endpoint:
    path: /content/masking
    method: GET
    data_selector: masking_info
    params: {}
- name: purchase_tracking
  endpoint:
    path: /acs/accounts/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/js/wt.js
    method: GET
    data_selector: opt_data
    params: {}
notes:
- Cookies should be stored somewhere meaningful.
- It may take a while for this information to load into the interface.
- Include 'conversionPoint' in the request body to capture metrics.
- Tagging ideally should be hardcoded into the head of the pages.
- Content flicker may occur if tag managers are used instead of hardcoding.
- Consent management becomes a consideration from day one.
- Integrations can be turned on and off at any time.
- Best option for user experience - serve all experiences pre-optin.
- Is compliant with cookie laws.
- Less for customers to think about - just put the tag in the head as normal.
- The Webtrends Optimize support team will need to enable Microsoft SSO for your account.
- You are only able to use the advanced code editors to build MVT's.
- Allows for draft and live versions of tag configurations.
- Users can be invited to the platform and assigned roles.
- Data stored for 90 days, longer durations can be requested.
- Users can have multiple roles.
- Roles define a collection of permissions.
- Uses cookies to personalize user experience and manage sessions.
- Default cookie duration is 90 days.
- Cookies from Webtrends Optimize last for 90 days.
- Cookies can be customized to suit specific needs.
- No core mechanism of Webtrends Optimize is affected by ITP. Beyond limited-term
  cookie storage at 7 days, there is currently no impact on Webtrends Optimize, and
  we are not blocked from operation.
- Safari ensures that storage only persists for 7 days max.
- The Optimize platform is amongst the most secure for data transfer in the market.
- Data is encrypted at rest, in transit, and in browser storage.
- Accelerate Group retains data for 12 months on a rolling basis.
- Data is deleted within 30 days of contract termination unless extended retention
  is part of the service agreement.
- Webtrends Optimize asset manager allows you to upload and host files quickly and
  easily.
- We will need to enable this for you - we default to downloading as little data as
  possible and so don't add these values for customers unless required.
- This is currently for users/traffic in the UK only. If you would like to request
  other countries, please send an email to support@webtrends-optimize.com.
- Uses a simple JavaScript library for managing test history.
- This is currently for users/traffic in the UK only.
- Dashboard can be customized to suit user needs
- We do not have mechanisms in our UI to handle this yet but are planning the feature
  and it will be made available to users in 2024.
- Using Javascript is the most flexible option for ensuring tests do not overlap.
- User decisions are persisted in client-side storage.
- Cloning tests produces a copy of the experience and places it in the same project.
- By cloning into a new project, you can change the Project name, description, location
  etc. independently.
- Uses OAuth2 with refresh token — requires setup of connected app in Webtrends Optimize
- Ensure event handlers are subscribed before events occur.
- Data is carried on each request; limit the data to improve performance.
- Events are not called retroactively, ensure code runs before events
- Utilizes an internal events system for tracking
- Please avoid names which begin with wt_, _wm, r_, and s_ to avoid clashes with naming
  we use for other purposes.
- Consent Management can now be handled with a small snippet in pre-init, removing
  the need for us to write bespoke tags for every customer that had consent management
  needs.
- All data you feed in is carried on each request, as decisions take place on our
  servers and not the browser.
- There is no hard limit to how much data you can pass in, but performance is an important
  factor.
- Uses POST method for all requests
- Avoid names which begin with wt_, _wm, r_ and s_ to avoid clashes with naming.
- The Liquid Templates will not have data available on the first page load.
- Not appropriate for Split tests, where we're looking to redirect the user immediately
  to another page.
- The actual API call to OTS has many options, see the API guide for full details
  of how to communicate with it.
- Use Virtual/Fake locations for feature flags to avoid counting web test users.
- If using the global option, you should make 1 Location and reuse it in every flags
  project.
- Launch by hash or query string by adding '?_wt.launchfxp=true' or '#wto-fxp' or
  '#wto-forceexperiment'.
- 'To launch the widget, add ?_wt.launchfxp=true or #wto-fxp or #wto-forceexperiment
  to the URL.'
- Preview links regenerate on change. Old links will still function, even if not displayed.
- Data typically rolls up in between 5-30 minutes depending on how much data we're
  being sent in the moment.
- Debug mode is enabled using the query string _wt.debug=.
- If using 'beacon tracking' mode, do not expect a response.
- 'Experiences can be in various states: Pending, Staging, Live, Paused, Published
  / Complete, Archived.'
- Use the local killswitch by adding ?_wt.context=optimize:killswitch to the URL to
  stop experiments.
- Add '?_wt.context=optimize:killswitch' to URL to stop experiments from running.
- The Force Experiment is recommended to all users of the platform as an excellent
  way to QA your experiments.
- There is no limit on how much data you request.
- Uses industry standard calculations for statistics
- No limit on how much data you request.
- You can run experiments with little or no knowledge of javascript and html, but
  to get the most out of it, having a reasonable understanding of how code works and
  the ability to write code would be advantageous.
- There are no limits to the number of experiments you run.
- There are no limits to the number of users you can have.
- Uses well-recognised, vetted calculations considered industry standards.
- Our solution can only deliver successful experiment outcomes if they are built correctly.
- We don’t offer formal training courses, but you can find a selection of useful training
  videos on https://help.webtrends-optimize.com
- Tag version 5.8+ is required for this solution.
- When asking for support, it is very helpful to walk through these steps yourself
  and tell us the outcome of these.
- Data discrepancies may occur due to differences in user tracking between GA and
  WTO.
- Exclusions in GA data can lead to less data being displayed compared to WTO.
- WTO = Webtrends Optimize, GA = Google Analytics
- We cannot guarantee the integrity of your GA data, nor are we experts in your web
  analytics setup.
- We do not believe this scenario to be a specific problem. The two platforms of GA4
  and WTO calculate users and sessions differently, track metrics differently, deal
  with bot traffic differently, and GA4 also has known data sampling issues that mean
  data can often be 20% out whereas we do not sample in WTO.
- For this reason, if you see data within 15% across the two platforms, you should
  understand that this is normal, expected, and nothing of concern.
- We will not support any investigations of data discrepancies that are within this
  range. Any investigation is extremely unlikely to uncover anything that needs changing.
- If you see data within 15% across the two platforms, you should understand that
  this is normal, expected, and nothing of concern.
- Does not currently artificially adjust sample sizes.
- Sample Ratio Mismatch issues are often user-error.
- You should not expect a 1:1 match between control and variation for user counts.
- Optimize does not currently (as of Oct 2024) artificially adjust sample sizes.
- Send only once per session to limit API call budget
- Block sending for specific projects to avoid inflating API call budget
- Decide whether complete tests should send data or not
- Integration allows sending A/B testing views to platforms.
- Most analytical platforms want as many data points as possible.
- We suggest avoiding session/user-scoped attributes.
- This integration looks to push experiment views into Tealeaf, to use for segmentation/filtering
  in their system.
- The integration looks to push experiment views into Tealeaf, to use for segmentation/filtering
  in their system.
- This is a push integration only meaning it is sending data to Adobe not pulling
  data from Adobe into WTO.
- Pushing data to Contentsquare for segmentation/filtering
- Requires specific IDs and Alias from the Webtrends Optimize Dashboard
- This integration looks to push experiment views into Contentsquare, to use for segmentation/filtering
  in their system.
- This integration looks to push experiment views into Fullstory, to use for segmentation/filtering
  in their system.
- Integration will take some time to go live - usually less than 10 minutes.
- This goes into your tag, which has a 24hr cache.
- Integration will take some time to go live - usually less than 10 minutes
- Tag has a 24hr cache
- It may take 24hrs for data to show up.
- Integration requires enabling Heap in the settings.
- Integration requires enabling in settings.
- This integration looks to push experiment views into Hotjar, to use for segmentation/filtering
  in their system.
- Microsoft Clarity offers free session recording as well as heatmaps.
- Its possible to add WTO meta data into Clarity to allow these to be filtered and
  reported by Project and Variations.
- This integration looks to push experiment views into Mouseflow, to use for segmentation/filtering
  in their system.
- The integration looks to push experiment views into Mouseflow, to use for segmentation/filtering
  in their system.
- A call may be required so we can share credentials with them - please speak to your
  Account Manager so we can arrange this.
- Most of the work will happen behind the scenes to get their segments into our data
  layer, and from that point onwards you'll be able to use the data seamlessly.
- This script assumes the data is available by the time the Optimize tag loads.
- This proves we will only have access to read your orders.
- Uses cookies to preserve test decisions
- Standard events include cart_viewed, checkout_completed (renamed to 'purchase'),
  etc.
- This document is being actively edited with a v2 of the pixel that allows for users
  on multiple subdomains.
- Webtrends Optimize does not resell your data, nor pay for it, and so it should be
  a safe option to select.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Data is sent in CSV format.
- Ensure data is geographically close to your Snowflake instance for minimal latency.
- Requires setup of Azure Blob Storage for data transfer
- Data must be sent in CSV format
- Send only the data you need
- SAS Tokens expire
- This integration avoids the need to run multiple services in Google Cloud Platform
  (GCP) to extract and transfer the required data.
- Google doesn't allow sharing of the raw dataset.
- Some users of Salesforce will operate on custom domains.
- To avoid importing tables with sensitive data, we require you to be clear in what
  data you want us to import, instead of us downloading everything as default.
- Some objects like Contact may return nulls in deeply nested fields
- Uses Salesforce's Lightning experience
- Creating a Connected App in Salesforce is a very precise process
- 'Account tier: Business Critical. This is the highest tier available from Snowflake
  without using their VPS, and comes with SOC2 Type II Certification, Automatic encryption
  of all data, MFA support.'
- This integration leverages Shopify's Liquid Templates.
- 'Account tier: Business Critical. This is the highest tier available from Snowflake
  without using their VPS, and comes with SOC2 Type II Certification, Automatic encryption
  of all data, MFA support'
- Federated auth, via. Azure SSO
- MFA enabled
- APIs will typically be made available on a URL like wto-CLIENTNAME-APINAME.webtrends-optimize.workers.dev/
- Requires setup of connected app in Webtrends Optimize
- We only provide price as a rough guide here.
- To handle multi-currency websites and ensure prices are 100% accurate at time of
  rendering, you should fetch these using AJAX from the relevant PDPs before rendering
  your experience.
- None.
- Collaborative Filtering is optional.
- Product feed is recommended for dynamic product metadata.
- We default to being able to query by Product ID.
- If we need to pivot off 'category', send us the category. If we need brands, prices,
  or anything else - send it to us.
- We only provide price as a rough guide here. To handle multi-currency websites and
  ensure prices are 100% accurate at time of rendering, you should fetch these using
  AJAX from the relevant PDPs before rendering your experience.
- Uses anonymised domain names for services.
- The API should respond with 'N records inserted' if successful.
- We are able to ingest feeds in formats such as CSV, XML and JSON.
- CSV is preferred.
- We may need your Content Delivery API token from Contentful.
- Performance matters! We care about the performance of our responses.
- We typically have two options for how to access this data.
- Uses Beacon API for resilient POST requests
- Deviating from suggested options leaves you at risk of things like content flickering
  and poorer CLS scores.
- 'Webtrends Optimize has 3 domains from which we operate: *.webtrends-optimize.com,
  *.webtrends-optimize.workers.dev, *.azure-websites.net.'
- Minimal, lightweight pages are encouraged by google, and anything you add to a page
  detracts from ideal page load speeds.
- Masking tends to have a net-positive approach on scores - where websites may shift
  a lot as they load, our masking will patch over this and bring the number and severity
  of shifts down thus improving your overall score.
- Script should be added in the HEAD tag before the Cookiebot script.
- Finding what you need in our dashboard has been challenging, particularly as you
  build hundreds of experiences.
- This new feature allows you to add labels to your experiences and also introduces
  new filtering in the dashboard to navigate these.
- Masking content avoids content flicker and there are different ways to do this.
- JavaScript has a detrimental impact on page load performance, but masking plays
  a critical role in limiting the negative impacts of experimentation.
- Correct implementation plays a vital role in avoiding content flickering.
- Mask the page while evaluation happens.
- You will need your account's tag - details for finding it are provided.
- The code in the provided screenshot may differ and is just for illustrative purposes.
- Implementing the tag allows for client-side experimentation and personalization.
- Consider updating Content Security Policies when implementing the tag.
- Minimal, lightweight pages are encouraged by google, and anything you add to a page
  may detract from ideal page load speeds.
- Masking tends to have a net-positive approach on scores.
- Tag should be written to the page post opt-in.
- Use preferences=true as the criteria for user consent.
- All JavaScript has a detrimental impact on page load performance, but masking plays
  a critical role in limiting the negative impacts of experimentation.
- Put the tag in the <head>
- Do not add async or defer attributes
- Mask the page while fetching tests
- 'You will need your account''s tag - details for finding it are here if needed:
  https://help.webtrends-optimize.com/optimize/setup-optimize/integrations-javascript-tag/installing-webtrends-optimize-into-a-shopify-store/'
errors:
- 'No test found for guid: errorCode 303'
- errorCode_100=Unknown Site Exception
- errorCode_201=Invalid conversion request, no guid, alias or page found.
- errorCode_302=No test was found that matched any segments for guid %s
- '401 Unauthorized: Check user credentials or permissions.'
- '403 Forbidden: User does not have access to the resource.'
- Duplicate metric tracking may occur with cookie inspection enabled.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'EVENT_NOT_FOUND: Ensure the event name is valid.'
- 'INVALID_DATA: Check the structure of the data object being sent.'
- '400 Bad Request: Check the request format and required fields'
- '404 Not Found: Ensure the endpoint exists'
- '500 Internal Server Error: Try again later or contact support'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Failure – user not in test: If the user isn’t in the test you’re trying to track
  a metric for, it will fail.'
- 'DATA_NOT_FOUND: Ensure the correct parameters are used in the request.'
- 'INVALID_REQUEST: Check for any missing required fields in your query.'
- 'Sample Ratio Mismatch: Check % split between variations.'
- Code errors may prevent user counting.
- '403 Forbidden: Check your Azure Storage account permissions.'
- '404 Not Found: Ensure the specified stage and path are correct.'
- None.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- Poor performance without additional software.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://app.webtrends-optimize.com
source_metadata: null
