resources:
- name: create_job
  endpoint:
    path: /jobs
    method: POST
    data_selector: status
    params: {}
- name: create_job
  endpoint:
    path: /job/create
    method: POST
    data_selector: status
    params:
      scope: api.job:write
- name: create_job_prefilled
  endpoint:
    path: /job/create_prefilled
    method: POST
    data_selector: status
    params:
      scope: api.job:write
- name: jobs
  endpoint:
    path: /job/all
    method: GET
    data_selector: jobs
    params:
      include_completed: 'false'
      include_unassigned: 'true'
- name: specific_job
  endpoint:
    path: /job/<ID>
    method: GET
    data_selector: jobDetails
- name: create_job_url
  endpoint:
    path: /job/token
    method: POST
    data_selector: ''
    params: {}
- name: cancel_job
  endpoint:
    path: /job/<ID>
    method: PUT
    data_selector: ''
    params: {}
- name: client_checks
  endpoint:
    path: /job/checks
    method: GET
    data_selector: response
- name: create_job
  endpoint:
    path: /job/create
    method: POST
- name: create_job_prefilled
  endpoint:
    path: /job/create_prefilled
    method: POST
- name: jobs
  endpoint:
    path: /job/all
    method: GET
    data_selector: jobs
    params:
      include_completed: 'false'
      include_unassigned: 'true'
- name: specific_job
  endpoint:
    path: /job/<ID>
    method: GET
    data_selector: jobDetails
- name: cancel_job
  endpoint:
    path: /job/<ID>
    method: PUT
    data_selector: ''
    params: {}
- name: create_job_url
  endpoint:
    path: /job/token
    method: POST
    data_selector: ''
    params: {}
- name: client_checks
  endpoint:
    path: /checks
    method: GET
    data_selector: response
    params: {}
- name: job_status
  endpoint:
    path: /checks
    method: GET
- name: all_jobs
  endpoint:
    path: /job/all
    method: GET
- name: create_job
  endpoint:
    path: /job/create
    method: POST
- name: create_job_prefilled
  endpoint:
    path: /job/create_prefilled
    method: POST
- name: Get All Jobs
  endpoint:
    path: /all
    method: GET
    data_selector: jobs
    params:
      include_completed: 'false'
      include_unassigned: 'true'
- name: Get a Specific Job
  endpoint:
    path: /<ID>
    method: GET
    data_selector: jobId
    params: {}
- name: Cancel Job
  endpoint:
    path: /<ID>
    method: PUT
    data_selector: reason
    params: {}
- name: Create Job URL
  endpoint:
    path: /token
    method: POST
    data_selector: jobId
    params: {}
- name: Get Client Checks
  endpoint:
    path: /checks
    method: GET
    data_selector: response
    params: {}
- name: job_status
  endpoint:
    path: /job/<ID>
    method: GET
- name: create_job
  endpoint:
    path: /job/create
    method: POST
- name: create_job_prefilled
  endpoint:
    path: /job/create_prefilled
    method: POST
- name: all_jobs
  endpoint:
    path: /job/all
    method: GET
    data_selector: jobs
- name: specific_job
  endpoint:
    path: /job/<ID>
    method: GET
    data_selector: jobDetails
- name: cancel_job
  endpoint:
    path: /job/<ID>
    method: PUT
    data_selector: null
- name: create_job_url
  endpoint:
    path: /job/token
    method: POST
    data_selector: null
- name: client_checks
  endpoint:
    path: /check/client
    method: GET
    data_selector: response
- name: create_job
  endpoint:
    path: /job/create
    method: POST
- name: create_job_prefilled
  endpoint:
    path: /job/create_prefilled
    method: POST
- name: job
  endpoint:
    path: /job/all
    method: GET
    data_selector: jobs
- name: specific_job
  endpoint:
    path: /job/<ID>
    method: GET
    data_selector: jobDetails
- name: create_job_url
  endpoint:
    path: /job/token
    method: POST
    data_selector: jobURL
- name: cancel_job
  endpoint:
    path: /job/<ID>
    method: PUT
    data_selector: status
- name: checks
  endpoint:
    path: /checks
    method: GET
    data_selector: records
    params: {}
- name: create_job
  endpoint:
    path: /job/create
    method: POST
- name: create_job_prefilled
  endpoint:
    path: /job/create_prefilled
    method: POST
- name: jobs
  endpoint:
    path: /job/all
    method: GET
    data_selector: jobs
- name: job_status
  endpoint:
    path: /job/<ID>
    method: GET
    data_selector: jobDetails
- name: create_job_url
  endpoint:
    path: /job/token
    method: POST
    data_selector: jobURL
- name: checks
  endpoint:
    path: /checks
    method: GET
- name: create_job
  endpoint:
    path: /job/create
    method: POST
- name: create_job_prefilled
  endpoint:
    path: /job/create_prefilled
    method: POST
- name: jobs
  endpoint:
    path: /job/all
    method: GET
    data_selector: jobs
    params:
      include_completed: 'false'
      include_unassigned: 'true'
- name: specific_job
  endpoint:
    path: /job/<ID>
    method: GET
    data_selector: jobId
    params: {}
- name: cancel_job
  endpoint:
    path: /job/<ID>
    method: PUT
    data_selector: reason
    params: {}
- name: create_job_url
  endpoint:
    path: /job/token
    method: POST
    data_selector: jobId
    params: {}
- name: client_checks
  endpoint:
    path: /client/checks
    method: GET
    data_selector: response
    params: {}
notes:
- Access tokens are short lived thus it is recommended that you refresh your token
  every 10 minutes.
- 'Required Scope: api.job:read'
- 'Required Scope: api.job:write'
- Access tokens are short-lived; refresh every 10 minutes.
- 'Required Scope: api.job:read for retrieving job details'
- 'Required Scope: api.job:write for creating job URLs and cancelling jobs'
- Access tokens are short lived thus it is recommended that you refresh your token
  every 10 minutes to avoid it expiring.
- The header must be included in all the requests made towards other endpoints.
- Access tokens are short lived and should be refreshed every 10 minutes.
- Requires setup of appropriate scopes for API access.
- 'Scope: api.job:read'
- 'Scope: api.job:write'
- Requires setup of access token for authentication.
- It is mandatory to use the 'Bearer' schema in your authorization header.
- The job ID is required for specific job retrieval and cancelling a job.
- The URL for job details is available only for administrative purposes.
errors:
- '401 Unauthorized: Ensure valid credentials and access token'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request -- Request hasn''t passed validation. Errors are explained in
  the request.'
- '401: Unauthorized -- API token is invalid, has been modified and failed to pass
  verification or has expired.'
- '403: Forbidden -- API token does not have the required permissions assigned.'
- '404: Not Found -- The API endpoint does not exist.'
- '500: Internal Server Error -- Our API messed up. Let us know if this happens.'
- '503: Service Unavailable -- API is currently under maintenance.'
- '401 Unauthorized: Recheck credentials or access token.'
- '401 Unauthorized: Ensure your credentials and scope are correct.'
- '400 Bad Request: Check your request format and required fields.'
- '401 Unauthorized: Recheck Client Key and Client Secret'
- '200: OK -- Request has been successfully processed.'
- '201: Created -- Request resulted in creating an object.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration.'
auth_info:
  mentioned_objects:
  - api.job:read
  - Client Key
  - Client Secret
  - Access Token
client:
  base_url: https://api.makesure.com.au/v1
  auth:
    type: oauth2
    token_url: https://api.makesure.com.au/v1/auth
    client_id: '{{ dlt.secrets[''api_client_key''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    location: header
    header_name: Authorization
source_metadata: null
