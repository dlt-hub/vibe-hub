resources:
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orderDetails
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: customerDetails
    params:
      userType: INDIVIDUAL_TRADER
- name: ACAT Source Account Type
  endpoint:
    path: /apis/reference/enums
    method: GET
    data_selector: ENUM
- name: ACAT Transfer type
  endpoint:
    path: /apis/reference/enums
    method: GET
    data_selector: ENUM
- name: ACAT Transit Type
  endpoint:
    path: /apis/reference/enums
    method: GET
    data_selector: ENUM
- name: ACAT Settlement Codes
  endpoint:
    path: /apis/reference/enums
    method: GET
    data_selector: Code
- name: ACAT Rejection Codes
  endpoint:
    path: /apis/reference/enums
    method: GET
    data_selector: Code
- name: session_token
  endpoint:
    path: /auth/tokens
    method: POST
- name: authentication_token
  endpoint:
    path: /auth
    method: POST
    data_selector: response
    params: {}
- name: create_user
  endpoint:
    path: /back-office/users
    method: POST
- name: users
  endpoint:
    path: /back-office/users
    method: POST
    data_selector: object
    params: {}
- name: user
  endpoint:
    path: /back-office/users/{userID}
    method: GET
    data_selector: user
    params: {}
- name: user
  endpoint:
    path: /{userID}
    method: GET
    data_selector: user
- name: Update User
  endpoint:
    path: /back-office/users/{userID}
    method: PATCH
- name: user
  endpoint:
    path: /back-office/users/userID
    method: PATCH
    data_selector: object
    params: {}
- name: user_kyc_status
  endpoint:
    path: /back-office/users/{userID}/kyc-status
    method: GET
    data_selector: object
    params: {}
- name: create_account
  endpoint:
    path: /back-office/accounts
    method: POST
- name: account
  endpoint:
    path: /back-office/accounts
    method: POST
    data_selector: null
    params: {}
- name: account
  endpoint:
    path: /back-office/accounts/{accountID}
    method: GET
    data_selector: response
- name: account
  endpoint:
    path: /back-office/accounts/accountID
    method: GET
    data_selector: account
- name: account
  endpoint:
    path: /back-office/accounts/{accountID}
    method: PATCH
- name: account
  endpoint:
    path: /back-office/accounts/accountID
    method: PATCH
    data_selector: account
- name: user_accounts
  endpoint:
    path: /back-office/users/{userID}/accounts
    method: GET
    data_selector: accounts
    params:
      userID: string
- name: accounts
  endpoint:
    path: /back-office/users/{userID}/accounts
    method: GET
    data_selector: array
    params: {}
- name: account_money_summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/money
    method: GET
    data_selector: object
- name: account_summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary
    method: GET
- name: account_summary
  endpoint:
    path: /back-office/accounts/accountID/summary
    method: GET
    data_selector: accountSummary
    params: {}
- name: account_margin
  endpoint:
    path: /back-office/accounts/{accountID}/summary/margin
    method: GET
- name: account_margin
  endpoint:
    path: /back-office/accounts/{accountID}/summary/margin
    method: GET
    data_selector: object
    params: {}
- name: account_lots
  endpoint:
    path: /accounts/{accountID}/position-details
    method: GET
- name: instruments
  endpoint:
    path: /back-office/instruments
    method: GET
    data_selector: array
- name: instrument
  endpoint:
    path: /back-office/instruments/{symbolOrInstrumentID}
    method: GET
    data_selector: response
- name: instruments
  endpoint:
    path: /apis/reference/get_instruments
    method: GET
- name: instrument_options_chain
  endpoint:
    path: /apis/reference/get_instruments-symbolorinstrumentid-options
    method: GET
- name: Retrieve Instrument Options Chain
  endpoint:
    path: /back-office/instruments/{symbolOrInstrumentID}/options
    method: GET
    data_selector: response
- name: instrument_options
  endpoint:
    path: /back-office/instruments/{symbolOrInstrumentID}/options
    method: GET
    data_selector: options
- name: instrument_option_expiration
  endpoint:
    path: /back-office/instruments/{symbolOrInstrumentID}/options/expiration-dates
    method: GET
- name: instrument_option_expiration
  endpoint:
    path: /back-office/instruments/{symbolOrInstrumentID}/options/expiration-dates
    method: GET
    data_selector: expiration
- name: instruments
  endpoint:
    path: /back-office/instruments/filter
    method: POST
- name: instrument_option_expiration
  endpoint:
    path: /back-office/instruments/{symbolOrInstrumentID}/options/expiration-dates
    method: GET
- name: instruments_filter
  endpoint:
    path: /instruments/filter
    method: POST
    data_selector: InstrumentInList
- name: instrument_option_expiration
  endpoint:
    path: /instruments/{symbolOrInstrumentID}/options/expiration-dates
    method: GET
    data_selector: object
- name: account_resting_orders
  endpoint:
    path: /back-office/accounts/{accountID}/summary/orders
    method: GET
- name: Search Instruments
  endpoint:
    path: /back-office/instruments/filter
    method: POST
- name: account_orders
  endpoint:
    path: /back-office/accounts/{accountID}/summary/orders
    method: GET
- name: instruments
  endpoint:
    path: /filterinstruments
    method: POST
    data_selector: array
- name: account_orders
  endpoint:
    path: /back-office/accounts/{accountID}/reports/order-history
    method: GET
    data_selector: orders
    params:
      from: ISO 8601 date
      to: ISO 8601 date
- name: account_resting_orders
  endpoint:
    path: /back-office/accounts/{accountID}/summary/orders
    method: GET
- name: account_orders
  endpoint:
    path: /back-office/accounts/{accountID}/summary/orders
    method: GET
    data_selector: orders
- name: account_orders
  endpoint:
    path: /back-office/accounts/{accountID}/reports/order-history
    method: GET
    data_selector: orders
- name: account_historical_orders
  endpoint:
    path: /back-office/accounts/{accountID}/reports/order-history
    method: GET
    params:
      from: string
      to: string
      limit: number
      offset: string
      direction: string
- name: create_order
  endpoint:
    path: /orders
    method: POST
    data_selector: orderId
    params: {}
- name: account_orders
  endpoint:
    path: /back-office/accounts/{accountID}/reports/order-history
    method: GET
    data_selector: orders
- name: order
  endpoint:
    path: /orders
    method: POST
    data_selector: orderId
- name: order
  endpoint:
    path: /back-office/orders/{orderID}
    method: GET
- name: orders
  endpoint:
    path: /orders/{orderID}
    method: GET
    data_selector: object
    params: {}
- name: update_order
  endpoint:
    path: /back-office/orders/{orderID}
    method: PATCH
- name: Retrieve Order
  endpoint:
    path: /back-office/orders/{orderID}
    method: GET
- name: order
  endpoint:
    path: /back-office/orders/{orderID}
    method: PATCH
    data_selector: object
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: object
- name: order
  endpoint:
    path: /back-office/orders/byOrderNo/{orderNo}
    method: GET
    data_selector: object
- name: update_order
  endpoint:
    path: /back-office/orders/{orderID}
    method: PATCH
- name: order
  endpoint:
    path: /orders/{orderID}
    method: PATCH
    data_selector: object
- name: positions
  endpoint:
    path: /back-office/accounts/{accountID}/summary/positions
    method: GET
    data_selector: object
- name: retrieve_order_by_order_number
  endpoint:
    path: /back-office/orders/byOrderNo/{orderNo}
    method: GET
    data_selector: Order
- name: Retrieve Account Transaction Summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/transactions
    method: GET
    data_selector: details
    params: {}
- name: account_transactions
  endpoint:
    path: /accounts/accountID/summary/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: order
  endpoint:
    path: /back-office/orders/byOrderNo/{orderNo}
    method: GET
    data_selector: object
- name: account_transactions
  endpoint:
    path: /back-office/accounts/{accountID}/transactions
    method: GET
    data_selector: transactions
    params:
      from: string
      to: string
      limit: number
      offset: string
      direction: string
- name: transactions
  endpoint:
    path: /back-office/accounts/{accountID}/transactions
    method: GET
    data_selector: array
    params: {}
- name: positions
  endpoint:
    path: /back-office/accounts/{accountID}/summary/positions
    method: GET
    data_selector: positionsValue
    params: {}
- name: create_instrument_exchange
  endpoint:
    path: /back-office/exchanges
    method: POST
- name: exchanges
  endpoint:
    path: /back-office/exchanges
    method: POST
    data_selector: object
    params: {}
- name: Retrieve Account Transaction Summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/transactions
    method: GET
- name: List Account Transactions
  endpoint:
    path: /get_accounts-accountid-transactions
    method: GET
- name: exchanges
  endpoint:
    path: /back-office/exchanges
    method: PATCH
- name: account_transaction_summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/transactions
    method: GET
    data_selector: transactions
- name: exchanges
  endpoint:
    path: /back-office/exchanges
    method: PATCH
    data_selector: object
- name: account_transactions
  endpoint:
    path: /back-office/accounts/{accountID}/transactions
    method: GET
    data_selector: transactions
    params:
      from: required
      to: required
      limit: optional
      offset: optional
      direction: optional
- name: account_instrument_exchanges
  endpoint:
    path: /back-office/accounts/{accountID}/summary/exchanges
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /back-office/accounts/accountID/transactions
    method: GET
    data_selector: array
- name: exchange_history
  endpoint:
    path: /accounts/{accountID}/reports/exchange-history
    method: GET
    data_selector: exchanges
- name: create_instrument_exchange
  endpoint:
    path: /back-office/exchanges
    method: POST
- name: exchanges
  endpoint:
    path: /back-office/exchanges
    method: POST
- name: commission_schedules
  endpoint:
    path: /accounts/accountID/commissions
    method: GET
    data_selector: array of objects
- name: update_instrument_exchange
  endpoint:
    path: /back-office/exchanges
    method: PATCH
- name: exchanges
  endpoint:
    path: /back-office/exchanges
    method: PATCH
- name: supported_countries
  endpoint:
    path: /back-office/countries
    method: GET
    data_selector: ListOfAllowedCountry
    params:
      status: ACTIVE
- name: exchanges
  endpoint:
    path: /back-office/accounts/{accountID}/summary/exchanges
    method: GET
    data_selector: object
- name: correspondent_report
  endpoint:
    path: /correspondantReport
    method: GET
    data_selector: url
    params:
      date: required
- name: Account Instrument Exchange History
  endpoint:
    path: /back-office/accounts/{accountID}/reports/exchange-history
    method: GET
    data_selector: exchangeHistory
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    params:
      frequency: DWMY
      from: date
      to: date
- name: exchanges
  endpoint:
    path: /accounts/{accountID}/reports/exchange-history
    method: GET
    data_selector: exchanges
- name: commission_schedules
  endpoint:
    path: /back-office/accounts/{accountID}/commissions
    method: GET
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    data_selector: object
    params:
      frequency: D
- name: commission_schedules
  endpoint:
    path: /accounts/{accountID}/commissions
    method: GET
    data_selector: array of objects
- name: account_violations
  endpoint:
    path: /back-office/accounts/{accountID}/violations
    method: GET
- name: account_violations
  endpoint:
    path: /back-office/accounts/{accountID}/violations
    method: GET
- name: supported_countries
  endpoint:
    path: /back-office/countries
    method: GET
    data_selector: ListOfAllowedCountry
    params:
      status: ACTIVE
- name: account_violations_summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/violations
    method: GET
    data_selector: object
    params: {}
- name: correspondent_report
  endpoint:
    path: /back-office/correspondantReport
    method: GET
    data_selector: url
    params:
      date: string
- name: account_statements
  endpoint:
    path: /back-office/accounts/{accountID}/statements
    method: GET
    data_selector: response
- name: account_statements
  endpoint:
    path: /back-office/accounts/{accountID}/statements
    method: GET
    data_selector: statementObj
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    params:
      frequency: DWMY
      from: date
      to: date
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    data_selector: performance
    params:
      frequency: D
- name: account_statements
  endpoint:
    path: /apis/reference/get_accounts-accountid-statements
    method: GET
- name: retrieve_statement
  endpoint:
    path: /apis/reference/get_statements-accountid-filekey
    method: GET
- name: goodFaithViolations
  endpoint:
    path: /back-office/accounts/{accountID}/violations
    method: GET
    data_selector: goodFaithViolations
- name: Retrieve Statement
  endpoint:
    path: /back-office/statements/{accountID}/{fileKey}
    method: GET
    data_selector: response
- name: account_violations_summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/violations
    method: GET
    data_selector: ''
- name: account_statements
  endpoint:
    path: /back-office/statements/accountID/fileKey
    method: GET
    data_selector: object
    params: {}
- name: account_trade_confirmations
  endpoint:
    path: /back-office/accounts/{accountID}/confirms
    method: GET
    data_selector: response
    params: {}
- name: account_violations
  endpoint:
    path: /back-office/accounts/{accountID}/summary/violations
    method: GET
    data_selector: object
- name: trade_confirmations
  endpoint:
    path: /back-office/accounts/{accountID}/confirms
    method: GET
    data_selector: tradeConfirmObj
- name: account_statements
  endpoint:
    path: /back-office/accounts/{accountID}/statements
    method: GET
- name: account_beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: POST
- name: account_statements
  endpoint:
    path: /back-office/accounts/accountID/statements
    method: GET
- name: beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: POST
    data_selector: primary
    params: {}
- name: account_tax_statements
  endpoint:
    path: /taxforms
    method: GET
    data_selector: taxStatementObj
- name: beneficiaries
  endpoint:
    path: /accounts/{accountID}/beneficiaries
    method: GET
    data_selector: primary
    params: {}
- name: beneficiaries
  endpoint:
    path: /post_accounts-accountid-beneficiaries
    method: post
- name: retrieve_statement
  endpoint:
    path: /back-office/statements/{accountID}/{fileKey}
    method: GET
    data_selector: response
- name: upload_physical_document
  endpoint:
    path: /back-office/documents
    method: POST
- name: account_statements
  endpoint:
    path: /apis/reference/get_accounts-accountid-statements
    method: GET
- name: account_tax_statements
  endpoint:
    path: /apis/reference/get_accounts-accountid-taxforms
    method: GET
- name: account_trade_confirmations
  endpoint:
    path: /apis/reference/get_accounts-accountid-confirms
    method: GET
- name: physical_documents
  endpoint:
    path: /back-office/documents
    method: POST
    data_selector: object
- name: user_physical_documents
  endpoint:
    path: /back-office/users/{userID}/documents
    method: GET
- name: account_trade_confirmations
  endpoint:
    path: /accounts/accountID/confirms
    method: GET
    data_selector: tradeConfirmObj
- name: list_user_physical_documents
  endpoint:
    path: /users/{userID}/documents
    method: GET
    data_selector: Documents
- name: retrieve_physical_document_url
  endpoint:
    path: /documents/documentid/url
    method: GET
    data_selector: url
- name: account_beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: POST
- name: beneficiaries
  endpoint:
    path: /accounts/{accountID}/beneficiaries
    method: POST
    data_selector: beneficiariesResObject
- name: retrieve_physical_document_url
  endpoint:
    path: /back-office/documents/documentID/url
    method: GET
    data_selector: url
- name: account_beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: GET
    data_selector: beneficiaries
    params:
      accountID: string
- name: linked_bank_accounts
  endpoint:
    path: /back-office/users/{userID}/bank-accounts
    method: GET
    data_selector: bank_accounts
    params:
      userID: string
- name: account_beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: GET
    data_selector: primary
- name: linked_bank_accounts
  endpoint:
    path: /users/userID/bank-accounts
    method: GET
    data_selector: BankAccount
- name: beneficiaries
  endpoint:
    path: /post/accounts/accountid/beneficiaries
    method: POST
    data_selector: records
- name: user_accounts
  endpoint:
    path: /get/users/userid/accounts
    method: GET
    data_selector: records
- name: link_bank_account
  endpoint:
    path: /back-office/bank-accounts
    method: POST
    data_selector: null
    params: {}
- name: delete_account_beneficiaries
  endpoint:
    path: /delete_accounts-accountid-beneficiaries
    method: DELETE
- name: linked_bank_accounts
  endpoint:
    path: /linked-bank-accounts
    method: GET
    data_selector: object
- name: linked_bank_account
  endpoint:
    path: /back-office/bank-accounts/{bankAccountID}
    method: GET
- name: upload_physical_document
  endpoint:
    path: /back-office/documents
    method: POST
    data_selector: response
    params: {}
- name: linked_bank_account
  endpoint:
    path: /back-office/bank-accounts/bankAccountID
    method: GET
    data_selector: object
    params: {}
- name: physical_documents
  endpoint:
    path: /back-office/documents
    method: POST
    data_selector: object
    params: {}
- name: linked_bank_accounts
  endpoint:
    path: /apis/reference/get_users-userid-bank-accounts
    method: GET
    data_selector: bank_accounts
- name: linked_bank_account
  endpoint:
    path: /bank-accounts/{bankAccountID}
    method: PATCH
- name: list_user_physical_documents
  endpoint:
    path: /back-office/users/{userID}/documents
    method: GET
- name: delete_linked_bank_account
  endpoint:
    path: /back-office/bank-accounts/{bankAccountID}
    method: DELETE
    data_selector: '204'
    params: {}
- name: retrieve_physical_document_url
  endpoint:
    path: /back-office/documents/{documentID}/url
    method: GET
    data_selector: url
- name: user_linked_bank_accounts
  endpoint:
    path: /back-office/users/{userID}/bank-accounts
    method: GET
- name: linked_bank_accounts
  endpoint:
    path: /linked-bank-accounts
    method: GET
    data_selector: object
- name: deposits
  endpoint:
    path: /deposits
    method: GET
    data_selector: object
- name: linked_bank_accounts
  endpoint:
    path: /users/userID/bank-accounts
    method: GET
    data_selector: array
- name: account_deposits
  endpoint:
    path: /back-office/accounts/{accountID}/funding/deposits
    method: GET
- name: link_bank_account
  endpoint:
    path: /back-office/bank-accounts
    method: POST
- name: linked_bank_accounts
  endpoint:
    path: /linked-bank-accounts
    method: GET
    data_selector: object
- name: user_deposits
  endpoint:
    path: /apis/reference/get_users-userid-funding-deposits
    method: GET
    data_selector: records
- name: linked_bank_account
  endpoint:
    path: /back-office/bank-accounts/{bankAccountID}
    method: GET
    data_selector: response
- name: user_deposits
  endpoint:
    path: /back-office/users/{userID}/funding/deposits
    method: GET
    data_selector: DepositsByUserID
- name: linked_bank_account
  endpoint:
    path: /back-office/bank-accounts/bankAccountID
    method: GET
    data_selector: object
    params: {}
- name: user_recurring_deposits
  endpoint:
    path: /back-office/users/{userID}/recurring-deposits
    method: GET
    data_selector: recurring_deposits
    params:
      userID: string
- name: Linked Bank Accounts
  endpoint:
    path: /api/reference/get_users-userid-bank-accounts
    method: GET
- name: Accounts
  endpoint:
    path: /api/reference/post_accounts
    method: POST
- name: Users
  endpoint:
    path: /api/reference/post_users
    method: POST
- name: user_recurring_deposits
  endpoint:
    path: /users/{userID}/recurring-deposits
    method: GET
    data_selector: DepositByUserID
- name: linked_bank_account
  endpoint:
    path: /back-office/bank-accounts/{bankAccountID}
    method: PATCH
- name: create_deposit
  endpoint:
    path: /back-office/funding/deposits
    method: POST
    data_selector: response
    params: {}
- name: Delete Linked Bank Account
  endpoint:
    path: /back-office/bank-accounts/{bankAccountID}
    method: DELETE
    data_selector: null
    params:
      bankAccountID: string
- name: Create Deposit
  endpoint:
    path: /deposits
    method: POST
    data_selector: object
- name: Retrieve Deposit
  endpoint:
    path: /get_funding-deposits-depositid
    method: GET
    data_selector: object
- name: List User Deposits
  endpoint:
    path: /get_users-userid-funding-deposits
    method: GET
    data_selector: object
- name: account_virtual_bank_account
  endpoint:
    path: /back-office/accounts/{accountID}/funding/deposit-instructions
    method: GET
- name: deposit
  endpoint:
    path: /back-office/funding/deposits/{depositID}
    method: GET
- name: deposit
  endpoint:
    path: /funding/deposits/depositID
    method: GET
    data_selector: object
    params: {}
- name: account_deposits
  endpoint:
    path: /back-office/accounts/{accountID}/funding/deposits
    method: GET
- name: recurring_deposits
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: GET
    data_selector: response
- name: recurring_deposit
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: GET
- name: update_recurring_deposit
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: PATCH
- name: user_deposits
  endpoint:
    path: /apis/reference/get_users-userid-funding-deposits
    method: GET
    data_selector: deposits
- name: account_deposits
  endpoint:
    path: /apis/reference/get_accounts-accountid-funding-deposits
    method: GET
    data_selector: deposits
- name: recurring_deposit
  endpoint:
    path: /funding/recurring-deposits/recurringID
    method: PATCH
- name: Delete Recurring Deposit
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: DELETE
    data_selector: ''
- name: User Deposits
  endpoint:
    path: /back-office/users/userID/funding/deposits
    method: GET
- name: recurring_deposit
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: DELETE
- name: user_recurring_deposits
  endpoint:
    path: /users/userID/recurring-deposits
    method: GET
- name: Deposit Status
  endpoint:
    path: /apis/reference/deposit-status
    method: GET
- name: deposit_status
  endpoint:
    path: /apis/reference/deposit-status
    method: GET
    data_selector: status
    params: {}
- name: Create Deposit
  endpoint:
    path: /back-office/funding/deposits
    method: POST
- name: deposits
  endpoint:
    path: /apis/reference/deposits
    method: POST
- name: recurring_deposits
  endpoint:
    path: /apis/reference/get_users-userid-recurring-deposits
    method: GET
- name: retrieve_deposit
  endpoint:
    path: /apis/reference/get_funding-deposits-depositid
    method: GET
- name: withdrawals
  endpoint:
    path: /accounts/{accountID}/funding/redemptions
    method: GET
    data_selector: array
- name: deposit
  endpoint:
    path: /back-office/funding/deposits/{depositID}
    method: GET
- name: deposit
  endpoint:
    path: /funding/deposits/{depositID}
    method: GET
    data_selector: object
    params: {}
- name: withdrawals
  endpoint:
    path: /back-office/users/userID/funding/redemptions
    method: GET
    data_selector: array
- name: recurring_deposits
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: GET
    data_selector: response
    params: {}
- name: withdrawal
  endpoint:
    path: /back-office/funding/redemptions
    method: POST
    data_selector: response
    params:
      accountNo: string
      amount: number
      currency: string
      type: string
      bankAccountID: string
      details: object
      iraTaxWithholdings: object
      liquidate: boolean
      fees: array
      note: string
      settlementProfileID: string
- name: recurring_deposit
  endpoint:
    path: /funding/recurring-deposits/{recurringID}
    method: GET
    data_selector: object
- name: Update Recurring Deposit
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: PATCH
- name: withdrawals
  endpoint:
    path: /apis/reference/get_funding-redemptions
    method: GET
    data_selector: object
    params: {}
- name: user_withdrawals
  endpoint:
    path: /apis/reference/get_users-userid-funding-redemptions
    method: GET
    data_selector: object
    params: {}
- name: recurring_deposit
  endpoint:
    path: /funding/recurring-deposits/{recurringID}
    method: PATCH
    data_selector: object
- name: withdrawals
  endpoint:
    path: /back-office/funding/redemptions
    method: GET
    data_selector: withdrawals
    params:
      status: required
      type: required
- name: delete_recurring_deposit
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: DELETE
    data_selector: ''
- name: withdrawals
  endpoint:
    path: /get_funding-redemptions
    method: GET
    data_selector: array
    params:
      status: STARTED
      type: ACH
- name: recurring_deposit
  endpoint:
    path: /back-office/funding/recurring-deposits/{recurringID}
    method: DELETE
- name: Deposit Status
  endpoint:
    path: /apis/reference/deposit-status
    method: GET
- name: withdrawal
  endpoint:
    path: /back-office/funding/redemptions/{redemptionID}
    method: GET
- name: Deposit Status
  endpoint:
    path: /apis/reference/deposit-status
    method: GET
    data_selector: ''
    params: {}
- name: account_withdrawals
  endpoint:
    path: /back-office/accounts/{accountID}/funding/redemptions
    method: GET
    data_selector: response
    params:
      accountID: string
- name: withdrawal
  endpoint:
    path: /{redemptionID}
    method: GET
    data_selector: object
    params: {}
- name: withdrawals
  endpoint:
    path: /
    method: GET
    data_selector: array
    params: {}
- name: withdrawals
  endpoint:
    path: /funding/redemptions
    method: GET
- name: user_withdrawals
  endpoint:
    path: /get_users-userid-funding-redemptions
    method: GET
- name: Users
  endpoint:
    path: /post_users
    method: POST
- name: Accounts
  endpoint:
    path: /post_accounts
    method: POST
- name: Instruments
  endpoint:
    path: /get_instruments
    method: GET
- name: Orders
  endpoint:
    path: /get_accounts-accountid-summary-orders
    method: GET
- name: Transactions
  endpoint:
    path: /get_accounts-accountid-summary-transactions
    method: GET
- name: Withdrawals
  endpoint:
    path: /get_accounts-accountid-funding-redemptions
    method: GET
- name: Withdrawal
  endpoint:
    path: /apis/reference/get_funding-redemptions
    method: GET
- name: Create ACATS Transfer
  endpoint:
    path: /back-office/asset-transfers/acats
    method: POST
- name: withdrawals
  endpoint:
    path: /users/{userID}/funding/redemptions
    method: GET
    data_selector: array
- name: create_withdrawal
  endpoint:
    path: /back-office/funding/redemptions
    method: POST
- name: minor_graduation_transfer
  endpoint:
    path: /back-office/asset-transfers/minor-graduation
    method: POST
- name: withdrawals
  endpoint:
    path: /withdrawals
    method: POST
    data_selector: object
    params: {}
- name: user_withdrawals
  endpoint:
    path: /get_users-userid-funding-redemptions
    method: GET
    data_selector: object
    params: {}
- name: ACAT Transfer
  endpoint:
    path: /back-office/asset-transfers/acats
    method: PATCH
- name: withdrawals
  endpoint:
    path: /withdrawals
    method: GET
    data_selector: array
    params:
      status: STARTED
      type: ACH
- name: retrieve_withdrawal
  endpoint:
    path: /get_funding-redemptions-redemptionid
    method: GET
    data_selector: array
    params: {}
- name: transfer
  endpoint:
    path: /back-office/asset-transfers/{assetTransferID}
    method: GET
- name: withdrawal
  endpoint:
    path: /back-office/funding/redemptions/{redemptionID}
    method: GET
- name: asset_transfer
  endpoint:
    path: /asset-transfers/{assetTransferID}
    method: GET
- name: list_transfers
  endpoint:
    path: /asset-transfers
    method: GET
- name: withdrawal
  endpoint:
    path: /{redemptionID}
    method: GET
    data_selector: object
    params: {}
- name: withdrawal_status
  endpoint:
    path: /get_accounts-accountid-funding-redemptions
    method: GET
    data_selector: records
- name: transfers
  endpoint:
    path: /asset-transfers
    method: GET
    params:
      status: STARTED,PENDING,FAILED,SUCCESSFUL,ON_HOLD
      type: ACAT,TEEN,CASH,PROMOTIONAL,REWARD,STOCK
      limit: ''
      offset: ''
      direction: prev,next
- name: withdrawal
  endpoint:
    path: /apis/reference/get_funding-redemptions
    method: GET
- name: retrieve_withdrawal
  endpoint:
    path: /apis/reference/get_funding-redemptions-redemptionid
    method: GET
- name: list_transfers
  endpoint:
    path: /asset-transfers
    method: GET
    data_selector: data
    params:
      type: ACAT
- name: Create ACATS Transfer
  endpoint:
    path: /back-office/asset-transfers/acats
    method: POST
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlements
    params:
      from: ''
      to: ''
      status: ''
      settlementProfileID: ''
      limit: ''
      offset: ''
      direction: ''
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlements
- name: minor_graduation_transfer
  endpoint:
    path: /back-office/asset-transfers/minor-graduation
    method: POST
- name: settlement
  endpoint:
    path: /apis/reference/get_settlements
    method: GET
    data_selector: object
- name: cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations
    method: GET
    data_selector: ''
    params:
      to: ''
      from: ''
      status: ''
- name: Update ACAT Transfer
  endpoint:
    path: /back-office/asset-transfers/acats
    method: PATCH
- name: cashless_reconciliation
  endpoint:
    path: /funding/reconciliations
    method: GET
- name: settlement
  endpoint:
    path: /settlements
    method: GET
- name: asset_transfer
  endpoint:
    path: /asset-transfers
    method: GET
- name: cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/{reconciliationID}
    method: GET
- name: transfer
  endpoint:
    path: /back-office/asset-transfers/{assetTransferID}
    method: GET
- name: reconciliation
  endpoint:
    path: /{reconciliationID}
    method: GET
    data_selector: ReconciliationDetails
- name: cashless_reconciliations
  endpoint:
    path: ''
    method: GET
    data_selector: reconciliations
- name: asset_transfer
  endpoint:
    path: /asset-transfers
    method: GET
    data_selector: records
- name: cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/{reconciliationID}
    method: PATCH
- name: transfers
  endpoint:
    path: /back-office/asset-transfers
    method: GET
    data_selector: records
    params: {}
- name: cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/reconciliationID
    method: PATCH
    data_selector: RECONCILIATION_DETAILS
    params: {}
- name: asset_transfers
  endpoint:
    path: /asset-transfers
    method: GET
    data_selector: data
- name: DVP RVP Report
  endpoint:
    path: /back-office/accounts/{accountID}/reports/daily-trade-summary
    method: POST
- name: DVP RVP Reports
  endpoint:
    path: /accounts/accountID/reports/daily-trade-summary
    method: POST
    data_selector: object
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: records
    params:
      from: string
      to: string
      status: string
      settlementProfileID: string
      limit: integer
      offset: string
      direction: string
- name: DVP RVP Reports
  endpoint:
    path: /back-office/accounts/{accountID}/reports/daily-trade-summary
    method: GET
    data_selector: reports
    params:
      status: Processing,Successful
      from: date
      to: date
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlements
- name: DVP RVP Reports
  endpoint:
    path: /accounts/accountID/reports/daily-trade-summary
    method: GET
    data_selector: array
    params: {}
- name: settlement
  endpoint:
    path: /apis/reference/get_settlements
    method: GET
    data_selector: object
    params: {}
- name: DVP RVP
  endpoint:
    path: /back-office/accounts/{accountID}/reports/daily-trade-summary/{reportID}
    method: GET
    data_selector: ''
- name: cashless_reconciliations
  endpoint:
    path: /back-office/funding/reconciliations
    method: GET
    params:
      to: string
      from: string
      status: string
- name: DVP RVP Report
  endpoint:
    path: /get_accounts-accountid-reports-daily-trade-summary-reportid
    method: GET
- name: List DVP RVP Reports
  endpoint:
    path: /get_accounts-accountid-reports-daily-trade-summary
    method: GET
- name: cashless_reconciliation
  endpoint:
    path: /get_funding-reconciliations
    method: GET
- name: settlement
  endpoint:
    path: /get_settlements
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/{reconciliationID}
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscriptionID
- name: list_subscriptions
  endpoint:
    path: /get_users-userid-subscriptions
    method: GET
- name: cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/reconciliationID
    method: GET
- name: list_cashless_reconciliations
  endpoint:
    path: /back-office/funding/reconciliations
    method: GET
- name: update_cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/reconciliationid
    method: PATCH
- name: subscriptions
  endpoint:
    path: /back-office/users/{userID}/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: Cashless Reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/{reconciliationID}
    method: PATCH
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: array
- name: cashless_reconciliation
  endpoint:
    path: /back-office/funding/reconciliations/reconciliationID
    method: PATCH
    data_selector: ReconciliationDetails
- name: DVP RVP Report
  endpoint:
    path: /back-office/accounts/{accountID}/reports/daily-trade-summary
    method: POST
- name: delete_subscription
  endpoint:
    path: /delete_subscriptions-subscriptionid
    method: DELETE
    data_selector: User's Subscription removal was Received.
- name: DVP_RVP_Report
  endpoint:
    path: /accounts/{accountID}/reports/daily-trade-summary
    method: GET
- name: quote
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params:
      symbols: string
      instrumentIDs: string
      isins: string
- name: quotes
  endpoint:
    path: /back-office/quotes
    method: GET
    data_selector: EquityQuote
    params: {}
- name: quote
  endpoint:
    path: /back-office/quotes/vdr
    method: GET
    data_selector: Response
    params:
      symbols: string
- name: DVP RVP
  endpoint:
    path: /accounts/accountID/reports/daily-trade-summary
    method: GET
- name: DVP RVP
  endpoint:
    path: /back-office/accounts/{accountID}/reports/daily-trade-summary/{reportID}
    method: GET
- name: quote
  endpoint:
    path: /apis/reference/get_quotes
    method: GET
    data_selector: object
- name: chart
  endpoint:
    path: /bars
    method: GET
    data_selector: data
    params:
      instrumentID: string
      compression: string
      dateStart: string
      dateEnd: string
      tradingDays: string
- name: DVP RVP Report
  endpoint:
    path: /accounts/accountID/reports/daily-trade-summary/reportID
    method: GET
    data_selector: object
    params: {}
- name: List DVP RVP Reports
  endpoint:
    path: /accounts/accountID/reports/daily-trade-summary
    method: GET
    data_selector: object
    params: {}
- name: depth_of_book
  endpoint:
    path: /back-office/quotes/depth
    method: POST
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /back-office/subscriptions
    method: POST
    data_selector: null
    params: {}
- name: quotes
  endpoint:
    path: /quotes
    method: POST
    data_selector: QuoteResponse
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscriptionID
- name: subscriptions
  endpoint:
    path: /back-office/users/{userID}/subscriptions
    method: GET
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
- name: subscriptions
  endpoint:
    path: /back-office/users/{userID}/subscriptions
    method: GET
    data_selector: array
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
    data_selector: object
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations/{allocationID}
    method: GET
    data_selector: response
- name: Users
  endpoint:
    path: /apis/reference/post_users
    method: POST
- name: Accounts
  endpoint:
    path: /apis/reference/post_accounts
    method: POST
- name: Instruments
  endpoint:
    path: /apis/reference/get_instruments
    method: GET
- name: Orders
  endpoint:
    path: /apis/reference/get_accounts-accountid-summary-orders
    method: GET
- name: trade_allocation
  endpoint:
    path: /{allocationID}
    method: GET
    data_selector: object
    params: {}
- name: trade_allocations
  endpoint:
    path: /back-office/users/{userID}/managed/allocations
    method: GET
- name: delete_subscription
  endpoint:
    path: /delete_subscriptions-subscriptionid
    method: DELETE
    data_selector: null
    params:
      subscriptionID: required
- name: allocation
  endpoint:
    path: /back-office/users/{userID}/managed/allocations
    method: GET
    data_selector: array
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: response
    params:
      symbols: string
      instrumentIDs: string
      isins: string
- name: orders_summary
  endpoint:
    path: /back-office/users/{userID}/managed/orders/summary
    method: GET
    params:
      date: YYYY-MM-DD
- name: quotes
  endpoint:
    path: /back-office/quotes
    method: GET
- name: quote
  endpoint:
    path: /quotes/vdr
    method: GET
    data_selector: response
    params:
      symbols: string
- name: orders_allocations_summary
  endpoint:
    path: /back-office/users/{userID}/managed/orders/summary
    method: GET
    data_selector: orders
- name: quote
  endpoint:
    path: /apis/reference/get_quotes
    method: GET
    data_selector: object
- name: allocations
  endpoint:
    path: /back-office/users/{userID}/managed/orders
    method: GET
    params:
      from: string
      to: string
- name: chart
  endpoint:
    path: /bars
    method: GET
    data_selector: data
    params:
      instrumentID: required
      compression: required
      dateStart: required
      dateEnd: required
      tradingDays: ''
- name: orders
  endpoint:
    path: /back-office/users/{userID}/managed/orders
    method: GET
    data_selector: ListOrdersAllocationsByUserID.Orders
- name: beginning_of_day_holdings
  endpoint:
    path: /back-office/users/{userID}/managed/bod
    method: GET
    data_selector: sub_accounts
    params: {}
- name: depth_of_book
  endpoint:
    path: /back-office/quotes/depth
    method: POST
- name: beginning_of_day
  endpoint:
    path: /back-office/users/{userID}/managed/bod
    method: GET
- name: quotes_depth
  endpoint:
    path: /back-office/quotes/depth
    method: POST
    data_selector: QuoteResponse
- name: fund
  endpoint:
    path: /back-office/managed/funds/{fundID}
    method: GET
    data_selector: fund
    params: {}
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
- name: fund
  endpoint:
    path: /back-office/managed/funds/{fundID}
    method: GET
    data_selector: object
    params: {}
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations/{allocationID}
    method: GET
- name: funds
  endpoint:
    path: /back-office/users/{userID}/managed/funds
    method: GET
- name: funds
  endpoint:
    path: /back-office/users/{userID}/managed/funds
    method: GET
    data_selector: array
    params: {}
- name: trade_allocation
  endpoint:
    path: /{allocationID}
    method: GET
    data_selector: object
    params: {}
- name: portfolio
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
- name: trade_allocations
  endpoint:
    path: /back-office/users/{userID}/managed/allocations
    method: GET
    data_selector: allocations
- name: trade_allocation
  endpoint:
    path: /back-office/users/{userID}/managed/allocations
    method: GET
    data_selector: array
- name: portfolio
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
    data_selector: object
- name: funds_by_advisor
  endpoint:
    path: /apis/reference/get_users-userid-managed-funds
    method: GET
- name: portfolio_by_id
  endpoint:
    path: /apis/reference/get_managed-portfolios-portfolioid
    method: GET
- name: portfolio
  endpoint:
    path: /back-office/managed/portfolios/{portfolioID}
    method: GET
- name: orders_allocations_summary
  endpoint:
    path: /back-office/users/{userID}/managed/orders/summary
    method: GET
- name: portfolio
  endpoint:
    path: /back-office/managed/portfolios/{portfolioID}
    method: GET
    data_selector: object
    params: {}
- name: allocations_by_advisor
  endpoint:
    path: /back-office/users/{userID}/managed/orders
    method: GET
    params:
      from: string
      to: string
- name: Update Portfolio
  endpoint:
    path: /back-office/managed/portfolios/{portfolioID}
    method: PATCH
- name: ListOrdersAllocationsByUserID
  endpoint:
    path: /back-office/users/{userID}/managed/orders
    method: GET
    data_selector: ListOrdersAllocationsByUserID.Orders
- name: Retrieve Portfolio
  endpoint:
    path: /apis/reference/get_managed-portfolios-portfolioid
    method: GET
    data_selector: object
    params: {}
- name: List Portfolios by Advisor
  endpoint:
    path: /apis/reference/get_users-userid-managed-portfolio
    method: GET
    data_selector: object
    params: {}
- name: beginning_of_day
  endpoint:
    path: /back-office/users/{userID}/managed/bod
    method: GET
- name: portfolio
  endpoint:
    path: /users/{userID}/managed/portfolio
    method: GET
    data_selector: array
- name: fund
  endpoint:
    path: /back-office/managed/funds/{fundID}
    method: GET
- name: Autopilot Run
  endpoint:
    path: /managed/autopilot/{partnerID}
    method: POST
- name: fund
  endpoint:
    path: /back-office/managed/funds/{fundID}
    method: GET
- name: autopilot_run
  endpoint:
    path: /autopilot/{partnerID}
    method: POST
    data_selector: object
    params: {}
- name: Retrieve Autopilot Run
  endpoint:
    path: /back-office/managed/autopilot/{rebalanceRunID}
    method: GET
    data_selector: response
    params: {}
- name: funds
  endpoint:
    path: /back-office/users/{userID}/managed/funds
    method: GET
    data_selector: array
- name: autopilot_run
  endpoint:
    path: /back-office/managed/autopilot/{rebalanceRunID}
    method: GET
    data_selector: object
- name: create_portfolio
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
    data_selector: ''
- name: portfolio
  endpoint:
    path: /back-office/accounts/{accountID}/portfolio
    method: GET
    data_selector: response
- name: portfolios
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
    data_selector: object
- name: portfolio
  endpoint:
    path: /back-office/accounts/{accountID}/portfolio
    method: GET
    data_selector: object
    params: {}
- name: portfolio
  endpoint:
    path: /managed/portfolios/{portfolioID}
    method: GET
- name: portfolio
  endpoint:
    path: /{portfolioID}
    method: GET
    data_selector: object
- name: autopilot_runs
  endpoint:
    path: /users/{userID}/managed/autopilot
    method: GET
    data_selector: response
    params: {}
- name: portfolio
  endpoint:
    path: /back-office/managed/portfolios/{portfolioID}
    method: PATCH
- name: autopilot
  endpoint:
    path: /back-office/users/{userID}/managed/autopilot
    method: GET
    data_selector: array
- name: portfolio
  endpoint:
    path: /managed/portfolios/{portfolioID}
    method: PATCH
- name: accounts_events
  endpoint:
    path: /apis/reference/accounts-events
    method: GET
    data_selector: events
- name: portfolios
  endpoint:
    path: /back-office/users/{userID}/managed/portfolio
    method: GET
- name: account_commission_update
  endpoint:
    path: /apis/reference/accounts-events
    method: GET
    data_selector: payload
- name: portfolio
  endpoint:
    path: /back-office/users/{userID}/managed/portfolio
    method: GET
    data_selector: array
- name: allocation_events
  endpoint:
    path: /allocation-events
    method: GET
    data_selector: payload
    params: {}
- name: allocations_rejected
  endpoint:
    path: /allocation-events/allocations-rejected
    method: GET
    data_selector: payload
- name: Create Autopilot Run
  endpoint:
    path: /back-office/managed/autopilot/{partnerID}
    method: POST
- name: autopilot_run
  endpoint:
    path: /managed/autopilot/{partnerID}
    method: POST
    data_selector: ''
    params: {}
- name: asset_transfer
  endpoint:
    path: /apis/reference/post_asset-transfers-acats
    method: POST
- name: asset_transfer_updated
  endpoint:
    path: /apis/reference/assets.transfer.updated
    method: POST
- name: asset_transfer_completed
  endpoint:
    path: /apis/reference/acat-events
    method: GET
    data_selector: payload
    params: {}
- name: Retrieve Autopilot Run
  endpoint:
    path: /back-office/managed/autopilot/{rebalanceRunID}
    method: GET
    data_selector: response
    params: {}
- name: cancel_rebill_events
  endpoint:
    path: /cancel-rebill-events
    method: GET
    data_selector: payload
    params: {}
- name: autopilot_run
  endpoint:
    path: /back-office/managed/autopilot/{rebalanceRunID}
    method: GET
    data_selector: object
- name: cancel_rebill
  endpoint:
    path: /transfers/cancelRebill
    method: GET
    data_selector: payload
    params: {}
- name: portfolio
  endpoint:
    path: /back-office/accounts/{accountID}/portfolio
    method: GET
- name: cancel_rebill_completed
  endpoint:
    path: /cancel_rebill/completed
    method: POST
    data_selector: payload
    params: {}
- name: portfolio
  endpoint:
    path: /back-office/accounts/{accountID}/portfolio
    method: GET
    data_selector: object
- name: Corporate Actions Events
  endpoint:
    path: /corporate-actions-events
    method: GET
    data_selector: events
    params: {}
- name: autopilot_runs
  endpoint:
    path: /back-office/users/{userID}/managed/autopilot
    method: GET
    data_selector: response
    params: {}
- name: Cancel Rebill Events
  endpoint:
    path: /apis/reference/cancel-rebill-events
    method: GET
    data_selector: records
- name: Merger & Acquisitions Events
  endpoint:
    path: /apis/reference/merger-acquisitions-events
    method: GET
    data_selector: records
- name: autopilot_runs
  endpoint:
    path: /back-office/users/{userID}/managed/autopilot
    method: GET
    data_selector: array
- name: merger_acquisitions_events
  endpoint:
    path: /apis/reference/merger-acquisitions-events
    method: GET
    data_selector: events
    params: {}
- name: first_position_update_event
  endpoint:
    path: /apis/reference/merger-acquisitions-events/first-position-update
    method: GET
    data_selector: payload
- name: accounts_created
  endpoint:
    path: /apis/reference/accounts-events
    method: GET
    data_selector: payload
- name: accounts_updated
  endpoint:
    path: /apis/reference/accounts-events
    method: GET
    data_selector: payload
- name: account_commission_update
  endpoint:
    path: /apis/reference/accounts-events
    method: GET
    data_selector: payload
    params: {}
- name: spinoff_event
  endpoint:
    path: /apis/reference/spin-off-events
    method: GET
    data_selector: payload
- name: allocation_events
  endpoint:
    path: /allocation-events
    method: GET
    data_selector: payload
- name: allocations_rejected
  endpoint:
    path: /apis/reference/allocation-events
    method: GET
    data_selector: payload
    params: {}
- name: Stock Split Events
  endpoint:
    path: /apis/reference/stock-splits
    method: GET
- name: stock_splits
  endpoint:
    path: /apis/reference/stock-splits
    method: GET
    data_selector: payload
    params: {}
- name: asset_transfer
  endpoint:
    path: /apis/reference/post_asset-transfers-acats
    method: POST
    data_selector: payload
- name: asset_transfer_updated
  endpoint:
    path: /apis/reference/assets.transfer.updated
    method: POST
    data_selector: payload
- name: asset_transfer_completed
  endpoint:
    path: /apis/reference/acat-events
    method: GET
    data_selector: payload
    params: {}
- name: ticker_symbol_change_events
  endpoint:
    path: /apis/reference/symbol-change
    method: GET
- name: cancel_rebill
  endpoint:
    path: /apis/reference/cancel-rebill-events
    method: GET
    data_selector: payload
- name: ticker_symbol_change
  endpoint:
    path: /apis/reference/symbol-change
    method: GET
    data_selector: payload
    params: {}
- name: voluntary_tender_events
  endpoint:
    path: /apis/reference/voluntary-tender-offer
    method: GET
    data_selector: payload
- name: cancel_rebill
  endpoint:
    path: /cancel_rebill_events
    method: GET
    data_selector: payload
    params: {}
- name: tender_expires
  endpoint:
    path: /voluntary-tender-events/tender-expires
    method: GET
    data_selector: payload
- name: cancel_rebill_completed
  endpoint:
    path: /cancel-rebill-completed
    method: GET
    data_selector: payload
- name: involuntary_tender_offer_events
  endpoint:
    path: /apis/reference/involuntary-tender-offer
    method: GET
    data_selector: payload
- name: transactions
  endpoint:
    path: /involuntary-tender-offer
    method: GET
    data_selector: payload
- name: Cancel Rebill Events
  endpoint:
    path: /apis/reference/cancel-rebill-events
    method: GET
- name: Merger & Acquisitions Events
  endpoint:
    path: /apis/reference/merger-acquisitions-events
    method: GET
- name: transactions
  endpoint:
    path: /apis/reference/post_auth-tokens
    method: POST
    data_selector: payload
- name: positions
  endpoint:
    path: /apis/reference/get_accounts-accountid-summary-positions
    method: GET
    data_selector: payload
- name: merger_acquisitions_events
  endpoint:
    path: /apis/reference/merger-acquisitions-events
    method: GET
    data_selector: events
    params: {}
- name: position_updated
  endpoint:
    path: /going-private-events/positions.updated
    method: GET
    data_selector: payload
    params: {}
- name: first_position_update_event
  endpoint:
    path: /apis/reference/merger-acquisitions-events
    method: GET
    data_selector: payload
- name: dividend_events
  endpoint:
    path: /apis/reference/dividends-events
    method: GET
- name: spinoff_event
  endpoint:
    path: /spin-off-events
    method: GET
    data_selector: payload
- name: transactions.created
  endpoint:
    path: /apis/reference/dividends-events
    method: GET
    data_selector: payload
    params: {}
- name: Stock Split Events
  endpoint:
    path: /apis/reference/stock-splits
    method: GET
- name: Bond Redemption Events
  endpoint:
    path: /bond-redemption-events
    method: GET
    data_selector: payload
- name: stock_split_event
  endpoint:
    path: /apis/reference/stock-splits
    method: GET
    data_selector: payload
- name: full_redemption_event
  endpoint:
    path: /bond-redemption-events/full
    method: GET
    data_selector: payload
- name: position_update_event
  endpoint:
    path: /bond-redemption-events/updated
    method: GET
    data_selector: payload
- name: positions.updated
  endpoint:
    path: /apis/reference/symbol-change
    method: GET
    data_selector: payload
    params: {}
- name: transactions.created
  endpoint:
    path: /coupon-events
    method: GET
    data_selector: payload
    params: {}
- name: voluntary_tender_events
  endpoint:
    path: /apis/reference/voluntary-tender-offer
    method: GET
    data_selector: payload
- name: Tender Expires
  endpoint:
    path: /voluntary-tender-events/tender-expires
    method: GET
    data_selector: payload
    params: {}
- name: maturity_event
  endpoint:
    path: /apis/reference/bond-maturity-events
    method: GET
    data_selector: payload
- name: positions_updated
  endpoint:
    path: /apis/reference/positions.updated
    method: GET
    data_selector: payload
- name: involuntary_tender_offer_events
  endpoint:
    path: /apis/reference/involuntary-tender-offer
    method: GET
    data_selector: payload
- name: deposit_events
  endpoint:
    path: /apis/reference/deposits-events
    method: GET
    data_selector: payload
- name: transactions.created
  endpoint:
    path: /apis/reference/transactions
    method: GET
    data_selector: payload
- name: deposit_updated
  endpoint:
    path: /apis/reference/deposits-events
    method: GET
    data_selector: payload
    params: {}
- name: going_private_events
  endpoint:
    path: /going-private-events
    method: GET
    data_selector: transactions.created
    params: {}
- name: instruments
  endpoint:
    path: /apis/reference/get_instruments
    method: GET
    data_selector: payload
- name: position_updated
  endpoint:
    path: /going-private-events/positions.updated
    method: GET
    data_selector: payload
- name: instruments.updated
  endpoint:
    path: /apis/reference/instruments-events
    method: GET
    data_selector: payload
- name: KYC Created
  endpoint:
    path: /apis/reference/kyc-events
    method: GET
    data_selector: payload
- name: kyc_updated
  endpoint:
    path: /apis/reference/kyc-events
    method: GET
    data_selector: payload
    params: {}
- name: transactions_created
  endpoint:
    path: /transactions.created
    method: GET
    data_selector: payload
- name: bond_redemption_events
  endpoint:
    path: /apis/reference/bond-redemption-events
    method: GET
    data_selector: payload
    params: {}
- name: linked_bank_accounts
  endpoint:
    path: /apis/reference/get_users-userid-bank-accounts
    method: GET
    data_selector: payload
- name: linked_bank_accounts_deleted
  endpoint:
    path: /apis/reference/linked-bank-accounts-deleted
    method: GET
    data_selector: payload
- name: full_redemption_event
  endpoint:
    path: /path/to/full_redemption_event
    method: POST
    data_selector: payload
- name: position_update_event
  endpoint:
    path: /path/to/position_update_event
    method: POST
    data_selector: payload
- name: Order Events
  endpoint:
    path: /orders-events
    method: GET
    data_selector: payload
- name: transactions
  endpoint:
    path: /coupon-events
    method: GET
    data_selector: payload
    params: {}
- name: order_completed
  endpoint:
    path: /apis/reference/orders/completed
    method: GET
    data_selector: payload
    params: {}
- name: Bond Maturity Events
  endpoint:
    path: /apis/reference/bond-maturity-events
    method: GET
- name: positions
  endpoint:
    path: /get_accounts-accountid-summary-positions
    method: GET
- name: transactions.created
  endpoint:
    path: /apis/reference/bond-maturity-events
    method: POST
    data_selector: payload
- name: positions.updated
  endpoint:
    path: /apis/reference/bond-maturity-events
    method: POST
    data_selector: payload
- name: positions
  endpoint:
    path: /positions
    method: GET
    data_selector: payload
- name: deposit_created
  endpoint:
    path: /apis/reference/deposits-events
    method: GET
    data_selector: payload
- name: trade_allocations
  endpoint:
    path: /apis/reference/get_users-userid-managed-allocations
    method: GET
- name: funds
  endpoint:
    path: /apis/reference/get_users-userid-managed-funds
    method: GET
- name: portfolios
  endpoint:
    path: /apis/reference/get_users-userid-managed-portfolio
    method: GET
- name: autopilot_runs
  endpoint:
    path: /apis/reference/get_users-userid-managed-autopilot
    method: GET
- name: deposit_updated
  endpoint:
    path: /apis/reference/deposits-events
    method: GET
    data_selector: payload
- name: settlement_events
  endpoint:
    path: /settlements
    method: GET
    data_selector: payload
    params: {}
- name: instruments
  endpoint:
    path: /apis/reference/get_instruments
    method: GET
    data_selector: payload
- name: instruments.updated
  endpoint:
    path: /apis/reference/instruments-events
    method: GET
    data_selector: payload
- name: reconciliations.completed
  endpoint:
    path: /reconciliations.completed
    method: GET
    data_selector: payload
- name: settlements.created
  endpoint:
    path: /settlements.created
    method: GET
    data_selector: payload
- name: settlements.updated
  endpoint:
    path: /settlements.updated
    method: GET
    data_selector: payload
- name: settlements.completed
  endpoint:
    path: /settlements.completed
    method: GET
    data_selector: payload
- name: account.exclusions.created
  endpoint:
    path: /account.exclusions.created
    method: GET
    data_selector: payload
- name: account.exclusions.updated
  endpoint:
    path: /account.exclusions.updated
    method: GET
    data_selector: payload
- name: account.exclusions.deleted
  endpoint:
    path: /account.exclusions.deleted
    method: GET
    data_selector: payload
- name: KYC Events
  endpoint:
    path: /kyc-events
    method: GET
    data_selector: events
- name: kyc_updated
  endpoint:
    path: /apis/reference/kyc-updated
    method: GET
    data_selector: payload
    params: {}
- name: statements
  endpoint:
    path: /get_accounts-accountid-statements
    method: GET
    data_selector: statements
- name: trade_confirmations
  endpoint:
    path: /get_accounts-accountid-confirms
    method: GET
    data_selector: tradeConfirms
- name: linked_bank_accounts
  endpoint:
    path: /apis/reference/get_users-userid-bank-accounts
    method: GET
    data_selector: payload
- name: tax_form_created
  endpoint:
    path: /taxforms.created
    method: POST
    data_selector: payload.taxForm
- name: deleted_linked_bank_account
  endpoint:
    path: /apis/reference/linked-bank-accounts
    method: GET
    data_selector: payload
    params: {}
- name: Transaction Events
  endpoint:
    path: /transactions-events
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: payload
- name: order_events
  endpoint:
    path: /orders-events
    method: GET
    data_selector: payload
- name: user_created
  endpoint:
    path: /apis/reference/user-events
    method: GET
    data_selector: payload
- name: user_updated
  endpoint:
    path: /apis/reference/user-events
    method: GET
    data_selector: payload
- name: orders.completed
  endpoint:
    path: /orders/completed
    method: GET
    data_selector: payload
- name: user_info_required_created
  endpoint:
    path: /apis/reference/user-events
    method: GET
    data_selector: payload
- name: positions
  endpoint:
    path: /get_accounts-accountid-summary-positions
    method: GET
- name: violations
  endpoint:
    path: /apis/reference/get_accounts-accountid-violations
    method: GET
    data_selector: payload.currentViolations
- name: positions_updated
  endpoint:
    path: /positions/updated
    method: GET
    data_selector: payload
- name: violations.removed
  endpoint:
    path: /violations/removed
    method: GET
    data_selector: payload
- name: withdrawals
  endpoint:
    path: /get_accounts-accountid-funding-redemptions
    method: GET
    data_selector: payload
    params: {}
- name: withdrawals_updated
  endpoint:
    path: /apis/reference/withdrawals-updated
    method: GET
    data_selector: payload
    params: {}
- name: Create Session Token
  endpoint:
    path: /auth/tokens
    method: POST
- name: Trade Allocations
  endpoint:
    path: /apis/reference/trade-allocations
    method: GET
- name: Funds
  endpoint:
    path: /apis/reference/funds
    method: GET
- name: Portfolios
  endpoint:
    path: /apis/reference/portfolios
    method: GET
- name: AutoPilot
  endpoint:
    path: /apis/reference/autopilot
    method: GET
- name: Account Events
  endpoint:
    path: /apis/reference/accounts-events
    method: GET
- name: Allocation Events
  endpoint:
    path: /apis/reference/allocation-events
    method: GET
- name: Asset Transfer Events
  endpoint:
    path: /apis/reference/acat-events
    method: GET
- name: Cancel Rebill Events
  endpoint:
    path: /apis/reference/cancel-rebill-events
    method: GET
- name: Corporate Actions Events
  endpoint:
    path: /apis/reference/corporate-actions-events
    method: GET
- name: Bond Maturity Events
  endpoint:
    path: /apis/reference/bond-maturity-events
    method: GET
- name: Coupon Events
  endpoint:
    path: /apis/reference/coupon-events
    method: GET
- name: Bond Redemption Events
  endpoint:
    path: /apis/reference/bond-redemption-events
    method: GET
- name: Dividend Events
  endpoint:
    path: /apis/reference/dividends-events
    method: GET
- name: Going Private Events
  endpoint:
    path: /apis/reference/going-private-events
    method: GET
- name: Involuntary Tender Offer Events
  endpoint:
    path: /apis/reference/involuntary-tender-offer
    method: GET
- name: Voluntary Tender Events
  endpoint:
    path: /apis/reference/voluntary-tender-offer
    method: GET
- name: Ticker Symbol Change Events
  endpoint:
    path: /apis/reference/symbol-change
    method: GET
- name: Stock Split Events
  endpoint:
    path: /apis/reference/stock-splits
    method: GET
- name: Spinoff Events
  endpoint:
    path: /apis/reference/spin-off-events
    method: GET
- name: Merger & Acquisitions Events
  endpoint:
    path: /apis/reference/merger-acquisitions-events
    method: GET
- name: Deposit Events
  endpoint:
    path: /apis/reference/deposits-events
    method: GET
- name: Instrument Events
  endpoint:
    path: /apis/reference/instruments-events
    method: GET
- name: KYC Events
  endpoint:
    path: /apis/reference/kyc-events
    method: GET
- name: Linked Bank Account Events
  endpoint:
    path: /apis/reference/linked-bank-accounts-events
    method: GET
- name: Order Events
  endpoint:
    path: /apis/reference/orders-events
    method: GET
- name: Position Events
  endpoint:
    path: /apis/reference/positions-events
    method: GET
- name: Settlement Events
  endpoint:
    path: /apis/reference/settlements-events
    method: GET
- name: Statement Events
  endpoint:
    path: /apis/reference/statements-events
    method: GET
- name: Transaction Events
  endpoint:
    path: /apis/reference/transactions-events
    method: GET
- name: User Events
  endpoint:
    path: /apis/reference/user-events
    method: GET
- name: Violation Events
  endpoint:
    path: /apis/reference/violations-events
    method: GET
- name: Withdrawal Events
  endpoint:
    path: /apis/reference/withdrawals-events
    method: GET
- name: create_user
  endpoint:
    path: /back-office/users
    method: POST
- name: settlements
  endpoint:
    path: /api/settlements
    method: GET
    data_selector: settlements
    params: {}
- name: reconciliations
  endpoint:
    path: /api/reconciliations
    method: GET
    data_selector: reconciliations
    params: {}
- name: user
  endpoint:
    path: /back-office/users
    method: POST
    data_selector: object
    params: {}
- name: create_account
  endpoint:
    path: /back-office/accounts
    method: POST
- name: reconciliation_completed
  endpoint:
    path: /reconciliations/completed
    method: GET
    data_selector: payload
- name: settlement_created
  endpoint:
    path: /settlements/created
    method: GET
    data_selector: payload
- name: settlement_approved
  endpoint:
    path: /settlements/updated
    method: GET
    data_selector: payload
- name: settlement_completed
  endpoint:
    path: /settlements/completed
    method: GET
    data_selector: payload
- name: account_exclusions_created
  endpoint:
    path: /account/exclusions/created
    method: GET
    data_selector: payload
- name: account_exclusions_updated
  endpoint:
    path: /account/exclusions/updated
    method: GET
    data_selector: payload
- name: account_exclusions_deleted
  endpoint:
    path: /account/exclusions/deleted
    method: GET
    data_selector: payload
- name: account
  endpoint:
    path: /back-office/accounts
    method: POST
    data_selector: account
    params: {}
- name: statements
  endpoint:
    path: /get_accounts-accountid-statements
    method: GET
    data_selector: statements
- name: trade_confirms
  endpoint:
    path: /get_accounts-accountid-confirms
    method: GET
    data_selector: tradeConfirm
- name: tax_form_created
  endpoint:
    path: /apis/reference/statements-events
    method: GET
    data_selector: payload.taxForm
    params: {}
- name: instruments
  endpoint:
    path: /back-office/instruments
    method: GET
    data_selector: array
- name: transactions
  endpoint:
    path: /transactions-events
    method: GET
- name: transactions_created
  endpoint:
    path: /transactions/created
    method: GET
    data_selector: payload.transactions
- name: account_orders
  endpoint:
    path: /back-office/accounts/accountID/summary/orders
    method: GET
    data_selector: orders
- name: user_events
  endpoint:
    path: /apis/reference/user-events
    method: GET
    data_selector: payload
- name: user_info_required_created
  endpoint:
    path: /apis/reference/user-info-required-created
    method: GET
    data_selector: payload
- name: positions
  endpoint:
    path: /back-office/accounts/{accountID}/summary/positions
    method: GET
    data_selector: object
- name: violations
  endpoint:
    path: /apis/reference/get_accounts-accountid-violations
    method: GET
    data_selector: currentViolations
- name: account_transaction_summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/transactions
    method: GET
    data_selector: AccountTransactionSummary
    params: {}
- name: violations_removed
  endpoint:
    path: /apis/reference/violations
    method: GET
    data_selector: payload
- name: account_transaction_summary
  endpoint:
    path: /back-office/accounts/accountID/summary/transactions
    method: GET
    data_selector: transactions
- name: withdrawals
  endpoint:
    path: /get_accounts-accountid-funding-redemptions
    method: GET
    data_selector: records
    params: {}
- name: Create Instrument Exchange
  endpoint:
    path: /back-office/exchanges
    method: POST
- name: withdrawals_updated
  endpoint:
    path: /withdrawals-updated
    method: GET
    data_selector: payload
    params: {}
- name: exchanges
  endpoint:
    path: /back-office/exchanges
    method: POST
    data_selector: object
- name: commission_schedules
  endpoint:
    path: /back-office/accounts/{accountID}/commissions
    method: GET
    data_selector: commissions
    params:
      accountID: string
- name: commission_schedules
  endpoint:
    path: /accounts/{accountID}/commissions
    method: GET
    data_selector: array of objects
- name: user
  endpoint:
    path: /users
    method: POST
- name: user
  endpoint:
    path: /back-office/users
    method: POST
    data_selector: object
    params: {}
- name: supported_countries
  endpoint:
    path: /back-office/countries
    method: GET
    data_selector: ListOfAllowedCountry
    params:
      status: ACTIVE
- name: create_account
  endpoint:
    path: /back-office/accounts
    method: POST
- name: correspondent_report
  endpoint:
    path: /back-office/correspondantReport
    method: GET
    data_selector: url
    params:
      date: string
- name: account
  endpoint:
    path: /back-office/accounts
    method: POST
    data_selector: account
    params: {}
- name: instruments
  endpoint:
    path: /instruments
    method: GET
    data_selector: Response
    params: {}
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    data_selector: performance
    params:
      frequency: D
      from: date
      to: date
- name: instruments
  endpoint:
    path: /instruments
    method: GET
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    data_selector: object
    params: {}
- name: account_resting_orders
  endpoint:
    path: /back-office/accounts/{accountID}/summary/orders
    method: GET
- name: account_violations
  endpoint:
    path: /back-office/accounts/{accountID}/violations
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /back-office/accounts/{accountID}/summary/orders
    method: GET
    data_selector: orders
- name: account_violations
  endpoint:
    path: /back-office/accounts/accountID/violations
    method: GET
    data_selector: goodFaithViolations
    params: {}
- name: account_positions
  endpoint:
    path: /back-office/accounts/{accountID}/summary/positions
    method: GET
- name: positions
  endpoint:
    path: /back-office/accounts/{accountID}/summary/positions
    method: GET
    data_selector: object
- name: account_statements
  endpoint:
    path: /back-office/accounts/{accountID}/statements
    method: GET
    data_selector: statements
    params:
      accountID: string
- name: account_transaction_summary
  endpoint:
    path: /back-office/accounts/{accountID}/summary/transactions
    method: GET
- name: list_account_transactions
  endpoint:
    path: /accounts/{accountID}/transactions
    method: GET
- name: account_statements
  endpoint:
    path: /back-office/accounts/accountID/statements
    method: GET
    data_selector: statementObj
- name: account_beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: POST
- name: account_transaction_summary
  endpoint:
    path: /accounts/accountID/summary/transactions
    method: GET
    data_selector: transactions
- name: beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: POST
- name: instrument_exchange
  endpoint:
    path: /back-office/exchanges
    method: POST
- name: upload_physical_document
  endpoint:
    path: /back-office/documents
    method: POST
- name: exchange
  endpoint:
    path: /back-office/exchanges
    method: POST
    data_selector: object
    params: {}
- name: physical_documents
  endpoint:
    path: /back-office/documents
    method: POST
    data_selector: object
- name: commission_schedules
  endpoint:
    path: /back-office/accounts/{accountID}/commissions
    method: GET
    data_selector: commissions
    params:
      accountID: string
- name: linked_bank_accounts
  endpoint:
    path: /back-office/users/{userID}/bank-accounts
    method: GET
    data_selector: records
    params: {}
- name: linked_bank_accounts
  endpoint:
    path: /back-office/users/{userID}/bank-accounts
    method: GET
    data_selector: BankAccount
- name: commission_schedule
  endpoint:
    path: /get_accounts-accountid-commissions
    method: GET
    data_selector: array of objects
- name: supported_countries
  endpoint:
    path: /countries
    method: GET
    data_selector: array
- name: account_deposits
  endpoint:
    path: /back-office/accounts/{accountID}/funding/deposits
    method: GET
    data_selector: deposits
- name: correspondent_report
  endpoint:
    path: /correspondantReport
    method: GET
    data_selector: url
    params:
      date: required
- name: user_deposits
  endpoint:
    path: /get_users-userid-funding-deposits
    method: GET
    data_selector: records
    params: {}
- name: account_deposits
  endpoint:
    path: /get_accounts-accountid-funding-deposits
    method: GET
    data_selector: records
    params: {}
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    params:
      frequency: ''
      from: ''
      to: ''
- name: withdrawals
  endpoint:
    path: /withdrawals
    method: GET
    data_selector: array
    params: {}
- name: user_withdrawals
  endpoint:
    path: /get_users-userid-funding-redemptions
    method: GET
    data_selector: array
    params: {}
- name: account_performance
  endpoint:
    path: /back-office/accounts/{accountID}/performance-returns
    method: GET
    data_selector: performance
    params:
      frequency: D
- name: ACATS Transfer
  endpoint:
    path: /back-office/asset-transfers/acats
    method: POST
- name: account_violations
  endpoint:
    path: /back-office/accounts/accountID/violations
    method: GET
    data_selector: goodFaithViolations
- name: settlements
  endpoint:
    path: /back-office/settlements
    method: GET
    params:
      from: ''
      to: ''
      status: ''
      settlementProfileID: ''
      limit: ''
      offset: ''
- name: account_statements
  endpoint:
    path: /back-office/accounts/{accountID}/statements
    method: GET
- name: settlements
  endpoint:
    path: /back-office/settlements
    method: GET
- name: account_statements
  endpoint:
    path: /back-office/accounts/{accountID}/statements
    method: GET
    data_selector: statementObj
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: null
    params: {}
- name: account_beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: POST
- name: beneficiaries
  endpoint:
    path: /back-office/accounts/{accountID}/beneficiaries
    method: POST
    data_selector: primary
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: object
    params: {}
- name: upload_physical_document
  endpoint:
    path: /back-office/documents
    method: POST
- name: quote
  endpoint:
    path: /quotes
    method: GET
    data_selector: quotes
    params:
      symbols: string
      exchangeOverride: string
      instrumentIDs: string
      isins: string
- name: upload_physical_document
  endpoint:
    path: /back-office/documents
    method: POST
    data_selector: object
    params: {}
- name: list_user_physical_documents
  endpoint:
    path: /users/{userid}/documents
    method: GET
    data_selector: documents
    params: {}
- name: quotes
  endpoint:
    path: /back-office/quotes
    method: GET
    data_selector: array
- name: User Linked Bank Accounts
  endpoint:
    path: /back-office/users/{userID}/bank-accounts
    method: GET
    data_selector: bank-accounts
    params:
      userID: string
- name: chart
  endpoint:
    path: /bars
    method: GET
    data_selector: data
    params:
      instrumentID: string
      compression: string
      dateStart: string
      dateEnd: string
      tradingDays: string
- name: linked_bank_accounts
  endpoint:
    path: /users/userID/bank-accounts
    method: GET
- name: account_virtual_bank_account
  endpoint:
    path: /back-office/accounts/{accountID}/funding/deposit-instructions
    method: GET
- name: depth_of_book
  endpoint:
    path: /back-office/quotes/depth
    method: POST
- name: Linked Bank Accounts
  endpoint:
    path: /linked-bank-accounts
    method: GET
- name: Deposits
  endpoint:
    path: /deposits
    method: GET
- name: quote
  endpoint:
    path: /quotes
    method: POST
    data_selector: QuoteResponse
- name: account_deposits
  endpoint:
    path: /back-office/accounts/{accountID}/funding/deposits
    method: GET
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
- name: user_deposits
  endpoint:
    path: /funding/deposits
    method: GET
    data_selector: object
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
    data_selector: object
- name: orders_allocations_summary
  endpoint:
    path: /back-office/users/{userID}/managed/orders/summary
    method: GET
    data_selector: orders
- name: withdrawals
  endpoint:
    path: /funding/redemptions
    method: GET
    data_selector: array
- name: create_fund
  endpoint:
    path: /back-office/managed/funds
    method: POST
- name: ACATS Transfer
  endpoint:
    path: /back-office/asset-transfers/acats
    method: POST
- name: fund
  endpoint:
    path: /back-office/managed/funds
    method: POST
    data_selector: object
- name: portfolio
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlements
    params:
      from: string
      to: string
      status: string
      settlementProfileID: string
      limit: integer
      offset: string
      direction: string
- name: portfolios
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
    data_selector: object
- name: settlements
  endpoint:
    path: /back-office/settlements
    method: GET
    data_selector: settlements
- name: Create Autopilot Run
  endpoint:
    path: /back-office/managed/autopilot/{partnerID}
    method: POST
- name: subscriptions
  endpoint:
    path: /back-office/subscriptions
    method: POST
- name: autopilot_run
  endpoint:
    path: /autopilot
    method: POST
    data_selector: object
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: list_subscriptions_by_user
  endpoint:
    path: /get_users-userid-subscriptions
    method: GET
- name: quote
  endpoint:
    path: /quotes
    method: GET
    data_selector: response
    params:
      symbols: string
      instrumentIDs: string
      isins: string
      exchangeOverride: string
- name: equity_quote
  endpoint:
    path: /quotes
    method: GET
    data_selector: EquityQuote
- name: fixed_income_quote
  endpoint:
    path: /quotes
    method: GET
    data_selector: FixedIncomeQuote
- name: chart
  endpoint:
    path: /bars
    method: GET
    data_selector: data
    params:
      instrumentID: string
      compression: string
      dateStart: string
      dateEnd: string
      tradingDays: string
- name: quotes
  endpoint:
    path: /quotes
    method: GET
    data_selector: QuoteResponse
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
- name: trade_allocation
  endpoint:
    path: /back-office/managed/allocations
    method: POST
    data_selector: object
    params: {}
- name: List Orders by Advisor
  endpoint:
    path: /back-office/users/{userID}/managed/orders/summary
    method: GET
    data_selector: orders
    params:
      userID: required
      date: YYYY-MM-DD
- name: orders_allocations_summary
  endpoint:
    path: /back-office/users/{userID}/managed/orders/summary
    method: GET
    data_selector: orders
- name: create_fund
  endpoint:
    path: /back-office/managed/funds
    method: POST
    data_selector: response
    params: {}
- name: fund
  endpoint:
    path: /back-office/managed/funds
    method: POST
    data_selector: object
    params: {}
- name: create_portfolio
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
- name: portfolios
  endpoint:
    path: /back-office/managed/portfolios
    method: POST
    data_selector: object
    params: {}
- name: Create Autopilot Run
  endpoint:
    path: /back-office/managed/autopilot/{partnerID}
    method: POST
- name: autopilot_run
  endpoint:
    path: /autopilot/{partnerID}
    method: POST
    data_selector: object
    params: {}
notes:
- Uses OAuth2 for authentication
- All API requests must be made over HTTPS. Calls made over plain HTTP will fail.
- Unless otherwise noted, API requests without authentication will also fail.
- Do not store API tokens inside your applications source control
- Do not embed API keys directly in code
- Limit employee access to production API keys
- Idempotency keys are saved for 4 days.
- DriveWealth imposes rate limits via the dw-client-app-key which is an integrator's
  unique identifier.
- DriveWealth imposes rate limits on specific endpoints that are high latency/low
  throughput
- The below table defines these limits
- DriveWealth leverages Amazon Simple Queue Service (SQS) to asynchronously notify
  integrators about different changes in the system.
- Due to the standard, asynchronous queue structure it's highly likely that Events
  will be received out of sequence.
- Every generated access_token has a 60min (1hr) expiry time.
- Token should be cached and recycled. So no more than 5-10 API calls per hour is
  expected.
- Creates an authentication token for an implementer to utilize for subsequent API
  requests.
- Updated 10 days ago
- Bearer authentication is used.
- The full Account Summary API is now deprecated. Instead, use the individual APIs
  for retrieving the Account's Positions, Transactions, or Orders separately.
- Uses Bearer authentication — requires setup of app key
- Uses Bearer JWT for authentication
- This endpoint can only return data for the last 30 days.
- Base URL requires replacement of {accountID} with actual account ID.
- The user's associated account number is required for creating an order.
- The order type must be specified as MARKET, LIMIT, STOP, or MARKET_IF_TOUCHED.
- Uses Bearer token for authentication
- The order must include accountNo and orderType.
- The limitType is applicable only for debt Instruments.
- The Order was Successfully Updated.
- Bearer authentication using JWT is required.
- The API returns market values for various positions held in the account.
- The new Performance API is only compatible when using Auth V2.
- Base URL requires accountID to be replaced in the path
- Uses Bearer authentication with JWT
- Bearer token is required for authentication.
- Base URL includes userID as a path parameter
- Some endpoints require authentication.
- Removes all Accounts Beneficiaries by accountID.
- Uses Bearer JWT authentication
- Base URL requires specific bankAccountID for endpoint.
- Base URL contains userID placeholder that needs to be replaced with actual user
  ID
- Only one bank account can be set to true as the default bank account.
- Status Number should be referenced when retrieving all deposits requests.
- Status Enum should only be used when updating a deposit request.
- Idempotency-Key is used to prevent duplicate requests.
- Bearer authentication is required.
- Base URL includes accountID placeholder
- Retrieve Deposit endpoint returns a unique identifier created for each User on DriveWealth's
  platform.
- Requires setup of connected app in drivewealth
- JWT Bearer authentication required
- Base URL for withdrawal operations
- The Automated Customer Account Transfer Service (ACATS) is a system that facilitates
  the transfer of securities from one trading account to another at a different brokerage
  firm or bank.
- Base URL requires redemptionID to be provided in the path.
- Ensure to include the dw-client-app-key in the header
- Allows for the transfer of assets from a minor's account to their own named account
  once they reach the age of majority.
- Only available in sandbox
- Do not build this into your production build.
- The next page offset can be used for pagination.
- This API is now deprecated as the Subscriptions product is no longer supported.
- Requires setup of connected app in api
- Do not build this into your production build
- URL includes the reconciliationID as a variable
- Debt Instruments and Global Mutual Funds do not have symbols and are referred to
  by their instrumentID or ISIN.
- Fetch historical bars for a given instrument over a given time period.
- Uses Bearer token for authentication.
- 'Path Params: partnerID is required'
- Base URL requires the rebalanceRunID to be specified.
- DriveWealth will replace this API with an improved solution in 2025.
- Uses Bearer JWT for authentication.
- Events API provides information on various account events like creation and updates.
- Allocation events are generated when trading advisors execute a block trade and
  then use the allocation APIs to distribute the shares to individual customer accounts.
- Asset transfer events for ACATS and TEEN accounts.
- This API provides information about cancel rebill events.
- Status values include APPROVED, FRAUD, PRICE_ADJUSTMENT_PARTNER, PARTNER_TECHNICAL_ERROR
- Events are triggered when a cancel rebill is completed.
- The account value of the customers account is available in equity.
- JWT is used for authentication.
- Asset transfer events include creation and update notifications.
- Events contain information about cancel rebill actions.
- Events are updated with various reasons such as fraud, price adjustment, or technical
  errors.
- Handles events related to completed cancel rebill operations.
- M&A corporate events consist of a bit more data because of updates that need to
  be made to cash and share positions.
- Test Callable or redeemable bonds are bonds that can be redeemed or paid off by
  the issuer prior to the bonds' maturity date.
- During a voluntary tender offer a customer will first be notified of this corporate
  event via email and given the choice to accept or deny the tender offer.
- Events are returned as updates for deposits.
- In the event that a company goes private, there will be one transactions.create
  event and one positions.updated event.
- API requires authentication via OAuth2.
- For each dividend DriveWealth provides information in regards to the type of dividend,
  the amount, and tax status of that dividend.
- Customers that hold fractional shares will also receive a pro rata dividend.
- Handles linked bank account events including creation and updates.
- Order has details of the full order that was executed or rejected.
- Events represent various updates to user account positions.
- A new deposit has been created for a user's account.
- Payload includes details of the deposit update.
- Instrument events include created, updated, and deleted events.
- Instrument status can be ACTIVE or INACTIVE.
- Provides details on submitted KYC information.
- A new statement document has been created for the user's account.
- A new trade confirmation document has been created.
- Event provides details for created and updated linked bank accounts.
- Order events include created and updated events.
- Users events include created and updated events.
- The order has been completed, contains details of the full order that was executed
  or rejected.
- Returns the total violation count for removed events
- Token should be cached and recycled. So no more than 5-10 Api calls per hour is
  expected.
- The event provides metadata about the report.
- Created from aggregator service
- JWT Bearer token required for authentication
- Handles multiple transaction types including dividends, tax, and mergers.
- User events include user creation and updates.
- Redemptions and withdrawals mean the same thing and are used throughout the guides
  and API reference interchangeably.
- The wlpID is a deep backoffice ID that identifies each partner from each other.
- The walletSettlementProfileID is an identifier that denotes a user's wallet settlement
  profile for eligible partners.
- The request requires an accountID to be specified.
- Base URL contains accountID placeholder
- Base URL requires accountID to be specified
- Creates an Account Beneficiary by accountID.
- The accountID must be replaced with the user's unique account identifier.
- Bearer token authentication required.
- The total number of good faith violations is provided in the response.
- Quotes endpoint requires Bearer token for authentication.
- Response body is an array.
- Requires setup of connected app in DriveWealth
- JWT used for authentication
- Base URL requires userID to be specified.
errors:
- 'A010: ACCOUNT_MISSING_PARAMETER: A required parameter is missing or invalid in
  the request body.'
- 'A011: ACCOUNTID_MISSING_INVALID: A required accountID is missing or invalid.'
- 'A012: ACCOUNTNO_MISSING_INVALID: A required accountNo is missing or invalid.'
- 'A013: ACCOUNT_DATERANGE_MISSING_INVALID: A required date range is missing or invalid.'
- 'A015: ACCOUNT_INVALID_USER_TYPE: The given type of account cannot be created for
  the given user.'
- 'A020: ACCOUNT_BAD_COMBINATION_PARAMETER: One or more parameters in the given combination
  are missing or invalid.'
- 'A035: ACCOUNT_MISSING_USER_PARAMETER: Unable to create account due to missing field(s)
  on the user.'
- 'A044: ACCOUNT_CASH_TRANSFER_INVALID_AMOUNT: The amount of the cash to be transferred
  is missing or invalid.'
- 'A045: ACCOUNT_TRANSFER_MISSING_COMMENT: The comment of this transfer is missing.'
- 'A047: ACCOUNT_CASH_TRANSFER_INSUFFICIENT_FUNDS: There is insufficient cash in the
  account to complete a transfer.'
- 'A050: ACCOUNT_NOT_FOUND: The account you were trying to retrieve was not found.'
- 'A051: ACCOUNT_RESTRICTED: Account has been restricted.'
- 'A055: ACCOUNT_INVALID_OPERATION: The requested operation cannot be performed on
  this account.'
- 'A062: ACCOUNT_CASH_TRANSFER_FROM_FAILURE: Transferring cash from this account has
  failed.'
- 'A063: ACCOUNT_CASH_TRANSFER_TO_FAILURE: Transferring cash to this account has failed.'
- 'A065: ACCOUNT_CASH_TRANSFER_OUTSIDE_MMW: Transferring cash outside money movement
  window is not permitted.'
- 'A071: ACCOUNT_NOT_HOUSE_ACCOUNT: The account is not a house account.'
- 'A072: ACCOUNT_INVALID_RIA: The user account does not belong to the given RIA.'
- 'A100: ACCOUNT_ERROR: There was an error in retrieving the account.'
- 'E005: STALE_REQUEST: Request date header too old.'
- 'E006: FUTURE_REQUEST: Request date header is in the future.'
- 'E010: NO_REQUEST_BODY: No request body provided.'
- 'E015: UNSUPPORTED_FORMAT: Unsupported Format.'
- 'E020: DUPLICATE_VALUE: Value Exists Already.'
- 'E025: BAD_REQUEST: Invalid or badly formatted request.'
- 'E030: BAD_MISSING_PARAMETERS_URL: Invalid or missing parameters in the request
  URL.'
- 'E031: BAD_MISSING_PARAMETERS_URL_BODY: Invalid or missing parameters in the request
  URL or body.'
- 'E032: BAD_MISSING_PARAMETERS_BODY: Invalid or missing parameters in the request
  body.'
- 'E033: INVALID_PARAMETER_BODY: Invalid parameter in message body.'
- 'E035: INVALID_ACTION_BODY: Invalid action in message body.'
- 'E040: BAD_COMBINATION_PARAMETERS_URL: A combination of two or more parameters in
  the URL is missing or invalid.'
- 'E050: NOT_FOUND: The resource you were trying to retrieve was not found.'
- 'E075: DUPLICATE_REQUEST: The action you are trying to perform is a duplicate.'
- 'E090: REQUIRED_PARAMETER_MISSING: A required parameter needed to maintain state
  is missing.'
- 'E099: ERROR_UNKNOWN: Oops! Something went wrong in processing your request. Please
  contact support.'
- 'E100: ERROR: There was an error in processing your request.'
- 'E101: ERROR_IDEMPOTENT_REQUEST_RETRY: Maximum retry attempt limit of 5 has been
  reached. Please contact support.'
- 'H050: HEADER_APP_KEY_NOT_FOUND: Client App Key header not found. Contact tech support
  if you do not have an app key.'
- 'H055: HEADER_APP_KEY_INVALID: Client App Key header invalid. Contact tech support.'
- 'H060: HEADER_AUTH_TOKEN_NOT_FOUND: Auth token header not found. Log in first to
  obtain an auth token.'
- 'H065: HEADER_AUTH_TOKEN_INVALID: Invalid auth token header. If problem persists,
  try re-log in.'
- 'H070: HEADER_DW_CUSTOMER_NOT_FOUND: DW custom userID header not found. This header
  is required for this operation.'
- 'H075: HEADER_DW_CUSTOMER_ACCOUNT_NOT_FOUND: DW custom accountID header not found.
  This header is required for this operation.'
- 'H080: HEADER_BEARER_TOKEN_ALGORITHM_MISSING_INVALID: Algorithm in bearer token
  is missing/invalid.'
- 'H081: HEADER_BEARER_TOKEN_ISSUER_MISSING_INVALID: Issuer in bearer token is missing/invalid.'
- 'H082: HEADER_BEARER_TOKEN_ENVIRONMENTS_MISSING_INVALID: Allowed environments in
  bearer token are missing/invalid.'
- 'H085: HEADER_BEARER_TOKEN_WEB_KEY_NOT_FOUND: Unable to retrieve web key from token
  key ID.'
- 'H090: HEADER_BEARER_TOKEN_INVALID: Bearer token is invalid.'
- 'H100: HEADER_BEARER_TOKEN_ERROR: Bearer token error. Contact tech support.'
- 'K101: ADDRESS_NOT_MATCH: No match found for address or invalid format in address'
- 'K102: SSN_NOT_MATCH: No match found for Social Security Number'
- 'K103: DOB_NOT_MATCH: No match found for Date of Birth'
- 'K104: NAME_NOT_MATCH: No match found for firstName / lastName or invalid characters
  found'
- 'K106: SANCTION_WATCHLIST: User is under sanction watch list'
- 'K107: SANCTION_OFAC: User is found in OFAC SDN list'
- 'K108: INVALID_PHONE_NUMBER: The phone number listed on the customer’s application
  is not a valid number of digits for a phone number'
- 'K109: INVALID_EMAIL_ADDRESS: The emailID listed on the customer’s application is
  not valid or unable to verify in watch list.'
- 'K110: INVALID_NAME_TOO_LONG: The first name or last name listed on the customer''s
  application is not valid. First name or last name should not be greater than 36
  characters.'
- 'K111: UNSUPPORTED_COUNTRY: The KYC is not supported in the country.'
- 'K801: AGED_ACCOUNT: KYC is not verified by user within 30 days'
- 'K802: ACCOUNT_INTEGRITY: Account information provided may not be legitimate and/or
  is being used by multiple account holders'
- 'U999: UNKNOWN: Unrecognized error'
- 'B100: INVALID_REQUEST_FOR_DAILY_BARS: The number of bars requested has exceeded
  the maximum allowed of 10 Years for Daily bars.'
- 'B100: INVALID_REQUEST_FOR_ONE_MINUTE_BARS: The number of bars requested has exceeded
  the maximum allowed of 1 Month for 1 minute bars.'
- 'B100: INVALID_REQUEST_FOR_FIVE_MINUTES_BARS: The number of bars requested has exceeded
  the maximum allowed of 2 Months for 5 minutes bars.'
- 'B100: INVALID_REQUEST_FOR_THIRTY_MINUTES_BARS: The number of bars requested has
  exceeded the maximum allowed of 1 Year for 30 minutes bars.'
- 'B100: INVALID_REQUEST_FOR_ONE_HOUR_BARS: The number of bars requested has exceeded
  the maximum allowed of 2 Years for 1 hour bars.'
- 'B100: INVALID_REQUEST_FOR_WEEKLY_BARS: The number of bars requested has exceeded
  the maximum allowed of 20 Years for Weekly bars.'
- 'OT002: ONE_TICK_BARS_REQUEST_EXCEEDED: The Number of Bars request has exceeded
  the maximum allowed Bars.'
- 'OT003: OTHER_ONE_TICK_ERRORS: Unable to retrieve bars data.'
- 'T003: ASSETS_TRANSFER_NEGATIVE_CASH: Assets Transfer cannot initiate because of
  negative cash in the account.'
- 'T004: ASSETS_TRANSFER_REJECTED: Assets Transfer cannot initiate.'
- 'T005: ASSETS_TRANSFER_UNAUTHORIZED: Unauthorized to initiate Assets Transfer.'
- 'Rate limit exceeded: Adjust request frequency'
- 200 - User Creation
- '400 Bad Request: Check required fields such as accountNo, orderType, and side.'
- 400 - Both Commission and CommissionRate are present in the request
- 400 - CommissionRate decimal places more than 4
- 400 - Invalid commissionRate range
- 403 - Account is restricted from making day trades
- '400 Bad Request: Check the errorCode and message for details.'
- '400 Bad Request: Check error code and message in response'
- 400 - Invalid request missing date
- 500 - Internal Server Error
- '400 Bad Request: Check the request parameters for errors'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 400 - Bank account has an active recurring deposit
- '204: Deleting a Linked Bank Account was Accepted.'
- '200: Successful retrieval'
- '401: Unauthorized access'
- '404: Resource not found'
- '400 Bad Request: The error code that is returned when an error occurs.'
- 400 - Invalid accountNo on request body
- 400 - Source and Destination are same
- 400 - Destination account is not approved
- 400 - Invalid Symbol
- 400 - Invalid clearing broker
- 400 - Cash Should be Greater Than 0
- 400 - Invalid Symbol in Partial Acats Transfer
- 400 - Positions Required on Partial Acat Transfer
- 400 - Acat Type is Missing
- 403 - ACAT Transfer permission has been denied
- '400 Bad Request: Validate Source accountNo'
- '400 Bad Request: Validate Destination accountNo'
- '400 Bad Request: Source and Destination account can''t be same in transfer'
- '400 Bad Request: Destination account should be OPEN'
- '400 Bad Request: Source account should be OPEN'
- '400 Bad Request: Source account has no cash and positions both'
- '400 Bad Request: Missing Authorized User on Teen Account'
- '400 Bad Request: Duplicate Minor Asset Transfer Request'
- 400 Bad Request
- '200: Initiating a transfer was successful'
- '404: The settlement for given settlementID doesn''t exist'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '404: The settlement for given settlementID doesn''t exist.'
- 400 - Invalid request for daily bars
- 400 - Invalid request for one minute bars
- 400 - Invalid request for five minutes bars
- 400 - Invalid request for thirty minutes bars
- 400 - Invalid request for one hour bars
- 400 - Invalid request for weekly bars
- 500 - OneTick bars request exceeded
- 500 - Other OneTick Errors
- '400 Bad Request: Check for required fields and correct data types'
- 'Unauthorized: Check your authentication credentials.'
- 'Rate Limit Exceeded: Reduce request frequency.'
- 'Invalid event ID: Ensure the event ID is correct.'
- 'Unauthorized access: Check API authentication settings.'
- 'O105: Order quantity exceeds quantity available for sale.'
- 'O125: Order quantity or notional higher than allowed max.'
- '500'
- '400 Bad Request: Check request parameters'
auth_info:
  mentioned_objects:
  - Auth
  - Bearer
  - JWT
client:
  base_url: https://bo-api.drivewealth.io
  auth:
    type: oauth2
source_metadata: null
