resources:
- name: Knowledge
  endpoint:
    path: /knowledge
    method: GET
    data_selector: data
    params: {}
- name: Documents
  endpoint:
    path: /documents
    method: GET
    data_selector: data
    params: {}
- name: HTML Report
  endpoint:
    path: /api/html_report
    method: POST
    data_selector: report_data
- name: knowledge_base_search
  endpoint:
    path: /knowledge-base/search
    method: POST
    data_selector: results
    params: {}
- name: current_tenant
  endpoint:
    path: /admin/api/v1/tenants/current
    method: GET
    data_selector: response
    params:
      tenantId: '{{tenantId}}'
- name: tenant_units
  endpoint:
    path: /admin/api/v1/tenantUnits
    method: GET
    data_selector: tenantUnits
    params:
      tenantId: '{{tenantId}}'
      page: 1
      pageSize: 10
- name: create_tenant_unit
  endpoint:
    path: /admin/api/v1/tenantUnits
    method: POST
    data_selector: id
    params:
      tenantId: '{{tenantId}}'
- name: get_tenant_unit
  endpoint:
    path: /admin/api/v1/tenantUnits/{tenantUnitId}
    method: GET
    data_selector: id
    params:
      tenantId: '{{tenantId}}'
- name: default_tenant_unit
  endpoint:
    path: /admin/api/v1/tenantUnits/default
    method: GET
    data_selector: '{}'
    params:
      tenantId: '{{tenantId}}'
- name: datasets
  endpoint:
    path: /admin/api/v1/datasets
    method: POST
    data_selector: response
    params:
      tenantId: required
- name: get_dataset
  endpoint:
    path: /admin/api/v1/datasets/{datasetId}
    method: GET
    data_selector: response
    params:
      tenantId: required
- name: list_datasets
  endpoint:
    path: /admin/api/v1/datasets
    method: GET
    data_selector: response
    params: {}
- name: delete_dataset
  endpoint:
    path: /admin/api/v1/datasets/{datasetId}
    method: DELETE
    data_selector: response
    params: {}
- name: partial_update_dataset
  endpoint:
    path: /admin/api/v1/datasets/{datatsetId}
    method: PATCH
    data_selector: response
    params:
      tenantId: required
- name: documents
  endpoint:
    path: /admin/api/v1/documents
    method: POST
    data_selector: Response
    params:
      tenantId: '{{tenantId}}'
- name: upload_documents
  endpoint:
    path: /admin/api/v1/documents/upload
    method: POST
    data_selector: Response
    params:
      tenantId: '{{tenantId}}'
      tenantUnitId: '{{tenantUnitId}}'
- name: upsert_document
  endpoint:
    path: /admin/api/v1/api/v1/documents/byExternalId/{externalId}
    method: PUT
    data_selector: Response
    params:
      tenantId: '{{tenantId}}'
- name: documents
  endpoint:
    path: /admin/api/v1/documents
    method: GET
    data_selector: data
    params:
      tenantId: '{{tenantId}}'
      page: 1
      pageSize: 10
- name: document_by_id
  endpoint:
    path: /admin/api/v1/documents/{documentId}
    method: GET
    data_selector: id
    params:
      tenantId: '{{tenantId}}'
- name: document_chunks
  endpoint:
    path: /admin/api/v1/documents/{documentId}/documentChunks/
    method: GET
    data_selector: data
    params:
      tenantId: '{{tenantId}}'
      page: 1
      pageSize: 10
- name: tool_vendors
  endpoint:
    path: /admin/api/v2/tools
    method: GET
    data_selector: data
    params:
      page_num: 1
      page_size: 14
- name: tool_vendor_by_id
  endpoint:
    path: /admin/api/v2/tools/{tool_id}
    method: GET
    data_selector: data
    params: {}
- name: update_tool_vendor
  endpoint:
    path: /admin/api/v2/tools/{tool_id}
    method: PUT
    data_selector: data
    params: {}
- name: delete_tool_vendor
  endpoint:
    path: /admin/api/v2/tools/{tool_id}
    method: DELETE
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /admin/api/v2/conversations
    method: GET
    data_selector: data
    params:
      page_num: 1
      page_size: 20
      order: recent
- name: messages_by_conversation
  endpoint:
    path: /admin/api/v2/conversations/{conversation_id}/messages
    method: GET
    data_selector: data
    params:
      page: 1
      page_size: 20
- name: create_conversation
  endpoint:
    path: /admin/api/v2/conversations
    method: POST
    data_selector: data
- name: update_conversation
  endpoint:
    path: /admin/api/v2/conversations/{conversation_id}
    method: PATCH
    data_selector: data
- name: get_conversation
  endpoint:
    path: /admin/api/v2/conversations/{conversation_id}
    method: GET
    data_selector: Responseobject · ConversationSchema
    params: {}
- name: delete_conversation
  endpoint:
    path: /admin/api/v2/conversations/{conversation_id}
    method: DELETE
    data_selector: Responseobject
    params: {}
- name: update_conversation_status
  endpoint:
    path: /admin/api/v2/conversations/{conversation_id}/status
    method: PATCH
    data_selector: Responseobject · ConversationSchema
    params: {}
- name: upload_file
  endpoint:
    path: /admin/api/v2/files/upload
    method: POST
    data_selector: Responseobject
    params: {}
- name: preview_file
  endpoint:
    path: /admin/api/v2/files/{file_id}
    method: GET
    data_selector: Responseobject
    params: {}
- name: remote_url_upload_file
  endpoint:
    path: /admin/api/v2/files/remote-url/upload
    method: POST
    data_selector: Responseobject
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Some objects may return nulls in deeply nested fields
- Users can inject their knowledge into the platform through various means, such as
  uploading documents, providing URLs, connecting to databases, or direct conversation.
- Agents tap into knowledge bases to inform decision-making and provide contextual
  responses.
- 'If you need assistance or have questions about our platform, you can reach our
  support team at: Email: vincentpo@workfx.ai'
- Performance is heavily reliant on the reasoning, planning, and memory capabilities
  of the underlying language model.
- Outputs can vary significantly depending on context, reducing consistency and control.
- May struggle with long, multi-step tasks that require high precision or over 10
  interaction rounds.
- The decision-making path is implicit, making it harder to trace or fine-tune behavior.
- These Agents will be autonomously invoked by the Supervisor and will complete tasks
  according to the Supervisor's prompt.
- These Agents are system-controlled and do not support manual configuration.
- The system is restricted to a single domain to ensure all responses align with Workfx’s
  official documentation.
- The API Key is required for requests.
- Default page size is 20.
- If you want to enable API mode, you can contact vincentpo@workfx.ai
- WorkfxAI will not charge any fee for your access request, but may charge an administrative
  fee for providing a copy of your Personal Information.
- You may cancel your Subscription by notice to us.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check API key validity'
- '200 Success: Successful request'
- '400 Bad Request: Missing required parameters'
- '401 Unauthorized: Invalid API Key'
- '400: Invalid input'
- '401: Unauthorized'
- '500: Internal server error'
- '404 Not Found: Check if the documentId exists'
- '400 Bad Request: Check the parameters provided'
- '422: Validation Error'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - X-Api-Key
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://platform.workfx.ai
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
