resources:
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
    params: {}
- name: Payout
  endpoint:
    path: /api/payout
    method: GET
    data_selector: records
    params: {}
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
- name: Payout
  endpoint:
    path: /api/payouts
    method: GET
    data_selector: records
- name: exchanges
  endpoint:
    path: /api/v1/exchanges
    method: GET
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: invoices
  endpoint:
    path: /core-concepts/invoices
    method: GET
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: records
- name: merchant_details
  endpoint:
    path: /settings
    method: GET
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
- name: Payout
  endpoint:
    path: /api/payouts
    method: GET
    data_selector: records
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
    params: {}
- name: Payout
  endpoint:
    path: /api/payout
    method: GET
    data_selector: records
    params: {}
- name: merchant_details
  endpoint:
    path: /api/merchant/details
    method: GET
- name: merchant_details
  endpoint:
    path: /merchant/details
    method: GET
- name: merchant_details
  endpoint:
    path: /settings
    method: GET
    data_selector: Merchant ID and Public Key
- name: generate_invoice
  endpoint:
    path: /generate-invoice-link
    method: POST
    data_selector: uuid
    params: {}
- name: update_order_status
  endpoint:
    path: /update-webflow-order
    method: POST
    data_selector: status
    params: {}
- name: Generate Invoice
  endpoint:
    path: /generate-invoice
    method: POST
    data_selector: uuid
- name: Update Order Status
  endpoint:
    path: /update-order-status
    method: POST
    data_selector: status
- name: getUUID
  endpoint:
    path: /service/getUUID
    method: POST
- name: verifyWebhook
  endpoint:
    path: /service/verifyWebhook
    method: POST
- name: cancelSubscription
  endpoint:
    path: /service/cancelSubscription
    method: POST
- name: debitSubscription
  endpoint:
    path: /service/debitSubscription
    method: POST
- name: merchant
  endpoint:
    path: /merchant
    method: GET
    data_selector: records
- name: generate_order
  endpoint:
    path: /api/generate_order
    method: POST
    data_selector: result
    params: {}
- name: transaction_lookup
  endpoint:
    path: /api/transaction_lookup
    method: POST
    data_selector: result
    params: {}
- name: verify_webhook_signature
  endpoint:
    path: /api/verify_webhook_signature
    method: POST
    data_selector: isValid
    params: {}
- name: verify_age_verification
  endpoint:
    path: /api/verify_age_verification
    method: POST
    data_selector: result
    params: {}
- name: age_verification
  endpoint:
    path: /age_verification
    method: POST
- name: payment
  endpoint:
    path: /payin
    method: POST
- name: generate_order
  endpoint:
    path: /createOrder
    method: POST
    data_selector: result
    params: {}
- name: transaction_lookup
  endpoint:
    path: /transactionLookup
    method: POST
    data_selector: result
    params: {}
- name: verify_webhook_signature
  endpoint:
    path: /verifyWebhookSignature
    method: POST
    data_selector: result
    params: {}
- name: verify_age_verification
  endpoint:
    path: /verifyAgeVerification
    method: POST
    data_selector: result
    params: {}
- name: age_verification
  endpoint:
    path: /verifyAgeVerification
    method: POST
    data_selector: response
    params: {}
- name: payment_confirmation
  endpoint:
    path: /paymentConfirmation
    method: POST
    data_selector: response
    params: {}
- name: age_verification
  endpoint:
    path: /age-verification
    method: POST
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: add_payee
  endpoint:
    path: /api/add_payee
    method: POST
- name: create_transfer
  endpoint:
    path: /api/create_transfer
    method: POST
- name: wallet_address_kyt
  endpoint:
    path: /api/wallet_address_kyt
    method: POST
- name: Transaction
  endpoint:
    path: /api/transaction
    method: GET
- name: Merchant
  endpoint:
    path: /api/merchant
    method: GET
- name: Add Payee
  endpoint:
    path: /api/v1/add-payee
    method: POST
- name: Create Transfer
  endpoint:
    path: /api/v1/create-transfer
    method: POST
- name: Wallet Address KYT
  endpoint:
    path: /api/v1/wallet-address-kyt
    method: POST
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
    params: {}
- name: Payout
  endpoint:
    path: /api/payout
    method: GET
    data_selector: records
    params: {}
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
- name: Payout
  endpoint:
    path: /api/payouts
    method: GET
    data_selector: records
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: data
    params: {}
- name: Payouts
  endpoint:
    path: /api/payouts
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: merchants
  endpoint:
    path: /api/v1/merchants
    method: GET
    data_selector: data
    params: {}
- name: PayIns
  endpoint:
    path: /api/payins
    method: POST
    data_selector: data
    params: {}
- name: Payout
  endpoint:
    path: /api/payout
    method: POST
    data_selector: data
    params: {}
- name: Transaction
  endpoint:
    path: /api/transactions
    method: GET
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: refunds
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: refunds
- name: shoppers
  endpoint:
    path: /api/shoppers
    method: GET
    data_selector: shoppers
    params:
      limit: '10'
- name: transactions_report
  endpoint:
    path: /reports/transactions
    method: GET
    data_selector: data
    params: {}
- name: shoppers_report
  endpoint:
    path: /reports/shoppers
    method: GET
    data_selector: data
    params: {}
- name: Bank/ACH Payments
  endpoint:
    path: /bank-ach-payments
    method: GET
    data_selector: bankAccounts
    params: {}
- name: bank_payments
  endpoint:
    path: /api/bank_payments
    method: GET
    data_selector: accounts
- name: settlement
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlement_data
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlement_data
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: PayIns
  endpoint:
    path: /payins
    method: GET
    data_selector: data
    params: {}
- name: Payout
  endpoint:
    path: /payout
    method: GET
    data_selector: data
    params: {}
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
- name: Payout
  endpoint:
    path: /api/payouts
    method: GET
    data_selector: records
- name: purchases
  endpoint:
    path: /api/v1/purchases
    method: GET
    data_selector: purchases
    params: {}
- name: refunds
  endpoint:
    path: /api/v1/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
    params: {}
- name: Payout
  endpoint:
    path: /api/payout
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: rewards
  endpoint:
    path: /rewards
    method: GET
    data_selector: rewards
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: rewards
  endpoint:
    path: /rewards
    method: GET
    data_selector: rewards
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
- name: PayIns
  endpoint:
    path: /api/payins
    method: POST
    data_selector: data
    params: {}
- name: Payout
  endpoint:
    path: /api/payout
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: records
- name: merchants
  endpoint:
    path: /api/merchants
    method: GET
    data_selector: records
- name: refunds
  endpoint:
    path: /api/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: refunds
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
- name: refunds
  endpoint:
    path: /api/refunds
    method: GET
- name: shoppers
  endpoint:
    path: /api/shoppers
    method: GET
- name: merchants
  endpoint:
    path: /api/merchants
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: shoppers
  endpoint:
    path: /api/shoppers
    method: GET
    data_selector: records
    params: {}
- name: merchants
  endpoint:
    path: /merchants
    method: GET
    data_selector: data
- name: transactions
  endpoint:
    path: /reports/transactions
    method: GET
    data_selector: records
    params:
      format: csv
- name: refunds
  endpoint:
    path: /reports/refunds
    method: GET
    data_selector: records
    params:
      format: csv
- name: shoppers
  endpoint:
    path: /reports/shoppers
    method: GET
    data_selector: records
    params:
      format: csv
- name: merchants
  endpoint:
    path: /reports/merchants
    method: GET
    data_selector: records
    params:
      format: csv
- name: subscriptions
  endpoint:
    path: /payins/utility-apis/subscriptions-recurring-payments
    method: GET
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
- name: Payout
  endpoint:
    path: /api/payout
    method: GET
- name: PayIns
  endpoint:
    path: /api/payins
    method: GET
    data_selector: records
- name: Payout
  endpoint:
    path: /api/payouts
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /api/v1/invoices
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Partners introduce merchants to RocketFuel's bank transfer and volatility-proof
  cryptocurrency payment solution and earn a commission on every transaction they
  process.
- Cryptocurrency exchanges facilitate the trading of cryptocurrencies for other assets,
  including digital and fiat currencies.
- Only payments in USD can be made using bank transfers for now.
- Invoices help merchants use RocketFuel's solution outside their website.
- Merchants who don't want to use iFrame for payment solutions can use our hosted
  checkout solution.
- All the money earned by the merchants using RocketFuel's solution is settled to
  the merchants by RocketFuel daily.
- To install the app on your BigCommerce store, your store must be using BigCommerce's
  Stencil Themes and Optimized One Page Checkout.
- You have to select the details like Email, Password, Merchant ID and Public Key
  based on the environment you choose to work on.
- Choose production for real transactions and select sandbox when testing.
- Visit your store's admin dashboard to set up the merchant details.
- Choose production for real transactions and select sandbox for testing.
- Requires setup of connected app in Rocketfuel
- Some API responses may have rate limits
- You need to be registered as a Merchant on https://merchant.rocketfuel.inc to start
  using the service.
- Some endpoints may have rate limits
- 'Pre-requisite: WooCommerce installed on your WordPress website'
- A verified merchant account on Rocketfuel.
- The 'Callback URL' will be auto generated.
- To integrate Rocketfuel on Webflow, you need to create a custom place order button
  and include the JS SDK.
- To be deprecated soon!
- Invoice Id also known as UUID is needed to complete transaction on the iframe.
- Requires setup of connected app in api
- Requires an approved Rocketfuel Merchant Account
- Use Composer for installation if possible
- Environment can be prod or preprod for different setups.
- An approved Rocketfuel Merchant Account is required.
- Sandbox and production environments are available.
- Domain whitelisting ensures that your SDK can only be accessed from approved domains.
- You should choose production for real transactions and select sandbox when you are
  testing.
- Node.js installed
- An active Rocketfuel account with access credentials
- Only URLs from whitelisted domains can load the SDK.
- Subdomains must be added explicitly if required.
- Use environment variables for security and flexibility.
- You must whitelist the domain from which you are accessing the SDK in your merchant
  portal.
- Webhook signature verification must ensure req.body is parsed.
- Only accept window messages from trusted origins.
- Currently, the Bank transfer facility is only available to USA shoppers.
- RKFL Developer Guide offers a quick way to get up and running and familiarize yourself
  with its concepts.
- This quickstart assumes you are testing in the Sandbox Environment and uses the
  base URL of https://app-sandbox.rocketfuelblockchain.com/api
- If you have developed your payment solution using the RKFL sandbox API and are ready
  to move into production. The API base URL will require to point to the RKFL production
  APIs at https://app.rocketfuelblockchain.com/api
- RocketFuel is committed to working and iterating in the process and greatly values
  any feedback you may have.
- Data passed along with Auth Header is encrypted using a secret key.
- The target audience of this document is merchants who wish to expand their business
  by allowing their customers to pay using crypto by integrating our solution.
- FAQ and Tips
- Requires setup of OAuth2 credentials.
- The minimum size of the logo is 100*100 px
- Merchant should have generated public and secret keys
- KYB of the merchant should have been completed
- After this you will see a success message 'Your password has been changed successfully!'
- Check your email for further instructions after resetting your password.
- If you don’t receive a message in 5 minutes, check the junk folder.
- Some objects may return nulls in deeply nested fields
- At a time, max. ten rows are presented to a user with pagination at the bottom of
  the list.
- Currently, you only have the option to download the report in CSV format.
- Max. 10 rows are presented to a user with pagination at the list's bottom.
- Reports can be downloaded in CSV format.
- Fiat/Bank payments are currently disabled.
- Instore Payments page helps you with quick invoice creation.
- Shoppers can pay simultaneously by scanning the QR code.
- You can request new bank details or crypto wallet address for your settlement.
- Settlement data will be shown when updated by RocketFuel's accounts team.
- This page will show you all the details of your shoppers' subscriptions.
- Ensure to check for the latest API version
- Accept multiple cryptocurrencies and global payment channels
- 24/7 customer support
- Advanced fraud detection and prevention
- Easy Refunds
- Subscriptions
- Invoice payments
- After the signup process, once you have verified your email, you can complete your
  verification from the dashboard.
- Refund option for successful payments only if the merchant has it enabled for their
  store.
- Bank payments are currently disabled.
- The main information will include Merchant subscription Id, shop name, item name,
  frequency, next billing date, and amount.
- The data presented is as per the date range selected
- A maximum of ten rows are presented to a user with pagination at the bottom of the
  list.
- Some objects like Contact may return nulls in deeply nested fields
- The data presented is as per the date range selected.
- At a time, max. ten rows are presented to a user with pagination at the list's bottom.
- At a time, a maximum of ten rows are presented to a user with pagination at the
  bottom of the list.
- You can only download reports in CSV format.
- You can see the Total shoppers count (Unique shoppers who purchased from your merchants)
  and the total average purchase value.
- This page also helps you with setting up your white label settings.
- You can expand the merchant details row to see more details such as register date,
  phone, auth header, secret key, etc.
- Please follow the below steps to invite partners to sign up under your business.
- For generating a report, both From and To dates are required.
- Currently, reports can only be downloaded in CSV format.
- The main information will include Merchant subscription ID, Item name, Frequency,
  Next billing date, and Amount.
- 'Subscription Enhancements: A new API enables fetching subscription details by user,
  merchant, or account, supporting plan management and billing. Subscriptions are
  now created at transaction initiation (status 10), and listings will reflect this
  status. Webhook calls to the Subscriber Backend will include ‘isSubscription’ (true/false)
  and a ‘subscription’ object or ID for better tracking.'
- 'High-Risk OFAC Transaction Blocking: All PayIn transactions will go through KYT
  (Know Your Transaction) checks. If flagged as high-risk by OFAC, the system will
  block the payment, mark it as ‘Compliance Blocked’ in reports, and the merchants
  will not be settled for these payments.'
- New WooCommerce installations now require ClientId and ClientSecret for authentication
  instead of email and password.
- API has undergone significant enhancements to handle multiple payee additions and
  transfers.
- You can now also remove, block, resend, and reclaim payees.
- Requires OAuth2 authentication for all endpoints
- Ensure correct permissions are set for API access
- 'Subscription Enhancements: A new API enables fetching subscription details by user,
  merchant, or account, supporting plan management and billing.'
- 'High-Risk OFAC Transaction Blocking: All PayIn transactions will go through KYT
  (Know Your Transaction) checks.'
- Merchants will now receive an email notification if additional information or documents
  are required for their KYB process.
- Merchants can now search for transactions in the Transaction menu using the transaction
  hash.
- Merchants will now be notified via a webhook when a transaction times out.
- Two-Factor Authentication (2FA) for all merchant users requires setup.
- 'Improved Shopper Sign-Up & Login Experience: Shoppers can now sign up and login
  using only the email address.'
- 'Faster Confirmation for All Merchants: Faster confirmation for most popular coins
  is now enabled for all merchants.'
- Webhooks allow you to register your URL in RKFL to get an automatic notification
  when an event occurs in the RKFL ecosystem.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint URL.'
- 'INVALID_REQUEST: Check the parameters sent'
- '401 Unauthorized: Verify client credentials'
- 'Invalid date range: Ensure From and To dates are correctly set.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify OAuth token'
- '404 Not Found: Check endpoint URL'
- 'Bug Fixes and Known Issues: We''ve addressed several bugs and are actively working
  on resolving known issues to further enhance your experience on our platform.'
auth_info:
  mentioned_objects:
  - CLIENT_ID
  - CLIENT_SECRET
  - MERCHANT_ID
  - OauthToken
  - AuthProvider
  - OAuthToken
  - NamedCredential
  - OAuth2Token
  - Merchant
  - Transaction
client:
  base_url: https://docs.rocketfuel.inc
  auth:
    type: oauth2
source_metadata: null
