resources:
- name: page
  endpoint:
    path: /pages
    method: GET
    data_selector: records
- name: search_query_log
  endpoint:
    path: /@api/deki/site/query/log
    method: GET
    data_selector: queries
    params: {}
- name: search_query_logs
  endpoint:
    path: /@api/deki/site/query/logs
    method: GET
    data_selector: logs
    params: {}
- name: search_query_log_download_url
  endpoint:
    path: /@api/deki/site/query/logs/{logname}/url
    method: GET
    data_selector: log.url
- name: search_term_and_query_detail
  endpoint:
    path: /@api/deki/site/query/log/{queryid}
    method: GET
    data_selector: query
- name: search_terms
  endpoint:
    path: /@api/deki/site/query/log/terms
    method: GET
    data_selector: terms
- name: search_analytics
  endpoint:
    path: /@api/deki/site/search/analytics
    method: GET
    data_selector: response
    params: {}
- name: detailed_search_analytics
  endpoint:
    path: /@api/deki/site/search/analytics/query
    method: GET
    data_selector: response
    params: {}
- name: page_health_inspections
  endpoint:
    path: /@api/deki/pages/{pageid}/health
    method: GET
    data_selector: inspections
    params:
      limit: 100
      offset: 0
- name: conditional_content_report
  endpoint:
    path: /@api/deki/site/reports/conditionalcontent.csv
    method: GET
    data_selector: Status, Location, Message, Expression, Details
- name: site_health_inspections
  endpoint:
    path: /@api/deki/site/reports/health.csv
    method: GET
    data_selector: Status, Location, Message, Analyzer
- name: retrieve_site_health_inspections
  endpoint:
    path: /@api/deki/site/reports/sitehealth
    method: GET
    data_selector: inspections
    params:
      limit: 100
      offset: 0
- name: site_jobs
  endpoint:
    path: /@api/deki/site/jobs
    method: GET
    data_selector: jobs
- name: site_job
  endpoint:
    path: /@api/deki/site/jobs/{id}
    method: GET
    data_selector: job
- name: cancel_site_job
  endpoint:
    path: /@api/deki/site/jobs/{id}/cancel
    method: POST
- name: schedule_export_job
  endpoint:
    path: /@api/deki/site/jobs/export
    method: POST
- name: site_import_job
  endpoint:
    path: /@api/deki/site/jobs/import
    method: POST
- name: set_site_job_status
  endpoint:
    path: /@api/deki/site/jobs/{id}/status/{status}
    method: PUT
- name: learning_paths
  endpoint:
    path: /@api/deki/learning-paths
    method: GET
- name: learning_path
  endpoint:
    path: /@api/deki/learning-paths/{pathid}
    method: GET
    data_selector: learning-path
    params: {}
- name: learning_path_pages
  endpoint:
    path: /@api/deki/learning-paths/{pathid}/pages
    method: GET
    data_selector: pages
    params: {}
- name: learning_path_page
  endpoint:
    path: /@api/deki/learning-paths/{pathid}/pages/{pageid}
    method: GET
    data_selector: page
    params: {}
- name: search_query
  endpoint:
    path: /@api/deki/site/query
    method: GET
- name: search
  endpoint:
    path: /@api/deki/site/opensearch
    method: GET
    data_selector: results
    params:
      limit: '100'
      offset: '0'
- name: description
  endpoint:
    path: /@api/deki/site/opensearch/description
    method: GET
    data_selector: description
- name: suggestions
  endpoint:
    path: /@api/deki/site/opensearch/suggestions
    method: GET
    data_selector: suggestions
- name: recommendations
  endpoint:
    path: /@api/deki/site/query/recommendations
    method: GET
    data_selector: recommendations
- name: retrieve_search_recommendation
  endpoint:
    path: /@api/deki/site/query/recommendations/{id}
    method: GET
- name: create_search_recommendation
  endpoint:
    path: /@api/deki/site/query/recommendations
    method: POST
- name: update_search_recommendation
  endpoint:
    path: /@api/deki/site/query/recommendations/{id}
    method: PUT
- name: retrieve_list_of_api_tokens
  endpoint:
    path: /@api/deki/site/developer-tokens
    method: GET
- name: web_widgets
  endpoint:
    path: /@api/deki/web-widgets
    method: GET
- name: web_widget
  endpoint:
    path: /@api/deki/web-widgets/{id}
    method: GET
- name: developer_token
  endpoint:
    path: /@api/deki/site/developer-tokens/{id}
    method: GET
- name: pages_overview
  endpoint:
    path: /pages/pageid/overview
    method: GET
- name: pages_linkdetails
  endpoint:
    path: /pages/pageid/linkdetails
    method: GET
- name: pages_allowed
  endpoint:
    path: /pages/pageid/allowed
    method: POST
- name: files_properties
  endpoint:
    path: /pages/pageid/files/filename/properties/key
    method: PUT
- name: pages
  endpoint:
    path: /pages
    method: GET
    data_selector: records
- name: page_contents
  endpoint:
    path: /pages/pageid/contents
    method: POST
    data_selector: records
- name: page_properties
  endpoint:
    path: /pages/pageid/properties
    method: GET
    data_selector: records
- name: pages
  endpoint:
    path: /pages
    method: GET
- name: page_properties
  endpoint:
    path: /pages/pageid/properties/key
    method: DELETE
- name: popular_pages
  endpoint:
    path: /pages/popular
    method: GET
    params:
      limit: '50'
      offset: '0'
- name: page_info
  endpoint:
    path: /pages/pageid
    method: GET
    params:
      includeDeleted: true
      mode: view
      format: html
      renderAsLlmIndexer: true
- name: subpages
  endpoint:
    path: /pages/pageid/subpages
    method: GET
    params:
      limit: '100'
      offset: '0'
- name: page_ratings
  endpoint:
    path: /pages/pageid/ratings
    method: GET
- name: page_files
  endpoint:
    path: /pages/pageid/files
    method: GET
    params:
      limit: '100'
      offset: '0'
- name: page_thumbnail
  endpoint:
    path: /pages/pageid/thumbnail
    method: GET
- name: files
  endpoint:
    path: /pages/pageid/files/filename
    method: HEAD
    data_selector: content
    params: {}
- name: files_get
  endpoint:
    path: /pages/pageid/files/filename
    method: GET
    data_selector: content
    params: {}
- name: files_delete
  endpoint:
    path: /pages/pageid/files/filename
    method: DELETE
    data_selector: content
    params: {}
- name: files_put
  endpoint:
    path: /pages/pageid/files/filename
    method: PUT
    data_selector: content
    params: {}
- name: explain
  endpoint:
    path: /pages/pageid/explain
    method: GET
    data_selector: content
    params: {}
- name: files_description_get
  endpoint:
    path: /pages/pageid/files/filename/description
    method: GET
    data_selector: content
    params: {}
- name: files_description_delete
  endpoint:
    path: /pages/pageid/files/filename/description
    method: DELETE
    data_selector: content
    params: {}
- name: files_description_put
  endpoint:
    path: /pages/pageid/files/filename/description
    method: PUT
    data_selector: content
    params: {}
- name: files_info_get
  endpoint:
    path: /pages/pageid/files/filename/info
    method: GET
    data_selector: content
    params: {}
- name: revisions
  endpoint:
    path: /pages/pageid/revisions
    method: GET
    data_selector: content
    params: {}
- name: filereferences
  endpoint:
    path: /pages/pageid/filereferences
    method: GET
    data_selector: content
    params: {}
- name: contents_explain
  endpoint:
    path: /pages/pageid/contents/explain
    method: GET
    data_selector: content
    params: {}
- name: query_recommendations_post
  endpoint:
    path: /site/query/recommendations
    method: POST
- name: query_recommendations_get
  endpoint:
    path: /site/query/recommendations
    method: GET
    params:
      limit: 25
      offset: 0
- name: content_reuse_totals_logs
  endpoint:
    path: /site/content-reuse-totals/logs/logname/url
    method: GET
    data_selector: logs
- name: site_activity_logs
  endpoint:
    path: /site/activity/logs
    method: GET
    data_selector: logs
- name: search_analytics_query
  endpoint:
    path: /site/search/analytics/query
    method: GET
    data_selector: searchAnalytics
- name: contribution_events
  endpoint:
    path: /site/analytics/contributionevents
    method: GET
    data_selector: contributionEvents
- name: user_engagement
  endpoint:
    path: /site/analytics/userengagement
    method: GET
    data_selector: userEngagement
- name: search_terms
  endpoint:
    path: /site/query/logs
    method: GET
    data_selector: searchTerms
- name: developer_tokens
  endpoint:
    path: /site/developer-tokens/id
    method: GET
    data_selector: developerTokens
- name: opensearch
  endpoint:
    path: /site/opensearch
    method: GET
    data_selector: searchResults
- name: recommendations
  endpoint:
    path: /site/query/recommendations/id
    method: GET
    data_selector: '200'
    params:
      id: required
- name: logs_file
  endpoint:
    path: /site/license/usage/logs/file
    method: GET
    data_selector: '200'
- name: pageviewsessions
  endpoint:
    path: /site/analytics/pageviewsessions
    method: GET
    data_selector: '200'
    params:
      month: string
      filename: string
- name: activity_logs_file
  endpoint:
    path: /site/activity/logs/file
    method: GET
    data_selector: '200'
    params:
      month: string
- name: tags
  endpoint:
    path: /site/tags
    method: GET
    data_selector: '200'
    params:
      pages: bool
      q: string
- name: content_reuse_totals_logs
  endpoint:
    path: /site/content-reuse-totals/logs
    method: GET
    data_selector: '200'
- name: import
  endpoint:
    path: /site/jobs/import
    method: POST
    data_selector: ''
    params:
      dryrun: false
      overwritemediaguids: false
- name: suggestions
  endpoint:
    path: /site/opensearch/suggestions
    method: GET
    data_selector: ''
    params:
      q: ''
      sortby: -score
      constraint: ''
      pathancestors: ''
      tags: ''
      classifications: ''
      types: ''
      namespaces: ''
      engine: lucene
- name: sitehealth
  endpoint:
    path: /site/reports/sitehealth
    method: GET
    data_selector: ''
    params:
      analyzers: ''
      severity: warning,info,error
      limit: 100
      offset: 0
- name: content-reuse-logs
  endpoint:
    path: /site/content-reuse/logs/file
    method: GET
    data_selector: ''
    params:
      month: ''
- name: kernel-events
  endpoint:
    path: /site/analytics/kernelevents
    method: GET
    data_selector: ''
    params:
      month: ''
      filename: kernelevents_yyyyMM.csv
- name: developer-tokens
  endpoint:
    path: /site/developer-tokens
    method: GET
    data_selector: ''
    params: {}
- name: search-analytics-querydetails
  endpoint:
    path: /site/search/analytics/querydetails.csv
    method: GET
    data_selector: ''
    params:
      start: ''
      end: ''
      query: ''
      userfilter: none
      web_widget_embed_id: ''
      originfilter: ''
      sortby: clicks
      sortorder: desc
      limit: 1000
      groupids: ''
- name: pageviews
  endpoint:
    path: /site/analytics/pageviews
    method: GET
    data_selector: ''
    params:
      month: ''
      filename: pageviews_yyyyMM.csv
- name: conditional-content-report
  endpoint:
    path: /site/reports/conditionalcontent.csv
    method: GET
    data_selector: ''
    params:
      severity: warning,info,error
- name: search-analytics
  endpoint:
    path: /site/search/analytics
    method: GET
    data_selector: ''
    params:
      start: ''
      end: ''
      bucket: month
      userfilter: none
      queryfilters: ''
      web_widget_embed_id: ''
      originfilter: ''
      sortby: searches
      sortorder: desc
      limit: 100
      groupids: ''
- name: user_properties
  endpoint:
    path: /users/userid/properties
    method: GET
    data_selector: properties
- name: update_user_properties
  endpoint:
    path: /users/userid/properties
    method: PUT
    data_selector: properties
- name: authenticate_user
  endpoint:
    path: /users/authenticate
    method: POST
    data_selector: authentication
- name: retrieve_user
  endpoint:
    path: /users/userid
    method: GET
    data_selector: user
- name: file_description
  endpoint:
    path: /files/fileid/description
    method: GET
    params: {}
- name: copy_attachment
  endpoint:
    path: /files/fileid/copy
    method: POST
    params: {}
- name: update_attachment_description
  endpoint:
    path: /files/fileid/description
    method: PUT
    params: {}
- name: reset_file_description
  endpoint:
    path: /files/fileid/description
    method: DELETE
    params: {}
- name: file_attachment_content
  endpoint:
    path: /files/fileid:GET
    method: GET
- name: file_attachment_properties
  endpoint:
    path: /files/fileid/properties:GET
    method: GET
- name: file_attachment_revisions
  endpoint:
    path: /files/fileid/revisions:GET
    method: GET
- name: file_attachment_details
  endpoint:
    path: /files/fileid/attachmentdetails:GET
    method: GET
- name: user2group
  endpoint:
    path: /groups/user2group.csv
    method: GET
- name: groups
  endpoint:
    path: /groups.csv
    method: GET
- name: group_users_post
  endpoint:
    path: /groups/groupid/users
    method: POST
- name: group_users_get
  endpoint:
    path: /groups/groupid/users
    method: GET
- name: group_users_put
  endpoint:
    path: /groups/groupid/users
    method: PUT
- name: create_or_update_group
  endpoint:
    path: /groups
    method: POST
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: webhook_event
  endpoint:
    path: /webhooks/{webhookid}/events
    method: GET
    data_selector: events
- name: drafts
  endpoint:
    path: /drafts
    method: GET
    data_selector: drafts
    params: {}
- name: drafts/pageid/related
  endpoint:
    path: /drafts/pageid/related
    method: GET
    data_selector: relatedPages
    params:
      previouspages: required
- name: drafts/pageid
  endpoint:
    path: /drafts/pageid
    method: GET
    data_selector: draft
    params:
      mode: required
- name: drafts/pageid/tabs
  endpoint:
    path: /drafts/pageid/tabs
    method: GET
    data_selector: tabs
    params: {}
- name: drafts/pageid/overview
  endpoint:
    path: /drafts/pageid/overview
    method: GET
    data_selector: overview
    params: {}
- name: drafts_pageid_files_filename_alttext
  endpoint:
    path: /drafts/pageid/files/filename/alttext
    method: PUT
    data_selector: response
    params:
      draft: 'true'
- name: drafts_pageid_diff
  endpoint:
    path: /drafts/pageid/diff
    method: GET
    data_selector: response
    params: {}
- name: drafts_pageid_publish
  endpoint:
    path: /drafts/pageid/publish
    method: POST
    data_selector: response
    params:
      allow: none
- name: drafts_pageid_properties
  endpoint:
    path: /drafts/pageid/properties
    method: POST
    data_selector: response
    params: {}
- name: drafts_pageid_properties_get
  endpoint:
    path: /drafts/pageid/properties
    method: GET
    data_selector: response
    params: {}
- name: drafts_pageid_properties_key_info
  endpoint:
    path: /drafts/pageid/properties/key/info
    method: GET
    data_selector: response
    params: {}
- name: drafts_pageid_create
  endpoint:
    path: /drafts/pageid/create
    method: POST
    data_selector: response
    params: {}
- name: drafts_pageid_tags
  endpoint:
    path: /drafts/pageid/tags
    method: GET
    data_selector: response
    params: {}
- name: drafts_pageid_tags_put
  endpoint:
    path: /drafts/pageid/tags
    method: PUT
    data_selector: response
    params: {}
- name: llm_persona_change
  endpoint:
    path: /llm/persona/change
    method: POST
    data_selector: response
    params: {}
- name: license_usage_logs
  endpoint:
    path: /license/usage/logs/file
    method: GET
    data_selector: logs
    params:
      month: yyyy-MM
- name: user_engagement
  endpoint:
    path: /@api/deki/site/analytics/userengagement
    method: GET
    data_selector: results
    params:
      month: YYYY-MM
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: translation_billing
  endpoint:
    path: /Admin/Instant_Translation/Instant_Translation_billing_report
    method: GET
    data_selector: translation_events
    params: {}
- name: developer-token
  endpoint:
    path: /@api/deki/site/developer-tokens
    method: POST
- name: Learning Path
  endpoint:
    path: /Manage/Organize/Paths/Create_a_Learning_Path
    method: POST
    data_selector: path_data
- name: SAML SSO Integration
  endpoint:
    path: /Admin/Authentication/SAML_SSO
    method: GET
    data_selector: SAML assertions
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- A known custom header starting with X-Deki is always required for retrieving and
  updating content.
- Some API responses may require appending ?dream.out.format=json to the request URL
- CXone Mpower Expert can be configured as a standalone system with built-in authentication
  with a local identity provider, or configured for Single Sign-On (SSO) with customers'
  identity providers.
- Extend CXone Expert content into other application or systems with embeddable web
  widgets or a secure API.
- Authenticated CXOne Expert site users can access the API through the web browser
  after signing in.
- A user with ADMIN permissions is required for certain endpoints.
- Admin access to the CXone Mpower Expert site is required
- CXone environment with an Admin resource is required
- Some objects like Contact may return nulls in deeply nested fields
- Custom Dictionary should be reserved for critical terms and phrases that have a
  significant impact on translations.
- The upper limit for dictionary size is 300 target terms.
- The billing process for this report begins on September 1, 2025.
- Anonymous page caching is enabled for all Expert sites.
- Generate Browser API Tokens for Expert web integrations requiring API access.
- OAuth bearer tokens are one-time issuance and have a 10-year expiration.
- Both the key and the secret are necessary for integrating with the Expert API, so
  do not lose them.
- Maximum of 30 pages per Path
- By default, Expert authentication sessions expire 6.5 days after a user has authenticated.
- Expert highly recommends the use of a reputable third party identity provider vendor
  such as Okta, OneLogin, or Ping Identity.
- Constructing links directly to *Special:UserLogin* can lead to problems when handling
  return URLs.
- Multiple Identity Provider Sign In allows multiple sign-in options on one page for
  users to authenticate into an Expert site.
- At least one external identity provider service configured by Expert Professional
  Services is required.
- OpenID Connect provides advanced privacy configurations.
- OpenID Connect sessions cannot occur behind existing VPN or IP-restrictions.
- SAML provides a single point of authentication at a secure identity provider (IdP).
  User credentials never leave the firewall boundary.
- SAML allows users to securely access multiple applications with a Single Sign-On
  experience.
- If a Seated User reaches the timeout period while a page is in Edit mode, the user
  will be logged out but any changes are auto-saved locally.
- The default time for inactivity is 2 days, but can be modified by contacting Expert
  Support.
- This is a security measure to ensure that users are signed out if they are inactive
  for an extended period.
errors:
- '400 Bad Request: Invalid or missing request URL query parameter, invalid HTTP body
  format, or invalid or missing HTTP body parameter value'
- '401 Unauthorized: A request to the authentication API endpoint failed'
- '403 Forbidden: The requested resource is not accessible due to a permission check
  or invalid authorization'
- '404 Not Found: The requested resource could not be found'
- '405 Not Allowed: The API endpoint does not support the HTTP method in the request'
- '410 Gone: The API endpoint was deprecated and was not replaced with a new location'
- '400: Invalid input parameter'
- '403: A user with ADMIN permissions is required'
- 400 Invalid input parameter
- 403 A user with ADMIN permissions is required
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Error message when two people edit the same Path
auth_info:
  mentioned_objects:
  - AuthToken
  - Browser API Token
  - Server API Token
  - OAuth API Token
  - ADMIN permissions
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth bearer tokens
  - developer-token
  - identity provider service id
  - identity provider
  - relying party
client:
  base_url: https://{hostname}
  auth:
    type: apikey
    location: header
    header_name: X-Deki-Token
source_metadata: null
