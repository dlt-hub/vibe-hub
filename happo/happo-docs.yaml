resources:
- name: happo-ci-github-actions
  endpoint:
    path: /happo-ci-github-actions
    method: POST
- name: happo-ci-circleci
  endpoint:
    path: /happo-ci-circleci
    method: POST
- name: happo-ci-azure-pipelines
  endpoint:
    path: /happo-ci-azure-pipelines
    method: POST
- name: happo-ci-travis
  endpoint:
    path: /happo-ci-travis
    method: POST
- name: happo-ci
  endpoint:
    path: /happo-ci
    method: POST
- name: happo_commands
  endpoint:
    path: /api/commands
    method: GET
    data_selector: commands
    params: {}
- name: static_package
  endpoint:
    path: ./static
    method: POST
    data_selector: package
- name: happo
  endpoint:
    path: /api/happo
    method: GET
- name: static_package
  endpoint:
    path: ./static
    method: POST
    data_selector: generateStaticPackage
    params: {}
- name: happoTask
  endpoint:
    path: /happo-cypress/task
    method: POST
    data_selector: task
    params: {}
- name: happo
  endpoint:
    path: /happo/e2e
    method: POST
- name: happo_screenshots
  endpoint:
    path: /screenshots
    method: POST
    data_selector: screenshots
    params: {}
- name: pages
  endpoint:
    path: /pages
    method: GET
    data_selector: records
- name: happo
  endpoint:
    path: /api/v1
    method: POST
    data_selector: results
- name: pages
  endpoint:
    path: /api/pages
    method: GET
    data_selector: pages
    params: {}
notes:
- All API endpoints are auth protected.
- Use environment variables for apiKey and apiSecret
- The scripts assume a PR based model.
- If you for some reason can't install the Happo GitHub App (e.g. when using GitHub
  Enterprise) you can still get the Happo status posted to your PR -- as a comment
  on the pull request.
- Happo will wait at most 20 seconds for a response from the webhook.
- Adding Happo to your Continuous Integration setup is the best way to catch visual
  regressions early.
- Uses GitHub App for posting statuses on PRs/commits
- If using GitHub Actions, set HAPPO_GITHUB_TOKEN based on secrets.GITHUB_TOKEN
- Requires setup of environment variables for HAPPO_API_KEY and HAPPO_API_SECRET
- Some objects like Contact may return nulls in deeply nested fields
- You'll most likely want to pass in apiKey and apiSecret via environment variables.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- For security reasons, you'll most likely want to pass in apiKey and apiSecret via
  environment variables
- The `happo-cypress` module will disable itself if it can't detect any api tokens
  (`apiKey` and `apiSecret` in config).
- Styles and assets are collected automatically during your test suite.
- Uses apiKey and apiSecret — requires setup in .happo.js
- Happo will disable itself if it can't detect any api tokens (apiKey and apiSecret)
- Uses API Key for authentication — requires setup of Happo account
- The urls to the website need to be publicly available, otherwise Happo workers won't
  be able to access the pages
- The `happo-cypress` module will disable itself if it can't detect any api tokens
  (`apiKey` and `apiSecret` in config). Check to make sure your `.happo.js` config
  is properly set up.
- API tokens are used to authenticate you with the remote happo.io service
- For security reasons, pass in apiKey and apiSecret via environment variables.
- Never store these tokens in plain text. Use environment variables instead.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://happo.io
  headers:
    Accept: application/json
source_metadata: null
