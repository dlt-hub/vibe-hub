resources:
- name: edgeworker_node
  endpoint:
    path: /system/host-list
    method: GET
    data_selector: hosts
- name: edgeworker_inventory
  endpoint:
    path: /usr/share/ansible/stx-ansible/playbooks/provision_edgeworker.yml
    method: POST
    data_selector: provisioning
- name: kubevirt_app
  endpoint:
    path: /usr/local/share/applications/helm/kubevirt-app-24.09-30.tgz
    method: POST
- name: kubevirt_status
  endpoint:
    path: /kubectl/get/all
    method: GET
- name: intel-device-plugins-operator
  endpoint:
    path: /node_management/kubernetes/intel-device-plugins-operator-application-overview-c5de2a6212ae.html#intel-device-plugins-operator-application-overview
    method: GET
- name: kubevirt-app
  endpoint:
    path: /kube-virt/introduction-bb3a04279bf5.html#introduction-bb3a04279bf5
    method: GET
- name: power-metrics
  endpoint:
    path: /node_management/kubernetes/install-power-metrics-application-a12de3db7478.html#install-power-metrics-application
    method: GET
- name: dell-storage
  endpoint:
    path: /storage/kubernetes/dell-storage-backend-28f5771e6d9b.html#dell-storage-backend-28f5771e6d9b
    method: GET
- name: security-profiles-operator
  endpoint:
    path: /security/kubernetes/install-security-profiles-operator-1b2f9a0f0108.html#install-security-profiles-operator-1b2f9a0f0108
    method: GET
- name: ptp-notification
  endpoint:
    path: /admintasks/kubernetes/install-ptp-notifications.html#install-ptp-notifications
    method: GET
- name: snmp
  endpoint:
    path: /fault-mgmt/kubernetes/snmp-overview.html#snmp-overview
    method: GET
- name: auditd
  endpoint:
    path: /security/kubernetes/auditd-support-339a51d8ce16.html#auditd-support-339a51d8ce16
    method: GET
- name: oidc-auth-apps
  endpoint:
    path: /security/kubernetes/configure-oidc-auth-applications.html#configure-oidc-auth-applications
    method: GET
- name: node-interface-metrics-exporter
  endpoint:
    path: /guest_integration/kubernetes/node-interface-metrics-exporter-application-d98b2707c7e9.html#node-interface-metrics-exporter-application-d98b2707c7e9
    method: GET
- name: nginx-ingress-controller
  endpoint:
    path: /security/kubernetes/the-cert-manager-bootstrap-process.html#the-cert-manager-bootstrap-process
    method: GET
- name: metrics-server
  endpoint:
    path: /admintasks/kubernetes/kubernetes-admin-tutorials-metrics-server.html#kubernetes-admin-tutorials-metrics-server
    method: GET
- name: harbor
  endpoint:
    path: /admintasks/kubernetes/harbor-as-system-app-1d1e3ec59823.html#harbor-as-system-app-1d1e3ec59823
    method: GET
- name: vault
  endpoint:
    path: /security/kubernetes/security-vault-overview.html#security-vault-overview
    method: GET
- name: oran-o2
  endpoint:
    path: /admintasks/kubernetes/oran-o2-application-b50a0c899e66.html#oran-o2-application-b50a0c899e66
    method: GET
- name: portieris
  endpoint:
    path: /security/kubernetes/install-portieris.html#install-portieris
    method: GET
- name: sts-silicom
  endpoint:
    path: /system_configuration/kubernetes/configure-silicom-sts-ptp-application-1bc4a8d07aad.html#configure-silicom-sts-ptp-application-1bc4a8d07aad
    method: GET
- name: cert-manager
  endpoint:
    path: /security/kubernetes/the-cert-manager-bootstrap-process.html#the-cert-manager-bootstrap-process
    method: GET
- name: platform-integ-apps
  endpoint:
    path: /storage/kubernetes/default-behavior-of-the-cephfs-provisioner.html#default-behavior-of-the-cephfs-provisioner
    method: GET
- name: node-feature-discovery
  endpoint:
    path: /node_management/kubernetes/install-node-feature-discovery-nfd-starlingx-application-70f6f940bb4a.html#install-node-feature-discovery-nfd-starlingx-application-70f6f940bb4a
    method: GET
- name: sriov-fec-operator
  endpoint:
    path: /node_management/kubernetes/hardware_acceleration_devices/configure-sriov-fec-operator-to-enable-hw-accelerators-for-hosted-vran-containarized-workloads.html#configure-sriov-fec-operator-to-enable-hw-accelerators-for-hosted-vran-containarized-workloads
    method: GET
- name: istio
  endpoint:
    path: /admintasks/kubernetes/istio-service-mesh-application-eee5ebb3d3c4.html#istio-service-mesh-application-eee5ebb3d3c4
    method: GET
- name: kubernetes-power-manager
  endpoint:
    path: /node_management/kubernetes/configurable-power-manager-04c24b536696.html#configurable-power-manager-04c24b536696
    method: GET
- name: app-netapp-storage
  endpoint:
    path: /storage/kubernetes/configure-an-external-netapp-deployment-as-the-storage-backend.html#configure-an-external-netapp-deployment-as-the-storage-backend
    method: GET
- name: rook-ceph
  endpoint:
    path: /storage/kubernetes/install-rook-ceph-a7926a1f9b70.html#install-rook-ceph-a7926a1f9b70
    method: GET
- name: stx-openstack
  endpoint:
    path: /deploy_install_guides/release/openstack/index-install-r7-os-adc44604968c.html#index-install-r7-os-adc44604968c
    method: GET
- name: intel-ethernet-operator
  endpoint:
    path: /node_management/kubernetes/configure-intel-e810-nics-using-intel-ethernet-operator.html#configure-intel-e810-nics-using-intel-ethernet-operator
    method: GET
- name: helm
  endpoint:
    path: /usertasks/kubernetes/kubernetes-user-tutorials-helm-package-manager.html#kubernetes-user-tutorials-helm-package-manager
    method: GET
- name: FluxCD helm-controller
  endpoint:
    path: /usertasks/kubernetes/kubernetes-user-tutorials-fluxcd-deploy-00d5706c3358.html#kubernetes-user-tutorials-fluxcd-deploy-00d5706c3358
    method: GET
- name: application-list
  endpoint:
    path: /application-list
    method: GET
- name: application-show
  endpoint:
    path: /application-show
    method: GET
- name: application-upload
  endpoint:
    path: /application-upload
    method: POST
- name: helm-override-list
  endpoint:
    path: /helm-override-list
    method: GET
- name: helm-override-show
  endpoint:
    path: /helm-override-show
    method: GET
- name: helm-override-update
  endpoint:
    path: /helm-override-update
    method: POST
- name: helm-chart-attribute-modify
  endpoint:
    path: /helm-chart-attribute-modify
    method: POST
- name: helm-override-delete
  endpoint:
    path: /helm-override-delete
    method: DELETE
- name: application-apply
  endpoint:
    path: /application-apply
    method: POST
- name: application-abort
  endpoint:
    path: /application-abort
    method: POST
- name: application-update
  endpoint:
    path: /application-update
    method: POST
- name: application-remove
  endpoint:
    path: /application-remove
    method: DELETE
- name: application-delete
  endpoint:
    path: /application-delete
    method: DELETE
- name: flexran-storage
  endpoint:
    path: /api/v1/storage
    method: POST
    data_selector: persistentVolumeClaim
    params:
      storage: 80Gi
      accessModes:
      - ReadWriteOnce
      storageClassName: general
- name: buildpod
  endpoint:
    path: /api/v1/pods
    method: POST
    data_selector: pod
    params:
      restartPolicy: Never
      image: wrsnfv/flexran-builder:21.07
- name: environment_variables
  endpoint:
    path: /opt/flexran
    method: POST
    data_selector: variables
    params: {}
- name: sdk_build
  endpoint:
    path: /opt/flexran/sdk
    method: POST
    data_selector: build
    params: {}
- name: dpdk_build
  endpoint:
    path: /opt/dpdk-flxr-21.07
    method: POST
    data_selector: build
    params: {}
- name: flexran-storage
  endpoint:
    path: /persistentvolumeclaim/flexran-storage
    method: CREATE
    data_selector: persistentvolumeclaim
    params: {}
- name: buildpod
  endpoint:
    path: /pods/buildpod
    method: CREATE
    data_selector: pod
    params: {}
- name: dpdk
  endpoint:
    path: /dpdk-20.11.1.tar.xz
    method: GET
    data_selector: tar.xz
- name: flexran
  endpoint:
    path: /flexran-21.07.tar.gz
    method: GET
    data_selector: tar.gz
- name: flexran-storage
  endpoint:
    path: /opt
    method: POST
    data_selector: pvc-43e50806-785f-440b-8ed2-85bb3c9e8f79
    params:
      incremental: storage
- name: buildpod
  endpoint:
    path: /var/run/docker.sock
    method: POST
    data_selector: buildpod
    params: {}
- name: docker_image
  endpoint:
    path: /docker/image
    method: POST
    data_selector: image_details
- name: flexran_build
  endpoint:
    path: /flexran/build
    method: POST
    data_selector: build_details
- name: flexran-storage
  endpoint:
    path: /api/v1/pvc
    method: CREATE
    data_selector: persistentVolumeClaim
    params: {}
- name: buildpod
  endpoint:
    path: /api/v1/pod
    method: CREATE
    data_selector: pod
    params: {}
- name: flexran-storage
  endpoint:
    path: /api/v1/pvc
    method: POST
    data_selector: persistentVolumeClaim
    params:
      storage: 80Gi
- name: buildpod
  endpoint:
    path: /api/v1/pods
    method: POST
    data_selector: pod
    params:
      memory: 32Gi
      hugepages-1Gi: 10Gi
      intel.com/intel_acc100_fec: '1'
- name: docker_image_flexran_builder
  endpoint:
    path: /docker-image-building
    method: POST
    data_selector: status
    params: {}
- name: flexran_test_cases
  endpoint:
    path: /run-flexran-test-cases
    method: POST
    data_selector: results
    params: {}
- name: flexran-storage
  endpoint:
    path: /path/to/flexran-storage
    method: POST
    data_selector: status
    params:
      storage: 80Gi
- name: buildpod
  endpoint:
    path: /v1/buildpod
    method: POST
    data_selector: metadata
    params: {}
- name: flexran-storage
  endpoint:
    path: /volume-ceph.yaml
    method: POST
    data_selector: persistentvolumeclaim
    params: {}
- name: runpod
  endpoint:
    path: /runpod
    method: POST
    data_selector: pod
    params: {}
- name: flexran-storage
  endpoint:
    path: /volume-ceph.yaml
    method: POST
    data_selector: persistentvolumeclaim
    params: {}
- name: docker-builder
  endpoint:
    path: /docker-image-building
    method: POST
    data_selector: docker image
    params: {}
- name: buildpod
  endpoint:
    path: /buildpod
    method: POST
    data_selector: status
    params: {}
- name: runpod
  endpoint:
    path: /runpod
    method: POST
    data_selector: status
    params: {}
- name: restore
  endpoint:
    path: /v1/restore/
    method: GET
- name: addresses
  endpoint:
    path: /v1/addresses/
    method: GET
- name: storage_ceph_rook
  endpoint:
    path: /v1/storage_ceph_rook/
    method: GET
- name: registry_image
  endpoint:
    path: /v1/registry_image/
    method: GET
- name: device_image_state
  endpoint:
    path: /v1/device_image_state/
    method: GET
- name: ceph_mon
  endpoint:
    path: /v1/ceph_mon/
    method: GET
- name: lldp_neighbours
  endpoint:
    path: /v1/lldp_neighbours/
    method: GET
- name: remotelogging
  endpoint:
    path: /v1/remotelogging/
    method: GET
- name: iextoam
  endpoint:
    path: /v1/iextoam/
    method: GET
- name: intp
  endpoint:
    path: /v1/intp/
    method: GET
- name: storage_file
  endpoint:
    path: /v1/storage_file/
    method: GET
- name: device_labels
  endpoint:
    path: /v1/device_labels/
    method: GET
- name: storage_lvm
  endpoint:
    path: /v1/storage_lvm/
    method: GET
- name: interface_networks
  endpoint:
    path: /v1/interface_networks/
    method: GET
- name: inode
  endpoint:
    path: /v1/inode/
    method: GET
- name: ptp
  endpoint:
    path: /v1/ptp/
    method: GET
- name: media_types
  endpoint:
    path: /v1/media_types/
    method: GET
- name: servicegroup
  endpoint:
    path: /v1/servicegroup/
    method: GET
- name: datanetworks
  endpoint:
    path: /v1/datanetworks/
    method: GET
- name: imemory
  endpoint:
    path: /v1/imemory/
    method: GET
- name: apps
  endpoint:
    path: /v1/apps/
    method: GET
- name: host_fs
  endpoint:
    path: /v1/host_fs/
    method: GET
- name: kube_host_upgrades
  endpoint:
    path: /v1/kube_host_upgrades/
    method: GET
- name: networks
  endpoint:
    path: /v1/networks/
    method: GET
- name: storage_ceph_external
  endpoint:
    path: /v1/storage_ceph_external/
    method: GET
- name: health
  endpoint:
    path: /v1/health/
    method: GET
- name: ptp_parameters
  endpoint:
    path: /v1/ptp_parameters/
    method: GET
- name: drbdconfig
  endpoint:
    path: /v1/drbdconfig/
    method: GET
- name: helm_charts
  endpoint:
    path: /v1/helm_charts/
    method: GET
- name: ihosts
  endpoint:
    path: /v1/ihosts/
    method: GET
- name: kube_versions
  endpoint:
    path: /v1/kube_versions/
    method: GET
- name: kube_cmd_versions
  endpoint:
    path: /v1/kube_cmd_versions/
    method: GET
- name: servicenodes
  endpoint:
    path: /v1/servicenodes/
    method: GET
- name: ptp_instances
  endpoint:
    path: /v1/ptp_instances/
    method: GET
- name: storage_backend
  endpoint:
    path: /v1/storage_backend/
    method: GET
- name: controller_fs
  endpoint:
    path: /v1/controller_fs/
    method: GET
- name: services
  endpoint:
    path: /v1/services/
    method: GET
- name: icpu
  endpoint:
    path: /v1/icpu/
    method: GET
- name: kube_clusters
  endpoint:
    path: /v1/kube_clusters/
    method: GET
- name: sdn_controller
  endpoint:
    path: /v1/sdn_controller/
    method: GET
- name: addrpools
  endpoint:
    path: /v1/addrpools/
    method: GET
- name: license
  endpoint:
    path: /v1/license/
    method: GET
- name: device_images
  endpoint:
    path: /v1/device_images/
    method: GET
- name: service_parameter
  endpoint:
    path: /v1/service_parameter/
    method: GET
- name: kube_rootca_update
  endpoint:
    path: /v1/kube_rootca_update/
    method: GET
- name: storage_ceph
  endpoint:
    path: /v1/storage_ceph/
    method: GET
- name: interface_datanetworks
  endpoint:
    path: /v1/interface_datanetworks/
    method: GET
- name: idns
  endpoint:
    path: /v1/idns/
    method: GET
- name: ptp_interfaces
  endpoint:
    path: /v1/ptp_interfaces/
    method: GET
- name: fernet_repo
  endpoint:
    path: /v1/fernet_repo/
    method: GET
- name: clusters
  endpoint:
    path: /v1/clusters/
    method: GET
- name: isystems
  endpoint:
    path: /v1/isystems/
    method: GET
- name: lldp_agents
  endpoint:
    path: /v1/lldp_agents/
    method: GET
- name: storage_external
  endpoint:
    path: /v1/storage_external/
    method: GET
- name: iuser
  endpoint:
    path: /v1/iuser/
    method: GET
- name: kube_upgrade
  endpoint:
    path: /v1/kube_upgrade/
    method: GET
- name: kube_config_kubelet
  endpoint:
    path: /v1/kube_config_kubelet/
    method: GET
- name: isystems
  endpoint:
    path: /v1/isystems
    method: GET
    data_selector: isystems
- name: clusters
  endpoint:
    path: /v1/clusters
    method: GET
    data_selector: clusters
- name: partitions
  endpoint:
    path: /v1/ihosts/{host_id}/partitions
    method: GET
    data_selector: partitions
    params: {}
- name: partition_details
  endpoint:
    path: /v1/partitions/{partition_id}
    method: GET
    data_selector: capabilities
    params: {}
- name: create_partition
  endpoint:
    path: /v1/partitions
    method: POST
    data_selector: capabilities
    params: {}
- name: modify_partition
  endpoint:
    path: /v1/partitions/{partition_id}
    method: PATCH
    data_selector: capabilities
    params: {}
- name: delete_partition
  endpoint:
    path: /v1/partitions/{partition_id}
    method: DELETE
    data_selector: capabilities
    params: {}
- name: ilvgs
  endpoint:
    path: /v1/ilvgs
    method: GET
    data_selector: ilvgs
    params: {}
- name: ilvgs_detail
  endpoint:
    path: /v1/ilvgs/{volumegroup_id}
    method: GET
    data_selector: capabilities
    params: {}
- name: create_ilvg
  endpoint:
    path: /v1/ilvgs
    method: POST
    data_selector: lvm_vg_name
    params: {}
- name: modify_ilvg
  endpoint:
    path: /v1/ilvgs/{volumegroup_id}
    method: PATCH
    data_selector: capabilities
    params: {}
- name: ilvgs
  endpoint:
    path: /v1/ilvgs/{volumegroup_id}
    method: DELETE
    data_selector: null
    params:
      volumegroup_id: URI
- name: ipvs
  endpoint:
    path: /v1/ipvs
    method: GET
    data_selector: ivolumes
    params: {}
- name: ipvs_detail
  endpoint:
    path: /v1/ipvs/{physicalvolume_id}
    method: GET
    data_selector: capabilities
    params: {}
- name: ipvs_create
  endpoint:
    path: /v1/ipvs
    method: POST
    data_selector: capabilities
    params:
      ilvg_uuid: ilvg_uuid
      ihost_uuid: ihost_uuid
      disk_or_part_uuid: disk_or_part_uuid
- name: ipvs_delete
  endpoint:
    path: /v1/ipvs/{physicalvolume_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: istors
  endpoint:
    path: /v1/istors
    method: GET
    data_selector: stors
    params: {}
- name: istor_detail
  endpoint:
    path: /v1/istors/{stor_id}
    method: GET
    data_selector: stors
    params: {}
- name: create_istor
  endpoint:
    path: /v1/istors
    method: POST
    data_selector: function
    params: {}
- name: modify_istor
  endpoint:
    path: /v1/istors/{stor_id}
    method: PATCH
    data_selector: function
    params: {}
- name: delete_istor
  endpoint:
    path: /v1/istors/{stor_id}
    method: DELETE
    data_selector: function
    params: {}
- name: iinterfaces
  endpoint:
    path: /v1/iinterfaces/{host_id}
    method: GET
    data_selector: iinterfaces
    params:
      host_id: URI
- name: iinterface
  endpoint:
    path: /v1/iinterfaces/{interface_id}
    method: GET
    data_selector: ifname
    params:
      interface_id: URI
- name: create_iinterface
  endpoint:
    path: /v1/iinterfaces
    method: POST
    data_selector: null
    params:
      host_id: URI
- name: iinterfaces
  endpoint:
    path: /v1/iinterfaces/{interface_id}
    method: DELETE
    data_selector: null
    params: {}
- name: iinterfaces
  endpoint:
    path: /v1/iinterfaces/{interface_id}
    method: PATCH
    data_selector: null
    params: {}
- name: interface_networks
  endpoint:
    path: /v1/ihosts/{host_id}/interface_networks
    method: GET
    data_selector: interface_networks
    params: {}
- name: datanetworks
  endpoint:
    path: /v1/datanetworks
    method: GET
    data_selector: datanetworks
    params: {}
- name: interface_datanetworks
  endpoint:
    path: /v1/ihosts/{host_id}/interface_datanetworks
    method: GET
    data_selector: interface_datanetworks
    params: {}
- name: dns
  endpoint:
    path: /v1/idns
    method: GET
    data_selector: idnss
    params: {}
- name: ntp
  endpoint:
    path: /v1/intp
    method: GET
    data_selector: intps
    params: {}
- name: ptp_instances
  endpoint:
    path: /v1/ptp_instances
    method: GET
    data_selector: ptp_instances
    params: {}
- name: ptp_instances_by_host
  endpoint:
    path: /v1/ihosts/{host_id}/ptp_instances
    method: GET
    data_selector: ptp_instances
    params: {}
- name: ptp_instance_details
  endpoint:
    path: /v1/ptp_instances/{ptp_instance_id}
    method: GET
    data_selector: ptp_instance
    params: {}
- name: create_ptp_instance
  endpoint:
    path: /v1/ptp_instances
    method: POST
    data_selector: ptp_instance
    params: {}
- name: modify_ptp_instance
  endpoint:
    path: /v1/ptp_instances/{ptp_instance_id}
    method: PATCH
    data_selector: ptp_instance
    params: {}
- name: assign_ptp_instance_to_host
  endpoint:
    path: /v1/ihosts/{host_id}
    method: PATCH
    data_selector: assigned_hosts
    params: {}
- name: delete_ptp_instance
  endpoint:
    path: /v1/ptp_instances/{ptp_instance_id}
    method: DELETE
    data_selector: deleted_instance
    params: {}
- name: apply_ptp_configuration
  endpoint:
    path: /v1/ptp_instances/apply
    method: POST
    data_selector: applied_configuration
    params: {}
- name: ptp_interfaces
  endpoint:
    path: /v1/ptp_interfaces
    method: GET
    data_selector: ptp_interfaces
- name: ihosts_ptp_interfaces
  endpoint:
    path: /v1/ihosts/{host_id}/ptp_interfaces
    method: GET
    data_selector: ptp_interfaces
- name: iinterfaces_ptp_interfaces
  endpoint:
    path: /v1/iinterfaces/{interface_id}/ptp_interfaces
    method: GET
    data_selector: ptp_interfaces
- name: ptp_interface_details
  endpoint:
    path: /v1/ptp_interfaces/{ptp_interface_id}
    method: GET
    data_selector: ptp_interface
- name: create_ptp_interface
  endpoint:
    path: /v1/ptp_interfaces/
    method: POST
    data_selector: ptp_interface
- name: modify_ptp_interface
  endpoint:
    path: /v1/ptp_interfaces/{ptp_interface_id}
    method: PATCH
    data_selector: ptp_interface
- name: ptp_parameters
  endpoint:
    path: /v1/ptp_parameters
    method: GET
    data_selector: ptp_parameters
    params: {}
- name: ptp_instance_parameters
  endpoint:
    path: /v1/ptp_instances/{ptp_instance_id}/ptp_parameters
    method: GET
    data_selector: ptp_parameters
    params: {}
- name: ptp_interface_parameters
  endpoint:
    path: /v1/ptp_interfaces/{ptp_interface_id}/ptp_parameters
    method: GET
    data_selector: ptp_parameters
    params: {}
- name: external_oam
  endpoint:
    path: /v1/iextoam
    method: GET
    data_selector: iextoams
    params: {}
- name: drbdconfig
  endpoint:
    path: /v1/drbdconfig
    method: GET
    data_selector: drbdconfigs
    params: {}
- name: drbdconfig_id
  endpoint:
    path: /v1/drbdconfig/{drbdconfig_id}
    method: PATCH
    data_selector: drbdconfigs
    params: {}
- name: pci_devices
  endpoint:
    path: /v1/ihosts/{host_id}/pci_devices
    method: GET
    data_selector: devices
    params:
      host_id: '{host_id}'
- name: pci_device
  endpoint:
    path: /v1/pci_devices/{device_id}
    method: GET
    data_selector: attributes
    params: {}
- name: pci_device_modify
  endpoint:
    path: /v1/pci_devices/{device_id}
    method: PATCH
    data_selector: attributes
    params: {}
- name: device_images
  endpoint:
    path: /v1/device_images
    method: GET
    data_selector: device_images
- name: device_labels
  endpoint:
    path: /v1/device_labels
    method: GET
    data_selector: device_labels
- name: host_labels
  endpoint:
    path: /v1/ihosts/{ihost_uuid}/labels
    method: GET
    data_selector: labels
    params: {}
- name: service_parameter
  endpoint:
    path: /v1/service_parameter
    method: GET
    data_selector: parameters
    params: {}
- name: sdn_controller
  endpoint:
    path: /v1/sdn_controller
    method: GET
    data_selector: sdn_controllers
    params: {}
- name: remotelogging
  endpoint:
    path: /v1/remotelogging
    method: GET
    data_selector: remoteloggings
    params: {}
- name: networks
  endpoint:
    path: /v1/networks
    method: GET
    data_selector: networks
    params: {}
- name: address_pools
  endpoint:
    path: /v1/addrpools
    method: GET
    data_selector: addrpools
    params: {}
- name: network_addresspools
  endpoint:
    path: /v1/network_addresspools
    method: GET
    data_selector: network_addresspools
    params: {}
- name: network_addresspool_detail
  endpoint:
    path: /v1/network_addresspools/{network_addrpool_id}
    method: GET
    data_selector: network_addresspool
    params: {}
- name: add_network_addresspool
  endpoint:
    path: /v1/network_addresspools
    method: POST
    data_selector: network_addresspool
    params: {}
- name: delete_network_addresspool
  endpoint:
    path: /v1/network_addresspools/{network_addrpool_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: addresses
  endpoint:
    path: /v1/ihosts/{host_id}/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: add_address
  endpoint:
    path: /v1/ihosts/{host_id}/addresses
    method: POST
    data_selector: address
    params: {}
- name: address_detail
  endpoint:
    path: /v1/ihosts/{host_id}/addresses/{address_id}
    method: GET
    data_selector: address
    params: {}
- name: delete_address
  endpoint:
    path: /v1/ihosts/{host_id}/addresses/{address_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: routes
  endpoint:
    path: /v1/ihosts/{host_id}/routes
    method: GET
    data_selector: routes
    params: {}
- name: add_route
  endpoint:
    path: /v1/ihosts/{host_id}/routes
    method: POST
    data_selector: ''
    params: {}
- name: route_details
  endpoint:
    path: /v1/ihosts/{host_id}/routes/{route_id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_route
  endpoint:
    path: /v1/ihosts/{host_id}/routes/{route_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: storage_backend
  endpoint:
    path: /v1/storage_backend
    method: GET
    data_selector: null
    params: {}
- name: storage_lvm
  endpoint:
    path: /v1/storage_lvm
    method: GET
    data_selector: null
    params: {}
- name: storage_ceph
  endpoint:
    path: /v1/storage_ceph
    method: GET
    data_selector: null
    params: {}
- name: storage_ceph
  endpoint:
    path: /v1/storage_ceph
    method: POST
- name: storage_ceph_id
  endpoint:
    path: /v1/storage_ceph/{storage_ceph_id}
    method: GET
- name: storage_ceph_external
  endpoint:
    path: /v1/storage_ceph_external
    method: GET
- name: storage_ceph_external
  endpoint:
    path: /v1/storage_ceph_external
    method: GET
- name: storage_file
  endpoint:
    path: /v1/storage_file
    method: GET
- name: storage_external
  endpoint:
    path: /v1/storage_external
    method: GET
    data_selector: storage_external
    params: {}
- name: storage_external_id
  endpoint:
    path: /v1/storage_external/{storage_external_id}
    method: GET
    data_selector: storage_external
    params: {}
- name: add_storage_external
  endpoint:
    path: /v1/storage_external
    method: POST
    data_selector: storage_external
    params: {}
- name: modify_storage_external
  endpoint:
    path: /v1/storage_external/{storage_external_id}
    method: PATCH
    data_selector: storage_external
    params: {}
- name: delete_storage_external
  endpoint:
    path: /v1/storage_external/{storage_external_id}
    method: DELETE
    data_selector: storage_external
    params: {}
- name: storage_ceph_rook
  endpoint:
    path: /v1/storage_ceph_rook
    method: GET
    data_selector: storage_ceph_rook
    params: {}
- name: storage_ceph_rook_uuid
  endpoint:
    path: /v1/storage_ceph_rook/{storage_ceph_rook_uuid}
    method: GET
    data_selector: storage_ceph_rook
    params: {}
- name: add_storage_ceph_rook
  endpoint:
    path: /v1/storage_ceph_rook
    method: POST
    data_selector: ''
    params: {}
- name: modify_storage_ceph_rook
  endpoint:
    path: /v1/storage_ceph_external/{storage_ceph_external_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_storage_ceph_rook
  endpoint:
    path: /v1/storage_ceph_rook/{storage_ceph_rook_uuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: storage_tiers
  endpoint:
    path: /v1/storage_tiers
    method: GET
    data_selector: storage_tiers
    params: {}
- name: storage_tier_details
  endpoint:
    path: /v1/storage_tiers/{storage_tier_id}
    method: GET
    data_selector: storage_tier
    params: {}
- name: add_storage_tier
  endpoint:
    path: /v1/storage_tiers
    method: POST
    data_selector: storage_tier
    params: {}
- name: modify_storage_tier
  endpoint:
    path: /v1/storage_tiers/{storage_tier_id}
    method: PATCH
    data_selector: storage_tier
    params: {}
- name: delete_storage_tier
  endpoint:
    path: /v1/storage_tiers/{storage_tier_id}
    method: DELETE
    data_selector: storage_tier
    params: {}
- name: host_filesystem
  endpoint:
    path: /v1/ihosts/{host_id}/host_fs
    method: GET
    data_selector: host_fs
    params: {}
- name: host_filesystem_detail
  endpoint:
    path: /v1/host_fs/{host_fs_id}
    method: GET
    data_selector: host_fs_detail
    params: {}
- name: update_host_filesystem
  endpoint:
    path: /v1/ihosts/{host_id}/host_fs/update_many
    method: PUT
    data_selector: update_response
    params: {}
- name: controller_fs
  endpoint:
    path: /v1/controller_fs
    method: GET
    data_selector: controller_fs
    params: {}
- name: controller_fs_id
  endpoint:
    path: /v1/controller_fs/{controller_fs_id}
    method: GET
    data_selector: controller_fs
    params: {}
- name: update_many_controller_fs
  endpoint:
    path: /v1/isystems/{system_uuid}/controller_fs/update_many
    method: PUT
    data_selector: ''
    params: {}
- name: modify_controller_fs
  endpoint:
    path: /v1/controller_fs/{controller_fs_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: ceph_mon
  endpoint:
    path: /v1/ceph_mon
    method: GET
    data_selector: ceph_mon
    params: {}
- name: ceph_mon_id
  endpoint:
    path: /v1/ceph_mon/{ceph_mon_id}
    method: GET
    data_selector: ceph_mon
    params: {}
- name: delete_ceph_mon
  endpoint:
    path: /v1/ceph_mon/{host_uuid}
    method: DELETE
    data_selector: ''
    params: {}
- name: certificate_install
  endpoint:
    path: /certificate_install
    method: POST
- name: list_installed_certificates
  endpoint:
    path: /
    method: GET
- name: get_certificate
  endpoint:
    path: /{uuid}
    method: GET
- name: delete_certificate
  endpoint:
    path: /{uuid}
    method: DELETE
- name: renew_certificate
  endpoint:
    path: /certificate_renew
    method: POST
- name: get_all_certs
  endpoint:
    path: /get_all_certs
    method: GET
- name: get_all_k8s_certs
  endpoint:
    path: /get_all_k8s_certs
    method: GET
- name: registry_image
  endpoint:
    path: /v1/registry_image
    method: GET
    data_selector: registry_images
    params: {}
- name: kube_clusters
  endpoint:
    path: /v1/kube_clusters
    method: GET
    data_selector: kube_clusters
    params: {}
- name: kube_rootca_update
  endpoint:
    path: /v1/kube_rootca_update
    method: POST
    data_selector: null
    params: {}
- name: generate_cert
  endpoint:
    path: /v1/kube_rootca_update/generate_cert
    method: POST
    data_selector: null
    params: {}
- name: get_cert_id
  endpoint:
    path: /v1/kube_rootca_update/get_cert_id
    method: GET
    data_selector: null
    params: {}
- name: upload_cert
  endpoint:
    path: /v1/kube_rootca_update/upload_cert
    method: POST
    data_selector: null
    params: {}
- name: update_host
  endpoint:
    path: /v1/ihosts/{host_uuid}/kube_update_ca
    method: POST
    data_selector: null
    params: {}
- name: update_pods
  endpoint:
    path: /v1/kube_rootca_update/pods
    method: POST
    data_selector: null
    params: {}
- name: complete_update
  endpoint:
    path: /v1/kube_rootca_update
    method: PATCH
    data_selector: null
    params: {}
- name: abort_update
  endpoint:
    path: /v1/kube_rootca_update
    method: PATCH
    data_selector: null
    params: {}
- name: show_state
  endpoint:
    path: /v1/kube_rootca_update
    method: GET
    data_selector: null
    params: {}
- name: kube_rootca_update_hosts
  endpoint:
    path: /v1/kube_rootca_update/hosts
    method: GET
    data_selector: kube_host_updates
    params: {}
- name: lldp_neighbours
  endpoint:
    path: /v1/lldp_neighbours/
    method: GET
- name: ihosts
  endpoint:
    path: /v1/ihosts/
    method: GET
- name: icpu
  endpoint:
    path: /v1/icpu/
    method: GET
- name: lldp_agents
  endpoint:
    path: /v1/lldp_agents/
    method: GET
- name: iport
  endpoint:
    path: /v1/iport/
    method: GET
- name: ihosts
  endpoint:
    path: /v1/ihosts
    method: GET
    data_selector: ihosts
    params: {}
- name: host_detail
  endpoint:
    path: /v1/ihosts/{host_id}
    method: GET
    data_selector: hostname
    params: {}
- name: ihosts
  endpoint:
    path: /v1/ihosts/{host_id}
    method: PATCH
    data_selector: hostname
    params: {}
- name: ihosts
  endpoint:
    path: /v1/ihosts
    method: POST
    data_selector: ''
    params: {}
- name: ihosts
  endpoint:
    path: /v1/ihosts/{host_id}
    method: DELETE
    data_selector: ''
    params:
      host_id: URI
- name: ihosts_bulk_add
  endpoint:
    path: /v1/ihosts/bulk_add
    method: POST
    data_selector: success
    params: {}
- name: ihosts_bulk_export
  endpoint:
    path: /v1/ihosts/bulk_export
    method: GET
    data_selector: content
    params: {}
- name: ihosts_upgrade
  endpoint:
    path: /v1/ihosts/{host_id}/upgrade
    method: POST
    data_selector: ''
    params:
      force: false
- name: ihosts
  endpoint:
    path: /v1/ihosts
    method: POST
    data_selector: ''
    params:
      host_id: csapi:UUID
      force: xsd:boolean
- name: ihosts
  endpoint:
    path: /v1/ihosts
    method: GET
    data_selector: ihosts
    params: {}
- name: ports
  endpoint:
    path: /v1/ihosts/{host_id}/ports
    method: GET
    data_selector: ports
    params:
      host_id: '{host_id}'
- name: port
  endpoint:
    path: /v1/ports/{port_id}
    method: GET
    data_selector: pdevice
    params:
      port_id: '{port_id}'
- name: icpus
  endpoint:
    path: /v1/icpus/{cpu_id}
    method: GET
    data_selector: icpus
    params: {}
- name: ihosts
  endpoint:
    path: /v1/ihosts/{host_id}/icpus
    method: GET
    data_selector: icpus
    params: {}
- name: host_cpus_modify
  endpoint:
    path: /v1/ihosts/{host_id}/state/host_cpus_modify
    method: PUT
    data_selector: null
    params: {}
- name: imemorys
  endpoint:
    path: /v1/imemorys/{host_id}
    method: GET
    data_selector: imemorys
    params: {}
- name: memory_info
  endpoint:
    path: /v1/imemorys/{memory_id}
    method: GET
    data_selector: imemorys
    params: {}
- name: modify_memory_info
  endpoint:
    path: /v1/imemorys/{memory_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: idisks
  endpoint:
    path: /v1/idisks/{host_id}
    method: GET
    data_selector: idisks
    params:
      host_id: csapi:UUID
- name: disk_details
  endpoint:
    path: /v1/idisks/{disk_id}
    method: GET
    data_selector: device_path
    params:
      disk_id: csapi:UUID
- name: modify_disk
  endpoint:
    path: /v1/idisks/{disk_id}
    method: PATCH
    data_selector: partition_table
    params:
      disk_id: csapi:UUID
      partition_table: plain
- name: isensorgroups
  endpoint:
    path: /v1/ihosts/{host_id}/isensorgroups
    method: GET
    data_selector: isensorgroups
    params:
      host_id: URI
- name: specific_sensorgroup
  endpoint:
    path: /v1/isensorgroups/{sensorgroup_id}
    method: GET
    data_selector: sensorgroupname
    params:
      sensorgroup_id: URI
- name: modify_sensorgroup
  endpoint:
    path: /v1/isensorgroups/{sensorgroup_id}
    method: PATCH
    data_selector: sensorgroupname
    params:
      sensorgroup_id: URI
- name: isensorgroups
  endpoint:
    path: /actions_critical_group
    method: GET
    data_selector: isensors
    params: {}
- name: isensors
  endpoint:
    path: /v1/isensors/{host_id}
    method: GET
    data_selector: isensors
    params: {}
- name: specific_sensor
  endpoint:
    path: /v1/isensors/{sensor_id}
    method: GET
    data_selector: sensor
    params: {}
- name: modify_sensor
  endpoint:
    path: /v1/isensors/{sensor_id}
    method: PATCH
    data_selector: sensor
    params: {}
- name: sensor
  endpoint:
    path: /v1/isensors/b6567aa3-f52f-44ef-8231-1df901f8c977
    method: GET
    data_selector: links
    params: {}
- name: lldp_agents
  endpoint:
    path: /v1/lldp_agents
    method: GET
    data_selector: lldp_agents
    params: {}
- name: lldp_agent
  endpoint:
    path: /v1/lldp_agents/{lldp_agent_id}
    method: GET
    data_selector: lldp_agent
    params: {}
- name: lldp_neighbors
  endpoint:
    path: /v1/lldp_neighbors
    method: GET
    data_selector: lldp_agents
- name: lldp_neighbor
  endpoint:
    path: /v1/lldp_neighbors/{lldp_neighbor_id}
    method: GET
    data_selector: lldp_neighbor
notes:
- HTTPS enabled by default for StarlingX REST API access
- OAuth2 and mTLS are mandatory options.
- Kubernetes Secrets are no longer required.
- The community does not provide signed software images, which are needed to implement
  security features such as UEFI Secure Boot.
- The community does not provide software updates/patches (i.e. for bug fixes or new
  CVE vulnerabilities) to StarlingX released ISOs.
- The community does not support or test software upgrades from one StarlingX release
  to the next StarlingX Release.
- Uses strongSwan as the IPsec implementation.
- The ice in-tree driver does not support SyncE/GNSS deployments.
- Use the Procedural change only if the cluster is stuck in HEALTH_WARN state after
  removing all OSDs on a host.
- Use either of the procedural changes below only if the OSDs are not allocated in
  the Ceph cluster.
- Applies only to AIO-SX systems.
- Uses OAuth2 with mTLS — requires compliance with O-RAN spec O2 IMS interface.
- When using local LDAP for authentication of the Harbor system application, you cannot
  use local LDAP groups for authorization; use only individual local LDAP users for
  authorization.
- PTP is not supported on the Broadcom 57504 NIC.
- Authorization based on Local LDAP Groups is not supported for Harbor. Use only individual
  Local LDAP users for specifying authorization.
- The Vault application cannot be configured during Bootstrap.
- Deployment of ptp-notification during bootstrap time is not supported due to dependencies
  on the system PTP configuration which is handled post-bootstrap.
- The Harbor application cannot be deployed during bootstrap due to the bootstrap
  deployment dependencies such as early availability of storage class.
- Snapshot CRDs and controllers are not present by default and needs to be installed
  on StarlingX.
- Live migration is not possible when using configmap as a filesystem.
- Live migration will not work when a VM is using ServiceAccount exposed as a file
  system.
- The pre-built ISO (Debian) for StarlingX 10.0 is located at the StarlingX mirror
  repo.
- In StarlingX 10.0, VIM Patch Orchestration Rollback is only supported for AIO-SX
  configurations.
- Uses OAuth2 with mTLS — requires compliance with O-RAN spec O2 IMS and DMS.
- These limitations are considered temporary and will likely be resolved in a future
  release.
- Wait for about 5 minutes to let the operator to try to recover the OSDs.
- Check if the OSDs have been added in crushmap tree.
- On systems with a large number of cores (>= 32 physical cores / 64 threads), it
  is not possible to set the maximum number of VFs (32) for NICs using the out-of-tree
  ice driver v1.14.9.2.
- 'If the issue is encountered, the following error logs will be reported in kern.log:
  Only 59 MSI-X interrupts available for SR-IOV. Not enough to support minimum of
  2 MSI-X interrupts per VF for 32 VFs.'
- A Critical alarm 800.001 may be triggered after running the Restore Playbook.
- 'To avoid the issue with controllerfs-add command, run the commands in the following
  sequence: system storage-backend-add ceph-rook --confirmed; controllerfs-add ceph-float=20;
  system host-fs-add controller-0 ceph=20.'
- While installing rook-ceph, if the installation fails, this is due to ceph-mgr-provision
  not being provisioned correctly.
- When using Local LDAP for authentication of the new Harbor system application, you
  cannot use Local LDAP Groups for authorization.
- On a multinode setup, when you deploy an acme issuer to issue a certificate, the
  cm-acme-http-solver pod might fail and stays in 'ImagePullBackOff' state.
- Deployment of ptp-notification during bootstrap time is not supported due to dependencies
  on the system PTP configuration.
- Live migration is not allowed with a pod network binding of bridge interface type.
- Live migration requires ports 49152, 49153 to be available in the virt-launcher
  pod.
- Ensure that the system is not configured with multiple instances when using the
  v1 API.
- Upper case characters in host names cause issues with kubernetes labelling.
- The above commands must be run before any Debian install.
- The above commands must also be run if the same lab is used for CentOS installs
  after the lab was previously running a Debian ISO.
- A custom policy file can only be created at bootstrap in apiserver_extra_volumes.
- If a custom policy file was configured at bootstrap, then after bootstrap the user
  has the option to configure the parameter audit-policy-file to either this custom
  policy file (/etc/kubernetes/my-audit-policy-file.yml) or the default policy file
  /etc/kubernetes/default-audit-policy.yaml.
- If no custom policy file was configured at bootstrap, then the user can only configure
  the parameter audit-policy-file to the default policy file.
- Only the parameter audit-policy-file is configurable after bootstrap, so the other
  parameters (audit-log-path, audit-log-maxsize, audit-log-maxage and audit-log-maxbackup)
  cannot be changed at runtime.
- Host-based Ceph will be deprecated in a future release.
- Cert-manager accepts only short hand IPv6 addresses.
- Pod Security Policy (PSP) is removed in StarlingX 10.0 and K8s v1.25.
- Edgeworker is an experimental feature in StarlingX R5.0.
- The operating system (OS) of an edgeworker node is not installed by the StarlingX
  controller, instead, a node with installed OS is required prior to the node provisioning
  step. Only Ubuntu is supported in StarlingX R5.0.
- Platform Applications are automatically updated when a newer version is delivered
  through a Patch Release or Major Release upgrade.
- Downgrades also occur automatically when patches are removed.
- For uploaded applications, manual updates require deleting the existing version
  before uploading a new one.
- dcmanager is applicable only in the SystemController region of the central cloud
  in a distributed cloud configuration.
- The steps in this guide are based on FlexRAN 21.07. The instructions are subject
  to change in future releases of FlexRAN.
- The PVC size should be larger than 70G.
- This pod is assumed to be assigned enough resources to launch quickly after FlexRAN
  is built.
- 'FlexRAN Software Wireless Access Solutions is available from the following page:
  https://www.intel.com/content/www/us/en/developer/topic-technology/edge-5g/tools/flexran.html'
- PVC size should be larger than 70G.
- Make sure to use the CPU from the CPU whose ID is bigger than 13, this way, the
  Application Threads will not overlap with the BBUPool CPUs.
- workaround the known issue of parsing zero value in the config file
- Some third-party platforms like SuperMicro / HPE / Dell / Quanta / and others can
  also be used depending on customer platform requirements
- Memory should be more than 32Gi for the test case pass rate.
- FlexRAN is not an open-source project.
- The instructions are subject to change in future releases of FlexRAN.
- This document provides details on how to build FlexRAN software for StarlingX, generate
  a containerized version of the prebuilt FlexRAN binaries, and deploy on StarlingX
  solution.
- Be sure to use the correct USB device name when copying the image.
- Linux 5.6 deprecated ioremap_nocache, need to change to use ioremap_cache instead
- If you don’t have isolated CPU, hugepage and accelerator resources configured as
  part of the system used for building, feel free to remove related content from the
  yaml spec file.
- Set default command to /usr/bin/bash
- Switch to devtoolset-8 environment using 'scl enable devtoolset-8 bash'
- Some third-party platforms such as SuperMicro / HPE / Dell / Quanta / and others
  can also be used depending on customer platform requirements.
- Switch to the devtoolset-8 environment using scl enable devtoolset-8 bash or source
  /opt/rh/devtoolset-8/enable
- The build and execution environments should not be the same.
- Requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Memory should be configured to more than 32Gi for the test case pass rate.
- command should not be used in the spec, otherwise it will overwrite the default
  container command which does accelerator PCI address filling for L1.
- FlexRAN 22.03 Release Package is required.
- This API does not accept a request body for certain endpoints.
- Availability status may vary.
- Some fields may return null values.
- Uses HTTP for accessing sensor group data
- Sensor data retrieved includes temperature readings
- Based on the RBAC policy, for every API listed below except for PTP Status Notifications,
  the execution of `GET` requests requires a reader role in either admin or services
  project; for `non-GET` requests (DELETE, PATCH, POST and PUT), an admin role in
  either admin or services project is required.
errors:
- '800.001 - Storage Alarm Condition: HEALTH_WARN'
- 'error getting ClusterInformation: connection is unauthorized: Unauthorized'
- 'ssh: connect to host XX.XX.XX.XX port 22: No route to host'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- computeFault (400, 500, …)
- serviceUnavailable (503)
- badRequest (400)
- unauthorized (401)
- forbidden (403)
- badMethod (405)
- overLimit (413)
- itemNotFound (404)
- 'computeFault: (400, 500, …)'
- 'serviceUnavailable: (503)'
- 'badRequest: (400)'
- 'unauthorized: (401)'
- 'forbidden: (403)'
- 'badMethod: (405)'
- 'overLimit: (413)'
- 'itemNotFound: (404)'
- conflict (409)
- 'conflict: (409)'
- 'badRequest: 400'
- 'unauthorized: 401'
- 'forbidden: 403'
- 'badMethod: 405'
- 'overLimit: 413'
- 'itemNotFound: 404'
- 'computeFault: 400, 500, …'
- 'serviceUnavailable: 503'
- 'badMediaType: (415)'
- 'computeFault: 400, 500'
- 'badMediaType: 415'
- badMediaType (415)
- computeFault
- serviceUnavailable
- badRequest
- unauthorized
- forbidden
- badMethod
- overLimit
- itemNotFound
auth_info:
  mentioned_objects: []
client:
  base_url: http://192.168.204.2:6385
  paginator:
    type: page
source_metadata: null
