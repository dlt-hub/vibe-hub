resources:
- name: list_chats
  endpoint:
    path: /agent/action/list_chats
    method: GET
    data_selector: ''
- name: list_archives
  endpoint:
    path: /agent/action/list_archives
    method: POST
    data_selector: ''
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: universal
      v: 10.1.1-rest
      type: incoming
- name: upload_data
  endpoint:
    path: /upload
    method: POST
    data_selector: data
    params: {}
- name: message
  endpoint:
    path: /messages
    method: POST
    data_selector: message
- name: intent_tracking
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: universal
      v: 11.1.0-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: event
- name: timestamp
  endpoint:
    path: /setting-timestamps
    method: POST
    data_selector: dimensionlabs_timestamp
- name: incoming_messages
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: universal
      v: 10.1.1-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: outgoing_messages
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: universal
      v: 11.1.0-rest
      type: outgoing
      apiKey: API_KEY_HERE
- name: incoming_message
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params: {}
- name: outgoing_message
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params: {}
- name: list_sms
  endpoint:
    path: /messaging/v1/sms
    method: GET
    data_selector: messages
    params: {}
- name: post_to_dimension
  endpoint:
    path: /track
    method: POST
    data_selector: response
    params:
      platform: universal
      v: 11.1.0-rest
      type: incoming
      apiKey: '{Your_Dimension_API_Key}'
- name: conversations_history
  endpoint:
    path: /conversations.history
    method: GET
    data_selector: messages
    params:
      channel: CONVERSATION_ID_HERE
- name: send_message
  endpoint:
    path: /track
    method: POST
    data_selector: messageData
    params:
      platform: universal
      v: 11.1.0-rest
      type: incoming
      apiKey: YOUR_DASHBOT_API_KEY
- name: incoming_message
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: slack
      v: 11.1.0-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: outgoing_message
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: slack
      v: 11.1.0-rest
      type: outgoing
      apiKey: API_KEY_HERE
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: event
    params: {}
- name: incoming_message
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: sms
      v: 11.1.0-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: outgoing_message
  endpoint:
    path: /track
    method: POST
    data_selector: ''
    params:
      platform: sms
      v: 11.1.0-rest
      type: outgoing
      apiKey: API_KEY_HERE
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: data
    params:
      platform: sms
      v: 11.1.0-rest
      type: event
      apiKey: API_KEY_HERE
- name: pause_webhook
  endpoint:
    path: /pause
    method: POST
    data_selector: body
    params: {}
- name: webhook
  endpoint:
    path: /webhook/
    method: POST
    data_selector: entry
    params: {}
- name: Twilio Autopilot
  endpoint:
    path: /track
    method: POST
    data_selector: messages
    params:
      platform: twilio
      v: 11.1.0-rest
      type: all
      apiKey: API_KEY_HERE
- name: messages
  endpoint:
    path: messages
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /track
    method: POST
    data_selector: data
- name: conversation_exchanges
  endpoint:
    path: /v1/exchanges/{id}
    method: GET
    data_selector: body
- name: post_conversation_data
  endpoint:
    path: /track
    method: POST
    data_selector: text
- name: incoming_message
  endpoint:
    path: /track?platform=webchat&v=11.1.0-rest&type=incoming&apiKey=API_KEY_HERE
    method: POST
    data_selector: data
- name: outgoing_message
  endpoint:
    path: /track?platform=webchat&v=11.1.0-rest&type=outgoing&apiKey=API_KEY_HERE
    method: POST
    data_selector: data
- name: conversation_history_v1
  endpoint:
    path: /getMessages
    method: GET
    data_selector: messages
- name: conversation_history_v2
  endpoint:
    path: /getMessagesV2
    method: GET
    data_selector: messages
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: data
    params:
      platform: universal
      v: 10.1.1-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: dimension
  endpoint:
    path: /api/bot
    method: POST
- name: messages
  endpoint:
    path: /api/v1/messages
    method: GET
    data_selector: items
- name: tracker
  endpoint:
    path: /track
    method: POST
    data_selector: response
    params:
      platform: universal
      v: 10.1.1-rest
      type: incoming
- name: retrieve_message
  endpoint:
    path: /v1/threads/{thread_id}/messages/{message_id}
    method: GET
- name: retrieve_thread
  endpoint:
    path: /v1/threads/{thread_id}
    method: GET
- name: post_responses
  endpoint:
    path: /track
    method: POST
- name: event_broker
  endpoint:
    path: /event_broker
    method: POST
    data_selector: event
    params:
      apiKey: YOUR_API_KEY
- name: messages
  endpoint:
    path: /api/chat/messages
    method: GET
    data_selector: messages
    params: {}
- name: dimension_track
  endpoint:
    path: /track
    method: POST
    data_selector: response
    params:
      platform: generic
      v: 11.1.0-rest
      type: incoming
- name: conversation
  endpoint:
    path: /api/v1/messaging/conversations/{conversationId}
    method: GET
    data_selector: conversation_data
    params: {}
- name: track
  endpoint:
    path: /track
    method: POST
    data_selector: response_data
    params:
      platform: universal
      v: 10.1.1-rest
      type: incoming
- name: chats
  endpoint:
    path: /api/v2/chats
    method: GET
- name: tickets
  endpoint:
    path: /api/v2/tickets
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.0/query/
    method: GET
    data_selector: records
    params:
      q: SELECT Id, Name, Email FROM Contact
- name: message_details
  endpoint:
    path: /api/v1/subaccounts/{subAccountId}/messages/{umid}
    method: GET
    data_selector: records
- name: sms_details
  endpoint:
    path: /api/v1/subaccounts/{subAccountId}/messages/{umid}
    method: GET
    data_selector: records
- name: track_response
  endpoint:
    path: /track
    method: POST
    data_selector: response
- name: contact_trace_records
  endpoint:
    path: /connect/contact-trace-records
    method: GET
    data_selector: ContactTraceRecords
- name: contact_flows
  endpoint:
    path: /connect/contact-flows
    method: GET
    data_selector: ContactFlows
- name: track_data
  endpoint:
    path: /track
    method: POST
    data_selector: data
    params:
      platform: universal
      v: 10.1.1-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: incoming_messages
  endpoint:
    path: /track
    method: POST
    data_selector: entry
    params:
      platform: facebook
      v: 11.1.0-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: outgoing_messages
  endpoint:
    path: /track
    method: POST
    data_selector: message
    params:
      platform: facebook
      v: 11.1.0-rest
      type: outgoing
      apiKey: API_KEY_HERE
- name: incoming_message
  endpoint:
    path: /track
    method: POST
    data_selector: object
    params:
      platform: facebook
      v: 11.1.0-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: outgoing_message
  endpoint:
    path: /track
    method: POST
    data_selector: object
    params:
      platform: facebook
      v: 11.1.0-rest
      type: outgoing
      apiKey: API_KEY_HERE
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: data
- name: outgoing_message
  endpoint:
    path: /track
    method: POST
    data_selector: platformJson
    params:
      platform: twitter
      v: 11.1.0-rest
      type: outgoing
      apiKey: API_KEY_HERE
- name: incoming_message
  endpoint:
    path: /track
    method: POST
    data_selector: platformJson
    params:
      platform: twitter
      v: 11.1.0-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: incoming_messages
  endpoint:
    path: /track?platform=kik&v=11.1.0-rest&type=incoming&apiKey=API_KEY_HERE
    method: POST
    data_selector: message
- name: outgoing_messages
  endpoint:
    path: /track?platform=kik&v=11.1.0-rest&type=outgoing&apiKey=API_KEY_HERE
    method: POST
    data_selector: message
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: data
    params: {}
- name: skill_api_key
  endpoint:
    path: /reference/generating-dashbot-api-key
    method: GET
    data_selector: api_key
- name: incoming_event
  endpoint:
    path: /track
    method: POST
    data_selector: event
    params:
      platform: alexa
      v: 11.1.0-rest
      type: incoming
      apiKey: API_KEY_HERE
- name: outgoing_event
  endpoint:
    path: /track
    method: POST
    data_selector: event
    params:
      platform: alexa
      v: 11.1.0-rest
      type: outgoing
      apiKey: API_KEY_HERE
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: data
- name: dimension
  endpoint:
    path: /
    method: POST
    data_selector: records
- name: incoming_message
  endpoint:
    path: /track?platform=google&v=11.1.0-rest&type=incoming&apiKey=API_KEY_HERE
    method: POST
    data_selector: request_body
    params: {}
- name: outgoing_message
  endpoint:
    path: /track?platform=google&v=11.1.0-rest&type=outgoing&apiKey=API_KEY_HERE
    method: POST
    data_selector: request_body
    params: {}
- name: track_event
  endpoint:
    path: /track
    method: POST
    data_selector: data
    params:
      platform: google
      v: 11.1.0-rest
      type: event
      apiKey: API_KEY_HERE
- name: conversations
  endpoint:
    path: /apis/v0/channels/channel-guid/conversations
    method: GET
    data_selector: response
    params: {}
- name: survey_responses
  endpoint:
    path: /v3/collectors/{id}/responses/{id}/details
    method: GET
    data_selector: ''
- name: survey_responses
  endpoint:
    path: /surveys/{surveyId}/responses
    method: GET
    data_selector: responses
- name: post_data_to_dimension
  endpoint:
    path: https://tracker.dimensionlabs.io/track
    method: POST
    data_selector: data
- name: survey_responses
  endpoint:
    path: /a/api/v2/surveys/{{survey-id}}/responses
    method: GET
    data_selector: responses
    params:
      page: 1
      perPage: 100
- name: post_responses
  endpoint:
    path: https://tracker.dimensionlabs.io/track
    method: POST
    data_selector: responses
- name: Predicted Rating
  endpoint:
    path: /predicted-rating
    method: GET
    data_selector: scores
- name: Predicted CSAT
  endpoint:
    path: /predicted-csat
    method: GET
    data_selector: scores
- name: kpis
  endpoint:
    path: /api/kpis
    method: GET
    data_selector: records
    params: {}
- name: metrics
  endpoint:
    path: /api/metrics
    method: GET
    data_selector: records
    params: {}
- name: user_metrics
  endpoint:
    path: /user/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: task_completion
  endpoint:
    path: /task/completion
    method: GET
    data_selector: completion
    params: {}
- name: user_journeys
  endpoint:
    path: /user/journeys
    method: GET
    data_selector: journeys
    params: {}
- name: self_service
  endpoint:
    path: /self/service
    method: GET
    data_selector: service
    params: {}
- name: bot_health
  endpoint:
    path: /bot/health
    method: GET
    data_selector: health
    params: {}
notes:
- Dimension Lab can integrate with any conversational data source or platform of your
  choice.
- Contact either Dimension Lab support or the support line for your specific provider
  for more help if you are unable to find this information on your chatbot provider’s
  website.
- Required fields are 'Text', 'Timestamp', 'Incoming', and 'User ID'.
- Timestamp must be sent in UNIX time (epoch time).
- Incoming field must be true or false and is case sensitive.
- Dimension Lab has a policy of not ingesting or storing any PII.
- Platform specific payloads can be difficult to catch all variations
- Main requirements are User ID, Message, and a timestamp.
- Make sure to set the ‘Content-Type’ header to ‘application/json’ and to replace
  `API_KEY_HERE` with your api key.
- Make sure to set the ‘Content-Type’ header to ‘application/json’
- Messages that are sent with a timestamp older than an hour will not be accepted,
  so do not use this feature for historical messages.
- Replace 'API_KEY_HERE' with your api key in the requests.
- Sending data to Dimension via the tracker requires additional infrastructure to
  scale properly.
- Make sure to set the ‘Content-Type’ header to ‘application/json’ and to replace
  API_KEY_HERE with your api key.
- Each bot needs its own API key for tracking.
- ADA uses a bearer token for authentication.
- Each chatbot or voice skill needs its own API Key for tracking.
- Enable 'Collect Analytics' in your Project Dashboard.
- Select an Endpoint you want to configure and enable 'Collect Analytics'.
- Enable 'Use Dimension Analytics' and enter your API key.
- This integration only works with bot framework v4
- If you are using a previous version of Microsoft Bot Framework, please see our deprecated
  integration
- Use API Key for Authentication in the Authorization header as a Bearer token.
- Adding PII redaction may require additional configuration.
- Use Bearer token for authorization with API key.
- Use API Key for Authentication as a bearer token in the Authorization header.
- To obtain access token, send a POST request to https://login.salesforce.com/services/oauth2/token
- You must send the data with specific fields for POST responses.
- Requires enabling Contact Trace Records (CTRs) in your Amazon Connect instance.
- Historical chats are not included in this integration — if you are interested in
  importing your historical data, please contact us.
- Make sure to set the ‘Content-Type’ header to ‘application/json’ and to replace
  'API_KEY_HERE' with your api key.
- Replace API_KEY_HERE with your api key in the endpoint URL.
- Make sure to replace API_KEY_HERE with your api key.
- Each Skill needs its own API key for tracking.
- Make sure to replace the placeholder API_KEY_HERE with your api key.
- Requires API key to be set in the request
- Make sure to replace 'API_KEY_HERE' with your actual API key.
- Make sure to set the ‘Content-Type’ header to ‘application/json’.
- Obtain the access token for authentication. Follow the Medallia documentation for
  the authentication process.
- Be sure to update the permissions of the app to all of the view settings.
- Create an API Token in Qualtrics account settings.
- Make sure to set the ‘Content-Type’ header to ‘application/json’ when posting responses.
- The analytics in Data Slicer are organized by dimensions of analysis.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Real insights come from analyzing user journeys and task completion.
- Uses OAuth2 with refresh token — requires setup of connected app in Dimension Labs
- Chatbot metrics are aligned with business KPIs.
- Successful interactions can be measured through predefined success messages.
errors:
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'AccessDeniedException: Check IAM permissions for API access.'
- 'InvalidParameterException: Ensure all required parameters are provided.'
- '400 Bad Request: Check the request payload'
- '401 Unauthorized: Recheck API key validity'
- '500 Internal Server Error: Server issue, try again later'
auth_info:
  mentioned_objects: []
client:
  base_url: https://tracker.dimensionlabs.io
  headers:
    accept: application/json
    Content-Type: application/json
source_metadata: null
