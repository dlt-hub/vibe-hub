resources:
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: create_credit
  endpoint:
    path: /v1/credits
    method: POST
- name: credit
  endpoint:
    path: /v1/credits/{creditId}
    method: GET
- name: update_credit
  endpoint:
    path: /v1/credits/{creditId}
    method: PATCH
- name: execute_credit
  endpoint:
    path: /v1/credits/{creditId}/execute
    method: POST
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
- name: create_payment
  endpoint:
    path: /v1/payments
    method: POST
- name: payment
  endpoint:
    path: /v1/payments/{paymentId}
    method: GET
- name: update_payment
  endpoint:
    path: /v1/payments/{paymentId}
    method: PATCH
- name: deactivate_payment
  endpoint:
    path: /v1/payments/{paymentId}/deactivate
    method: POST
- name: add_transaction_to_payment
  endpoint:
    path: /v1/payments/{paymentId}/transactions
    method: POST
- name: transaction
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}
    method: GET
- name: create_payment_claim
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/app-claim
    method: POST
- name: cancel_transaction
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/cancel
    method: POST
- name: capture_transaction
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/capture
    method: PUT
- name: claim_gift_card
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/gift-card-claim
    method: POST
- name: import_transaction_data
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/import
    method: POST
- name: invoice_transaction
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/invoice
    method: POST
- name: update_invoice_transaction
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/invoice
    method: PUT
- name: create_payment_terminal
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/terminal
    method: POST
- name: create_internal_terminal
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/internal-terminal
    method: POST
- name: authorize_transaction
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/authorize
    method: PUT
- name: wallet_transaction
  endpoint:
    path: /v1/payments/{paymentId}/transactions/{transactionId}/wallet
    method: POST
- name: payment_methods
  endpoint:
    path: /v1/payment-methods
    method: GET
- name: recurring_payments
  endpoint:
    path: /v1/recurring-payments
    method: GET
- name: create_recurring_payment
  endpoint:
    path: /v1/recurring-payments
    method: POST
- name: end_recurring_payment
  endpoint:
    path: /v1/recurring-payments/{recurringPaymentId}
    method: DELETE
- name: update_recurring_payment
  endpoint:
    path: /v1/recurring-payments/{recurringPaymentId}
    method: PATCH
- name: authorize_recurring_payment
  endpoint:
    path: /v1/recurring-payments/{recurringPaymentId}/authorize
    method: PUT
- name: create_terminal_recurring_payment
  endpoint:
    path: /v1/recurring-payments/{recurringPaymentId}/terminal
    method: POST
- name: resource_name
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
    params: {}
- name: Entire Norway (Current stops)
  endpoint:
    path: /latest-valid-version-all-stops-norway
    method: GET
    data_selector: records
- name: Entire Norway (Current + future stops)
  endpoint:
    path: /current-future-versions-all-stops-norway
    method: GET
    data_selector: records
- name: Entire Norway (All stop versions, incl. outdated)
  endpoint:
    path: /current-future-outdated-versions-all-stops-norway
    method: GET
    data_selector: records
- name: Agder
  endpoint:
    path: /current-stops-agder
    method: GET
    data_selector: records
- name: Trøndelag
  endpoint:
    path: /current-stops-trøndelag
    method: GET
    data_selector: records
- name: Østfold
  endpoint:
    path: /current-stops-østfold
    method: GET
    data_selector: records
- name: Akershus
  endpoint:
    path: /current-stops-akershus
    method: GET
    data_selector: records
- name: Buskerud
  endpoint:
    path: /current-stops-buskerud
    method: GET
    data_selector: records
- name: Innlandet
  endpoint:
    path: /current-stops-innlandet
    method: GET
    data_selector: records
- name: Rogaland
  endpoint:
    path: /current-stops-rogaland
    method: GET
    data_selector: records
- name: Møre og Romsdal
  endpoint:
    path: /current-stops-møre-og-romsdal
    method: GET
    data_selector: records
- name: Nordland
  endpoint:
    path: /current-stops-nordland
    method: GET
    data_selector: records
- name: Vestland
  endpoint:
    path: /current-stops-vestland
    method: GET
    data_selector: records
- name: Oslo
  endpoint:
    path: /current-stops-oslo
    method: GET
    data_selector: records
- name: Troms
  endpoint:
    path: /current-stops-troms
    method: GET
    data_selector: records
- name: Finnmark
  endpoint:
    path: /current-stops-finnmark
    method: GET
    data_selector: records
- name: Vestfold
  endpoint:
    path: /current-stops-vestfold
    method: GET
    data_selector: records
- name: Telemark
  endpoint:
    path: /current-stops-telemark
    method: GET
    data_selector: records
- name: Railway stations only
  endpoint:
    path: /current-railway-stations
    method: GET
    data_selector: records
- name: open_settlement
  endpoint:
    path: /settlements
    method: POST
- name: close_settlement
  endpoint:
    path: /settlements/{id}/close
    method: PUT
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: trip_search
  endpoint:
    path: /search/graphql
    method: POST
    data_selector: data
- name: offers
  endpoint:
    path: /search/trip/trip-pattern/{id}
    method: GET
    data_selector: data
- name: create_order
  endpoint:
    path: /pages-sales-guides#create-order
    method: GET
- name: pay_order
  endpoint:
    path: /pages-sales-guides#create-payment
    method: GET
- name: distribute_ticket
  endpoint:
    path: /pages-sales-guides#generate-and-distribute-ticket-distributions
    method: GET
- name: news_notifications
  endpoint:
    path: /services/data/vXX.X/sobjects/NewsNotifications
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- endpoint:
    path: /{serviceJourneyId}/{version}/{date}
    method: GET
- endpoint:
    path: /dated/{datedServiceJourneyId}
    method: GET
- endpoint:
    path: /original/{originalDatedServiceJourneyId}
    method: GET
- endpoint:
    path: /privatecode/{privateCode}/{version}/{date}
    method: GET
- endpoint:
    path: /query
    method: POST
- endpoint:
    path: /reverse-query
    method: POST
- name: quota
  endpoint:
    path: /v1/quotas
    method: POST
- name: tax_savings_report
  endpoint:
    path: /api-docs/personnelticket#/FIP/getTaxSavingsReportAsCsvFile
    method: GET
    data_selector: records
- name: create_tax_savings_report
  endpoint:
    path: /api-docs/personnelticket#/tax/createTaxSavingsReport
    method: POST
    data_selector: records
- name: ChangeOrderLinesConfiguration
  endpoint:
    path: /v1/changeOrderLines
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: order_lines_cancel
  endpoint:
    path: /v1/orders/{orderId}/orderlines/cancel
    method: POST
    data_selector: records
    params:
      orderLineIds: '{orderLineId}'
- name: order_lines_delete
  endpoint:
    path: /v1/orders/{orderId}/orderlines
    method: DELETE
    data_selector: records
    params:
      orderLineIds: '{orderLineId}'
- name: ticket_distributions
  endpoint:
    path: /v1/ticket-distributions-groups/{orderId}/distribute
    method: GET
    data_selector: records
    params: {}
- name: ticket_distribution
  endpoint:
    path: /v1/ticket-distributions/{orderId}/generate
    method: GET
    data_selector: records
    params: {}
- name: reserve-offers
  endpoint:
    path: /v1/reserve-offers
    method: GET
- name: update-order
  endpoint:
    path: /v1/update-order
    method: POST
- name: supplement-products
  endpoint:
    path: /v1/update-order/supplement-products
    method: POST
- name: refunds-options
  endpoint:
    path: /v1beta/refunds/options/{orderId}
    method: GET
- name: reserve-offers
  endpoint:
    path: /update-order/supplement-products
    method: POST
    data_selector: records
- name: update_order
  endpoint:
    path: /v1/update-order
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cersei
  endpoint:
    path: /services/data/vXX.X/sobjects/Cersei
    method: GET
    data_selector: records
    params: {}
- name: Refund
  endpoint:
    path: /services/data/vXX.X/sobjects/Refund
    method: GET
    data_selector: records
    params: {}
- name: affected_payment_transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/AffectedPaymentTransaction
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: offer
  endpoint:
    path: /sales/v1/offers/v2/search/trip-pattern
    method: POST
- name: order
  endpoint:
    path: /sales/v1/orders
    method: POST
- name: payment
  endpoint:
    path: /sales/v1/payments
    method: POST
- name: refund
  endpoint:
    path: /sales/v1/refunds/options/{orderId}
    method: GET
- name: ticket_distribution
  endpoint:
    path: /sales/v1/ticket-distribution-groups/distribute
    method: POST
- name: healthcheck-staging
  endpoint:
    path: /sales/v1/recurring-payments
    method: POST
    data_selector: ''
    params: {}
- name: recurring-payments
  endpoint:
    path: /sales/v1/recurring-payments/{recurringPaymentId}/terminal
    method: POST
    data_selector: ''
    params: {}
- name: authorize-recurring-terminal
  endpoint:
    path: /sales/v1/recurring-payments/{recurringPaymentId}/authorize
    method: PUT
    data_selector: ''
    params: {}
- name: get-recurring-payments
  endpoint:
    path: /sales/v1/recurring-payments?customerNumber={customerNumber}&includeExpired={includeExpired}
    method: GET
    data_selector: ''
    params: {}
- name: reserve_offers
  endpoint:
    path: /v1/reserve-offers
    method: POST
- name: update_order
  endpoint:
    path: /v1/update-order
    method: POST
- name: update_order_supplement_products
  endpoint:
    path: /v1/update-order/supplement-products
    method: POST
- name: change_options
  endpoint:
    path: /v1beta/change-options
    method: GET
- name: reserve_third_party_products
  endpoint:
    path: /v1beta/reserve-third-party-products
    method: POST
- name: credits
  endpoint:
    path: /v1/credits
    method: GET
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
- name: recurring_payments
  endpoint:
    path: /v1/recurring-payments
    method: GET
- name: distribute
  endpoint:
    path: /v1/ticket-distribution-groups/distribute
    method: POST
- name: update_validity_nod
  endpoint:
    path: /v1/ticket-distribution-groups/update-validities
    method: POST
- name: update_validity_id
  endpoint:
    path: /v1/ticket-distribution-groups/update-validities
    method: POST
- name: transfer_distribution_holder
  endpoint:
    path: /v1/ticket-distribution-groups/transfer-distribution-holder
    method: POST
- name: pdf_ticket_create_or_get
  endpoint:
    path: /v1/pdf-tickets/{orderId}/createOrGet
    method: POST
- name: pdf_ticket_send
  endpoint:
    path: /v1/pdf-tickets/{orderId}/send
    method: POST
- name: distribute
  endpoint:
    path: /v1/ticket-distribution-groups/distribute
    method: POST
- name: update_validity_nod
  endpoint:
    path: /v1/ticket-distribution-groups/update-validities
    method: PUT
- name: update_validity_id_based
  endpoint:
    path: /v1/ticket-distribution-groups/update-validities
    method: PUT
- name: transfer_distribution_holder
  endpoint:
    path: /v1/ticket-distribution-groups/transfer-distribution-holder
    method: POST
- name: pdf_ticket
  endpoint:
    path: /v1/pdf-tickets/{orderId}/createOrGet
    method: POST
- name: send_pdf_ticket
  endpoint:
    path: /v1/pdf-tickets/{orderId}/send
    method: POST
- name: ticket_distribution_groups_distribute
  endpoint:
    path: /v1/ticket-distribution-groups/distribute
    method: POST
- name: trip
  endpoint:
    path: /trip
    method: POST
    data_selector: tripPatterns
    params:
      numTripPatterns: 3
- name: stopPlace
  endpoint:
    path: /stopPlace
    method: POST
    data_selector: estimatedCalls
    params:
      timeRange: 72100
      numberOfDepartures: 10
- name: trip
  endpoint:
    path: /graphql
    method: POST
    data_selector: tripPatterns
- name: journey_planner
  endpoint:
    path: /journey-planner/v3/graphql
    method: POST
- name: search_trip_pattern
  endpoint:
    path: /offers/v2/search/trip-pattern
    method: POST
- name: search_stop_places
  endpoint:
    path: /offers/v2/search/stop-places
    method: POST
- name: search_zones
  endpoint:
    path: /offers/v2/search/zones
    method: POST
- name: search_authority
  endpoint:
    path: /offers/v2/search/authority
    method: POST
- name: offline_search_trip_pattern
  endpoint:
    path: /offers/v2/offline-cache/trip-pattern
    method: POST
- name: offline_search_stop_places
  endpoint:
    path: /offers/v2/offline-cache/stop-places
    method: POST
- name: offline_search_zones
  endpoint:
    path: /offers/v2/offline-cache/zones
    method: POST
- name: offline_search_authority
  endpoint:
    path: /offers/v2/offline-cache/authority
    method: POST
notes:
- The timeout for all Payment endpoints is set to 62 seconds, which is different from
  most Entur endpoints, which have 55 seconds.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Excessive downloading of files may lead to your IP being blocked. We expect that
  most users will have no need for more than one download per 24 hours.
- All datasets are automatically re-validated and re-exported every night where expired
  data is trimmed away, retaining data for a maximum of 48 hours back in time.
- All endpoints require an authentication header.
- Some objects like Contact may return nulls in deeply nested fields
- All Client Credentials and access tokens are intended for Server-to-Server communication
  only.
- Access tokens must be cached to avoid unnecessary re-authentication.
- The API is open under NLOD licence, however, it is required that all consumers identify
  themselves by using the header ET-Client-Name.
- Activated automatic fee when changing to cheaper fare products without the possibility
  for refunding.
- Header `Entur-Distribution-Channel` is required for all non search endpoints.
- Header `Entur-Distribution-Channel` is required for all endpoints.
- Endpoint `/v1/ticket-distributions/{orderId}/distribute` and `/v1/ticket-distributions/{orderId}/distribute-travel-card`
  is deprecated. Please use `/v1/ticket-distributions-groups/{orderId}/distribute`.
- Endpoint /v1/pdf-tickets/{orderId}/generate is deprecated.
- 'Added new field to reserve-offers request: OfferConfiguration.selectedTravellerIds.'
- Providing order line ids in api-call reserve-offers has been deprecated.
- Please use new endpoint /v1/update-order when changing order lines.
- 'New non-required header on refund endpoints: Entur-Settlement-Id'
- Validation of value in new header Entur-Settlement-Id if value is present
- DCI-based refunding-possibilities
- Return error message when required headers are missing
- DCI header is now required
- Determine which refund options that can be performed together, if transactionsSum
  != collectedRefundAmountSum
- Uses OAuth2 with refresh token — requires setup of connected app in sketcha
- PaymentMethods is now linked to the Entur-Distribution-Channel header, and will
  never be able to retrieve from unless the header
- Order will reset after 20 minutes if no further changes are made.
- Some Payment Methods have fees related to them. The payment total amount will be
  automatically updated with the fee amount once the transaction is added.
- All access control is based on SASL using SCRAM.
- User credentials must be registered before consuming from Kafka.
- Since Payment has a 62 second timeout on all its endpoints, the timeout on all Refund
  endpoints is set to 63 seconds.
- This is different than most Entur endpoints, which have a timeout of 55 seconds.
- No authentication required for accessing data.
- Limited to one specific Authority (public transport authority)
- Flex-search (WIP)
- Consumers must identify themselves with the header ET-Client-Name to avoid rate-limiting.
- Offers are valid for 30 minutes, after which they can no longer be purchased.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '301: Moved Permanently - Ensure the server is HTTPS.'
- '401: Unauthorized - Invalid authentication.'
- '403: Forbidden - Check application permissions.'
- '405: Method not allowed - Ensure requests are made via HTTPS.'
- 'ZeroAllowedPaymentTypeGroupsForDCI: Check DCI for allowed payment types'
- 'ZeroAllowedTransactionsException: Verify transaction eligibility'
- '423 LOCKED: Attempts to make changes to a locked order will fail.'
- 'SOFT_DECLINE: Transaction declined by bank; redirect to terminal URL.'
- 'REFUSED_BY_ISSUER: Payment denied by bank; suggest customer contact bank.'
- 'RESOURCE_BUSY: Wait a few seconds before retrying the API request.'
- 'USER_ERROR: Advise customer to check submitted data and account balance.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Authentication Service
  - Access Token
client:
  base_url: https://api.entur.io
  auth:
    type: oauth2
    flow: client_credentials
    token_url: https://partner.entur.org/oauth/token
    client_id: '{{ dlt.secrets[''client_id''] }}'
    client_secret: '{{ dlt.secrets[''client_secret''] }}'
    location: header
    header_name: Authorization
source_metadata: null
