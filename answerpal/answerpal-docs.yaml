resources:
- name: actions
  endpoint:
    path: /api/Actions
    method: GET
- name: channels
  endpoint:
    path: /api/Channels
    method: GET
- name: customers
  endpoint:
    path: /api/Customers/me
    method: GET
- name: documents
  endpoint:
    path: /api/Documents
    method: GET
- name: end_users
  endpoint:
    path: /api/EndUsers
    method: GET
- name: tickets
  endpoint:
    path: /api/Tickets
    method: GET
- name: translations
  endpoint:
    path: /api/Translations/translate
    method: POST
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: actions
  endpoint:
    path: /api/actions
    method: GET
    data_selector: records
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: records
- name: end_users
  endpoint:
    path: /api/end-users
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: topics
  endpoint:
    path: /api/topics
    method: GET
    data_selector: records
- name: translations
  endpoint:
    path: /api/translations
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: actions
  endpoint:
    path: /api/actions
    method: GET
- name: channels
  endpoint:
    path: /api/channels
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: end_users
  endpoint:
    path: /api/end_users
    method: GET
- name: file
  endpoint:
    path: /api/file
    method: GET
- name: hooks
  endpoint:
    path: /api/hooks
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: translations
  endpoint:
    path: /api/translations
    method: GET
- name: actions
  endpoint:
    path: /api/actions
    method: GET
- name: channels
  endpoint:
    path: /api/channels
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: end_users
  endpoint:
    path: /api/end-users
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: translations
  endpoint:
    path: /api/translations
    method: GET
- name: PreSpam
  endpoint:
    path: /events/pre_spam
    method: POST
    data_selector: actions
    params: {}
- name: PostSpam
  endpoint:
    path: /events/post_spam
    method: POST
    data_selector: actions
    params: {}
- name: PostTopicDetection
  endpoint:
    path: /events/post_topic_detection
    method: POST
    data_selector: actions
    params: {}
- name: OnEscalate
  endpoint:
    path: /events/on_escalate
    method: POST
    data_selector: actions
    params: {}
- name: PostEscalate
  endpoint:
    path: /events/post_escalate
    method: POST
    data_selector: actions
    params: {}
- name: OnEscalateFailed
  endpoint:
    path: /events/on_escalate_failed
    method: POST
    data_selector: actions
    params: {}
- name: OnClose
  endpoint:
    path: /events/on_close
    method: POST
    data_selector: actions
    params: {}
- name: OnEndUserUpdate
  endpoint:
    path: /events/on_end_user_update
    method: POST
    data_selector: actions
    params: {}
- name: OnEndUserAdd
  endpoint:
    path: /events/on_end_user_add
    method: POST
    data_selector: actions
    params: {}
- name: OnEndUserDelete
  endpoint:
    path: /events/on_end_user_delete
    method: POST
    data_selector: actions
    params: {}
- name: OnPhonePickup
  endpoint:
    path: /events/on_phone_pickup
    method: POST
    data_selector: actions
    params: {}
- name: PreSpam
  endpoint:
    path: /api/preSpam
    method: GET
- name: PostSpam
  endpoint:
    path: /api/postSpam
    method: GET
- name: PostTopicDetection
  endpoint:
    path: /api/postTopicDetection
    method: GET
- name: OnEscalate
  endpoint:
    path: /api/onEscalate
    method: GET
- name: PostEscalate
  endpoint:
    path: /api/postEscalate
    method: GET
- name: OnEscalateFailed
  endpoint:
    path: /api/onEscalateFailed
    method: GET
- name: OnClose
  endpoint:
    path: /api/onClose
    method: GET
- name: OnEndUserUpdate
  endpoint:
    path: /api/onEndUserUpdate
    method: GET
- name: OnEndUserAdd
  endpoint:
    path: /api/onEndUserAdd
    method: GET
- name: OnEndUserDelete
  endpoint:
    path: /api/onEndUserDelete
    method: GET
- name: OnPhonePickup
  endpoint:
    path: /api/onPhonePickup
    method: GET
- name: Actions
  endpoint:
    path: /api-reference/endpoints/actions/
    method: GET
- name: Channels
  endpoint:
    path: /api-reference/endpoints/channels/
    method: GET
- name: Customers
  endpoint:
    path: /api-reference/endpoints/customers/
    method: GET
- name: Documents
  endpoint:
    path: /api-reference/endpoints/documents/
    method: GET
- name: End Users
  endpoint:
    path: /api-reference/endpoints/end-users/
    method: GET
- name: File
  endpoint:
    path: /api-reference/endpoints/file/
    method: GET
- name: Hooks
  endpoint:
    path: /api-reference/endpoints/hooks/
    method: GET
- name: Tickets
  endpoint:
    path: /api-reference/endpoints/tickets/
    method: GET
- name: Topics
  endpoint:
    path: /api-reference/endpoints/topics/
    method: GET
- name: Translations
  endpoint:
    path: /api-reference/endpoints/translations/
    method: GET
- name: Error Codes
  endpoint:
    path: /api-reference/endpoints/error-codes/
    method: GET
- name: Rate Limits
  endpoint:
    path: /api-reference/endpoints/rate-limits/
    method: GET
- name: Actions
  endpoint:
    path: /api-reference/endpoints/actions/
    method: GET
- name: Channels
  endpoint:
    path: /api-reference/endpoints/channels/
    method: GET
- name: Customers
  endpoint:
    path: /api-reference/endpoints/customers/
    method: GET
- name: Documents
  endpoint:
    path: /api-reference/endpoints/documents/
    method: GET
- name: End Users
  endpoint:
    path: /api-reference/endpoints/end-users/
    method: GET
- name: File
  endpoint:
    path: /api-reference/endpoints/file/
    method: GET
- name: Hooks
  endpoint:
    path: /api-reference/endpoints/hooks/
    method: GET
- name: Tickets
  endpoint:
    path: /api-reference/endpoints/tickets/
    method: GET
- name: Topics
  endpoint:
    path: /api-reference/endpoints/topics/
    method: GET
- name: Translations
  endpoint:
    path: /api-reference/endpoints/translations/
    method: GET
- name: Error Codes
  endpoint:
    path: /api-reference/endpoints/error-codes/
    method: GET
- name: Rate Limits
  endpoint:
    path: /api-reference/endpoints/rate-limits/
    method: GET
- name: custom_fields
  endpoint:
    path: /api/custom_fields
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
    data_selector: records
- name: data_retrieval
  endpoint:
    path: /api/data-retrieval
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: actions
  endpoint:
    path: /api/actions
    method: POST
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: tickets
  endpoint:
    path: /api-reference/endpoints/tickets
    method: GET
- name: channels
  endpoint:
    path: /api/channels
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: ticket_statuses
  endpoint:
    path: /api/v1/ticket_statuses
    method: GET
    data_selector: statuses
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: channels
  endpoint:
    path: /api-reference/endpoints/channels/
    method: GET
- name: customers
  endpoint:
    path: /api-reference/endpoints/customers/
    method: GET
- name: tickets
  endpoint:
    path: /api-reference/endpoints/tickets/
    method: GET
- name: actions
  endpoint:
    path: /api/actions
    method: GET
- name: channels
  endpoint:
    path: /api/channels
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: end_users
  endpoint:
    path: /api/end-users
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: topics
  endpoint:
    path: /api/topics
    method: GET
- name: translations
  endpoint:
    path: /api/translations
    method: GET
- name: actions
  endpoint:
    path: /api/v1/actions
    method: GET
    data_selector: records
- name: channels
  endpoint:
    path: /api/v1/channels
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
    data_selector: records
- name: end_users
  endpoint:
    path: /api/v1/end_users
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: topics
  endpoint:
    path: /api/v1/topics
    method: GET
    data_selector: records
- name: actions
  endpoint:
    path: /api/reference/endpoints/actions/
    method: GET
- name: channels
  endpoint:
    path: /api/reference/endpoints/channels/
    method: GET
- name: customers
  endpoint:
    path: /api/reference/endpoints/customers/
    method: GET
- name: documents
  endpoint:
    path: /api/reference/endpoints/documents/
    method: GET
- name: end_users
  endpoint:
    path: /api/reference/endpoints/end-users/
    method: GET
- name: file
  endpoint:
    path: /api/reference/endpoints/file/
    method: GET
- name: hooks
  endpoint:
    path: /api/reference/endpoints/hooks/
    method: GET
- name: tickets
  endpoint:
    path: /api/reference/endpoints/tickets/
    method: GET
- name: topics
  endpoint:
    path: /api/reference/endpoints/topics/
    method: GET
- name: translations
  endpoint:
    path: /api/reference/endpoints/translations/
    method: GET
- name: actions
  endpoint:
    path: /api/v1/actions
    method: GET
- name: channels
  endpoint:
    path: /api/v1/channels
    method: GET
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
- name: end_users
  endpoint:
    path: /api/v1/end_users
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
- name: topics
  endpoint:
    path: /api/v1/topics
    method: GET
- name: translations
  endpoint:
    path: /api/v1/translations
    method: GET
- name: actions
  endpoint:
    path: /api/v1/actions
    method: GET
- name: channels
  endpoint:
    path: /api/v1/channels
    method: GET
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
- name: documents
  endpoint:
    path: /api/v1/documents
    method: GET
- name: end_users
  endpoint:
    path: /api/v1/end_users
    method: GET
- name: file
  endpoint:
    path: /api/v1/file
    method: GET
- name: hooks
  endpoint:
    path: /api/v1/hooks
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
- name: topics
  endpoint:
    path: /api/v1/topics
    method: GET
- name: translations
  endpoint:
    path: /api/v1/translations
    method: GET
- name: actions
  endpoint:
    path: /api/actions
    method: GET
- name: channels
  endpoint:
    path: /api/channels
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: documents
  endpoint:
    path: /api/documents
    method: GET
- name: end_users
  endpoint:
    path: /api/end-users
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: actions
  endpoint:
    path: /Actions
    method: GET
    data_selector: items
    params:
      pageNumber: 1
      pageSize: 10
      sortBy: Name
      sortOrder: asc
- name: action
  endpoint:
    path: /Actions/{id}
    method: GET
    data_selector: ''
    params: {}
- name: create_action
  endpoint:
    path: /Actions
    method: POST
    data_selector: ''
    params: {}
- name: update_action
  endpoint:
    path: /Actions/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_action
  endpoint:
    path: /Actions/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: channels
  endpoint:
    path: /api/Channels
    method: GET
    data_selector: records
- name: channel_folders
  endpoint:
    path: /api/ChannelFolders
    method: GET
    data_selector: records
- name: channel_translations
  endpoint:
    path: /api/ChannelTranslations
    method: GET
    data_selector: records
- name: list_actions
  endpoint:
    path: /api/Actions
    method: GET
    data_selector: items
    params:
      pageNumber: 1
      pageSize: 10
      sortBy: Name
      sortOrder: asc
- name: get_action
  endpoint:
    path: /api/Actions/{id}
    method: GET
    data_selector: action
    params: {}
- name: create_action
  endpoint:
    path: /api/Actions
    method: POST
    data_selector: action
    params: {}
- name: update_action
  endpoint:
    path: /api/Actions/{id}
    method: PUT
    data_selector: action
    params: {}
- name: delete_action
  endpoint:
    path: /api/Actions/{id}
    method: DELETE
    data_selector: action
    params: {}
- name: channels
  endpoint:
    path: /Channels
    method: GET
    data_selector: channels
- name: channel_folders
  endpoint:
    path: /ChannelFolders
    method: GET
    data_selector: folders
- name: channel_translations
  endpoint:
    path: /ChannelTranslations
    method: GET
    data_selector: translations
- name: current_customer
  endpoint:
    path: /api/Customers/me
    method: GET
    data_selector: ''
    params: {}
- name: customer_secrets
  endpoint:
    path: /api/Customers/my-secrets
    method: GET
    data_selector: ''
    params: {}
- name: customer_models
  endpoint:
    path: /api/Customers/models
    method: GET
    data_selector: ''
    params: {}
- name: customer_representatives
  endpoint:
    path: /customerReps
    method: GET
    data_selector: items
    params: {}
- name: documents
  endpoint:
    path: /api/Documents
    method: GET
    data_selector: items
- name: current_customer
  endpoint:
    path: /api/Customers/me
    method: GET
    data_selector: apiBaseUrl
- name: customer_secrets
  endpoint:
    path: /api/Customers/my-secrets
    method: GET
    data_selector: openAIApiKey
- name: customer_models
  endpoint:
    path: /api/Customers/models
    method: GET
    data_selector: ''
- name: customer_representatives
  endpoint:
    path: /customerReps
    method: GET
    data_selector: items
- name: documents
  endpoint:
    path: /api/Documents
    method: GET
    data_selector: items
    params:
      pageNumber: 1
      pageSize: 20
- name: single_document
  endpoint:
    path: /api/Documents/{id}
    method: GET
    data_selector: document
    params:
      replacePlaceholders: 'true'
- name: create_document
  endpoint:
    path: /api/Documents
    method: POST
    data_selector: document
- name: update_document
  endpoint:
    path: /api/Documents/{id}
    method: PUT
- name: delete_document
  endpoint:
    path: /api/Documents/{id}
    method: DELETE
- name: end_users
  endpoint:
    path: /api/EndUsers
    method: GET
    data_selector: PaginatedResult<EndUserReadDTO>
    params:
      PageNumber: 1
      PageSize: 10
- name: end_user_by_id
  endpoint:
    path: /api/Actions/{id}
    method: GET
    data_selector: EndUserReadDTO
- name: end_users_by_uid
  endpoint:
    path: /api/EndUsers/byUid
    method: GET
    data_selector: List of EndUserReadDTO
    params:
      uid: string
- name: create_end_user
  endpoint:
    path: /api/EndUsers
    method: POST
    data_selector: EndUserReadDTO
- name: update_end_user
  endpoint:
    path: /api/EndUsers/{id}
    method: PUT
    data_selector: 204 No Content
- name: delete_end_user
  endpoint:
    path: /api/EndUsers/{id}
    method: DELETE
    data_selector: 204 No Content
- name: assign_uid_to_end_user
  endpoint:
    path: /api/EndUserUIDs/assign
    method: POST
    data_selector: Object with new UID assignment
- name: tickets_for_end_user
  endpoint:
    path: /api/EndUsers/{id}/tickets
    method: GET
    data_selector: PaginatedResult<TicketReadDTO>
- name: list_attachments
  endpoint:
    path: /ticketMessages/{messageId}/attachments
    method: GET
- name: upload_attachment
  endpoint:
    path: /ticketMessages/{messageId}/attachments
    method: POST
- name: delete_attachment
  endpoint:
    path: /ticketMessages/{messageId}/attachments/{attachmentId}
    method: DELETE
- name: download_attachment
  endpoint:
    path: /api/File/{accessToken}
    method: GET
- name: end_users
  endpoint:
    path: /api/EndUsers
    method: GET
    data_selector: PaginatedResult<EndUserReadDTO>
    params:
      PageNumber: 1
      PageSize: 10
- name: end_user_by_id
  endpoint:
    path: /api/Actions/{id}
    method: GET
    data_selector: EndUserReadDTO
    params: {}
- name: end_users_by_uid
  endpoint:
    path: /api/EndUsers/byUid
    method: GET
    data_selector: List of EndUserReadDTO
    params:
      uid: '{uid}'
- name: create_end_user
  endpoint:
    path: /api/EndUsers
    method: POST
    data_selector: EndUserReadDTO
    params: {}
- name: update_end_user
  endpoint:
    path: /api/EndUsers/{id}
    method: PUT
    data_selector: 204 No Content
    params: {}
- name: delete_end_user
  endpoint:
    path: /api/EndUsers/{id}
    method: DELETE
    data_selector: 204 No Content
    params: {}
- name: assign_uid_to_end_user
  endpoint:
    path: /api/EndUserUIDs/assign
    method: POST
    data_selector: Object with new UID assignment
    params: {}
- name: list_tickets_for_end_user
  endpoint:
    path: /api/EndUsers/{id}/tickets
    method: GET
    data_selector: PaginatedResult<TicketReadDTO>
    params: {}
- name: HookActions
  endpoint:
    path: /api/hookactions
    method: GET
    data_selector: items
- name: SpecificHookAction
  endpoint:
    path: /api/hookactions/{id}
    method: GET
    data_selector: items
- name: CreateHookAction
  endpoint:
    path: /api/hookactions
    method: POST
    data_selector: items
- name: UpdateHookAction
  endpoint:
    path: /api/hookactions/{id}
    method: PUT
    data_selector: items
- name: DeleteHookAction
  endpoint:
    path: /api/hookactions/{id}
    method: DELETE
    data_selector: items
- name: BulkCreateHookActions
  endpoint:
    path: /api/hookactions/bulk
    method: POST
    data_selector: items
- name: GetTotalWaitSeconds
  endpoint:
    path: /api/hookactions/wait-seconds
    method: GET
    data_selector: items
- name: RetrieveDocumentsForHook
  endpoint:
    path: /api/topicdocuments
    method: GET
    data_selector: items
- name: list_attachments
  endpoint:
    path: /ticketMessages/{messageId}/attachments
    method: GET
    data_selector: TicketMessageAttachmentDTO
- name: upload_attachment
  endpoint:
    path: /ticketMessages/{messageId}/attachments
    method: POST
    data_selector: TicketMessageAttachmentDTO
- name: delete_attachment
  endpoint:
    path: /ticketMessages/{messageId}/attachments/{attachmentId}
    method: DELETE
- name: download_attachment
  endpoint:
    path: /api/File/{accessToken}
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: GET
    data_selector: items
    params:
      pageSize: 20
- name: ticketMessages
  endpoint:
    path: /ticketMessages
    method: GET
    data_selector: items
    params: {}
- name: hookactions
  endpoint:
    path: /api/hookactions
    method: GET
    data_selector: items
- name: hookaction
  endpoint:
    path: /api/hookactions/{id}
    method: GET
    data_selector: items
- name: create_hookaction
  endpoint:
    path: /api/hookactions
    method: POST
    data_selector: hookActionID
- name: update_hookaction
  endpoint:
    path: /api/hookactions/{id}
    method: PUT
- name: delete_hookaction
  endpoint:
    path: /api/hookactions/{id}
    method: DELETE
- name: bulk_create_hookactions
  endpoint:
    path: /api/hookactions/bulk
    method: POST
- name: topicdocuments
  endpoint:
    path: /api/topicdocuments
    method: GET
- name: topics
  endpoint:
    path: /api/Topics
    method: GET
    data_selector: topics
- name: topic_actions
  endpoint:
    path: /api/TopicActions
    method: GET
    data_selector: topicActions
- name: topic_documents
  endpoint:
    path: /api/TopicDocuments
    method: GET
    data_selector: topicDocuments
- name: translate
  endpoint:
    path: /Translations/translate
    method: POST
    data_selector: string
    params: {}
- name: detect_language
  endpoint:
    path: /Translations/detect-language-ai
    method: GET
    data_selector: string
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: GET
    data_selector: items
    params:
      pageNumber: '1'
      pageSize: '10'
- name: ticketMessages
  endpoint:
    path: /ticketMessages
    method: GET
    data_selector: items
    params:
      ticketId: '{ticketId}'
- name: topics
  endpoint:
    path: /api/Topics
    method: GET
    data_selector: topics
- name: topic_by_id
  endpoint:
    path: /api/Topics/{id}
    method: GET
    data_selector: topic
- name: create_topic
  endpoint:
    path: /api/Topics
    method: POST
    data_selector: topic
- name: update_topic
  endpoint:
    path: /api/Topics/{id}
    method: PUT
    data_selector: topic
- name: delete_topic
  endpoint:
    path: /api/Topics/{id}
    method: DELETE
- name: translate
  endpoint:
    path: /api/Translations/translate
    method: POST
    data_selector: string
    params: {}
- name: detect_language_ai
  endpoint:
    path: /api/Translations/detect-language-ai
    method: GET
    data_selector: string
    params: {}
notes:
- All endpoints require a valid access token unless otherwise noted.
- GDPR-compliant processing of all customer data.
- All data is processed securely, with options for audit trails and compliance with
  GDPR and other regulations.
- All data processed securely, with strict adherence to privacy standards.
- AI automation transformed customer experience.
- Call recordings and transcripts are used to refine AI performance.
- AI automating outbound phone calls worldwide.
- Calls can be used for proactive customer service, surveys, appointment reminders,
  or sales follow-ups.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Automation ensures employees get fast, consistent, and accurate support at any time.
- Automation ensures every customer receives timely, personalized reminders, improving
  attendance and freeing staff for higher-value tasks.
- Actions are predefined operations triggered at specific events in the AnswerPal
  workflow.
- Advanced configuration options let you fine-tune how actions behave.
- 'Each action includes several standard fields: Name, Description, Priority, IsActive.'
- Custom fields can be required or optional, and their order of appearance is fully
  configurable.
- Documents can be managed directly within AnswerPal, or retrieved from your existing
  business systems.
- All data exchanged via integrations is encrypted and processed according to GDPR.
- End-user interactions are tracked to ensure a complete history.
- Connects to your business systems using secure API connections.
- All actions are logged and auditable for security and compliance.
- Customer service representatives enhance AI-generated responses.
- AnswerPal is designed with privacy and security in mind.
- All end-user data is processed securely, with strict access controls and compliance
  with data protection regulations.
- Customer service representatives review, correct, and enhance AI responses.
- Responses are personalized with signatures added by CSRs.
- General settings apply globally, can be overridden for specific actions or custom
  fields.
- Tickets are created or updated for each customer interaction.
- AnswerPal can fetch documents or data from your CRM, ERP, or Document Management
  System based on the detected topic or customer question.
- Incoming emails are scanned for spam using advanced AI and SpamAssassin filters.
- AI can answer questions, retrieve data from your CRM or ERP, and provide immediate
  responses in the caller’s language.
- All API requests require authentication.
- Store tokens in AnswerPal’s secure settings area.
- Always use HTTPS for all API requests.
- Store API credentials and tokens securely, never in source code.
- Rotate passwords and tokens regularly.
- Only grant necessary permissions to each token.
- Our team is here to help you get the most out of your integration and automation
  projects.
- API supports multiple endpoints for different resources.
- Demos are 100% free and carry no obligation.
- Supports integration with leading platforms like Salesforce, Microsoft 365, Slack,
  REST API.
- AnswerPal supports integration with leading platforms like Salesforce, Microsoft
  365, Slack, REST API, and more.
- Each channel can have UI and message translations for different languages.
- Uses Basic authentication for the API.
- Static documents may not require API-related fields.
- Dynamic data retrieval processes require API details and authentication overrides.
- Always provide at least one UID (email, phone, or external ID) for reliable user
  matching.
- If merging users, ensure all relevant UIDs are assigned to the correct End User.
- All API calls for hooks are performed by specifying the hookName parameter, which
  is internally mapped to the SpecialTopic field.
- Each ticket aggregates all related messages, attachments, and actions.
- All API calls for hooks are performed by specifying the hookName parameter.
- Tickets API allows listing, searching, creating, updating, and deleting support
  tickets.
- Rate limits in AnswerPal are not fixed, but are calculated based on the formula
  or subscription plan your organization has chosen.
- If your application exceeds the allowed rate, the API will return an HTTP 429 Too
  Many Requests error.
- Continued excessive requests after receiving a 429 error may result in temporary
  or permanent suspension of API access for your organization.
- Topics are used in AnswerPal to categorize and automate the handling of incoming
  messages, tickets, or customer conversations.
- Rate limits may be adjusted based on usage trends, special agreements, or to ensure
  optimal service for all customers.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Check your Authorization header and ensure your token or credentials
  are correct and not expired.'
- '403 Forbidden: Contact your admin or support to verify your access rights.'
- '401 Unauthorized: The API call was made without valid credentials or with an expired/invalid
  token.'
- '401 Unauthorized: The API call was made without valid credentials or with an expired/invalid
  token. Solution: Check your Authorization header and ensure your token or credentials
  are correct and not expired.'
- '403 Forbidden: The credentials are valid but lack permission to access the requested
  resource. Solution: Contact your admin or support to verify your access rights.'
- '400 Bad Request: Invalid input or ID mismatch.'
- '401 Unauthorized: Authentication failed or missing.'
- '404 Not Found: Action does not exist.'
- '409 Conflict: Duplicate action or conflicting data (on create).'
- '201 Created: Action successfully created.'
- '204 No Content: Update or delete successful.'
- '401 Unauthorized: Recheck access token.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Verify the endpoint URL.'
- 204 No Content on success for updates and deletions.
- '404 Not Found: The requested attachment or file does not exist.'
- '400 Bad Request: Invalid input or missing parameters.'
- '403 Forbidden: You do not have access to this ticket message or attachment.'
- '415 Unsupported Media Type: The uploaded file type is not supported.'
- '400 Bad Request: Missing or invalid sourceText/targetLang.'
- '404 Not Found: Customer not found.'
- '500 Internal Server Error: Error during translation.'
- '204 No Content: Successful operation.'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Ticket or message not found.'
- '400 Bad Request: The request could not be understood due to invalid input, missing
  parameters, or validation errors.'
- '401 Unauthorized: Authentication failed or was not provided. Token may be missing,
  expired, or invalid.'
- '403 Forbidden: Authenticated but not permitted to access the resource.'
- '404 Not Found: The requested resource does not exist.'
- '409 Conflict: Duplicate or conflicting resource (e.g., trying to create a resource
  with the same unique field).'
- '500 Internal Server Error: Unexpected server-side error.'
- '429 Too Many Requests: API rate limit exceeded. Please wait before retrying.'
- '400 Bad Request: Missing required parameter.'
- '500 Internal Server Error: Error during detection.'
- '409 Conflict: Duplicate or conflicting resource.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://answerpal.eu/api-reference/
  auth:
    type: oauth2
    flow: refresh_token
  headers:
    Accept: application/json
source_metadata: null
