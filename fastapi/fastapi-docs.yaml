resources:
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: records
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: records
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: item
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: item
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: item
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: null
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: null
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: item
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: null
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params:
      q: optional
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: records
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: records
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: Hello
- name: item
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item_name
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: null
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: null
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: null
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: null
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: translation
  endpoint:
    path: /docs/de/docs/tutorial/response-status-code.md
    method: GET
    data_selector: translations
    params: {}
- name: items_invalidnone
  endpoint:
    path: /items/invalidnone
    method: GET
    data_selector: response_model
    params: {}
- name: translations
  endpoint:
    path: /docs/translations
    method: GET
    data_selector: translations
    params: {}
- name: release_notes
  endpoint:
    path: /docs/release-notes
    method: GET
    data_selector: release_notes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: message
    params: {}
- name: path_parameters
  endpoint:
    path: /tutorial/path-params/
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: users
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user_id
    params: {}
- name: files
  endpoint:
    path: /files/{file_path:path}
    method: GET
    data_selector: file_path
    params: {}
- name: models
  endpoint:
    path: /models/{model_name}
    method: GET
    data_selector: model_name
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: fake_items_db
    params:
      skip: 0
      limit: 10
- name: user_item
  endpoint:
    path: /users/{user_id}/items/{item_id}
    method: GET
    data_selector: item
    params:
      q: null
      short: false
- name: read_item
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item
    params:
      needy: ''
      skip: 0
      limit: null
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: item
- name: query_params
  endpoint:
    path: /tutorial/query-params-str-validations/
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: items
    params:
      q:
        type: str | None
        default: null
        max_length: 50
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: items
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: id, name
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: results
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: filter_query
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: results
    params: {}
- name: Body - Fields
  endpoint:
    path: /tutorial/body-fields/
    method: GET
    data_selector: fields
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item
    params: {}
- name: offers
  endpoint:
    path: /offers/
    method: POST
    data_selector: null
    params: {}
- name: images
  endpoint:
    path: /images/multiple/
    method: POST
    data_selector: null
    params: {}
- name: index_weights
  endpoint:
    path: /index-weights/
    method: POST
    data_selector: null
    params: {}
- name: item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: results
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: item
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: ads_id
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: User-Agent
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: cookies
    params: {}
- name: CommonHeaders
  endpoint:
    path: /items/
    method: GET
- name: response_model
  endpoint:
    path: /tutorial/response-model/
    method: GET
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: Item
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: list[Item]
    params: {}
- name: user
  endpoint:
    path: /user/
    method: POST
    data_selector: UserOut
    params: {}
- name: portal
  endpoint:
    path: /portal
    method: GET
    data_selector: ''
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: /user/
    method: POST
    data_selector: user_saved
    params: {}
- name: keyword_weights
  endpoint:
    path: /keyword-weights/
    method: GET
    data_selector: dict
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: items
    params: {}
- name: login
  endpoint:
    path: /login/
    method: POST
    data_selector: username
    params: {}
- name: login
  endpoint:
    path: /login/
    method: POST
    data_selector: data
    params: {}
- name: create_files
  endpoint:
    path: /files/
    method: POST
    data_selector: file_sizes
- name: create_upload_files
  endpoint:
    path: /uploadfiles/
    method: POST
    data_selector: filenames
- name: main
  endpoint:
    path: /
    method: GET
    data_selector: content
- name: create_file
  endpoint:
    path: /files/
    method: POST
    data_selector: file_size
    params: {}
- name: create_upload_file
  endpoint:
    path: /uploadfile/
    method: POST
    data_selector: filename
    params: {}
- name: create_files
  endpoint:
    path: /files/
    method: POST
    data_selector: file_sizes
    params: {}
- name: create_upload_files
  endpoint:
    path: /uploadfiles/
    method: POST
    data_selector: filenames
    params: {}
- name: create_file
  endpoint:
    path: /files/
    method: POST
    data_selector: file_size
    params: {}
- name: Path Operation Configuration
  endpoint:
    path: /tutorial/path-operation-configuration/
    method: GET
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: Item
    params: {}
- name: users
  endpoint:
    path: /users/
    method: GET
    data_selector: users
    params: {}
- name: jsonable_encoder
  endpoint:
    path: /tutorial/encoder/#using-the-jsonable_encoder
    method: GET
- name: items
  endpoint:
    path: /items/{id}
    method: PUT
    data_selector: json_compatible_item_data
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: ''
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: ''
    params: {}
- name: partial_update_item
  endpoint:
    path: /items/{item_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: commons
    params:
      q: str | None
      skip: int
      limit: int
- name: users
  endpoint:
    path: /users/
    method: GET
    data_selector: commons
    params:
      q: str | None
      skip: int
      limit: int
- name: Hero
  endpoint:
    path: /create-hero
    method: POST
    data_selector: model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: success
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: '{}'
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: '0'
      limit: '100'
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: heroes
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: sql_databases
  endpoint:
    path: /tutorial/sql-databases/
    method: GET
    data_selector: content
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: records
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: records
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: records
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero_update
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: hero_delete
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: none
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: record
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: record
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: record
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: record
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_details
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[Hero]
    params:
      offset: '0'
      limit: '100'
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: success
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: records
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: records
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: records
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params: {}
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: None
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: single
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: '0'
      limit: '100'
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model=HeroPublic
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model=list[HeroPublic]
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model=HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model=HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: hero
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: single_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: Hero
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: status
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: records
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: success
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: model_validate
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit:
        type: Annotated
        default: 100
        le: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[HeroPublic]
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: None
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: delete_result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: '0'
      limit: '100'
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: records
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: '0'
      limit: '100'
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: heroes
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[Hero]
    params:
      offset: 0
      limit: 100
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model=HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model=list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model=HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model=HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: records
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: '0'
      limit: '100'
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: '0'
      limit: '100'
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: None
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: offset
      limit: limit
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero_create
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero_delete
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: '0'
      limit: '100'
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: record
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: record
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: record
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: record
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: None
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: '{}'
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: none
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: none
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: none
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: none
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: none
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero_update
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: hero_delete
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: '0'
      limit: '100'
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: delete_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: id
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: id
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: id
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: sql_databases
  endpoint:
    path: /tutorial/sql-databases/
    method: GET
    data_selector: records
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: heroes
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero_delete
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: record
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: record
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: model_validate
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: all
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: record
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: record
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: record
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: null
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: null
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: null
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: null
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: heroes
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: delete_hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: ''
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: ''
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero_detail
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: None
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      incremental: offset
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: result
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: model_validate
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: heroes
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: records
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: records
    params:
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: records
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: records
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      limit: '100'
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: heroes_list
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: object
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: List[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: hero
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero_by_id
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: hero
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[Hero]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: Hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: Hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
    params: {}
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: single
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: single
    params: {}
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: single
    params: {}
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: single
    params: {}
- name: create_hero
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
- name: read_heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: '0'
      limit: '100'
- name: read_hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
- name: update_hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
- name: delete_hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: ok
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: HeroPublic
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: list[HeroPublic]
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: HeroPublic
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: db_hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: heroes
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: hero
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: hero_db
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: hero
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: POST
    data_selector: response_model
    params: {}
- name: heroes
  endpoint:
    path: /heroes/
    method: GET
    data_selector: response_model
    params:
      offset: 0
      limit: 100
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: GET
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: PATCH
    data_selector: response_model
    params: {}
- name: hero
  endpoint:
    path: /heroes/{hero_id}
    method: DELETE
    data_selector: response_model
    params: {}
- name: admin
  endpoint:
    path: /admin
    method: POST
    data_selector: message
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: message
    params: {}
- name: users
  endpoint:
    path: /users/
    method: GET
    data_selector: records
    params: {}
- name: user_me
  endpoint:
    path: /users/me
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users/{username}
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: records
    params: {}
- name: item
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: records
    params: {}
- name: update_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: records
    params: {}
- name: send_notification
  endpoint:
    path: /send-notification/{email}
    method: POST
    data_selector: message
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users/
    method: GET
    data_selector: records
    params: {}
- name: static_files
  endpoint:
    path: /static
    method: GET
    data_selector: directory
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: response
    params: {}
- name: create_item
  endpoint:
    path: /items/
    method: POST
    data_selector: response
    params: {}
- name: additional_status_codes
  endpoint:
    path: /advanced/additional-status-codes
    method: GET
- name: openapi_and_api_docs
  endpoint:
    path: /advanced/additional-status-codes/openapi-and-api-docs
    method: GET
- name: Return a Response
  endpoint:
    path: /advanced/response-directly/
    method: GET
    data_selector: response
    params: {}
- name: Using the jsonable_encoder in a Response
  endpoint:
    path: /advanced/response-directly/#using-the-jsonable_encoder-in-a-response
    method: GET
    data_selector: response
    params: {}
- name: Returning a custom Response
  endpoint:
    path: /advanced/response-directly/#returning-a-custom-response
    method: GET
    data_selector: response
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: null
    params: {}
- name: legacy
  endpoint:
    path: /legacy/
    method: GET
    data_selector: null
    params: {}
- name: cookie_and_object
  endpoint:
    path: /cookie-and-object/
    method: POST
    data_selector: message
    params: {}
- name: cookie
  endpoint:
    path: /cookie/
    method: POST
    data_selector: message
    params: {}
- name: get_or_create_task
  endpoint:
    path: /get-or-create-task/{task_id}
    method: PUT
    data_selector: tasks
    params: {}
- name: response_change_status_code
  endpoint:
    path: /advanced/response-change-status-code/
    method: GET
- name: query-checker
  endpoint:
    path: /query-checker/
    method: GET
    data_selector: fixed_content_in_query
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: client_host
    params: {}
- name: HTTPSRedirectMiddleware
  endpoint:
    path: /advanced/middleware/#httpsredirectmiddleware
    method: GET
    data_selector: ''
    params: {}
- name: TrustedHostMiddleware
  endpoint:
    path: /advanced/middleware/#trustedhostmiddleware
    method: GET
    data_selector: ''
    params: {}
- name: GZipMiddleware
  endpoint:
    path: /advanced/middleware/#gzipmiddleware
    method: GET
    data_selector: ''
    params: {}
- name: sub_application
  endpoint:
    path: /advanced/sub-applications/
    method: GET
- name: main_app
  endpoint:
    path: /app
    method: GET
    data_selector: message
    params: {}
- name: sub_api
  endpoint:
    path: /subapi/sub
    method: GET
    data_selector: message
    params: {}
- name: proxy_with_a_stripped_path_prefix
  endpoint:
    path: /advanced/behind-a-proxy/#proxy-with-a-stripped-path-prefix
    method: GET
- name: app
  endpoint:
    path: /app
    method: GET
- name: websocket_endpoint
  endpoint:
    path: /ws
    method: GET
    data_selector: messages
    params: {}
- name: websocket_endpoint
  endpoint:
    path: /items/{item_id}/ws
    method: GET
    data_selector: message
    params: {}
- name: predict
  endpoint:
    path: /predict
    method: GET
    data_selector: result
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: items
    params: {}
- name: websocket
  endpoint:
    path: /ws
    method: GET
    data_selector: msg
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: json
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: params
    params: {}
- name: users
  endpoint:
    path: /users/
    method: GET
    data_selector: params
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
    data_selector: message
    params: {}
- name: settings
  endpoint:
    path: /info
    method: GET
    data_selector: app_name, admin_email, items_per_user
    params: {}
- name: create_invoice
  endpoint:
    path: /invoices/
    method: POST
    data_selector: invoice
    params: {}
- name: invoice_notification
  endpoint:
    path: '{$callback_url}/invoices/{$request.body.id}'
    method: POST
    data_selector: body
    params: {}
- name: create_invoice
  endpoint:
    path: /invoices/
    method: POST
- name: invoice_notification
  endpoint:
    path: '{$callback_url}/invoices/{$request.body.id}'
    method: POST
- name: invoices
  endpoint:
    path: /invoices/
    method: POST
    data_selector: msg
- name: invoice_notification
  endpoint:
    path: '{$callback_url}/invoices/{$request.body.id}'
    method: POST
    data_selector: ok
- name: invoices
  endpoint:
    path: /invoices/
    method: POST
    data_selector: msg
    params: {}
- name: invoice_notification
  endpoint:
    path: '{$callback_url}/invoices/{$request.body.id}'
    method: POST
    data_selector: ok
    params: {}
- name: new_subscription
  endpoint:
    path: new-subscription
    method: POST
- name: read_users
  endpoint:
    path: /users/
    method: GET
- name: flask_response
  endpoint:
    path: /v1/
    method: GET
    data_selector: response
- name: fastapi_response
  endpoint:
    path: /v2
    method: GET
    data_selector: message
- name: wsgi_flask
  endpoint:
    path: /v1
    method: GET
    data_selector: message
    params: {}
- name: read_main
  endpoint:
    path: /v2
    method: GET
    data_selector: message
    params: {}
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: message
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: list[Item]
- name: users
  endpoint:
    path: /users/
    method: POST
    data_selector: message
- name: app
  endpoint:
    path: /app
    method: GET
    data_selector: records
- name: container
  endpoint:
    path: /deployment/docker
    method: GET
    data_selector: records
    params: {}
- name: sum_numbers
  endpoint:
    path: /sum
    method: POST
    data_selector: null
    params: {}
- name: not_timed
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: timed
  endpoint:
    path: /timed
    method: GET
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: item
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: list[Item]
    params: {}
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: item
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: list[Item]
    params: {}
- name: custom_swagger_ui_html
  endpoint:
    path: /docs
    method: GET
- name: swagger_ui_redirect
  endpoint:
    path: /swagger_ui_oauth2_redirect_url
    method: GET
- name: redoc_html
  endpoint:
    path: /redoc
    method: GET
- name: read_user
  endpoint:
    path: /users/{username}
    method: GET
- name: swagger_ui_parameters
  endpoint:
    path: /configure/swagger-ui
    method: GET
    data_selector: parameters
    params: {}
- name: read_items
  endpoint:
    path: /items/
    method: GET
    response_description: Successful Response
- name: replace_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: get_items
  endpoint:
    path: /items/
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: message
- name: items
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: message
    params: {}
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: message
    params: {}
- name: delete_item
  endpoint:
    path: /items/{item_id}
    method: DELETE
    response_description: Successful Response
- name: get_item_options
  endpoint:
    path: /items/
    method: OPTIONS
    data_selector: additions
- name: delete_item
  endpoint:
    path: /items/{item_id}
    method: DELETE
    data_selector: message
    params: {}
- name: get_items_headers
  endpoint:
    path: /items/
    method: HEAD
    response_description: Successful Response
    status_code: 204
- name: options
  endpoint:
    path: /items/
    method: OPTIONS
    data_selector: additions
- name: update_item
  endpoint:
    path: /items/
    method: PATCH
    response_description: Successful Response
- name: trace_item
  endpoint:
    path: /items/{item_id}
    method: TRACE
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/
    method: PATCH
    data_selector: null
    params: {}
- name: on_event
  endpoint:
    path: /on_event
    method: GET
    data_selector: event_type
    params: {}
- name: middleware
  endpoint:
    path: /middleware
    method: GET
    data_selector: middleware_type
    params: {}
- name: exception_handler
  endpoint:
    path: /exception_handler
    method: GET
    data_selector: exc_class_or_status_code
    params: {}
- name: Request Parameters
  endpoint:
    path: /reference/parameters/
    method: GET
    data_selector: parameters
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: item_id
    params: {}
- name: Cookie
  endpoint:
    path: /reference/parameters/#fastapi.Cookie
    method: GET
    data_selector: records
    params: {}
- name: HTTP Status Codes
  endpoint:
    path: /reference/status/
    method: GET
    data_selector: status codes
    params: {}
- name: create_upload_file
  endpoint:
    path: /uploadfile/
    method: POST
    data_selector: ''
    params: {}
- name: UploadFile
  endpoint:
    path: /reference/uploadfile/
    method: GET
    data_selector: null
    params: {}
- name: HTTPException
  endpoint:
    path: /reference/exceptions/#fastapi.HTTPException
    method: GET
- name: WebSocketException
  endpoint:
    path: /reference/exceptions/#fastapi.WebSocketException
    method: GET
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: records
- name: replace_item
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/
    method: GET
    data_selector: records
    params: {}
- name: put
  endpoint:
    path: /items/{item_id}
    method: PUT
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/
    method: POST
    data_selector: message
    params: {}
- name: create_item
  endpoint:
    path: /items/
    method: POST
    data_selector: message
    params: {}
- name: delete_item
  endpoint:
    path: /items/{item_id}
    method: DELETE
    response_description: Successful Response
- name: delete_item
  endpoint:
    path: /items/{item_id}
    method: DELETE
    data_selector: null
    params: {}
- name: get_item_options
  endpoint:
    path: /items/
    method: OPTIONS
    data_selector: null
    params: {}
- name: items_options
  endpoint:
    path: /items/
    method: OPTIONS
    data_selector: null
    params: {}
- name: items
  endpoint:
    path: /items/
    method: HEAD
    response_description: Successful Response
    status_code: 204
- name: update_item
  endpoint:
    path: /items/
    method: PATCH
    response_description: Successful Response
- name: items
  endpoint:
    path: /items/
    method: HEAD
    data_selector: null
    params:
      status_code: 204
- name: trace_item
  endpoint:
    path: /items/{item_id}
    method: TRACE
    data_selector: None
    params: {}
- name: trace
  endpoint:
    path: /items/{item_id}
    method: TRACE
    data_selector: null
    params: {}
- name: send_notification
  endpoint:
    path: /send-notification/{email}
    method: POST
- name: Response
  endpoint:
    path: /response
    method: GET
    data_selector: content
- name: HTMLResponse
  endpoint:
    path: /
    method: POST
    data_selector: content
    params: {}
- name: JSONResponse
  endpoint:
    path: /
    method: POST
    data_selector: content
    params: {}
- name: PlainTextResponse
  endpoint:
    path: /responses/PlainTextResponse
    method: GET
    data_selector: content
    params: {}
- name: RedirectResponse
  endpoint:
    path: /responses/RedirectResponse
    method: GET
    data_selector: url
    params: {}
- name: Response
  endpoint:
    path: /responses/Response
    method: GET
    data_selector: content
    params: {}
- name: StreamingResponse
  endpoint:
    path: /reference/responses/#fastapi.responses.StreamingResponse
    method: GET
- name: CORSMiddleware
  endpoint:
    path: /fastapi/middleware/cors
    method: GET
- name: GZipMiddleware
  endpoint:
    path: /fastapi/middleware/gzip
    method: GET
- name: HTTPSRedirectMiddleware
  endpoint:
    path: /fastapi/middleware/httpsredirect
    method: GET
- name: TrustedHostMiddleware
  endpoint:
    path: /fastapi/middleware/trustedhost
    method: GET
- name: WSGIMiddleware
  endpoint:
    path: /fastapi/middleware/wsgi
    method: GET
- name: StaticFiles
  endpoint:
    path: /reference/staticfiles/
    method: GET
- name: TemplateResponse
  endpoint:
    path: TemplateResponse
    method: POST
    data_selector: response
    params: {}
- name: items
  endpoint:
    path: /items/{item_id}
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OpenAPI schema generation via FastAPI
- FastAPI is a modern, fast (high-performance), web framework for building APIs with
  Python based on standard Python type hints.
- Uses JWT tokens with OAuth2 support
- Uses OAuth2 and JWT token for security and authorization.
- Validará que haya un `item_id` en el path para requests `GET` y `PUT`.
- Validará que el `item_id` sea del tipo `int` para requests `GET` y `PUT`.
- Supports OAuth2 with JWT tokens and HTTP Basic
- Utilise OAuth2 avec jetons JWT
- Documentation interactive automatique de l'API fournie par Swagger UI
- Documentation alternative fournie par ReDoc
- Supports OAuth2 with JWT authentication.
- Uses OAuth2, JWT tokens, and HTTP Basic authentication.
- Uses OAuth2 with JWT token and HTTP Basic authentication.
- Supporto per OAuth2 con token JWT e autenticazione HTTP Basic.
- JWT トークンを用いた OAuth2 や HTTP Basic 認証のサポートを含む、セキュリティと認証。
- 自動対話型の API ドキュメントが表示されます。
- サーバーは自動でリロードされます。
- Beveiliging en authenticatie, inclusief ondersteuning voor OAuth2 met JWT-tokens
  en HTTP Basic auth.
- Uses OAuth2 with JWT tokens
- FastAPI supports OAuth2 with JWT tokens.
- Supports OAuth2 with JWT tokens
- Uses OAuth2 with JWT tokens and Basic authentication.
- Supports deep JSON model validation.
- Безпека та автентифікація, включаючи підтримку OAuth2 з JWT tokens та HTTP Basic
  автентифікацію.
- Bảo mật và xác thực, hỗ trợ OAuth2 (với JWT tokens) và HTTP Basic.
- Uses OAuth2 with JWT
- FastAPI 是一个用于构建 API 的现代、快速（高性能）的 web 框架，使用 Python 并基于标准的 Python 类型提示。
- 使用浏览器访问 http://127.0.0.1:8000/items/5?q=somequery。
- 访问 http://127.0.0.1:8000/docs 将会看到自动生成的交互式 API 文档（由 Swagger UI 生成）。
- 访问 http://127.0.0.1:8000/redoc 将会看到另一个自动生成的文档（由 ReDoc 生成）。
- 提供支援 OAuth2、JWT tokens 和 HTTP Basic 驗證
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Interactive API documentation and exploration web user interfaces.
- Based on OpenAPI, there are multiple options for API documentation.
- Add support for `dependencies` in WebSocket routes.
- Add exception handler for `WebSocketRequestValidationError`.
- This is a security fix. Please upgrade as soon as possible.
- This version of FastAPI drops support for Python 3.6.
- Python 3.6 reached the end-of-life a long time ago.
- Using resources from dependencies with yield in background tasks is no longer supported.
- Changed execution flow for resources in background tasks.
- Some objects like Contact may return nulls in deeply nested fields
- FastAPI takes advantage of standard Python types to perform various tasks.
- Environment variables are useful for handling application settings.
- A path parameter is always required as it has to be part of the path.
- Prefer to use the Annotated version if possible.
- This is supported since FastAPI version 0.115.0.
- Browsers handle cookies in special ways and behind the scenes, they don't easily
  allow JavaScript to touch them.
- Supported since FastAPI version 0.115.0
- Uses FastAPI for building APIs
- Response model can be omitted for flexibility
- status_code can alternatively also receive an IntEnum, such as Python's http.HTTPStatus.
- This is supported since FastAPI version 0.113.0.
- Supports forbidding extra fields in form data since version 0.114.0
- You can declare multiple File and Form parameters in a path operation, but you can't
  also declare Body fields that you expect to receive as JSON.
- Uses jsonable_encoder to convert Pydantic model to dict
- Dependencies can be defined as async or regular functions.
- FastAPI uses dependency injection to handle shared logic and security.
- FastAPI provides several tools to help you deal with Security easily.
- The default parameters used by the CORSMiddleware implementation are restrictive
  by default, so you'll need to explicitly enable particular origins, methods, or
  headers, in order for browsers to be permitted to use them in a Cross-Domain context.
- Uses SQLite as the database.
- SQLModel is built on top of SQLAlchemy.
- Database tables are created on startup
- Uses SQLite database with SQLModel for ORM.
- Uses SQLModel for ORM with FastAPI.
- The database is SQLite, and the file is named database.db.
- The API does not require authentication.
- Uses SQLModel with FastAPI
- Uses FastAPI for building the API
- Uses FastAPI framework.
- Uses SQLModel with SQLite as the database.
- Database tables are created on application startup.
- Uses SQLModel to interface with SQLite database.
- Tables are created on application startup.
- Uses SQLite for database storage.
- Database is SQLite and resides in the file database.db.
- Session management is handled by FastAPI dependency injection.
- The API uses FastAPI framework.
- Database is SQLite with a file named 'database.db'.
- Requires a running FastAPI server at http://localhost:8000
- Uses SQLModel with SQLite as the database backend
- Uses FastAPI and SQLModel for database interactions.
- Ensure the SQLite database is running before accessing the API.
- Uses SQLite as the database backend.
- The `Hero` class is a table model representing a SQL table.
- Uses SQLite database with single-threaded access configuration
- Uses SQLite as the database
- Uses SQLite as a database backend
- FastAPI is used to create the API
- Requires setup of connected app in api
- The API supports creating, reading, updating, and deleting heroes.
- Uses SQLite database with a single engine for connections.
- check_same_thread=False allows usage in different threads.
- The app does not require authentication.
- Uses SQLite as database
- Heroes are stored in a SQLite database with the file name 'database.db'
- Uses FastAPI for RESTful API setup
- Requires a running FastAPI application at localhost:8000
- Database created on startup
- Uses SQLModel for ORM
- Database is SQLite based.
- Uses SQLModel for data handling
- Database is SQLite, created by FastAPI on startup
- Database is SQLite and it is created at startup.
- Uses SQLModel for database interaction.
- Uses SQLModel with SQLite database.
- Uses SQLite for database
- Create the database and tables on startup
- Limit parameter can be set up to 100.
- Uses SQLite as a database.
- Uses SQLite as the database backend
- Uses FastAPI framework
- Uses SQLite as a database backend.
- Database tables are created on startup.
- The limit parameter has a maximum value of 100.
- Uses SQLite for storage
- Supports CRUD operations for Hero objects
- No authentication is required.
- Database is SQLite.
- Endpoints are for CRUD operations on Heroes.
- Uses FastAPI and SQLModel for ORM.
- Uses FastAPI for handling API requests.
- The application automatically creates tables on startup
- Database is SQLite and uses in-memory session handling.
- Uses SQLModel with SQLite for database interactions.
- Create database and tables on startup.
- The API supports basic CRUD operations for heroes.
- Ensure the server is running on localhost:8000.
- Uses FastAPI for the backend service
- Uses SQLModel with SQLite — requires setup of database file
- Database is created on application startup.
- Hero not found returns 404 error.
- Uses SQLModel with SQLite
- Database file is 'database.db'
- Create database tables on startup using SQLModel.
- Database is SQLite, requires local file access.
- Ensure the database file is accessible for reads/writes.
- Uses SQLModel with SQLite for storage.
- Requires session management for database interactions.
- Uses FastAPI for the web framework.
- Make sure to adjust the base_url according to your deployment.
- Uses SQLite as a database
- Supports CRUD operations for heroes
- Uses SQLModel for database operations
- Database is SQLite stored in 'database.db'
- Uses SQLModel for ORM.
- The API allows CRUD operations for heroes.
- Creates database tables on startup
- Updating a hero requires the hero_id and the fields to be updated.
- Uses FastAPI with SQLModel for database interactions.
- 'Hero model has fields: id, name, age, secret_name'
- Database is SQLite
- Uses SQLModel for database interactions.
- Uses SQLite for local database storage
- Uses session dependency for database operations.
- Creates database tables on startup.
- Uses SQLModel with FastAPI for CRUD operations
- Some operations may return 404 if the hero is not found
- Uses FastAPI with SQLModel for database interaction
- Uses SQLite database with SQLModel
- Requires setup of database file
- Uses SQLite for database storage
- Database is SQLite, uses SQLModel for ORM.
- Uses SQLModel for database interactions
- Requires a running FastAPI instance
- Handles various CRUD operations for heroes
- Uses SQLModel for database interaction
- Requires a SQLite database connection
- Uses FastAPI.
- Uses FastAPI framework for building applications.
- Uses Markdown in descriptions.
- The first "/static" refers to the sub-path this "sub-application" will be "mounted"
  on.
- The "directory="static" refers to the name of the directory that contains your static
  files.
- The "name="static" gives it a name that can be used internally by FastAPI.
- You can serve static files automatically from a directory using StaticFiles.
- If you are not an 'expert' in OpenAPI, you probably don't need this.
- You have to make sure each one of your *path operation functions* has a unique name.
- When you return a Response directly, it will be returned directly.
- Make sure it has the data you want it to have, and that the values are valid JSON.
- When you return a Response directly its data is not validated, converted (serialized),
  or documented automatically.
- By default, FastAPI would automatically convert return values to JSON using the
  jsonable_encoder.
- FastAPI provides a variety of response classes including JSONResponse, HTMLResponse,
  and others.
- This is a rather advanced topic.
- If you are starting with FastAPI, you might not need this.
- Use Depends to inject dependencies.
- Uses root_path to handle specific cases behind a proxy
- Before FastAPI 0.108.0, Starlette 0.29.0, the name was the first parameter.
- In previous versions, the request object was passed as part of the key-value pairs
  in the context for Jinja2.
- You can receive and send binary, text, and JSON data.
- WebSocket connections can be established using a token as a query parameter.
- Handles multiple clients and disconnections.
- The recommended way to handle the startup and shutdown is using the lifespan parameter
  of the FastAPI app.
- For more details, check Starlette's documentation for testing WebSockets
- Settings can be provided in environment variables that are read by the application.
- You can use `.env` files to store environment variables.
- Auto-reload is enabled by default in development mode.
- You shouldn't pin the version of starlette.
- Different versions of FastAPI will use a specific newer version of Starlette.
- Use the `fastapi run` command to serve your FastAPI application.
- Uvicorn is the default ASGI server that comes with FastAPI.
- The --reload option in Uvicorn is useful during development but should not be used
  in production.
- Using multiple workers can help with replication and handling more requests.
- Uses containers to simplify the process of building and deploying an application.
- You could use settings and environment variables to configure OpenAPI conditionally
  depending on the environment, and even disable it entirely.
- Hiding your documentation user interfaces in production shouldn't be the way to
  protect your API.
- You could disable OpenAPI (including the UI docs) by setting the environment variable
  OPENAPI_URL to the empty string.
- Support for separate_input_output_schemas was added in FastAPI 0.102.0.
- The path is defined in the URL as /items/{item_id}
- Response model is used for serialization and documentation
- The URL path to be used for this *path operation* is specified in the documentation.
- Path operation uses HTTP PUT method.
- The default response description is 'Successful Response'.
- Include this path operation in the generated OpenAPI schema by default.
- The path is specified as '/items/' for the OPTIONS operation.
- Add a path operation using an HTTP DELETE operation.
- Successful Response
- Add a *path operation* using an HTTP PATCH operation.
- The ID of the item to get is a required path parameter.
- Parameter is available only for compatibility.
- Include (or not) all the *path operations* in this router in the generated OpenAPI
  schema.
- A path prefix must start with '/'
- Add a *path operation* using an HTTP GET operation.
- The URL path to be used for this *path operation* is specified in the `path` parameter.
- Uses HTTP GET operation to retrieve items
- Uses FastAPI for creating path operations
- The URL path to be used for this *path operation* is /items.
- Include this path operation in the generated OpenAPI schema.
- on_event is deprecated, use lifespan event handlers instead.
- Add a path operation using an HTTP TRACE operation.
- You can declare a parameter in a path operation function or dependency function
  with the type BackgroundTasks.
- When you want to define dependencies that should be compatible with both HTTP and
  WebSockets, you can define a parameter that takes an HTTPConnection instead of a
  Request or a WebSocket.
- status_code defaults to 200
- charset is set to 'utf-8'
- Uses high-performance ujson library to serialize data to JSON
- Uses high-performance orjson library to serialize data to JSON
- Default status code is 200 for both HTMLResponse and JSONResponse.
- Charset for responses is 'utf-8'.
- Default media type for HTMLResponse is 'text/html' and for JSONResponse is 'application/json'.
- charset = 'utf-8'
- status_code = status_code
- media_type = (media_type if media_type is None else media_type)
- background = background
- The OAuth2 specification dictates that for a password flow the data should be collected
  using form data.
- This section is useful only to a handful of people, team members with permissions
  to manage the repository.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Extra inputs are not permitted
- 'extra_forbidden: Extra inputs are not permitted'
- '404 Not Found: Item not found'
- '404: Hero not found'
- '404 Not Found: Hero not found'
- '400: Bad request, invalid parameters'
- '400: Bad Request'
- WS_1013_TRY_AGAIN_LATER = 1013
- WS_1014_BAD_GATEWAY = 1014
- WS_1015_TLS_HANDSHAKE = 1015
- HTTP_400_BAD_REQUEST = 400
- HTTP_401_UNAUTHORIZED = 401
- HTTP_403_FORBIDDEN = 403
- HTTP_404_NOT_FOUND = 404
- HTTP_500_INTERNAL_SERVER_ERROR = 500
- '404: Item not found'
- 'WS_1008_POLICY_VIOLATION: Session cookie is missing'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - SecurityScopes
  - Security
  - SecurityBase
  - OAuth2
  - WebSocket
  - WebSocketDisconnect
  - WebSocketState
  - Depends
  - APIKeyCookie
  - APIKeyHeader
  - APIKeyQuery
  - OAuth2PasswordRequestFormStrict
  - OAuth2PasswordRequestForm
  - OpenIdConnect
client:
  base_url: sqlite:///database.db
  connect_args:
    check_same_thread: false
source_metadata: null
