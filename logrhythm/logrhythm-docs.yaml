resources:
- name: Open Collector VM Configuration
  endpoint:
    path: /vm/configuration
    method: POST
    data_selector: configuration
    params: {}
- name: installation_steps
  endpoint:
    path: /install/redhat_enterprise_9
    method: GET
    data_selector: steps
    params: {}
- name: Virtual Machine Resources
  endpoint:
    path: /api/v1/vm_resources
    method: GET
    data_selector: resources
    params: {}
- name: logrhythm_user
  endpoint:
    path: /user/logrhythm
    method: POST
    data_selector: user
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_creation
  endpoint:
    path: /user_creation
    method: POST
    data_selector: user
    params:
      username: logrhythm
      password: <enter a password of your choice>
- name: firewalld_settings
  endpoint:
    path: /firewalld_settings
    method: PUT
    data_selector: firewalld
    params:
      FirewallBackend: iptables
- name: auto_update_commands
  endpoint:
    path: ./lrctl autoupdate <commandname>
    method: GET
    data_selector: commands
    params: {}
- name: cipher_key_commands
  endpoint:
    path: ./lrctl cipherkey <commandname>
    method: GET
    data_selector: commands
    params: {}
- name: beat_commands
  endpoint:
    path: ./lrctl <beatname> <commandname>
    method: GET
    data_selector: commands
    params: {}
- name: lrjq_commands
  endpoint:
    path: ./lrjq <commandname>
    method: GET
    data_selector: commands
    params: {}
- name: metrics_commands
  endpoint:
    path: ./lrctl metrics <commandname>
    method: GET
    data_selector: commands
    params: {}
- name: oc_pipeline_commands
  endpoint:
    path: ./ocpipeline <commandname>
    method: GET
    data_selector: commands
    params: {}
- name: open_collector_commands
  endpoint:
    path: ./lrctl oc <commandname>
    method: GET
    data_selector: commands
    params: {}
- name: docker_commands
  endpoint:
    path: ./docker <command>
    method: GET
    data_selector: commands
    params: {}
- name: system_monitor
  endpoint:
    path: /sysmon/start
    method: POST
    data_selector: configuration
    params:
      syslog_port: '514'
      syslog_timezone: timezone
      syslog_transport: TCP
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Docker Log Rotation
  endpoint:
    path: /configure-docker-log-rotation
    method: GET
- name: commands
  endpoint:
    path: /commands
    method: GET
    data_selector: commands
    params: {}
- name: auto-update
  endpoint:
    path: /autoupdate
    method: GET
    data_selector: auto-update
    params: {}
- name: cipherkey
  endpoint:
    path: /cipherkey
    method: GET
    data_selector: cipherkey
    params: {}
- name: beat
  endpoint:
    path: /beat
    method: GET
    data_selector: beat
    params: {}
- name: lrjq
  endpoint:
    path: /lrjq
    method: GET
    data_selector: lrjq
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: ocpipeline
  endpoint:
    path: /ocpipeline
    method: GET
    data_selector: ocpipeline
    params: {}
- name: open_collector
  endpoint:
    path: /open_collector
    method: GET
    data_selector: open_collector
    params: {}
- name: docker
  endpoint:
    path: /docker
    method: GET
    data_selector: docker
    params: {}
- name: Add Cipher Key
  endpoint:
    path: /cipherkey/add
    method: POST
    data_selector: success
    params: {}
- name: Edit Cipher Key
  endpoint:
    path: /cipherkey/edit
    method: POST
    data_selector: success
    params: {}
- name: View Cipher Key
  endpoint:
    path: /cipherkey/view
    method: GET
    data_selector: key
    params: {}
- name: Remove Cipher Key
  endpoint:
    path: /cipherkey/remove
    method: DELETE
    data_selector: success
    params: {}
- name: Open Collector
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollector
    method: GET
    data_selector: records
    params: {}
- name: OC Admin Open Collectors
  endpoint:
    path: /oc-admin-open-collectors
    method: GET
    data_selector: records
    params: {}
- name: OC Admin Pipelines
  endpoint:
    path: /oc-admin-pipelines
    method: GET
    data_selector: records
    params: {}
- name: Open Collector
  endpoint:
    path: /open_collectors
    method: GET
- name: Shipper
  endpoint:
    path: /shippers
    method: GET
- name: collection_configuration
  endpoint:
    path: /pipelines/collection
    method: GET
    data_selector: configurations
- name: your_source_name
  endpoint:
    path: null
    method: null
    data_selector: null
    params: {}
- name: System Monitor
  endpoint:
    path: /system_monitor
    method: POST
    data_selector: properties
    params:
      enable_json_parsing: true
- name: Error Messages
  endpoint:
    path: /oc-admin/error-messages
    method: GET
- name: Open Collector
  endpoint:
    path: /open_collectors
    method: GET
    data_selector: collectors
    params: {}
- name: Shipper
  endpoint:
    path: /shippers
    method: GET
    data_selector: shippers
    params: {}
- name: winlogbeat_event_logs
  endpoint:
    path: /winlogbeat/event_logs
    method: GET
    data_selector: event_logs
    params:
      ignore_older: 72h
- name: logstash_output
  endpoint:
    path: /logstash/output
    method: POST
    data_selector: hosts
    params:
      hosts:
      - XX.X.X.XXX:5044
- name: file_output
  endpoint:
    path: /output.file
    method: POST
    data_selector: path
    params:
      path: /tmp/winlogbeat
      filename: winlogbeat
- name: Pipelines
  endpoint:
    path: /OCbeats/docs/oc-admin-pipelines
    method: GET
    data_selector: pipelines
    params: {}
- name: Open Collectors
  endpoint:
    path: /OCbeats/docs/oc-admin-open-collectors
    method: GET
    data_selector: open_collectors
    params: {}
- name: event_logs
  endpoint:
    path: /api/v1/event_logs
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: OC Admin Open Collectors
  endpoint:
    path: /oc-admin/open-collectors
    method: GET
- name: OC Admin Pipelines
  endpoint:
    path: /oc-admin/pipelines
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: output
    params: {}
- name: Error Messages
  endpoint:
    path: /oc-admin/error-messages
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: winlogbeat
  endpoint:
    path: /winlogbeat
    method: POST
    data_selector: output
    params: {}
- name: SQS Queue
  endpoint:
    path: /sqs
    method: POST
- name: S3 Bucket
  endpoint:
    path: /s3
    method: GET
- name: custom_oc_pipeline
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomOCPipeline
    method: GET
    data_selector: records
    params: {}
- name: s3beat
  endpoint:
    path: /s3beat/start
    method: POST
    data_selector: status
    params: {}
- name: log
  endpoint:
    path: /input/response/properties/accessPolicies
    method: GET
    data_selector: accessPolicies
    params: {}
- name: Open Collector
  endpoint:
    path: /Syslog/OpenCollector
    method: POST
    data_selector: logs
    params: {}
- name: bucket X
  endpoint:
    path: /services/data/vXX.X/sobjects/BucketX
    method: GET
    data_selector: records
    params: {}
- name: queue Q
  endpoint:
    path: /services/data/vXX.X/sobjects/QueueQ
    method: GET
    data_selector: records
    params: {}
- name: SQS Queue
  endpoint:
    path: /services/sqs
    method: POST
    data_selector: queue
    params:
      actions:
      - ReceiveMessage
      - DeleteMessage
      - GetQueueUrl
- name: S3 Bucket
  endpoint:
    path: /services/s3
    method: POST
    data_selector: bucket
    params:
      actions:
      - Read
- name: CrossAccountSignin
  endpoint:
    path: /services/data/vXX.X/roles/CrossAccountSignin
    method: POST
    data_selector: RoleArn
    params: {}
- name: Open Collector Log Source
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollectorLogSource
    method: POST
    data_selector: logs
    params: {}
- name: Syslog Relay
  endpoint:
    path: /services/data/vXX.X/sobjects/SyslogRelay
    method: POST
    data_selector: settings
    params: {}
- name: sqs_permissions
  endpoint:
    path: /permissions/sqs
    method: POST
    data_selector: permissions
    params: {}
- name: s3_permissions
  endpoint:
    path: /permissions/s3
    method: POST
    data_selector: permissions
    params: {}
- name: role_based_access
  endpoint:
    path: /configure-role-based-access
    method: GET
- name: bucket X
  endpoint:
    path: /services/data/vXX.X/sobjects/BucketX
    method: GET
    data_selector: records
    params: {}
- name: queue Q
  endpoint:
    path: /services/data/vXX.X/sobjects/QueueQ
    method: GET
    data_selector: records
    params: {}
- name: Cisco Umbrella
  endpoint:
    path: /cisco_umb.gz
    method: GET
    data_selector: log
    params:
      log_file_size: 1
- name: CloudTrail
  endpoint:
    path: /cloudtrail_log.json
    method: GET
    data_selector: log
    params:
      log_file_size: 1038
- name: CloudWatch
  endpoint:
    path: /cloud_watch_logs.gz
    method: GET
    data_selector: log
    params:
      log_file_size: 3
- name: Config Events
  endpoint:
    path: /config_evnts.json
    method: GET
    data_selector: log
    params:
      log_file_size: 12
- name: GuardDuty
  endpoint:
    path: /gauradduty.json
    method: GET
    data_selector: log
    params:
      log_file_size: 36
- name: CrossAccountSignin
  endpoint:
    path: /iam/roles/CrossAccountSignin
    method: POST
    data_selector: role
    params: {}
- name: scaling_options
  endpoint:
    path: /scalability-testing-for-the-aws-s3-beat
    method: GET
    data_selector: scaling_options
    params: {}
- name: SQS Queue
  endpoint:
    path: /services/sqs
    method: POST
    data_selector: QueueArn
    params: {}
- name: S3 Bucket
  endpoint:
    path: /services/s3
    method: POST
    data_selector: BucketArn
    params: {}
- name: AWS S3 Beat IAM User Permissions
  endpoint:
    path: /OCbeats/docs/aws-s3-beat-iam-user-permissions
    method: GET
- name: Audit logs
  endpoint:
    path: /path/to/audit/logs
    method: POST
    data_selector: logs
    params: {}
- name: Event Hub
  endpoint:
    path: /services/data/vXX.X/EventHub
    method: GET
- name: Cisco Umbrella
  endpoint:
    path: /cisco_umb.gz
    method: GET
    data_selector: log_files
    params:
      log_file_size: 1
- name: CloudTrail
  endpoint:
    path: /cloudtrail_log.json
    method: GET
    data_selector: log_files
    params:
      log_file_size: 1038
- name: CloudWatch
  endpoint:
    path: /cloud_watch_logs.gz
    method: GET
    data_selector: log_files
    params:
      log_file_size: 3
- name: Config Events
  endpoint:
    path: /config_evnts.json
    method: GET
    data_selector: log_files
    params:
      log_file_size: 12
- name: GuardDuty
  endpoint:
    path: /gauradduty.json
    method: GET
    data_selector: log_files
    params:
      log_file_size: 36
- name: Event Hub
  endpoint:
    path: /configure-azure-event-hubs-using-connection-strings
    method: POST
- name: Diagnostic Log Settings
  endpoint:
    path: /path/to/diagnostic/logs
    method: POST
    data_selector: logs
    params: {}
- name: Microsoft Defender Log Settings
  endpoint:
    path: /path/to/microsoft/defender/logs
    method: POST
    data_selector: logs
    params: {}
- name: AD Password Protection Log Settings
  endpoint:
    path: /path/to/ad/password/protection/logs
    method: POST
    data_selector: logs
    params: {}
- name: Scaling Options
  endpoint:
    path: /scalability-testing-for-the-aws-s3-beat
    method: GET
    data_selector: scaling_options
    params: {}
- name: Scaling Open Collector and the AWS S3 Beat for Cisco Umbrella
  endpoint:
    path: /scalability-testing-for-the-aws-s3-beat/cisco-umbrella
    method: GET
    data_selector: cisco_umbrella_options
    params: {}
- name: Scaling Open Collector and the AWS S3 Beat for CloudWatch
  endpoint:
    path: /scalability-testing-for-the-aws-s3-beat/cloudwatch
    method: GET
    data_selector: cloudwatch_options
    params: {}
- name: Scaling Open Collector and the AWS S3 Beat for GuardDuty
  endpoint:
    path: /scalability-testing-for-the-aws-s3-beat/guardduty
    method: GET
    data_selector: guardduty_options
    params: {}
- name: Scaling Open Collector and the AWS S3 Beat for Config Events
  endpoint:
    path: /scalability-testing-for-the-aws-s3-beat/config-events
    method: GET
    data_selector: config_events_options
    params: {}
- name: Event Hub
  endpoint:
    path: /path/to/eventhub
    method: GET
    data_selector: records
- name: Audit logs
  endpoint:
    path: /services/data/vXX.X/sobjects/AuditLogs
    method: POST
    data_selector: logs
    params: {}
- name: ELBAccessLog
  endpoint:
    path: /AWSLogs/<accountId>/ELBAccessLogTestFile
    method: GET
    data_selector: logs
    params: {}
- name: EventHubBeat
  endpoint:
    path: /eventhubbeat
    method: START
    data_selector: status
    params: {}
- name: Event Hub Beat Using Azure Auth (MSI)
  endpoint:
    path: /event-hub-beat-using-azure-auth-msi
    method: GET
- name: Event Hub Beat Using Connection Strings
  endpoint:
    path: /event-hub-beat-using-connection-strings
    method: GET
- name: Log Flow
  endpoint:
    path: /understand-log-flow-from-azure-to-event-hub
    method: GET
- name: Configure Azure Event Hub
  endpoint:
    path: /configure-the-azure-event-hub-beat
    method: GET
- name: Azure Event Hub Beat
  endpoint:
    path: /event-hubs
    method: GET
- name: insights-operational-logs
  endpoint:
    path: /insights-operational-logs
    method: GET
    data_selector: records
- name: Event Hub
  endpoint:
    path: /eventhub
    method: GET
    data_selector: records
- name: Event Hub Beat Using Connection Strings
  endpoint:
    path: /event-hub-beat-using-connection-strings
    method: GET
- name: Diagnostic Log Settings
  endpoint:
    path: /diagnostic-settings
    method: POST
    data_selector: logs
    params: {}
- name: Microsoft Defender Log Settings
  endpoint:
    path: /microsoft-defender-logs
    method: POST
    data_selector: logs
    params: {}
- name: AD Password Protection Log Settings
  endpoint:
    path: /ad-password-protection-logs
    method: POST
    data_selector: logs
    params: {}
- name: event_hub_config
  endpoint:
    path: /configure-azure-event-hubs-using-connection-string
    method: GET
- name: Azure Event Hub - Open Collector
  endpoint:
    path: /api/eventhub
    method: POST
    data_selector: log_sources
    params: {}
- name: event_hub
  endpoint:
    path: /services/data/vXX.X/sobjects/EventHub
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Open Collector - Azure Event Hub
  endpoint:
    path: /OpenCollector/AzureEventHub
    method: POST
- name: Open Collector - EventHubBeat Heartbeat
  endpoint:
    path: /OpenCollector/EventHubBeatHeartbeat
    method: POST
- name: event_hub_configuration
  endpoint:
    path: /eventhub/config
    method: POST
    data_selector: config
    params: {}
- name: Event Hub
  endpoint:
    path: /configure-azure-event-hubs-using-connection-string
    method: GET
- name: event_hub
  endpoint:
    path: /eventhub/{eventhubname}/messages
    method: POST
    data_selector: events
    params: {}
- name: ADPPLogs
  endpoint:
    path: /ADPPLogs.json
    method: GET
    data_selector: log_file
    params:
      size: 61
- name: MTPLogs
  endpoint:
    path: /MTPLogs.json
    method: GET
    data_selector: log_file
    params:
      size: 3
- name: azure_devops_log
  endpoint:
    path: /azure_devops_log.json
    method: GET
    data_selector: log_file
    params:
      size: 2
- name: Event Hub
  endpoint:
    path: /eventhub
    method: GET
    data_selector: records
- name: AzureEventHubLogSource
  endpoint:
    path: /api/event_hub_log_source
    method: POST
    data_selector: log_sources
    params: {}
- name: OC1
  endpoint:
    path: /scaling-options
    method: GET
    data_selector: scaling_info
    params: {}
- name: Event Hub
  endpoint:
    path: /eventhub
    method: GET
    data_selector: records
- name: Event Hub
  endpoint:
    path: /configure-the-azure-event-hub-beat
    method: GET
- name: carbon_black_log
  endpoint:
    path: /services/data/vXX.X/sobjects/CarbonBlackLog
    method: GET
    data_selector: records
- name: ADPPLogs
  endpoint:
    path: /logs/ADPPLogs.json
    method: GET
    data_selector: log_entries
    params:
      size: 61
- name: MTPLogs
  endpoint:
    path: /logs/MTPLogs.json
    method: GET
    data_selector: log_entries
    params:
      size: 3
- name: azure_devops_log
  endpoint:
    path: /logs/azure_devops_log.json
    method: GET
    data_selector: log_entries
    params:
      size: 2
- name: Open Collector Log Source
  endpoint:
    path: /LogSources
    method: GET
    data_selector: LogSources
    params: {}
- name: Syslog Relay
  endpoint:
    path: /SyslogRelay
    method: POST
    data_selector: SyslogRelay
    params: {}
- name: Cisco AMP Beat Log Source
  endpoint:
    path: /configure-the-cisco-amp-beat-log-source-in-the-siem
    method: GET
- name: Configure Carbon Black Cloud
  endpoint:
    path: /OCbeats/docs/configure-carbon-black-cloud
    method: GET
- name: Initialize the Carbon Black Cloud Beat
  endpoint:
    path: /OCbeats/docs/initialize-the-carbon-black-cloud-beat
    method: GET
- name: Configure the Carbon Black Cloud Log Source in SIEM
  endpoint:
    path: /OCbeats/docs/configure-the-carbon-black-cloud-log-source-in-sie
    method: GET
- name: event_types
  endpoint:
    path: /v0/event_types
    method: GET
    data_selector: event_types
    params: {}
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
- name: devices
  endpoint:
    path: /api/v1/devices
    method: GET
- name: enriched_events
  endpoint:
    path: /api/v1/enriched_events
    method: GET
- name: processes
  endpoint:
    path: /api/v1/processes
    method: GET
- name: Cisco AMP Beat Log Source
  endpoint:
    path: /configure-the-cisco-amp-beat-log-source-in-the-siem
    method: GET
- name: carbon_black_cloud
  endpoint:
    path: /services/data/vXX.X/sobjects/CarbonBlackCloud
    method: GET
    data_selector: records
- name: Syslog - Open Collector - Cisco AMP
  endpoint:
    path: /Syslog/OpenCollector/CiscoAMP
    method: GET
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - CiscoAMPBeat Heartbeat
  endpoint:
    path: /Syslog/OpenCollector/CiscoAMPBeatHeartbeat
    method: GET
    data_selector: logs
    params: {}
- name: Cisco AMP Beat
  endpoint:
    path: /configure-the-cisco-amp-beat
    method: GET
- name: Log Source
  endpoint:
    path: /configure-the-carbon-black-cloud-log-source-in-siem
    method: GET
- name: darktrace_portal_configuration
  endpoint:
    path: /darktrace/portal/configuration
    method: GET
- name: initialize_darktrace_beat
  endpoint:
    path: /darktrace/beat/initialize
    method: POST
- name: configure_darktrace_log_source
  endpoint:
    path: /darktrace/log/source/configure
    method: POST
- name: Syslog - Open Collector - Carbon Black Cloud
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-Carbon-Black-Cloud
    method: GET
- name: Syslog - Open Collector - CarbonBlackBeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-CarbonBlackBeat-Heartbeat
    method: GET
- name: Cisco AMP Data
  endpoint:
    path: /api/v1/endpoint
    method: GET
    data_selector: data
    params: {}
- name: Syslog - Open Collector - DarkTracebeat
  endpoint:
    path: /services/data/vXX.X/sobjects/DarkTracebeat
    method: GET
    data_selector: records
- name: Syslog - Open Collector - DarkTracebeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/DarkTracebeatHeartbeat
    method: GET
    data_selector: records
- name: Cisco AMP Data
  endpoint:
    path: /api/v1/samples
    method: GET
    data_selector: data
- name: duo_beat
  endpoint:
    path: /configure/duo-admin-api-for-duo-beat
    method: GET
- name: Cisco AMP Log Source
  endpoint:
    path: /api/amp/v1/logs
    method: GET
    data_selector: data
- name: Syslog - Open Collector - Cisco AMP
  endpoint:
    path: /services/data/vXX.X/sobjects/CiscoAMP
    method: GET
- name: Syslog - Open Collector - CiscoAMPBeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/CiscoAMPBeat
    method: GET
- name: Cisco AMP
  endpoint:
    path: /api/v1/endpoint
    method: GET
- name: Darktrace Portal Configuration
  endpoint:
    path: /docs/darktrace-portal-configuration
    method: GET
- name: Initialize the Darktrace Beat
  endpoint:
    path: /docs/initialize-the-darktrace-beat
    method: GET
- name: Configure the Darktrace Beat Log Source in SIEM
  endpoint:
    path: /docs/configure-the-darktrace-beat-log-source-in-siem
    method: GET
- name: DuoBeat
  endpoint:
    path: /configure-duo-admin-api-for-duo-beat
    method: GET
- name: auth_logs
  endpoint:
    path: /admin/v1/logs/auth
    method: GET
    data_selector: logs
    params:
      limit: 1000
- name: admin_logs
  endpoint:
    path: /admin/v1/logs/admin
    method: GET
    data_selector: logs
    params: {}
- name: darktrace_log_source
  endpoint:
    path: /darktrace/logs
    method: GET
- name: duo_logs
  endpoint:
    path: /admin/v1/logs
    method: GET
    data_selector: logs
- name: Darktrace Log Source
  endpoint:
    path: /configure-darktrace-beat-log-source
    method: GET
- name: Syslog - Open Collector - DarkTracebeat
  endpoint:
    path: /Syslog/OpenCollector/DarkTracebeat
    method: POST
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - DarkTracebeat Heartbeat
  endpoint:
    path: /Syslog/OpenCollector/DarkTracebeatHeartbeat
    method: POST
    data_selector: logs
    params: {}
- name: Duo Authentication Security
  endpoint:
    path: /services/data/vXX.X/sobjects/DuoAuthenticationSecurity
    method: GET
    data_selector: records
- name: DuoBeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/DuoBeatHeartbeat
    method: GET
    data_selector: records
- name: Duo Admin API
  endpoint:
    path: /configure-duo-admin-api-for-duo-beat
    method: GET
- name: DuoBeat Log Source
  endpoint:
    path: /configure-the-duobeat-log-source-in-the-siem
    method: GET
- name: duo_beat
  endpoint:
    path: /configure-duo-admin-api-for-duo-beat
    method: GET
- name: Exabeam Case
  endpoint:
    path: /services/data/vXX.X/sobjects/ExabeamCase
    method: GET
    data_selector: records
- name: logs
  endpoint:
    path: /logs
    method: GET
- name: Okta System Log
  endpoint:
    path: /api/v1/logs
    method: GET
- name: search_results
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      limit: '3000'
- name: Open Collector
  endpoint:
    path: /log-sources/open-collector
    method: GET
    data_selector: log_sources
    params: {}
- name: Exabeam Cases
  endpoint:
    path: /log-sources/exabeam-cases
    method: GET
    data_selector: log_sources
    params: {}
- name: response_data
  endpoint:
    data_selector: data
- name: Syslog - Open Collector - Duo Authentication Security
  endpoint:
    path: /log/sources/duo/authentication/security
    method: GET
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - DuoBeat Heartbeat
  endpoint:
    path: /log/sources/duobeat/heartbeat
    method: GET
    data_selector: logs
    params: {}
- name: exabeam_case
  endpoint:
    path: /exabeam/case
    method: GET
    data_selector: records
- name: logs
  endpoint:
    method: GET
    params:
      limit_field: limit field
      limit_value: limit value
      offset_field: offset field
      start_field: start field
      start_value: start value
      next_start_date_field: field to fetch the next start date
- name: Exabeam Case
  endpoint:
    path: /api/exabeam/cases
    method: GET
    data_selector: cases
- name: logs
  endpoint:
    method: GET
- name: logs
  endpoint:
    method: GET
    params:
      page_size_field: page_size_field
      page_size_value: page_size_value
      page_number_field: page_number_field
      start_date_field: start_date_field
      start_date_value: start_date_value
      end_date_field: end_date_field
      end_date_value: end_date_value
- name: generic_resource
  endpoint:
    path: /generic/endpoint
    method: GET
- name: logs
  endpoint:
    method: GET
- name: response_data
  endpoint:
    data_selector: data
- name: logs
  endpoint:
    method: GET
- name: logs
  endpoint:
    method: GET
- name: logs
  endpoint:
    method: GET
- name: logs
  endpoint:
    method: GET
- name: logs
  endpoint:
    path: /path/to/logs
    method: GET
    data_selector: response data field
    params:
      start_date_field: start date field
      start_date_value: start date value
      end_date_field: end date field
      end_date_value: end date value
- name: alert_notifications
  endpoint:
    path: /IronApi/GetAlertNotifications
    method: POST
    data_selector: alert_notifications
    params:
      limit: '5'
- name: logs
  endpoint:
    method: GET
- name: Generic Beat
  endpoint:
    path: /configure-the-generic-beat
    method: GET
- name: gmail_message_tracking
  endpoint:
    path: /gmail/message/tracking
    method: GET
- name: Gmail Message Tracking
  endpoint:
    path: /services/data/vXX.X/sobjects/GmailMessageTracking
    method: GET
- name: gmail_message_tracking
  endpoint:
    path: /gmail/v1/users/me/messages
    method: GET
    data_selector: messages
    params: {}
- name: Open Collector Log Source
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollector
    method: POST
- name: log_source
  endpoint:
    path: /configure-the-irondefense-log-source-in-siem
    method: GET
- name: Syslog - Open Collector - Ironnet-IronDefense
  endpoint:
    path: /logs/ironnet/defense
    method: GET
    data_selector: records
    params: {}
- name: Syslog - Open Collector - Ironnet-IronDefense Heartbeat
  endpoint:
    path: /logs/ironnet/defense/heartbeat
    method: GET
    data_selector: records
    params: {}
- name: gmail_message_tracking
  endpoint:
    path: /configure-gmail-message-tracking
    method: GET
- name: google_workspace_log_source
  endpoint:
    path: /configure-the-google-workspace-beat-log-source-in-
    method: GET
- name: google_workspace_log_source
  endpoint:
    path: /configure-the-google-workspace-beat-log-source-in-
    method: GET
- name: Open Collector Log Source
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollectorLogSource
    method: POST
    data_selector: records
    params: {}
- name: Google Workspace Log Messages
  endpoint:
    path: /services/data/vXX.X/sobjects/GoogleWorkspaceLogMessages
    method: POST
    data_selector: records
    params: {}
- name: Google Workspace Beat Heartbeat Messages
  endpoint:
    path: /services/data/vXX.X/sobjects/GoogleWorkspaceBeatHeartbeatMessages
    method: POST
    data_selector: records
    params: {}
- name: gmail_message_tracking
  endpoint:
    path: /api/gmail/message/tracking
    method: GET
    data_selector: messages
    params: {}
- name: Gmail Message Tracking
  endpoint:
    path: /gmail/message/tracking
    method: GET
- name: Google Workspace
  endpoint:
    path: /google/workspace
    method: GET
- name: kafka_system_log
  endpoint:
    path: /configure-the-kafka-system-log-beat-log-source-in-siem
    method: GET
- name: sentinelone_log
  endpoint:
    path: /configure-the-sentinelone-log-source-in-siem
    method: GET
- name: Google Workspace
  endpoint:
    path: /configure-google-workspace
    method: GET
- name: google_workspace
  endpoint:
    path: /services/data/vXX.X/sobjects/GoogleWorkspace
    method: GET
    data_selector: records
- name: Kafka System Log
  endpoint:
    path: /configure-the-kafka-system-log-beat-log-source-in-SIEM
    method: GET
- name: Open Collector
  endpoint:
    path: /LogSource
    method: GET
    data_selector: log_sources
    params: {}
- name: KafkaBeat Heartbeat
  endpoint:
    path: /KafkaBeat
    method: GET
    data_selector: heartbeat_logs
    params: {}
- name: Google Workspace Beat Log Source
  endpoint:
    path: /configure-the-google-workspace-beat-log-source-in-
    method: GET
- name: sentinelone_log_source
  endpoint:
    path: /configure/sentinelone/log/source
    method: GET
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - SentinelOne
  endpoint:
    path: /services/data/vXX.X/sobjects/SyslogCollector
    method: POST
    data_selector: records
    params: {}
- name: gmail_message_tracking
  endpoint:
    path: /gmail/message/tracking
    method: GET
    data_selector: records
- name: workspace
  endpoint:
    path: /configure-google-workspace
    method: GET
- name: kafka_system_log
  endpoint:
    path: /configure-the-kafka-system-log-beat-log-source-in-siem
    method: GET
- name: sentinelone_log
  endpoint:
    path: /configure-the-sentinelone-log-source-in-siem
    method: GET
- name: directory_audits
  endpoint:
    path: /v1.0/auditLogs/directoryAudits
    method: GET
- name: sign_ins
  endpoint:
    path: /v1.0/auditLogs/signIns
    method: GET
- name: security_alerts_v1
  endpoint:
    path: /v1.0/security/alerts
    method: GET
- name: security_alerts_v2
  endpoint:
    path: /v1.0/security/alerts_v2
    method: GET
- name: Kafka System Log
  endpoint:
    path: /configure-the-kafka-system-log-beat-log-source-in-siem
    method: GET
- name: SentinelOne Log
  endpoint:
    path: /configure-the-sentinelone-log-source-in-siem
    method: GET
- name: directory_audits
  endpoint:
    path: graph.microsoft.com/v1.0/auditLogs/directoryAudits
    method: GET
- name: sign_ins
  endpoint:
    path: graph.microsoft.com/v1.0/auditLogs/signIns
    method: GET
- name: security_alerts
  endpoint:
    path: graph.microsoft.com/v1.0/security/alerts
    method: GET
- name: security_alerts_v2
  endpoint:
    path: graph.microsoft.com/v1.0/security/alerts_v2
    method: GET
- name: Kafka System Log
  endpoint:
    path: /configure-the-kafka-system-log-beat-log-source-in-siem
    method: GET
- name: Syslog - Open Collector - Msgraphbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Msgraphbeat
    method: GET
- name: Syslog - Open Collector - Msgraphbeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/MsgraphbeatHeartbeat
    method: GET
- name: siem_logs
  endpoint:
    path: /api/siemlogs
    method: GET
    data_selector: logs
    params: {}
- name: sentinelone_log_source
  endpoint:
    path: /configure/sentinelone-log-source
    method: GET
- name: Syslog - Open Collector - SentinelOne
  endpoint:
    path: /services/syslog/sentinelone
    method: POST
    data_selector: logs
    params: {}
- name: Mimecast SIEM Beat Log Source
  endpoint:
    path: /configure-the-mimecast-siem-beat-log-source-in-the
    method: GET
- name: kafka_system_log
  endpoint:
    path: /kafka/system/log
    method: GET
- name: sentinelone_log
  endpoint:
    path: /sentinelone/log
    method: GET
- name: O365 Beat
  endpoint:
    path: /configure-the-o365-beat
    method: GET
- name: microsoft_graph_api
  endpoint:
    path: /microsoft-graph-api
    method: GET
- name: directory_audits
  endpoint:
    path: /auditLogs/directoryAudits
    method: GET
- name: sign_ins
  endpoint:
    path: /auditLogs/signIns
    method: GET
- name: security_alerts_v1
  endpoint:
    path: /security/alerts
    method: GET
- name: security_alerts_v2
  endpoint:
    path: /security/alerts_v2
    method: GET
- name: auditLogs_directoryAudits
  endpoint:
    path: graph.microsoft.com/v1.0/auditLogs/directoryAudits
    method: GET
- name: auditLogs_signIns
  endpoint:
    path: graph.microsoft.com/v1.0/auditLogs/signIns
    method: GET
- name: security_alerts
  endpoint:
    path: graph.microsoft.com/v1.0/security/alerts
    method: GET
- name: security_alerts_v2
  endpoint:
    path: graph.microsoft.com/v1.0/security/alerts_v2
    method: GET
- name: microsoft_graph_api
  endpoint:
    path: /microsoft-graph-api-endpoint
    method: GET
- name: Msgraphbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Msgraphbeat
    method: GET
- name: Msgraphbeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/MsgraphbeatHeartbeat
    method: GET
- name: Mimecast SIEM
  endpoint:
    path: /create-a-mimecast-api-application-and-enable-siem-
    method: GET
- name: Create a Mimecast API Application
  endpoint:
    path: /create-a-mimecast-api-application-and-enable-siem-
    method: GET
- name: okta_system_log
  endpoint:
    path: /api/v1/logs
    method: GET
    data_selector: logs
- name: Mimecast SIEM Logs
  endpoint:
    path: /api/siem/logs
    method: GET
- name: Syslog - Open Collector - Okta System Log
  endpoint:
    path: /Syslog/OpenCollector/OktaSystemLog
    method: GET
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - OktaSystemLogBeat Heartbeat
  endpoint:
    path: /Syslog/OpenCollector/OktaSystemLogBeatHeartbeat
    method: GET
    data_selector: logs
    params: {}
- name: Mimecast SIEM Beat Log Source
  endpoint:
    path: /configure-the-mimecast-siem-beat-log-source-in-the
    method: GET
- name: Prisma Cloud
  endpoint:
    path: /configure-prisma-cloud
    method: GET
- name: Prisma Cloud
  endpoint:
    path: /configure-prisma-cloud
    method: GET
- name: alert_logs
  endpoint:
    path: /alert/
    method: GET
- name: audit_logs
  endpoint:
    path: /audit/redlock/
    method: GET
- name: O365 Beat Log Source
  endpoint:
    path: /configure-the-o365-beat-log-source-in-the-siem
    method: GET
- name: prisma_cloud_log_source
  endpoint:
    path: /api/v1/logs
    method: GET
- name: O365 Beat Log Source
  endpoint:
    path: /configure-the-o365-beat-log-source-in-the-siem
    method: GET
- name: prisma_cloud_log_source
  endpoint:
    path: /configure-prisma-cloud-log-source-in-siem
    method: GET
- name: O365 Beat
  endpoint:
    path: /configure-the-o365-beat
    method: GET
- name: Syslog - Open Collector - PrismaCloudBeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-PrismaCloudBeat
    method: GET
    data_selector: records
    params: {}
- name: Syslog - Open Collector - PrismaCloudBeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-PrismaCloudBeat-Heartbeat
    method: GET
    data_selector: records
    params: {}
- name: proofpoint_log
  endpoint:
    path: /api/proofpoint/logs
    method: GET
- name: Okta System Log
  endpoint:
    path: /api/v1/logs
    method: GET
- name: proofpoint_tap_logs
  endpoint:
    path: /api/tap/logs
    method: GET
    data_selector: logs
- name: proofpoint_log
  endpoint:
    path: /services/proofpoint/logs
    method: GET
- name: Okta System Log
  endpoint:
    path: /api/v1/logs
    method: GET
- name: Syslog - Open Collector
  endpoint:
    path: /log-sources
    method: POST
    data_selector: log_sources
    params: {}
- name: Syslog - Open Collector - Proofpoint
  endpoint:
    path: /log-sources/proofpoint
    method: POST
    data_selector: log_sources
    params: {}
- name: Syslog - Open Collector - ProofpointBeat Heartbeat
  endpoint:
    path: /log-sources/proofpointbeat
    method: POST
    data_selector: log_sources
    params: {}
- name: System Log
  endpoint:
    path: /api/v1/logs
    method: GET
    data_selector: logs
- name: Prisma Cloud
  endpoint:
    path: /configure-prisma-cloud
    method: GET
- name: alert_logs
  endpoint:
    path: /alert/
    method: GET
- name: audit_logs
  endpoint:
    path: /audit/redlock/
    method: GET
- name: Prisma Cloud
  endpoint:
    path: /configure-prisma-cloud
    method: GET
- name: topic
  endpoint:
    path: /pubsub/v1/projects/{projectId}/topics/{topicId}
    method: POST
    data_selector: topic
    params: {}
- name: subscription
  endpoint:
    path: /pubsub/v1/projects/{projectId}/subscriptions/{subscriptionId}
    method: POST
    data_selector: subscription
    params: {}
- name: Log Source
  endpoint:
    path: /configure-the-prisma-cloud-log-source-in-siem
    method: GET
- name: Syslog - Open Collector - PrismaCloudBeat
  endpoint:
    path: /log-sources/prismacloudbeat
    method: GET
- name: Syslog - Open Collector - PrismaCloudBeat Heartbeat
  endpoint:
    path: /log-sources/prismacloudbeat/heartbeat
    method: GET
- name: proofpoint
  endpoint:
    path: /initialize-the-proofpoint-beat
    method: GET
- name: Open Collector Log Source
  endpoint:
    path: /log-sources
    method: POST
    data_selector: log_sources
    params: {}
- name: Qualys Portal
  endpoint:
    path: /docs/configure-qualys-portal
    method: GET
- name: proofpoint_log
  endpoint:
    path: /proofpoint/log
    method: GET
    data_selector: records
    params: {}
- name: Qualys Portal
  endpoint:
    path: /docs/configure-qualys-portal
    method: GET
- name: proofpoint_tap_logs
  endpoint:
    path: /proofpoint/tap/logs
    method: GET
- name: qualys_log
  endpoint:
    path: /api/qualys/v1/logs
    method: GET
    data_selector: records
- name: proofpoint_log_source
  endpoint:
    path: /configure-proofpoint-log-source-in-siem
    method: GET
- name: qualys_fim
  endpoint:
    path: /qualys_fim
    method: GET
    data_selector: data
    params: {}
- name: Syslog - Open Collector - Proofpoint
  endpoint:
    path: /syslog/open/collector/proofpoint
    method: GET
- name: Syslog - Open Collector - ProofpointBeat Heartbeat
  endpoint:
    path: /syslog/open/collector/proofpointbeat
    method: GET
- name: qualys_log_source
  endpoint:
    path: /api/qualys/log/source
    method: GET
- name: proofpoint_log
  endpoint:
    path: /api/v1/proofpoint/log
    method: GET
- name: Open Collector - Qualys
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollectorQualys
    method: GET
    data_selector: records
    params: {}
- name: Open Collector - QualysBeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollectorQualysBeatHeartbeat
    method: GET
    data_selector: records
    params: {}
- name: logs_router
  endpoint:
    path: /v1/projects/{project_id}/sinks
    method: GET
    data_selector: sinks
- name: default_config_values
  endpoint:
    params:
      heartbeatinterval: 60s
      heartbeatdisabled: false
      period: 1000s
      throttlingIntervalSecs: 60
      customPullDate: ''
      limit: 1000
      ingestToday: false
      numbackdaysData: 0
- name: pubsub_beat_log_source
  endpoint:
    path: /configure-the-pubsub-beat-log-source-in-the-siem
    method: GET
- name: Salesforce Beat Log Source
  endpoint:
    path: /configure-the-salesforce-beat-log-source-in-siem
    method: GET
- name: Syslog - Open Collector - SalesforceBeat
  endpoint:
    path: /services/salesforce/beat/log
    method: POST
- name: Syslog - Open Collector - SalesforceBeat Heartbeat
  endpoint:
    path: /services/salesforce/beat/heartbeat
    method: POST
- name: Qualys Portal
  endpoint:
    path: /configure-qualys-portal
    method: GET
- name: sentinelone_log
  endpoint:
    path: /sentinelone/logs
    method: GET
    data_selector: records
- name: Qualys Portal
  endpoint:
    path: /configure-qualys-portal
    method: GET
- name: qualys_log
  endpoint:
    path: /qualys/api/endpoint
    method: GET
- name: activities
  endpoint:
    path: /activities
    method: GET
- name: cloud_detection_alerts
  endpoint:
    path: /cloud-detection/alerts
    method: GET
- name: device_control_events
  endpoint:
    path: /device-control/events
    method: GET
- name: exclusions
  endpoint:
    path: /exclusions
    method: GET
- name: threats
  endpoint:
    path: /threats
    method: GET
- name: qualys_log
  endpoint:
    path: /configure/qualys-log-source
    method: POST
    data_selector: data
    params: {}
- name: sentinelone_log_source
  endpoint:
    path: /configure-the-sentinelone-log-source-in-siem
    method: GET
- name: Syslog - Open Collector - Qualys
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-Qualys
    method: POST
    data_selector: records
- name: Syslog - Open Collector - QualysBeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-QualysBeat-Heartbeat
    method: POST
    data_selector: records
- name: Open Collector - SentinelOne API - Activities
  endpoint:
    path: /Syslog/OpenCollector/SentinelOneAPI/Activities
    method: GET
- name: Open Collector - SentinelOne API - Events
  endpoint:
    path: /Syslog/OpenCollector/SentinelOneAPI/Events
    method: GET
- name: Open Collector - SentinelOne API - Exclusions
  endpoint:
    path: /Syslog/OpenCollector/SentinelOneAPI/Exclusions
    method: GET
- name: Open Collector - SentinelOne API - Alerts
  endpoint:
    path: /Syslog/OpenCollector/SentinelOneAPI/Alerts
    method: GET
- name: Open Collector - SentinelOne API - Threats
  endpoint:
    path: /Syslog/OpenCollector/SentinelOneAPI/Threats
    method: GET
- name: Open Collector - SentinelOne API
  endpoint:
    path: /Syslog/OpenCollector/SentinelOneAPI
    method: GET
- name: salesforce_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SalesforceData
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: endpoint
  endpoint:
    path: /v1/endpoint
    method: GET
    data_selector: data
    params: {}
- name: threats
  endpoint:
    path: /v1/threats
    method: GET
    data_selector: data
    params: {}
- name: default_config_values
  endpoint:
    path: /services/data/vXX.X/sobjects/DefaultConfigValues
    method: GET
    data_selector: records
    params: {}
- name: Salesforce Beat Log Source
  endpoint:
    path: /configure-the-salesforce-beat-log-source-in-siem
    method: GET
- name: Open Collector
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollector
    method: GET
    data_selector: records
    params: {}
- name: Open Collector - SalesforceBeat
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollectorSalesforceBeat
    method: GET
    data_selector: records
- name: Open Collector - SalesforceBeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollectorSalesforceBeatHeartbeat
    method: GET
    data_selector: records
- name: sentinelone_log_source
  endpoint:
    path: /configure/sentinelone/logsource
    method: GET
- name: example_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/ExampleResource
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: default_config
  endpoint:
    path: /default/config
    method: GET
    data_selector: records
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
- name: cloud_detection_alerts
  endpoint:
    path: /cloud-detection/alerts
    method: GET
- name: device_control_events
  endpoint:
    path: /device-control/events
    method: GET
- name: exclusions
  endpoint:
    path: /exclusions
    method: GET
- name: threats
  endpoint:
    path: /threats
    method: GET
- name: SentinelOne Log Source
  endpoint:
    path: /configure-the-sentinelone-log-source-in-siem
    method: GET
- name: Syslog - Open Collector - Symantecwssbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-Symantecwssbeat
    method: GET
    data_selector: records
    params: {}
- name: Syslog - Open Collector - Symantecwssbeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/Syslog-Open-Collector-Symantecwssbeat-Heartbeat
    method: GET
    data_selector: records
    params: {}
- name: Syslog - Open Collector - SentinelOne API - Activities
  endpoint:
    path: /log_sources/activities
    method: POST
- name: Syslog - Open Collector - SentinelOne API - Events
  endpoint:
    path: /log_sources/events
    method: POST
- name: Syslog - Open Collector - SentinelOne API - Exclusions
  endpoint:
    path: /log_sources/exclusions
    method: POST
- name: Syslog - Open Collector - SentinelOne API - Alerts
  endpoint:
    path: /log_sources/alerts
    method: POST
- name: Syslog - Open Collector - SentinelOne API - Threats
  endpoint:
    path: /log_sources/threats
    method: POST
- name: Syslog - Open Collector - SentinelOne API
  endpoint:
    path: /log_sources
    method: POST
- name: OneLogin_Webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
    params: {}
- name: Zoom_Webhook
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: payload
    params: {}
- name: Syslog - Open Collector - Webhook
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Syslog - Open Collector - Webhook OneLogin
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Syslog - Open Collector - Webhook Zoom
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Syslog - Open Collector - WebhookBeat Heartbeat
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Open Collector Log Source
  endpoint:
    path: /services/data/vXX.X/sobjects/OpenCollectorLogSource
    method: GET
    data_selector: records
- name: Sophos Central Beat
  endpoint:
    path: /services/data/vXX.X/sobjects/SophosCentralBeat
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Syslog - Open Collector - Symantecwssbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/SyslogOpenCollectorSymantecwssbeat
    method: GET
    data_selector: records
    params: {}
- name: Syslog - Open Collector - Symantecwssbeat Heartbeat
  endpoint:
    path: /services/data/vXX.X/sobjects/SyslogOpenCollectorSymantecwssbeatHeartbeat
    method: GET
    data_selector: records
    params: {}
- name: UserProfile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: onelogin_webhook
  endpoint:
    path: /api/onelogin/webhook
    method: POST
    data_selector: logs
    params: {}
- name: zoom_webhook
  endpoint:
    path: /api/zoom/webhook
    method: POST
    data_selector: events
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Syslog - Open Collector - Webhook
  endpoint:
    path: /path/to/webhook
    method: POST
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - Webhook OneLogin
  endpoint:
    path: /path/to/onelogin
    method: POST
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - Webhook Zoom
  endpoint:
    path: /path/to/zoom
    method: POST
    data_selector: logs
    params: {}
- name: Syslog - Open Collector - WebhookBeat Heartbeat
  endpoint:
    path: /path/to/heartbeat
    method: POST
    data_selector: logs
    params: {}
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: cases
  endpoint:
    path: /api/v1/cases
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: TopX Widgets
  endpoint:
    path: /topx/widgets
    method: GET
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: person_record
  endpoint:
    path: /api/v1/persons
    method: GET
    data_selector: records
    params: {}
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
- name: audit_logs
  endpoint:
    path: /services/logs/audit
    method: GET
    data_selector: records
- name: event_logs
  endpoint:
    path: /services/logs/event
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: upgrade_components
  endpoint:
    path: /community.logrhythm.com/upgrade_components
    method: GET
- name: install_wizard
  endpoint:
    path: /community.logrhythm.com/install_wizard
    method: GET
- name: TopX
  endpoint:
    path: /services/data/vXX.X/sobjects/TopX
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: User Profile
  endpoint:
    path: /lrsiem/docs/create-a-new-user-profile
    method: GET
    data_selector: records
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
    params: {}
- name: Cloudflare logs
  endpoint:
    path: /cloudflare/logs
    method: GET
    data_selector: records
- name: Syslog sources
  endpoint:
    path: /syslog/sources
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: person
  endpoint:
    path: /api/v1/person
    method: GET
    data_selector: records
    params: {}
- name: licensing_details
  endpoint:
    path: /licensing
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: records
- name: Open Collector
  endpoint:
    path: /api/open-collector
    method: GET
    data_selector: records
- name: Beats Management
  endpoint:
    path: /api/beats
    method: GET
    data_selector: records
- name: User Profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: records
    params: {}
- name: Job Manager
  endpoint:
    path: /job/manager
    method: GET
    data_selector: records
    params: {}
- name: cases
  endpoint:
    path: /api/v1/cases
    method: GET
    data_selector: records
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: LogRhythmEMDB
  endpoint:
    path: /LogRhythmEMDB
    method: GET
    data_selector: data
    params: {}
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
    params: {}
- name: session
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: records
    params: {}
- name: Knowledge Base
  endpoint:
    path: /knowledge_base
    method: POST
    data_selector: knowledgeBase
    params: {}
- name: Upgrade Components
  endpoint:
    path: /community/logrhythm/downloads
    method: GET
    data_selector: downloads
    params: {}
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
    params: {}
- name: person
  endpoint:
    path: /api/person
    method: GET
    data_selector: records
    params: {}
- name: log_source_management
  endpoint:
    path: /log-source-management
    method: POST
    data_selector: sources
    params: {}
- name: platform_enhancements
  endpoint:
    path: /platform/enhancements
    method: GET
    data_selector: enhancements
    params: {}
- name: log_source_enhancements
  endpoint:
    path: /log-source/enhancements
    method: GET
    data_selector: enhancements
    params: {}
- name: known_issues
  endpoint:
    path: /known-issues
    method: GET
    data_selector: issues
    params: {}
- name: UserProfile
  endpoint:
    path: /api/userprofile
    method: GET
    data_selector: data
    params: {}
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
    params: {}
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
- name: action
  endpoint:
    path: /api/action
    method: GET
    data_selector: records
- name: amount
  endpoint:
    path: /api/amount
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Open Collector
  endpoint:
    path: /api/open-collector
    method: GET
    data_selector: data
- name: Beats Management
  endpoint:
    path: /api/beats
    method: GET
    data_selector: data
- name: Log Source
  endpoint:
    path: /api/log-sources
    method: POST
    data_selector: data
- name: AI Engine Log Files
  endpoint:
    path: /services/data/vXX.X/sobjects/AI_Engine_Log_Files
    method: GET
    data_selector: records
- name: AI Engine Diagnostic Alarms
  endpoint:
    path: /services/data/vXX.X/sobjects/AI_Engine_Diagnostic_Alarms
    method: GET
    data_selector: records
- name: AI Engine Performance Counters
  endpoint:
    path: /services/data/vXX.X/sobjects/AI_Engine_Performance_Counters
    method: GET
    data_selector: records
- name: Platform Manager
  endpoint:
    path: /platform-manager
    method: GET
- name: custom_reports
  endpoint:
    path: /services/data/vXX.X/customReports
    method: GET
    data_selector: records
    params: {}
- name: audit_logs
  endpoint:
    path: /services/audit/logs
    method: GET
    data_selector: records
    params: {}
- name: person_record
  endpoint:
    path: /api/person
    method: POST
    data_selector: records
    params: {}
- name: alarms
  endpoint:
    path: /api/alarms
    method: GET
    data_selector: data
    params: {}
- name: reports
  endpoint:
    path: /api/reports
    method: GET
    data_selector: data
    params: {}
- name: threat_intelligence
  endpoint:
    path: /services/data/v7.2/threat_intelligence
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: logs
  endpoint:
    path: /services/data/v7.2/logs
    method: GET
    data_selector: records
    params: {}
- name: Drill Down
  endpoint:
    path: /drill-down
    method: GET
    data_selector: results
- name: AI Engine Log Files
  endpoint:
    path: /logs
    method: GET
    data_selector: log_files
    params: {}
- name: AI Engine System Rules
  endpoint:
    path: /system_rules
    method: GET
    data_selector: rules
    params: {}
- name: AI Engine Diagnostic Alarms
  endpoint:
    path: /diagnostic_alarms
    method: GET
    data_selector: alarms
    params: {}
- name: AI Engine Communication Manager Performance Counters
  endpoint:
    path: /performance_counters
    method: GET
    data_selector: performance_counters
    params: {}
- name: AI Engine Components
  endpoint:
    path: /components
    method: GET
    data_selector: components
    params: {}
- name: user_profile
  endpoint:
    path: /api/user/profile
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: Version History
  endpoint:
    path: /api/version/history
    method: GET
    data_selector: records
    params: {}
- name: person_record
  endpoint:
    path: /api/person
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /api/user/profile
    method: GET
    data_selector: data
    params: {}
- name: person_record
  endpoint:
    path: /api/v1/person
    method: POST
    data_selector: data
- name: permissions
  endpoint:
    path: /api/v1/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: endpoint_monitoring
  endpoint:
    path: /lrsiem/docs/endpoint-monitoring
    method: GET
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
    params: {}
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
    params: {}
- name: cases
  endpoint:
    path: /api/v1/cases
    method: GET
    data_selector: records
    params: {}
- name: topx_results
  endpoint:
    path: /lrsiem/docs/analyze-topx-results
    method: GET
    data_selector: records
    params: {}
- name: topx_results
  endpoint:
    path: /services/data/v1/topx/results
    method: GET
    data_selector: results
    params: {}
- name: alarm_rules
  endpoint:
    path: /api/alarm_rules
    method: GET
    data_selector: rules
    params: {}
- name: text_file_notifications
  endpoint:
    path: /api/text_file_notifications
    method: GET
    data_selector: notifications
    params: {}
- name: person_record
  endpoint:
    path: /lrsiem/docs/add-or-modify-a-person-record
    method: POST
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
- name: action
  endpoint:
    path: /api/v7.2/action
    method: GET
    data_selector: records
- name: log
  endpoint:
    path: /api/v7.2/log
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/user/profiles
    method: GET
    data_selector: profiles
- name: notification_policy
  endpoint:
    path: /api/notification_policies
    method: POST
    data_selector: policy
    params: {}
- name: endpoint_monitoring
  endpoint:
    path: /api/v1/endpoint_monitoring
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: person_record
  endpoint:
    path: /api/v1/persons
    method: GET
    data_selector: records
    params: {}
- name: alarm_rules
  endpoint:
    path: /api/alarm_rules
    method: GET
    data_selector: records
- name: text_file_notifications
  endpoint:
    path: /api/text_file_notifications
    method: GET
    data_selector: records
- name: Alarm Notification Policies
  endpoint:
    path: /alarm-notification-policies
    method: GET
- name: Text File Policy
  endpoint:
    path: /notifications/text-file-policy
    method: POST
    data_selector: policy
    params: {}
- name: persons
  endpoint:
    path: /api/persons
    method: GET
    data_selector: records
    params: {}
- name: action
  endpoint:
    path: /api/v1/action
    method: GET
    data_selector: records
    params: {}
- name: amount
  endpoint:
    path: /api/v1/amount
    method: GET
    data_selector: records
    params: {}
- name: TopX Results
  endpoint:
    path: /lrsiem/docs/analyze-topx-results
    method: GET
    data_selector: results
- name: user_profile
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: profiles
    params: {}
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: cases
  endpoint:
    path: /api/v1/cases
    method: GET
    data_selector: records
- name: threat_intelligence_service
  endpoint:
    path: /services/data/v7.2/threats
    method: GET
    data_selector: records
    params: {}
- name: log_data
  endpoint:
    path: /services/data/v7.2/logs
    method: GET
    data_selector: records
    params: {}
- name: User Profile
  endpoint:
    path: /user/profile
    method: GET
    data_selector: records
    params: {}
- name: active_archive
  endpoint:
    path: /active/archive
    method: GET
    data_selector: logs
    params: {}
- name: inactive_archive
  endpoint:
    path: /inactive/archive
    method: GET
    data_selector: logs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
- name: TopX Widgets
  endpoint:
    path: /lrsiem/docs/topx-widgets
    method: GET
    data_selector: records
- name: LogRhythm_Alarms
  endpoint:
    path: /path/to/LogRhythm_Alarms
    method: GET
    data_selector: records
- name: LogRhythm_CMDB
  endpoint:
    path: /path/to/LogRhythm_CMDB
    method: GET
    data_selector: records
- name: LogRhythm_Events
  endpoint:
    path: /path/to/LogRhythm_Events
    method: GET
    data_selector: records
- name: LogRhythm_LogMart
  endpoint:
    path: /path/to/LogRhythm_LogMart
    method: GET
    data_selector: records
- name: LogRhythmEMDB
  endpoint:
    path: /path/to/LogRhythmEMDB
    method: GET
    data_selector: records
- name: alarms
  endpoint:
    path: /services/data/v1.0/alarms
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /services/data/v1.0/reports
    method: GET
    data_selector: records
    params: {}
- name: action
  endpoint:
    path: /api/v7.2/action
    method: GET
    data_selector: records
    params: {}
- name: alarms
  endpoint:
    path: /services/data/vXX.X/sobjects/Alarm
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /services/data/vXX.X/sobjects/Report
    method: GET
    data_selector: records
    params: {}
- name: case_management
  endpoint:
    path: /services/data/vXX.X/sobjects/Case
    method: GET
    data_selector: records
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: Object Access Auditing
  endpoint:
    path: /configure-object-access-auditing-for-logrhythm-archive-files
    method: GET
- name: person_record
  endpoint:
    path: /services/data/vXX.X/sobjects/PersonRecord
    method: GET
    data_selector: records
    params: {}
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: cases
  endpoint:
    path: /api/v1/cases
    method: GET
    data_selector: records
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: alarms
  endpoint:
    path: /api/alarms
    method: GET
    data_selector: records
    params: {}
- name: threat_intelligence_service
  endpoint:
    path: /api/v7.2/threat-intelligence
    method: GET
    data_selector: data
    params: {}
- name: log_rhythm_echo
  endpoint:
    path: /api/v7.2/echo
    method: GET
    data_selector: data
    params: {}
- name: topx_results
  endpoint:
    path: /lrsiem/docs/analyze-topx-results
    method: GET
    data_selector: records
    params: {}
- name: action
  endpoint:
    path: /api/v1/action
    method: GET
    data_selector: records
- name: amount
  endpoint:
    path: /api/v1/amount
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: threat_intelligence
  endpoint:
    path: /api/threat-intelligence
    method: GET
    data_selector: records
- name: Indexer Services
  endpoint:
    path: /services/indexer/services
    method: GET
    data_selector: services
    params: {}
- name: Data Indexer File Locations
  endpoint:
    path: /services/indexer/file_locations
    method: GET
    data_selector: file_locations
    params: {}
- name: GoMaintain Settings
  endpoint:
    path: /services/indexer/gomaintain
    method: GET
    data_selector: gomaintain
    params: {}
- name: SecondLook Restore
  endpoint:
    path: /create-a-secondlook-restore
    method: POST
- name: user_profile
  endpoint:
    path: /api/user/profiles
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: action
  endpoint:
    path: /lrsiem/docs/action-7-2
    method: GET
    data_selector: records
    params: {}
- name: audit_logs
  endpoint:
    path: /api/v1/audit_logs
    method: GET
    data_selector: records
    params:
      incremental: timestamp
- name: user_profile
  endpoint:
    path: /api/user_profiles
    method: GET
    data_selector: profiles
- name: action
  endpoint:
    path: /api/v1/action
    method: GET
    data_selector: records
- name: log
  endpoint:
    path: /api/v1/log
    method: GET
    data_selector: records
- name: person
  endpoint:
    path: /api/v1/person
    method: GET
    data_selector: records
- name: NGPCluster
  endpoint:
    path: /LogRhythmEMDB/dbo/NGPCluster
    method: SELECT
    data_selector: '*'
    params: {}
- name: user_profile
  endpoint:
    path: /services/data/vXX.X/sobjects/UserProfile
    method: GET
    data_selector: records
    params: {}
- name: topx_results
  endpoint:
    path: /api/topx/results
    method: GET
    data_selector: results
    params: {}
- name: Indexer Services
  endpoint:
    path: /services/data/indexer/services
    method: GET
    data_selector: services
- name: GoMaintain
  endpoint:
    path: /services/data/indexer/gomaintain
    method: GET
    data_selector: gomaintain
- name: user_profile
  endpoint:
    path: /api/user_profile
    method: GET
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: user_profile
  endpoint:
    path: /api/user_profile
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /api/v1/user_profiles
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /api/user_profiles
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
- name: alarm
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
- name: scmedsvr.ini
  endpoint:
    path: C:\Program Files\LogRhythm\LogRhythm Mediator Server\config\scmedsvr.ini
    method: UPDATE
    data_selector: '[OPTIONAL]'
    params:
      DP2DXLogCompression: 'True'
      SecondaryDXClusterID: '6'
- name: person_record
  endpoint:
    path: /api/v1/person
    method: GET
    data_selector: records
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: records
    params: {}
- name: MaintenanceInterval
  endpoint:
    params:
      interval: 60
- name: RulePerformanceStatsSubmitInterval
  endpoint:
    params:
      interval: 24
- name: LogMartCommitInterval
  endpoint:
    params:
      interval: 60
- name: LogMartCommitTimeout
  endpoint:
    params:
      timeout: 40
- name: StatkeeperCommitIntervalHeartbeatInfo
  endpoint:
    params:
      interval: 10
- name: StatKeeperCommitIntervalLogInfo
  endpoint:
    params:
      interval: 60
- name: StatKeeperCommitTimeout
  endpoint:
    params:
      timeout: 30
- name: StatKeeperEnabled
  endpoint:
    params:
      enabled: Enabled
- name: alarms
  endpoint:
    path: /api/v1/alarms
    method: GET
    data_selector: data
    params: {}
- name: reports
  endpoint:
    path: /api/v1/reports
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /api/user_profiles
    method: GET
    data_selector: records
notes:
- Open Collector Metrics will no longer be updated after the 2025.10 release.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Sophos retired the token authentication method, Sophos Central Beat implementation
  was updated to require API authentication (Client ID and Client Secret).
- Sophos retired the token authentication method, requiring API authentication (Client
  ID and Client Secret).
- The Open Collector requires a number of ports (both inbound and outbound) to be
  opened and accessible through your firewall in order to function correctly.
- It is recommended to deploy the Open Collector VM using Powershell.
- RedHat Enterprise Linux 9.1 is only officially supported using Mirantis Container
  Runtime or Mirantis Kubernetes Engine (Formerly Docker Enterprise Edition).
- For an expanded list of operating systems that may only have limited support (LS)
  with the Open Collector, refer to the LogRhythm Component Compatibility section
  of the Review the Upgrade Requirements and Considerations topic in the LogRhythm
  Installation and Upgrade guide.
- Docker Community Edition is installed automatically with the Open Collector. This
  requires compatible hardware or VM installation. Your VM instance may require virtualization
  to be enabled to allow Docker to run.
- Adding multiple beats or having a high MPS may require additional resources.
- Use of the Linux System Monitor agent is not officially supported at this time.
- RHEL versions 9.1 and later are compatible with the Open Collector.
- Mirantis Kubernetes Engine (Formerly Docker Enterprise Edition) Basic, version 19+
  is the officially supported version.
- RedHat 9 is only officially supported using Mirantis Container Runtime or Mirantis
  Kubernetes Engine (Formerly Docker Enterprise Edition).
- Docker CE is not supported on RedHat 8 and will not be available for installation
  through the ./lrctl init command.
- You must register your Red Hat instance to enable yum repos. You cannot install
  the Open Collector if you do not register your RedHat 9 instance.
- Virtual Machine resources should be adjusted based on the size of your XM.
- Requires setup of connected app in api
- If you plan to use a proxy server, additional configuration is necessary.
- After updating the SIEM to 7.14 (or later) and the Open Collector to the latest
  version, the Long-Running LRCTL service must be configured and initialized.
- Some objects like Contact may return nulls in deeply nested fields
- Legacy customers not requiring custom OC beats should proceed to Configure Open
  Collector Connection to the SIEM (WebUI)
- TLS is unsupported by Linux at this time.
- Paid license will be required for Mirantis product installation.
- Make sure to remove the installation media. The method for removal is hypervisor-specific.
- After pasting the API key into the Open Collector command line, it will be printed
  several times.
- After logs are flowing from the Beat to Open Collector to System Monitor Agent,
  the Pending Log Source may take up to 15 minutes to appear in the Client Console.
- If Metrics shows all 0 graphs, check the Beat and Open Collector status.
- LogRhythm does not provide operating system level support for RHEL, if you are running
  RHEL all support for that operating system is covered under your support agreement
  with RHEL.
- Linux System Monitors do not support secure syslogs as of the current release.
- Installing the SysMon agent on the same machine as the Open Collector is not supported.
- 'Ensure the following prerequisites have been met before configuring Docker: http_proxy
  environment variable exported and sourced, https_proxy environment variable exported
  and sourced.'
- To solve proxy connection issues, check if your proxy actually supports HTTPS on
  that port.
- Adjust the max-size and max-file setting based on your organization's needs.
- After restarting the Docker, the new changes will not take affect for existing containers.
  New containers must be created for the new logging configuration to take affect.
- The cipher key must be 16, 32 or 64 characters long.
- LogRhythm encourages all customers to consider migrating off of RHEL/CentOS 7, which
  will be considered End Of Life by the Red Hat foundation on June 30, 2024.
- There is no supported online migration path from CentOS 7.x to Rocky 9.x so this
  will require your Open Collector to be rebuilt/reimaged and reinstalled.
- Each configurable service can be changed manually. After changing a configuration,
  restart the service for the changes to take effect.
- All commands and sub-commands have the --help flag that shows all flags, sub-commands,
  and aliases.
- Make sure to use the -V flag with the ./lrctl script while working with Open Collector,
  Metrics, and Beats.
- Once the certificate path has been successfully added, restart all services for
  the change to take effect.
- Once the certificate path has been successfully removed, restart all Open Collector,
  Metrics, and Beats services for the change to take effect.
- This optional functionality enables users to send docker logs to the console in
  the syslog format.
- When using this functionality, the only major change is that containers will not
  be able to write the logs to volume.
- Ensure TCP port 5044 is open between the Open Collector and System Monitor hosts.
- Some objects may return nulls in deeply nested fields
- When using this functionality, the only major change is that containers will not
  be able to write the logs to volume, though they can export logs as they were previously.
- An 'ocAdmin' account is created with Administrative access.
- It is a good practice to create at least one more user account, and assign it to
  the User role.
- For the first login, the Username is ocAdmin (case insensitive), and the Password
  is the one provided during the initialization of the OC Admin.
- Open Collectors are required for the user to be able to run temporary Tail to help
  mapping log source JSON data to LogRhythm SIEM's parsing tags and fields.
- A new re-scan of the Open Collector can be forced if deployment visibility is lost.
- Certain fields are marked as required outside of the Required group of collection
  parameters.
- OC Admin requires access to the SIEM for certain operations.
- The SIEM database must be updated with the latest stored procedures and views.
- This operation requires modifying an important OC Admin configuration file.
- Obtain a valid and non-corrupted shared fields mapping file.
- This file must contain a properly formatted JSON export of a fields mapping.
- Only .ezFieldsMapping files are accepted.
- Only one .ezFieldsMapping file is accepted.
- Only users with a privileged role can create/update/delete other users and roles.
- Ensure that the update was successful by reviewing the information in the Database
  Version Details screen.
- LogRhythm Support can only assist with basic installation and configuration of the
  Open Collector Pipeline and LRJQ utilities.
- For assistance with custom parsing, you need to work with Professional Services.
- Open Collectors are required for the user to be able to run temporary Tail and deploy
  the Pipeline for production.
- Pipeline requires setup of Open Collector hosts.
- Deployment steps may take up to 30 seconds depending on Open Collector host load.
- Uses OAuth2 with refresh token — requires setup of connected app in LogRhythm
- Some API responses may contain nested fields
- OC Admin requires access to the SIEM for certain operations, such as listing and
  managing the Open Collector and OC Admin related log sources.
- Use caution in this directory, as errors can cause OC Admin to stop functioning.
- If you have an existing winlogbeat.pipe file in your directory, the force flag is
  required to overwrite it.
- The S3 Beat supports log collection from multiple S3 buckets and AWS accounts.
- 'The S3 Beat offers two authentication methods: key-based and role-based.'
- S3beat collects logs for any file format but it supports decompression of .zip,
  .tar, and .gz file formats only.
- LogRhythm Customer Support cannot assist with configuring devices.
- For assistance, refer to the documentation provided by the company of the Beat you
  plan to use.
- User must enter security credentials if deployment is not done in AWS.
- User can configure multiple queuename and region combinations.
- Flatten an array for parsing using custom JQ logic.
- Log Source Virtualization Template included in the Knowledge Base
- Requires setup of Syslog Relay to correctly extract timestamps
- This topic is not relevant to your implementation if deploying the Beat on-premise.
- Please use any Centos Machine.
- Replace *account B* and *bucket X* with correct values.
- Access ID and Secret access ID for Account B are required.
- Assume Role cross-account access enable/disable flag.
- The maximum session duration for the Assume Role access is 1 hour.
- If deployment is done on-premise, security credentials are required.
- If deployment is done in AWS, security credentials are not required.
- Create an IAM role named CrossAccountSignin in Account A for Account B access.
- Use AmazonS3ReadOnlyAccess policy to allow read access to S3 buckets.
- Each SQS Queue must be in the same AWS Region as the S3 bucket on Account A.
- Each S3 bucket requires ReceiveMessage, DeleteMessage, and GetQueueUrl Actions in
  the SQS Queue.
- Log Source virtualization template is required for AWS S3 logs.
- Silent Log Source Detection can be enabled for monitoring log source activity.
- The bucket and SQS must be created in advance by the admin user.
- The bucket and SQS must be in the same region.
- Event notification to the SQS must be configured by the admin user.
- Administrator creates the Get-Logs service role and attaches the role to the EC2
  instance.
- The role includes a permissions policy that grants read-only access to the specified
  S3-logs bucket.
- Using this approach, the beat can be scaled to read logs from any set of accounts.
- Using this method requires you to provide same set of configurations again for each
  instance when logs are to be collected from the same account.
- Ensure the SQS you create is in region R
- Replace account B and bucket X with correct values in the bucket policy
- Create an IAM role in Account A named CrossAccountSignin to allow access to Account
  B.
- If CPU usage is going above 70%, it is recommended to add a new machine to share
  the load.
- As channel length flat tops and CPU usage is at 98%, no further enhancement is possible
  using this option. Scale this machine vertically.
- As channel length flat tops are no longer present using these settings, but CPU
  usage is at 95%; therefore, no further enhancement is possible. Scale this machine
  vertically to achieve better performance.
- A proxy allows you to securely fetch logs from the AWS S3 Beat without exposing
  the Open Collector virtual machine directly to the Internet.
- 'Ensure the following prerequisites have been met before configuring Docker: The
  http_proxy environment variable has been exported and sourced. The https_proxy environment
  variable has been exported and sourced.'
- A test file is sent to the S3 bucket to confirm ownership.
- Logs are generated in the S3 bucket after deployment.
- Each instance of the beat can read logs from the set of accounts and pass them to
  a single OC for further processing.
- The bucket should have been created first, with the required policy/permission attached
  to it in order to accept logs from ELB.
- The bucket should be in the same region as the application elastic load balancer.
- Be sure to enable/attach the required policy on the S3 bucket that enables the loadbalancer
  to push logs to S3 bucket.
- The Open Collector normalizes the Log to the LogRhythm Schema.
- The Open Collector sends a consistently formatted syslog feed.
- Audit logs can be routed to Event hub by configuring the Diagnostic setting.
- If CPU usage is going above 70%, add a new machine to share the load.
- If at any point the Channel Length shows flat-topping, or CPU consumption is more
  than 70%, then it is recommended to scale by adding a new machine to share the load.
- To configure the Event Hub Beat using Managed Service Identity.
- Requires setup of connected app in AWS S3 for bucket configuration
- Logs are generated in the S3 bucket after deploying the worker
- Event Hub Connection Strings, Storage Connection Strings, and Subscription IDs are
  stored in encrypted format in the configuration file
- You can enter more than one event hub namespace, event hub instance name, and storage
  container name at a time.
- The storage container name may only contain lowercase letters, numbers, and hyphens,
  and must begin with a letter or a number.
- Each hyphen must be preceded and followed by a non-hyphen character.
- The name must also be between 3 and 63 characters long.
- Event Hub Connection Strings, Storage Connection Strings, and Subscription IDs are
  stored in an encrypted format in the configuration file.
- Event Hub values are stored in encrypted format in the beat configuration.
- Customer is an LRCloud customer that has their environment hosted.
- Open Collector has been installed in the customer's LRCloud environment on a separate
  instance.
- Open Collector log source has been accepted and configured for log source virtualization.
- Uses Syslog - Open Collector for log source virtualization.
- Verify microsoft.insights is Registered as a Resource Provider
- Choose Forward events to Azure Event Hubs
- Event Hub Connection Strings, Storage Connection Strings, and Subscription IDs are
  stored in encrypted format in the configuration file.
- Azure portal configuration is owned by Microsoft. This troubleshooting section provides
  as much information as possible, but LogRhythm ownership of any problems does not
  begin until the customer has logs sending to Event Hub.
- When you paste a connection string into the command prompt, you may observe it repeated
  dozens of times. This is cosmetic only.
- If CPU usage is going above 70% even when using the given scaling and configuration
  options, then no further horizontal scaling will be possible on a single instance.
- Uses Azure authentication for Event Hub
- Scaling Open Collector and the AZURE Eventhubbeat
- Uses Syslog - Open Collector for Azure Event Hub logs
- All API calls require an API key with appropriate permissions
- If a configuration is in a bad state, you can reset it and start over.
- There can be a slight delay (up to 1 min) in syncing alerts due to a network issue
  depending upon the sensor sync alert on Carbon Black Cloud.
- The Open Collector sends the output of every beat to the Agent in a single syslog
  stream.
- The Deployment Manager must be closed to access the Knowledge Base Manager.
- If at any point your CPU consumption is more than 70%, it is recommended to add
  a new machine to share the load.
- Troubleshoot the Cisco AMP Beat
- API is location-based and varies depending on where your AMP instance resides.
- To avoid throttling issues, do not set the Period parameter below 4 seconds.
- Some calls use 'v1' in the path, and others use 'v2'. Using the wrong path will
  result in an error.
- The Open Collector sends the output of every Beat to the Agent in a single syslog
  stream.
- Beats configured using the JSON parsing method should use the regex relay outlined
  in the Configure Beats for JSON Parsing topic.
- The Private token cannot be obtained again once this window is closed. Be sure to
  record it in a secure location before navigating away.
- The Darktrace Beat supports up to 180 hours of backlog data.
- Ensure correct permissions are set for the API user.
- By default, the agent timestamps syslog messages as they come in.
- An additional Syslog Relay Regular Expression is required to correctly extract the
  timestamp.
- This API requires authentication via OAuth2.
- To avoid throttling issues (429 error for too many requests), do not set the Period
  parameter below 4 seconds.
- Integration requires API key for authentication.
- Integration key, Secret key, and API hostname are required to initialize Duo Beat.
- Log source virtualization template must be imported before creating log sources.
- Silent Log Source Detection recommended to monitor stopped reporting logs.
- Requires setup of connected app in Sophos Central
- Duo recommends requesting logs no more than once per minute.
- There is an intentional two minute delay in availability of new authentications
  in the API response.
- The supported limit range is 1-1000.
- Requires Duo Admin API for authentication
- The Open Collector needs Syslog Relay to be configured for correct timestamp extraction.
- Silent Log Source Detection is optional but recommended for monitoring log sources.
- Beats configured using the JSON parsing method should use the regex relay outlined
  in the Configure Beats for JSON Parsing topic and skip this step.
- The Limit value must be between 0 and 10000.
- Default timeframe for data requests is 60s.
- Default port for data sending is 5044.
- 'The parent log source is a generic type: ''Syslog - Open Collector.'''
- 'OAuth 2 authentication has two token types: Access Token and Refresh Token. As
  of the 2021.10 release (Generic Beat version 6.0.0), the Access Token is the only
  supported token type. The Refresh Token is not currently supported.'
- The period value defines the polling interval to fetch records from the server,
  in seconds.
- The agent timestamps syslog messages as they come in. The timestamp in the SIEM
  should reflect when the log was generated.
- Beats configured using JSON parsing method should use the regex relay outlined in
  the Configure Beats for JSON Parsing.
- Supports limit offset pagination
- Uses basic authentication
- Default Limit is 3000.
- Uses Basic Authentication
- Uses basic authentication for log sources
- Supports page-based pagination and date range filtering
- Uses OAuth authentication
- Cursor pagination supported
- Header-based authentication required
- 'OAuth 2 authentication has two token types: Access Token and Refresh Token. As
  of the 2021.10 release, the Access Token is the only supported token type.'
- The amount of time, in seconds, before an HTTP connection timeout should not be
  less than or equal to zero.
- If the API supports any delay in real time data, then add that delay here in seconds.
- Supports Page-Based Pagination with filters
- Configure the Generic Beat for IronDefense
- Configure the IronDefense Log Source in SIEM
- Uses Header Based Authentication
- Supports cursor-based pagination
- A log source virtualization template included with the LogRhythm Knowledge Base
  (KB) creates child log sources for each beat.
- By default, all Generic Beat logs will be parsed under the Syslog - Open Collector
  log source.
- Logs with parsing support will be parsed by their respective log sources.
- Keep the JSON key file secure, as it contains API credentials used for authentication.
- To export data to BigQuery, VPC service controls must be turned off (default setting)
  in the BigQuery project for Gmail.
- The Generic beat receives support for the POST HTTP request method.
- Requires proper configuration of Google API credentials.
- Configuration details may vary based on specific requirements.
- A Super Administrator account is required to enable API Access.
- An admin account with the Reports Administrator privilege is needed to create and
  grant permission to the application.
- The timestamp in the SIEM should reflect when the log was generated.
- The auth code generated has a lifetime of approximately five minutes.
- The auth code is stored in encrypted format in the configuration file.
- Troubleshoot the Google Workspace Beat
- A Syslog Relay Regular Expression is required to correctly extract the timestamp.
- To monitor the beat, run the command './lrctl gsbeat logs'
- If you do not want to listen to these logs in your gsbeat, do not include token
  in the application list within the .yaml file.
- This step is not required for beats configured using the JSON Parsing method that
  have had Long-Running LRCTL configured.
- If the system is experiencing a data loss issue for the Google Workspace Beat, try
  increasing the 'delayedTimeMin:' value in the configuration file.
- Troubleshoot the GMT Beat
- Valid characters for the topic name are '[a-z, A-Z, 0-9, and \._-]'. Using any other
  characters will result in a error.
- This must be unique for each beat instance. The user can change the consumer ID
  whenever the logs needed to be fetched from the beginning. Valid characters for
  the consumer ID are '[a-z, A-Z, 0-9, and \._-]'. Using any other characters will
  result in a error.
- The Open Collector needs Syslog Relay to timestamp syslog messages correctly.
- The auth code generated in step 8 of this procedure has a lifetime of approximately
  five minutes.
- SentinelOne supports SASL SCRAM-SHA-512 authentication.
- SentinelOne sends compressed protobuf which needs to be parsed.
- The Open Collector needs Syslog Relay for timestamping logs.
- Silent Log Source Detection indicates when a log source has stopped reporting logs.
- To help determine what the issue is, export gsbeat logs using the command './lrctl
  gsbeat troubleshoot export --outfile <output file name>'.
- In cases where the system experiences data loss or delays in receiving login, admin,
  or token logs, the PubSub Beat can be used to collect and parse Google Workspace
  login, admin, and token logs efficiently.
- Valid characters for the topic name are '[a-z, A-Z, 0-9, and ._-]'. Using any other
  characters will result in an error.
- Valid characters for the consumer ID are '[a-z, A-Z, 0-9, and ._-]'. Using any other
  characters will result in an error.
- By default, the agent timestamps syslog messages as they come in. The timestamp
  in the SIEM should reflect when the log was generated, not when the agent received
  this log.
- Requires configuration of Mimecast API application and enabling of SIEM logs
- Ensure application role has Security Events and Data Retrieval permissions.
- The Open Collector needs Syslog Relay for correct timestamp extraction.
- LogRhythm recommends warning after 1 hour and error after 2 hours for Silent Log
  Source Detection.
- Default setting for log retrieval is 7 days, with a minimum of 1 day and a maximum
  of 7 days.
- Default time interval for data retrieval is 60 seconds.
- Default port for data transmission is 5044.
- Troubleshoot the Kafka Beat for connectivity issues.
- Ensure correct permissions are set for Kafka topics.
- 'Requires permissions: AuditLog.Read.All, Directory.Read.All for Directory Audits
  and Sign Ins, SecurityEvents.Read.All, SecurityEvents.ReadWrite.All for Security
  Alerts, SecurityAlert.Read.All, SecurityAlert.ReadWrite.All for Security Alert_v2'
- Open Collector sends the output of every Beat to the Agent in a single syslog stream.
- A log source virtualization template included with the LogRhythm Knowledge Base
  creates child log sources for each beat.
- If the O365 Beat is not pulling logs, reset the delay time to a few hours ago, and
  restart the beat.
- The O365 Beat won’t be able to pull data from more than 24 hours previous.
- API tokens expire automatically after 30 days from creation or last use.
- If a user account is deactivated in Okta, any API tokens created by that user account
  are deactivated at the same time.
- Open Collector is required to be installed and running.
- Okta Cloud API Token is needed for access.
- Requires setup of a Mimecast API application
- You must have an administrator account without the Mimecast console in order to
  complete the steps in this guide.
- Ensure API token is set up for authentication
- Ensure the Virtual Log Sources are available and verified.
- Open Collector needs Syslog Relay for correct timestamping.
- 'Ensure the following prerequisites have been met before configuring Docker: http_proxy
  and https_proxy environment variables have been exported and sourced.'
- Troubleshooting the O365 Beat
- The agent timestamps syslog messages as they come in.
- If the O365 Beat is not pulling logs, reset the delay time to a few hours ago, and
  restart the beat. This could fetch previous logs.
- The Proofpoint TAP API request limit for clicks_permitted is 1800/24 hours.
- If setting up the beat instance with the 'clicks_permitted' event type, the period
  value can be edited up to 30 seconds.
- Tokens are valid for 30 days from creation or last use, so that the 30 day expiration
  automatically refreshes with each API call.
- Tokens that aren't used for 30 days expire.
- oktabeat supports only 180 days back log data.
- Requires configuration of the Syslog Relay to extract timestamps correctly.
- By default, the period value is set to 180 seconds.
- Proofpoint TAP supports 1800 requests per 24 hour period.
- The agent timestamps syslog messages as they come in. The timestamp in the SIEM
  should reflect when the log was generated, not when the agent received this log.
- The http_proxy environment variable has been exported and sourced.
- The https_proxy environment variable has been exported and sourced.
- Ensure that the default key type is JSON when generating the credential file.
- Under the same project, subscription IDs cannot be the same, even for different
  topic IDs.
- User must provide Project ID, Topic name, and Subscription name.
- The configuration saves and the service starts successfully.
- The Proofpoint service Principal & Secret is active.
- The default heartbeat interval is 60s.
- The default period is 180s.
- The throttling interval is set to 3600 seconds.
- The HTTP timeout is set to 120s.
- The number of back days for which logs are to be fetched is 7.
- Ensure the Open Collector is running before starting the Qualys FIM Beat.
- The username and password are required to access the Qualys Portal.
- Exhausting this limit will resume the log collection on the next day.
- The collector moves into an ERROR state for a wrong ClientEmail and PrivateKey.
- The collector does not move into an ERROR state for a wrong ClientId and PrivateKeyId,
  although it does not collect any logs.
- The contents of this user credential file are saved in encrypted format.
- Since Salesforce is used to process extremely large logs, it is highly recommended
  to set the OpenCollector buffer size to 50000.
- The Salesforce Beat will collect logs only once per day at 5 AM UST.
- If the beat is started after/before 5 AM UST, it will collect logs that are available
  up to that time. The beat will run again at its scheduled time of 5 AM UST and collect
  all the logs once again. This may cause duplicate logs in the system.
- If you wish to fetch logs from a particular date, you can provide the date in the
  salesforcebeat.yml file in the customPullDate field, using the YYYY-MM-DD format,
  and then restart the beat, which will collect logs from that date. You will then
  have a one hour window to reset this field to blank to avoid repeated logs from
  that date.
- This step is not required for beats configured using the JSON Parsing method that
  have had Long-Running LRCTL configured so that their heartbeat status can be monitored
  in the Beats Grid in the Web Console UI.
- The configuration has been saved and the service has been started successfully.
- If you experience data loss while the beat is running, increase the period value
  in the configuration file.
- Requires configuration of the Qualys Portal for access.
- Requires setup of connected app in Salesforce
- Ensure the API key is correctly set up in the Sophos Central admin console.
- If you wish to fetch logs from a particular date, you can provide the date in the
  salesforcebeat.yml file in the customPullDate field, using the YYYY-MM-DD format,
  and then restart the beat, which will collect logs from that date. You will then
  have a one hour window to reset this field to blank to avoid repeated logs from
  that date. After resetting this field to blank, you will need to restart the beat
  for its regular functionality. This restart will collect logs of that day up to
  that time. This activity may also cause duplicate logs in the system.
- The ClientID and ClientSecret configuration fields are saved in encrypted format.
- Enable Syslog Server must be selected.
- Regular expressions must be configured for timestamp extraction.
- The Symantec WSS Beat is not available for use in LRCloud.
- The Symantec WSS Beat supports up to 180 hours of backlog data.
- Open Collector requires proper configuration to receive logs.
- Ensure the log sources are verified after importing the Knowledge Base.
- Event Notification Endpoint URLs must be secured over HTTPS.
- These credentials will not be viewable again, so ensure they are copied at this
  time.
- If you provide your own hostname/external IP, make sure it is publicly exposed on
  the specified port and is mapped to the same system on which the beat is running.
- If you are running multiple webhook beat instances, you must run each instance on
  a different port. One beat instance should use one unique port on the same machine,
  otherwise the beat will not work.
- Requires setup of connected app in API
- The Symantec WSS Beat supports up to 180 hours of backlog data. The range for this
  value is 1-180 hours.
- Ensure the Open Collector IP address is configured correctly.
- Enable Silent Log Source Detection for monitoring.
- New log sources based on customer requests and feedback
- Improvements around Forcepoint log source collection
- Following an upgrade to version 7.21, customers with existing Dashboard widgets
  using wildcard Lucene filters may experience blank widgets if the filter contains
  capital letters.
- During the upgrade to 7.21, web indices were migrated to a new Lucene version.
- Alarm should not fire if log is present and is within the time window.
- Data Indexer Investigations on multi-node clusters may produce different result
  counts when keyword searches are run multiple times.
- After upgrading to LogRhythm SIEM version 7.19, servers running Windows Server 2012
  R2 may throw errors when attempting to use the LogRhythm API or connecting through
  API Gateway.
- Requires setup of connected app in LogRhythm
- Following an upgrade to 7.21, customers with AI Engine rules with a rule status
  of Enabled but with Alarming set to Disabled may still generate alarms when the
  rules fire.
- Following an upgrade to 7.21, some customers are experiencing blank widgets in the
  Web Console.
- During Flat File Collection with .NET 8 agents, position files are reset on service
  restart.
- Alarm with 'not observed' rule block is firing even when a log or multiple logs
  are present.
- If you upgraded using 7.20.0 GA software downloaded after April 23, you do not need
  to apply this patch.
- Uses OAuth2 with refresh token — requires setup of connected app in LogRhythm.
- Ensure to set up the API permissions for accessing audit and event logs.
- Increased encryption key length to 3072 bits
- Implemented SHA-256 signing for installers
- Added support for TLS 1.3 for Web Console
- LogRhythm 7.19 introduces new capabilities for the Data Indexer warm node, more
  administrative functionality in the Web Console, performance improvements, and more!
  With this update, get faster search results, spend less time doing administrative
  tasks, and experience the performance and stability of LogRhythm’s latest SIEM release.
- LogRhythm 7.20 introduces Data Indexer dashboards to the web console
- SentinelOne Beat log collection
- a generic JSON TCP connection for System Monitor agents
- get a smoother, more streamlined experience due to behind-the-scenes upgrades
- better dashboard results
- experience the performance and stability of LogRhythm’s latest SIEM release
- LogRhythm 7.18 introduces LogRhythm Intelligence - a seamless integration of LogRhythm
  SIEM and Exabeam UEBA.
- With LogRhythm 7.18, onboarding pending log sources is a breeze. Accept, reject,
  and delete pending sources all from within the Web Console!
- This release also includes new versions of Elasticsearch and the Advanced Intelligence
  Engine service, make security analytics more powerful and enabling greater efficiency
  with quicker and more accurate TDIR.
- Up to 80% decrease in DX heap consumption.
- Up to 50% improvement in detection pipeline throughput.
- Up to 10x improvement in processing of pattern matching rules.
- Up to 87% faster loading of log sources in the client console.
- Over 60 new and enhanced log sources, including Rubrik, Anomali, and Akamai, added
  to over 1,000 existing out-of-the-box log sources.
- Some customers may experience issues with displaying 'Last Log Messages' under the
  Deployment Manager > Log Sources tab.
- Some objects like UserProfile may return nulls in deeply nested fields
- Requires setup of connected app in LogRhythm API
- Version 7.19 adds the associate function in the Web Console.
- Alarming and Response Manager service upgraded to .NET 8.
- Ensure correct OAuth scopes are set for accessing user profiles.
- LogRhythm 7.17 introduces the Open Collection Architecture and the JSON Policy Builder,
  making onboarding and parsing Logstash formatted JSON logs a breeze.
- With these new features, security analysts can get a better view across the organization.
- Collecting mission critical log sources has never been easier!
- Administrators can obtain critical licensing information through the REST API.
- Requires setup of connected app in LogRhythm.
- The updated components provided in 7.18.0.46 were added to the 7.18.0 GA release
  downloads on October 31, 2024.
- Uses OAuth2 with refresh token — requires setup of connected app in logrhythm
- Now you can get actionable AI-powered behavioral detections right in the SIEM!
- With LogRhythm 7.18, onboarding pending log sources is a breeze.
- Accept, reject, and delete pending sources all from within the Web Console!
- This release also includes new versions of Elasticsearch and the Advanced Intelligence
  Engine service.
- Make security analytics more powerful and enabling greater efficiency with quicker
  and more accurate TDIR.
- 'Platform improvements include: Up to 80% decrease in DX heap consumption.'
- And don’t miss out on over 60 new and enhanced log sources, including Rubrik, Anomali,
  and Akamai, added to over 1,000 existing out-of-the-box log sources as a continued
  commitment to provide customers accurate and modern TDIR.
- Diagnostic events can be filtered out to save disk space and processing time.
- Business units can separate and secure data using separate Entities.
- Windows Event Log XML Filters can be configured through the REST API.
- Uses API key for authentication.
- Users can now create Cloud to Cloud (C2C) log sources in the Web Console and view
  them in the Log Source grid without receiving timeout errors.
- InfluxDB no longer causes spikes in resource usage that impacted the performance
  of other processes.
- Ensure to configure OAuth correctly for API access.
- The API may have rate limits that could affect data retrieval.
- LogRhythm 7.17 introduces the Open Collection Architecture and the JSON Policy Builder,
  making onboarding and parsing Logstash formatted JSON logs a breeze. With these
  new features, security analysts can get a better view across the organization. Collecting
  mission critical log sources has never been easier!
- Administrators can now programmatically obtain critical licensing information through
  the REST API.
- Log Message Processing Settings are no longer greyed out for custom log sources.
- The updated components provided in 7.14.1 were added to the 7.14 GA release downloads
  on November 13, 2023.
- If you upgraded using 7.14 GA software downloaded after November 13, you do not
  need to apply this patch.
- Requires setup of connected app in the API
- LogRhythm SIEM 7.14 allows management of Open Collector and Beats in the Web Console.
- LogRhythm 7.16 introduces configuration options that help analysts tune out unnecessary
  diagnostic events to save disk space and processing time.
- This release features case separation based on Entity and RBAC controls, so administrators
  can ensure multitenant customers and individual business units can only access data
  assigned to them.
- In addition, LogRhythm 7.16 simplifies the process to retire Open Collectors, Beats,
  and log sources in LogRhythm SIEM, reducing administrative overhead.
- Diagnostic events that originate from the SIEM often take up valuable disk space
  from your organization.
- Some of those events are purely informational and not needed for your team to do
  their jobs.
- All new deployments should only be completed by LogRhythm authorized staff.
- This file is required to access and configure LogRhythm.
- 7.22.0 GA Release Notes - 1 October 2025
- LogRhythm now supports management for six additional Beats including Gmail Message
  Tracking, GSuite, Okta, Darktrace, Sophos, and Qualys FIM.
- Automatic Flat File Path Population for Windows Event Logs.
- Web Console Log Export in Users’ Local Time.
- User profiles require specific permissions to access.
- API requires OAuth2 setup with a connected app in LogRhythm
- Some API responses may vary based on user permissions
- New REST API endpoints introduced for managing Open Collector and Beats.
- AI Engine uses time-binned aggregated data when processing logs against the AI Engine
  rules.
- This option is to be used only under the supervision of LogRhythm Inc. Professional
  Services.
- Requires OAuth2 authentication with a connected app.
- Some API calls may have rate limits
- The NetMon host needs to be accessible from the server that the Web Console is hosted
  on.
- NetMon must be configured to send syslogs to LogRhythm services.
- NetMon must be configured as a log source.
- Requires setup of user profile permissions
- Some data may be rate limited
- You can also drill down on alarms associated with AI Engine rules using the AIE
  Drill Down API.
- The AI Engine runs the Windows Service LRAIEngine.
- 'AI Engine ComMgr consists of two parts: AIEDP and AIEDR.'
- Some endpoints may have specific rate limits.
- Ensure proper permissions are set for API access.
- To change the AI Engine QueryTimeout value, edit the LRAIEEngine.ini file manually.
  The value can be between 5 and 300 seconds (default 120).
- Default User ID is LogRhythmAIE.
- System alarm rules are created by LogRhythm and cannot be removed.
- Text File Notifications may include alarm values such as the Alarm Rule Name and
  Alarm Date.
- The AIE Drill Down Cache feature must be enabled for HTML notifications.
- When UTF-8 Text Encoding is selected, the ARM automatically writes the Byte Order
  Mark (BOM) to the beginning of the file.
- Users must have proper permissions to access their profiles.
- Some logs may have missing fields depending on the source.
- Requires setup of user profile access rights.
- Setting Notification Period in Minutes to 0 results in all alarms being sent in
  individual notifications.
- Ensure proper OAuth2 setup is done for authentication.
- Best practice is to create a unique role or Person Record for each SNMP Trap Notification
  Policy.
- Include the name of the SNMP Manager as the name of the Person Record and the SNMP
  Trap Notification Policy.
- If the ARM cannot write to the output file, it automatically rolls over and attempts
  to create a new output file.
- 'Some reasons that Text File Notification might fail all three attempts are: One
  or more directories in the specified Base File Path cannot be found, the ARM process
  does not have permission to create and/or write files in the specified directory.'
- The ARM Service needs permission to write to the Base File Path.
- Windows file path maximum = 260 characters.
- Some fields may return nulls in deeply nested structures
- Data format used by Text File Notification is identical to the data formatting used
  by the LogRhythm Log Exporter.
- The selected log must match a rule to incur an alarm. Creating an alarm on unmatched
  or unidentified logs results in an error.
- If your deployment processes more than 10,000 alarms per day, AIE Drilldown Cache
  performance, as well as overall deployment performance, could be degraded.
- Some reports may return nulls in deeply nested fields
- 'All three MIB files must be compiled into the SNMP Manager for it to recognize
  the fields in a LogRhythm alarm trap: LOGRHYTHM-TC.mib, LOGRHYTHM-ARM-MIB.mib, LOGRHYTHM-MIB.mib'
- Requires OAuth2 authentication for API access.
- Some objects may return nulls in deeply nested fields.
- The ARM Service needs permission to write to this path.
- The ARM appends a time stamp formatted yyyyMMdd_HHmmss_fffffff to the base file
  name between the file name and extension with the local file creation time.
- Some API endpoints may have rate limits that require handling.
- Creating an alarm on unmatched or unidentified logs results in an error.
- Ensure OAuth2 is properly configured for access
- For best performance, keep inactive archives on a file share other than the LogRhythm
  appliance.
- The account under which the Mediator service is running must have delete permissions
  on the external path for inactive archives.
- Ensure proper OAuth setup for data access.
- Requires proper configuration of OAuth settings in the LogRhythm console
- You may also use third-party backup utilities to perform database backups, but ensure
  that you schedule the backups at times that will not disrupt the function of the
  Platform Manager.
- When using an external path for inactive archives, the account under which the Mediator
  service is running must have delete permissions on that path.
- Some API responses may contain null values in nested fields
- The Primary System (XM1) and the Dark Spare (XM2) are identical XM4300 systems running
  the same version of LogRhythm (7.1.7 or later).
- Online events (i.e., data in the Data Indexer) are not backed up.
- Best practice is to enable Object Access Auditing on the LogRhythm Inactive Archives.
- The Microsoft Web site posts information about a known issue with Object Access
  Auditing, causing audit messages to be generated when a user refreshes the Security
  Event Log in Event Viewer.
- SecondLook is always available for LogRhythm Administrators.
- For other users, SecondLook is only available if Allow use of SecondLook is selected
  in the user's profile.
- Ensure there is adequate storage space for the backups; they can fill several hundred
  GB.
- The backup time should not conflict with the Mediator Server daily maintenance jobs
  which have a nightly default start time of midnight.
- OAuth2 authentication is required.
- Rate limits may apply.
- Some API responses may vary in structure based on request parameters.
- Rate limits may apply to certain endpoints.
- Setup requires OAuth2 with refresh token.
- Ensure valid client ID and secret are provided.
- Only Global Admins or Restricted Admins with elevated View and Manage privileges
  can take this action.
- If you specify a non-local path, the Mediator (scmedsvr) service must be set to
  run as a user account with rights to access the specified path.
- High Availability Network Area Storage (NAS) is required for writing inactive archives
  to remote UNC paths.
- To prevent issues with archive paths and folder structures, it is considered a best
  practice to avoid special characters when creating names.
- The folder on the Primary System and the Dark Spare that simulates a backup solution
  should be D:\DS-Backups.
- Do not run the installer on the new node.
- Elasticsearch is not required to be in a green state while adding a node, but it
  is best practice to verify the cluster is green before adding the node.
- For 2XDX, physical nodes are only used for the shard calculation. A three-node 2XDX
  will have six shards.
- Maximum allowable size of a log, above which Transporter rejects the log
- Port number bound by the Transporter web server
- Maximum number of seconds that an indexing HTTP request lives before timing out
- SQL user name used by the Data Indexer to connect to the LogRhythm database server
- SQL password used the Data Indexer to connect to the LogRhythm database server
- Fully qualified path where Elasticsearch stores cluster data; value of path.data
- Maximum number of logs indices to store. Default value is -1 to manage automatically
  based on available resources
- Periodic Elasticsearch defragmentation of indices to reduce heap consumption Potentially
  resource intensive.
- Number of seconds between GoMaintain samples of Elasticsearch heap and disk utilization
  for index TTL management
- Maximum number of accumulated samples before GoMaintain performs index TTL management
- Maximum disk utilization above which GoMaintain performs index TTL management
- Maximum Elasticsearch heap usage (filtered) above which GoMaintain performs index
  TTL management
- Enable domain credential access and encryption for EMDB connections
- The number of records per EMDB request used by Carpenter to sync metadata to Elasticsearch
- The number of minutes between Carpenter metadata sync operations with the EMDB
- Enables replicas on warm indices when cluster has more than one DXW node
- API requires authentication via OAuth2.
- Ensure all relevant permissions are granted for the API access.
- In medium-to-large deployments, Data Processors should be dedicated systems.
- In small deployments, the Data Processor can coexist on the same system as the Platform
  Manager.
- OAuth2 with refresh token is required.
- Both DX clusters should have the same type and size when used for redundancy.
- The indexing rate should be limited to the smallest of the two clusters when used
  for Cluster Migration.
- The Force Merge configuration combines index segments to improve search performance.
- Force Merge settings are not preserved during an upgrade.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- The amount of downtime experienced by the cluster will depend on the hardware, number
  of open indices, and their relative sizes.
- Elasticsearch is not required to be in a green state while adding a node, but it
  is best practice to verify the cluster is green before adding the node to ensure
  the process is successful.
- Only negative values are accepted. Negative Common Event ID values are reserved
  for LogRhythm Diagnostic logs.
- Requires authentication setup.
- Requires authentication setup via OAuth2.
- Only use a static IP address. Do not use DHCP.
- Enables or disables Identity Inference for the MPE (as long as Globally disabled).
- Certain fields may return null for some log types
- When used for redundancy purposes, both DX clusters should have the same type and
  size.
- When used for Cluster Migration strategy, the indexing rate should be limited to
  the smallest of the two clusters.
- 'Sets the MPE logging level (log written to scmpe.log). Options: Off, Error, Warning,
  Info, Verbose, Debug'
- How often to perform internal process maintenance (in seconds).
- 'Rule performance statistics mode: Off - no not write report (lps_detail.log) or
  data file (lps_stats.dat) locally or submit to LogRhythm (default). Local - write
  the report (lps_detail.log) and data file (lps_stats.dat) locally. Local and Send
  - write the Report (lps_detail.log) and data file (lps_stats.dat) locally and submit
  to LogRhythm.'
- How often to submit rule performance information to LogRhythm (in hours). The latest
  lps_detail.log and lps_stats.dat files will be submitted each interval.
- How often (in seconds) the LogMart is updated with new data.
- How long (in seconds) a single commit operation can take before timing out.
- How often (in seconds) heartbeat information is committed to the database.
- How often (in seconds) log collection statistics are committed to the database.
- Specify if StatKeeper should be enabled.
- Some data may return nulls in deeply nested fields
- Gen6 hardware platforms are available in KB versions greater than 7.1.679.0.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Unknown error. See Console.
- Invalid object name 'LogRhythmEMDB.dbo.MsgSource'.
- Invalid object name 'LogRhythmEMDB.dbo.SCLicense'.
- User Login already exists. OC Admin only uses new User Login.
- Generic SQL Backend error - Stored Procedure Parameter.
- Requests can only be made in the LoggedIn state, not the SentLogin7WithStandardLogin
  state.
- Generic SQL Backend error - Error querying persistance layer.
- Only .ezCollection files are accepted.
- Only one .ezCollection file is accepted.
- Generic SQL Backend error - Stored Procedure Parameter
- 'Log source not accepted: Ensure proper configuration and retry'
- 'Silent Log Source Detection not enabled: Check settings'
- Configuration has been saved and the service has started successfully.
- 'InvalidAccountID: Ensure Account B ID is correct.'
- 'AccessDenied: Check permissions for IAM role in Account A.'
- 'ACCESS_DENIED: Check IAM user permissions'
- 'INVALID_PARAMETER: Verify the provided parameters'
- Error initializing the Event Hub Beat
- 'StatusCode=429: Failed to start EPH for Event hub insights-operational-logs : storage.AccountsClient#ListAccountSAS:
  Failure sending request: StatusCode=429'
- 'StatusCode= 429: Failed to start EPH for Event hub insights-operational-logs :
  storage.AccountsClient#ListAccountSAS: Failure sending request: StatusCode=429'
- 'Authentication Error: Check the authentication configuration in your Azure portal.'
- 'CPU: ~90%'
- '429: Too many requests'
- '401 Unauthorized: All API calls require an API key with appropriate permissions.'
- Do not select the Cisco AMP-specific log source types yet. You will do that in a
  later step.
- '429 Too Many Requests: If you have exhausted your quota limit of API calls to Cisco
  AMP, check the Period parameter.'
- '401 Unauthorized: Check API key and permissions.'
- '404 Not Found: Verify the endpoint path.'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Check your API key and permissions'
- request limit error with error code 429
- 'kafka: client has run out of available brokers to talk to (Is your cluster reachable?)'
- 'kafka server: SASL Authentication failed'
- The client is not authorized to access this topic
- Using any other characters will result in an error.
- 'REQUEST_TIMEOUT: Check network connection or syslog server status.'
- 'INVALID_TEMPLATE: Ensure the correct log source virtualization template is selected.'
- 'KAFKA_CONNECTION_ERROR: Verify Kafka broker address.'
- 'TOPIC_NOT_FOUND: Check if the topic exists.'
- '401 Unauthorized: Check API token validity'
- 429 Too many requests by okta beat, Log collection will resume after 1m0s.
- 'Request failed with error: Get "https://url": Service Unavailable'
- '429 Too Many Requests: Throttle API calls or increase throttling_interval'
- '429 Too Many Requests: Exhausting this limit will resume the log collection on
  the next day.'
- 'ERROR: Invalid ClientEmail or PrivateKey — check your credentials.'
- 'ERROR: Throttle API calls or reduce frequency.'
- '429 Too Many Requests: Adjust the throttling interval or reduce request frequency.'
- Check the Open Collector status if the service does not start.
- '429 Too Many Requests: Increase throttling_interval or period in the config file'
- '401 Unauthorized: Check your API key and permissions.'
- '429 Too Many Requests: Rate limit exceeded, please try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'ENG-41651: CAC authorization used to log in to the Web Console stops working after
  upgrading to 7.12 or newer.'
- 'ENG-62271: LogRhythm has bundled an upgrade to Elasticsearch OSS 7.10.2 which may
  flag on scanners as being affected by a remote code execution vulnerability.'
- 'ENG-62339: Some customers may experience issues with displaying ''Last Log Messages''
  under the Deployment Manager > Log Sources tab.'
- 'ENG-41651: CAC authorization used to log in to the Web Console stops working.'
- 'ENG-61968: Alarms only trigger if the threshold is set to one occurrence.'
- '401 Unauthorized: Check client credentials and OAuth scopes.'
- '500 Internal Server Error: Alarm API calls are correctly routed without returning
  a 500 internal server error.'
- '500 Internal Server Error: Retry the request until it succeeds.'
- 'Regex rule match timed out: There is currently no workaround.'
- SmartResponse Plugins revert to default settings after 7 days if not triggered.
- '401 Unauthorized: Recheck API key or token expiration'
- '429 Too Many Requests: Reduce the frequency of API calls.'
- '401 Unauthorized: Verify your authentication credentials.'
- '500 internal server error: Alarm API calls are correctly routed without returning
  a 500 internal server error.'
- '500 internal server error: Retry the request until it succeeds.'
- 'Regex rule match timed out: There is currently no workaround for this issue.'
- '403 Forbidden: Check user permissions or roles'
- '404 Not Found: Verify endpoint and resource availability'
- '401 Unauthorized: Ensure correct credentials are being used.'
- '403 Forbidden: Check user permissions for accessing the resource.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the endpoint exists.'
- Missing Platform Manager Platform error
- Missing Data Processor Platform error
- '401 Unauthorized: Check OAuth token or scopes.'
- '401 Unauthorized: Recheck user credentials or permissions'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
- '403 Forbidden: Check permissions for the user.'
- '401 Unauthorized: Verify token validity.'
- LogRhythm AI Engine and LogRhythm AI Engine Communication Manager services have
  a startup type value of Manual.
- If the ARM cannot write to the output file, it automatically rolls over and attempts
  to create a new output file.
- One or more directories in the specified Base File Path cannot be found.
- If the ARM cannot write to an output file after three attempts, then it logs an
  error and stops trying.
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Ensure the user profile ID is correct.'
- '401 Unauthorized: Check your API token.'
- '401 Unauthorized: Check API key or token.'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Check your authentication credentials.'
- '500 Internal Server Error: It''s a server-side issue, try again later.'
- If the ARM cannot write to the output file, it logs an error and stops trying.
- '401 Unauthorized: Check token validity.'
- '403 Forbidden: Ensure proper permissions are granted.'
- '401 Unauthorized: Check your OAuth token'
- '403 Forbidden: Insufficient permissions for the requested resource'
- '401 Unauthorized: Recheck OAuth configuration.'
- '401 Unauthorized: Check your token and its scopes'
- '404 Not Found: Verify the endpoint and resource'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your credentials and permissions.'
- '429 Too Many Requests: You have exceeded your rate limit.'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify endpoint path.'
- '500 Internal Server Error: Retry the request.'
- '403 Forbidden: Check user permissions'
- '400 Bad Request: Verify request parameters'
- '401 Unauthorized: Check your OAuth token and its scopes.'
- '403 Forbidden: You do not have permission to access this resource.'
- Elasticsearch API endpoint does not respond after 5 minutes
- If shards stop showing in the recovery list, and the cluster health has not yet
  reported green, please contact LogRhythm Support to investigate why shards are not
  initializing or assigning as expected.
- '401 Unauthorized: Check OAuth token and permissions.'
- '429 Too Many Requests: Throttle API calls'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Duo Admin API
  - Access Token
  - Refresh Token
  - Super Administrator
  - Reports Administrator
  - Application (client) ID
  - Directory (tenant) ID
client:
  base_url: http://www.logrhythm.com
  auth:
    type: oauth2
source_metadata: null
