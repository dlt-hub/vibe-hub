resources:
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params:
      max_results: 20
- name: v3_events
  endpoint:
    path: /v3/events
    method: GET
    data_selector: records
    params:
      include: occurrences
      max_results: 20
- name: event_by_id
  endpoint:
    path: /events/:event_id
    method: GET
    data_selector: records
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: records
- name: publishers
  endpoint:
    path: /publishers
    method: GET
    data_selector: records
- name: publisher_categories
  endpoint:
    path: /publishers/:publisher_id/categories
    method: GET
    data_selector: records
- name: published_events
  endpoint:
    path: /publishers/:publisher_id/published_events
    method: GET
    data_selector: records
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: id
- name: my_packages
  endpoint:
    path: /packages/mine
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: events_mine
  endpoint:
    path: /events/mine
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events/:event_id
    method: PUT
    data_selector: records
    params: {}
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
    params: {}
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: uuid
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: ''
    params:
      max_results: 20
- name: v3_events
  endpoint:
    path: /v3/events
    method: GET
    data_selector: ''
    params:
      max_results: 20
      include: occurrences
- name: event_by_id
  endpoint:
    path: /events/:event_id
    method: GET
    data_selector: ''
    params: {}
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: id
    params: {}
- name: user_packages
  endpoint:
    path: /users/:user_id/packages
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: our_events
  endpoint:
    path: /events/ours
    method: GET
    data_selector: records
    params: {}
- name: single_event
  endpoint:
    path: /events/ours/:event_id
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: ''
    params:
      max_results: 20
- name: v3_events
  endpoint:
    path: /v3/events
    method: GET
    data_selector: ''
    params:
      max_results: 20
      include: occurrences
- name: event_by_id
  endpoint:
    path: /events/:event_id
    method: GET
    data_selector: ''
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: records
- name: publishers
  endpoint:
    path: /publishers
    method: GET
    data_selector: records
- name: publisher_categories
  endpoint:
    path: /publishers/:publisher_id/categories
    method: GET
    data_selector: records
- name: published_events
  endpoint:
    path: /publishers/:publisher_id/published_events
    method: GET
    data_selector: records
- name: event_contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: id
- name: my_packages
  endpoint:
    path: /packages/mine
    method: GET
    data_selector: records
- name: package_details
  endpoint:
    path: /packages/:package_id
    method: GET
    data_selector: uuid
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: records
- name: publishers
  endpoint:
    path: /publishers
    method: GET
    data_selector: records
- name: publisher_categories
  endpoint:
    path: /publishers/:publisher_id/categories
    method: GET
    data_selector: records
    params: {}
- name: published_events
  endpoint:
    path: /publishers/:publisher_id/published_events
    method: GET
    data_selector: records
    params: {}
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: ''
- name: my_packages
  endpoint:
    path: /packages/mine
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: ''
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
- name: publishers
  endpoint:
    path: /v3/publishers
    method: GET
    data_selector: data
- name: staff
  endpoint:
    path: /v3/staff
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: ''
- name: user_details
  endpoint:
    path: /users/:user_id
    method: GET
    data_selector: ''
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: ''
- name: update_user
  endpoint:
    path: /users/:user_id
    method: PUT
    data_selector: ''
- name: create_event
  endpoint:
    path: /events
    method: POST
    data_selector: ''
- name: update_event
  endpoint:
    path: /events/:event_id
    method: PUT
    data_selector: ''
- name: list_our_events
  endpoint:
    path: /events/ours
    method: GET
    data_selector: ''
- name: get_our_event
  endpoint:
    path: /events/ours/:event_id
    method: GET
    data_selector: ''
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
- name: publishers
  endpoint:
    path: /v3/publishers
    method: GET
    data_selector: data
- name: staff
  endpoint:
    path: /v3/staff
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: ''
- name: events_ours
  endpoint:
    path: /events/ours
    method: GET
    data_selector: ''
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: id
- name: user_packages
  endpoint:
    path: /users/:user_id/packages
    method: GET
    data_selector: '[]'
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: user_events
  endpoint:
    path: /events/ours
    method: GET
    data_selector: '[]'
- name: single_event
  endpoint:
    path: /events/ours/:event_id
    method: GET
    data_selector: '{}'
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: id
    params: {}
- name: user_packages
  endpoint:
    path: /users/:user_id/packages
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: events_ours
  endpoint:
    path: /events/ours
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params:
      max_results: 20
- name: v3_events
  endpoint:
    path: /v3/events
    method: GET
    data_selector: records
    params:
      max_results: 20
      include: occurrences
- name: event_details
  endpoint:
    path: /events/:event_id
    method: GET
    data_selector: records
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: records
    params: {}
- name: publishers
  endpoint:
    path: /publishers
    method: GET
    data_selector: records
    params: {}
- name: publisher_categories
  endpoint:
    path: /publishers/:publisher_id/categories
    method: GET
    data_selector: records
    params: {}
- name: published_events
  endpoint:
    path: /publishers/:publisher_id/published_events
    method: GET
    data_selector: records
    params: {}
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
    params: {}
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: id
    params: {}
- name: my_packages
  endpoint:
    path: /packages/mine
    method: GET
    data_selector: records
    params: {}
- name: package_details
  endpoint:
    path: /packages/:package_id
    method: GET
    data_selector: records
    params: {}
- name: create_event
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: contract
  endpoint:
    path: /contract
    method: GET
    data_selector: package_options
- name: publishers
  endpoint:
    path: /v3/publishers
    method: GET
    data_selector: data
- name: staff
  endpoint:
    path: /v3/staff
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: ''
- name: user_details
  endpoint:
    path: /users/:user_id
    method: GET
    data_selector: ''
- name: create_user
  endpoint:
    path: /users
    method: POST
    data_selector: ''
- name: update_user
  endpoint:
    path: /users/:user_id
    method: PUT
    data_selector: ''
- name: create_event
  endpoint:
    path: /events
    method: POST
    data_selector: ''
- name: update_event
  endpoint:
    path: /events/:event_id
    method: PUT
    data_selector: ''
- name: our_events
  endpoint:
    path: /events/ours
    method: GET
    data_selector: ''
- name: our_event
  endpoint:
    path: /events/ours/:event_id
    method: GET
    data_selector: ''
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: id
    params: {}
- name: user_packages
  endpoint:
    path: /users/:user_id/packages
    method: GET
    data_selector: ''
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
    params: {}
- name: our_events
  endpoint:
    path: /events/ours
    method: GET
    data_selector: ''
    params: {}
notes:
- No valid filters for the /categories API call.
- You can only find events for publishers you have been given permission for.
- This API is a non-public API intended only for partners who will be creating evvnt
  accounts and events on behalf of their users.
- By default a maximum of 20 records are returned.
- API requires API key and secret for authentication.
- You can only access data for publishers you have been specifically given access
  to.
- This API is designed for event organizers to manage events and related data.
errors:
- '400: Bad Request - Invalid or missing values.'
- '403: Forbidden - Unknown user id or ID of the event requested is not accessible.'
- '404: Event not found'
- '403: Incorrect user id'
- '400: Not a valid email address'
- '400: Invalid or missing values'
- '403: Unknown user id'
- '403: Forbidden - Invalid user ID.'
- '404: Not Found - Resource not found.'
- '400: Invalid or missing values supplied'
- '403: User ID is not valid'
- '400 Bad Request: Invalid or missing values supplied.'
- '403 Forbidden: Valid user ID not passed.'
- '404 Not Found: Event not found.'
- '403: Invalid user ID passed'
- '400: Invalid or missing values supplied in the request'
- '403: Unknown user id or insufficient permissions'
- '403: Valid user ID not passed'
auth_info:
  mentioned_objects:
  - API_KEY
  - API_SECRET
client:
  base_url: https://api.evvnt.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
