resources:
- name: projects
  endpoint:
    path: /v2/projects
    method: GET
    data_selector: projects
    params: {}
- name: volumes
  endpoint:
    path: /v2/volumes
    method: POST
    data_selector: volume
    params: {}
- name: ssh_keys
  endpoint:
    path: /v2/ssh-keys
    method: POST
    data_selector: ssh_key
    params: {}
- name: spot_bids
  endpoint:
    path: /v2/spot/bids
    method: POST
    data_selector: bid
    params: {}
- name: instances
  endpoint:
    path: /v2/instances
    method: GET
    data_selector: data
    params: {}
- name: spot_bid
  endpoint:
    path: /api/spot/bids
    method: POST
    data_selector: bid
    params: {}
- name: spot_availability
  endpoint:
    path: /api/spot/availability
    method: GET
    data_selector: availability
    params: {}
- name: spot_bids
  endpoint:
    path: /foundry-api/api-reference/spot/bids
    method: GET
    data_selector: records
    params: {}
- name: spot_availability
  endpoint:
    path: /foundry-api/api-reference/spot/availability
    method: GET
    data_selector: records
    params: {}
- name: spot_bids
  endpoint:
    path: /compute-and-storage/spot-bids
    method: GET
    data_selector: records
    params: {}
- name: instances
  endpoint:
    path: /foundry-api/api-reference/instances
    method: GET
    data_selector: records
    params: {}
- name: spot_bid
  endpoint:
    path: /compute-and-storage/access-and-manage-instances/statuses/spot_bid
    method: GET
    data_selector: status
    params: {}
- name: spot_instance
  endpoint:
    path: /compute-and-storage/access-and-manage-instances/statuses/spot_instance
    method: GET
    data_selector: status
    params: {}
- name: reservation
  endpoint:
    path: /compute-and-storage/access-and-manage-instances/statuses/reservation
    method: GET
    data_selector: status
    params: {}
- name: reserved_instance
  endpoint:
    path: /compute-and-storage/access-and-manage-instances/statuses/reserved_instance
    method: GET
    data_selector: status
    params: {}
- name: kubernetes_clusters
  endpoint:
    path: /compute-and-storage/hosted-kubernetes-clusters
    method: GET
    data_selector: clusters
    params: {}
- name: projects
  endpoint:
    path: /v2/projects
    method: GET
    data_selector: ProjectModel[]
- name: instance_types
  endpoint:
    path: /v2/instance-types
    method: GET
    data_selector: InstanceTypeModel
- name: ssh_keys
  endpoint:
    path: /v2/ssh-keys
    method: GET
    data_selector: NewSshKeyModel[]
    params:
      project: proj_abc123456
- name: create_ssh_key
  endpoint:
    path: /v2/ssh-keys
    method: POST
    data_selector: CreatedSshKeyModel
    params:
      project: proj_abc123456
      name: text
      public_key: text
- name: delete_ssh_key
  endpoint:
    path: /v2/ssh-keys/{ssh_key_fid}
    method: DELETE
    data_selector: No content
    params:
      ssh_key_fid: sshkey_abc123456
- name: volumes
  endpoint:
    path: /v2/volumes
    method: GET
    data_selector: VolumeModel[]
    params:
      project: string
      region: string
- name: create_volume
  endpoint:
    path: /v2/volumes
    method: POST
    data_selector: VolumeModel
    params:
      name: string
      project: string
      disk_interface: string
      region: string
      size_gb: integer
- name: delete_volume
  endpoint:
    path: /v2/volumes/{volume_fid}
    method: DELETE
    data_selector: No content
    params:
      volume_fid: string
- name: instances
  endpoint:
    path: /v2/instances
    method: GET
    data_selector: data
    params:
      project: string
- name: api_keys
  endpoint:
    path: /v2/api-keys
    method: GET
    data_selector: ApiKeyModel[]
- name: create_api_key
  endpoint:
    path: /v2/api-keys
    method: POST
    data_selector: CreateApiKeyResponse
- name: revoke_api_key
  endpoint:
    path: /v2/api-keys/{key_fid}
    method: DELETE
- name: me
  endpoint:
    path: /v2/me
    method: GET
    data_selector: id
    params: {}
- name: organizations
  endpoint:
    path: /access-management/organizations
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /access-management/projects
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /access-management/users
    method: GET
    data_selector: records
- name: resources
  endpoint:
    path: /access-management/resources
    method: GET
    data_selector: records
- name: ssh_keys
  endpoint:
    path: /access-management/ssh-keys
    method: GET
    data_selector: keys
- name: projects
  endpoint:
    path: /v2/projects
    method: GET
    data_selector: projects
- name: volumes
  endpoint:
    path: /v2/volumes
    method: POST
    data_selector: volume
- name: ssh_keys
  endpoint:
    path: /v2/ssh-keys
    method: POST
    data_selector: ssh_key
- name: spot_bids
  endpoint:
    path: /v2/spot/bids
    method: POST
    data_selector: bid
- name: instances
  endpoint:
    path: /v2/instances
    method: GET
    data_selector: data
notes:
- All API requests require authentication using your API key in the Authorization
  header.
- You'll need to configure billing on the Foundry Console before you can place bids
  with the API
- Foundry Cloud Platform is currently invite-only as we scale up capacity.
- Foundry Cloud Platform is currently limited access to ensure the best user experience
  as we scale up capacity.
- Reservations let you access dedicated VMs for exactly your desired duration, from
  3 hours to 2 weeks, with 1-hour increment flexibility.
- The number of instances is not equivalent to the number of GPUs.
- Instances are normally accessible within 10 minutes of your predetermined start
  time.
- Once you have fully configured your reservation and have reviewed the details, confirm
  your reservation. You will be billed for your reservation at the end of your billing
  period.
- After a reservation is created, it cannot be canceled.
- Spot instances are preemptible and allocated through a blind second-price auction.
- Your bid remains open until it is successful or terminated.
- Foundry allocates spot instances through a blind second-price auction.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Startup scripts perform tasks during the initial startup process of your instances.
- Startup scripts only run the first time your instance starts up.
- Quotas are set on a per-instance-type basis.
- Lower-number ports are currently not supported on foundrypf. We recommend running
  applications on higher-number ports.
- Foundry does not charge for ingress, egress, or network bandwidth
- Persistent storage provides a more reliable solution for storing critical, long-lived
  data
- File shares are currently in private preview and requires a quota to be added to
  your account.
- File shares provide convenient, high-performance file storage for your instances.
- File shares selected on instance creation are automatically mounted to your instances
  as a directory under `/mnt`.
- Block storage requires a quota to be added to your account.
- Currently, each block storage disk has a maximum size of 15TB.
- For existing instances, you can attach/detach storage volumes when the instances
  are in a Paused state.
- Hosted Kubernetes clusters are currently in private preview. Please reach out to
  support@mlfoundry.com if you would like access.
- Foundry provides a long-lived control plane instance which hosts the Kubernetes
  API server.
- Each instance comes with its own ephemeral storage, usually with NVMe SSD.
- This storage will exist until the instance has been terminated or pre-empted.
- There is no cost to use the ephemeral storage.
- Ephemeral storage is automatically mounted at /mnt/local.
- User permissions are based on their project access.
- Paying by card is subject to a 2.9% fee; ACH payments do not incur any additional
  fee.
- You can view the remaining credits on your account under Settings > Credits.
- If you have any security concerns (e.g, vulnerability, potential breach), please
  email security@mlfoundry.com.
errors:
- 'LIMIT_PRICE_EXCEEDED: Your bid limit price is too low for allocation.'
- 'INSUFFICIENT_CAPACITY: Not enough capacity available to fulfill your request.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- If you do not see the Storage tab in the main navigation area, please reach out
  to be whitelisted for this feature.
- '401 Unauthorized: Recheck API key'
- '422: Validation Error'
- '401: Invalid credentials'
- '400: Invalid request parameters'
- '404: API key not found'
- '401 Unauthorized: Recheck API key or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.mlfoundry.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
