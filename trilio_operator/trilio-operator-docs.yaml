resources:
- name: TrilioVaultManager
  endpoint:
    path: /kubernetes/triliovaultmanager
    method: GET
    data_selector: records
    params: {}
- name: sample-schedule
  endpoint:
    path: triliovault.trilio.io/v1/policy/sample-schedule
    method: POST
    data_selector: scheduleConfig.schedule
    params: {}
- name: sample-retention
  endpoint:
    path: triliovault.trilio.io/v1/policy/sample-retention
    method: POST
    data_selector: retentionConfig
    params: {}
- name: sample-backupplan
  endpoint:
    path: triliovault.trilio.io/v1/backupplan/sample-backupplan
    method: POST
    data_selector: backupConfig
    params: {}
- name: VolumeSnapshot
  endpoint:
    path: /snapshot.storage.k8s.io/v1/volumesnapshots
    method: GET
    data_selector: volumesnapshots
    params: {}
- name: VolumeSnapshotContent
  endpoint:
    path: /snapshot.storage.k8s.io/v1/volumesnapshotcontents
    method: GET
    data_selector: volumesnapshotcontents
    params: {}
- name: VolumeSnapshotClass
  endpoint:
    path: /snapshot.storage.k8s.io/v1/volumesnapshotclasses
    method: GET
    data_selector: volumesnapshotclasses
    params: {}
- name: triliovault-manager
  endpoint:
    path: /triliovault-manager
    method: GET
    data_selector: resources
    params: {}
- name: policy
  endpoint:
    path: /triliovault.trilio.io/v1/policy
    method: POST
    data_selector: metadata.name
- name: backupplan
  endpoint:
    path: /triliovault.trilio.io/v1/backupplan
    method: POST
    data_selector: metadata.name
- name: backup
  endpoint:
    path: /v1/backup
    method: POST
    data_selector: backup
    params:
      backupPlan:
        name: sample-backupplan
        namespace: default
- name: snapshot
  endpoint:
    path: /v1/snapshot
    method: POST
    data_selector: snapshot
    params:
      backupPlan:
        name: sample-backupplan
        namespace: default
- name: restore
  endpoint:
    path: /v1/restore
    method: POST
    data_selector: restore
    params:
      source:
        type: Backup
        backup:
          name: sample-backup
          namespace: default
- name: triliovault-manager
  endpoint:
    path: /triliovaultmanagers.triliovault.trilio.io
    method: GET
    data_selector: items
- name: Policy
  endpoint:
    path: /triliovault.trilio.io/v1/Policy
    method: POST
    data_selector: items
- name: BackupPlan
  endpoint:
    path: /triliovault.trilio.io/v1/BackupPlan
    method: POST
    data_selector: items
- name: policy_schedule
  endpoint:
    path: /triliovault.trilio.io/v1/sample-schedule
    method: POST
    data_selector: schedule
    params: {}
- name: policy_retention
  endpoint:
    path: /triliovault.trilio.io/v1/sample-retention
    method: POST
    data_selector: retentionConfig
    params: {}
- name: backup_plan
  endpoint:
    path: /triliovault.trilio.io/v1/sample-backupplan
    method: POST
    data_selector: backupConfig
    params: {}
- name: backup
  endpoint:
    path: /api/v1/Backup
    method: POST
    data_selector: backup
    params: {}
- name: snapshot
  endpoint:
    path: /api/v1/Snapshot
    method: POST
    data_selector: snapshot
    params: {}
- name: restore
  endpoint:
    path: /api/v1/Restore
    method: POST
    data_selector: restore
    params: {}
- name: BackupPlan
  endpoint:
    path: /triliovault/trilio.io/v1/BackupPlan
    method: POST
    data_selector: spec
    params: {}
- name: Policy
  endpoint:
    path: /triliovault/trilio.io/v1/Policy
    method: POST
    data_selector: spec
    params: {}
- name: backup
  endpoint:
    path: /api/v1/backup
    method: POST
    data_selector: metadata
    params: {}
- name: snapshot
  endpoint:
    path: /api/v1/snapshot
    method: POST
    data_selector: metadata
    params: {}
- name: restore
  endpoint:
    path: /api/v1/restore
    method: POST
    data_selector: metadata
    params: {}
- name: BackupPlan
  endpoint:
    path: /api/v1/backupplans
    method: POST
    data_selector: backupPlans
    params: {}
- name: Target
  endpoint:
    path: /api/v1/targets
    method: POST
    data_selector: targets
    params: {}
- name: Policy
  endpoint:
    path: /api/v1/policies
    method: POST
    data_selector: policies
    params: {}
- name: backup
  endpoint:
    path: /v1/backup
    method: POST
    data_selector: metadata.name
    params: {}
- name: snapshot
  endpoint:
    path: /v1/snapshot
    method: POST
    data_selector: metadata.name
    params: {}
- name: restore
  endpoint:
    path: /v1/restore
    method: POST
    data_selector: metadata.name
    params: {}
- name: Antrea Networking
  endpoint:
    path: /antrea/config
    method: PATCH
    data_selector: antrea.config.featureGates.NetworkPolicyStats
    params: {}
- name: VMware CSI Driver
  endpoint:
    path: /vsphere-csi
    method: PATCH
    data_selector: vsphere-csi
    params: {}
- name: Trilio Helm Chart
  endpoint:
    path: /trilio-vault-operator
    method: POST
    data_selector: helm
    params: {}
- name: Getting Started with Trilio on Red Hat OpenShift (OCP)
  endpoint:
    path: /kubernetes/getting-started/red-hat-openshift
    method: GET
- name: Getting Started with Trilio on Upstream Kubernetes (K8S)
  endpoint:
    path: /kubernetes/getting-started/upstream-kubernetes
    method: GET
- name: Getting Started with Trilio for AWS Elastic Kubernetes Services (EKS)
  endpoint:
    path: /kubernetes/getting-started/aws-eks
    method: GET
- name: Getting Started with Trilio for Google Kubernetes Engine (GKE)
  endpoint:
    path: /kubernetes/getting-started/eks-aks-gke
    method: GET
- name: Getting Started with Trilio on VMware Tanzu Kubernetes Grid (TKG)
  endpoint:
    path: /kubernetes/getting-started/vmware-tanzu-kubernetes-grid-tkg
    method: GET
- name: Rancher Deployments
  endpoint:
    path: /kubernetes/getting-started/install-and-configure/rancher-deployments
    method: GET
- name: Azure Cloud AKS
  endpoint:
    path: /kubernetes/getting-started/install-and-configure/azure-cloud-aks
    method: GET
- name: Digital Ocean Cloud
  endpoint:
    path: /kubernetes/getting-started/install-and-configure/digital-ocean-cloud
    method: GET
- name: Mirantis Kubernetes Engine
  endpoint:
    path: /kubernetes/getting-started/install-and-configure/mirantis-kubernetes-engine
    method: GET
- name: IBM Cloud
  endpoint:
    path: /kubernetes/getting-started/install-and-configure/ibm-cloud
    method: GET
- name: installer
  endpoint:
    path: /installer.tar.gz
    method: GET
- name: T4K Application
  endpoint:
    path: /kubernetes/reference-guides/tvk-pod-job-capabilities
    method: GET
- name: Backup
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#backup
    method: GET
- name: BackupPlan
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#backupplan
    method: GET
- name: ClusterBackup
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#clusterbackup
    method: GET
- name: ClusterBackupPlan
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#clusterbackupplan
    method: GET
- name: ClusterRestore
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#clusterrestore
    method: GET
- name: ClusterSnapshot
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#clustersnapshot
    method: GET
- name: ConsistentSet
  endpoint:
    path: /consistentsets
    method: GET
    data_selector: items
- name: ContinuousRestorePlan
  endpoint:
    path: /continuousrestoreplans
    method: GET
    data_selector: items
- name: FileRecoveryVM
  endpoint:
    path: /filerecoveryvms
    method: GET
    data_selector: items
- name: Hook
  endpoint:
    path: /hooks
    method: GET
    data_selector: items
- name: License
  endpoint:
    path: /licenses
    method: GET
    data_selector: items
- name: Policy
  endpoint:
    path: /policies
    method: GET
    data_selector: items
- name: Restore
  endpoint:
    path: /restores
    method: GET
    data_selector: items
- name: Snapshot
  endpoint:
    path: /snapshots
    method: GET
    data_selector: items
- name: Target
  endpoint:
    path: /targets
    method: GET
    data_selector: items
- name: BackupSchedulePolicy
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#backupconfig
    method: GET
    data_selector: BackupSchedulePolicy
    params: {}
- name: BackupSnapshotStats
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#backupstatus
    method: GET
    data_selector: BackupSnapshotStats
    params: {}
- name: BackupSpec
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#backup
    method: GET
    data_selector: BackupSpec
    params:
      incremental: type
- name: BackupStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#backup
    method: GET
    data_selector: BackupStatus
    params: {}
- name: ContinuousRestoreStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#continuousrestorestatus
    method: GET
    data_selector: records
- name: Crons
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#crons
    method: GET
    data_selector: records
- name: Custom
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#custom
    method: GET
    data_selector: records
- name: CustomHookStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#customhookstatus
    method: GET
    data_selector: records
- name: CustomSelector
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#customselector
    method: GET
    data_selector: records
- name: CustomTransform
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#customtransform
    method: GET
    data_selector: records
- name: DataSnapshot
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#datasnapshot
    method: GET
    data_selector: records
- name: FileRecoveryVMCondition
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#filerecoveryvmcondition
    method: GET
    data_selector: records
- name: FileRecoveryVMPhase
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#filerecoveryvmphase
    method: GET
    data_selector: records
- name: FileRecoveryVMSpec
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#filerecoveryvmspec
    method: GET
    data_selector: records
- name: FileRecoveryVMStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#filerecoveryvmstatus
    method: GET
    data_selector: records
- name: Helm
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#helm
    method: GET
    data_selector: records
- name: HookComponentStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#hookcomponentstatus
    method: GET
    data_selector: records
- name: olmResources
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#olmresource
    method: GET
    data_selector: resources
    params: {}
- name: ObjectStoreCredentials
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#targetspec
    method: GET
    data_selector: credentials
    params: {}
- name: RestoreConfig
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restoreconfig
    method: GET
- name: RestoreCustom
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restorecustom
    method: GET
- name: RestoreFlags
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restoreflags
    method: GET
- name: RestoreHelm
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restorehelm
    method: GET
- name: RestoreImage
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restoreimage
    method: GET
- name: RestoreOperator
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restoreoperator
    method: GET
- name: RestorePhase
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restorephase
    method: GET
- name: RestoreSource
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restoresource
    method: GET
- name: RestoreSpec
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restorespec
    method: GET
- name: RestoreStats
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restorestats
    method: GET
- name: RestoreStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restorestatus
    method: GET
- name: RestoreSummary
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#restoresummary
    method: GET
- name: RetentionConfig
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#retentionconfig
    method: GET
- name: SSLCert
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#sslcert
    method: GET
- name: ScanInstance
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#scaninstance
    method: GET
- name: ScannerStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#scannerstatus
    method: GET
- name: SecurityScanConfig
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#securityscanconfig
    method: GET
    data_selector: schedule
    params: {}
- name: SecurityScanConfigInfo
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#securityscanconfiginfo
    method: GET
    data_selector: securityServiceInstances
    params: {}
- name: SecurityScanStatus
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#securityscanstatus
    method: GET
    data_selector: securityEnabled
    params: {}
- name: SnapshotConfig
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#snapshotconfig
    method: GET
    data_selector: target
    params: {}
- name: SnapshotInfo
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#snapshotinfo
    method: GET
    data_selector: snapshot
    params: {}
- name: TargetInfo
  endpoint:
    path: /kubernetes/reference-guides/custom-resource-definition-application#targetinfo
    method: GET
    data_selector: target
    params: {}
- name: S3 Policy
  endpoint:
    path: /kubernetes/advanced-configuration/aws-s3-target-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: Target Validator
  cpu_request: 100
  memory_request: 500 Mi
- name: Metadata Snapshot
  cpu_request: 100
  memory_request: 500 Mi
- name: Quiesce
  cpu_request: 100
  memory_request: 500 Mi
- name: Unquiesce
  cpu_request: 100
  memory_request: 500 Mi
- name: Metadata Upload
  cpu_request: 100
  memory_request: 500 Mi
- name: Retention
  cpu_request: 100
  memory_request: 500 Mi
- name: Restore Validation
  cpu_request: 100
  memory_request: 500 Mi
- name: Restore Metadata
  cpu_request: 100
  memory_request: 500 Mi
- name: Backup Cleaner
  cpu_request: 100
  memory_request: 500 Mi
- name: Datamover Upload
  cpu_request: 100
  memory_request: 800 Mi
- name: Datamover Restore
  cpu_request: 100
  memory_request: 800 Mi
- name: Target Browser
  cpu_request: 100
  memory_request: 800 Mi
- name: Dex
  cpu_request: 10
  memory_request: 10 Mi
- name: Web
  cpu_request: 10
  memory_request: 10 Mi
- name: Ingress-controller
  cpu_request: 10
  memory_request: 10 Mi
- name: Backup CronJob
  cpu_request: 10
  memory_request: 10 Mi
- name: Webhook
  cpu_request: 700
  memory_request: 512Mi
- name: Exporter
  cpu_request: 50
  memory_request: 512Mi
- name: Resource Cleaner
  cpu_request: 400
  memory_request: 512Mi
- name: Web-backend
  cpu_request: 400
  memory_request: 1024 Mi
- name: Control-plane
  cpu_request: 400
  memory_request: 512 Mi
- name: Continuous restore Syncer
  cpu_request: 100
  memory_request: 500Mi
- name: Continuous restore Manager
  cpu_request: 100
  memory_request: 500Mi
- name: Continuous restore Watcher
  cpu_request: 100
  memory_request: 500Mi
- name: Continuous restore Service
  cpu_request: 100
  memory_request: 500Mi
- name: Continuous restore PreconsistentSetJob
  cpu_request: 100
  memory_request: 500Mi
- name: Continuous restore Data Restore
  cpu_request: 100
  memory_request: 800Mi
- name: InstanceName
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: InstanceName
    params: {}
- name: LogLevel
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: logLevel
    params: {}
- name: Pause Schedule Backups
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: Pause Schedule Backups
    params: {}
- name: Job Resource Requirements
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: Job Resource Requirements
    params: {}
- name: Scheduling Configuration
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: Scheduling Configuration
    params: {}
- name: Application Scope
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: Application Scope
    params: {}
- name: Ingress Configuration
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: Ingress Configuration
    params: {}
- name: CSI Configuration
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: CSI Configuration
    params: {}
- name: Event Target Configuration
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: Event Target Configuration
    params: {}
- name: event-target
  endpoint:
    path: /event-target/livenessProbe
    method: GET
    data_selector: livenessProbe
    params: {}
- name: Helm Releases
  endpoint:
    path: /kubernetes/support/helm-releases
    method: GET
    data_selector: helm_releases
    params: {}
- name: OLM operators
  endpoint:
    path: /kubernetes/olm/operators
    method: GET
    data_selector: operators
    params: {}
- name: Backup Plan
  endpoint:
    path: /kubernetes/backup/plans
    method: POST
    data_selector: backupPlans
    params: {}
- name: Backup Details
  endpoint:
    path: /kubernetes/t4k-concepts/backup-and-restore-process
    method: GET
    data_selector: backup_process
    params: {}
- name: Restore Details
  endpoint:
    path: /kubernetes/t4k-concepts/continuous-restore
    method: GET
    data_selector: restore_process
    params: {}
- name: botkube-configmap
  endpoint:
    path: /configmap/botkube-configmap
    method: GET
    data_selector: data.resources
    params: {}
- name: elasticsearch_cluster
  endpoint:
    path: /kubernetes/elasticsearch
    method: POST
    data_selector: resources
    params: {}
- name: kibana_dashboard
  endpoint:
    path: /kubernetes/kibana
    method: POST
    data_selector: resources
    params: {}
- name: triliovault-for-kubernetes-management-console
  endpoint:
    path: /kubernetes/ecosystem/rancher-navigation-links-for-triliovault-management-console
    method: GET
    data_selector: navLink
    params: {}
- name: tvk-mgmt-console-image
  endpoint:
    path: /kubernetes/ecosystem/rancher-navigation-links-for-triliovault-management-console
    method: GET
    data_selector: navLink
    params: {}
- name: backup
  endpoint:
    path: /backup
    method: POST
    data_selector: backup_details
- name: restore
  endpoint:
    path: /restore
    method: POST
    data_selector: restore_details
- name: backup
  endpoint:
    path: /backup
    method: POST
    data_selector: backup_details
    params:
      database_instance_name: instance_name
      user_credentials: user_credentials
      zone_region: zone_region
      location: location
- name: restore
  endpoint:
    path: /restore
    method: POST
    data_selector: restore_details
    params:
      backup_plan: backupPlan
      backup_name: backup_name
      database_instance_name: instance_name
      user_credentials: user_credentials
      zone_region: zone_region
      vpc_security_group: vpc_security_group
- name: backupPlan
  endpoint:
    path: /kubernetes/apis/triliovault.trilio.io/v1/backupplans
    method: POST
    data_selector: backupPlan
    params: {}
- name: hook
  endpoint:
    path: /kubernetes/apis/triliovault.trilio.io/v1/hooks
    method: POST
    data_selector: hook
    params: {}
- name: db_snapshots
  endpoint:
    path: /
    method: GET
    data_selector: DBSnapshots
    params:
      snapshot_type: manual
- name: restore
  endpoint:
    path: /restore
    method: POST
    data_selector: restoreDetails
    params: {}
- name: aws-s3-secret
  endpoint:
    path: /api/v1/namespaces/default/secrets/aws-s3-secret
    method: POST
    data_selector: stringData
    params: {}
- name: aws-s3-configmap
  endpoint:
    path: /api/v1/namespaces/default/configmaps/aws-s3-configmap
    method: POST
    data_selector: data
    params: {}
- name: tvk-quickstart
  endpoint:
    path: /kubernetes/krew-plugins/tvk-quick-start
    method: GET
    data_selector: ''
    params: {}
- name: input_config
  endpoint:
    path: /input-config
    method: POST
- name: preflight_checks
  endpoint:
    path: /kubernetes/preflight/checks
    method: GET
    data_selector: checks
- name: cleanup_checks
  endpoint:
    path: /kubernetes/preflight/cleanup
    method: POST
    data_selector: cleanup
- name: run
  endpoint:
    path: /kubectl/tvk-preflight/run
    method: GET
    data_selector: preflight_checks
    params:
      storage-class: <storageclass name>
      volume-snapshot-class: <volumeSnapshotClass name>
      local-registry: <local registry file path/name>
      image-pull-secret: <image pull secret name>
      service-account: <service account name>
      cleanup-on-failure: 'false'
      requests: cpu=250m,memory=64Mi
      limits: cpu=500m,memory=128Mi
      pvc-storage-request: 1Gi
      node-selector: <label-key1>=<label-value1>,<label-key2>=<label-value2>
- name: cleanup
  endpoint:
    path: /kubectl/tvk-preflight/cleanup
    method: GET
    data_selector: cleanup_resources
    params:
      uid: <generated UID of the preflight check>
- name: CustomResourceDefinition
  endpoint:
    path: CustomResourceDefinition
    method: GET
    data_selector: resources
    params: {}
- name: VolumeSnapshots
  endpoint:
    path: VolumeSnapshots
    method: GET
    data_selector: resources
    params: {}
- name: VolumeSnapshotClass
  endpoint:
    path: VolumeSnapshotClass
    method: GET
    data_selector: resources
    params: {}
- name: StorageClass
  endpoint:
    path: StorageClass
    method: GET
    data_selector: resources
    params: {}
- name: Jobs
  endpoint:
    path: Jobs
    method: GET
    data_selector: resources
    params: {}
- name: Pods
  endpoint:
    path: Pods
    method: GET
    data_selector: resources
    params: {}
- name: DaemonSets
  endpoint:
    path: DaemonSets
    method: GET
    data_selector: resources
    params: {}
- name: Deployments
  endpoint:
    path: Deployments
    method: GET
    data_selector: resources
    params: {}
- name: ReplicaSets
  endpoint:
    path: ReplicaSets
    method: GET
    data_selector: resources
    params: {}
- name: StatefulSet
  endpoint:
    path: StatefulSet
    method: GET
    data_selector: resources
    params: {}
- name: PersistentVolumeClaims
  endpoint:
    path: PersistentVolumeClaims
    method: GET
    data_selector: resources
    params: {}
- name: PersistentVolumes
  endpoint:
    path: PersistentVolumes
    method: GET
    data_selector: resources
    params: {}
- name: Services
  endpoint:
    path: Services
    method: GET
    data_selector: resources
    params: {}
- name: ServiceAccounts
  endpoint:
    path: ServiceAccounts
    method: GET
    data_selector: resources
    params: {}
- name: Endpoints
  endpoint:
    path: Endpoints
    method: GET
    data_selector: resources
    params: {}
- name: Ingress
  endpoint:
    path: Ingress
    method: GET
    data_selector: resources
    params: {}
- name: Events
  endpoint:
    path: Events
    method: GET
    data_selector: resources
    params: {}
- name: ConfigMap
  endpoint:
    path: ConfigMap
    method: GET
    data_selector: resources
    params: {}
- name: LimitRange
  endpoint:
    path: LimitRange
    method: GET
    data_selector: resources
    params: {}
- name: ResourceQuota
  endpoint:
    path: ResourceQuota
    method: GET
    data_selector: resources
    params: {}
- name: Role
  endpoint:
    path: Role
    method: GET
    data_selector: resources
    params: {}
- name: RoleBinding
  endpoint:
    path: RoleBinding
    method: GET
    data_selector: resources
    params: {}
- name: Namespaces
  endpoint:
    path: Namespaces
    method: GET
    data_selector: resources
    params: {}
- name: Nodes
  endpoint:
    path: Nodes
    method: GET
    data_selector: resources
    params: {}
- name: ClusterRole
  endpoint:
    path: ClusterRole
    method: GET
    data_selector: resources
    params: {}
- name: ClusterRoleBinding
  endpoint:
    path: ClusterRoleBinding
    method: GET
    data_selector: resources
    params: {}
- name: MutatingWebhookConfiguration
  endpoint:
    path: MutatingWebhookConfiguration
    method: GET
    data_selector: resources
    params: {}
- name: ValidatingWebhookConfiguration
  endpoint:
    path: ValidatingWebhookConfiguration
    method: GET
    data_selector: resources
    params: {}
- name: PersistentVolume
  endpoint:
    path: PersistentVolume
    method: GET
    data_selector: resources
    params: {}
- name: IngressClass
  endpoint:
    path: IngressClass
    method: GET
    data_selector: resources
    params: {}
- name: tvk-cleanup
  endpoint:
    path: /kubernetes/krew-plugins/tvk-cleanup
    method: GET
    data_selector: options
    params: {}
- name: Amazon Web Services EBS CSI Driver
  endpoint:
    path: https://github.com/kubernetes-sigs/aws-ebs-csi-driver
    method: GET
- name: Google Cloud Platform GCE CSI Driver
  endpoint:
    path: https://github.com/kubernetes-sigs/gcp-compute-persistent-disk-csi-driver
    method: GET
- name: Ceph CSI through Rook Operator
  endpoint:
    path: https://rook.io/docs/rook/latest/Getting-Started/quickstart/
    method: GET
- name: k8s-triliovault-manifest
  endpoint:
    path: /operators.coreos.com/v1alpha1/catalogsource
    method: GET
    data_selector: catalogSource
    params:
      namespace: openshift-marketplace
- name: object_storage_container
  endpoint:
    path: /object_storage
    method: GET
    data_selector: containers
    params: {}
- name: OpenShift Virtualization Operator
  endpoint:
    path: /kubernetes/getting-started/red-hat-openshift
    method: GET
    data_selector: instructions
    params: {}
- name: OpenShift Data Foundation Operator
  endpoint:
    path: /kubernetes/getting-started/red-hat-openshift
    method: GET
    data_selector: instructions
    params: {}
- name: k8s-triliovault-config
  endpoint:
    path: /kubernetes/advanced-configuration/configuring-default-tvk-configuration
    method: GET
    data_selector: resources
    params: {}
- name: BackupPlan
  endpoint:
    path: /kubernetes/backup-plan
    method: GET
    data_selector: backup_plan_data
- name: ClusterBackupPlan
  endpoint:
    path: /kubernetes/cluster-backup-plan
    method: GET
    data_selector: cluster_backup_plan_data
notes:
- 'Trilio supports two Operator deployment methods: Helm based Operator and Operator
  Lifecycle Management Operator.'
- Trilio supports multi-cloud management (MCM) by allowing users to manage multiple
  T4K instances via its management console.
- Trilio for OpenShift is a cloud-native backup and restore application.
- Trilio utilizes Control Plane and Data Plane controllers to carry out the backup
  and restore operations defined by the associated CRDs.
- Trilio for OpenShift requires a compatible Container Storage Interface (CSI) driver
  that provides the Snapshot feature.
- Be sure to only install v1 version of VolumeSnapshot CRDs.
- Trilio for OpenShift automatically picks up the proxy settings defined for the OpenShift
  cluster in the proxy/cluster CR.
- User can specify different retention and schedule policies under backupConfig and
  snapshotConfig.
- 'The exporter pod annotations are as follows: prometheus.io/scrape: Set to true
  by default; if set to false, this annotation will exclude the pod from the scraping
  process. prometheus.io/path: /metrics, is the default setting prometheus.io/port:
  8080, is the default annotation.'
- The Trilio installation namespace must have the label cluster-monitoring set to
  'true'.
- Trilio for Kubernetes requires a compatible Container Storage Interface (CSI) driver
  that provides the Snapshot feature.
- Be sure to only install v1 version of VolumeSnapshot CRDs
- User can configure resources for all components and can configure service type and
  host for the ingress-controller
- If using an external ingress controller, you must set ingress-controller.enabled=false
- Trilio for Kubernetes is a cloud-native backup and restore application.
- Starting from T4K 5.0.3, the admission webhook server is integrated with the control
  plane.
- Target in the backupConfig and snapshotConfig needs to be the same. User can specify
  different retention and schedule policies under backupConfig and snapshotConfig.
- T4K user interface facilitates authentication through kubeconfig files
- Cloud-specific support to manage and generate tokens from credential files
- In some Kubernetes cluster distributions, kubeconfig might include cloud-specific
  exec actions or auth-provider configurations
- Trilio is a cloud-native application for Kubernetes, therefore all operations are
  managed with CRDs (Custom Resource Definitions).
- To add a GCP storage bucket as a backup target within T4K, specific bucket permissions
  are required.
- 'Create a custom role with the following required permissions: storage.objects.create,
  storage.objects.delete, storage.objects.get, storage.objects.list, storage.objects.update.'
- If a service account does not have access key and secret key, follow the guide to
  generate a new access key and secret key which will be required while creating target.
- A Restore CR references a backup object created from a Backup CR.
- In a Migration scenario, ensure backup/snapshot location is specified.
- Ensure that the selected storage driver is a supported CSI driver when the volumesnapshotclass
  and storageclass are utilized.
- Ensure VolumeSnapshot CRDs are installed before T4K installation.
- NetworkPolicyStats must be enabled for Antrea configuration.
- Trilio for Kubernetes must be presented with a valid license to operate.
- A license is issued as valid for a specified duration of time.
- The wildcard certificates provided inside the certs directory has an expiry.
- You can download the traefik certs and replace them inside the folder if they appear
  to be expired.
- You can also pass your certs with --cert-file, --key-file, and --registry-host options.
- Validate the certs with openssl x509 -in <cert-name.crt> -text -noout
- Installation requires GNU-based getopt package and iproute2mac package for MacOS
  users.
- Wildcard certificates provided inside the certs directory have an expiry.
- Complete cleanup of T4K will remove all of T4K's custom resources - backup, restore,
  target etc along with the application itself.
- olmResources represents the resources installed by the subscription
- dependentSubscription represents if current subscription has any dependent subscription.
- installedGVKs is GVKs installed by particular subscription/operator.
- To add AWS S3 (object storage) as a Target within T4K, users need specific access
  permissions on the bucket.
- Privileged containers are required for both object storage and NFS storage.
- If T4K has been installed at a namespace level, then a minimum of read access over
  the namespace is required to access the management console.
- Some Kubernetes clusters may contain cloud-specific exec action or use auth-provider
  configuration to fetch the authentication token within the kubeconfig file.
- Pods in bold run continuously. Other pods only run, and not in parallel, when a
  backup or restore operation is triggered.
- Target Browser pod will run as long as a target browsing feature is enabled.
- Default timezone is Etc/UTC
- Default logLevel is Info
- Default applicationScope is Namespaced
- Trilio enables the recovery of your running applications like it never even happened.
- Trilio restores from your backup target, directly replacing the application as though
  the applications life cycle had never been interrupted.
- Namespace backup doesn't support the OLM backups in its native form, so to backup
  OLM operators user has to define application level backupplan.
- Trilio for Kubernetes is available via the Operator Lifecycle Manager (OLM) framework.
- Trilio does not support in-tree storage drivers or flex volumes.
- Minimum of Kubernetes 1.12 is required for CSI snapshots.
- Trilio relies on CSI snapshot functionality to capture a point-in-time copy of the
  volume data.
- QCOW2 images are sparsely friendly.
- Trilio supports forever incrementals. Incremental backups are efficient from both
  network bandwidth usage perspective and data storage perspective.
- A Synthetic full backup is the process of creating full backup image at the backup
  target by combining one or more backup images.
- The retention policy for each PV still follows the algorithm based on the backup
  policy chosen at the time of backup job creation.
- Unlike NFS or block storage, object storage does not support file system POSIX APIs
  for accessing objects.
- The default value is set to 32 MB and is not configurable.
- Trilio uses qemu-img command to convert disk images to qcow2 and uploads to s3
- Requires BOT Access token after installation
- Handles events for create, delete, and error operations
- User can change spec.nodeSets[0].count to 1 or more than 1. This parameter defines
  the number of pods deployed in the Elasticsearch cluster.
- If your Kubernetes cluster does not have at least 2GB of free memory then the pod
  will be stuck in Pending state.
- User can change spec.count from 1 to more than 1. This parameter defines the number
  of pods deployed for the Kibana dashboard.
- The workflow run is made up of Backup and Restore jobs that run sequentially.
- Restoring with a different RDS database name requires application updates.
- Applications on the k8s cluster are configured with specific Database instance
- User provides all the information required for Database snapshot deletion (on-demand)
- All the requirements for database snapshot deletion are provided such as user access
  for backup, zones/regions allowed for backups, allotted space, Database instance
  name/identifier, location etc.
- Requires OpenShift 4.8 or later.
- Trilio for Kubernetes must be installed to use this policy.
- Policy shall be used on all clusters with labels vendor=OpenShift and protected-by=triliovault.
- This tool does not work for air-gapped environments.
- Linux or macOS are supported. Windows is not supported at this time.
- Target type 'Readymade_Minio' requires 4GB per node, else the target creation will
  fail.
- Preflight plugin checks prerequisites before installing Trilio application in a
  Kubernetes cluster.
- Ensure kubectl utility is present on system
- Ensure kubectl is pointed to k8s cluster (i.e can access the remote target cluster)
- Ensure helm utility is present on system and pointed to the cluster
- helmVersion=~v3 is needed on the cluster
- Ensure minimum Kubernetes version >= 1.18.x
- Cleans up all the Trilio Custom Resources, Trilio Manager application and CRDs from
  all the namespaces
- Make sure other artifacts of the Trilio deployment are in good shape.
- 'Management Console not accessible using NodePort: Check Firewall Rules for the
  Kubernetes cluster nodes.'
- 'Target Creation Failure: Possible reasons for the target marked Unavailable could
  be not having enough permissions or lack of network connectivity.'
- 'If a Trilio operation is failing with an error Internal error occurred: failed
  or service ''k8s-triliovault-webhook-service'' not found, this might be due to the
  installation of T4K in multiple Namespaces.'
- Trilio has the ability to coexist with a service mesh if it supports exclusion of
  sidecar init containers from pods based on labeling.
- Trial License Users will have issues handled on a best-effort basis.
- Creating custom catalogsource in OperatorHub for T4K
- Validate the catalogsource was successfully installed by running the following command
  `oc get catalogSource k8s-triliovault-manifest -n openshift-marketplace`
- Requires creation of an Object Storage bucket/container on OVH Public Cloud.
- Generate Access key and Secret key using openstack ec2 credentials list.
- User need to allow the Insecure Connection to the T4K UI running on HTTP protocol
- 'Blocked: Mixed Content error occurs when connecting clusters with different protocols'
- T4K UI authentication does not support the kubeconfig which contain the exec section.
- 'Minimum Supported versions to run a VM and perform backup and restore of VM: Red
  Hat Openshift Container Platform version 4.11 and Red Hat OpenShift Virtualization
  version 4.11.'
- Run the pre-flight checks to validate that all prerequisites for installing Trilio
  for Kubernetes are met.
- Do not leave the Trilio UI behind port-forward; use an ingress with HTTPS.
- It is recommended to use PriorityClass to control scheduling preferences and ensure
  application workloads run smoothly without disruption.
- Avoid backing up the entire cluster in a single backup plan. Instead, create multiple
  backup plans based on namespaces or individual applications.
errors:
- 'Operator pod not starting: Check Pod Security Policy configuration.'
- '401 Unauthorized: Recheck user and pass for existing container registry.'
- Installation errors may occur if the BotKube application is not properly authorized
  in Slack
- 'DB_INSTANCE_NOT_FOUND: Verify the DB instance identifier.'
- 'INVALID_PARAMETER_VALUE: Check provided parameters.'
auth_info:
  mentioned_objects:
  - KubeConfig
  - Dex
  - RBAC
  - TrilioVaultManager
  - OpenID Connect
  - Active Directory/LDAPS
  - OpenShift OAuth
client:
  base_url: https://docs.trilio.io/kubernetes
  headers:
    Accept: application/json
source_metadata: null
