resources:
- name: items
  endpoint:
    path: /api/items
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Articles
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Articles.items
- name: Article
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Article
- name: content_items
  endpoint:
    path: /api/content-items
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: resource_name
  endpoint:
    path: /api/resource/path
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: content_item
  endpoint:
    path: /content/items
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: environment
  endpoint:
    path: /environments
    method: GET
    data_selector: environments
- name: content_item
  endpoint:
    path: /api/v1/content-items
    method: GET
    data_selector: data
- name: Publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: Assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_management
  endpoint:
    path: /project-setup/managing-users
    method: GET
    data_selector: users
    params: {}
- name: user_roles
  endpoint:
    path: /project-setup/managing-roles-and-permissions
    method: GET
    data_selector: roles
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_items
  endpoint:
    path: /api/content-items
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: content_item
  endpoint:
    path: /api/content_item
    method: GET
    data_selector: items
- name: asset
  endpoint:
    path: /api/asset
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: Page
  endpoint:
    path: /content-modeling/field-types
    method: GET
    data_selector: fields
- name: content_items
  endpoint:
    path: /api/content-items
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
- name: publications
  endpoint:
    path: /api/v1/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: App config
  endpoint:
    path: /content-modeling/app-config
    method: GET
    data_selector: config
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_items
  endpoint:
    path: /api/content/items
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: content_items
  endpoint:
    path: /api/v1/content-items
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: enumeration
  endpoint:
    path: /api/enumerations
    method: GET
    data_selector: enumerations
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /prepr/feed
    method: GET
    data_selector: items
    params:
      changed_since: timestamp
      skip: offset
      limit: max_items
- name: filters
  endpoint:
    path: /prepr/feed
    method: GET
    data_selector: filters
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /
    method: POST
    data_selector: data.Posts.items
    params: {}
- name: post_by_slug
  endpoint:
    path: /
    method: POST
    data_selector: data.Post
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: webhook_changed_content
  endpoint:
    path: /api/post-updated
    method: POST
    data_selector: changed_content
    params:
      event: content-item.changed
      model: Post
- name: webhook_published_content
  endpoint:
    path: /api/post-published
    method: POST
    data_selector: published_content
    params:
      event: content-item.published
      model: Post
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: blog_posts
  endpoint:
    path: /api/v1/blog_posts
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /queries/get-posts
    method: POST
    data_selector: Posts.items
    params: {}
- name: post_by_slug
  endpoint:
    path: /queries/get-post-by-slug
    method: POST
    data_selector: Post
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: blog_posts
  endpoint:
    path: /v1/blog/posts
    method: GET
    data_selector: data
    params: {}
- name: comments
  endpoint:
    path: /v1/comments
    method: GET
    data_selector: data
    params: {}
- name: prepr
  endpoint:
    path: PREPR_ENDPOINT
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.posts
    params: {}
- name: posts
  endpoint:
    path: /app/Queries/get-posts.graphql
    method: POST
    data_selector: data.Posts
    params: {}
- name: post_by_slug
  endpoint:
    path: /app/Queries/get-post-by-slug.graphql
    method: POST
    data_selector: data.Post
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /api/content-items
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: asset
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /
    method: POST
    data_selector: Posts.items
    params: {}
- name: post_by_slug
  endpoint:
    path: /
    method: POST
    data_selector: Post
    params:
      slug: slug
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: blog_posts
  endpoint:
    path: /v1/posts
    method: GET
    data_selector: data
    params: {}
- name: Posts
  endpoint:
    path: ''
    method: POST
    data_selector: data.Posts.items
    params: {}
- name: Post
  endpoint:
    path: ''
    method: POST
    data_selector: data.Post
    params:
      slug: slug
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: blog_posts
  endpoint:
    path: /api/v1/blog_posts
    method: GET
    data_selector: data
    params: {}
- name: Posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.prepr.Posts.items
- name: Post
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.prepr.Post
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: content_items
  endpoint:
    path: /api/v1/content-items
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.posts.items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: items
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: items
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Posts.items
- name: post_by_slug
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Post
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /api/content/items
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: blog_post
  endpoint:
    path: /api/v1/blog_post
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Posts
  endpoint:
    path: /
    method: POST
    data_selector: data.Posts.items
    params: {}
- name: Post
  endpoint:
    path: /
    method: POST
    data_selector: data.Post
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /api/content_item
    method: GET
    data_selector: items
- name: asset
  endpoint:
    path: /api/asset
    method: GET
    data_selector: assets
- name: posts
  endpoint:
    path: /v1/posts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: authors
  endpoint:
    path: /v1/authors
    method: GET
    data_selector: data
    params: {}
- name: Posts
  endpoint:
    path: /
    method: POST
    data_selector: data.Posts.items
- name: Post
  endpoint:
    path: /
    method: POST
    data_selector: data.Post
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /integrations/prepr-for-radio/customers
    method: GET
    data_selector: records
- name: content_items
  endpoint:
    path: /api/content/items
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
- name: artists_tracks
  endpoint:
    path: /artists-tracks
    method: GET
    data_selector: data
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: Redirect
  endpoint:
    path: /redirects
    method: GET
    data_selector: redirects
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: sitemap
  endpoint:
    path: /sitemap
    method: GET
    data_selector: urlset
    params: {}
- name: seo_metadata
  endpoint:
    path: /graphql-api
    method: POST
    data_selector: Pages.items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Articles.items
    params: {}
- name: content_items
  endpoint:
    path: /content/items
    method: GET
    data_selector: items
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: content
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: content_items
  endpoint:
    path: /v1/content-items
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params: {}
- name: content_item
  endpoint:
    path: /api/v1/content-items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
- name: content_items
  endpoint:
    path: /content-items
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: content_items
  endpoint:
    path: /content-items
    method: GET
    data_selector: records
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /mutation-api/assets-upload-update-and-destroy
    method: POST
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /content-management/managing-assets
    method: GET
    data_selector: assets
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /api/v1/events
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: events
  endpoint:
    path: /v1/events
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: event_data
- name: events
  endpoint:
    path: /api/v1/events
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: ''
    params: {}
- name: customer_data
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
    params: {}
- name: content_items
  endpoint:
    path: /v1/content
    method: GET
    data_selector: data
    params: {}
- name: customer_profiles
  endpoint:
    path: /api/customer_profiles
    method: GET
    data_selector: profiles
- name: customer_profiles
  endpoint:
    path: /segments/customers
    method: GET
    data_selector: customer_data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: content_items
  endpoint:
    path: /content/items
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: home_page
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Page
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /v1/articles
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
- name: page
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Page
    params:
      personalize: 'false'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_items
  endpoint:
    path: /api/v1/content-items
    method: GET
    data_selector: items
- name: recommendations
  endpoint:
    path: /v1/recommendations
    method: GET
    data_selector: data
    params: {}
- name: similar_items
  endpoint:
    path: /v1/similar-items
    method: GET
    data_selector: data
    params: {}
- name: popular_items
  endpoint:
    path: /v1/popular-items
    method: GET
    data_selector: data
    params: {}
- name: similar_articles
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Similar_Articles.items
    params:
      id: 0cbe2455-124c-4820-b2ac-dcc4261e150c
- name: popular_articles
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Popular_Articles.items
    params: {}
- name: people_also_viewed_articles
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.PeopleAlsoViewed_Articles.items
    params:
      id: 90276002-d628-4ba6-b3c8-f756c486b67b
- name: popular_articles
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Popular_Articles.items
    params:
      where:
        _publish_on_gt: '2021-01-01T00:00:00+00:00'
        categories:
          _slug_any:
          - ux-design
          - development
      limit: 3
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: sync_content
  endpoint:
    path: /publications/algolia/sync
    method: GET
    data_selector: model
    params:
      model:
        id: YOUR_MODEL_ID
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /resources/image
    method: GET
    data_selector: resources
- name: videos
  endpoint:
    path: /resources/video
    method: GET
    data_selector: resources
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: resources
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: items
- name: categories
  endpoint:
    path: /api/categories
    method: GET
    data_selector: items
- name: Cars
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Cars.items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications-query-a-collection
    method: GET
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets-introduction
    method: GET
- name: artists_and_tracks
  endpoint:
    path: /integrations/prepr-for-radio/artist-tracks-query-collection
    method: GET
- name: publications
  endpoint:
    path: /v5/publications
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: artists_tracks
  endpoint:
    path: /artists_tracks
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: records
    params: {}
- name: artists_tracks
  endpoint:
    path: /api/artists-tracks
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications/{id}
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /publications
    method: GET
    data_selector: items
    params: {}
- name: content_item
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: items
- name: asset
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: assets
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: artists
  endpoint:
    path: /artists
    method: GET
    data_selector: records
- name: Imaging
  endpoint:
    path: /integrations/prepr-for-radio/publications-ref-imaging
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: talk
  endpoint:
    path: /talks
    method: GET
    data_selector: talks
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: artists_tracks
  endpoint:
    path: /artists/tracks
    method: GET
    data_selector: records
- name: track_play
  endpoint:
    path: /trackplay
    method: GET
    data_selector: track_plays
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
- name: WeatherTalk
  endpoint:
    path: /weatherTalk
    method: GET
    data_selector: id
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: artists
  endpoint:
    path: /artists
    method: GET
    data_selector: data
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: GET
    data_selector: data
    params: {}
- name: artists
  endpoint:
    path: /artists/{id}
    method: GET
    data_selector: records
- name: tracks
  endpoint:
    path: /tracks/{id}
    method: GET
    data_selector: records
- name: artists
  endpoint:
    path: /artists
    method: GET
    data_selector: items
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: GET
    data_selector: items
    params: {}
- name: guides
  endpoint:
    path: /guides/{id}
    method: GET
    data_selector: '2018-07-04'
    params: {}
- name: collection
  endpoint:
    path: /api/v1/collections
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: guides
  endpoint:
    path: /guides
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tag
  endpoint:
    path: /tags/{id}
    method: GET
    data_selector: id
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: publications
    params: {}
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: assets
    params: {}
- name: artists_tracks
  endpoint:
    path: /integrations/prepr-for-radio/artist-tracks
    method: GET
    data_selector: artists_tracks
    params: {}
- name: guides
  endpoint:
    path: /integrations/prepr-for-radio/guides
    method: GET
    data_selector: guides
    params: {}
- name: tags
  endpoint:
    path: /integrations/prepr-for-radio/tags
    method: GET
    data_selector: tags
    params: {}
- name: messages
  endpoint:
    path: /integrations/prepr-for-radio/messages
    method: GET
    data_selector: messages
    params: {}
- name: timelines
  endpoint:
    path: /integrations/prepr-for-radio/timelines
    method: GET
    data_selector: timelines
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: items
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: artists
  endpoint:
    path: /artists
    method: GET
    data_selector: records
    params: {}
- name: taggroups
  endpoint:
    path: /taggroups
    method: GET
    data_selector: items
    params: {}
- name: taggroup_by_id
  endpoint:
    path: /taggroups/{id}
    method: GET
    data_selector: ''
    params: {}
- name: messages
  endpoint:
    path: /api/messages
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: artists_tracks
  endpoint:
    path: /artists-tracks
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: items
    params:
      fields: sent,replied_at{sent}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: message
  endpoint:
    path: /api/messages
    method: GET
    data_selector: data
- name: customer_messages
  endpoint:
    path: /customers/me/messages_list
    method: GET
    data_selector: items
    params:
      fields: sent,replied_at{sent}
- name: messages
  endpoint:
    path: /integrations/prepr-for-radio/messages
    method: GET
    data_selector: records
    params:
      fields: sent,replies,replied_at,replied_at{sent}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /messages/{id}
    method: GET
    data_selector: id
    params:
      fields: sent,replied_at{sent}
- name: message
  endpoint:
    path: /integrations/prepr-for-radio/messages-create-message
    method: POST
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: artists_tracks
  endpoint:
    path: /artists-tracks
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /v5/messages
    method: POST
    data_selector: null
    params:
      body: ''
      label: ''
      nickname: ''
      subject: ''
      phone: '31612345678'
      email: mail@exmaple.com
      audios.0: ''
      videos.0: ''
      image.0: ''
- name: content_item
  endpoint:
    path: /content/items
    method: GET
    data_selector: items
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
- name: artists_tracks
  endpoint:
    path: /integrations/prepr-for-radio/artists-tracks
    method: GET
    data_selector: records
- name: guides
  endpoint:
    path: /integrations/prepr-for-radio/guides
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /integrations/prepr-for-radio/tags
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /integrations/prepr-for-radio/messages
    method: GET
    data_selector: records
- name: timelines
  endpoint:
    path: /integrations/prepr-for-radio/timelines
    method: GET
    data_selector: records
- name: weather_forecast
  endpoint:
    path: /integrations/prepr-for-radio/weather
    method: GET
    data_selector: records
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: records
    params: {}
- name: timelines
  endpoint:
    path: /v5/timelines/{id}
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: timelines
  endpoint:
    path: /timelines
    method: GET
    data_selector: items
    params:
      date: YYYY-MM-DD
- name: Tracks
  endpoint:
    path: /api/v1/tracks
    method: GET
    data_selector: tracks
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
- name: tracks
  endpoint:
    path: /timelines/tracks
    method: POST
    data_selector: success
    params:
      date: YYYY-MM-DD
      tracks: []
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
    params: {}
- name: artists_tracks
  endpoint:
    path: /integrations/prepr-for-radio/artist-tracks
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /integrations/prepr-for-radio/messages
    method: GET
    data_selector: records
    params: {}
- name: timelines
  endpoint:
    path: /integrations/prepr-for-radio/timelines
    method: GET
    data_selector: records
    params: {}
- name: weather
  endpoint:
    path: /integrations/prepr-for-radio/weather
    method: GET
    data_selector: records
    params: {}
- name: weather_service_provider
  endpoint:
    path: /v5/weatherserviceproviders/{id}
    method: GET
- name: weather_forecast
  endpoint:
    path: /weather-forecast
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: weather_service_provider
  endpoint:
    path: /weatherserviceproviders/{id}
    method: PUT
    data_selector: ''
    params:
      body: Display text in the Prepr Weather Talks.
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /admin/api/v1/products.json
    method: GET
    data_selector: products
- name: orders
  endpoint:
    path: /admin/api/v1/orders.json
    method: GET
    data_selector: orders
- name: typeform_templates
  endpoint:
    path: /api/v1/templates
    method: GET
    data_selector: templates
- name: sync_content
  endpoint:
    path: /publications/typesense/sync
    method: GET
    data_selector: model
    params:
      model:
        id: YOUR_MODEL_ID
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
- name: artists_tracks
  endpoint:
    path: /integrations/prepr-for-radio/artist-tracks
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /api/v1/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /assets
    method: POST
    data_selector: response
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: content_items
  endpoint:
    path: content_items
    method: GET
    data_selector: items
- name: single_content_item
  endpoint:
    path: content_items/{id}
    method: GET
    data_selector: items
- name: create_content_item
  endpoint:
    path: content_items
    method: POST
    data_selector: items
- name: update_content_item
  endpoint:
    path: content_items
    method: PUT
    data_selector: items
- name: delete_content_item
  endpoint:
    path: content_items/{id}
    method: DELETE
    data_selector: items
- name: upload_asset
  endpoint:
    path: assets
    method: POST
    data_selector: items
- name: items
  endpoint:
    path: /api/v1/items
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /integrations/prepr-for-radio/publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /integrations/prepr-for-radio/assets
    method: GET
    data_selector: records
- name: Posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Posts.items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /api/content-items
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /v1/articles
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.items
    params: {}
- name: publications
  endpoint:
    path: /api/v1/publications
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: items
- name: items
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params:
      incremental: updated_at
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: content_item
  endpoint:
    path: /v1/content
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /api/v1/content-items
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /api/items
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: _id
  endpoint:
    path: /system/fields/_id
    method: GET
    data_selector: records
- name: __typename
  endpoint:
    path: /system/fields/__typename
    method: GET
    data_selector: records
- name: _environment_id
  endpoint:
    path: /system/fields/_environment_id
    method: GET
    data_selector: records
- name: _created_on
  endpoint:
    path: /system/fields/_created_on
    method: GET
    data_selector: records
- name: _changed_on
  endpoint:
    path: /system/fields/_changed_on
    method: GET
    data_selector: records
- name: _publish_on
  endpoint:
    path: /system/fields/_publish_on
    method: GET
    data_selector: records
- name: _last_published_on
  endpoint:
    path: /system/fields/_last_published_on
    method: GET
    data_selector: records
- name: _slug
  endpoint:
    path: /system/fields/_slug
    method: GET
    data_selector: records
- name: _read_time
  endpoint:
    path: /system/fields/_read_time
    method: GET
    data_selector: records
- name: _locale
  endpoint:
    path: /system/fields/_locale
    method: GET
    data_selector: records
- name: _locales
  endpoint:
    path: /system/fields/_locales
    method: GET
    data_selector: records
- name: _localizations
  endpoint:
    path: /system/fields/_localizations
    method: GET
    data_selector: records
- name: _context
  endpoint:
    path: /system/fields/_context
    method: GET
    data_selector: records
- name: _json
  endpoint:
    path: /system/fields/_json
    method: GET
    data_selector: records
- name: '_event(name: View)'
  endpoint:
    path: /system/fields/_event
    method: GET
    data_selector: records
- name: _views
  endpoint:
    path: /system/fields/_views
    method: GET
    data_selector: records
- name: _likes
  endpoint:
    path: /system/fields/_likes
    method: GET
    data_selector: records
- name: _bookmarks
  endpoint:
    path: /system/fields/_bookmarks
    method: GET
    data_selector: records
- name: _subscribes
  endpoint:
    path: /system/fields/_subscribes
    method: GET
    data_selector: records
- name: content_item
  endpoint:
    path: /api/content_items
    method: GET
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_items
  endpoint:
    path: /content/items
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: pages
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Pages.items
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: Pages
  endpoint:
    path: /
    method: POST
    data_selector: data.Pages.items
    params: {}
- name: Post
  endpoint:
    path: /
    method: POST
    data_selector: data.Post.images
    params: {}
- name: content_item
  endpoint:
    path: /api/content
    method: GET
    data_selector: items
    params: {}
- name: default_asset_fields
  endpoint:
    path: /graphql
    method: POST
    data_selector: Post.cover
    params: {}
- name: image_operations
  endpoint:
    path: /graphql
    method: POST
    data_selector: Post.images
    params: {}
- name: content_item
  endpoint:
    path: /api/v1/content-items
    method: GET
    data_selector: data
    params: {}
- name: Pages
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Pages.items
    params: {}
- name: assets
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Post.assets
    params: {}
- name: Post
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Post.videos
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: data
    params: {}
- name: Pages
  endpoint:
    path: /graphql-api
    method: POST
    data_selector: data.Pages.items
    params: {}
- name: publications
  endpoint:
    path: /api/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: pages
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Pages.items
- name: post
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Post
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Pages
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Pages.items
    params: {}
- name: asset
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Post
    params: {}
- name: Pages
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Pages.items
    params: {}
- name: Events
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Events.items
    params: {}
- name: Pages
  endpoint:
    path: /graphql-api
    method: POST
    data_selector: data.Pages.items
    params: {}
- name: content_item
  endpoint:
    path: /api/content
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /api/user
    method: GET
    data_selector: users
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /api/v1/items
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ContentItems
  endpoint:
    path: /graphql
    method: POST
    data_selector: items
    params: {}
- name: items
  endpoint:
    path: /api/v1/items
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: Campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
- name: Content
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: data
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: artists_tracks
  endpoint:
    path: /artists_tracks
    method: GET
    data_selector: records
    params: {}
- name: locales
  endpoint:
    path: /graphql
    method: POST
    data_selector: _Locales
    params: {}
- name: pages
  endpoint:
    path: /graphql
    method: POST
    data_selector: items
    params:
      locales:
      - de-DE
      - en-US
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: content_items
  endpoint:
    path: /content_items
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: A/B test variant
  endpoint:
    path: /ab-test/variant
    method: GET
    data_selector: variants
    params: {}
- name: Page
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Page
    params:
      slug: electric-lease
- name: content
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Page
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Page
    params:
      personalize: 'false'
- name: Page
  endpoint:
    path: /graphql-api/personalization-recommedations
    method: GET
    data_selector: data.Page
    params: {}
- name: content
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Similar_Posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: PeopleAlsoViewed_Posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: items
    params: {}
- name: Popular_Posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
- name: content_items
  endpoint:
    path: /api/content_items
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /v1/content
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /content_items
    method: GET
    data_selector: content_items
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: content_items
  endpoint:
    path: /content_items
    method: GET
    data_selector: items
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: assets
    params: {}
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: content
    params: {}
- name: publications
  endpoint:
    path: /api/v1/publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
    params: {}
- name: content_items
  endpoint:
    path: /content_items
    method: GET
    data_selector: items
    params: {}
- name: content_items
  endpoint:
    path: /content/items
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: items
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /content/items
    method: GET
    data_selector: items
- name: content_item
  endpoint:
    path: /content/items
    method: GET
    data_selector: data
    params: {}
- name: content_items
  endpoint:
    path: /content_items
    method: POST
    data_selector: records
- name: update_content_item
  endpoint:
    path: /content_items/{id}
    method: PUT
    data_selector: records
- name: patch_content_item
  endpoint:
    path: /content_items/{id}
    method: PATCH
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content_item
  endpoint:
    path: /content_items/{id}/{locale}/publish
    method: PATCH
    data_selector: ''
    params: {}
- name: unpublish_item
  endpoint:
    path: /mutation-api/content-items-unpublish
    method: POST
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: unpublish_content_item
  endpoint:
    path: /content_items/{id}/{locale}/unpublish
    method: PATCH
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: delete_language_variant
  endpoint:
    path: /content_items/{UUID}/{locale}
    method: DELETE
- name: delete_content_item
  endpoint:
    path: /content_items/{UUID}
    method: DELETE
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets/{id}
    method: GET
    data_selector: items
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: POST
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: asset
  endpoint:
    path: /assets/{asset_id}
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: POST
    data_selector: null
    params: {}
- name: update_collection
  endpoint:
    path: /collections/{id}
    method: PUT
    data_selector: null
    params: {}
- name: destroy_collection
  endpoint:
    path: /collections/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: add_assets_to_collection
  endpoint:
    path: /collections/{id}/assets
    method: POST
    data_selector: null
    params: {}
- name: remove_assets_from_collection
  endpoint:
    path: /collections/{id}/assets
    method: DELETE
    data_selector: null
    params: {}
- name: set_collection_cover
  endpoint:
    path: /collections/{id}/cover
    method: POST
    data_selector: null
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /assets/{id}
    method: GET
    data_selector: cdn_files
    params:
      fields: cdn_files{resized{landing.width(232).h(232),thumb.width(123).h(123)}}
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: storage_file
  endpoint:
    path: /application/assets/{id}/storage_files
    method: POST
    data_selector: url
    params: {}
- name: cdn_file
  endpoint:
    path: /application/storage_files/{id}/cdn_files
    method: POST
    data_selector: file
    params: {}
- name: asset
  endpoint:
    path: /assets/{id}
    method: POST
    data_selector: reference_id
    params: {}
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: records
- name: segment_by_id
  endpoint:
    path: /segments/{id}
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: records
    params: {}
- name: tag_groups
  endpoint:
    path: /tag_groups
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: customer_by_id
  endpoint:
    path: /{{uuid}}
    method: GET
    data_selector: records
    params:
      fields: custom,email,phone,tags
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /
    method: GET
    data_selector: items
    params:
      limit: 1000
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /
    method: POST
- name: customer_update
  endpoint:
    path: /{id}
    method: PUT
- name: customer_destroy
  endpoint:
    path: /{id}
    method: DELETE
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /
    method: POST
    data_selector: customer
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: request_sign_in
  endpoint:
    path: /request_sign_in
    method: POST
    data_selector: id
    params: {}
- name: sign_in_with_magic
  endpoint:
    path: /sign_in_with_magic
    method: POST
    data_selector: access_token
    params: {}
- name: customer_profile
  endpoint:
    path: /customers-fetching-customer-profile
    method: GET
    data_selector: profile_data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customer_profile
  endpoint:
    path: /customers/me
    method: GET
    data_selector: records
    params:
      fields: custom,emails,tags
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
    params: {}
- name: publications
  endpoint:
    path: /publications
    method: GET
    data_selector: records
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: records
- name: sign_out
  endpoint:
    path: /sign_out
    method: DELETE
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: resend_webhooks
  endpoint:
    path: /content_items/bulk/webhooks
    method: GET
    data_selector: queued
    params:
      event: content_item.published
      limit: 1000
      skip: 0
- name: content
  endpoint:
    path: /api/content
    method: GET
    data_selector: data
    params: {}
- name: assets
  endpoint:
    path: /api/assets
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: content
  endpoint:
    path: /api/v1/content
    method: GET
    data_selector: data
- name: assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: data
- name: content_items
  endpoint:
    path: /v1/content-items
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: assets
  endpoint:
    path: /v1/assets
    method: GET
    data_selector: assets
    params: {}
- name: Posts
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Posts.items
    params: {}
- name: Pages
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.Pages.items
    params: {}
notes:
- Ensure to have the appropriate scopes when requesting an access token.
- OAuth2 implementation requires connected app setup.
- Requires setup of connected app in Prepr
- Rate limits apply
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Use the API explorer for testing queries.
- OAuth2 with refresh token — requires setup of connected app in Prepr
- Two-factor authentication (2FA) required for Owners and Admins starting July 1,
  2025
- The `after` and `before` response parameters will be removed starting July 1, 2025.
- The `after` request parameter will also be removed.
- Requires connected app setup for OAuth2.
- Requires OAuth2 authentication with refresh token.
- An environment contains schema, content items, media files, customer segments and
  users.
- Multiple environments allow safe testing without affecting production.
- Requires setup of OAuth for API access
- Rate limits apply to requests
- Uses OAuth2 with refresh token — requires setup of connected app in Prepr
- Some objects may return nulls in deeply nested fields
- Accessing unpublished content can be useful for previewing how a new content item
  will look before making it available to everybody.
- Visual Editing works best for non-production preview URLs.
- If content editors are using Brave, they need to toggle the Shields are UP button
  while using Visual editing in Prepr.
- Setup of connected app in API is required.
- API may have rate limits.
- Include an Authorization HTTP header with the corresponding access token of the
  Prepr environment that you are migrating to.
- Users can have different roles in different environments.
- Invitation link in email expires after 7 days.
- Default roles cannot be edited or deleted.
- An additional agreement for Prepr is required to enable the Microsoft Entra ID app.
- Once you are an SSO user, it is no longer possible to log in with the email / password
  combination.
- Check API limits to avoid throttling
- Requires connected app setup in Prepr
- Check API documentation for rate limits
- OAuth2 with refresh token requires setup of connected app in Prepr.
- Ensure to replace placeholders in the configuration with actual values.
- Some responses may have rate limits applied
- Requires OAuth2 setup with a connected app.
- Uses OAuth2 for authentication — requires setup of connected app in Prepr
- When an enumeration is set in a List field in a model or component, it cannot be
  updated.
- The API response must include 'items', 'total', and optionally 'filters'.
- The API must support pagination using 'skip' and 'limit' parameters.
- Use the *GraphQL Production* access token to request published content items for
  your live app and use the *GraphQL Preview* token to preview unpublished content
  items.
- Requires setup of connected app in Prepr API
- Use the GraphQL Production access token to retrieve published content items
- Use the GraphQL Preview token to preview unpublished content items
- Uses OAuth2 for authentication
- API supports both REST and GraphQL endpoints
- Rate limits are enforced on all API calls
- Ensure to replace <YOUR-PREPR-API-URL> with the actual API URL from your Prepr access
  token.
- Requires setup of access token in headers for API calls.
- Some objects may return additional metadata
- Use the GraphQL Production access token to request published content items.
- Ensure to set up proper scopes for OAuth2 access.
- Use the GraphQL Production access token to request published content items for your
  live app
- Use the GraphQL Production API URL to request published content items for your live
  app and use the GraphQL Preview value to make a preview of unpublished content items.
- Ensure to configure the OAuth2 settings properly for successful authentication.
- Uses API key for authentication
- Ensure to manage tokens securely as they are sensitive information.
- Some queries may return nulls in deeply nested fields
- Some endpoints may have rate limits
- Ensure proper OAuth2 setup is completed before integration.
- Rate limits may apply based on account type.
- Some endpoints may have rate limiting
- Requires API key for access.
- Rate limits may apply.
- Requires setup of OAuth2 connected app in Prepr
- Some API responses may vary based on user permissions
- Requires setup of a connected app in Prepr.
- Some fields may be optional depending on the request.
- Requires setup of OAuth2 for authentication.
- Requires setup of connected app in API
- Personalization and A/B testing are dynamic by nature so they work out of the box
  with SSR.
- Data integrity and the build time for hybrid rendering solutions can be comparable
  to the SSR metrics depending on the type of hybrid solution and how exactly it is
  implemented.
- Requires setup of a connected app in Prepr API
- Headless CMSs typically need custom development for SEO features.
- Enable strict mode for accurate TypeScript types from GraphQL schema
- Validation rules are triggered when publishing a content item
- Requires setup of connected app in Prepr.
- Some endpoints may have rate limits.
- Webhooks must use HTTPS and handle both GET and POST requests.
- Respond to all webhook events in 12 seconds or less.
- Prepr will sign the webhook events it sends to your endpoints.
- To protect against timing attacks, use a constant-time string comparison to compare
  the expected signature to each of the received signatures.
- We recommend a tolerance of five minutes between the timestamp and the current time.
- We advise that you use Network Time Protocol (NTP) to ensure that your server’s
  clock is accurate and synchronizes with the time on Prepr servers.
- Some fields may not be populated in the response
- Some endpoints might have rate limits.
- Make sure that the Allow Developer actions and Allow bulk update content items and
  assets permissions are enabled for users who need to export content.
- This field is required validation is not triggered during the export.
- Requires API key for access
- Rate limiting is enforced on all endpoints
- Once the sync has finished successfully, the changes cannot be undone. Make sure
  to preview the changes carefully for any discrepancies before confirming the schema
  sync.
- Choose Export only if this environment has the most up-to-date schema.
- Choose Import only if the schema in this environment needs to be updated with a
  more up-to-date schema.
- Choose Export & Import for the situation where you have schema updates from multiple
  development or testing environments.
- Requires proper OAuth setup to access endpoints.
- Ensure user roles and permissions are set correctly for model availability.
- Some endpoints may require additional permissions.
- OAuth2 authentication is required for accessing the API
- Some API endpoints may have rate limits that could affect data retrieval.
- You can upload, update, and delete assets in batches, or apply image transformation
  options.
- OAuth2 requires setup of connected app in Prepr
- Some API calls may have rate limits
- You can set a parameter in the URL to define the download filename.
- Adding, removing locales, or changing the default locale may have an effect on existing
  content items.
- Requires OAuth2 authentication setup.
- Some fields may be optional.
- Ensure proper authentication setup is completed.
- Ensure that the connected app is configured correctly for OAuth2
- Data may vary based on user permissions and API limits
- Can exclude interactions from internal IP addresses for more accurate metrics.
- Requires OAuth2 setup for authentication.
- Up to 1500 events can be stored per customer profile.
- Some data may return nulls in deeply nested fields
- The endpoint won't validate the input. Processing of the events are queued.
- Requires OAuth2 setup for access
- Rate limits may apply based on subscription level
- Ensure you have the correct permissions set up for API access.
- Ensure proper OAuth setup to access the API.
- Uses OAuth2 with refresh token — requires setup of connected app in Prepr API
- Some content items may have null values in certain fields
- Prepr Customer ID is required to retrieve personalized content.
- Uses HTML attributes to track impressions and clicks
- External segments can only be used to personalize content with Prepr. You need customer
  data registered in Prepr to run A/B testing.
- Some responses may include pagination and rate limits
- To add adaptive content to your website you need to have a Prepr CMS account.
- Ensure the correct OAuth scopes are provided in the app setup.
- Ensure proper OAuth setup for authentication.
- Uses Prepr CMS for A/B testing.
- Requires setup of Prepr tracking in the web app.
- Requires setup of OAuth2 credentials for API access.
- API requests are limited to 100 requests per minute
- Requires setup of Algolia application and API key.
- Make sure to create an access token with the REST API scopes 'content_items' and
  'content_items_publish'.
- Cloudinary offers various asset management features.
- Requires setup of API client in Commerce Layer
- Commercetools API requires OAuth2 authentication.
- API Client information is only displayed once. Ensure that you save your credentials
  securely before closing the API Client details page in Commercetools.
- Make sure to activate the indexing of product information in your Commercetools
  project. If indexing is deactivated for your project, no data is returned by the
  Commercetools API.
- Ensure API key is included in the request headers
- To generate an integration access token for your Dealfront account, it’s best to
  contact your account manager directly.
- If you don’t have their contact information, you can reach out to Dealfront’s support
  team for assistance.
- Uses OAuth2 with refresh token — requires setup of connected app in Frontify
- Once connected to Frontify, the Prepr Media Library will no longer be available
  to any user.
- Requires setup of a private app in HubSpot to obtain access token
- Access token must be kept in a safe place
- An additional agreement for Prepr is required to enable the Microsoft Entra ID (Azure)
  app.
- The Microsoft Entra ID integration is available as a paid option on top of your
  regular subscription.
- Ensure to handle rate limiting.
- Requires setup of connected app in radio API
- Last updated on September 5, 2025
- Some responses may include null values.
- Requires setup of OAuth2 credentials in the Prepr dashboard
- Uses OAuth2 with refresh token — requires setup of connected app in radio
- Some objects like publications may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- API supports pagination.
- Ensure to refresh tokens before expiration.
- Requires OAuth2 setup for API access
- Be aware of rate limits on API calls
- If you want to fetch a collection of tags of a given type you can use the tags collection
  endpoint.
- Requires setup of connected app in Radio API
- May return nulls in deeply nested fields
- Messages are a central part of the Prepr for Radio module.
- Uses OAuth2 with refresh token — requires setup of connected app in Radio API
- Uses OAuth2 with refresh token
- Messages can be filtered for a signed in customer by using the Personal Access Token
- Fetching a single message requires the message ID and fields to be specified
- Ensure to set up the necessary API keys for authentication
- Ensure to manage token expiration properly.
- Rate limits apply on requests.
- Messages can only contain one media file at the time.
- Ensure you are using the correct OAuth scopes
- Ensure that the correct OAuth2 credentials are set in dlt secrets
- The `reference_id` should match the `reference_id` when adding Timeline Tracks.
- Uses OAuth2 with refresh token — requires setup of connected app in Salesforce
- Requires OAuth setup for accessing the Shopify API.
- Rate limits apply to API requests.
- Requires setup of Typeform integration for API access
- An access token will be generated automatically after activating the Typeform integration.
- Prepr will use the token as a credential when making API requests.
- Prepr will synchronize your remote content automatically to keep it up to date.
- Enable auto-schema detection for easier setup
- Geosearch support is optional
- Make sure to create an access token with the REST API scopes `content_items` and
  `content_items_publish`.
- Uses OAuth2 for authentication.
- Ensure proper token handling to avoid expiration issues.
- To use in the Zapier workflow, you need to get the access token from your Prepr
  environment.
- Ensure to set up your API keys correctly.
- Rate limits may apply based on your subscription.
- Don’t load the preview toolbar component defined in the steps below if you’re deploying
  your production website, in other words when the environment variable PREPR_ENV
  is set to production.
- Requires OAuth2 authentication and setup of a connected app.
- Some endpoints may have rate limits that should be respected
- Some fields may return nulls in complex nested objects.
- Requires setup of access token in .env file
- Autopaging can be used when retrieving lists
- Requires setup of connected app in the API
- Ensure to configure the OAuth2 settings in the Prepr dashboard.
- GraphQL API supports HTTP POST method for operations.
- No limits are enforced on requests that hit Prepr’s CDN cache.
- Ensure to handle token expiration correctly.
- Requires OAuth2 setup for API access.
- The GraphQL API schema is generated automatically at request time, so it’s always
  current.
- Uses OAuth2 with refresh token.
- Strict mode enforces stricter validation and adherence to the schema.
- If you enable strict mode on your access token only permissions with active required
  validation can be chosen from the permissions list.
- Ensure correct scopes are set in the OAuth application.
- Ensure proper OAuth2 setup for authentication
- Some objects may return paginated responses
- Some API endpoints may have rate limits.
- Ensure to handle pagination where applicable.
- Requires OAuth2 setup with client credentials.
- Some fields may return null values
- Requires setup of OAuth2 authentication.
- Responses may vary based on query parameters
- Images are automatically served in WebP or AVIF to browsers that natively support
  those image formats.
- To retrieve a playback_id, make sure you use the GraphQL API token version of 2022-08-15
  or later.
- Requires OAuth2 setup in the Prepr dashboard
- Requires setup of connected app in Prepr for OAuth2.
- Some queries may return nulls for optional fields
- Check out the Dynamic Content Field section on how to query all types of content.
- Environment ID is required if an organization token is used.
- Requires OAuth2 setup with a connected app in Prepr
- API may have rate limits based on the plan
- Ensure correct OAuth2 scopes are set.
- Default ordering of content items is by publish_on_DESC
- Full text search is not case-sensitive.
- API rate limits apply; ensure compliance to avoid throttling.
- Default ordering is by publish_on_DESC, meaning the most recently published content
  item appears at the top of the list.
- OAuth2 with refresh token required for API access
- With this access token, you can retrieve content items in all available statuses,
  including To do, In progress, Review, Done, and Published.
- A/B tests require the Prepr-Customer-Id in the header to identify customers.
- Requires setup of OAuth2 credentials in Prepr dashboard
- Rate limits apply on API calls
- Prepr lets you pre-fetch all data for all segments for static websites.
- Ensure to set up OAuth2 application in Prepr before accessing the API.
- Pagination options (except limit) and the total items field are disabled when using
  this query.
- The plural Type name of the content model is prefixed with PeopleAlsoViewed.
- Requires OAuth2 setup.
- Requests through the CDN are cached and are therefore always lightning fast.
- To call the REST API, you will need to use the appropriate HTTP method with the
  application/json content type.
- To authenticate the request include an Authorization HTTP header with the value
  of the access token
- If you fail to include a valid access token, the endpoint will return a status code
  401
- Uses OAuth2 with refresh token — requires setup of connected app in radio API
- Access token with REST API scope 'content_items' is required.
- Access tokens with the REST API scope 'content_items' are required to fetch content
  items.
- Some fields may be deeply nested
- Requires OAuth2 setup for token management.
- API rate limits apply to all endpoints.
- The maximum number of resources returned by the API is 100.
- The API will throw a Bad Request for values higher than 100 and values other than
  an integer.
- The API will throw a Bad Request for values less than 0 or values other than an
  integer.
- If you don’t pass an explicit order value the returned content items will be ordered
  descending by content item published timestamp `-publish_on`.
- Ensure proper OAuth setup for accessing the API
- Make sure to not expose this access token client-side.
- Prepr doesn’t merge content changes but completely updates a content item for a
  locale.
- Prepr can automatically generate and send events to your webhook once there are
  updates to content items.
- API requires OAuth2 authentication with refresh token.
- Scopes `content_items` and `content_items_delete` are required for deletion
- Ensure to have the correct API keys configured.
- Ensure to handle rate limiting appropriately
- The most recently changed asset will appear at the top of the list.
- The scopes assets and assets_delete are required.
- To add assets to a collection, existing assets remain unchanged and duplicates are
  ignored.
- The API is read-only and designed for delivering images.
- Rate limits apply, ensure to handle retries appropriately.
- The pagination of the segments endpoint is identical to the content items endpoints.
- Pagination of the tags endpoint is identical to the content items endpoints.
- Ensure connected app is properly configured for OAuth2.
- The maximum number of resources returned by the API is 1000.
- The default number of resources returned by the API is 100.
- 'Scopes: customers customers_publish'
- 'Scopes: customers customers_delete'
- OAuth2 authentication required for all endpoints
- Ensure to handle token expiration
- Sign-in with a magic link
- Some endpoints may have specific rate limits
- The API uses OAuth2 for authentication.
- Make sure to handle token expiration properly.
- When you trigger multiple webhook requests with the bulk endpoint, they end up in
  a queue.
- Ensure OAuth2 setup is completed before making API calls.
- Some API responses may include nested objects
- Ensure to handle nulls in content fields.
errors:
- '401 Unauthorized: Check the provided credentials.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Implement exponential backoff strategy.'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your API token'
- '429 Too Many Requests: Rate limit exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your credentials and token expiration.'
- '401 Unauthorized: Invalid client credentials'
- Refused to frame 'https://...' because an ancestor violates the following Content
  Security Policy directive.
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check OAuth token'
- '404 Not Found: Verify endpoint paths'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Check your token or OAuth scopes.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Ensure the endpoint exists.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check OAuth credentials or token expiration'
- '401 Unauthorized: Check your token and permissions.'
- '404 Not Found: Verify the endpoint or resource ID.'
- 'Page 404: Ensure that the detailed page is in the correct folder structure.'
- '429 Too Many Requests: Exceeded rate limits'
- '401 Unauthorized: Check your API credentials'
- '404 Not Found: Endpoint does not exist'
- '500 Internal Server Error: Retry request after a delay'
- '401 Unauthorized: Ensure your access token is valid.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check client credentials'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Check your token or client credentials.'
- '404 Not Found: Verify the endpoint and parameters.'
- 'INVALID_TOKEN: Check if the token is expired or invalid'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests'
- '403 Forbidden: Verify your API permissions'
- '429 Too Many Requests: Reduce request frequency.'
- '401 Unauthorized: Check OAuth token validity.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid or expired token'
- '401 Unauthorized: Verify OAuth credentials'
- '404 Not Found: Check endpoint and resource availability'
- '401 Unauthorized: Check API keys and token validity.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '429 Too Many Requests: Implement exponential backoff.'
- '400 Bad Request: Check request parameters and payload.'
- '429 Too Many Requests: Throttle API calls.'
- '401 Unauthorized: Check your API credentials.'
- '401 Unauthorized: Check your API key and permissions'
- '401 Unauthorized: Check your OAuth token.'
- '403 Forbidden: Check user permissions and roles'
- '404 Not Found: Verify the content item ID'
- '500 Internal Server Error: Retry the request after some time'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your credentials.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check your credentials and permissions.'
- '429 Too Many Requests: You have exceeded your rate limit.'
- '401 Unauthorized: Verify your access token.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Token may be expired or invalid'
- '403 Forbidden: Insufficient permissions to access the resource'
- '401 Unauthorized: Check your OAuth credentials.'
- '400 Bad Request: Ensure all required fields are included.'
- '400 Bad Request: Check your request format and data'
- '202 Accepted: If the event was successfully queued'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your credentials'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Verify OAuth token.'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify endpoint path and parameters'
- '500 Internal Server Error: Retry the request later'
- '401 Unauthorized: Check your token and permissions'
- '429 Too Many Requests: Reduce your API call rate'
- '401 Unauthorized: Verify the credentials or token.'
- '401 Unauthorized: Verify your OAuth token.'
- '401 Unauthorized: Check your authentication setup.'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: Ensure the requested resource exists.'
- '429 Too Many Requests: Exceeded the rate limit'
- 'INVALID_API_KEY: Check if the API key is valid.'
- 'OBJECT_NOT_FOUND: The specified object does not exist.'
- '401 Unauthorized: Check your API key and secret.'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check API key validity'
- '404 Not Found: Verify endpoint URL'
- '401 Unauthorized: Check client ID and secret'
- '500 Internal Server Error: Try again later'
- '404 Not Found: Ensure the resource exists.'
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- '404 Not Found: Ensure the endpoint is correct'
- '404 Not Found: The resource you are trying to access does not exist.'
- '401 Unauthorized: Check API key or token.'
- '401 Unauthorized: Verify your authentication credentials'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '404 Not Found: Check if the message ID is correct'
- '401 Unauthorized: Check OAuth token.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check if your token is valid'
- '404 Not Found: Verify the requested resource path'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: The requested resource could not be found'
- '429 Too Many Requests: Slow down your requests.'
- '400 Bad Request: Check request data format'
- '401 Unauthorized: Verify API key'
- '404 Not Found: Ensure endpoint is correct'
- '404 Not Found: Verify the resource path.'
- '400 Bad Request: Check your request parameters and body.'
- '401 Unauthorized: Ensure your token is valid.'
- '500 Internal Server Error: Retry the request.'
- '403 Forbidden: Check your API key or permissions'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck access token'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Verify access token.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: The access token is invalid.'
- '405 Method Not Allowed: The requested HTTP method is not supported for the specified
  resource.'
- '412 Precondition failed: There is an issue with the query, for example, there are
  non-UTF characters in the query or the actual query is too large.'
- '429 Too many requests: You have exceeded the rate limit.'
- '5xx Internal Error or Service Unavailable: Something went wrong on the Prepr server
  side. Try your request again after a few seconds.'
- '5x3 Service Unavailable: In most cases this requests exceeds the edge rate limits.
  Try your request again after a few seconds.'
- '403 Forbidden: Check API key or OAuth token.'
- '403 Forbidden: Check if the resource exists or permissions are set correctly.'
- '401 Unauthorized: Check your API key and authentication method'
- '401 Unauthorized: Verify client credentials'
- '400 Bad Request: Check request parameters and payload'
- '500 Internal Server Error: Retry the request or contact support'
- '401 Unauthorized: Check your OAuth token or client credentials'
- '404 Not Found: Verify endpoint URL and resource availability'
- '401 Unauthorized: Check client credentials and token validity'
- '403 Forbidden: Insufficient permissions for requested resource'
- '404 Not Found: Verify the endpoint and resource existence'
- '401 Unauthorized: Check your access token'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Check your client ID and secret.'
- '401 Unauthorized: Check your OAuth token or credentials'
- '404 Not Found: Verify your endpoint path'
- '500 Internal Server Error: Try again later or contact support'
- '401 Unauthorized: Check client ID and secret.'
- '401 Unauthorized: Check your token'
- '401 Unauthorized: Check your access token validity'
- '404 Not Found: Verify the endpoint.'
- '401 Unauthorized: Invalid credentials'
- '404 Not Found: The requested resource was not found'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Check the endpoint path'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: The access token is invalid or a scope is missing.'
- '400 Bad Request: The request did not pass validation, please check the response
  for more information.'
- '404 Not Found: The requested resource or endpoint could not be found.'
- '429 Too Many Requests: The access token sent too many requests in a given timeframe,
  check the HTTP headers to debug.'
- '5xx Internal Error or Service Unavailable: Something went wrong on the Prepr servers.
  Try your request again after a few seconds.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '401 Unauthorized: Verify the validity of access token.'
- '401 Unauthorized: Check API keys or token expiration'
- '401 Unauthorized: Access token may be invalid or expired.'
- '400 Bad Request: Check the request body for required fields.'
- '401 Unauthorized: Check if the token is valid or expired.'
- '401 Unauthorized: Check your API key and authentication method.'
- '429 Too Many Requests: Consider implementing exponential backoff'
- '401 Unauthorized: Check your credentials and token expiration'
- '403 Forbidden: Check permissions and API key validity.'
- '404 Not Found: Verify endpoint and resource existence.'
- '401 Unauthorized: Recheck OAuth token'
- 'Bad Request: Thrown for values higher than 1000 or less than 0 for skip.'
- '401 Unauthorized: Check your credentials and token'
- '404 Not Found: Check the endpoint URL.'
- '401 Unauthorized: Check OAuth credentials'
- '500 Internal Server Error: Retry request'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify token and scopes.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - ClientCredentials
  - AuthorizationCode
  - RefreshToken
  - OAuth2Token
  - OAuthToken
  - api_key
  - api_secret
  - Private Apps
  - Scopes
  - OAuth2
  - AuthClient
  - OAuth2Provider
  - Shop
  - Token
  - Prepr-Customer-Id
  - OAuthClient
client:
  base_url: https://prepr.io
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
