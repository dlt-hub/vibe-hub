resources:
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: user
- name: report
  endpoint:
    path: /report/{_id}
    method: POST
    data_selector: status
- name: matches
  endpoint:
    path: /user/matches/{_id}
    method: POST
    data_selector: match
- name: ping
  endpoint:
    path: /user/ping
    method: POST
    data_selector: status
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
- name: recommendations
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
- name: like_or_pass
  endpoint:
    path: /{like|pass}/{_id}
    method: GET
    data_selector: match
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report/{_id}
    method: POST
    data_selector: ''
    params: {}
- name: matches
  endpoint:
    path: /user/matches/{_id}
    method: POST
    data_selector: ''
    params: {}
- name: ping
  endpoint:
    path: /user/ping
    method: POST
    data_selector: ''
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
    params: {}
- name: recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report/{_id}
    method: POST
    data_selector: result
    params: {}
- name: matches
  endpoint:
    path: /user/matches/{_id}
    method: POST
    data_selector: result
    params: {}
- name: ping
  endpoint:
    path: /user/ping
    method: POST
    data_selector: status
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: results
    params: {}
- name: like_or_pass
  endpoint:
    path: /{like|pass}/{_id}
    method: POST
    data_selector: match_result
    params: {}
- name: recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: user_matches
  endpoint:
    path: /user/matches/{_id}
    method: POST
    data_selector: match_result
    params: {}
- name: user_recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
- name: report
  endpoint:
    path: /report/{_id}
    method: POST
    data_selector: status
- name: matches
  endpoint:
    path: /user/matches/{_id}
    method: POST
    data_selector: match_id
- name: ping
  endpoint:
    path: /user/ping
    method: POST
    data_selector: status
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
- name: recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report/{_id}
    method: POST
    data_selector: '{}'
    params: {}
- name: matches
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
    params: {}
- name: like_or_pass
  endpoint:
    path: /{like|pass}/{_id}
    method: GET
    data_selector: match
    params: {}
- name: user_recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
    params: {}
- name: user_recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: like_or_pass
  endpoint:
    path: /{like|pass}/{_id}
    method: POST
    data_selector: match
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: user_recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: profile
    params: {}
- name: report
  endpoint:
    path: /report/{_id}
    method: POST
    data_selector: ''
    params: {}
- name: matches
  endpoint:
    path: /user/matches/{_id}
    method: POST
    data_selector: ''
    params: {}
- name: ping
  endpoint:
    path: /user/ping
    method: POST
    data_selector: ''
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
    params: {}
- name: recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: like_or_pass
  endpoint:
    path: /{like|pass}/{_id}
    method: POST
    data_selector: match
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: user_matches
  endpoint:
    path: /user/matches/{_id}
    method: POST
    data_selector: match_result
    params: {}
- name: user_recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
- name: update_profile
  endpoint:
    path: /profile
    method: POST
- name: report_user
  endpoint:
    path: /report/{_id}
    method: POST
- name: send_message
  endpoint:
    path: /user/matches/{_id}
    method: POST
- name: update_location
  endpoint:
    path: /user/ping
    method: POST
- name: get_updates
  endpoint:
    path: /updates
    method: GET
- name: like_or_pass
  endpoint:
    path: /{like|pass}/{_id}
    method: GET
- name: recommendations
  endpoint:
    path: /user/recs
    method: GET
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
    params: {}
- name: recs
  endpoint:
    path: /user/recs
    method: GET
    data_selector: results
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: matches
    params: {}
- name: likes_passes
  endpoint:
    path: /{like|pass}/{_id}
    method: POST
    data_selector: match
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: token
    params: {}
- name: profile
  endpoint:
    path: /profile
    method: POST
    data_selector: results
    params: {}
- name: updates
  endpoint:
    path: /updates
    method: GET
    data_selector: results
    params: {}
- name: like_or_pass
  endpoint:
    path: /{like|pass}/{_id}
    method: POST
    data_selector: match
    params: {}
notes:
- Requires a Facebook auth token and associated Facebook ID.
- If you send a pass to someone who has liked you, they will still remain in fast-matches.
- The API may have changed since documentation was written in April/May 2014.
- The API may have changed since the documentation was written.
- Authentication token is required and must be obtained via the /auth endpoint.
- Requires a Facebook auth token and associated Facebook ID for authentication.
- Using UUID4 format for authentication token.
- You'll need to supply a Facebook auth token and an associated Facebook ID for authentication.
- Requires a Facebook auth token and Facebook ID for authentication.
- Responses may include UUID4 formatted tokens.
- Requires Facebook auth token and Facebook ID for authentication.
- You need to supply a Facebook auth token and an associated Facebook ID.
- You'll need to supply a facebook auth token and an associated facebook id.
- Fast-matches remain even if a user is passed.
errors:
- '401 Unauthorized: Invalid authentication token'
- '500 Internal Server Error: Check if user is a match before sending a message'
- '500 Internal Server Error: Attempting to send a message to a user who isn''t a
  match.'
- '401 Unauthorized: Invalid or missing authentication token.'
- '500 Internal Server Error: If sending a message to someone who isn''t a match.'
- '500 Internal Server Error: Occurs if you try to send a message to someone who isn''t
  a match.'
- '500 Internal Server Error: Sending a message to someone who isn''t a match'
- '500 Internal Server Error: Usually indicates a problem with the request or that
  the user isn''t matched.'
- '500 Internal Server Error: Occurs if trying to send a message to someone who isn''t
  a match.'
- '500: Internal Server Error if you try to send a message to someone who isn''t a
  match'
- '500: Internal Server Error when trying to send a message to someone who isn''t
  a match'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.gotinder.com
  auth:
    type: apikey
    header_name: X-Auth-Token
    location: header
  headers:
    Content-type: application/json
    User-agent: 'User-Agent: Tinder/3.0.4 (iPhone; iOS 7.1; Scale/2.00)'
    X-Auth-Token: A UUID4 format authentication token obtained via the /auth api endpoint
source_metadata: null
