resources:
- name: verification_config
  endpoint:
    path: /api/v2/smart-contracts/verification/config
    method: GET
    data_selector: No content
- name: verification_flattened_contract
  endpoint:
    path: /api/v2/smart-contracts/0xb12cad649a56e67188bbaa56583c18dc7d2812ed/verification/via/flattened-code
    method: POST
    data_selector: No content
- name: verification_standard_json
  endpoint:
    path: /api/v2/smart-contracts/0x9c1c619176b4f8521a0ab166945d785b92aef453/verification/via/standard-input
    method: POST
    data_selector: No content
- name: verification_sourcify
  endpoint:
    path: /api/v2/smart-contracts/0x030f7c7dbd472864220bcf9e37ede1b8a3125970/verification/via/sourcify
    method: POST
    data_selector: No content
- name: verification_multipart
  endpoint:
    path: /api/v2/smart-contracts/0x030f7c7dbd472864220bcf9e37ede1b8a3125970/verification/via/multi-part
    method: POST
    data_selector: No content
- name: verification_vyper_contract
  endpoint:
    path: /api/v2/smart-contracts/0xd73249995040f04cb891bdf0f997579ee3a6676c/verification/via/vyper-code
    method: POST
    data_selector: null
    params: {}
- name: verification_multipart_vyper
  endpoint:
    path: /api/v2/smart-contracts/0xc3fd3c09d5481f4d6c85e70775804de4c93fe630/verification/via/vyper-multi-part
    method: POST
    data_selector: null
    params: {}
- name: verification_standard_json_vyper
  endpoint:
    path: /api/v2/smart-contracts/0xc3fd3c09d5481f4d6c85e70775804de4c93fe630/verification/via/vyper-standard-input
    method: POST
    data_selector: null
    params: {}
- name: address
  endpoint:
    path: /graphiql
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /graphiql
    method: POST
    data_selector: data
    params: {}
- name: user_merit_info
  endpoint:
    path: /api/v1/auth/user/{address}
    method: GET
    data_selector: User Information
- name: user_leaderboard
  endpoint:
    path: /api/v1/leaderboard/users/{address}
    method: GET
    data_selector: User leaderboard information
- name: partner_balance
  endpoint:
    path: /partner/api/v1/balance
    method: GET
    data_selector: Partner balance information
- name: distribute_merits
  endpoint:
    path: /partner/api/v1/distribute
    method: POST
    data_selector: Distribution results
- name: user_balances
  endpoint:
    path: /api/v1/user/balances
    method: GET
    data_selector: total
- name: user_logs
  endpoint:
    path: /api/v1/user/logs
    method: GET
    data_selector: items
- name: account
  endpoint:
    path: /api
    method: GET
    params:
      module: account
- name: logs
  endpoint:
    path: /api
    method: GET
    params:
      module: logs
- name: token
  endpoint:
    path: /api
    method: GET
    params:
      module: token
- name: stats
  endpoint:
    path: /api
    method: GET
    params:
      module: stats
- name: block
  endpoint:
    path: /api
    method: GET
    params:
      module: block
- name: contract
  endpoint:
    path: /api
    method: GET
    params:
      module: contract
- name: transaction
  endpoint:
    path: /api
    method: GET
    params:
      module: transaction
- name: blocks
  endpoint:
    path: /api?module=block&action=getblockreward
    method: GET
- name: transactions
  endpoint:
    path: /api?module=account&action=txlist
    method: GET
- name: accounts
  endpoint:
    path: /api?module=account&action=balance
    method: GET
- name: tokens
  endpoint:
    path: /api?module=token&action=getTokenInfo
    method: GET
- name: transaction_notifications
  endpoint:
    path: /devs/apis
    method: GET
    data_selector: transactions
- name: transaction_history
  endpoint:
    path: /devs/apis
    method: GET
    data_selector: history
- name: da-indexer
  endpoint:
    path: /api/v1/celestia/blob
    method: GET
    data_selector: records
- name: nethermind_http
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: geth_http
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: blocks
  endpoint:
    path: /api/blocks
    method: GET
    data_selector: blocks
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: transactions
- name: transaction_summary
  endpoint:
    path: /api/transaction_summary
    method: GET
    data_selector: data
    params: {}
- name: transaction_overview
  endpoint:
    path: /api/transaction_overview
    method: GET
    data_selector: data
    params: {}
- name: token_transfers
  endpoint:
    path: /api/token_transfers
    method: GET
    data_selector: data
    params: {}
- name: read_contract
  endpoint:
    path: /devs/verification/interacting-with-smart-contracts#read-contract
    method: GET
    data_selector: contract_attributes
    params: {}
- name: write_contract
  endpoint:
    path: /devs/verification/interacting-with-smart-contracts#write-contract
    method: POST
    data_selector: transaction_details
    params: {}
- name: smart_contract_verification
  endpoint:
    path: /devs/verification/blockscout-smart-contract-verification-api
    method: GET
    data_selector: data
    params: {}
- name: stylus_verification
  endpoint:
    path: /api/v2/smart-contracts/<address_hash>/verification/via/stylus-github-repository
    method: POST
    data_selector: result
    params: {}
notes:
- The default rate limit for requests is 10 requests/second set via the API_RATE_LIMIT
  variable.
- Requests made using an individual API key are limited to 10 req/sec but are not
  shared by other users.
- You can retrieve basic data without an API key, but for interactivity purposes you
  will need to request one.
- API Keys are available to enhance request availability. Keys give users the ability
  to query the API up to 10 requests/sec.
- The value of requests per API key is managed via API_RATE_LIMIT_BY_KEY. The default
  value is 50.
- A maximum of 3 keys can be created for each account.
- Blockscout uses the keyset pagination method to quickly return results.
- No API key is required for Blockscout, but you can use our free API key to access
  higher limits if needed.
- Revokescout lets you manage your approvals from a single interface.
- This does not require any gas or transaction fees.
- Contextual blockchain data access for AI tools
- Multi-chain support via getting Blockscout instance URLs from Chainscout
- Custom instructions for MCP host to use the server
- Supports MCP progress notifications for multi-step tool operations, allowing clients
  to track execution status
- 'Enhanced User Experience: Provides periodic progress updates for long-running API
  queries when requested by the client, improving responsiveness'
- The Blockscout SDK is currently in beta release.
- Chainscout is currently in Beta.
- 'The indexer API is available here: http://example.com:8050/api/v1/celestia/blob'
- The node needs some time to sync with other Celestia nodes and download data.
- ETHEREUM_JSONRPC_CASE and ETHEREUM_JSONRPC_WEB_SOCKET_CASE are used for testing.
- Ensure to set environment variables before running tests.
- If you request too much data at the same time you may receive a timeout. Decreasing
  the period of time for an export (1 week timeframe is recommended for addresses
  with lots of transactions) can reduce these errors.
- BlockScout can be resource intensive.
- If your instance is running slowly, clear the cache.
- Increase the memory limit for indexers if indexing is slow.
- No authentication is required to access the Blockscout API.
- You can sign up for an account using either an email or your Github credentials.
- Low integrator fees (.075%) on swaps.
- Aggregator checks across 32 exchanges and 19 bridges for best prices.
- API key for Blockscout verification is optional.
errors:
- '400 Bad Request: Check that the parameters are correct.'
- '401 Unauthorized: Ensure API key is valid and included in the request.'
- '400 Bad Request: Check request format'
- '401 Unauthorized: Invalid API key or token'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Recheck wallet connection or permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://eth.blockscout.com
source_metadata: null
