resources:
- name: appointment_scheduling
  endpoint:
    path: /api/psc/appointments
    method: GET
- name: phlebotomy_availability
  endpoint:
    path: /api/phlebotomy/availability
    method: GET
- name: user
  endpoint:
    path: /v2/user
    method: POST
    data_selector: user_id
    params: {}
- name: labtest_order_created
  endpoint:
    path: /event-catalog/labtest.order.created
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /v2/user/
    method: POST
    data_selector: client_user_id
- name: summary_sleep
  endpoint:
    path: /summary/sleep
    method: GET
    data_selector: data
- name: wearable_data_events
  endpoint:
    path: /api/v1/wearable_data_events
    method: POST
    data_selector: data
- name: wearable_data_events
  endpoint:
    path: /webhooks/events
    method: POST
    data_selector: data
- name: team_etl_pipeline
  endpoint:
    path: /api-reference/org-management/team-etl-pipeline/upsert-team-etl-pipelines
    method: POST
    data_selector: data
    params: {}
- name: team_etl_pipeline
  endpoint:
    path: /api-reference/org-management/team-etl-pipeline/upsert-team-etl-pipelines
    method: POST
    data_selector: ''
    params: {}
- name: beurer_api
  endpoint:
    path: /beurer
    method: GET
- name: dexcom
  endpoint:
    path: /dexcom
    method: GET
- name: eight_sleep
  endpoint:
    path: /eight_sleep
    method: GET
- name: abbott_libreview
  endpoint:
    path: /abbott_libreview
    method: GET
- name: freestyle_libre
  endpoint:
    path: /freestyle_libre
    method: GET
- name: fitbit
  endpoint:
    path: /fitbit
    method: GET
- name: garmin
  endpoint:
    path: /garmin
    method: GET
- name: hammerhead
  endpoint:
    path: /hammerhead
    method: GET
- name: oura
  endpoint:
    path: /oura
    method: GET
- name: peloton
  endpoint:
    path: /peloton
    method: GET
- name: strava
  endpoint:
    path: /strava
    method: GET
- name: wahoo
  endpoint:
    path: /wahoo
    method: GET
- name: withings
  endpoint:
    path: /withings
    method: GET
- name: zwift
  endpoint:
    path: /zwift
    method: GET
- name: polar
  endpoint:
    path: /polar
    method: GET
- name: cronometer
  endpoint:
    path: /cronometer
    method: GET
- name: ultrahuman
  endpoint:
    path: /ultrahuman
    method: GET
- name: providers
  endpoint:
    path: /v2/providers
    method: GET
- name: link_token
  endpoint:
    path: /v2/link/token
    method: POST
- name: data_point_with_time_zone_offset
  endpoint:
    path: /wearables/providers/data-point-with-time-zone-offset
    method: GET
    data_selector: data
    params: {}
- name: data_point_with_no_time_zone_offset
  endpoint:
    path: /wearables/providers/data-point-with-no-time-zone-offset-null
    method: GET
    data_selector: data
    params: {}
- name: data_point_in_floating_time
  endpoint:
    path: /wearables/providers/data-point-in-floating-time-abbott-libreview-%26-freestyle-libre
    method: GET
    data_selector: data
    params: {}
- name: demo_connection
  endpoint:
    path: /v2/link/connect/demo
    method: POST
    data_selector: null
    params: {}
- name: workout_distance
  endpoint:
    path: /api-reference/data/timeseries/workout-distance
    method: GET
    data_selector: records
- name: workout_swimming_stroke
  endpoint:
    path: /api-reference/data/timeseries/workout-swimming-stroke
    method: GET
    data_selector: records
- name: heart_rate_recovery_one_minute
  endpoint:
    path: /api-reference/data/timeseries/heart-rate-recovery-one-minute
    method: GET
    data_selector: records
- name: lab_tests
  endpoint:
    path: /v3/lab_tests
    method: GET
- name: lab_test
  endpoint:
    path: /v3/lab_test
    method: GET
- name: link_password_provider
  endpoint:
    path: /v2/link/provider/password/{provider}
    method: POST
    data_selector: state
    params: {}
- name: user_connections
  endpoint:
    path: /v2/user/providers/{user_id}
    method: GET
    data_selector: providers
- name: generate_link_token
  endpoint:
    path: /v2/link/token
    method: POST
    data_selector: link_token
    params: {}
- name: introspect_historical_pulls
  endpoint:
    path: /v2/introspect/historical_pull
    method: GET
    data_selector: data
    params: {}
- name: OAuth Providers
  endpoint:
    path: /wearables/connecting-providers/auth_types
    method: GET
    data_selector: providers
    params: {}
- name: Email Providers
  endpoint:
    path: /wearables/connecting-providers/auth_types
    method: GET
    data_selector: providers
    params: {}
- name: Email + Password Providers
  endpoint:
    path: /wearables/connecting-providers/auth_types
    method: GET
    data_selector: providers
    params: {}
- name: blood_oxygen
  endpoint:
    path: /v2/timeseries/{user_id}/blood_oxygen/grouped
    method: GET
    data_selector: groups
    params:
      start_date: '{{START_DATE}}'
      end_date: '{{END_DATE}}'
- name: introspect_resources
  endpoint:
    path: /v2/introspect/resources
    method: GET
    data_selector: data
- name: sign_in_token
  endpoint:
    path: /v2/user/{user_id}/sign_in_token
    method: POST
    data_selector: sign_in_token
- name: order
  endpoint:
    path: /lab_test_lifecycle/order
    method: GET
    data_selector: order
    params: {}
- name: user
  endpoint:
    path: /v2/user/
    method: POST
    data_selector: ''
    params: {}
- name: lab_tests
  endpoint:
    path: /v3/lab_tests/
    method: GET
    data_selector: lab_tests
    params: {}
- name: order
  endpoint:
    path: /v3/order/
    method: POST
    data_selector: ''
    params: {}
- name: appointment_availability
  endpoint:
    path: /v3/order/psc/schedulling/appointment-psc-availability
    method: GET
    data_selector: available_slots
- name: appointment_booking
  endpoint:
    path: /v3/order/psc/schedulling/appointment-psc-booking
    method: POST
    data_selector: booking_status
- name: appointment_rescheduling
  endpoint:
    path: /v3/order/psc/schedulling/appointment-psc-rescheduling
    method: POST
    data_selector: rescheduling_status
- name: appointment_cancelling
  endpoint:
    path: /v3/order/psc/schedulling/appointment-psc-cancelling
    method: POST
    data_selector: cancelling_status
- name: psc_info
  endpoint:
    path: /v3/order/psc/info
    method: GET
    data_selector: patient_service_centers
- name: area_info
  endpoint:
    path: /v3/order/area/info
    method: GET
    data_selector: central_labs
- name: insurance
  endpoint:
    path: /{user_id}/insurance
    method: POST
    data_selector: insurance
    params: {}
- name: order
  endpoint:
    path: /order
    method: POST
    data_selector: order
    params: {}
- name: area_info
  endpoint:
    path: /v3/order/area/info
    method: GET
    data_selector: area_info
    params: {}
- name: simulate_order
  endpoint:
    path: /api-reference/lab-testing/simulate-order
    method: POST
- name: lab_tests
  endpoint:
    path: /lab_tests
    method: POST
    data_selector: order_set
- name: lab_tests
  endpoint:
    path: /lab_tests
    method: POST
    data_selector: order_set
- name: markers
  endpoint:
    path: /v3/lab_tests/markers
    method: GET
    data_selector: markers
- name: consents
  endpoint:
    path: /api/consents
    method: GET
- name: physician
  endpoint:
    path: /api/physician
    method: GET
- name: minors
  endpoint:
    path: /api/minors
    method: GET
- name: create_order
  endpoint:
    path: /api-reference/lab-testing/create-order
    method: POST
- name: get_orders
  endpoint:
    path: /api-reference/lab-testing/get-orders
    method: GET
- name: cancel_appointment
  endpoint:
    path: /v3/order/<order_id>/phlebotomy/appointment/cancel
    method: PATCH
    data_selector: response
    params: {}
- name: cancel_order
  endpoint:
    path: /v3/lab_test/<order_id>/cancel
    method: DELETE
    data_selector: response
    params: {}
- name: lab_tests
  endpoint:
    path: /v3/lab_tests
    method: POST
    data_selector: lab_test
- name: markers
  endpoint:
    path: /v3/lab_tests/markers
    method: GET
    data_selector: markers
- name: order_testkit
  endpoint:
    path: /v3/order/testkit
    method: POST
    data_selector: data
    params: {}
- name: register_testkit
  endpoint:
    path: /v3/order/testkit/register/
    method: POST
    data_selector: data
    params: {}
- name: import_order
  endpoint:
    path: /lab_tests/import_order
    method: POST
    data_selector: data
    params: {}
- name: lab_tests_markers
  endpoint:
    path: /v3/lab_tests/markers
    method: GET
    data_selector: aoe
- name: lab_test_id_markers
  endpoint:
    path: /v3/lab_tests/{lab_test_id}/markers
    method: GET
    data_selector: aoe
- name: create_order
  endpoint:
    path: /v3/order
    method: POST
    data_selector: aoe_answers
- name: order_results_pdf
  endpoint:
    path: /v3/order/result/pdf
    method: GET
    data_selector: results
- name: critical_results
  endpoint:
    path: /order/{order_id}/result
    method: GET
    data_selector: data
- name: order
  endpoint:
    path: /v3/order
    method: POST
- name: area_info
  endpoint:
    path: /v3/order/area/info
    method: GET
- name: appointment_book
  endpoint:
    path: /v3/order/{order_id}/phlebotomy/appointment/book
    method: POST
- name: appointment_request
  endpoint:
    path: /v3/order/{order_id}/phlebotomy/appointment/request
    method: POST
- name: order_lifecycle
  endpoint:
    path: /order/lifecycle
    method: GET
    data_selector: records
- name: appointment_lifecycle
  endpoint:
    path: /appointment/lifecycle
    method: GET
    data_selector: records
- name: order_webhook_events
  endpoint:
    path: /lab/at-home-phlebotomy/webhooks
    method: POST
    data_selector: data
- name: appointment_webhook_events
  endpoint:
    path: /lab/at-home-phlebotomy/webhooks
    method: POST
    data_selector: data
- name: sms_messages
  endpoint:
    path: /sms/messages
    method: GET
    data_selector: messages
    params: {}
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: emails
    params: {}
- name: order_lifecycle
  endpoint:
    path: /api-reference/lab-testing/order-lifecycle
    method: GET
    data_selector: statuses
- name: appointment_lifecycle
  endpoint:
    path: /api-reference/lab-testing/appointment-lifecycle
    method: GET
    data_selector: statuses
- name: order_webhook_events
  endpoint:
    path: /lab/walk-in/order-lifecycle
    method: GET
    data_selector: events
    params: {}
- name: default_communications
  endpoint:
    path: /default-communications
    method: GET
- name: sms_messages
  endpoint:
    path: /sms-messages
    method: GET
- name: emails
  endpoint:
    path: /emails
    method: GET
- name: disable_communications
  endpoint:
    path: /disable-communications
    method: GET
- name: registered_testkits
  endpoint:
    path: /api/order/lifecycle/registered
    method: GET
    data_selector: statuses
- name: registrable_testkits
  endpoint:
    path: /api/order/lifecycle/registrable
    method: GET
    data_selector: statuses
- name: labtest.order.created
  endpoint:
    path: /event-catalog/labtest.order.created
    method: POST
- name: labtest.order.updated
  endpoint:
    path: /event-catalog/labtest.order.updated
    method: POST
- name: sms_messages
  endpoint:
    path: /lab/testkits/communications/sms
    method: GET
- name: disable_communications
  endpoint:
    path: /lab/testkits/communications/disable
    method: POST
- name: order_webhook_events
  endpoint:
    path: /lab/on-site-collection/order-lifecycle
    method: GET
    data_selector: events
    params: {}
- name: default_communications
  endpoint:
    path: /communications/default
    method: GET
    data_selector: communications
    params: {}
- name: sms_messages
  endpoint:
    path: /communications/sms
    method: GET
    data_selector: sms
    params: {}
- name: emails
  endpoint:
    path: /communications/emails
    method: GET
    data_selector: emails
    params: {}
- name: area_info
  endpoint:
    path: /v3/order/area/info
    method: GET
    data_selector: central_labs
    params: {}
- name: psc_info
  endpoint:
    path: /v3/order/psc/info
    method: GET
    data_selector: patient_service_centers
    params: {}
- name: appointment_availability
  endpoint:
    path: /api-reference/lab-testing/psc-schedulling/appointment-psc-availability
    method: GET
    data_selector: availability
    params: {}
- name: appointment_booking
  endpoint:
    path: /api-reference/lab-testing/psc-schedulling/appointment-psc-booking
    method: POST
    data_selector: booking
    params: {}
- name: area_info
  endpoint:
    path: /v3/order/area/info
    method: GET
    data_selector: records
    params:
      zip_code: '85004'
      radius: '25'
- name: order
  endpoint:
    path: /v3/order
    method: POST
    data_selector: order
- name: orders
  endpoint:
    path: /v3/orders
    method: GET
    data_selector: orders
    params:
      page: 1
      size: 50
- name: order
  endpoint:
    path: /v3/order/{order_id}
    method: GET
    data_selector: data
    params: {}
- name: ClientFacingOrder
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: cancel_order
  endpoint:
    path: /api-reference/lab-testing/cancel-order
    method: POST
- name: cancel_order
  endpoint:
    path: /v3/order/{order_id}/cancel
    method: POST
    data_selector: order
- name: order
  endpoint:
    path: /api-reference/lab-testing/get-order
    method: GET
    data_selector: object
    params:
      order_id: string<uuid>
- name: requisition_pdf
  endpoint:
    path: /v3/order/{order_id}/requisition/pdf
    method: GET
    data_selector: any
    params:
      order_id: string<uuid>
- name: abn_form_pdf
  endpoint:
    path: /v3/order/{order_id}/abn_pdf
    method: GET
    data_selector: any
    params:
      order_id: string<uuid>
- name: get_labels_pdf
  endpoint:
    path: /v3/order/{order_id}/labels/pdf
    method: GET
    data_selector: any
    params:
      number_of_labels: 3
      collection_date: ''
- name: create_unregistered_testkit_order
  endpoint:
    path: /v3/order/testkit
    method: POST
    data_selector: order
- name: register_testkit_order
  endpoint:
    path: /v3/order/testkit/register
    method: POST
- name: import_order
  endpoint:
    path: /v3/order/import
    method: POST
    data_selector: order
    params: {}
- name: simulate_order
  endpoint:
    path: /v3/order/{order_id}/test
    method: POST
- name: collection_instructions
  endpoint:
    path: /v3/order/{order_id}/collection_instruction_pdf
    method: GET
    data_selector: any
- name: update_order_draw_completed
  endpoint:
    path: /v3/order/{order_id}/draw_completed
    method: PATCH
- name: psc_info
  endpoint:
    path: /v3/order/psc/info
    method: GET
    params:
      zip_code: '85004'
      lab_id: 27
- name: order_psc_info
  endpoint:
    path: /v3/order/{order_id}/psc/info
    method: GET
    data_selector: patient_service_centers
- name: lab_tests
  endpoint:
    path: /v3/lab_tests
    method: GET
    data_selector: records
    params: {}
- name: lab_test
  endpoint:
    path: /v3/lab_test
    method: GET
    data_selector: data
- name: available_biomarkers
  endpoint:
    path: /v3/lab_tests/markers
    method: GET
    data_selector: markers
    params:
      page: 1
      size: 50
- name: labs
  endpoint:
    path: /v3/lab_tests/labs
    method: GET
    data_selector: ''
- name: lab_tests
  endpoint:
    path: /v3/lab_tests
    method: POST
    data_selector: data
- name: available_tests
  endpoint:
    path: /api-reference/lab-testing/tests
    method: GET
    data_selector: data
- name: available_labs
  endpoint:
    path: /api-reference/lab-testing/labs
    method: GET
    data_selector: data
- name: lab_tests
  endpoint:
    path: /v3/lab_tests/{lab_test_id}
    method: PATCH
    data_selector: records
    params: {}
- name: lab_test_markers
  endpoint:
    path: /v3/lab_tests/{lab_test_id}/markers
    method: GET
    data_selector: markers
    params:
      page: 1
- name: markers_for_order_set
  endpoint:
    path: /v3/lab_tests/list_order_set_markers
    method: POST
    data_selector: markers
    params:
      page: 1
      size: 50
- name: collection_instructions
  endpoint:
    path: /v3/lab_test/{lab_test_id}/collection_instruction_pdf
    method: GET
    data_selector: any
notes:
- Walk-in Phlebotomy orders now allow for appointment booking directly with Vital.
- The API always responds with 14 days worth of slots.
- Junction Management API is available for the Scale plan.
- Vital Link API covers only cloud-based providers.
- After production launch, you will have direct access to Slack and our engineers.
- Must use sandbox API key in the Sandbox environment.
- User ID is required to fetch user-specific data.
- If you make the API request without a `traceparent` header, Vital’s infrastructure
  assigns a unique trace ID to it on entry.
- Each message is attempted based on a retry schedule with exponential backoff.
- If an endpoint is removed or disabled delivery attempts to the endpoint will be
  disabled as well.
- The way to indicate that a webhook has been processed is by returning a 2xx (status
  code 200-299) response to the webhook message within a reasonable time-frame (15s).
  Any other status code, including 3xx redirects are treated as failures.
- After the conclusion of the above attempts the message will be marked as Failed
  for this endpoint, and you will get a webhook of type message.attempt.exhausted
  notifying you of this error.
- If all attempts to a specific endpoint fail for a period of 5 days, the endpoint
  will be disabled. The clock only starts after multiple deliveries failed within
  a 24 hour span, with at least 12 hours difference between the first and the last
  failure.
- Each event contains a top-level event_type field and a data field.
- Vital streams all events continuously to a supported destination over direct authenticated
  TLS connections.
- Events are published through authenticated channels over TLS.
- Payload smaller than 1KiB would not be compressed.
- Vital publishes exclusively JSON blobs (`blob-type == json`).
- Publisher Confirm mode is required
- Events are published with the Mandatory flag but without the Immediate flag
- Some polling-based providers can write 96 writes per day per user on certain event
  types, e.g., like `daily.data.activity.*` and `raw.fitbit.daily_activity_summary`.
- Vital Health SDK can subscribe to Apple HealthKit Background Delivery
- You must configure your App Delegate for Apple HealthKit Background Delivery to
  function as expected
- Enabling Apple HealthKit will attract additional scrutiny in the App Store Review
  process
- When you signOut() a user, Vital SDK will automatically disable Background Sync.
- Apps using Android Health Connect require prior Google approval before they can
  be released on Google Play Store.
- Only cloud-based providers are supported.
- Demo users expire after 7 days, meaning the user and its data will be deleted.
- Horizon AI Query is in closed beta. Interested in the Horizon AI Query? Get in touch
  with your Customer Success Manager.
- With abbott_libreview, Vital uses the provided LibreView patient account credentials
  to connect directly to LibreView.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The removal will happen on or after 31 January 2025.
- The removal will happen on or after 31 June 2024.
- This connects auth providers that are password based.
- The vital link token is a one time use token, that expires after 10 minutes.
- The endpoint can return data for fewer users than the user_limit.
- To ensure future compatibility, avoid exhaustive matching on enum values such as
  an order’s status.
- You can get API keys by signing up for a Vital account in the Dashboard.
- In Sandbox, you will already have access to a default set of tests.
- This feature is in closed beta.
- You must supply billing_type with commercial_insurance to trigger the insurance
  flow.
- When testing the At-Home Phlebotomy, there is only one specific address which is
  allowed, this address is `West Lincoln Street, Phoenix, AZ 85004, USA`.
- 'Vital supports three collection methods: At Home Phlebotomy, Walk In Phlebotomy,
  and Testkits.'
- Ordering for minors requires a specific configuration.
- Lab tests are not immediately available after creation; they need to be validated
  and approved.
- Imported orders must be created with the correct sample ID.
- Orders may have partial results, meaning that the lab has made available part of
  the result, while the full result is not complete.
- Some laboratories do not issue PDFs for partial results, and only provide PDF reports
  once all results are finalized.
- Critical results are notified as soon as they’re available, not all tests are guaranteed
  to have been processed by the lab.
- Follow up call with the patient only happens for orders processed by our physician
  network.
- Phlebotomy appointments are not supported for patients under 18 years of age.
- The same patient can’t have more than one active appointment with a specific Phlebotomy
  provider.
- The addresses provided when fetching the appointment availability slots must be
  reachable by the phlebotomist, containing street number and unit (if exists).
- Walk-in tests are one of our offered modalities.
- In sandbox, there is no async transition from the ordered state to the requisition_created
  state, this must be manually triggered via the Vital Dashboard.
- The `partial_results` status does not trigger a Webhook unless specifically requested
  from Vital.
- If the testkit is un-registered, then the user must register it in order for the
  results to be processed.
- SMS Texts are customizable, and can be enabled or disabled individually.
- We do not send emails for At-home Testkits.
- This feature is in closed beta. Interested in this feature? Get in touch with your
  Customer Success Manager.
- Requires API key in the header for authorization.
- Requires setup of API key
- Vital Team API Key is required in the header.
- Retrieving ABNs is currently in closed beta.
- 'Deprecated: This endpoint is deprecated. Please use the paginated version `/v3/lab_test`
  instead.'
- Default page size for lab tests is 50
- Requires setup of API key.
errors:
- '400 Bad Request: User ID conflict'
- '422 Unprocessable Entity: Validation error'
- '400 Bad Request: Check your request format and parameters.'
- '401 Unauthorized: Ensure the API key is correct.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Retry the API request at least once'
- '503 Service Unavailable: Consider retry attempts with exponential backoff'
- '400 Bad Request: Check the structure of the event payload.'
- '200'
- '422'
- '200: Successful Response'
- '422: Invalid request'
- 'invalid_token: The Link Token is invalid or malformed.'
- 'token_expired: The Link Token has expired.'
- 'token_consumed: A successful connection establishment had consumed this Link Token.'
- 'provider_credential_error: An error occurred during the provider authentication
  flow.'
- 'provider_password_expired: The supplied password has expired due to the password
  rotation policy of the provider.'
- 'provider_api_error: An unexpected error occurred when Junction Link attempts to
  connect to the provider API.'
- 'unsupported_region: The region you specified is not supported.'
- 'duplicate_connection: The provider credential has an existing connection to a different
  user in your team.'
- 'required_scopes_not_granted: User did not grant all required scopes.'
- 'incorrect_mfa_code: The MFA code entered is incorrect.'
- '401 INVALID_REQUEST: Link Token is Invalid'
- '400 MISSING_LINK_TOKEN: Missing link token'
- '400 INVALID_PROVIDER: Provider is not supported'
- '400 INVALID_USER_ID: User id is incorrect'
- '400 INVALID_CREDENTIALS: Credentials for provider are incorrect'
- '422: Error in request'
- Order with commercial_insurance billing for a lab that does not support it.
- Order with commercial_insurance billing for a state that does not support it.
- Order with commercial_insurance billing and provide no ICD codes or invalid ICD
  codes.
- Order with commercial_insurance billing and the user has no insurance data.
- '400 Bad Request: Ensure the request format is correct and all required fields are
  included.'
- '400 Bad Request: collection_method must be set if add_on is set'
- '400 Bad Request: marker_ids or provider_ids must be set in add_on'
- '400 Bad Request: cannot set both marker_ids and provider_ids in add_on'
- '400 Bad Request: cannot order lab_tests from multiple labs'
- '400 Bad Request: cannot order with lab tests with multiple collection methods'
- '400 Bad Request: Lab <lab name> does not allow gender <gender value>'
- '422: Validation Error'
- '422: Unprocessable Entity'
- '200: Success'
- '200: PDF with ABN form'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '422: Validation Errors'
auth_info:
  mentioned_objects:
  - Signing Secret
  - OauthToken
  - AuthProvider
  - NamedCredential
  - x-vital-api-key
  - Vital Team API Key
client:
  base_url: https://api.tryvital.io
  auth:
    type: apikey
    location: header
    header_name: x-vital-api-key
  headers:
    Accept: application/json
    Content-Type: application/json
source_metadata: null
