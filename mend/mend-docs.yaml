resources:
- name: SAML Integration
  endpoint:
    path: /saml/integration
    method: POST
    data_selector: settings
    params: {}
- name: SAML Integration
  endpoint:
    path: /saml/integration
    method: POST
    data_selector: settings
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: SBOM Import
  endpoint:
    path: /api/v1/sbom/import
    method: POST
    data_selector: results
    params: {}
- name: packages
  endpoint:
    path: /path/to/packages
    method: GET
    data_selector: packages
- name: relationships
  endpoint:
    path: /path/to/relationships
    method: GET
    data_selector: relationships
- name: components
  endpoint:
    path: /components
    method: GET
    data_selector: components
    params: {}
- name: dependencies
  endpoint:
    path: /dependencies
    method: GET
    data_selector: dependencies
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: applications
- name: project
  endpoint:
    path: /projects
    method: DELETE
    data_selector: projectDeletionResponse
    params: {}
- name: Workflows
  endpoint:
    path: /api/workflows
    method: GET
    data_selector: workflows
- name: Workflow
  endpoint:
    path: /workflows
    method: GET
    data_selector: workflows
- name: automation_workflow
  endpoint:
    path: /delete-automation-workflow
    method: DELETE
- name: policy_violations
  endpoint:
    path: /platform/latest/configure-policy-violations-with-workflows
    method: GET
- name: violating_findings
  endpoint:
    path: /violating_findings
    method: GET
    data_selector: findings
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scans
    method: GET
    data_selector: records
- name: Mend CLI for Linux (Intel)
  endpoint:
    path: https://downloads.mend.io/cli/linux_amd64/mend
    method: GET
    data_selector: binary
    params: {}
- name: Mend CLI for MacOS (Apple Silicon)
  endpoint:
    path: https://downloads.mend.io/cli/darwin_arm64/mend
    method: GET
    data_selector: binary
    params: {}
- name: Mend CLI for MacOS (Intel)
  endpoint:
    path: https://downloads.mend.io/cli/darwin_amd64/mend
    method: GET
    data_selector: binary
    params: {}
- name: Mend CLI for Windows (Intel)
  endpoint:
    path: https://downloads.mend.io/cli/windows_amd64/mend.exe
    method: GET
    data_selector: binary
    params: {}
- name: malicious_packages
  endpoint:
    path: /malicious-packages
    method: GET
    data_selector: malicious_packages
- name: cve_vulnerabilities
  endpoint:
    path: /cve-vulnerabilities
    method: GET
    data_selector: cve_vulnerabilities
- name: automation_workflow_violations
  endpoint:
    path: /automation-workflow-violations
    method: GET
    data_selector: automation_workflow_violations
- name: paths_at_risk
  endpoint:
    path: /paths-at-risk
    method: GET
    data_selector: paths_at_risk
- name: Mend CLI SCA parameters
  endpoint:
    path: /mend/cli/sca/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: sca_reachability
  endpoint:
    path: /sca/reachability
    method: GET
    data_selector: data
- name: Container Image Scan
  endpoint:
    path: /image
    method: POST
    data_selector: results
- name: container_image_scan
  endpoint:
    path: /mend/image
    method: POST
- name: scan_results
  endpoint:
    path: /scan/results
    method: GET
    data_selector: results
- name: report_parameters
  endpoint:
    path: /mend/iac/report_parameters
    method: GET
    data_selector: parameters
- name: terminal_view_parameters
  endpoint:
    path: /mend/iac/terminal_view_parameters
    method: GET
    data_selector: parameters
- name: upload_parameters
  endpoint:
    path: /mend/iac/upload_parameters
    method: GET
    data_selector: parameters
- name: offline_parameters
  endpoint:
    path: /mend/iac/offline_parameters
    method: GET
    data_selector: parameters
- name: scan_results
  endpoint:
    path: /scan/results
    method: GET
    data_selector: results
- name: sca_logs
  endpoint:
    path: /.mend/logs/sca
    method: GET
- name: unified_agent_logs
  endpoint:
    path: /mend/ua
    method: GET
- name: sast_logs
  endpoint:
    path: /.mend/logs/sast
    method: GET
- name: container_images_logs
  endpoint:
    path: /.mend/logs/cn
    method: GET
- name: code_findings
  endpoint:
    path: /api/v3/findings/code
    method: GET
    data_selector: findings
    params: {}
- name: dependencies_findings
  endpoint:
    path: /api/v3/findings/dependencies
    method: GET
    data_selector: findings
    params: {}
- name: code_scan_results
  endpoint:
    path: /api/v1/code_scan_results
    method: GET
    data_selector: results
    params: {}
- name: import_results
  endpoint:
    path: /mend/code/import
    method: POST
    data_selector: results
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: data
    params: {}
- name: findings
  endpoint:
    path: /api/v1/findings
    method: GET
    data_selector: findings
    params: {}
- name: package_health
  endpoint:
    path: /services/data/vXX.X/sobjects/PackageHealth
    method: GET
    data_selector: records
- name: dependency_findings
  endpoint:
    path: /services/data/vXX.X/sobjects/DependencyFindings
    method: GET
    data_selector: records
- name: direct_libraries
  endpoint:
    path: /api/v1/direct_libraries
    method: GET
    data_selector: libraries
- name: findings
  endpoint:
    path: /api/v1/findings
    method: GET
    data_selector: findings
- name: package_maintenance_status
  endpoint:
    path: /api/package/maintenance_status
    method: GET
    data_selector: packages
    params: {}
- name: findings
  endpoint:
    path: /api/findings
    method: GET
    data_selector: data
    params: {}
- name: remediation_strategies
  endpoint:
    path: /remediation-strategies
    method: GET
    data_selector: strategies
- name: supported_languages
  endpoint:
    path: /supported-languages
    method: GET
    data_selector: languages
- name: Legal and Compliance Workflows
  endpoint:
    path: /legal-and-compliance/workflows
    method: GET
    data_selector: workflows
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: container_image
  endpoint:
    path: /api/v3/container-images
    method: GET
    data_selector: data
    params: {}
- name: Attribution Report
  endpoint:
    path: /reports/attribution
    method: POST
    data_selector: report
    params:
      format: JSON
- name: Due Diligence Report
  endpoint:
    path: /reports/due-diligence
    method: POST
    data_selector: report
    params:
      format: XML
- name: SBOM Report for Container Images
  endpoint:
    path: /sbom/report
    method: GET
    data_selector: report
    params: {}
- name: SBOM Report
  endpoint:
    path: /generate/sbom
    method: POST
    data_selector: report
    params: {}
- name: Reachability Results
  endpoint:
    path: /images/findings
    method: GET
- name: Packages
  endpoint:
    path: /images/packages
    method: GET
- name: sca_reachability_results
  endpoint:
    path: /api/sca/reachability-results
    method: GET
    data_selector: results
- name: sca_reachability_results
  endpoint:
    path: /sca/reachability/results
    method: GET
    data_selector: results
    params: {}
- name: vulnerabilities
  endpoint:
    path: /api/v1/reachability
    method: GET
    data_selector: results
- name: applications
  endpoint:
    path: /applications
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: scans
  endpoint:
    path: /scans
    method: GET
- name: org_policies
  endpoint:
    path: /org_policies
    method: GET
- name: total_findings
  endpoint:
    path: /total_findings
    method: GET
- name: findings_by_scan_engine
  endpoint:
    path: /findings_by_scan_engine
    method: GET
- name: findings_by_severity
  endpoint:
    path: /findings_by_severity
    method: GET
- name: project_state
  endpoint:
    path: /api/v1/projects/state
    method: GET
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: AI Inventory
  endpoint:
    path: /organizational-ai-reporting-how-to-use-and-why-it-
    method: GET
- name: AI Models Security Findings
  endpoint:
    path: /organizational-ai-reporting-how-to-use-and-why-it-
    method: GET
- name: Dependencies SBOM
  endpoint:
    path: /the-dependencies-sbom-report
    method: GET
- name: Dependencies Risk
  endpoint:
    path: /the-dependencies-risk-report
    method: GET
- name: Dependencies Due Diligence
  endpoint:
    path: /the-dependencies-due-diligence-report
    method: GET
- name: Dependencies Inventory
  endpoint:
    path: /the-dependencies-inventory-report
    method: GET
- name: Dependencies Attribution
  endpoint:
    path: /the-dependencies-attribution-report
    method: GET
- name: Dependencies Findings
  endpoint:
    path: /the-dependencies-findings-report
    method: GET
- name: Code Findings
  endpoint:
    path: /the-code-findings-report
    method: GET
- name: Code Compliance
  endpoint:
    path: /the-code-compliance-report
    method: GET
- name: Code Suppressions
  endpoint:
    path: /the-code-suppressions-report
    method: GET
- name: Container Image Attribution
  endpoint:
    path: /the-container-image-attribution-report
    method: GET
- name: Container Image Due Diligence
  endpoint:
    path: /the-container-image-due-diligence-report
    method: GET
- name: Container Image SBOM
  endpoint:
    path: /the-container-image-sbom-report
    method: GET
- name: ai_inventory_report
  endpoint:
    path: /reports/ai-inventory
    method: GET
    data_selector: data
    params: {}
- name: AI Inventory
  endpoint:
    path: /reports/ai_inventory
    method: GET
    data_selector: model_metadata
- name: AI Models Security Findings
  endpoint:
    path: /reports/ai_models_security_findings
    method: GET
    data_selector: security_findings
- name: Dependencies SBOM Report
  endpoint:
    path: /platform/latest/the-dependencies-sbom-report
    method: GET
- name: Dependencies SBOM report
  endpoint:
    path: /reports/dependencies-sbom-export
    method: POST
    data_selector: reports
    params:
      scope: Organization/Application/Project(s)
      sbom_standard: SPDX 2.2 / SPDX 2.3 / CycloneDX 1.4 / CycloneDX 1.5
      include_vulnerabilities: true/false
- name: AI Models Security Findings Report
  endpoint:
    path: /platform/latest/the-ai-models-security-findings-report
    method: GET
- name: dependencies_risk_report
  endpoint:
    path: /dependencies/risk-report
    method: GET
    data_selector: data
    params: {}
- name: dependencies_risk_report
  endpoint:
    path: /reports/dependencies_risk
    method: POST
    data_selector: report_data
    params:
      format: PDF
- name: Dependencies Due Diligence Report
  endpoint:
    path: /platform/latest/the-dependencies-due-diligence-report
    method: GET
- name: Dependencies Due Diligence Report
  endpoint:
    path: /platform/3.0/reports/exportproductduediligencereport
    method: GET
    data_selector: reportData
    params: {}
- name: Dependencies Inventory Report
  endpoint:
    path: /the-dependencies-inventory-report
    method: GET
- name: Dependencies Inventory
  endpoint:
    path: /reports/dependencies_inventory
    method: GET
    data_selector: libraries
- name: Dependencies Attribution Report
  endpoint:
    path: /the-dependencies-attribution-report
    method: GET
- name: attribution_report
  endpoint:
    path: /reports/dependencies-attribution
    method: POST
    data_selector: reportData
    params: {}
- name: dependencies_findings_report
  endpoint:
    path: /platform/latest/dependencies-findings-report
    method: GET
- name: Dependencies Findings
  endpoint:
    path: /reports/dependencies/findings
    method: POST
    data_selector: findings
    params: {}
- name: Code Findings
  endpoint:
    path: /reports/code-findings
    method: GET
    data_selector: findings
    params: {}
- name: Code Compliance Report
  endpoint:
    path: /reports/code-compliance
    method: POST
    data_selector: report
    params: {}
- name: Code Suppressions Report
  endpoint:
    path: /reports/code_suppressions
    method: GET
    data_selector: report_data
    params: {}
- name: Container Image Attribution
  endpoint:
    path: /reports/container-image-attribution
    method: GET
    data_selector: report_data
- name: Container Image SBOM
  endpoint:
    path: /reports/container-image-sbom
    method: GET
    data_selector: report
    params: {}
- name: access_management
  endpoint:
    path: /api/v3.0/login
    method: post
- name: administration_groups
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/groups/{groupUuid}
    method: get
- name: administration_users
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/users
    method: get
- name: administration_labels
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/labels
    method: get
- name: reports
  endpoint:
    path: /api/v3.0/projects/{projectUuid}/code/reports/findings
    method: post
- name: scans
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/projects/{projectUuid}/scans
    method: get
- name: projects
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/projects
    method: get
- name: applications
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/applications
    method: get
- name: findings_project
  endpoint:
    path: /api/v3.0/projects/{projectUuid}/dependencies/findings/security
    method: get
- name: findings_scan
  endpoint:
    path: /api/v3.0/projects/{projectUuid}/scans/{scanUuid}/code/findings
    method: get
- name: sast
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/settings/storage/encryption
    method: post
- name: integrations
  endpoint:
    path: /api/v3.0/orgs/{orgUuid}/integrations
    method: get
- name: red_team
  endpoint:
    path: /api/v3.0/projects/{projectUuid}/ai/redteam/trigger
    method: post
- name: issues
  endpoint:
    path: /api/v1/issues
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: Organizations
  endpoint:
    path: /api/v1/organizations
    method: GET
    data_selector: organizations
- name: Work Item Type Mapping
  endpoint:
    path: /api/v1/work_item_types
    method: GET
    data_selector: work_item_types
- name: automatic_issue_creation
  endpoint:
    path: /api/v3/issues
    method: POST
    data_selector: data
    params: {}
- name: automatic_issue_update
  endpoint:
    path: /api/v3/issues/{issueId}
    method: PATCH
    data_selector: data
    params: {}
- name: risk_factors
  endpoint:
    path: /api/v3/risk-factors
    method: GET
    data_selector: data
    params: {}
- name: risk_factors
  endpoint:
    path: /risk-factors
    method: GET
    data_selector: data
    params: {}
- name: risk_factors
  endpoint:
    path: /risk-factors
    method: GET
    data_selector: factors
    params: {}
- name: risk_factors
  endpoint:
    path: /api/risk_factors
    method: GET
    data_selector: data
    params: {}
- name: Get Project Security Findings
  endpoint:
    path: /platform/3.0/findings-project/getsecurityvulnerabilityfindings
    method: GET
    data_selector: threatAssessment
    params: {}
- name: risk_factors
  endpoint:
    path: /risk-factors
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: data
    params: {}
- name: AI Security Dashboard
  endpoint:
    path: /ai-security-dashboard
    method: GET
    data_selector: records
- name: discovery_of_shadow_ai_components
  endpoint:
    path: /platform/latest/discovery-of-shadow-ai-components
    method: GET
- name: AI Technologies
  endpoint:
    path: /ai/technologies
    method: GET
    data_selector: technologies
    params: {}
- name: ai_models
  endpoint:
    path: /v3/models
    method: GET
    data_selector: models
- name: inference_providers
  endpoint:
    path: /v3/inference_providers
    method: GET
    data_selector: providers
- name: AI Models
  endpoint:
    path: /path/to/ai/models
    method: GET
    data_selector: models
    params: {}
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: model_safety_statuses
  endpoint:
    path: /models/safety-statuses
    method: GET
    data_selector: statuses
- name: verified_unsafe_models
  endpoint:
    path: /models/verified-unsafe
    method: GET
    data_selector: models
- name: safe_models
  endpoint:
    path: /models/safe
    method: GET
    data_selector: models
- name: AI Models Security Findings
  endpoint:
    path: /api/v3/models/findings
    method: GET
    data_selector: findings
- name: Dependencies SBOM Report
  endpoint:
    path: /api/v3/dependencies/sbom
    method: GET
    data_selector: sbom
- name: targets
  endpoint:
    path: /api/v3/targets
    method: GET
    data_selector: data
- name: target_integration
  endpoint:
    path: /add-target
    method: POST
    data_selector: response.message
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: data
    params: {}
- name: test_run
  endpoint:
    path: /test/run
    method: GET
    data_selector: data
    params: {}
- name: test_run_history
  endpoint:
    path: /test_run/history
    method: GET
    data_selector: records
- name: probe_run
  endpoint:
    path: /api/probe-run
    method: GET
    data_selector: records
- name: probe_result
  endpoint:
    path: /api/probe/result
    method: GET
    data_selector: test_cases
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/v3/projects
    method: GET
    data_selector: data
    params: {}
- name: scans
  endpoint:
    path: /api/v3/scans
    method: GET
    data_selector: data
    params: {}
- name: probe_run
  endpoint:
    path: /platform/latest/probe-run
    method: GET
- name: probe_catalog
  endpoint:
    path: /probes
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: data
    params: {}
- name: risk_factors
  endpoint:
    path: /api/risk_factors
    method: GET
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
- name: Mend Travel Offers
  endpoint:
    path: /Mend_Travel_Offers_Spring_Summer_2025.txt
    method: GET
    data_selector: offers
    params: {}
- name: question_answer_pairs
  endpoint:
    path: /upload/csv
    method: POST
    data_selector: result
    params:
      separator: ;
- name: organization
  endpoint:
    path: /v3/organization
    method: GET
    data_selector: data
    params: {}
- name: project
  endpoint:
    path: /v3/projects
    method: GET
    data_selector: projects
    params: {}
- name: cyber_threats
  endpoint:
    path: /cyber-threats
    method: GET
    data_selector: data
    params: {}
- name: Fraudulent Activities
  endpoint:
    path: /fraudulent-activities
    method: GET
    data_selector: records
- name: probe
  endpoint:
    path: /api/v1/probe
    method: GET
    data_selector: data
    params: {}
- name: automation_workflow
  endpoint:
    path: /api/v3/automation/workflows
    method: GET
    data_selector: workflows
- name: global_code_scan_configuration
  endpoint:
    path: /api/v3/global_code_scan
    method: POST
    data_selector: configuration
    params: {}
- name: global_code_scan_configuration
  endpoint:
    path: /api/v1/global-code-scan-config
    method: POST
    data_selector: configuration
- name: code_scan_configuration
  endpoint:
    path: /api/v3/code-scan/configurations
    method: GET
    data_selector: configurations
- name: Code Scan Configurations
  endpoint:
    path: /code-scan/configurations
    method: GET
    data_selector: configurations
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
    params: {}
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: data
    params: {}
- name: Apex High Severity Vulnerabilities
  endpoint:
    path: /vulnerabilities/apex/high
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: Apex Medium Severity Vulnerabilities
  endpoint:
    path: /vulnerabilities/apex/medium
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: ASP Classic/Visual Basic/VBScript vulnerability types
  endpoint:
    path: /vulnerability-types/asp-classic
    method: GET
    data_selector: vulnerability_types
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: data
- name: applications
  endpoint:
    path: /api/v3/applications
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /api/v3/projects
    method: GET
    data_selector: data
- name: iOS Objective C High Severity Vulnerabilities
  endpoint:
    path: /iOS_Objective_C/High_Severity_Vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: iOS Objective C Medium Severity Vulnerabilities
  endpoint:
    path: /iOS_Objective_C/Medium_Severity_Vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: iOS Objective C Low Severity Vulnerabilities
  endpoint:
    path: /iOS_Objective_C/Low_Severity_Vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: php_high_severity_vulnerabilities
  endpoint:
    data_selector: CWE
    params: {}
- name: php_medium_severity_vulnerabilities
  endpoint:
    data_selector: CWE
    params: {}
- name: php_low_severity_vulnerabilities
  endpoint:
    data_selector: CWE
    params: {}
- name: PLSQL Vulnerability Types
  endpoint:
    path: /vulnerabilities/plsql
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
- name: applications
  endpoint:
    path: /api/applications
    method: GET
    data_selector: applications
- name: ruby_file_types
  endpoint:
    path: /ruby/file_types
    method: GET
    data_selector: file_types
- name: ruby_frameworks
  endpoint:
    path: /ruby/frameworks
    method: GET
    data_selector: frameworks
- name: ruby_vulnerabilities_high
  endpoint:
    path: /ruby/vulnerabilities/high
    method: GET
    data_selector: vulnerabilities
- name: ruby_vulnerabilities_medium
  endpoint:
    path: /ruby/vulnerabilities/medium
    method: GET
    data_selector: vulnerabilities
- name: ruby_vulnerabilities_low
  endpoint:
    path: /ruby/vulnerabilities/low
    method: GET
    data_selector: vulnerabilities
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: data
- name: swift_high_severity_vulnerabilities
  endpoint:
    path: /vulnerabilities/high_severity/swift
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: swift_medium_severity_vulnerabilities
  endpoint:
    path: /vulnerabilities/medium_severity/swift
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: swift_low_severity_vulnerabilities
  endpoint:
    path: /vulnerabilities/low_severity/swift
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: CWE-369
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-377
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-384
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-400
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-415
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-416
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-434
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-470
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-472
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-489
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-497
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-501
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-502
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-530
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-532
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-598
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-601
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-611
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-614
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-643
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-676
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-732
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-749
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-776
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-780
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-787
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-789
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-798
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-915
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-916
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-917
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-918
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-926
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-941
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-943
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-1004
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-1104
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-1204
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-1327
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-1333
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-1336
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-208
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-256
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: CWE-352
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: OWASP_TOP_10_2017_CWE_List
  endpoint:
    path: /owasp/top10/2017/cwe
    method: GET
    data_selector: cwe_list
- name: OWASP_TOP_10_2021_CWE_List
  endpoint:
    path: /owasp/top10/2021/cwe
    method: GET
    data_selector: cwe_list
- name: cwe_coverage
  endpoint:
    path: /cwe/coverage
    method: GET
    data_selector: coverage_data
    params: {}
- name: scan_results
  endpoint:
    path: /api/v3/scan-results
    method: GET
    data_selector: results
    params: {}
- name: Code Findings Remediation
  endpoint:
    path: /api/v1/code/findings/remediation
    method: POST
    data_selector: remediationSuggestions
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: scans
  endpoint:
    path: /api/v1/scans
    method: GET
    data_selector: data
    params: {}
- name: sca_reachability
  endpoint:
    path: /services/data/v1.0/sca/reachability
    method: GET
    data_selector: reachabilityData
- name: sca_reachability
  endpoint:
    path: /sca/reachability
    method: GET
    data_selector: results
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
- name: scans
  endpoint:
    path: /api/scans
    method: GET
    data_selector: data
- name: license_risk_scores
  endpoint:
    path: /licenses/risk_scores
    method: GET
    data_selector: risk_scores
    params: {}
- name: copyleft_information
  endpoint:
    path: /licenses/copyleft
    method: GET
    data_selector: copyleft_info
    params: {}
- name: patent_and_royalty_risk
  endpoint:
    path: /licenses/patent_royalty
    method: GET
    data_selector: patent_royalty_info
    params: {}
- name: royalty_information
  endpoint:
    path: /licenses/royalty
    method: GET
    data_selector: royalty_info
    params: {}
- name: linking_values
  endpoint:
    path: /licenses/linking
    method: GET
    data_selector: linking_info
    params: {}
- name: CVSS Scores
  endpoint:
    path: /cvss/scores
    method: GET
    data_selector: scores
- name: Exploitability
  endpoint:
    path: /exploitability
    method: GET
    data_selector: exploitability
- name: EPSS Scores
  endpoint:
    path: /epss/scores
    method: GET
    data_selector: epss_scores
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: records
- name: Amazon ECR
  endpoint:
    path: /platform/latest/configure-private-amazon-ecr
    method: GET
- name: Microsoft Azure ACR
  endpoint:
    path: /platform/latest/configure-private-azure-acr
    method: GET
- name: Docker Hub (Private Cloud)
  endpoint:
    path: /platform/latest/configure-your-private-docker-hub-registry
    method: GET
- name: JFrog Artifactory (Cloud or Self-Hosted)
  endpoint:
    path: /platform/latest/configure-private-jfrog-artifactory
    method: GET
- name: organization
  endpoint:
    path: /api/v1/organization
    method: GET
    data_selector: data
- name: project
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
- name: repositories
  endpoint:
    path: /api/repositories
    method: GET
- name: integrations
  endpoint:
    path: /my-integrations
    method: GET
    data_selector: registries
- name: packages
  endpoint:
    path: /api/packages
    method: GET
    data_selector: packages
- name: findings
  endpoint:
    path: /api/findings
    method: GET
    data_selector: findings
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: findings
  endpoint:
    path: /api/findings
    method: GET
    data_selector: data
    params: {}
- name: scan_results
  endpoint:
    path: /api/v3/scan/results
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Mend CLI for Linux (Intel)
  endpoint:
    path: https://downloads.mend.io/cli/linux_amd64/mend
    method: GET
- name: Mend CLI for MacOS (Apple Silicon)
  endpoint:
    path: https://downloads.mend.io/cli/darwin_arm64/mend
    method: GET
- name: Mend CLI for MacOS (Intel)
  endpoint:
    path: https://downloads.mend.io/cli/darwin_amd64/mend
    method: GET
- name: Mend CLI for Windows (Intel)
  endpoint:
    path: https://downloads.mend.io/cli/windows_amd64/mend.exe
    method: GET
- name: Self-Contained Mend CLI for Linux (Intel)
  endpoint:
    path: https://downloads.mend.io/cli-standalone/mend_linux_amd64.tgz
    method: GET
- name: Self-Contained Mend CLI for MacOS (Apple Silicon)
  endpoint:
    path: https://downloads.mend.io/cli-standalone/mend_macos_arm64.tgz
    method: GET
- name: Self-Contained Mend CLI for MacOS (Intel)
  endpoint:
    path: https://downloads.mend.io/cli-standalone/mend_macos_amd64.tgz
    method: GET
- name: Self-Contained Mend CLI for Windows (Intel)
  endpoint:
    path: https://downloads.mend.io/cli-standalone/mend_windows_amd64.tgz
    method: GET
- name: Unified Agent
  endpoint:
    path: https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
    method: GET
- name: Agent for Bitbucket
  endpoint:
    path: https://integrations.mend.io/release/Agent-for-BitBucket/agent-4-bitbucket.zip
    method: GET
- name: Agent for GitHub Enterprise
  endpoint:
    path: https://integrations.mend.io/release/Agent-for-GitHub-Enterprise/agent-4-github-enterprise.zip
    method: GET
- name: Agent for GitLab
  endpoint:
    path: https://integrations.mend.io/release/Agent-for-GitLab-Enterprise/agent-4-gitlab-server.zip
    method: GET
- name: Artifactory Plugin
  endpoint:
    path: https://whitesource-artifactory-plugin.s3.amazonaws.com/whitesource-artifactory-plugin-22.11.2.zip
    method: GET
- name: xModuleAnalyzer
  endpoint:
    path: https://unified-agent.s3.amazonaws.com/xModuleAnalyzer/xModuleAnalyzer.jar
    method: GET
- name: ip_addresses
  endpoint:
    path: /ip.json
    method: GET
- name: scan_results
  endpoint:
    path: /api/v3.0/scan-results
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: container_findings
  endpoint:
    path: /container/findings
    method: GET
    data_selector: findings
    params: {}
- name: sbom_reports
  endpoint:
    path: /sbom/reports
    method: GET
    data_selector: reports
    params: {}
- name: violations
  endpoint:
    path: /api/violations
    method: GET
    data_selector: records
- name: Code findings
  endpoint:
    path: /platform/3.0/reports
    method: GET
    data_selector: findings
    params: {}
- name: users
  endpoint:
    path: /api/v3/users
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v3/projects
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: libraries
  endpoint:
    path: /api/libraries
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: getAsyncProcessStatus
  endpoint:
    path: /api/v2.0/asyncProcessStatus
    method: GET
- name: downloadAsyncReport
  endpoint:
    path: /api/v2.0/downloadAsyncReport
    method: GET
- name: scan
  endpoint:
    path: /api/v4/scans
    method: POST
    data_selector: results
- name: scan
  endpoint:
    path: /api/scan
    method: POST
    data_selector: scanResults
- name: results
  endpoint:
    path: /api/results
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /scans
    method: POST
    data_selector: scanResults
    params: {}
- name: pending_webhooks
  endpoint:
    path: /api/webhooks/pending
    method: GET
- name: scan
  endpoint:
    path: /services/data/vXX.X/sobjects/Scan
    method: POST
    data_selector: results
- name: remediate
  endpoint:
    path: /services/data/vXX.X/sobjects/Remediate
    method: POST
    data_selector: results
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Once logged in, you should log out before accessing a different organization.
- If you get `Error 401 Unauthorized`, it's because you forgot to add the bearer token
  or are accessing the wrong organization.
- Update your API integrations to use Mend API v2.0/v3.0.
- Logging out of one platform will not automatically log you out of the other.
- By clicking Activate Account, you agree to the Terms of service and acknowledge
  our data collection and processing practices set forth in our privacy policy.
- IdP-Initiated flows carry a security risk and are therefore not recommended. The
  recommendation is to use SP-Initiated flows whenever possible.
- SSO group and role mapping do not control permissions, they only modify group membership.
- For single-organization SAML setups, Group mapping can be done via SAML Attribute.
- For Account/Multi-organization SAML setups, automatic group creation is disabled.
- This integration is for Authentication only.
- Ensure you have the proper permissions to create an application within Okta.
- Requires setup of connected app in Mend
- Some API calls may have rate limits
- 'Signing Certificate URL will be in the format: https://login.microsoftonline.com/<tenant-id>/federationmetadata/<federation-version>/federationmetadata.xml?appid=<app-id>'
- Use your Mend Platform URL for the Sign On URL if needed.
- Service users are programmatic users that communicate via the APIs with no access
  to the GUI.
- Ensure proper access levels are set for the API integration.
- Ensure proper scopes are set for OAuth
- OAuth2 authentication is required to access the API.
- 'Projects created from an SBOM import will carry a tag, to differentiate them from
  other projects, as follows: Key: SBOMImport; Value: true'
- The SBOM import will override the project’s existing inventory and might change
  its findings.
- Known Issues and Limitations
- Only packages with primaryPackagePurpose equal to 'LIBRARY' are processed.
- Each package must have either a packageFileName or a PURL in externalRefs to be
  processed.
- Some objects may return nulls in deeply nested fields
- Supports both JSON and XML formats based on the CycloneDX specification versions
  1.4 and 1.5.
- Requires setup of connected app in Mend API.
- Ensure proper authentication setup to avoid unauthorized access.
- Gaining access to the Mend AI Native AppSec Platform requires proper authentication.
- Requires setup of connected app in Mend API
- The number of selected licenses is limited to 50.
- Creating Jira Issues requires a Jira Integration installed and configured.
- The ability to create and manage workflows in the Mend Platform is determined by
  user roles.
- Mend recommends using labels in the Workflow scope to easily target specific high-risk
  Applications or Projects.
- Only users with the roles of Admins or Security Managers have permission to adjust
  SLA manually.
- Manual changes to SLA cannot be reverted to the original value.
- Ensure proper setup of OAuth for API access
- Before performing scans, an Automation Workflow that meets the conditions with an
  action to create a policy violation should be created.
- The Violations table view can be accessed directly from a specific Application or
  Project under the General section in the left-side navigation menu.
- Configure Single Sign-On (SSO) for enhanced security
- Uses service user key for authentication — recommended for CI/CD pipelines
- Requires authentication to check the version configuration of an organization.
- Mend SCA will not upload your full source code to the cloud. It only stores as much
  information as necessary to help you understand the reachability of detected security
  vulnerabilities.
- By default, the Mend CLI SCA results are not automatically uploaded to the Mend
  Application.
- Backwards compatibility is supported for the previously used mend sca command.
- Mend CLI SCA scan logs can be found locally in the .mend/logs/sca directory.
- Reachability for Python is not supported in dedicated instances.
- Mend CLI requires administrator privileges to run.
- Uses OAuth2 with refresh token — requires setup of connected app in Mend
- Some objects like Contact may return nulls in deeply nested fields
- Gaining Access to the Mend AI Native AppSec Platform - User Guide
- Backwards compatibility is supported for the previously used mend sast command.
  However, we recommend switching to the updated mend code command at your earliest
  availability.
- If --inc is used together with --upload-baseline, a full scan is executed when the
  previous baseline was created with an older version of the engine.
- In order to update the results of a previously scanned image within the Mend Platform
  Application, it must be rescanned with the Mend CLI.
- Secret scanning is disabled by default to prevent long scan times on large filesystems.
- No support for proprietary packages.
- Exclusion rules (e.g., path exclusions, file patterns) are not currently supported.
- The full image tarball is always temporarily saved in the system’s /tmp directory
  for SBOM analysis.
- Scan results will not be saved locally by default.
- Container Reachability is not available in local scan mode.
- 'Supported image frameworks: docker, OCI'
- If the image name is not locally available, Mend CLI checks DockerHub by default
  and pulls the version (tag) of that image from the Docker registry.
- In case the full image URL is presented, the scanner will pull the image from the
  specified source.
- 'Required: If you are scanning an image from a private registry, you will need to
  connect to the registry beforehand with the docker login command before the Mend
  CLI scan and have Docker daemon running.'
- Local scans can be done with or without a Docker Daemon running, if the daemon is
  up, it should be with the default socket open.
- Manual license changes are org-wide, meaning your customized licenses will be applied
  to the relevant package across the entire organization. This includes all container
  images in the organization. New scans will not override your manual license changes
  for the package.
- Scanning the same image to a different organization will present the original license
  value detected by Mend.
- Secret detection is enabled by default.
- Requires setup of connected app in Mend platform
- This feature is currently a Closed Beta.
- Report generation is disabled by default.
- All vulnerability severity levels are shown in the scan results by default.
- The Mend CLI will update your results within the Mend Platform Application by default.
- Requires setup of connected app in Mend.
- Some API responses may vary based on user permissions.
- The credentials configured in the interactive setup of the Mend CLI are now stored
  in the key ring of the operating system.
- Mend CLI now takes into consideration ignored alerts set in the platform and excludes
  them from scan results.
- The Support Matrix may get updated from time to time as Mend.io continues to add
  support for newly released package manager and language versions.
- This mode still requires authentication to Mend.io and cannot be used in an air
  gap environment.
- The Self-Contained mode doesn’t support automatic updates.
- The Unified Agent can also be configured via environment variables.
- The Mend CLI will always update the Unified Agent to the latest version.
- If Unified Agent authentication credentials are provided, they will take precedence
  over Mend CLI credentials.
- If neither Unified Agent nor Mend CLI authentication configuration exists then the
  `mend ua` command will print an error.
- Support token can be provided to Mend Support for investigation purposes.
- The Search Findings tool is available for Dependencies (SCA) and Containers.
- The Search Findings will show results of CVEs or library names of different Applications
  or Projects available in your organization on the Mend Platform. It will not provide
  detailed descriptions of all known CVEs or their impacts.
- Some findings may return null values in nested fields
- Configuration of the 3rd party tool is required for the import and is done within
  that tool.
- Requires setup of connected app in Mend.io
- Some findings may be reported as false positives
- Gaining Access to the Mend AI Native AppSec Platform - User Guide requires setup
  of connected app in api
- By default, the Applications widget showing the Top 10 high-risk Applications by
  Total Findings is ranked by the total number of findings.
- Some objects may return nulls in deeply nested fields.
- Focus on direct dependencies to mitigate risk in transitive dependencies.
- API Docs can be found at https://api-docs.mend.io/
- Some endpoints may have rate limits
- 'Mend.io offers two remediation strategies: Least Vulnerable Package and First Fix.'
- LVP is available in the Mend AppSec Platform UI and supports npm, Maven, and Python.
- Fix recommendations are calculated at scan runtime.
- Uses OAuth2 with refresh token — requires setup of connected app in mend
- Security updates every six hours without requiring a new scan.
- Secret detection is enabled by default
- Some endpoints may return nulls in deeply nested fields
- This feature is supported from Mend CLI version 24.5.3 (released on June 2024).
- OAuth2 authentication is required for accessing the API.
- Some responses may vary in structure depending on the data type
- Data filtering can be done by Scan engine, Labels, and Trends.
- Ensure you have the correct scopes set for your OAuth token.
- Maximum number of reports per page is 50.
- This report is only available with a Mend AI Premium subscription.
- Ensure to handle rate limiting as per API guidelines.
- The report highlights critical insights into the security and maintenance of your
  application or project’s open-source libraries.
- Uses OAuth2 with refresh token.
- You can generate the report via the Reports page or the Mend API.
- For a scope of multiple projects, library selection can only be done via the Attribution
  page.
- Filters from different columns can be combined to provide an advanced filtering
  experience.
- Uses OAuth2 for authentication
- Generate the report via the Reports page.
- Select Dependencies Findings from the Create Report wizard.
- Level is only configurable for Project scope; otherwise, it defaults to Summary.
- The report format is CSV.
- The Container Image Due Diligence Report assesses the compliance of software components
  in your container images.
- Click the Create button at the top-right edge of the Reports page.
- Reports in the Mend Platform include various types of findings and compliance reports.
- JWT token expires every 30 minutes
- Limit by default is 50 results, maximum value for limit is 10,000
- Improved security with a JWT token per organization, which expires every 30 minutes.
- Administrator permissions to your Jira Cloud instance are required.
- Organization administrator permissions in the Mend Platform for the relevant organization
  are required.
- The Jira Security feature must be enabled for the Jira projects you wish to integrate
  with the Mend for Jira Cloud plugin.
- Requires OAuth2 setup for access.
- Changes to a work item type will apply to all tickets that will be created for this
  Jira project.
- Mend Work Item Types are pre-configured and cannot be customized.
- Jira field types with pre-defined options, such as Dropdown, Multiple Selection,
  or List, aren’t supported for customization with Mend attributes.
- Mend doesn’t support work item types with mandatory fields that cannot be set via
  the integration.
- 'For automated Jira issue creation: An ''Create Jira Issue'' type workflow created
  within your organization in the Mend AppSec Platform.'
- Jira issues can take up to 60 minutes to be opened in Jira after a request is initiated.
- Requires configuration of Mend for Jira application
- Ensure API permissions are correctly set
- The Create Jira Issue action is not supported for the “Licenses” event condition.
- By default, the plugins also automatically query the Mend AppSec Platform to see
  if new issues need to be created and/or existing issues need updating.
- The Mend for Jira Cloud plugin checks for issue creation/updates every thirty minutes.
- Mend AI data are not included in the Value Dashboard and must be consumed separately
  via the AI Security Dashboard.
- Ensure to handle rate limits when making API calls.
- API requires OAuth2 authentication setup.
- Some endpoints may return nulls in nested fields
- Ensure OAuth2 is properly configured for access.
- Some endpoints may return nulls in responses
- Malicious packages must be removed immediately as they contain functionality that
  actively seeks to undermine, steal data, or inject malicious code into your app.
- Refer to the API documentation for complete endpoint details.
- Risk Factors are only available for C#, Java, JavaScript, Python, and TypeScript.
- The Risk Factors are currently not included in the Mend CLI output and in the Repository
  integration.
- Gaining Access to the Mend AI Native AppSec Platform requires setup of connected
  app.
- Requires setup of connected app in Mend AI
- Mend AI is available as part of the Mend AppSec Platform.
- Some features require a Mend AI Premium entitlement for your organization.
- Some data may return nulls in deeply nested fields
- An active AI Premium subscription is required for access to risk data in the widgets.
- The dashboard only accounts for data added after its launch on September 7th, 2025.
  Please rescan older projects, to make sure their data is accounted for in the dashboard.
- Gaining Access to the Mend AI Native AppSec Platform requires API configuration.
- No dedicated column/view for the evidence (Roadmap Item)
- No organization-level statistics (Roadmap Item)
- Requires setup of connected app in api
- Requires authentication via OAuth2.
- Ensure to handle token expiration gracefully.
- Cases where string concatenation or complex variable assignments lead to model references
  are not currently supported.
- Model names must be specified explicitly within the API calls.
- Some features may require additional permissions to access.
- Mend AI only detects files equal to or larger than 10MB in size.
- Uses a risk reporting system with WS and MSC identifiers for ML models.
- Mend AI verifies Hugging Face’s tagging of unsafe models.
- This feature is only available with a Premium AI subscription.
- Findings are based on the current scan of your environment. If you migrate data
  or rescan, findings may update or change.
- Currently, findings are based on academic research papers. Future updates may include
  additional sources.
- Academic Security findings currently cannot be used in Automation Workflows.
- Research papers don't always provide specific action items to mitigate risks.
- Requires setup of connected app in Mend AI Native AppSec Platform
- This feature is only available with Mend AI Premium.
- Behavioral Risks (Red-Teaming) are only available with Mend AI Premium.
- API requires OAuth2 authentication.
- Ensure that your target is accessible through the internet and not only private
  intranet.
- If needed make sure that the Probe platforms IP address is whitelisted.
- Mend API requires proper setup of OAuth2 credentials and permissions
- Rate limits apply to API calls; consult documentation for details
- A test run cannot be rerun until it is either completed or stopped.
- Uses OAuth2 with refresh token — requires setup of connected app in Mend API
- Some API endpoints may have rate limits.
- Both filtering and global search functionalities are available to customize the
  view according to your specific preferences.
- The table can be exported in CSV and JSON formats.
- Uses OAuth2 with refresh token for authentication.
- Ensure to set up a connected app in Mend.
- Mend API requires configuration of connected app for OAuth2.
- Context leakage can enable an adversarial user to extract more of the prompt or
  execute other attacks.
- Prompts must remain confidential as they may contain sensitive API keys and internal
  information.
- Some endpoints may require additional permissions
- Jailbreak refers to a type of adversarial input crafted to bypass the model’s safety
  mechanisms and operational constraints.
- There is a broad and evolving range of jailbreak techniques, as this area is actively
  researched and frequently exploited.
- Requires setup of OAuth2 credentials in Mend platform
- No specific API details provided in the documentation.
- This approach tests the model’s vulnerability to tainted retrieval sources and highlights
  the importance of document validation, content sanitization, and robust retrieval
  filtering in secure AI deployments.
- Evaluates how the chatbot responds when users attempt to exploit it for personal
  gain or advantage.
- Preventing misuse isn't just about protecting the model, it’s about protecting users,
  systems, and the integrity of AI applications in broader deployment.
- API requires authentication via OAuth2.
- Use the provided client ID and secret to obtain access tokens.
- Festival packages require 90-day advance booking.
- Non-refundable after 7 days of confirmation unless under Mend Travel Gold Protection
  Plan™.
- Offers valid only with Mend Travel Prime Membership.
- Minimum booking of $400 required to activate promotions.
- Not combinable with other ongoing country-specific discounts.
- 'The file must follow this format: columns = ["text", "answer"]'
- This probe assesses how effectively the chatbot can recognize and block fraudulent
  prompts
- Essential for securing publicly exposed chatbots
- Gaining Access to the Mend AI Native AppSec Platform requires setup of connected
  app in api
- Improper handling or leakage of PII can undermine user trust, violate privacy regulations,
  and expose organizations to significant legal, reputational, and financial risks.
- The PII Probe ensures that the chatbot complies with data protection standards and
  identifies potential vulnerabilities that could be exploited by adversaries to gain
  unauthorized access to personal data or manipulate the system.
- The Legally Binding Probe helps identify weaknesses in policy enforcement and safeguards.
- Tests if target is able to access 3rd party websites via URL
- Ensure proper authentication setup as per the API documentation.
- This probe leverages attacks from the CategoricalHarmfulQA dataset by Declare-Lab.
- This probe is critically important for public-facing chatbots, where inadvertent
  responses that assist in criminal behavior pose severe legal, ethical, and reputational
  risks.
- It is equally relevant for internal facing systems, where the absence of robust
  safety filters may lead to policy circumvention, intellectual property misuse, or
  even insider fraud.
- Allows customers to validate custom, business-specific safety boundaries and enforce
  precise behavioral expectations.
- Some endpoints may have rate limits.
- Ensure proper OAuth setup for access.
- Allows customers to create custom probes by describing test requirements and uploading
  their own dataset of attacks.
- The probe supports advanced configuration options, including attack strategy selection,
  language specification, depth level, and behavior simulation mode.
- Requires authentication via OAuth2
- Ensure valid API keys are set in the environment
- Project-level code scan configuration can be set separately.
- Initial setup of the connected app in Mend AI is required.
- Code scan can be limited to only relevant files and directories to improve performance.
- Ensure correct OAuth scopes are set up for access to the API.
- Apex vulnerability types detected are organized by CWE ID within each of their identified
  severities.
- ASP Classic/Visual Basic/VBScript file types are supported.
- Secondary file extensions will only be scanned if at least one primary file extension
  is present.
- Ensure to set up the connected app in Mend for OAuth2.
- These extensions are marked as ‘Secondary’ file extensions. They will only be scanned
  if at least one file with any of the other ‘Primary’ file extensions is present
  to identify the language as the relevant language.
- C/C++ support is currently in beta phase.
- COBOL high-severity vulnerability types detected include Command Injection, SQL
  Injection, and Buffer Overflow.
- Coldfusion support and vulnerability detection for Mend SAST.
- Mend SAST-supported Coldfusion file types include .cfm.
- Some API responses may contain nested data structures
- These extensions are marked as ‘Secondary’ file extensions.
- They will only be scanned if at least one file with any of the other ‘Primary’ file
  extensions is present.
- Covers Kotlin support and vulnerability detection for Mend SAST.
- PHP vulnerability types detected by SAST are organized by CWE ID within each of
  their identified severities.
- PLSQL high-severity vulnerabilities detected include CWE-22, CWE-73, CWE-79, CWE-89.
- Some endpoints may have rate limits or require additional permissions
- R language support for vulnerability detection.
- Ensure to set up the OAuth2 connected app in Mend API.
- Ensure to set up OAuth 2.0 in the Mend API dashboard.
- Mend SAST’s coverage of the Rust programming language is currently in open beta.
- Not standard-relevant
- Gaining Access to the Mend AI Native AppSec Platform requires setup.
- NIST is a comprehensive information security standard that provides a catalog of
  security and privacy controls for information systems and organizations.
- Your cookie consent preferences are stored for 1 year.
- Health Insurance Portability and Accountability Act (HIPAA) provides data privacy
  and security provisions for safeguarding medical information.
- This article organizes Common Weakness Enumerations (CWEs) relevant to HIPAA.
- HITRUST develops, maintains, and provides broad access to its widely adopted common
  risk and compliance management frameworks, related assessments, and assurance methodologies.
- The Payment Card Industry Security Standards Council (PCI SSC) plays a crucial role
  in application security for organizations that handle payment card data.
- The remediation process is based solely on source code snippets related to your
  Code findings.
- Optional feedback may be provided to help Mend monitor adoption and enhance the
  solution.
- Scan Customization Candidates cannot be edited, they can only be approved or rejected.
- Rule Customization can only be performed by Mend.io Professional Services engineers.
- 'Key Change Frequency: You can change your encryption key at most once every 10
  minutes'
- 'Key Format: Ensure your key file matches the requirements for your cloud environment'
- 'Backup: Always keep a secure backup of your encryption keys'
- Data is returned in JSON format.
- We only upload and cache metadata pertaining to your project, such as file and class
  names, and do not store any of your actual code.
- Requires setup of connected app in Mend Platform
- You can scan a multi-language project with no additional configuration.
- Regular scan completes without partial results errors.
- Reachability for Python in the GitHub Enterprise integration is not available by
  default but can be enabled on demand. Version 24.10.1.1 or above is a prerequisite.
- Ensure to set up OAuth2 authorization before making requests.
- 'We only support .exe files in the following scenarios: A Python dependency; for
  example: PyYAML, A .NET binary which comes from NuGet package manager'
- This information is provided on an as-is basis and should be consulted with a legal
  advisor.
- MITRE takes precedence over NVD for CVSS scores.
- Unreported and Unproven are not valid exploitability values.
- Requires OAuth2 authentication setup
- AWS PrivateLink or CIDRs for public access are not supported.
- Private-only EKS clusters are not supported.
- By default, a scan interval of 7 days will be applied.
- After the first scan (in which the latest 10 tags are scanned), in every scheduled
  scan only newly pushed images from the registry or changed images will be scanned.
- Private-only AKS clusters are not supported.
- Scanning public registries with the Mend registry integration is not supported.
- Docker API v2 is mandatory and must be enabled for the integration to work.
- 'Docker PAT tokens start with the pattern: dckr_pat'
- By default, the Azure service principal’s password is valid for one year. Make sure
  you renew this password to keep your ACR integration with Mend up and running.
- Your Mend user must be an organization administrator.
- Your Amazon ECR user that owns the access and secret keys provided to Mend for authentication
  must have an IAM policy attached with the necessary actions for all registry resources.
- Requires setup of connected app in Mend for OAuth2 authentication.
- An access token is preferred for enhanced security.
- Scans of .tar files that are larger than 2GB will fail, and an error message will
  be shown in the platform UI to indicate that the image should be scanned locally
  with the CLI.
- The integration only supports images with the Open Container Initiative (OCI) label
  org.opencontainers.image.source=<repo path>
- Invicti DI (Dedicated Instance) environments aren’t currently not supported.
- The matching for the DAST/SAST correlation relies on the detection of HTTP endpoints.
- The domain part of the URL is ignored by the algorithm in the matching process.
- Requires authentication setup for API access.
- The Backstage frontend plugin will not function without the backend plugin.
- Requires OAuth2 authentication with a connected app in Mend.
- Make sure you are an organization administrator to retrieve the Activation Key.
- Mend's web-based interface follows best practices in Section 508 and WCAG 2.0 Level
  A.
- Organization and Product names are not case-sensitive and must be unique.
- Project names are case-sensitive, and must exactly match existing project names
  in order to update them from the Unified Agent / CLI.
- CVSS score version 3.1 is currently only partially supported in mend.
- Quality Metrics related to bugs on open source libraries may contain broken links.
- Libraries with multiple versions may display only one project name in the alert
  description.
- In the legacy Scala dependencies detection, only dependencies included in the compile
  scope can be resolved.
- The fields Uploaded by and Request Token in the Project Vitals panel disappear after
  removing a library.
- Some reports may take time to generate and may not be available immediately
- Uses OAuth2 with refresh token — requires setup of connected app in Mend AI Native
  AppSec Platform
- enableRemediation is intentionally not part of the onboarding template, as it requires
  activating the AI Usage toggle in the Mend AI Native AppSec Platform.
- Several minor fixes related to data consistency in incremental scans.
- Ensure to configure OAuth2 with proper scopes to access the API.
- Some API endpoints may have different response structures.
- To enable Mend AI, please contact your Customer Success Manager at Mend.io.
- Premium features require specific permissions.
- Some API responses may include pagination.
- Implemented a throttling mechanism to prevent spikes in API calls during Issue syncs
  that could lead to rate limit failures and inconsistencies between GitHub issues
  and the Mend UI.
- Uses API key for authentication.
- Requires setup of global configuration to trigger scans.
- Ensure proper authentication is set up before scanning.
- Requires configuration of OAuth2 for authentication
- Ensure correct permissions are set up in the Mend platform
- Migrate your existing repositories to Mend for Azure Repos global configuration
- Trigger repository scans manually with Mend for Azure Repos global configuration
- No notable updates.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check your SAML configuration settings.'
- '401 Unauthorized: Ensure you have the correct permissions.'
- '401 Unauthorized: Check your credentials and authentication flow.'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry the request'
- '401 Unauthorized: Check if the token is valid and has not expired.'
- 'Invalid JSON/XML: ''Failed to serialize SPDX: [error details]'''
- 'Unsupported SPDX Type: ''Unsupported SPDX type: [type]'''
- 'Missing Mandatory Fields: ''Missing inventory diff'''
- 'Failed to serialize CycloneDx JSON: [error details]'
- 'Invalid CycloneDX structure: [error details]'
- 'Failed to convert component: [component reference]'
- '401 Unauthorized: Check your token and permissions.'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: The resource you are trying to access does not exist.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check client credentials and token validity'
- '404 Not Found: Verify endpoint path'
- '1: An invalid configuration parameter was passed when executing the CLI. Check
  for typos in the parameters.'
- '2: Unable to access the update or license details from the Mend server URL. Check
  for internet connection.'
- '4: Unable to detect a supported language within the project based on the file extensions
  provided.'
- '7: Could not create a cache subdirectory in the same location as the Mend CLI.
  Check that the Mend CLI permissions include “create”.'
- '9: Results contain too many vulnerabilities, which contravenes the defined policy.'
- '10: A scanning engine stalled or failed.'
- 'Exit Code 9: Indicates a policy violation'
- '401 Unauthorized: Check OAuth token.'
- '404 Not Found: Ensure the requested resource exists.'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- '1: An invalid configuration parameter was passed when executing Mend CLI command.
  Check for typos in the parameters.'
- '3: You will not see this as long as the connection is valid, but it''s thrown if
  the license required to run the engines is invalid'
- '5: CLI and Code analysis engine use sockets for inter-process communication. This
  exit code is returned if there is an issue with that communication (e.g. could not
  open a port to listen on)'
- '6: There is an error starting the engine, either because the file has been somehow
  removed between the update and the run, the file is corrupted, or any other reason
  that prevents the run of the executable'
- '8: CLI failed to update the code analysis engines and there are no cached engines
  to fall back to'
- '9: Scan findings trigger policy violations that were defined for this project.'
- '11: The provided target directory is invalid or not accessible'
- '12: Version misalignment - Version of Mend CLI is not compatible with sub-module.
  Run “mend update”.'
- '13: Error encountered when exporting scan results: Check that the selected file
  format is supported for the selected scan type, and that the target path is writable.
  Other issues could be an illegal combination of CLI flags (e.g. mend code --export-result
  --offline).'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check OAuth token'
- '401 Unauthorized: Check your access token'
- '403 Forbidden: Insufficient permissions for the requested resource'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your token''s validity.'
- '404 Not Found: The requested resource does not exist.'
- '429 Too Many Requests: You have exceeded the rate limit.'
- '400 Bad Request: Check request payload for errors'
- '401 Unauthorized: Validate authentication credentials'
- '404 Not Found: Verify the issue ID or endpoint path'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify endpoint path.'
- '429 Too Many Requests: Implement exponential backoff.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify token validity.'
- If the package is a popular one (say, with more than 10k downloads), than this is
  likely an isolated 'account takeover' incident and it may then be possible to downgrade
  or upgrade the package version.
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: Ensure you have access rights'
- '404 Not Found: Verify endpoint paths'
- '401 Unauthorized: Check your credentials and token.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check your credentials.'
- '401 Unauthorized: Check your OAuth token and permissions'
- '429 Too Many Requests: Rate limit exceeded, please try again later'
- '401 Unauthorized: Check your credentials and token expiration'
- '401 Unauthorized: Check OAuth scopes or token expiration.'
- '429 Too Many Requests: Throttle API calls or reduce frequency.'
- '404 Not Found: Verify the endpoint paths.'
- '401 Unauthorized: Verify OAuth token and scopes.'
- '404 Not Found: Check the endpoint path.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '401 Unauthorized: Invalid credentials or token expired'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Verify your OAuth token and scopes.'
- '403 Forbidden: Check your permissions for the requested resource.'
- '401 Unauthorized: Check your OAuth token.'
- '401 Unauthorized: Check token validity'
- '404 Not Found: Verify endpoint and resource'
- 'CWE-22: Path/Directory Traversal'
- 'CWE-78: Command Injection'
- 'CWE-79: Cross-Site Scripting'
- 'CWE-89: SQL Injection'
- '401 Unauthorized: Check your OAuth credentials'
- '429 Too Many Requests: Rate limit exceeded'
- 'CWE-73: File Manipulation'
- 'CWE-94: Code Injection'
- 'CWE-611: XML External Entity (XXE) Injection'
- 'CWE-676: Miscellaneous Dangerous Functions'
- 'CWE-798: Hardcoded Password/Credentials'
- '401 Unauthorized: Check client credentials and token expiration.'
- 'INVALID_CLIENT: Check your client ID and secret'
- 'TOKEN_EXPIRED: Refresh your token'
- '403 FORBIDDEN: Check your access rights'
- '400 Bad Request: Check the input parameters.'
- '401 Unauthorized: Invalid API key or token.'
- '400: Invalid key material format: Check your key file format'
- '403: Unauthorized: Verify your permissions'
- '429: Upload too soon: Wait 10 minutes between uploads'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your credentials and token expiration.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '403 Forbidden: Permissions issue'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check client ID and secret.'
- '403 Forbidden: Insufficient permissions.'
- '500 Internal Server Error: Retry the request.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify token validity'
- '404 Not Found: Check the endpoint path'
- '401 Unauthorized: Ensure your token is valid.'
- '401 Unauthorized: Check your API keys.'
- '404 Not Found: Ensure the endpoint is correct.'
- '500 Internal Server Error: Check server status or retry'
- '401 Unauthorized: Verify authentication credentials.'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint and resource'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - OAuthToken
  - NamedCredential
  - OAuth2
client:
  base_url: https://api-docs.mend.io/
  auth:
    type: oauth2
source_metadata: null
