resources:
- name: CustomFieldDefinitions
  endpoint:
    path: /ag5-api/version-4-beta/customfielddefinitions
    method: GET
- name: EmployeeUnavailabilities
  endpoint:
    path: /ag5-api/version-4-beta/employeeunavailabilities
    method: GET
- name: Employees
  endpoint:
    path: /ag5-api/version-4-beta/employees
    method: GET
- name: EmploymentContractTypes
  endpoint:
    path: /ag5-api/version-4-beta/employmentcontracttypes
    method: GET
- name: EmploymentContracts
  endpoint:
    path: /ag5-api/version-4-beta/employmentcontracts
    method: GET
- name: EmploymentRelationTypes
  endpoint:
    path: /ag5-api/version-4-beta/employmentrelationtypes
    method: GET
- name: EmploymentRelations
  endpoint:
    path: /ag5-api/version-4-beta/employmentrelations
    method: GET
- name: EntityDefinitions
  endpoint:
    path: /ag5-api/version-4-beta/entitydefinitions
    method: GET
- name: GroupingTypes
  endpoint:
    path: /ag5-api/version-4-beta/groupingtypes
    method: GET
- name: Groupings
  endpoint:
    path: /ag5-api/version-4-beta/groupings
    method: GET
- name: MonitoringTraces
  endpoint:
    path: /ag5-api/version-4-beta/monitoringtraces
    method: GET
- name: PositionAssignments
  endpoint:
    path: /ag5-api/version-4-beta/positionassignments
    method: GET
- name: RatingScaleLevelDescriptors
  endpoint:
    path: /ag5-api/version-4-beta/ratingscaleleveldescriptors
    method: GET
- name: RatingScaleLevels
  endpoint:
    path: /ag5-api/version-4-beta/ratingscalelevels
    method: GET
- name: RatingScales
  endpoint:
    path: /ag5-api/version-4-beta/ratingscales
    method: GET
- name: Repositories
  endpoint:
    path: /ag5-api/version-4-beta/repositories
    method: GET
- name: SkillDefinitionTypes
  endpoint:
    path: /ag5-api/version-4-beta/skilldefinitiontypes
    method: GET
- name: SkillDefinitions
  endpoint:
    path: /ag5-api/version-4-beta/skilldefinitions
    method: GET
- name: SkillPlannings
  endpoint:
    path: /ag5-api/version-4-beta/skillplannings
    method: GET
- name: SkillResults
  endpoint:
    path: /ag5-api/version-4-beta/skillresults
    method: GET
- name: TypesOfProof
  endpoint:
    path: /ag5-api/version-4-beta/typesofproof
    method: GET
- name: Models
  endpoint:
    path: /ag5-api/version-4-beta/models
    method: GET
- name: CustomFieldDefinitions
  endpoint:
    path: /ag5-api/version-4-beta/customfielddefinitions
    method: GET
- name: EmployeeUnavailabilities
  endpoint:
    path: /ag5-api/version-4-beta/employeeunavailabilities
    method: GET
- name: Employees
  endpoint:
    path: /ag5-api/version-4-beta/employees
    method: GET
- name: EmploymentContractTypes
  endpoint:
    path: /ag5-api/version-4-beta/employmentcontracttypes
    method: GET
- name: EmploymentContracts
  endpoint:
    path: /ag5-api/version-4-beta/employmentcontracts
    method: GET
- name: EmploymentRelationTypes
  endpoint:
    path: /ag5-api/version-4-beta/employmentrelationtypes
    method: GET
- name: EmploymentRelations
  endpoint:
    path: /ag5-api/version-4-beta/employmentrelations
    method: GET
- name: EntityDefinitions
  endpoint:
    path: /ag5-api/version-4-beta/entitydefinitions
    method: GET
- name: GroupingTypes
  endpoint:
    path: /ag5-api/version-4-beta/groupingtypes
    method: GET
- name: Groupings
  endpoint:
    path: /ag5-api/version-4-beta/groupings
    method: GET
- name: MonitoringTraces
  endpoint:
    path: /ag5-api/version-4-beta/monitoringtraces
    method: GET
- name: PositionAssignments
  endpoint:
    path: /ag5-api/version-4-beta/positionassignments
    method: GET
- name: RatingScaleLevelDescriptors
  endpoint:
    path: /ag5-api/version-4-beta/ratingscaleleveldescriptors
    method: GET
- name: RatingScaleLevels
  endpoint:
    path: /ag5-api/version-4-beta/ratingscalelevels
    method: GET
- name: RatingScales
  endpoint:
    path: /ag5-api/version-4-beta/ratingscales
    method: GET
- name: Repositories
  endpoint:
    path: /ag5-api/version-4-beta/repositories
    method: GET
- name: SkillDefinitionTypes
  endpoint:
    path: /ag5-api/version-4-beta/skilldefinitiontypes
    method: GET
- name: SkillDefinitions
  endpoint:
    path: /ag5-api/version-4-beta/skilldefinitions
    method: GET
- name: SkillPlannings
  endpoint:
    path: /ag5-api/version-4-beta/skillplannings
    method: GET
- name: SkillResults
  endpoint:
    path: /ag5-api/version-4-beta/skillresults
    method: GET
- name: TypesOfProof
  endpoint:
    path: /ag5-api/version-4-beta/typesofproof
    method: GET
- name: Models
  endpoint:
    path: /ag5-api/version-4-beta/models
    method: GET
- name: release_calendar
  endpoint:
    path: /release-notes
    method: GET
    data_selector: releases
    params: {}
- name: customFieldDefinitions
  endpoint:
    path: /customFieldDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: customFieldDefinitionById
  endpoint:
    path: /customFieldDefinitions/{id}
    method: GET
    data_selector: data
    params: {}
- name: Employees
  endpoint:
    path: /employees
    method: GET
- name: EmployeeUnavailabilities
  endpoint:
    path: /employeeunavailabilities
    method: GET
- name: EmploymentContracts
  endpoint:
    path: /employmentcontracts
    method: GET
- name: PositionAssignments
  endpoint:
    path: /positionassignments
    method: GET
- name: createCustomFieldDefinitions
  endpoint:
    path: /createCustomFieldDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteCustomFieldDefinitions
  endpoint:
    path: /deleteCustomFieldDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateCustomFieldDefinitions
  endpoint:
    path: /updateCustomFieldDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: customFieldDefinitions
  endpoint:
    path: /customFieldDefinitions
    method: GET
    data_selector: data
    params:
      entityDefinitionID: entityDefinitionID
      limit: limit
- name: customFieldDefinition
  endpoint:
    path: /customFieldDefinitions/{id}
    method: GET
    data_selector: data
    params: {}
- name: employeeUnavailabilities
  endpoint:
    path: /employeeUnavailabilities
    method: GET
    data_selector: data
    params:
      employeeID: employeeID
      limit: limit
- name: employeeUnavailabilityById
  endpoint:
    path: /employeeUnavailabilities/{id}
    method: GET
    data_selector: data
    params: {}
- name: createCustomFieldDefinitions
  endpoint:
    path: /createCustomFieldDefinitions
    method: POST
    data_selector: data
    params: {}
- name: deleteCustomFieldDefinitions
  endpoint:
    path: /deleteCustomFieldDefinitions
    method: GET
    data_selector: data
    params: {}
- name: updateCustomFieldDefinitions
  endpoint:
    path: /updateCustomFieldDefinitions
    method: GET
    data_selector: data
    params: {}
- name: createEmployeeUnavailabilities
  endpoint:
    path: /createEmployeeUnavailabilities
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmployeeUnavailabilities
  endpoint:
    path: /deleteEmployeeUnavailabilities
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmployeeUnavailabilities
  endpoint:
    path: /updateEmployeeUnavailabilities
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employeeUnavailabilities
  endpoint:
    path: /employeeUnavailabilities
    method: GET
    data_selector: data
    params:
      employeeID: string
      limit: integer
      cursor: string
- name: employeeUnavailability
  endpoint:
    path: /employeeUnavailabilities/{id}
    method: GET
    data_selector: data
    params:
      id: string
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: employee_by_id
  endpoint:
    path: /employees/{id}
    method: GET
    data_selector: data
    params: {}
- name: createEmployeeUnavailabilities
  endpoint:
    path: /createEmployeeUnavailabilities
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmployeeUnavailabilities
  endpoint:
    path: /deleteEmployeeUnavailabilities
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmployeeUnavailabilities
  endpoint:
    path: /updateEmployeeUnavailabilities
    method: GET
    data_selector: data
    params:
      limit: 10
- name: createEmployees
  endpoint:
    path: /createEmployees
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmployees
  endpoint:
    path: /deleteEmployees
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmployees
  endpoint:
    path: /updateEmployees
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employees
  endpoint:
    path: /employees
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employee
  endpoint:
    path: /employees/{id}
    method: GET
    data_selector: data
    params: {}
- name: employmentContractTypes
  endpoint:
    path: /employmentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employmentContractTypeById
  endpoint:
    path: /employmentContractTypes/{id}
    method: GET
    data_selector: data
    params: {}
- name: createEmployees
  endpoint:
    path: /createEmployees
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmployees
  endpoint:
    path: /deleteEmployees
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmployees
  endpoint:
    path: /updateEmployees
    method: GET
    data_selector: data
    params:
      limit: 10
- name: createEmploymentContractTypes
  endpoint:
    path: /createEmploymentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: deleteEmploymentContractTypes
  endpoint:
    path: /deleteEmploymentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: updateEmploymentContractTypes
  endpoint:
    path: /updateEmploymentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: employmentContractTypes
  endpoint:
    path: /employmentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employmentContractType
  endpoint:
    path: /employmentContractTypes/{id}
    method: GET
    data_selector: data
    params: {}
- name: employmentContracts
  endpoint:
    path: /employmentContracts
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employmentContractById
  endpoint:
    path: /employmentContracts/{id}
    method: GET
    data_selector: data
    params: {}
- name: createEmploymentContractTypes
  endpoint:
    path: /createEmploymentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmploymentContractTypes
  endpoint:
    path: /deleteEmploymentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmploymentContractTypes
  endpoint:
    path: /updateEmploymentContractTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: createEmploymentContracts
  endpoint:
    path: /createEmploymentContracts
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: deleteEmploymentContracts
  endpoint:
    path: /deleteEmploymentContracts
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: updateEmploymentContracts
  endpoint:
    path: /updateEmploymentContracts
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: employmentContracts
  endpoint:
    path: /employmentContracts
    method: GET
    data_selector: data
    params:
      contractTypeID: string
      employeeID: string
      limit: integer
- name: employmentContractById
  endpoint:
    path: /employmentContracts/{id}
    method: GET
    data_selector: data
    params:
      id: string
- name: employmentRelationTypes
  endpoint:
    path: /employmentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employmentRelationType
  endpoint:
    path: /employmentRelationTypes/{id}
    method: GET
    data_selector: data
    params: {}
- name: createEmploymentContracts
  endpoint:
    path: /createEmploymentContracts
    method: GET
    data_selector: data
    params:
      limit: 10
- name: createEmploymentContracts
  endpoint:
    path: /createEmploymentContracts
    method: POST
    data_selector: ''
    params: {}
- name: deleteEmploymentContracts
  endpoint:
    path: /deleteEmploymentContracts
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmploymentContracts
  endpoint:
    path: /deleteEmploymentContracts
    method: POST
    data_selector: ''
    params: {}
- name: updateEmploymentContracts
  endpoint:
    path: /updateEmploymentContracts
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmploymentContracts
  endpoint:
    path: /updateEmploymentContracts
    method: POST
    data_selector: ''
    params: {}
- name: createEmploymentRelationTypes
  endpoint:
    path: /createEmploymentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmploymentRelationTypes
  endpoint:
    path: /deleteEmploymentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmploymentRelationTypes
  endpoint:
    path: /updateEmploymentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employment_relation_types
  endpoint:
    path: /employmentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employment_relation_type_by_id
  endpoint:
    path: /employmentRelationTypes/{id}
    method: GET
    data_selector: data
    params: {}
- name: employmentRelations
  endpoint:
    path: /employmentRelations
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: employmentRelation
  endpoint:
    path: /employmentRelations/{id}
    method: GET
    data_selector: Responseobject
    params: {}
- name: createEmploymentRelations
  endpoint:
    path: /createEmploymentRelations
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteEmploymentRelations
  endpoint:
    path: /deleteEmploymentRelations
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateEmploymentRelations
  endpoint:
    path: /updateEmploymentRelations
    method: GET
    data_selector: data
    params:
      limit: 10
- name: createEmploymentRelationTypes
  endpoint:
    path: /createEmploymentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: deleteEmploymentRelationTypes
  endpoint:
    path: /deleteEmploymentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: updateEmploymentRelationTypes
  endpoint:
    path: /updateEmploymentRelationTypes
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: entity_definitions
  endpoint:
    path: /entityDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: employmentRelations
  endpoint:
    path: /employmentRelations
    method: GET
    data_selector: data
    params:
      limit: 10
- name: groupingTypes
  endpoint:
    path: /groupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: groupingTypeById
  endpoint:
    path: /groupingTypes/{id}
    method: GET
    data_selector: data
    params: {}
- name: employmentRelation
  endpoint:
    path: /employmentRelations/{id}
    method: GET
    data_selector: Responseobject
    params:
      id: stringRequired
- name: createEmploymentRelations
  endpoint:
    path: /createEmploymentRelations
    method: GET
    data_selector: data
    params:
      toEmployeeID: stringOptional
      fromEmployeeID: stringOptional
      relationTypeID: stringOptional
      limit: integerOptional
      cursor: stringOptional
- name: deleteEmploymentRelations
  endpoint:
    path: /deleteEmploymentRelations
    method: GET
    data_selector: data
    params:
      limit: integerOptional
      cursor: stringOptional
- name: updateEmploymentRelations
  endpoint:
    path: /updateEmploymentRelations
    method: GET
    data_selector: data
    params:
      toEmployeeID: stringOptional
      fromEmployeeID: stringOptional
      relationTypeID: stringOptional
      limit: integerOptional
      cursor: stringOptional
- name: createGroupingTypes
  endpoint:
    path: /createGroupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteGroupingTypes
  endpoint:
    path: /deleteGroupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateGroupingTypes
  endpoint:
    path: /updateGroupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: entityDefinitions
  endpoint:
    path: /entityDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: entityDefinitionById
  endpoint:
    path: /entityDefinitions/{id}
    method: GET
    data_selector: data
    params: {}
- name: groupings
  endpoint:
    path: /groupings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: groupingTypes
  endpoint:
    path: /groupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: grouping
  endpoint:
    path: /groupings/{id}
    method: GET
    data_selector: response
    params: {}
- name: createGroupings
  endpoint:
    path: /createGroupings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteGroupings
  endpoint:
    path: /deleteGroupings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateGroupings
  endpoint:
    path: /updateGroupings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: update_grouping
  endpoint:
    path: /updateGroupings/{id}
    method: GET
    data_selector: responseobject
    params:
      id: stringRequired
- name: createGroupingTypes
  endpoint:
    path: /createGroupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteGroupingTypes
  endpoint:
    path: /deleteGroupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateGroupingTypes
  endpoint:
    path: /updateGroupingTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: monitoringTraces
  endpoint:
    path: /monitoringTraces
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: monitoringTraceById
  endpoint:
    path: /monitoringTraces/{id}
    method: GET
    data_selector: data
    params: {}
- name: groupings
  endpoint:
    path: /groupings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: createMonitoringTraces
  endpoint:
    path: /createMonitoringTraces
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteMonitoringTraces
  endpoint:
    path: /deleteMonitoringTraces
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateMonitoringTraces
  endpoint:
    path: /updateMonitoringTraces
    method: GET
    data_selector: data
    params:
      limit: 10
- name: grouping
  endpoint:
    path: /groupings/{id}
    method: GET
    data_selector: response
    params: {}
- name: createGroupings
  endpoint:
    path: /createGroupings
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: deleteGroupings
  endpoint:
    path: /deleteGroupings
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: updateGroupings
  endpoint:
    path: /updateGroupings
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: update_grouping_proposal
  endpoint:
    path: /updateGroupings/{id}
    method: GET
    data_selector: response
    params:
      id: string
- name: positionAssignments
  endpoint:
    path: /positionAssignments
    method: GET
    data_selector: data
    params:
      employeeID: string
      limit: integer
      cursor: string
- name: positionAssignmentById
  endpoint:
    path: /positionAssignments/{id}
    method: GET
    data_selector: data
    params:
      id: string
- name: createPositionAssignments
  endpoint:
    path: /createPositionAssignments
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deletePositionAssignments
  endpoint:
    path: /deletePositionAssignments
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updatePositionAssignments
  endpoint:
    path: /updatePositionAssignments
    method: GET
    data_selector: data
    params:
      limit: 10
- name: monitoringTraces
  endpoint:
    path: /monitoringTraces
    method: GET
    data_selector: data
    params:
      limit: 10
- name: singleMonitoringTrace
  endpoint:
    path: /monitoringTraces/{id}
    method: GET
    data_selector: data
- name: ratingScaleLevelDescriptors
  endpoint:
    path: /ratingScaleLevelDescriptors
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: createMonitoringTraces
  endpoint:
    path: /createMonitoringTraces
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: deleteMonitoringTraces
  endpoint:
    path: /deleteMonitoringTraces
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: updateMonitoringTraces
  endpoint:
    path: /updateMonitoringTraces
    method: GET
    data_selector: data
    params:
      limit: 10
      cursor: ''
- name: RatingScaleLevelDescriptor
  endpoint:
    path: /ratingScaleLevelDescriptors/{id}
    method: GET
    data_selector: response
    params: {}
- name: createRatingScaleLevelDescriptors
  endpoint:
    path: /createRatingScaleLevelDescriptors
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteRatingScaleLevelDescriptors
  endpoint:
    path: /deleteRatingScaleLevelDescriptors
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateRatingScaleLevelDescriptors
  endpoint:
    path: /updateRatingScaleLevelDescriptors
    method: GET
    data_selector: data
    params:
      limit: 10
- name: positionAssignments
  endpoint:
    path: /positionAssignments
    method: GET
    data_selector: data
    params:
      employeeID: string
      limit: integer
      cursor: string
- name: positionAssignmentById
  endpoint:
    path: /positionAssignments/{id}
    method: GET
    data_selector: data
    params:
      id: string
- name: ratingScaleLevels
  endpoint:
    path: /ratingScaleLevels
    method: GET
    data_selector: data
    params:
      ratingScaleID: string
      limit: integer
      cursor: string
- name: createPositionAssignments
  endpoint:
    path: /createPositionAssignments
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deletePositionAssignments
  endpoint:
    path: /deletePositionAssignments
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updatePositionAssignments
  endpoint:
    path: /updatePositionAssignments
    method: GET
    data_selector: data
    params:
      limit: 10
- name: RatingScaleLevel
  endpoint:
    path: /ratingScaleLevels/{id}
    method: GET
    data_selector: Responseobject
- name: createRatingScaleLevels
  endpoint:
    path: /createRatingScaleLevels
    method: GET
    data_selector: Responseobject
- name: deleteRatingScaleLevels
  endpoint:
    path: /deleteRatingScaleLevels
    method: GET
    data_selector: Responseobject
- name: updateRatingScaleLevels
  endpoint:
    path: /updateRatingScaleLevels
    method: GET
    data_selector: Responseobject
- name: ratingScaleLevelDescriptors
  endpoint:
    path: /ratingScaleLevelDescriptors
    method: GET
    data_selector: data
    params:
      limit: 10
- name: ratingScales
  endpoint:
    path: /ratingScales
    method: GET
    data_selector: data
    params:
      limit: 10
- name: ratingScale
  endpoint:
    path: /ratingScales/{id}
    method: GET
    data_selector: data
    params: {}
- name: ratingScaleLevelDescriptors
  endpoint:
    path: /ratingScaleLevelDescriptors/{id}
    method: GET
    data_selector: Responseobject
- name: createRatingScaleLevelDescriptors
  endpoint:
    path: /createRatingScaleLevelDescriptors
    method: GET
    data_selector: Responseobject
- name: deleteRatingScaleLevelDescriptors
  endpoint:
    path: /deleteRatingScaleLevelDescriptors
    method: GET
    data_selector: Responseobject
- name: updateRatingScaleLevelDescriptors
  endpoint:
    path: /updateRatingScaleLevelDescriptors
    method: GET
    data_selector: Responseobject
- name: rating_scale_levels
  endpoint:
    path: /ratingScaleLevels
    method: GET
    data_selector: data
    params:
      ratingScaleID: string
      limit: integer
      cursor: string
- name: createRatingScales
  endpoint:
    path: /createRatingScales
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteRatingScales
  endpoint:
    path: /deleteRatingScales
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateRatingScales
  endpoint:
    path: /updateRatingScales
    method: GET
    data_selector: data
    params:
      limit: 10
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: repository
  endpoint:
    path: /repositories/{id}
    method: GET
    data_selector: code
    params: {}
- name: skillDefinitionTypes
  endpoint:
    path: /skillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: get_rating_scale_level
  endpoint:
    path: /ratingScaleLevels/{id}
    method: GET
    data_selector: object
    params: {}
- name: list_create_rating_scale_levels
  endpoint:
    path: /createRatingScaleLevels
    method: GET
    data_selector: data
    params:
      limit: 10
- name: propose_creation_rating_scale_levels
  endpoint:
    path: /createRatingScaleLevels
    method: POST
    data_selector: object[]
    params: {}
- name: get_create_rating_scale_level_proposal
  endpoint:
    path: /createRatingScaleLevels/{id}
    method: GET
    data_selector: object
    params: {}
- name: list_delete_rating_scale_levels
  endpoint:
    path: /deleteRatingScaleLevels
    method: GET
    data_selector: data
    params:
      limit: 10
- name: propose_deletion_rating_scale_levels
  endpoint:
    path: /deleteRatingScaleLevels
    method: POST
    data_selector: object[]
    params: {}
- name: get_delete_rating_scale_level_proposal
  endpoint:
    path: /deleteRatingScaleLevels/{id}
    method: GET
    data_selector: object
    params: {}
- name: list_update_rating_scale_levels
  endpoint:
    path: /updateRatingScaleLevels
    method: GET
    data_selector: data
    params:
      limit: 10
- name: propose_update_rating_scale_levels
  endpoint:
    path: /updateRatingScaleLevels
    method: POST
    data_selector: object[]
    params: {}
- name: get_update_rating_scale_level_proposal
  endpoint:
    path: /updateRatingScaleLevels/{id}
    method: GET
    data_selector: object
    params: {}
- name: ratingScales
  endpoint:
    path: /ratingScales
    method: GET
    data_selector: data
    params:
      limit: '10'
- name: ratingScale
  endpoint:
    path: /ratingScales/{id}
    method: GET
    data_selector: data
    params: {}
- name: createSkillDefinitionTypes
  endpoint:
    path: /createSkillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteSkillDefinitionTypes
  endpoint:
    path: /deleteSkillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateSkillDefinitionTypes
  endpoint:
    path: /updateSkillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: skillDefinitions
  endpoint:
    path: /skillDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: createRatingScales
  endpoint:
    path: /createRatingScales
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteRatingScales
  endpoint:
    path: /deleteRatingScales
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateRatingScales
  endpoint:
    path: /updateRatingScales
    method: GET
    data_selector: data
    params:
      limit: 10
- name: SkillDefinition
  endpoint:
    path: /skillDefinitions/{id}
    method: GET
    data_selector: object
    params: {}
- name: createSkillDefinitions
  endpoint:
    path: /createSkillDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteSkillDefinitions
  endpoint:
    path: /deleteSkillDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateSkillDefinitions
  endpoint:
    path: /updateSkillDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: repositories
  endpoint:
    path: /repositories
    method: GET
    data_selector: data
    params:
      limit: 10
- name: repository
  endpoint:
    path: /repositories/{id}
    method: GET
    data_selector: code
    params: {}
- name: update_skill_definitions
  endpoint:
    path: /updateSkillDefinitions/{id}
    method: GET
    data_selector: response
- name: skillDefinitionTypes
  endpoint:
    path: /skillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: skillDefinitionType
  endpoint:
    path: /skillDefinitionTypes/{id}
    method: GET
    data_selector: data
    params: {}
- name: skillPlannings
  endpoint:
    path: /skillPlannings
    method: GET
    data_selector: data
    params:
      employeeID: string
      typeOfProofID: string
      skillDefinitionID: string
      limit: integer
      cursor: string
- name: createSkillDefinitionTypes
  endpoint:
    path: /createSkillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteSkillDefinitionTypes
  endpoint:
    path: /deleteSkillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateSkillDefinitionTypes
  endpoint:
    path: /updateSkillDefinitionTypes
    method: GET
    data_selector: data
    params:
      limit: 10
- name: skillPlanning
  endpoint:
    path: /skillPlannings/{id}
    method: GET
    data_selector: object
    params: {}
- name: createSkillPlannings
  endpoint:
    path: /createSkillPlannings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteSkillPlannings
  endpoint:
    path: /deleteSkillPlannings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateSkillPlannings
  endpoint:
    path: /updateSkillPlannings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: update_skill_planning
  endpoint:
    path: /updateSkillPlannings/{id}
    method: GET
    data_selector: response
- name: skillDefinitions
  endpoint:
    path: /skillDefinitions
    method: GET
    data_selector: data
    params:
      ratingScaleID: string
      typeID: string
      limit: integer
- name: skillResults
  endpoint:
    path: /skillResults
    method: GET
    data_selector: data
    params: {}
- name: SkillDefinition
  endpoint:
    path: /skillDefinitions/{id}
    method: GET
    data_selector: object
    params: {}
- name: createSkillDefinitions
  endpoint:
    path: /createSkillDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteSkillDefinitions
  endpoint:
    path: /deleteSkillDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateSkillDefinitions
  endpoint:
    path: /updateSkillDefinitions
    method: GET
    data_selector: data
    params:
      limit: 10
- name: skill_result
  endpoint:
    path: /skillResults/{id}
    method: GET
    data_selector: Responseobject
    params:
      id: string
- name: create_skill_result
  endpoint:
    path: /createSkillResults
    method: GET
    data_selector: data
    params: {}
- name: delete_skill_result
  endpoint:
    path: /deleteSkillResults
    method: GET
    data_selector: data
    params: {}
- name: update_skill_result
  endpoint:
    path: /updateSkillResults
    method: GET
    data_selector: data
    params: {}
- name: updateSkillDefinitions
  endpoint:
    path: /updateSkillDefinitions/{id}
    method: GET
    data_selector: response
- name: update_skill_results
  endpoint:
    path: /updateSkillResults/{id}
    method: GET
    data_selector: customValues
    params:
      id: string
- name: skillPlannings
  endpoint:
    path: /skillPlannings
    method: GET
    data_selector: data
    params:
      limit: 10
- name: typesOfProof
  endpoint:
    path: /typesOfProof
    method: GET
    data_selector: data
    params:
      skillDefinitionID: string
      limit: integer
- name: TypeOfProof
  endpoint:
    path: /typesOfProof/{id}
    method: GET
    data_selector: Response
    params: {}
- name: createTypesOfProof
  endpoint:
    path: /createTypesOfProof
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteTypesOfProof
  endpoint:
    path: /deleteTypesOfProof
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateTypesOfProof
  endpoint:
    path: /updateTypesOfProof
    method: GET
    data_selector: data
    params:
      limit: 10
- name: SkillPlanning
  endpoint:
    path: /skillPlannings/{id}
    method: GET
    data_selector: Responseobject
    params: {}
- name: createSkillPlannings
  endpoint:
    path: /createSkillPlannings
    method: GET
    data_selector: Responseobject
    params: {}
- name: deleteSkillPlannings
  endpoint:
    path: /deleteSkillPlannings
    method: GET
    data_selector: Responseobject
    params: {}
- name: updateSkillPlannings
  endpoint:
    path: /updateSkillPlannings
    method: GET
    data_selector: Responseobject
    params: {}
- name: update_skill_planning
  endpoint:
    path: /updateSkillPlannings/{id}
    method: GET
    data_selector: response
- name: Models
  endpoint:
    path: /ag5-api/version-4-beta/models
    method: GET
    data_selector: records
- name: Employees
  endpoint:
    path: /ag5-api/version-4-beta/employees
    method: GET
    data_selector: records
- name: EmploymentContracts
  endpoint:
    path: /ag5-api/version-4-beta/employmentcontracts
    method: GET
    data_selector: records
- name: SkillDefinitions
  endpoint:
    path: /ag5-api/version-4-beta/skilldefinitions
    method: GET
    data_selector: records
- name: skillResults
  endpoint:
    path: /skillResults
    method: GET
    data_selector: data
    params:
      employeeID: string
      typeOfProofID: string
      scoreID: string
      limit: integer
- name: skillResult
  endpoint:
    path: /skillResults/{id}
    method: GET
    data_selector: Response
    params: {}
- name: createSkillResults
  endpoint:
    path: /createSkillResults
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteSkillResults
  endpoint:
    path: /deleteSkillResults
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateSkillResults
  endpoint:
    path: /updateSkillResults
    method: GET
    data_selector: data
    params:
      limit: 10
- name: update_skill_results
  endpoint:
    path: /updateSkillResults/{id}
    method: GET
    data_selector: customValues
    params:
      id: string
- name: Achievements
  endpoint:
    path: /ag5-api/version-3-deprecated/achievements
    method: GET
- name: ContractTypes
  endpoint:
    path: /ag5-api/version-3-deprecated/contracttypes
    method: GET
- name: EmploymentContracts
  endpoint:
    path: /ag5-api/version-3-deprecated/employmentcontracts
    method: GET
- name: EmploymentRelations
  endpoint:
    path: /ag5-api/version-3-deprecated/employmentrelations
    method: GET
- name: Employments
  endpoint:
    path: /ag5-api/version-3-deprecated/employments
    method: GET
- name: EmploymentUnavailabilities
  endpoint:
    path: /ag5-api/version-3-deprecated/employmentunavailabilities
    method: GET
- name: EvidenceVariants
  endpoint:
    path: /ag5-api/version-3-deprecated/evidencevariants
    method: GET
- name: Groupings
  endpoint:
    path: /ag5-api/version-3-deprecated/groupings
    method: GET
- name: GroupingTypes
  endpoint:
    path: /ag5-api/version-3-deprecated/groupingtypes
    method: GET
- name: InProgressEntries
  endpoint:
    path: /ag5-api/version-3-deprecated/inprogressentries
    method: GET
- name: MeasurementSystems
  endpoint:
    path: /ag5-api/version-3-deprecated/measurementsystems
    method: GET
- name: MeasurementValues
  endpoint:
    path: /ag5-api/version-3-deprecated/measurementvalues
    method: GET
- name: Positions
  endpoint:
    path: /ag5-api/version-3-deprecated/positions
    method: GET
- name: Qualifications
  endpoint:
    path: /ag5-api/version-3-deprecated/qualifications
    method: GET
- name: QualificationTypes
  endpoint:
    path: /ag5-api/version-3-deprecated/qualificationtypes
    method: GET
- name: ServiceIsAvailable
  endpoint:
    path: /ag5-api/version-3-deprecated/serviceisavailable
    method: GET
- name: ServiceVersion
  endpoint:
    path: /ag5-api/version-3-deprecated/serviceversion
    method: GET
- name: typesOfProof
  endpoint:
    path: /typesOfProof
    method: GET
    data_selector: data
    params:
      skillDefinitionID: string
      limit: integer
- name: achievements
  endpoint:
    path: /achievements
    method: GET
    data_selector: results
    params: {}
- name: achievement_by_id
  endpoint:
    path: /achievements/{id}
    method: GET
    data_selector: results
    params: {}
- name: contractTypes
  endpoint:
    path: /contractTypes
    method: GET
    data_selector: results
    params: {}
- name: contractTypeById
  endpoint:
    path: /contractTypes/{id}
    method: GET
    data_selector: results
    params: {}
- name: TypeOfProof
  endpoint:
    path: /typesOfProof/{id}
    method: GET
    data_selector: Response
    params: {}
- name: createTypesOfProof
  endpoint:
    path: /createTypesOfProof
    method: GET
    data_selector: data
    params:
      limit: 10
- name: deleteTypesOfProof
  endpoint:
    path: /deleteTypesOfProof
    method: GET
    data_selector: data
    params:
      limit: 10
- name: updateTypesOfProof
  endpoint:
    path: /updateTypesOfProof
    method: GET
    data_selector: data
    params:
      limit: 10
- name: Models
  endpoint:
    path: /ag5-api/version-4-beta/models
    method: GET
    data_selector: records
- name: employmentContracts
  endpoint:
    path: /employmentContracts
    method: GET
    data_selector: results
    params:
      limit: integer
      pageToken: string
      sinceDeltaToken: string
      fields: string[]
- name: employmentContractById
  endpoint:
    path: /employmentContracts/{id}
    method: GET
    data_selector: results
- name: employmentRelations
  endpoint:
    path: /employmentRelations
    method: GET
    data_selector: results
- name: employmentRelationById
  endpoint:
    path: /employmentRelations/{id}
    method: GET
    data_selector: results
- name: Employments
  endpoint:
    path: /ag5-api/version-4-beta/employments
    method: GET
    data_selector: records
    params: {}
- name: employments
  endpoint:
    path: /employments
    method: GET
    data_selector: results
    params:
      pageToken: string
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: employment_by_id
  endpoint:
    path: /employments/{id}
    method: GET
    data_selector: results
    params: {}
- name: Achievements
  endpoint:
    path: /ag5-api/version-3-deprecated/achievements
    method: GET
- name: ContractTypes
  endpoint:
    path: /ag5-api/version-3-deprecated/contracttypes
    method: GET
- name: EmploymentContracts
  endpoint:
    path: /ag5-api/version-3-deprecated/employmentcontracts
    method: GET
- name: EmploymentRelations
  endpoint:
    path: /ag5-api/version-3-deprecated/employmentrelations
    method: GET
- name: Employments
  endpoint:
    path: /ag5-api/version-3-deprecated/employments
    method: GET
- name: EmploymentUnavailabilities
  endpoint:
    path: /ag5-api/version-3-deprecated/employmentunavailabilities
    method: GET
- name: EvidenceVariants
  endpoint:
    path: /ag5-api/version-3-deprecated/evidencevariants
    method: GET
- name: Groupings
  endpoint:
    path: /ag5-api/version-3-deprecated/groupings
    method: GET
- name: GroupingTypes
  endpoint:
    path: /ag5-api/version-3-deprecated/groupingtypes
    method: GET
- name: InProgressEntries
  endpoint:
    path: /ag5-api/version-3-deprecated/inprogressentries
    method: GET
- name: MeasurementSystems
  endpoint:
    path: /ag5-api/version-3-deprecated/measurementsystems
    method: GET
- name: MeasurementValues
  endpoint:
    path: /ag5-api/version-3-deprecated/measurementvalues
    method: GET
- name: Positions
  endpoint:
    path: /ag5-api/version-3-deprecated/positions
    method: GET
- name: Qualifications
  endpoint:
    path: /ag5-api/version-3-deprecated/qualifications
    method: GET
- name: QualificationTypes
  endpoint:
    path: /ag5-api/version-3-deprecated/qualificationtypes
    method: GET
- name: ServiceIsAvailable
  endpoint:
    path: /ag5-api/version-3-deprecated/serviceisavailable
    method: GET
- name: ServiceVersion
  endpoint:
    path: /ag5-api/version-3-deprecated/serviceversion
    method: GET
- name: employment_unavailabilities
  endpoint:
    path: /employmentUnavailabilities
    method: GET
    data_selector: results
- name: employment_unavailability_by_id
  endpoint:
    path: /employmentUnavailabilities/{id}
    method: GET
    data_selector: ''
- name: achievements
  endpoint:
    path: /achievements
    method: GET
    data_selector: results
    params: {}
- name: achievement_by_id
  endpoint:
    path: /achievements/{id}
    method: GET
    data_selector: results
    params: {}
- name: evidenceVariants
  endpoint:
    path: /evidenceVariants
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: evidenceVariantById
  endpoint:
    path: /evidenceVariants/{id}
    method: GET
    data_selector: qualificationID
- name: contractTypes
  endpoint:
    path: /contractTypes
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: contractTypeById
  endpoint:
    path: /contractTypes/{id}
    method: GET
    data_selector: results
    params: {}
- name: groupings
  endpoint:
    path: /groupings
    method: GET
    data_selector: results
    params: {}
- name: grouping_by_id
  endpoint:
    path: /groupings/{id}
    method: GET
    data_selector: results
    params: {}
- name: employmentContracts
  endpoint:
    path: /employmentContracts
    method: GET
    data_selector: results
    params: {}
- name: employmentContractById
  endpoint:
    path: /employmentContracts/{id}
    method: GET
    data_selector: results
    params: {}
- name: groupingTypes
  endpoint:
    path: /groupingTypes
    method: GET
    data_selector: results
    params:
      limit: integer
      pageToken: string
      sinceDeltaToken: string
      fields: string[]
- name: groupingTypeById
  endpoint:
    path: /groupingTypes/{id}
    method: GET
    data_selector: results
    params: {}
- name: employmentRelations
  endpoint:
    path: /employmentRelations
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: employmentRelationById
  endpoint:
    path: /employmentRelations/{id}
    method: GET
    data_selector: results
    params: {}
- name: inProgressEntries
  endpoint:
    path: /inProgressEntries
    method: GET
    data_selector: results
    params:
      sinceDeltaToken: string
      fields: string[]
- name: inProgressEntryById
  endpoint:
    path: /inProgressEntries/{id}
    method: GET
    data_selector: results
    params: {}
- name: Employments
  endpoint:
    path: /ag5-api/version-4-beta/employments
    method: GET
- name: measurementSystems
  endpoint:
    path: /measurementSystems
    method: GET
    data_selector: results
    params: {}
- name: measurementSystemById
  endpoint:
    path: /measurementSystems/{id}
    method: GET
    data_selector: ''
    params:
      id: string
- name: employments
  endpoint:
    path: /employments
    method: GET
    data_selector: results
    params:
      pageToken: string
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: employment_by_id
  endpoint:
    path: /employments/{id}
    method: GET
    data_selector: results
    params: {}
- name: measurementValues
  endpoint:
    path: /measurementValues
    method: GET
    data_selector: results
- name: measurementValueById
  endpoint:
    path: /measurementValues/{id}
    method: GET
    data_selector: id
- name: employment_unavailabilities
  endpoint:
    path: /employmentUnavailabilities
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: employment_unavailability_detail
  endpoint:
    path: /employmentUnavailabilities/{id}
    method: GET
    data_selector: id
    params: {}
- name: evidenceVariants
  endpoint:
    path: /evidenceVariants
    method: GET
    data_selector: results
- name: evidenceVariantById
  endpoint:
    path: /evidenceVariants/{id}
    method: GET
    data_selector: results
- name: positions
  endpoint:
    path: /positions
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: position_by_id
  endpoint:
    path: /positions/{id}
    method: GET
    data_selector: id
    params: {}
- name: groupings
  endpoint:
    path: /groupings
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: grouping_by_id
  endpoint:
    path: /groupings/{id}
    method: GET
    data_selector: results
    params: {}
- name: qualifications
  endpoint:
    path: /qualifications
    method: GET
    data_selector: results
    params:
      pageToken: string
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: qualification_by_id
  endpoint:
    path: /qualifications/{id}
    method: GET
    data_selector: ''
    params:
      id: string
- name: groupingTypes
  endpoint:
    path: /groupingTypes
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: groupingTypeById
  endpoint:
    path: /groupingTypes/{id}
    method: GET
    data_selector: results
    params: {}
- name: qualificationTypes
  endpoint:
    path: /qualificationTypes
    method: GET
    data_selector: results
    params:
      limit: integer
      pageToken: string
      sinceDeltaToken: string
      fields: string[]
- name: qualificationTypeById
  endpoint:
    path: /qualificationTypes/{id}
    method: GET
    data_selector: ''
    params:
      id: string
- name: inProgressEntries
  endpoint:
    path: /inProgressEntries
    method: GET
    data_selector: results
    params:
      limit: integer
- name: inProgressEntryById
  endpoint:
    path: /inProgressEntries/{id}
    method: GET
    data_selector: results
    params: {}
- name: service_is_available
  endpoint:
    path: /serviceIsAvailable
    method: GET
    data_selector: boolean
- name: serviceVersion
  endpoint:
    path: /serviceVersion
    method: GET
    data_selector: object
    params: {}
- name: measurementSystems
  endpoint:
    path: /measurementSystems
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: measurementSystemById
  endpoint:
    path: /measurementSystems/{id}
    method: GET
    data_selector: ''
    params: {}
- name: contract_types
  endpoint:
    path: /contractTypes
    method: GET
- name: measurementValues
  endpoint:
    path: /measurementValues
    method: GET
    data_selector: results
    params:
      limit: integer
      sinceDeltaToken: string
      fields: string[]
- name: measurementValueById
  endpoint:
    path: /measurementValues/{id}
    method: GET
    data_selector: results
    params: {}
- name: positions
  endpoint:
    path: /positions
    method: GET
    data_selector: results
    params:
      limit: integer
      pageToken: string
      sinceDeltaToken: string
      fields: string[]
- name: position_detail
  endpoint:
    path: /positions/{id}
    method: GET
    data_selector: id
    params: {}
- name: employees
  endpoint:
    path: /employees/how-to-create-a-new-employee
    method: GET
- name: skills
  endpoint:
    path: /skills/what-is-a-skill
    method: GET
- name: organizational_structures
  endpoint:
    path: /employees/organizational-structures
    method: GET
- name: qualifications
  endpoint:
    path: /qualifications
    method: GET
    data_selector: results
- name: qualification_by_id
  endpoint:
    path: /qualifications/{id}
    method: GET
    data_selector: results
- name: skills
  endpoint:
    path: /skills
    method: GET
- name: qualificationTypes
  endpoint:
    path: /qualificationTypes
    method: GET
    data_selector: results
    params: {}
- name: qualificationTypeById
  endpoint:
    path: /qualificationTypes/{id}
    method: GET
    data_selector: results
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: GET
- name: service_is_available
  endpoint:
    path: /serviceIsAvailable
    method: GET
    data_selector: boolean
- name: service_version
  endpoint:
    path: /serviceVersion
    method: GET
    data_selector: object
    params: {}
- name: skill_requirements
  endpoint:
    path: /api/v1/skill_requirements
    method: GET
    data_selector: requirements
    params: {}
- name: contract_types
  endpoint:
    path: /contractTypes
    method: GET
- name: rating_scale
  endpoint:
    path: /api/rating-scales
    method: GET
    data_selector: scales
    params: {}
- name: skill_results
  endpoint:
    path: /skills/skill-results
    method: GET
- name: skill_results
  endpoint:
    path: /api/skill_results
    method: POST
    data_selector: results
    params:
      date: required
      score: required
      expiration_date: optional
      remark: optional
      attachment: optional
- name: employees
  endpoint:
    path: /employees
    method: GET
- name: skills
  endpoint:
    path: /skills
    method: GET
- name: organizational_structures
  endpoint:
    path: /organizational-structures
    method: GET
- name: result_approvals
  endpoint:
    path: /skills/skill-results
    method: GET
    data_selector: results
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: skills
- name: skill_revocation
  endpoint:
    path: /skill_revocation
    method: POST
    data_selector: results
- name: libraries
  endpoint:
    path: /libraries
    method: GET
    data_selector: libraries
    params: {}
- name: skills
  endpoint:
    path: /skills
    method: GET
    data_selector: skills
    params: {}
- name: custom_fields
  endpoint:
    path: /skills/custom-fields
    method: GET
    data_selector: custom_fields
    params: {}
- name: skill_requirements
  endpoint:
    path: /skills/skill-requirements
    method: GET
    data_selector: records
- name: alert_list
  endpoint:
    path: /alert-list
    method: GET
    data_selector: alerts
    params: {}
- name: skill_results
  endpoint:
    path: /add_skill_result
    method: POST
    data_selector: results
    params:
      date: required
      score: required
      expiration_date: optional
      remark: optional
      attachment: optional
- name: user_accounts
  endpoint:
    path: /api/v1/user_accounts
    method: GET
    data_selector: data
    params: {}
- name: User account examples
  endpoint:
    path: /accounts-roles-and-permissions/user-account-examples
    method: GET
    data_selector: examples
- name: custom_fields
  endpoint:
    path: /skills/custom-fields
    method: GET
    data_selector: records
- name: workflow_reminders
  endpoint:
    path: /workflows/reminders
    method: GET
    data_selector: reminders
    params: {}
- name: skills_portfolio
  endpoint:
    path: /api/v1/skills_portfolio
    method: GET
    data_selector: records
    params: {}
- name: employee
  endpoint:
    path: /employees
    method: POST
    data_selector: employeeData
    params: {}
- name: organizational_structures
  endpoint:
    path: /api/organizational_structures
    method: GET
    data_selector: data
- name: alert_list
  endpoint:
    path: /alert-list
    method: GET
- name: self_assessment
  endpoint:
    path: /self-assessments
    method: GET
    data_selector: requests
    params: {}
- name: approval
  endpoint:
    path: /self-assessments/approvals
    method: POST
    data_selector: results
    params: {}
- name: user_accounts
  endpoint:
    path: /api/user_accounts
    method: GET
    data_selector: records
- name: entity_types
  endpoint:
    path: /organizations/{organization_name}/repositories/{repository_name}/entity-types
    method: GET
- name: event_types
  endpoint:
    path: /organizations/{organization_name}/repositories/{repository_name}/event-types
    method: GET
- name: workflow_reminders
  endpoint:
    path: /workflows/reminders
    method: GET
    data_selector: reminders
    params: {}
- name: compliance_per_grouping
  endpoint:
    path: /compliance/grouping
    method: GET
- name: employee_qualification_compliance
  endpoint:
    path: /compliance/employee-qualification
    method: GET
- name: results
  endpoint:
    path: /api/v1/results
    method: GET
    data_selector: data
- name: employees
  endpoint:
    path: /api/v1/employees
    method: GET
    data_selector: data
- name: self_assessment
  endpoint:
    path: /api/self-assessment
    method: POST
    data_selector: data
    params: {}
- name: self_assessments
  endpoint:
    path: /api/self_assessments
    method: GET
    data_selector: results
- name: approval_requests
  endpoint:
    path: /api/approval_requests
    method: GET
    data_selector: requests
- name: master_data
  endpoint:
    path: /data-management/master-data
    method: GET
    data_selector: records
    params: {}
- name: master_data
  endpoint:
    path: /api/v1/masterdata
    method: GET
    data_selector: data
    params: {}
- name: entity_types
  endpoint:
    path: /organizations/{organization_name}/repositories/{repository_name}/entity-types
    method: GET
- name: event_types
  endpoint:
    path: /organizations/{organization_name}/repositories/{repository_name}/event-types
    method: GET
- name: compliance_per_grouping
  endpoint:
    path: /api/compliance/grouping
    method: GET
    data_selector: records
- name: employee_qualification_compliance
  endpoint:
    path: /api/compliance/employee-qualification
    method: GET
    data_selector: records
- name: master_data
  endpoint:
    path: /data-management/master-data
    method: GET
    data_selector: records
    params: {}
notes:
- The csv option gives the full data set, without pagination.
- The direct connection method can be useful for small volumes of data, or for exploration.
- The release dates provided are accurate as of the latest update and are intended
  to give you a general idea of when to expect new features, updates, or changes within
  our platform. However, please be aware that release schedules are subject to change.
- Release dates are subject to change due to unforeseen circumstances.
- The roadmap is always subject to change.
- Rate limiting is implemented on the API.
- Proposals may be automatically approved or require manual approval depending on
  system configuration.
- Filters use exact match only
- Multiple filters are combined with AND logic
- API version 4 is currently in Beta.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The GET method for /employmentUnavailabilities requires bearer token authorization.
- The responses include a deltaToken and pageToken for pagination.
- Requires setup of bearer token for authorization.
- The AG5 API updates every hour, ensuring that data remains current and synchronized.
- Supports pagination using deltaToken and pageToken
- AG5’s skills management software helps you visualize skill gaps, track training
  requirements, and manage all your employee skills and certifications in one secure
  platform.
- Requires bearer token for authorization
- Skills exist to understand and record employee capabilities.
- This feature enables each factory across the globe to access and apply the specific
  skills required for its local operations while adhering to global standards.
- AG5 must have defined requirements for positions.
- AG5 API updates every hour, ensuring that data remains current and synchronized.
- Creating a planning on a skills page only works if there is a requirement or an
  expired result.
- Uses OAuth2 with refresh token — requires setup of connected app in AG5
- Results can be obtained by an employee after attending a course, taking a test,
  doing training, or any other form of assessment.
- Direct managers approve skill results for their employees.
- Requested self-assessments are approved by the user who created the request.
- AG5 can measure the skills gaps of your employees.
- This is especially important when different users can create new skill results
- Skills can range from actual skills to courses, certifications, competencies, degrees,
  experience, training on the job, physical characteristics, skills, pieces of knowledge,
  etc.
- Skills exist to understand and record employee capabilities, and to determine whether
  or not an employee is qualified to carry out a certain activity.
- The purpose is to make exceptions possible but still be explicit about why someone
  is (temporarily) excluded from some requirement rule.
- If your skill do not live in a library, they will not be visible in any matrix.
- A revocation is the ability to withdraw a skill of an employee for a period of time
  or permanently.
- Revoking a skill provides a more accurate view of employee skills.
- The type 'Number' cannot accept decimals at this moment.
- Currently, you only have the ability to add 4 custom fields within the skill or
  employee page.
- Prerequisite rules are not enabled in AG5 by default.
- Creating a prerequisite rule will retroactively apply to all existing results.
- Changing prerequisite rules will also automatically revoke auto achievements.
- To turn on the Global Library feature for your AG5 system, please send an inquiry
  email to support@ag5.com.
- Every AG5 user that is registered as an employee will have a skills portfolio.
- AG5 provides employees with the ability to take control of their skills development
  and skills by enabling them to update their skills portfolio without requiring any
  approval.
- AG5 must have defined requirements for positions for certain features to work.
- If AG5 is connected with your HR system for importing employees, we do not recommend
  to manually create employees in AG5 as these are automatically created if created
  within your HR system.
- 'Improved Forecasting: You’ll know when your team will be ready for future projects.'
- 'Better Resource Allocation: Managers can plan staffing based on upcoming qualifications.'
- 'Proactive Compliance: Never miss a certification renewal deadline.'
- Organizational structures are made up of groupings, positions, and requirements.
- You can create/define a new rating scale on the rating scale page.
- Click on the bell icon to access the alert list.
- You can filter by Problems, Warnings, Fine, and Period.
- AG5 separately tracks both the date submitted and the date of entry.
- There are no character limits for remarks.
- It's not currently possible for AG5 to set optional fields as required fields.
- Different account types exist to manage access rights.
- Admin users have full access while other types have limited permissions.
- The direct manager is responsible for approving skill results of their employees.
- Admin users can approve results of all employees.
- Certain users should not be able to export data.
- A revocation in AG5 is the ability to withdraw a skill of an employee for a period
  of time or permanently.
- It provides a more accurate view of the skills of employees because registering
  skills explicitly as 'revoked' is more correct than e.g. deleting them or setting
  them to 'failed'.
- 'Check for typos: Double-check the email address you''re using to log in.'
- 'Verify email domain: Make sure you''re using the correct email domain.'
- 'Confirm user account: Reach out to your organization''s AG5 administrator to ensure
  that a user account has been created for the email address you''re trying to log
  in with.'
- 'Reset password: Try resetting your password if you''re still having trouble.'
- 'Contact support: If none of the above solutions work, reach out to support.'
- Currently, the custom fields are visible on the employee page or skill page.
- You have the ability to export the data from the skill page or employee page.
- If your organization has SSO enabled, then the below steps are not necessary, as
  you'll be able to log into AG5 without creating a password.
- This feature is only available to admin users.
- Any actions performed while acting as a proxy user are logged for accountability
  and assigned to the admin user who is acting as the proxy, not to the user being
  proxied.
- You will retain your admin privileges while viewing another user’s account but must
  switch back to your account to make administrative changes.
- It's important to note that this will be a separate email for each instance the
  trigger fires.
- Reminders will only work for trigger actions that are activated after the reminder
  is configured.
- Existing open tasks won’t receive reminders retroactively.
- Employees can update their skills portfolio without requiring any approval.
- This Insights application is currently available only in English.
- By default, the time period is set for the last year, although that can be changed
  by clicking on the time period filter.
- Self-assessment is an advanced feature that isn't enabled by default, so if you
  want to use this in your organization, please contact support or your customer success
  manager.
- The alert list provides insights into skill problems, warnings, and status.
- Self-assessment results are not active immediately and require approval.
- The system does not have the functionality to automatically translate your content.
  The content needs to be manually translated by the user.
- Users can have different access rights based on their account type.
- Master data changes require an approval process.
- If you do NOT have SSO enabled and need to create user accounts manually, head to
  Organization > Account management & History > User accounts.
- New users in AG5 should monitor the history list until they are familiar with the
  software.
- Admin, super user or matrix access user accounts are required in order to be able
  to initiate exports.
- The Advanced Analytics API requires knowledge of tools used for data preparation
  and data visualization.
- If your organization has SSO enabled, you can log into AG5 without creating a password.
- Data security is crucial for any organization, and the Advanced Analytics data is
  bound to the same strict data protection methods as all other AG5 data.
- The data is securely stored in Google BigQuery (hosted in Europe). When providing
  a customer with access to Advanced Analytics data, AG5 will carefully inform about
  which data elements will be exposed.
- Compliance calculations are stored in the DataLake as Events.
- All sent emails can be seen in the Organization > Sent Emails menu.
- For almost all Events, the events after the reference_time are returned, except
  for EmploymentQualificationCompliance events.
- The compliance score is calculated by dividing the number of compliant qualifications
  by the number of required qualifications.
- Users can add results and eSignatures.
- Permissions may restrict viewing results.
- Master data changes require approval before becoming active.
- The Overall History shows the time-stamped change that was made, along with the
  user who enacted the change.
- Master data changes require approval before becoming active
- The Advanced Analytics data is calculated or refreshed at least daily.
- The data is securely stored in Google BigQuery (hosted in Europe).
- Compliance calculations are stored in the DataLake as Events
- Statistics calculations are stored in the DataLake as Events
- The API operations require bearer authentication.
- The responses can be retrieved in JSON or CSV format.
- Compliance scores calculated based on qualifications.
- This article gives some example KPIs and dashboards that can be calculated /created
  with the Advanced Analytics API.
- Integrations allow you to connect your existing software applications to your AG5
  system and exchange information.
- AG5's SSO Integrations adhere to the SAML2 standard.
- Changes to master data require approval from admin or user manager.
errors:
- '404 Not Found: Check the endpoint path or parameters.'
- '400: Bad request'
- '401: Unauthorized'
- '404: Not found'
- '500: Internal server error'
- 400 Bad request
- 401 Unauthorized
- 500 Internal server error
- 404 Not found
- 400 Bad Request
- 404 Not Found
- 500 Internal Server Error
- '401 Unauthorized: Recheck API key or permissions'
- '404 Not found: Check the EmploymentRelation ID'
- '500 Internal server error: Try again later'
- '400 Bad Request: Invalid parameters'
- '401 Unauthorized: Check API Key'
- '404 Not Found: Resource not found'
- '500 Internal Server Error: Server error occurred'
- '404 Not found: Ensure the ID is correct'
- '401 Unauthorized: Recheck API key'
- '404 Not found: Verify the endpoint and parameters'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not found: Check the ID provided'
- '404 Not found: Check the SkillDefinition ID'
- '500 Internal server error: Retry the request later'
- '404 Not found: Check the provided ID'
- '500 Internal server error: Retry the request'
- '401 Unauthorized: Recheck API Key'
- '404 Not Found: Ensure the ID exists'
- '500 Internal Server Error: Check server status'
- '401 Unauthorized: Recheck OAuth credentials'
- '404 Not Found: Verify endpoint paths'
- '404 Not found: Check the endpoint or resource ID'
- '401 Unauthorized: Recheck bearer token validity'
- '404 Not Found: Ensure the ID is correct'
- '401 Unauthorized: Recheck bearer token or its expiration.'
- '401 Unauthorized: Recheck bearer token'
- '200: Successful request'
- 200 Successful request
- '401 Unauthorized: Recheck token'
- '401 Unauthorized: Check user permissions or authentication.'
- '401 Unauthorized: Check your authentication credentials.'
- Reach out to support@ag5.com for activating a feature which allows you to restrict
  exports
- 'Not Authenticated: The user tried to log in using their organization’s identity
  provider, but the login attempt was unsuccessful.'
- 'Not Authorized: Your email domain is not authorized by your organization.'
- 'No User Account: We couldn''t find an AG5 account linked to your login details.'
- 'Something Went Wrong: We encountered an issue while trying to log you in.'
- Reach out to support@ag5.com for activating a feature which allows you to restrict
  exports.
- 'Not Authenticated: Check your credentials and try logging in again'
- 'Not Authorized: Check that you''re using the correct email address associated with
  your organization’s AG5 account'
- 'No User Account: Verify that you are using the correct email address associated
  with your organization'
- 'Something Went Wrong: Try logging in again after a few minutes'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify endpoint and resource existence.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Authorization error: Check the provided token.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - apiKey
  - bearer-token
  - Qualification
  - Admin User
  - Subject Matter Expert
  - NamedCredential
client:
  base_url: https://www.ag5.com
  auth:
    type: oauth2
source_metadata: null
