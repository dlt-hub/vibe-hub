resources:
- name: counter
  endpoint:
    path: /pkg/counter.js
    method: GET
- name: index.html
  endpoint:
    path: /index.html
    method: GET
- name: Cargo.toml
  endpoint:
    path: /Cargo.toml
    method: GET
- name: counter
  endpoint:
    path: /pkg/counter.js
    method: GET
- name: counter
  endpoint:
    path: /pkg/counter.js
    method: GET
- name: counter
  endpoint:
    path: /
    method: GET
    data_selector: body
- name: counter
  endpoint:
    path: /pkg/counter.js
    method: GET
    data_selector: module
    params: {}
- name: counter
  endpoint:
    path: /pkg/counter.js
    method: GET
notes:
- no framework specific cli needed
- no template specific language as everything is in rust
- Currently, *foyer* is still under heavy development.
- This crate lets you debug panics on `wasm32-unknown-unknown` by providing a panic
  hook that forwards panic messages to `console.error`.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- This crate doesn't provide any features; it just answers whether the stream is a
  terminal.
- Build using wasm-pack build --target web --release
- Serve using basic-http-server -a 0.0.0.0:4000
- foyer is built against the recent stable release. The minimum supported version
  is 1.81.0.
- 'Compiler support: requires rustc 1.63+'
- The current Tracing version is not guaranteed to build on Rust versions earlier
  than the minimum supported version.
- This library is for encoding/escaping special characters in HTML and decoding/unescaping
  HTML entities as well.
- Build using Cargo
- Specify the crate-type to be cdylib in Cargo.toml
- Currently, foyer is still under heavy development.
- Build using basic-http-server
- Currently, the tracing support in the tokio runtime is considered experimental.
- A minimum version of Tokio v1.0.0 or later is required to use the console's task
  instrumentation.
- Libraries that are released on crates.io have a MSRV of v1.57. Changes to the MSRV
  will be accompanied by a minor version bump.
- CLI tools and their corresponding support libraries have a MSRV of v1.76. Changes
  to the MSRV will be accompanied by a patch version bump.
- Syn supports rustc 1.61 and up.
- Once you've defined this static then jemalloc will be used for all allocations requested
  by Rust code in the same program.
- foyer aims to be an efficient and user-friendly hybrid cache lib in Rust.
- This section only shows briefs. Please visit https://foyer.rs for more details.
- Build using Cargo.
- Serve using basic-http-server -a 0.0.0.0:4000.
- Minimum supported Rust version is 1.81.0
- Designed to serve on Linux OS, but can still be built on other OS for development
- foyer aims to be a user-friendly hybrid cache lib in Rust.
- Timestamp parsing/formatting is super-fast because format is basically fixed.
- The current minimum required Rust version is 1.64.
- The experimental deadlock detector can be enabled with the deadlock_detection Cargo
  feature.
- '* foyer* needs to serialize/deserialize entries between memory and disk with hybrid
  cache.'
- The file and line number information associated with the log messages reports locations
  from the shims generated by wasm-bindgen, not the location of the logger call.
- Minimum supported version is 1.42
- Uses Rust programming language.
- Currently, the macro syntax has some limitations and may not work as you want.
- Serve using the specified command.
- Head over to the `getting-started.md` for the full tutorial.
- 'The normal #[test] cannot be used and will not work.'
- This crate may grow more functionality in the future, but for now it's somewhat
  bare bones!
- Fastrace is a tracing library 10~100x faster than others
- Applications should include fastrace as a dependency with the enable feature set
- Libraries should include fastrace as a dependency without enabling any extra features
- Serve using Cargo
- Build using cargo build
- '*foyer* is built against the recent stable release. The minimum supported version
  is 1.81.0.'
- '*foyer* is designed to serve on Linux OS, but can still be built on other OS for
  development.'
- foyer is built against the recent stable release. The minimum supported version
  is 1.82.0.
- The current foyer version is not guaranteed to build on Rust versions earlier than
  the minimum supported version.
- foyer needs to serialize/deserialize entries between memory and disk with hybrid
  cache.
- '*foyer* is built against the recent stable release. The minimum supported version
  is 1.77.'
- Uses hybrid cache - integrates both in-memory and disk cache for optimal performance.
- Build using basic-http-server -a 0.0.0.0:4000
- Then navigate to http://localhost:4000
- Requires setup of connected app in api
- Build using the specified commands in the documentation.
- '*foyer* aims to be a user-friendly hybrid cache lib in Rust.'
- The minimum supported version is 1.77.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Hi, time traveler!
auth_info:
  mentioned_objects: []
client:
  headers:
    Content-Type: text/html;charset=utf-8
    Accept: application/json
  base_url: http://localhost:4000
  auth: {}
  paginator: {}
source_metadata: null
