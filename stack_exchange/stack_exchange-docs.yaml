resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: device_events
  endpoint:
    path: /api/v1/device_events
    method: GET
    data_selector: events
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: reputation
  endpoint:
    path: /help/reputation
    method: GET
    data_selector: reputation
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: flags
  endpoint:
    path: /help/declined-flags
    method: GET
    data_selector: flags
    params: {}
- name: locked_post
  endpoint:
    path: /help/locked-posts
    method: GET
    data_selector: posts
    params: {}
- name: bounty
  endpoint:
    path: /help/bounty
    method: GET
    data_selector: bounty_info
    params: {}
- name: privileges
  endpoint:
    path: /help/privileges
    method: GET
    data_selector: privileges
    params: {}
- name: closed_questions
  endpoint:
    path: /help/closed-questions
    method: GET
    data_selector: questions
    params: {}
- name: quality_standards_error
  endpoint:
    path: /help/quality-standards-error
    method: GET
    data_selector: content
    params: {}
- name: ask_good_question
  endpoint:
    path: /help/how-to-ask
    method: GET
    data_selector: content
    params: {}
- name: question_ban
  endpoint:
    path: /help/question-bans
    method: GET
    data_selector: ''
- name: answer_ban
  endpoint:
    path: /help/answer-bans
    method: GET
    data_selector: error_message
- name: privileges
  endpoint:
    path: /help/privileges
    method: GET
    data_selector: privileges
    params: {}
- name: site_analytics
  endpoint:
    path: /site-analytics
    method: GET
    data_selector: site statistics
- name: trusted_user_privileges
  endpoint:
    path: /help/privileges/trusted-user
    method: GET
- name: protected_questions
  endpoint:
    path: /help/privileges/protect-questions
    method: GET
    data_selector: questions
    params: {}
- name: deleted_posts
  endpoint:
    path: /posts/deleted
    method: GET
    data_selector: posts
- name: moderator_tools
  endpoint:
    path: /tools
    method: GET
    data_selector: tools
- name: tag_wiki_edits
  endpoint:
    path: /help/privileges/approve-tag-wiki-edits
    method: GET
    data_selector: content
    params: {}
- name: close_votes
  endpoint:
    path: /help/privileges/close-questions
    method: GET
    data_selector: questions
- name: reopen_votes
  endpoint:
    path: /help/privileges/reopen-questions
    method: GET
    data_selector: questions
- name: edit_posts
  endpoint:
    path: /help/privileges/edit
    method: GET
    data_selector: edit posts
- name: established_user
  endpoint:
    path: /help/privileges/established-user
    method: GET
    data_selector: privileges
- name: gallery_chat_rooms
  endpoint:
    path: /chat/rooms/create
    method: POST
    data_selector: room
    params: {}
- name: access_review_queues
  endpoint:
    path: /help/privileges/access-review-queues
    method: GET
- name: create_tags
  endpoint:
    path: /help/privileges/create-tags
    method: GET
    data_selector: tags
    params: {}
- name: close_votes
  endpoint:
    path: /privileges/view-close-votes
    method: GET
    data_selector: close_votes
- name: reduced_ads
  endpoint:
    path: /help/privileges/reduced-ads
    method: GET
    data_selector: privileges
    params: {}
- name: vote_down
  endpoint:
    path: /help/privileges/vote-down
    method: GET
    data_selector: content
    params: {}
- name: create_chat_rooms
  endpoint:
    path: /help/privileges/chat-rooms
    method: GET
    data_selector: chat_rooms
    params: {}
- name: bounty
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
    data_selector: bounty_info
    params: {}
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
    params: {}
- name: chat
  endpoint:
    path: /chat
    method: GET
- name: flag_posts
  endpoint:
    path: /privileges/flag-posts
    method: GET
    data_selector: flagging_options
    params: {}
- name: vote_up
  endpoint:
    path: /help/privileges/vote-up
    method: GET
    data_selector: none
    params: {}
- name: new_user_restrictions
  endpoint:
    path: /help/privileges/new-user
    method: GET
    data_selector: data
    params: {}
- name: protected_questions
  endpoint:
    path: /help/privileges/protected-questions
    method: GET
    data_selector: data
    params: {}
- name: community_wiki_posts
  endpoint:
    path: /privileges/community-wiki
    method: GET
    data_selector: CommunityWikiPosts
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: response
    params: {}
- name: create_posts
  endpoint:
    path: /privileges/create-posts
    method: GET
    data_selector: creation privilege
    params: {}
- name: bounty
  endpoint:
    path: /bounty
    method: GET
    data_selector: bounties
- name: set_bounties
  endpoint:
    path: /help/privileges/set-bounties
    method: GET
    data_selector: bounty_details
    params: {}
- name: recent_questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: type-systems
  endpoint:
    path: /questions/tagged/type-systems
    method: GET
    data_selector: questions
    params: {}
- name: hiphop_questions
  endpoint:
    path: /questions/tagged/hiphop
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/operating-systems
    method: GET
    data_selector: questions
    params: {}
- name: abstraction_questions
  endpoint:
    path: /questions/tagged/abstraction
    method: GET
    data_selector: questions
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params:
      order: desc
      sort: activity
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: inventory
  endpoint:
    path: /api/v1/inventory
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions/tagged/security
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: coding_standards
  endpoint:
    path: /questions/tagged/coding-standards
    method: GET
    data_selector: questions
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: newest_c++_questions
  endpoint:
    path: /questions/tagged/c%2b%2b?tab=newest
    method: GET
    data_selector: questions
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: questions
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: type_safety_questions
  endpoint:
    path: /questions/tagged/type-safety
    method: GET
    data_selector: questions
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: questions
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: entry
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: entry
  endpoint:
    path: /q
    method: GET
    data_selector: entry
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: endpoint
  endpoint:
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: endpoint
  endpoint:
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: items
    params: {}
- name: response_codes
  endpoint:
    path: /questions/432652/should-a-rest-api-always-document-its-response-content
    method: GET
    data_selector: response_codes
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /questions
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: question
  endpoint:
    path: /question/432652
    method: GET
    data_selector: entry
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: endpoint
  endpoint:
    path: /your-endpoint
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: First questions
  endpoint:
    path: /review/first-questions
    method: GET
    data_selector: tasks
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: First questions
  endpoint:
    path: /review/first-questions/stats
    method: GET
    data_selector: reviews
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- You agree that, notwithstanding anything in the foregoing, any arbitration proceeding
  between you and us will be conducted in New York, NY, USA.
- Uses OAuth2 for authentication.
- Stack Overflow may collect personal data from you automatically using cookies or
  similar technologies.
- We may ask for your consent to contact you following completion of the surveys.
- This site is all about getting answers. It's not a discussion forum.
- The API supports OAuth2 authentication.
- Rate limits may apply to API requests.
- These cookies do not store any personally identifiable information.
- Requires setup of connected app in Stack Exchange
- Ensure compliance with Acceptable Use Policy
- Users must be logged in to join or participate in Collectives.
- The Extension does not require direct personal information such as your name or
  email address.
- A standard OAuth flow is utilized for authentication.
- All Applications must ensure they visually indicate that the Stack Exchange Network
  is the source of the content provided through the API Services.
- Applications which may in any way be indexed by search engines must adhere to all
  Attribution rules defined in the Stack Exchange Terms of Service.
- Cookies are necessary for the website to function and cannot be switched off in
  our systems.
- Reputation is a rough measurement of how much the community trusts you.
- The primary way to gain reputation is by posting good questions and useful answers.
- Moderators may provide a specific reason for declining a flag.
- If too many flags are declined, you may be temporarily banned from raising new flags.
- Moderators are bound to an agreement that states that they will abide by all other
  officially announced moderator and user policies made available to them.
- The referenced policies are currently found on Meta Stack Exchange.
- Bounties are funded by personal reputation and non-refundable.
- Bounties can attract more answers to questions.
- Always Active cookies are necessary for the website to function and cannot be switched
  off in our systems.
- Users with 3000 reputation can cast up to 24 close votes per day.
- Questions that need additional work or that are not a good fit for this site may
  be closed by experienced community members.
- Closed questions cannot be answered, but can be edited to make them eligible for
  reopening.
- New questions are subjected to a minimum quality filter.
- Ensure correct use of English spelling and grammar.
- Question bans do not affect other privileges, such as commenting or voting.
- Each question may only contain 5 tags at a maximum.
- Spaces are not allowed in tags – create compound tags using hyphens rather than
  spaces.
- Privileges control what you can do on Software Engineering Stack Exchange. Gain
  more privileges by increasing your reputation (points you receive from your fellow
  users for posting helpful questions and answers).
- Access to internal site analytics is a milestone privilege awarded at 25,000 reputation.
- Questions can be protected or unprotected by users that have the privilege.
- Questions should be protected when they are attracting poor answers from new users.
- Users with 10,000 reputation can access moderator tools.
- 'New search operator available: `deleted:1`.'
- This privilege is awarded at 3,000 reputation.
- Cookies do not store any personally identifiable information.
- Moderation privilege awarded at 2,000 reputation
- This privilege allows you to view and cast close and reopen votes on your own questions.
- Once you reach the milestone of 200 reputation, certain ads are automatically disabled
  from view.
- Downvotes cost 1 reputation from the voter and 2 from the post owner.
- Community wiki posts are more easily editable by all users, and do not confer any
  reputation.
- A bounty is a reputation reward you can put on a question to get it more attention
  for exactly one week.
- Bounties expire after seven days.
- Users can choose from various options when flagging a question or answer.
- New users cannot post more than eight hyperlinks at a time, either in a post or
  their user profile
- New users cannot contribute answers to protected questions
- New users cannot ask or answer questions too rapidly
- New users cannot make edits that don't create a post revision history
- Meta is our community for discussing the site itself, including bugs, feedback,
  and governance issues.
- You can always read meta, regardless of your reputation.
- Offers reputation as bounty on a question for more attention.
- Authentication is the act of one entity proving its identity to another entity.
- 'Undocumented placeholders: Event messages returned by the feed contain placeholders
  like %1$s, %2$s, %3$s, %4$s, %5$s.'
- 'Silent/unversioned changes: Placeholder assignments have changed without notice.'
- 'Lack of data model definition: There’s no formal schema for the SQS JSON.'
- 'Documentation lag: The official docs are maintained by the marketing team, not
  technical.'
- 'Lack of response: Issues raised have either not been answered, or treated as not
  important.'
- This API provides an RSS feed for the newest javascript questions.
- Uses REST API for accessing various resources.
- To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
- Requires OAuth2 for authentication
- Some endpoints may have rate limits
- An operating system acts as an intermediary between the user of a computer and the
  computer hardware.
- The purpose of an operating system is to provide an environment in which a user
  can execute programs in a convenient and efficient manner.
- ADTs are portable, theoretical constructs that can then be implemented in most any
  given programming language.
- Uses OAuth2 with refresh token — requires setup of an application in Stack Exchange
- Rate limits apply to API calls
- Requires authentication tokens to access inventory data
- The dedicated files service could generate "authorized download URL", at behest
  of other services. It is a URL with an expire-able special token parameter that
  files service can verify before starting the download.
- 'To turn off caching, send Cache-Control: no-cache, no-store, must-revalidate'
- 'Cache-Control: no-store in responses bypasses all tested browser caches'
- 'Cache-Control: no-cache in responses will get stored, but checked on each request'
- Feed provides the most recent questions from Software Engineering Stack Exchange.
- Always Active cookies are necessary for the website to function and cannot be switched
  off.
- Functional Cookies enable the website to provide enhanced functionality and personalisation.
- No authentication required for accessing public data.
- API provides access to data from various communities within Stack Exchange.
- Uses OAuth2 with refresh token — requires setup of connected app in Stack Exchange
- Some objects may have rate limits
- The API does not provide response data structure documentation.
- It is common to leave out the structure of the response data in a REST API documentation.
- It is common to leave out the structure of the response data in a REST API documentation
  or it is considered poor practice.
- It is common to leave out the structure of the response data in a REST API documentation
  or is this poor practice?
- Access earned at 500 reputation
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '500 Internal Server Error: Try again later.'
- '403 Forbidden: Check your API key or permissions.'
- 'REPUTATION_LIMIT_EXCEEDED: You can earn a maximum of 200 reputation per day.'
- 'REQUEST_LIMIT_EXCEEDED: You may see a warning advising you to review your flag
  history.'
- 'TEMPORARY_BAN: If at least a quarter of your flags were declined, you will be temporarily
  banned from raising new flags.'
- Bounty cannot be canceled once started.
- Users may only have three active bounties at any given time.
- This question has been asked before and already has an answer.
- This question doesn’t meet a Software Engineering Stack Exchange guideline.
- This question should include more details and clarify the problem.
- This post does not meet our quality standards.
- 'You can''t post new questions right now: Sorry, we are no longer accepting questions
  from your account because most of your questions need improvement or are out of
  scope for this site.'
- Avoid meta-tags in questions.
- Sorry, we are no longer accepting answers from your account because most of your
  answers need improvement or do not sufficiently answer the question.
- You have a limited number of votes per day.
- You can only have three open bounties at any one time.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '200: Success'
- '400: Error'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 200 for success
- 400 for an error
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - ClientCredentials
client:
  base_url: https://api.stackexchange.com
  auth:
    type: oauth2
    flow: authorization_code
    token_url: https://stackoverflow.com/oauth/access_token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
