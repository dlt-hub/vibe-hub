resources:
- name: student_progress
  endpoint:
    path: /dashboard/mp-courses/courses
    method: GET
    data_selector: students
    params: {}
- name: quiz_attempts
  endpoint:
    path: /dashboard/memberpress/courses
    method: GET
    data_selector: quiz_attempts
    params: {}
- name: assignment_submissions
  endpoint:
    path: /dashboard/memberpress/courses
    method: GET
    data_selector: assignment_submissions
    params: {}
- name: Single Course
  endpoint:
    path: /MemberPress/Rules/AddNew
    method: POST
- name: All Courses
  endpoint:
    path: /MemberPress/Rules/AddNew
    method: POST
- name: Categories and Tags
  endpoint:
    path: /MP Courses/Courses
    method: GET
- name: Course Section
  endpoint:
    path: /MemberPress/Rules/AddNew
    method: POST
- name: login_page
  endpoint:
    path: /memberpress/login
    method: GET
    data_selector: login_form
    params: {}
- name: members
  endpoint:
    path: /members
    method: POST
    data_selector: response
    params: {}
- name: courses
  endpoint:
    path: /courses
    method: GET
    data_selector: courses
    params: {}
- name: lessons
  endpoint:
    path: /lessons
    method: GET
    data_selector: lessons
    params: {}
- name: quizzes
  endpoint:
    path: /quizzes
    method: GET
    data_selector: quizzes
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: Pro Coaching Membership Site
  endpoint:
    path: /membership/pro-coaching
    method: GET
    data_selector: details
- name: Pro Courses Membership Site
  endpoint:
    path: /membership/pro-courses
    method: GET
    data_selector: details
- name: Courses Membership Site
  endpoint:
    path: /membership/courses
    method: GET
    data_selector: details
- name: Basic Membership Site
  endpoint:
    path: /membership/basic
    method: GET
    data_selector: details
- name: account_nav_tabs
  endpoint:
    path: /account-nav-tabs
    method: POST
    data_selector: tabs
    params: {}
- name: member_account_info_updated
  endpoint:
    path: /member/account/updated
    method: GET
    data_selector: data
    params: {}
- name: member_deleted
  endpoint:
    path: /member/deleted
    method: GET
    data_selector: data
    params: {}
- name: member_logged_in
  endpoint:
    path: /member/logged_in
    method: GET
    data_selector: data
    params: {}
- name: subscription_downgraded
  endpoint:
    path: /subscription-downgraded
    method: POST
    data_selector: data
- name: subscription_expired
  endpoint:
    path: /subscription-expired
    method: POST
    data_selector: data
- name: transaction_completed
  endpoint:
    path: /transaction-completed
    method: POST
    data_selector: data
- name: transaction_refunded
  endpoint:
    path: /transaction-refunded
    method: POST
    data_selector: data
- name: before_subscription_renews_reminder
  endpoint:
    path: /before_subscription_renews
    method: POST
    data_selector: data
    params: {}
- name: after_credit_card_expires_reminder
  endpoint:
    path: /after_credit_card_expires
    method: POST
    data_selector: data
    params: {}
- name: before_credit_card_expires_reminder
  endpoint:
    path: /before_credit_card_expires
    method: POST
    data_selector: data
    params: {}
- name: course_started
  endpoint:
    path: /course_started
    method: POST
    data_selector: data
    params: {}
- name: course_completed
  endpoint:
    path: /course_completed
    method: POST
    data_selector: data
    params: {}
- name: lesson_started
  endpoint:
    path: /lesson_started
    method: POST
    data_selector: data
    params: {}
- name: lesson_completed
  endpoint:
    path: /lesson_completed
    method: POST
    data_selector: data
    params: {}
- name: quiz_attempted
  endpoint:
    path: /quiz_attempted
    method: POST
    data_selector: data
    params: {}
- name: subscription_created
  endpoint:
    path: /subscription-created
    method: GET
    data_selector: data
    params: {}
- name: subscription_paused
  endpoint:
    path: /subscription-paused
    method: GET
    data_selector: data
    params: {}
- name: subscription_resumed
  endpoint:
    path: /subscription-resumed
    method: GET
    data_selector: data
    params: {}
- name: subscription_stopped
  endpoint:
    path: /subscription-stopped
    method: GET
    data_selector: data
    params: {}
- name: subscription_upgraded
  endpoint:
    path: /subscription-upgraded
    method: GET
    data_selector: data
    params: {}
- name: recurring_transaction_failed
  endpoint:
    path: /events/recurring-transaction-failed
    method: GET
    data_selector: data
    params: {}
- name: recurring_transaction_expired
  endpoint:
    path: /events/recurring-transaction-expired
    method: GET
    data_selector: data
    params: {}
- name: non_recurring_transaction_completed
  endpoint:
    path: /events/non-recurring-transaction-completed
    method: GET
    data_selector: data
    params: {}
- name: non_recurring_transaction_expired
  endpoint:
    path: /events/non-recurring-transaction-expired
    method: GET
    data_selector: data
    params: {}
- name: subscription_downgraded
  endpoint:
    path: /subscription/downgraded
    method: GET
    data_selector: data
    params: {}
- name: subscription_upgraded_to_non_recurring
  endpoint:
    path: /subscription/upgraded/to/non-recurring
    method: GET
    data_selector: data
    params: {}
- name: subscription_upgraded_to_recurring
  endpoint:
    path: /subscription/upgraded/to/recurring
    method: GET
    data_selector: data
    params: {}
- name: subscription_downgraded_to_non_recurring
  endpoint:
    path: /subscription/downgraded/to/non-recurring
    method: GET
    data_selector: data
    params: {}
- name: after_member_signup_reminder
  endpoint:
    path: /after-member-signup-reminder
    method: POST
    data_selector: data
    params: {}
- name: after_signup_abandoned_reminder
  endpoint:
    path: /after-signup-abandoned-reminder
    method: POST
    data_selector: data
    params: {}
- name: before_subscription_expires_reminder
  endpoint:
    path: /before-sub-expires-reminder
    method: POST
    data_selector: data
    params: {}
- name: after_subscription_expires_reminder
  endpoint:
    path: /after-sub-expires-reminder
    method: POST
    data_selector: data
    params: {}
- name: member-added
  endpoint:
    path: /path/to/member-added
    method: GET
    data_selector: data
- name: member-signup-completed
  endpoint:
    path: /path/to/member-signup-completed
    method: GET
    data_selector: data
- name: transaction_failed
  endpoint:
    path: /transaction/failed
    method: GET
    data_selector: data
    params: {}
- name: transaction_expired
  endpoint:
    path: /transaction/expired
    method: GET
    data_selector: data
    params: {}
- name: recurring_transaction_completed
  endpoint:
    path: /recurring/transaction/completed
    method: GET
    data_selector: data
    params: {}
- name: renewal_transaction_completed
  endpoint:
    path: /renewal/transaction/completed
    method: GET
    data_selector: data
    params: {}
- name: Member Profiles
  endpoint:
    path: /settings/profiles
    method: POST
    data_selector: profiles
    params: {}
- name: Profile Fields
  endpoint:
    path: /settings/profile-fields
    method: GET
    data_selector: profileFields
    params: {}
- name: widget_areas
  endpoint:
    path: /memberpress-courses/widget-areas
    method: GET
    data_selector: widget_areas
- name: checkout_form_hooks
  endpoint:
    path: /checkout/form/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: subscriptions_and_transactions_hooks
  endpoint:
    path: /subscriptions/transactions/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: account_page_hooks
  endpoint:
    path: /account/page/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: login_page_hooks
  endpoint:
    path: /login/page/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: options_page_hooks
  endpoint:
    path: /options/page/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: memberships_page_hooks
  endpoint:
    path: /memberships/page/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: coupons_page_hooks
  endpoint:
    path: /coupons/page/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: miscellaneous_hooks
  endpoint:
    path: /misc/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: courses_hooks
  endpoint:
    path: /courses/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: corporate_accounts_hooks
  endpoint:
    path: /corporate/accounts/hooks
    method: GET
    data_selector: hooks
    params: {}
- name: tax_rates
  endpoint:
    path: /api/tax_rates
    method: GET
- name: mpcs_get_score_for_answer
  endpoint:
    path: /mpcs/get_score_for_answer
    method: POST
    data_selector: score
    params: {}
- name: mpcs_is_answer_correct
  endpoint:
    path: /mpcs/is_answer_correct
    method: POST
    data_selector: is_correct
    params: {}
- name: mpcs_display_feedback_incorrect_prefix
  endpoint:
    path: /mpcs/display_feedback_incorrect_prefix
    method: POST
    data_selector: display_feedback
    params: {}
- name: mpcs_question_feedback_html
  endpoint:
    path: /mpcs/question_feedback_html
    method: POST
    data_selector: feedback
    params: {}
- name: mpcs_certificate_pdf_file_height
  endpoint:
    path: /mpcs/certificate_pdf_file_height
    method: POST
    data_selector: height
    params: {}
- name: mpcs_question_label
  endpoint:
    path: /mpcs/question_label
    method: POST
    data_selector: label
    params: {}
- name: mpcs_question_required_indicator
  endpoint:
    path: /mpcs/question_required_indicator
    method: POST
    data_selector: display_required_indicator
    params: {}
- name: mpcs_question_options
  endpoint:
    path: /mpcs/question_options
    method: POST
    data_selector: options
    params: {}
- name: mpcs_certificate_pdf_course_title
  endpoint:
    path: /mpcs/certificate_pdf_course_title
    method: POST
    data_selector: course_title
    params: {}
- name: mpcs_certificate_pdf_completion_date
  endpoint:
    path: /mpcs/certificate_pdf_completion_date
    method: POST
    data_selector: date_format
    params: {}
- name: mpcs_certificate_pdf_expiration_date
  endpoint:
    path: /mpcs/certificate_pdf_expiration_date
    method: POST
    data_selector: date_format
    params: {}
- name: custom_upgrade_link
  endpoint:
    path: /mepr/custom/upgrade/link
    method: POST
    data_selector: html
    params: {}
- name: product_renewal_string
  endpoint:
    path: /mepr/product/renewal/string
    method: POST
    data_selector: renewal_str
    params: {}
- name: payments_per_page
  endpoint:
    path: /mepr/payments/per/page
    method: POST
    data_selector: payments
    params: {}
- name: account_page
  endpoint:
    path: /mepr/account/page
    method: POST
    data_selector: is_account
    params: {}
- name: account_action
  endpoint:
    path: /mepr/account/action
    method: POST
    data_selector: action
    params: {}
- name: login_redirect_url
  endpoint:
    path: /mepr/login/redirect/url
    method: POST
    data_selector: url
    params: {}
- name: process_login_redirect_url
  endpoint:
    path: /mepr/process/login/redirect/url
    method: POST
    data_selector: url
    params: {}
- name: login_uname_or_email_str
  endpoint:
    path: /mepr/login/username/email/str
    method: POST
    data_selector: username_or_email
    params: {}
- name: login_uname_str
  endpoint:
    path: /mepr/login/username/str
    method: POST
    data_selector: username
    params: {}
- name: unauthorized_login_link_text
  endpoint:
    path: /mepr/unauthorized/login/link/text
    method: POST
    data_selector: login_link_text
    params: {}
- name: auto_login
  endpoint:
    path: /mepr/auto/login
    method: POST
    data_selector: auto_login
    params: {}
- name: wp_mail_recipients
  endpoint:
    path: /mepr/wp/mail/recipients
    method: POST
    data_selector: recipients
    params: {}
- name: wp_mail_subject
  endpoint:
    path: /mepr/wp/mail/subject
    method: POST
    data_selector: subject
    params: {}
- name: wp_mail_message
  endpoint:
    path: /mepr/wp/mail/message
    method: POST
    data_selector: message
    params: {}
- name: wp_mail_headers
  endpoint:
    path: /mepr/wp/mail/headers
    method: POST
    data_selector: headers
    params: {}
- name: reminder_email_params
  endpoint:
    path: /mepr/reminder/email/params
    method: POST
    data_selector: params
    params: {}
- name: reminder_email_vars
  endpoint:
    path: /mepr/reminder/email/vars
    method: POST
    data_selector: vars
    params: {}
- name: subscription_email_params
  endpoint:
    path: /mepr/subscription/email/params
    method: POST
    data_selector: params
    params: {}
- name: subscription_email_vars
  endpoint:
    path: /mepr/subscription/email/vars
    method: POST
    data_selector: vars
    params: {}
- name: pdf_invoice_data
  endpoint:
    path: /mepr/pdf/invoice/data
    method: POST
    data_selector: invoice
    params: {}
- name: pdf_invoice_filename
  endpoint:
    path: /mepr/pdf/invoice/filename
    method: POST
    data_selector: file_name
    params: {}
- name: hide_cpt_access_column
  endpoint:
    path: /mepr/hide/cpt/access/column
    method: POST
    data_selector: except
    params: {}
- name: fetch_options
  endpoint:
    path: /mepr/fetch/options
    method: POST
    data_selector: options
    params: {}
- name: checkout_show_terms
  endpoint:
    path: /mepr/checkout/show/terms
    method: POST
    data_selector: show_price
    params: {}
- name: custom_cancel_link
  endpoint:
    path: /mepr/custom/cancel/link
    method: POST
    data_selector: html
    params: {}
- name: currency_symbols
  endpoint:
    path: /mepr/currency/symbols
    method: POST
    data_selector: codes
    params: {}
- name: currency_codes
  endpoint:
    path: /mepr/currency/codes
    method: POST
    data_selector: codes
    params: {}
- name: language_codes
  endpoint:
    path: /mepr/language/codes
    method: POST
    data_selector: codes
    params: {}
- name: countries
  endpoint:
    path: /mepr/countries
    method: POST
    data_selector: countries
    params: {}
- name: jobs_config
  endpoint:
    path: /mepr/jobs/config
    method: POST
    data_selector: config
    params: {}
- name: admin_capability
  endpoint:
    path: /mepr/admin/capability
    method: POST
    data_selector: cap
    params: {}
- name: price_box_benefit
  endpoint:
    path: /mepr/price/box/benefit
    method: POST
    data_selector: element
    params: {}
- name: group_css_classes_string
  endpoint:
    path: /mepr/group/css/classes/string
    method: POST
    data_selector: classes
    params: {}
- name: group_page_item_output
  endpoint:
    path: /mepr/group/page/item/output
    method: POST
    data_selector: output
    params: {}
- name: custom_thankyou_message
  endpoint:
    path: /mepr/custom/thankyou/message
    method: POST
    data_selector: message
    params: {}
- name: user_pw_reset_title
  endpoint:
    path: /mepr/user/pw/reset/title
    method: POST
    data_selector: title
    params: {}
- name: admin_pw_reset_title
  endpoint:
    path: /mepr/admin/pw/reset/title
    method: POST
    data_selector: title
    params: {}
- name: userroles_add_roles
  endpoint:
    path: /mepr/userroles/add/roles
    method: POST
    data_selector: roles_user_should_have
    params: {}
- name: userroles_remove_roles
  endpoint:
    path: /mepr/userroles/remove/roles
    method: POST
    data_selector: roles_to_remove
    params: {}
- name: reminder_lookup
  endpoint:
    path: /mepr/reminder/lookup
    method: POST
    data_selector: lookup
    params: {}
- name: courses_per_page
  endpoint:
    path: /mpcs/courses/per/page
    method: POST
    data_selector: courses
    params: {}
- name: classroom_style_handles
  endpoint:
    path: /mpcs/classroom/style/handles
    method: POST
    data_selector: allowed_handles
    params: {}
- name: account_nav_courses_link
  endpoint:
    path: /mepr/account/nav/courses/link
    method: POST
    data_selector: link
    params: {}
- name: account_nav_courses_label
  endpoint:
    path: /mepr/account/nav/courses/label
    method: POST
    data_selector: label
    params: {}
- name: account_nav_courses_active_name
  endpoint:
    path: /mepr/account/nav/courses/active/name
    method: POST
    data_selector: class
    params: {}
- name: redirect_lesson_to_sales
  endpoint:
    path: /mpcs/redirect/lesson/to/sales
    method: POST
    data_selector: redirect
    params: {}
- name: redirect_quiz_to_sales
  endpoint:
    path: /mpcs/redirect/quiz/to/sales
    method: POST
    data_selector: redirect
    params: {}
- name: certificate_paper_size
  endpoint:
    path: /mpcs/certificate/paper/size
    method: POST
    data_selector: cert_paper_size
    params: {}
- name: classroom_header
  endpoint:
    path: /mpcs/classroom/header
    method: POST
    data_selector: content
    params: {}
- name: classroom_sidebar
  endpoint:
    path: /mpcs/classroom/sidebar
    method: POST
    data_selector: content
    params: {}
- name: classroom_instructor
  endpoint:
    path: /mpcs/classroom/instructor
    method: POST
    data_selector: course_instructor
    params: {}
- name: admin_questions_per_page
  endpoint:
    path: /mpcs/admin/questions/per/page
    method: POST
    data_selector: questions_per_page
    params: {}
- name: admin_capability
  endpoint:
    path: /mpcs/admin/capability
    method: POST
    data_selector: capability
    params: {}
- name: attempt_score
  endpoint:
    path: /mpcs/attempt/score
    method: POST
    data_selector: score
    params: {}
- name: attempt_score_percent
  endpoint:
    path: /mpcs/attempt/score/percent
    method: POST
    data_selector: score
    params: {}
- name: Enable Stripe Tax
  endpoint:
    path: /settings/taxes
    method: POST
    data_selector: response
    params: {}
- name: Membership Tax Settings
  endpoint:
    path: /memberships/edit
    method: POST
    data_selector: response
    params: {}
- name: drip_courses
  endpoint:
    path: /drip/courses
    method: GET
- name: drip_content
  endpoint:
    path: /drip/content
    method: GET
- name: files
  endpoint:
    path: /mp-downloads/files
    method: GET
    data_selector: files
    params: {}
- name: categories
  endpoint:
    path: /mp-downloads/categories
    method: GET
    data_selector: categories
    params: {}
- name: tags
  endpoint:
    path: /mp-downloads/tags
    method: GET
    data_selector: tags
    params: {}
- name: Global Email List
  endpoint:
    path: /global-email-list
    method: POST
    data_selector: email_addresses
    params: {}
- name: Per-Membership Lists
  endpoint:
    path: /per-membership-lists
    method: POST
    data_selector: membership_segments
    params: {}
- name: API Key
  endpoint:
    path: /MemberPress/Developer/REST API
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in MemberPress
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- MemberPress does not warranty, assure and/or guarantee that its software is or shall
  ever be compliant with the web content accessibility guidelines.
- Global restrictions will apply to all memberships.
- Membership restrictions will override global restrictions.
- The options above are only optional at this point, but if you want to force your
  members to use 2-factor authentication, some code is needed.
- Rules protect courses based on membership subscriptions.
- Editing the login page can be tricky because if you visit the page while logged
  in, you will be automatically redirected.
- Connect Square Sandbox to MemberPress and run tests, or directly connect Square
  Production to receive live payments.
- Define allowed keys in the script to use user meta.
- Recommended to use WPCode plugin or functions.php for script.
- Currently the row option is the only content you are able to protect with the MemberPress
  WPBakery integration but you have more options of what you want to protect within
  the row.
- MemberPress Developer Tools add-on must be activated to use integrations.
- REST API key is required to connect Zapier to MemberPress.
- The Migrator will convert only your course content.
- Certificates will not be transferred.
- You need to be based in the UK, Europe, the US, or Australia and have a bank account
  locally to qualify for a merchant account.
- 'The currency in your MemberPress settings needs to be set to one of the following
  supported currencies: CHF, DKK, EUR, GBP, NOK, PLN, SEK, AUD, NZD, USD, CAD.'
- By default, on any protected post or page, unauthorized users will see the unauthorized
  message instead of the post content.
- If the MemberPress redirection doesn’t work with your WordPress theme, you can try
  changing it to the 'init' option.
- Estimated turnaround time for Pro Coaching Membership Site is 30 Days
- Estimated turnaround time for Pro Courses Membership Site is 30 Days
- Estimated turnaround time for Courses Membership Site is 30 Days
- Estimated turnaround time for Basic Membership Site is 21 Days
- MemberPress 1.6.0+ now fully supports SCA via Stripe's new SCA-enabled APIs.
- If you are seeing subscriptions connecting to MemberPress with an ID that looks
  like mp-sub-xxxxxxxxxx and transactions that have IDs that look like mp-txn-xxxxxxxxxx,
  then the issue is related to your Webhook URL.
- If payments are still not getting through, this could be an IP blocking issue.
- If you received an email from Stripe with the subject 'Problem with your Stripe
  webhook', this could be triggered by TLS/SSL certificate issues or a 403 error caused
  by an anti-spam or security plugin.
- Users may see the error 'Invalid Payment Method' if the Customize Payment Methods
  option is left unchecked.
- If the checkout page loads but data cannot be entered into the form, this may occur
  if you are not complying with Stripe's security requirements.
- After adding MemberPress' webhook, your Woocommerce webhook may start having delivery
  issues.
- If using Stripe Checkout does not redirect to Stripe, make sure the string 'Stripe'
  wasn't translated.
- If Stipe Payment Fields do not appear on the checkout page, users must enter their
  email address and other required fields before the fields display.
- If there are a lot of incomplete payments in your Stripe Dashboard, this is caused
  by logged-in users visiting or refreshing the checkout page.
- Check if you have basic authentication configured in the .htaccess file to prevent
  search engines from reading your sites.
- MemberPress requires setup of the ActiveCampaign add-on.
- Users are automatically added to different lists based on their membership status.
- This is a third-party integration you'll need to purchase in advance.
- Enabling and disabling code snippets is easy. All you need to do is to check/uncheck
  the boxes under the Status column in the Code Snippets table.
- Switching to Stripe Checkout won't prevent card testing by itself.
- Card Testing is based on the automated bots that will repeatedly submit the membership
  registration form.
- If your website is hacked, it's possible for hackers to get a hold of your Stripe
  API client secret.
- When installed and active, search results don't show any protected posts.
- Videos inserted into MP Courses and lessons with the S3 Media Vault shortcode display
  a blank screen playing them.
- This plugin causes MemberPress' Login page to redirect to the homepage.
- Embedded videos do not appear in Courses.
- Embedded videos show in preview page mode but not on the actual.
- Stripe recurring subscriptions may fail because transaction data never reaches MemberPress.
- Alters the logout URL breaking the MemberPress logout functionality.
- When using ReadyLaunch(tm) on the Account page, the 'Subscription' option in the
  navigation will have a blank label.
- The Custom Phone Number Field is not working on the Account or Registration field.
- When used with Elementor and the MemberPress Elementor Content Protection add-on,
  WP Fusion causes MemberPress rule settings in Elementor to be ignored.
- When enabled, Cron Jobs, especially the MemberPress Cron Jobs, do not run properly.
- Images and videos do not appear in MemberPress Courses.
- Redirects the IPN URL to have a trailing slash so PayPal payments will not update
  correctly.
- When used together with LearnDash, it prevents saving any changes in the LearnDash
  tab of a MemberPress membership.
- JavaScript conflict prevents selecting auto-complete items in the MemberPress Rules.
- When trying to delete a member at Dashboard > MemberPress > Members section, you'll
  get the message 'The link you've followed has expired'.
- When activated, editing a MemberPress Rule will wipe out the content that should
  be protected.
- Breaks the MemberPress signup process when a coupon is applied.
- When the LearnPress plugin is active, the MemberPress Courses add-on doesn't work
  correctly.
- MemberPress Courses lessons don't show on the front.
- Breaks the MemberPress signup process when using on-site payments like Stripe or
  Authorize.net.
- Buttons to add a new Membership or a new Group do not appear.
- The plugin causes the Options page tabs not to work correctly.
- When the plugin is active, the WordPress Dashboard fails to load properly.
- When active, Stripe webhook communication frequently fails with a '500 Internal
  Server Error' message.
- Prevents users from logging in on the MemberPress login page.
- When enabled, it interferes with the Stripe checkout if a coupon is used.
- Incorrectly will throw the 'Permissions' error message during registration.
- Incorrectly uses WordPress's plugin update transients.
- When this plugin is activated, you cannot upload files with our MP Downloads add-on.
- Coupon restrictions will override both membership and global restrictions.
- Ensure correct API keys are used for authentication
- Sent when a user downgrades their Subscription and the new Subscription is non-recurring
  (one-time payment).
- Sent when a user upgrades their Subscription and the new Subscription is non-recurring
  (one-time payment).
- Sent when a user upgrades their Subscription and the new Subscription is auto-recurring
  (payments happen automatically each payment cycle).
- Sent when any After Member Signup reminder fires.
- Sent when any After Member Signup Abandoned reminder fires.
- Sent when any Before Subscription Expires reminder fires.
- Sent when any After Subscription Expires reminder fires.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- UNCHECK the Account Deletion option to prevent members from deleting their accounts.
- MemberPress Courses add-on must be active with ReadyLaunch Courses/Lessons template
  enabled.
- Stripe will charge you a $0.50 per transaction fee, for up to 10 API calls per transaction.
- Each additional API call costs $0.05.
- The Application Passwords plugin is no longer required if you use the MEMBERPRESS-API-KEY
  header in your Zapier Webhook Zaps.
- In order for Application Passwords to be secure your WordPress website must be accessible
  via SSL (TLS / HTTPS).
- MemberPress never removes a user from the Global list.
- Signup Confirmation is required when using MailPoet’s Sending Service.
- MemberPress integration with TaxJar requires the use of the TaxJar API.
- TaxJar is currently available only in the United States, and it can be used for
  handling tax rates in the United States, Canada, Australia, and the European Union.
- Requires setup of connected app in OpenAI
- Ensure to connect your OpenAI account to Uncanny Automator
- Ensure your website uses https to secure the connection between MemberPress and
  Zapier.
- Use Sandbox mode only if you have a sandbox.authorize.net account.
- Use Force SSL if your site can be viewed in both http and https.
errors:
- 'Email Required: Edit your Payment Form settings in your Authorize.net account,
  and make sure ''Email'' is not a required field.'
- 'The merchant login ID or password is invalid or the account is inactive: Check
  whether your Authorize.net account is in the Test (Sandbox) Mode.'
- 'Transaction Not Being Received After Recurring Subscription Signup: Verify that
  your gateway is set up properly.'
- 'Subscriptions And/or Transactions Aren’t Updating Correctly: Ensure that all Authorize.net
  recommendations for domains and IP addresses are followed.'
- '401 Unauthorized: Check API key or permissions'
- '404 Not Found: Verify endpoint path'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Email Required: Edit your Payment Form settings in your Authorize.net account.'
- 'Subscriptions And/or Transactions Aren’t Updating Correctly: Make sure to follow
  all Authorize.net recommendations for domains and IP addresses.'
- '$1 Transaction Being VOIDed Immediately: MemberPress does a $1 AUTH_ONLY transaction
  through AIM to verify the credit card.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://your-domain.com
  auth:
    type: apikey
    flow: refresh_token
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Authorization: API_KEY
  paginator:
    type: cursor
    cursor_path: nextRecordsUrl
    cursor_param: nextUrl
    page_size_param: pageSize
    default_page_size: 200
source_metadata: null
