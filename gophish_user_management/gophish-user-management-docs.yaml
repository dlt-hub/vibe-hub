resources:
- name: get_users
  endpoint:
    path: /api/users/
    method: GET
    data_selector: records
- name: get_user
  endpoint:
    path: /api/users/:id
    method: GET
    data_selector: records
- name: create_user
  endpoint:
    path: /api/users/
    method: POST
- name: modify_user
  endpoint:
    path: /api/users/:id
    method: PUT
- name: delete_user
  endpoint:
    path: /api/users/:id
    method: DELETE
- name: campaigns
  endpoint:
    path: /api/campaigns/
    method: GET
    params:
      api_key: '12345678901234567890123456789012'
- name: reset_api_key
  endpoint:
    path: /api/reset
    method: POST
    data_selector: data
    params: {}
- name: Get Sending Profiles
  endpoint:
    path: /api/smtp/
    method: GET
    data_selector: ''
    params: {}
- name: Get Sending Profile
  endpoint:
    path: /api/smtp/:id
    method: GET
    data_selector: ''
    params: {}
- name: Create Sending Profile
  endpoint:
    path: /api/smtp
    method: POST
    data_selector: ''
    params: {}
- name: Modify Sending Profile
  endpoint:
    path: /api/smtp/:id
    method: PUT
    data_selector: ''
    params: {}
- name: Delete Sending Profile
  endpoint:
    path: /api/smtp/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: get_templates
  endpoint:
    path: /templates
    method: GET
    data_selector: records
- name: get_template
  endpoint:
    path: /templates/:id
    method: GET
    data_selector: records
- name: create_template
  endpoint:
    path: /templates/
    method: POST
    data_selector: records
- name: modify_template
  endpoint:
    path: /templates/:id
    method: PUT
    data_selector: records
- name: delete_template
  endpoint:
    path: /templates/:id
    method: DELETE
    data_selector: records
- name: import_template
  endpoint:
    path: /import/email
    method: POST
    data_selector: records
- name: landing_pages
  endpoint:
    path: /api/pages/
    method: GET
    data_selector: records
- name: landing_page_by_id
  endpoint:
    path: /api/pages/:id
    method: GET
    data_selector: record
- name: create_landing_page
  endpoint:
    path: /api/pages/
    method: POST
    data_selector: record
- name: modify_landing_page
  endpoint:
    path: /api/pages/:id
    method: PUT
    data_selector: record
- name: delete_landing_page
  endpoint:
    path: /api/pages/:id
    method: DELETE
    data_selector: message
- name: import_site
  endpoint:
    path: /api/import/site
    method: POST
    data_selector: html
- name: landing_page
  endpoint:
    path: /api/pages/
    method: GET
    data_selector: ''
    params: {}
- name: landing_page_by_id
  endpoint:
    path: /api/pages/:id
    method: GET
    data_selector: ''
    params: {}
- name: create_landing_page
  endpoint:
    path: /api/pages/
    method: POST
    data_selector: ''
    params: {}
- name: modify_landing_page
  endpoint:
    path: /api/pages/:id
    method: PUT
    data_selector: ''
    params: {}
- name: delete_landing_page
  endpoint:
    path: /api/pages/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: import_site
  endpoint:
    path: /api/import/site
    method: POST
    data_selector: ''
    params: {}
- name: get_groups
  endpoint:
    path: /api/groups/
    method: GET
- name: get_group
  endpoint:
    path: /api/groups/:id
    method: GET
- name: get_groups_summary
  endpoint:
    path: /api/groups/summary
    method: GET
- name: get_group_summary
  endpoint:
    path: /api/groups/:id/summary
    method: GET
- name: create_group
  endpoint:
    path: /api/groups/
    method: POST
- name: modify_group
  endpoint:
    path: /api/groups/:id
    method: PUT
- name: delete_group
  endpoint:
    path: /api/groups/:id
    method: DELETE
- name: import_group
  endpoint:
    path: /api/import/group
    method: POST
- name: groups
  endpoint:
    path: /groups/
    method: GET
    data_selector: ''
    params: {}
- name: group
  endpoint:
    path: /groups/:id
    method: GET
    data_selector: ''
    params: {}
- name: groups_summary
  endpoint:
    path: /groups/summary
    method: GET
    data_selector: ''
    params: {}
- name: group_summary
  endpoint:
    path: /groups/:id/summary
    method: GET
    data_selector: ''
    params: {}
- name: create_group
  endpoint:
    path: /groups/
    method: POST
    data_selector: ''
    params: {}
- name: modify_group
  endpoint:
    path: /groups/:id
    method: PUT
    data_selector: ''
    params: {}
- name: delete_group
  endpoint:
    path: /groups/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: import_group
  endpoint:
    path: /import/group
    method: POST
    data_selector: ''
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns/
    method: GET
    data_selector: ''
    params: {}
- name: campaign
  endpoint:
    path: /campaigns/:id
    method: GET
    data_selector: ''
    params:
      id: integer
- name: campaigns
  endpoint:
    path: /campaigns/
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns/:id
    method: GET
    data_selector: record
- name: create_campaign
  endpoint:
    path: /api/campaigns/
    method: POST
- name: get_campaign_results
  endpoint:
    path: /api/campaigns/:id/results
    method: GET
- name: get_campaign_summary
  endpoint:
    path: /api/campaigns/:id/summary
    method: GET
- name: delete_campaign
  endpoint:
    path: /api/campaigns/:id
    method: DELETE
- name: complete_campaign
  endpoint:
    path: /api/campaigns/:id/complete
    method: GET
- name: create_campaign
  endpoint:
    path: /api/campaigns/
    method: POST
- name: get_campaign_results
  endpoint:
    path: /api/campaigns/:id/results
    method: GET
- name: get_campaign_summary
  endpoint:
    path: /api/campaigns/:id/summary
    method: GET
- name: delete_campaign
  endpoint:
    path: /api/campaigns/:id
    method: DELETE
- name: complete_campaign
  endpoint:
    path: /api/campaigns/:id/complete
    method: GET
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: groups
  endpoint:
    path: /api/groups
    method: GET
    data_selector: ''
- name: groups
  endpoint:
    path: /api/groups
    method: GET
    data_selector: ''
- name: templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: templates
- name: pages
  endpoint:
    path: /api/pages
    method: GET
    data_selector: pages
- name: landing_pages
  endpoint:
    path: /api/pages
    method: GET
    data_selector: pages
- name: sending_profiles
  endpoint:
    path: /api/smtp
    method: GET
    data_selector: list(models.SMTP)
- name: sending_profile
  endpoint:
    path: /api/smtp
    method: GET
    data_selector: list(models.SMTP)
notes:
- This method requires you to authenticate using your existing API key.
- Sending profiles support authentication and ignoring invalid SSL certificates.
- The content field in an attachment is expected to be base64 encoded.
- The API requires a valid API key for authentication.
- Returns a 404 error if no group is found with the provided ID.
- To access the API directly, refer to the API Documentation.
- To access the API directly, please refer to our API Documentation
- Use the API key found in the Settings page.
- Requires setup of API key for authentication
- Uses API key for authentication.
- Uses API key for authentication
- Requires API key for authentication
errors:
- 400 BAD REQUEST
- 404 NOT FOUND
- 500 INTERNAL SERVER ERROR
- 200 API key successfully reset.
- '400: Bad Request if required fields aren''t provided, or if a sending profile already
  exists with the provided name.'
- '404: Not Found if no sending profile exists with the provided ID.'
- '404: Not Found'
- '400: At least one text or HTML field must be specified'
- '404: Page not found'
- '200: Page Deleted Successfully'
- '404: Group not found'
- '400: Invalid request'
- '404: Campaign not found'
- 404 Campaign not found
- '401 Unauthorized: Recheck API key or permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://localhost:3333
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
