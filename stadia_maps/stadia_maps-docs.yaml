resources:
- name: forward_geocoding
  endpoint:
    path: /search/
    method: GET
    data_selector: results
- name: autocomplete_search
  endpoint:
    path: /autocomplete/
    method: GET
    data_selector: results
- name: structured_geocoding
  endpoint:
    path: /structured-search/
    method: GET
    data_selector: results
- name: bulk_geocoding
  endpoint:
    path: /bulk-geocoding-search/
    method: GET
    data_selector: results
- name: reverse_geocoding
  endpoint:
    path: /reverse-search/
    method: GET
    data_selector: results
- name: place_details
  endpoint:
    path: /place-details/
    method: GET
    data_selector: details
- name: turn_by_turn_directions
  endpoint:
    path: /routing/turn-by-turn
    method: GET
- name: optimized_routing
  endpoint:
    path: /routing/optimized
    method: GET
- name: map_matching
  endpoint:
    path: /routing/map-matching
    method: GET
- name: time_distance_matrix
  endpoint:
    path: /routing/time-distance-matrix
    method: GET
- name: nearest_roads
  endpoint:
    path: /routing/nearest-roads
    method: GET
- name: trace_attributes
  endpoint:
    path: /routing/trace-attributes
    method: GET
- name: isochrones
  endpoint:
    path: /routing/isochrones
    method: GET
- name: elevation
  endpoint:
    path: /elevation/v1
    method: POST
    data_selector: null
    params: {}
- name: properties
  endpoint:
    path: /properties/
    method: POST
- name: domains
  endpoint:
    path: /domains/
    method: POST
- name: api_keys
  endpoint:
    path: /api_keys/
    method: POST
- name: plans
  endpoint:
    path: /plans/
    method: GET
- name: static_map
  endpoint:
    path: /static/maps
    method: GET
    data_selector: map
    params: {}
- name: static_map
  endpoint:
    path: /static_cacheable/alidade_smooth
    method: POST
    data_selector: data
    params:
      api_key: YOUR-API-KEY
- name: static_maps
  endpoint:
    path: /tz/lookup/v1
    method: GET
    data_selector: results
    params: {}
- name: tile_lookup
  endpoint:
    path: /tz/lookup/v1
    method: GET
    data_selector: tiles
    params: {}
- name: global_landcover
  endpoint:
    path: /global_landcover_v1/{z}/{x}/{y}.pbf
    method: GET
- name: global_elevation
  endpoint:
    path: /terrarium/{z}/{x}/{y}.png
    method: GET
- name: natural_earth_shaded_relief
  endpoint:
    path: /ne_shaded_relief/{z}/{x}/{y}{r}.png
    method: GET
- name: natural_earth_bathymetry
  endpoint:
    path: /ne_bathymetry/{z}/{x}/{y}.pbf
    method: GET
- name: Alidade Smooth
  endpoint:
    path: /styles/alidade_smooth.json
    method: GET
    data_selector: style
    params: {}
- name: Alidade Smooth Static
  endpoint:
    path: /static/alidade_smooth.png
    method: GET
    data_selector: static
    params: {}
- name: alidade_smooth_dark
  endpoint:
    path: /styles/alidade_smooth_dark.json
    method: GET
    data_selector: null
    params: {}
- name: static_maps
  endpoint:
    path: /static/alidade_smooth_dark.png
    method: GET
    data_selector: null
    params: {}
- name: alidade_satellite_vector_style
  endpoint:
    path: /styles/alidade_satellite.json
    method: GET
    data_selector: styles
- name: alidade_satellite_raster
  endpoint:
    path: /tiles/alidade_satellite/{z}/{x}/{y}.jpg
    method: GET
    data_selector: tiles
- name: static_maps_api
  endpoint:
    path: /static/alidade_satellite.jpg
    method: GET
    data_selector: static
- name: outdoors_vector_style
  endpoint:
    path: /styles/outdoors.json
    method: GET
- name: outdoors_static_maps
  endpoint:
    path: /static/outdoors.png
    method: GET
- name: outdoors_raster_tiles
  endpoint:
    path: /tiles/outdoors/{z}/{x}/{y}{r}.png
    method: GET
- name: stamen_toner_vector_style
  endpoint:
    path: /styles/stamen_toner.json
    method: GET
    data_selector: null
    params: {}
- name: stamen_toner_raster_tiles
  endpoint:
    path: /tiles/stamen_toner/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: null
    params: {}
- name: stamen_toner_static_map
  endpoint:
    path: /static/stamen_toner.png
    method: GET
    data_selector: null
    params: {}
- name: stamen_toner_tilejson
  endpoint:
    path: /styles/stamen_toner/rendered.json
    method: GET
    data_selector: null
    params: {}
- name: toner_lite_vector_style
  endpoint:
    path: /styles/stamen_toner_lite.json
    method: GET
    data_selector: vector_style
- name: toner_lite_raster_xyz_png
  endpoint:
    path: /tiles/stamen_toner_lite/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: raster_xyz_png
- name: toner_lite_static_maps
  endpoint:
    path: /static/stamen_toner_lite.png
    method: GET
    data_selector: static_maps
- name: toner_lite_raster_tilejson
  endpoint:
    path: /styles/stamen_toner_lite/rendered.json
    method: GET
    data_selector: raster_tilejson
- name: stamen_terrain
  endpoint:
    path: /tiles/stamen_terrain/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: tiles
- name: stamen_terrain_background
  endpoint:
    path: /tiles/stamen_terrain_background/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: tiles
- name: stamen_terrain_lines
  endpoint:
    path: /tiles/stamen_terrain_lines/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: tiles
- name: stamen_terrain_labels
  endpoint:
    path: /tiles/stamen_terrain_labels/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: tiles
- name: stamen_watercolor_tiles
  endpoint:
    path: /tiles/stamen_watercolor/{z}/{x}/{y}.jpg
    method: GET
    data_selector: tiles
- name: static_maps
  endpoint:
    path: /static/stamen_watercolor.jpg
    method: GET
    data_selector: static_map
- name: vector_style
  endpoint:
    path: /styles/osm_bright.json
    method: GET
    data_selector: ''
    params: {}
- name: raster_xyz_png
  endpoint:
    path: /tiles/osm_bright/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: ''
    params: {}
- name: static_maps_api
  endpoint:
    path: /static/osm_bright.png
    method: GET
    data_selector: ''
    params: {}
- name: raster_tilejson
  endpoint:
    path: /styles/osm_bright/rendered.json
    method: GET
    data_selector: ''
    params: {}
- name: autocomplete
  endpoint:
    path: /geocoding/v1/autocomplete
    method: GET
    data_selector: results
    params:
      text: ''
- name: autocomplete_v2
  endpoint:
    path: /geocoding/v2/autocomplete
    method: GET
    data_selector: results
    params:
      text: ''
- name: autocomplete
  endpoint:
    path: /geocoding/v2/autocomplete
    method: GET
    data_selector: result
    params:
      text: Põhja pst 27
      lang: en
- name: autocomplete
  endpoint:
    path: /geocoding/v1/autocomplete
    method: GET
    data_selector: results
- name: autocomplete_v2
  endpoint:
    path: /geocoding/v2/autocomplete
    method: GET
    data_selector: results
- name: geocoding
  endpoint:
    path: /geocoding/v1/search
    method: GET
    params:
      text: Põhja pst 27
- name: forward_geocoding
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      text: required
- name: structured_geocoding
  endpoint:
    path: /geocoding/v1/search/structured
    method: GET
- name: geocoding
  endpoint:
    path: /geocoding/v1/search/structured
    method: GET
    data_selector: results
    params:
      address: none
      region: none
      country: none
      api_key: YOUR-API-KEY
- name: bulk_geocoding
  endpoint:
    path: /geocoding/v1/search/bulk
    method: POST
    data_selector: results
- name: geocoding
  endpoint:
    path: /geocoding/v1/search/bulk
    method: POST
    data_selector: response
    params: {}
- name: reverse_geocoding
  endpoint:
    path: /geocoding/v2/reverse
    method: GET
    data_selector: results
    params:
      point.lat: '59.444351'
      point.lon: '24.750645'
- name: reverse_geocoding_v1
  endpoint:
    path: /geocoding/v1/reverse
    method: GET
    data_selector: results
- name: reverse_geocoding_v2
  endpoint:
    path: /geocoding/v2/reverse
    method: GET
    data_selector: results
- name: place_details
  endpoint:
    path: /geocoding/v2/place_details
    method: GET
    data_selector: results
- name: place_details
  endpoint:
    path: /geocoding/v2/place_details
    method: GET
    data_selector: results
    params:
      ids: openstreetmap:address:way/109867749
      lang: en
- name: standard_routing
  endpoint:
    path: /route/v1
    method: GET
    data_selector: routes
    params: {}
- name: optimized_route
  endpoint:
    path: /optimized_route/v1
    method: POST
    data_selector: optimized_route_response
    params: {}
- name: optimized_route
  endpoint:
    path: /optimized_route/v1
    method: POST
    data_selector: result
    params: {}
- name: map_match
  endpoint:
    path: /map_match/v1
    method: POST
    data_selector: actual_instance
- name: map_match
  endpoint:
    path: /map_match/v1
    method: POST
    data_selector: result
    params:
      costing: pedestrian
      units: miles
      linear_references: true
- name: nearest_roads
  endpoint:
    path: /nearest_roads/v1
    method: GET
    data_selector: results
    params: {}
- name: nearest_roads
  endpoint:
    path: /nearest_roads/v1
    method: POST
    data_selector: locations
    params: {}
- name: trace_attributes
  endpoint:
    path: /trace_attributes/v1
    method: POST
    data_selector: result
- name: trace_attributes
  endpoint:
    path: /trace_attributes/v1
    method: GET
    data_selector: attributes
- name: time_distance_matrix
  endpoint:
    path: /matrix/v1
    method: POST
    data_selector: results
    params: {}
- name: matrix
  endpoint:
    path: /matrix/v1
    method: POST
    data_selector: results
    params: {}
- name: isochrone
  endpoint:
    path: /isochrone/v1
    method: POST
    data_selector: features
- name: isochrone
  endpoint:
    path: /isochrone/v1
    method: GET
    data_selector: records
- name: tz_lookup
  endpoint:
    path: /tz/lookup/v1
    method: GET
    data_selector: response
    params:
      lat: '40.71278'
      lng: '-74.00611'
- name: tz_lookup
  endpoint:
    path: /lookup
    method: GET
    data_selector: response
    params:
      lat: latitude
      lng: longitude
- name: autocomplete_search
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: results
- name: autocomplete_search
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: results
- name: arcades
  endpoint:
    path: /arcades.json
    method: GET
    data_selector: features
    params: {}
- name: MapLibreTileLayer
  endpoint:
    path: /tiles.stadiamaps.com/styles/alidade_smooth_dark.json
    method: GET
    data_selector: null
    params: {}
- name: map
  endpoint:
    path: /styles/alidade_smooth_dark.json
    method: GET
    data_selector: mapStyle
    params: {}
- name: timezone_lookup
  endpoint:
    path: /tz/lookup/v1
    method: GET
    data_selector: records
    params: {}
- name: arcades
  endpoint:
    path: /tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: features
- name: tz_lookup
  endpoint:
    path: /tz/lookup/v1
    method: GET
    data_selector: records
    params:
      api_key: YOUR-API-KEY
- name: marker
  endpoint:
    path: /marker
    method: POST
    data_selector: features
    params: {}
- name: marker
  endpoint:
    path: /styles/alidade_smooth_dark.json
    method: GET
    data_selector: features
    params: {}
- name: timezone_lookup
  endpoint:
    path: /tz/lookup/v1
    method: GET
    data_selector: timezone
    params:
      lat: '59.43696'
      lng: '24.75357'
      api_key: YOUR-API-KEY
- name: earthquakes
  endpoint:
    path: /earthquakes.geojson
    method: GET
    data_selector: features
    params: {}
- name: global_landcover
  endpoint:
    path: /tiles/global_landcover_v1/{z}/{x}/{y}.pbf
    method: GET
    data_selector: tiles
    params: {}
- name: 3D Globe
  endpoint:
    path: /maplibre-gl.js
    method: GET
    data_selector: map
    params: {}
- name: tz_lookup
  endpoint:
    path: /tz/lookup/v1
    method: GET
    data_selector: records
    params:
      api_key: YOUR-API-KEY
- name: map_styles
  endpoint:
    path: /styles
    method: GET
    data_selector: styles
    params: {}
- name: tile_layer
  endpoint:
    path: /tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png
    method: GET
    data_selector: tiles
- name: Stamen Toner
  endpoint:
    path: /tiles/stamen_toner/{z}/{x}/{y}@2x.png
    method: GET
- name: route
  endpoint:
    path: /route
    method: POST
    data_selector: route_data
    params: {}
- name: route
  endpoint:
    path: /routing
    method: GET
    data_selector: routes
    params: {}
- name: route
  endpoint:
    path: /routing
    method: POST
    data_selector: trip
    params: {}
- name: isochrone
  endpoint:
    path: /routing/isochrones
    method: POST
    data_selector: response
    params: {}
- name: elevation_profile
  endpoint:
    path: /route
    method: POST
    data_selector: trip
    params:
      elevationInterval: '30'
- name: Stamen Toner
  endpoint:
    path: /tiles/stamen_toner/{z}/{x}/{y}@2x.png
    method: GET
    data_selector: null
    params:
      api_key: YOUR-API-KEY
- name: map_tiles
  endpoint:
    path: /tiles/alidade_smooth/{z}/{x}/{y}{r}.png
    method: GET
- name: geocoding
  endpoint:
    path: /geocoding/v2/reverse
    method: GET
    data_selector: features
    params: {}
- name: geocoding
  endpoint:
    path: /geocoding/v1/search
    method: GET
    data_selector: features
- name: toner
  endpoint:
    path: /tiles/stamen_toner/{z}/{x}/{y}{r}.png
    method: GET
- name: toner-lite
  endpoint:
    path: /tiles/stamen_toner_lite/{z}/{x}/{y}{r}.png
    method: GET
- name: terrain
  endpoint:
    path: /tiles/stamen_terrain/{z}/{x}/{y}{r}.png
    method: GET
- name: watercolor
  endpoint:
    path: /tiles/stamen_watercolor/{z}/{x}/{y}.jpg
    method: GET
- name: bulk_geocoding
  endpoint:
    path: /v1/search/structured
    method: POST
    data_selector: results
- name: bulk_geocoding
  endpoint:
    path: /v1/search/structured
    method: POST
    data_selector: results
notes:
- Local development does not require an API key.
- Domain-based authentication is recommended for production web apps.
- Proxying and bulk downloading/caching (with few exceptions) are prohibited by our
  general terms of service.
- Many of our data sources require attribution.
- 'If you are using a platform that doesn''t automatically generate attributions,
  please include the following text for most styles: © Stadia Maps © OpenMapTiles
  © OpenStreetMap'
- For non-commercial (including academic) use, no special permission or licensing
  is necessary for these projects.
- requests above included_credits may be soft limited, hard limited, or charged as
  an overage depending on your plan and account settings.
- Management API access is only available on request.
- The API will calculate a center and zoom that fits all of your annotations automatically!
- For local development, no API keys are required.
- For local development on a web server at localhost or 127.0.0.1, you can get started
  without any API keys or domain setup.
- Domain-based authentication is recommended for most browser-based applications.
- The usage of tilesets is not billed or tracked against account quota.
- If you need to customize the style, you may use the imagery as a layer among other
  layers.
- The Stamen Watercolor tileset is missing the same tiles as the original.
- Configure your library to not request tiles higher than zoom level 16 for best results.
- If you need to always use EU servers for regulatory reasons, change the host to
  tiles-eu.stadiamaps.com.
- Requires an active Standard, Professional, or Enterprise subscription to permanently
  store results.
- The only required parameter is `text`.
- Avoid sending extremely short queries. A good rule of thumb is to have your application
  wait for two or three characters of user input before sending a query.
- We recommend throttling or debouncing (or both) for interactive applications.
- Keep in mind that network requests might arrive out of order.
- Specify only the layers you need to improve relevance and performance.
- Be sure to read Determining Result Quality and our best practices.
- If possible, use the structured search endpoint instead for postal addresses.
- You can also use our EU endpoint to keep traffic within the EU.
- Unlike most vendors, we won't charge you 10x the standard fee per request to store
  geocoding results long-term!
- We do require an active Standard, Professional, or Enterprise subscription to permanently
  store results.
- Unlike most vendors, we won't charge you 10x the standard fee per request to store
  geocoding results long-term.
- Temporary storage in the normal course of your work is allowed on all plans.
- Keep in mind that autocomplete responses have a reduced set of fields
- We no longer auto-localize everything to English for requests without a language
  preference.
- You should indicate a language preference, either via headers or a query string
  lang parameter.
- Set your API key from an environment variable
- You can use our EU endpoint to keep traffic within the EU
- Highly configurable with costing models for car, bicycle, pedestrian, and more.
- Optimized routing helps you save time and cut travel costs by finding an optimal
  route between multiple locations.
- You can also use our EU endpoint to keep traffic within the EU
- Can filter search to exclude unpaved roads
- Use the EU endpoint to keep traffic within the EU by setting basePath to https://api-eu.stadiamaps.com
- You can also use our EU endpoint to keep traffic within the EU using the basePath
  option.
- You can use our EU endpoint to keep traffic within the EU using the basePath option.
- You can generate, view or revoke your API key from the client dashboard.
- 'You can use our EU endpoint to keep traffic within the EU like so: https://api-eu.stadiamaps.com'
- Sign up for free; no credit card required!
- The MCP server requires a Stadia Maps API key.
- Demo code available on GitHub
- Requires Leaflet CSS for proper styling
- Once you're ready to deploy your app, sign up for a free Stadia Maps account, and
  we'll walk through the next steps to get your domain authenticated.
- For mobile, backend, and non-local web development, you'll need either domain auth
  or an API key.
- You can download JSON data of all the arcades in Japan.
- Domain-based authentication is the easiest form of authentication for production
  web apps.
- API key authentication can be done by adding an API key to the query string or HTTP
  header.
- Uses GeoJSON for marker coordinates
- MapLibre GL JS does not handle RTL text by default, so we recommend adding a dependency
  to support RTL rendering.
- Ensure to use a valid font from the provided list to avoid map loading issues.
- Uses MapLibre GL JS version 5 or higher for globe rendering.
- Make sure to test your application thoroughly on all platforms that you target.
- You can sign up for free, and no credit card is required!
- The Stadia Maps Terms of Service allow for limited caching of map tiles on mobile
  devices, subject to certain conditions.
- To give a rough scale, you can download an area approximately the size of Long Island
  (if you are using vector tiles) for offline use to a user's device.
- You must have an active subscription to Stadia Maps covering the tiles you are caching.
- You must limit caching to 100 MB of map tiles per device.
- You need a Stadia Maps API key, which can be created after signing up for a free
  account.
- Be sure to grab an API key!
- You need a Stadia Maps API key. You can sign up for free, and no credit card is
  required.
- Be sure to store API key securely
- Sign up for a Stadia Maps API key
- Sign up for a Stadia Maps API key before using the API.
- Be mindful with the management of your API keys.
- If using Stamen Watercolor style, follow specific installation steps due to a bug.
- Ensure to remove any trailing newline characters when copying the URL.
- Default map styles show names of places in up to two languages by default.
- Once you're ready to move beyond localhost testing, sign up for a free Stadia Maps
  account.
- You will need to sign up for a Stadia Maps account.
- Add your Bubble.io app's domain to your account in the client dashboard.
- Uses Stadia Maps Geospatial APIs to get routes, parse summary information about
  the route, and visualize it on a map.
- The isochrone API is highly configurable with parameters such as walking speed,
  bicycle type, and more.
- The elevation data is stored at a 30m sampling resolution internally.
- The routing API is aware of bridges and tunnels.
- alidade_smooth is only one of the styles we offer. You can use any of our styles
  by replacing alidade_smooth as described in our style library.
- Configure the client to use the EU endpoint
- You can use Stadia Maps domain authentication.
- For domain authentication, no API key is required.
- If using API keys, append the api_key variable to the URL.
- Toner Hybrid style is no longer available in raster form.
- Supported versions greater than 9.4.0 may have trouble loading styles.
- You'll need a Stadia Maps API key to run the script
- The maximum number of records per batch is 5,000.
- The bulk geocoding API helps you execute large jobs quickly, packing up to 5,000
  queries in a single request.
- If you're using our location services in a browser based application, the best form
  of debugging information is an HTTP Archive file, or HAR as it is known.
- With other requests, we may just need your header information.
errors:
- '401 Unauthorized: Recheck API Key'
- '403 Forbidden: Access to the API not allowed based on selected plan'
- '429 Rate Limit Exceeded: Exceeded allowed number of requests'
- '403 Forbidden: Invalid token or no token provided.'
- '401 Unauthorized: Check API key or domain setup.'
- Bulk downloading is strictly prohibited.
- '401 Unauthorized: Check API Key'
- '401 Unauthorized: Recheck API key'
- Exception when calling the Stadia Maps API
- '401 Unauthorized: Recheck your API key'
- '401 Unauthorized: Recheck API key or token expiration'
- 'JavaScript error: Map does not load if an invalid font is specified.'
- '401 Unauthorized: Ensure you are providing a valid API key.'
- Request failed with error code
- Exception when calling the API
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.stadiamaps.com
  auth:
    type: apikey
    location: query
    header_name: api_key
source_metadata: null
