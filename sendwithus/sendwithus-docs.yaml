resources:
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: records
- name: send_email
  endpoint:
    path: /send
    method: POST
    data_selector: success
- name: logs
  endpoint:
    path: /logs/(:log_id)
    method: GET
    data_selector: object
    params: {}
- name: log_events
  endpoint:
    path: /logs/(:log_id)/events
    method: GET
    data_selector: object
    params: {}
- name: resend_log
  endpoint:
    path: /resend
    method: POST
    data_selector: success
    params: {}
- name: snippets
  endpoint:
    path: /snippets
    method: GET
    data_selector: object
    params: {}
- name: snippet
  endpoint:
    path: /snippets/(:id)
    method: GET
    data_selector: object
    params: {}
- name: create_snippet
  endpoint:
    path: /snippets
    method: POST
    data_selector: success
    params: {}
- name: update_snippet
  endpoint:
    path: /snippets/(:id)
    method: PUT
    data_selector: success
    params: {}
- name: delete_snippet
  endpoint:
    path: /snippets/(:id)
    method: DELETE
    data_selector: success
    params: {}
- name: render_template
  endpoint:
    path: /render
    method: POST
    data_selector: success
    params: {}
- name: customers
  endpoint:
    path: /customers/customer@example.com
    method: GET
    data_selector: success
    params: {}
- name: create_update_customer
  endpoint:
    path: /customers
    method: POST
    data_selector: success
    params: {}
- name: delete_customer
  endpoint:
    path: /customers/(:email)
    method: DELETE
    data_selector: success
    params: {}
- name: customer_logs
  endpoint:
    path: /customers/matt@sendwithus.com/logs
    method: GET
    data_selector: success
    params: {}
- name: activate_campaign
  endpoint:
    path: /drip_campaigns/(:drip_campaign_id)/activate
    method: POST
    data_selector: success
    params: {}
- name: deactivate_campaign
  endpoint:
    path: /drip_campaigns/(:drip_campaign_id)/deactivate
    method: POST
    data_selector: success
    params: {}
- name: deactivate_customer_campaigns
  endpoint:
    path: /drip_campaigns/deactivate
    method: POST
    data_selector: success
    params: {}
- name: list_campaigns
  endpoint:
    path: /drip_campaigns
    method: GET
    data_selector: object
    params: {}
- name: campaign_details
  endpoint:
    path: /drip_campaigns/(:drip_campaign_id)
    method: GET
    data_selector: object
    params: {}
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: '[]'
- name: send_email
  endpoint:
    path: /send
    method: POST
    data_selector: '{}'
- name: logs
  endpoint:
    path: /logs/(:log_id)
    method: GET
    data_selector: '{}'
- name: resend_log
  endpoint:
    path: /resend
    method: POST
- name: get_all_snippets
  endpoint:
    path: /snippets
    method: GET
- name: get_specific_snippet
  endpoint:
    path: /snippets/(:id)
    method: GET
- name: create_snippet
  endpoint:
    path: /snippets
    method: POST
- name: update_snippet
  endpoint:
    path: /snippets/(:id)
    method: PUT
- name: delete_snippet
  endpoint:
    path: /snippets/(:id)
    method: DELETE
- name: render_template
  endpoint:
    path: /render
    method: POST
- name: get_specific_customer
  endpoint:
    path: /customers/customer@example.com
    method: GET
- name: create_update_customer
  endpoint:
    path: /customers
    method: POST
- name: delete_customer
  endpoint:
    path: /customers/(:email)
    method: DELETE
- name: get_email_logs
  endpoint:
    path: /customers/matt@sendwithus.com/logs
    method: GET
- name: activate_campaign
  endpoint:
    path: /drip_campaigns/(:drip_campaign_id)/activate
    method: POST
- name: deactivate_campaign
  endpoint:
    path: /drip_campaigns/(:drip_campaign_id)/deactivate
    method: POST
- name: deactivate_customer_from_all_campaigns
  endpoint:
    path: /drip_campaigns/deactivate
    method: POST
- name: get_list_of_campaigns
  endpoint:
    path: /drip_campaigns
    method: GET
- name: get_campaign_details
  endpoint:
    path: /drip_campaigns/(:drip_campaign_id)
    method: GET
- name: Get translation package
  endpoint:
    path: /i18n/pot/(:tag)
    method: GET
    params:
      tag: String
- name: Post translated strings
  endpoint:
    path: /i18n/po/(:tag)
    method: POST
    params:
      tag: String
- name: Batch API
  endpoint:
    path: /batch
    method: POST
    params:
      path: API path to call
      method: HTTP method to use
      body: HTTP request body
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: events
- name: failed_email_webhook
  endpoint:
    path: /delivery
    method: POST
    data_selector: fields
- name: activate_drip_campaign
  endpoint:
    path: /drip_campaigns/(drip_campaign_id)/activate
    method: POST
- name: deactivate_drip_campaign
  endpoint:
    path: /drip_campaigns/(drip_campaign_id)/deactivate
    method: POST
- name: activate_drip_campaign
  endpoint:
    path: /drip_campaigns/(drip_campaign_id)/activate
    method: POST
    data_selector: data
- name: deactivate_customer
  endpoint:
    path: /drip_campaigns/deactivateacustomerfromallcampaigns
    method: POST
    data_selector: data
- name: templates
  endpoint:
    path: /api/templates
    method: GET
    data_selector: records
- name: send_email
  endpoint:
    path: /api/v1/send
    method: POST
    data_selector: response
    params: {}
- name: send_email
  endpoint:
    path: /api/v1/send
    method: POST
    data_selector: ''
    params: {}
notes:
- Batch sizes over 10 requests are not recommended.
- Two-Factor Authentication (2FA) adds a second layer of security to your account.
- With 2FA enabled, logging into your account requires you to provide a 6-digit authentication
  token in addition to your password.
- You will have to install a mobile authenticator app. We suggest Authy or Google
  Authenticator App.
- You will be given 10 single-use recovery codes. Write your Recovery Codes down and
  don’t lose this.
- Uses OAuth2 with refresh token — requires setup of connected app in Sendwithus
- Sendwithus adds extra information to webhooks for analytics.
- Events are case sensitive
- SENDWITHUS TEST is appended to all preview sends.
- This is also the result of sends using a Test API Key.
- Sendwithus may add additional fields based on customer demand, but will not remove
  fields to ensure backwards compatibility.
- Drip campaigns activated with test API keys ignore the multiple activations option.
- Requires API key with Full Access or Restricted Access permissions.
- Sendwithus only accepts the Server API token to connect with your Postmark account.
- Your sender signature must be verified before you can send emails.
- Ensure that you’re in the Sending > Webhooks section for the matching domain in
  your Mailgun Dashboard.
- If all of the webhooks aren’t the same, you can update these by creating a new webhook
  and deleting the old one.
- SendGrid no longer accepts Basic authentication (username and password) for API
  calls when two-factor authentication is enabled for a user.
- You can now only use two-factor authentication if you are authenticating with an
  API key.
- Sendwithus settings can be found under the System menu in Transactional Emails.
- API settings are found in System->Configuration.
- API key can only be displayed once for security reasons
- Ensure to test emails across multiple clients for consistency
- Images might not appear by default in most email clients.
errors:
- 4xx -- Failed Request (Client error)
- 5xx -- Failed Request (Server error)
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: If you remove the ESP account and continue to make API requests
  using the old ESP Account ID.'
- '400 Bad Request: Check the request format and required fields'
- '401 Unauthorized: Verify API key and permissions'
- '400 Bad Request: Check JSON format and required parameters.'
- '401 Unauthorized: Verify API key and permissions.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.sendwithus.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
