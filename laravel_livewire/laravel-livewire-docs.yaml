resources:
- name: counter
  endpoint:
    path: /docs/2.x/quickstart
    method: GET
    data_selector: components
    params: {}
- name: counter
  endpoint:
    path: /livewire/counter
    method: GET
    data_selector: view
    params: {}
- name: class_hooks
  endpoint:
    path: /docs/2.x/lifecycle-hooks#class-hooks
    method: GET
    data_selector: hooks
- name: javascript_hooks
  endpoint:
    path: /docs/2.x/lifecycle-hooks#js-hooks
    method: GET
    data_selector: hooks
- name: temporary_file_upload
  endpoint:
    params:
      rules: file|mimes:png,jpg,pdf|max:102400
      middleware: throttle:5,1
      directory: tmp
      max_upload_time: 5
- name: file_downloads
  endpoint:
    path: /docs/2.x/file-downloads
    method: GET
    data_selector: records
    params: {}
- name: dirty_states
  endpoint:
    path: /docs/2.x/dirty-states
    method: GET
    data_selector: content
    params: {}
- name: color-picker
  endpoint:
    path: /x-color-picker
    method: GET
    data_selector: records
    params: {}
- name: select2
  endpoint:
    path: /select2
    method: GET
    data_selector: records
    params: {}
- name: listeners
  endpoint:
    path: /docs/2.x/listeners
    method: GET
    data_selector: listeners
- name: private_and_presence_channels
  endpoint:
    path: /docs/2.x/private-presence-channels
    method: GET
    data_selector: private_and_presence_channels
- name: install_package
  endpoint:
    path: /docs/1.x/installation
    method: GET
    data_selector: package
    params: {}
- name: include_assets
  endpoint:
    path: /docs/1.x/include-js
    method: GET
    data_selector: assets
    params: {}
- name: publishing_config
  endpoint:
    path: /docs/1.x/publishing-config
    method: GET
    data_selector: config
    params: {}
- name: configuring_asset_base_url
  endpoint:
    path: /docs/1.x/configuring-the-asset-base-url
    method: GET
    data_selector: asset_base_url
    params: {}
- name: publishing_assets
  endpoint:
    path: /docs/1.x/publishing-assets
    method: GET
    data_selector: assets
    params: {}
- name: contact_form
  endpoint:
    path: /docs/1.x/input-validation
    method: GET
    data_selector: ''
    params: {}
- name: posts
  endpoint:
    path: /livewire/show-posts
    method: GET
    data_selector: posts
    params:
      page_size: 10
- name: contact_form
  endpoint:
    path: /contact-form
    method: POST
    data_selector: redirect
    params: {}
- name: loading_states
  endpoint:
    path: /docs/1.x/loading-states
    method: GET
    data_selector: records
- name: prefetch
  endpoint:
    path: /docs/1.x/prefetching
    method: GET
    data_selector: result
    params: {}
- name: offline_state
  endpoint:
    path: /docs/1.x/offline-state
    method: GET
    data_selector: records
- name: ShowPost
  endpoint:
    path: /loadPosts
    method: GET
    data_selector: posts
- name: OrderTracker
  endpoint:
    path: /docs/1.x/order-tracker
    method: GET
    data_selector: listeners
- name: CreatePost
  endpoint:
    path: /posts/create
    method: GET
    data_selector: records
    params: {}
- name: make
  endpoint:
    path: /docs/1.x/artisan-commands/make
    method: GET
    data_selector: commands
    params: {}
- name: move
  endpoint:
    path: /docs/1.x/artisan-commands/move
    method: GET
    data_selector: commands
    params: {}
- name: copy
  endpoint:
    path: /docs/1.x/artisan-commands/copy
    method: GET
    data_selector: commands
    params: {}
- name: delete
  endpoint:
    path: /docs/1.x/artisan-commands/delete
    method: GET
    data_selector: commands
    params: {}
notes:
- Livewire components MUST have a single root element.
- Be amazing at Livewire with our in-depth screencasts.
- Livewire provides core functionality through protected properties on a component's
  class.
- These traits unlock additional functionality in a Livewire component.
- Livewire components can communicate with each other through a global event system.
- Your Livewire version must be >= 1.2.0 to use this feature.
- Must be a file less than 12MB.
- 100MB max, and only pngs, jpegs, and pdfs.
- Only allow 5 uploads per user per minute.
- Temporary files are uploaded to the livewire-tmp/ directory on the specified disk.
- File uploads are automatically invalidated if they take longer than 5 minutes.
- Livewire offers the ability to paginate results within a component. This feature
  hooks into Laravel's native pagination features, so it should feel like an invisible
  feature to you.
- Livewire makes a roundtrip to the server every time an action is triggered on the
  page.
- By default, Livewire set's a loading element's 'display' CSS property to 'inline-block'.
- Livewire reduces polling when the browser tab is in the background so that it doesn't
  bog down the server with ajax requests unnecessarily.
- Elements with the wire:dirty directive will watch for differences between the front-end
  value, and the last returned Livewire data value.
- Adding the class modifier allows you to add a class to the element when dirty.
- Vanilla Picker requires it to be loaded on the page.
- Select2 replaces the <select> tag with custom markup.
- Livewire pairs nicely with Laravel Echo to provide real-time functionality on your
  web-pages using WebSockets.
- Occasionally there will be changes to Livewire's internal method signatures that
  will require a refresh of any components currently running in the browser.
- If Livewire's deployment hash has changed, it will trigger the page expired dialog
  or hook.
- Each Livewire request is stateless, with state stored in the browser.
- Uses a checksum to validate that the state has not been tampered with.
- You can send parameters with an event emission.
- Validation in Livewire should feel similar to standard form validation in Laravel.
- Livewire stores temporary files in a non-public directory
- Temporary urls are only supported for image uploads.
- The temporary file upload endpoint has throttling middleware by default.
- Livewire supports the standard redirect response syntax you are used to using in
  Laravel controller.
- The loadPosts action will be run immediately after the Livewire component renders
  on the page.
- You must install Alpine in order to use it.
- Uses Laravel Echo for real-time functionality with WebSockets
- The most common issues encountered by Livewire users has to do with Livewire's DOM
  diffing/patching system.
- Checksum issues can occur with arrays due to the reordering of keys in JavaScript.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://livewire.laravel.com
  headers:
    Accept: application/json
source_metadata: null
