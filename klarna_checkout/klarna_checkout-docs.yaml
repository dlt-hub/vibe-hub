resources:
- name: order
  endpoint:
    path: /create_order
    method: POST
    data_selector: order
    params: {}
- name: create_order
  endpoint:
    path: /create/order
    method: POST
    data_selector: order_details
- name: order
  endpoint:
    path: /update-order
    method: POST
    data_selector: order
    params: {}
- name: create_order
  endpoint:
    path: /checkout/v3/orders
    method: POST
    data_selector: order
    params:
      purchase_country: string
      purchase_currency: string
      locale: string
      order_amount: integer
      order_tax_amount: integer
      order_lines: Array of objects
      merchant_reference1: string
      merchant_reference2: string
- name: update_order
  endpoint:
    path: /checkout/v3/orders/{order_id}
    method: POST
    data_selector: order
    params: {}
- name: get_order_details
  endpoint:
    path: /checkout/v3/orders/{order_id}
    method: GET
    data_selector: order
    params: {}
- name: abort_order
  endpoint:
    path: /checkout/v3/orders/{order_id}/abort
    method: POST
    data_selector: order
    params: {}
- name: order_details
  endpoint:
    path: /checkout/v3/orders/{order_id}
    method: GET
    data_selector: order
- name: abort_order
  endpoint:
    path: /checkout/v3/orders/{order_id}/abort
    method: POST
- name: abort_order
  endpoint:
    path: /orders/{order_id}/abort
    method: POST
    data_selector: response
    params:
      order_id: required
- name: create_session
  endpoint:
    path: /payments/web-payments/integrate-with-klarna-payments/integrate-via-hpp/api-documentation/create-session/
    method: POST
    data_selector: session
    params: {}
- name: distribute_session
  endpoint:
    path: /payments/web-payments/integrate-with-klarna-payments/integrate-via-hpp/api-documentation/distribute-session/
    method: POST
    data_selector: session
    params: {}
- name: read_session
  endpoint:
    path: /payments/web-payments/integrate-with-klarna-payments/integrate-via-hpp/api-documentation/read-session/
    method: GET
    data_selector: session
    params: {}
- name: disable_session
  endpoint:
    path: /payments/web-payments/integrate-with-klarna-payments/integrate-via-hpp/api-documentation/disable-session/
    method: DELETE
    data_selector: session
    params: {}
- name: status_callbacks
  endpoint:
    path: /payments/web-payments/integrate-with-klarna-payments/integrate-via-hpp/api-documentation/status-callbacks/
    method: GET
    data_selector: callbacks
    params: {}
- name: authorizations
  endpoint:
    path: /payments/v1/authorizations/
    method: GET
- name: attachment
  endpoint:
    path: /api/extra-merchant-data
    method: POST
    data_selector: attachment.body
    params: {}
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: metadata
- name: order
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}
    method: GET
- name: captures
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/captures
    method: GET
- name: refund
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/refunds
    method: POST
- name: acknowledge_order
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/acknowledge
    method: POST
- name: update_authorization
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/authorization
    method: PATCH
- name: cancel_order
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/cancel
    method: POST
- name: update_consumer_details
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/customer-details
    method: PATCH
- name: update_merchant_references
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/merchant-references
    method: PATCH
- name: release_remaining_authorization
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/release-remaining-authorization
    method: POST
- name: extend_authorization_time
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/extend-authorization-time
    method: POST
- name: capture_order
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/captures
    method: POST
- name: append_shipping_info
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/captures/{capture_id}/shipping-info
    method: POST
- name: trigger_send_out
  endpoint:
    path: /ordermanagement/v1/orders/{order_id}/captures/{capture_id}/trigger-send-out
    method: POST
- name: generate_customer_token
  endpoint:
    path: /payments/v1/authorizations/{authorizationToken}/customer-token
    method: POST
    data_selector: token_id
    params: {}
- name: create_order
  endpoint:
    path: /payments/v1/authorizations/{authorizationToken}/customer-token
    method: POST
    data_selector: token_id
    params: {}
- name: create_session
  endpoint:
    path: /payments/v1/sessions
    method: POST
    data_selector: session_request
- name: update_session
  endpoint:
    path: /payments/v1/sessions/{session_id}
    method: POST
    data_selector: session_request
- name: get_session_details
  endpoint:
    path: /payments/v1/sessions/{session_id}
    method: GET
    data_selector: session_details
- name: create_session
  endpoint:
    path: /payments/v1/sessions
    method: POST
    data_selector: session
    params: {}
- name: read_session
  endpoint:
    path: /payments/v1/sessions/{session_id}
    method: GET
    data_selector: session
    params: {}
- name: cancel_session
  endpoint:
    path: /payments/v1/sessions/{session_id}/cancel
    method: POST
    data_selector: session
    params: {}
notes:
- Payload includes detailed order information including billing and shipping addresses.
- Uses JSON payload for requests
- Klarna payments provide a smart, consistent, and predictable experience.
- Flexible and optimized setupExplore enablement via platforms plugins for stress
  free setup.
- Free to useGet access to our conversion boosters at no additional costs.
- Use HTTPS for all of your interactions with Klarna APIs.
- Ensure a smooth integration process.
- 'The API key should be included in the Authorization header for every request in
  the format: Authorization: Basic <API key>'
- If using username/password, UUID can be provided along with the API key as the password.
- Uses UTF-8 encoding for all data sent to Klarna's APIs.
- 'The data takes two forms: reference fields and general metadata fields.'
- Rate limits are measured per merchant_id.
- The default maximum request body size in our API is 1MB. Any request with a body
  size exceeding this limit will not be processed and will return an error code `413
  (Payload Too Large)`.
- Klarna Services status can be monitored 24/7 via the Operational Status site.
- A Service Level Agreement attachment could be added to your partnership agreement
  with Klarna upon request.
- Ecommerce is default acquiring channel unless specified.
- Requires OAuth 2.0 authentication
- Ensure correct scopes are set for access
- Uses OAuth2 with refresh token â€” requires setup of connected app in Klarna
errors:
- '403:  {"error_text":"array|Resource is read-only","correlation_id":"1b4c6bfa-f182-43dd-bde0-6bec32as6cf0","error_code":"READ_ONLY_ORDER"}'
- '400:  {"error_text":"array|Bad value: order_amount|Bad value: order_tax_amount|Bad
  value: locale","correlation_id":"1b4c6bfa-f182-43dd-bde0-6bec32as6cf0","error_code":"BAD_VALUE"}'
- '404:  We did not find any order with given ID. You need to create a new order.'
- '400: Bad value'
- '403: You tried to modify a read only resource.'
- '404: We did not find any order with given ID. You need to create a new order.'
- '401 Unauthorized: If the credentials are missing or incorrect'
- INVALID_POSTAL_CODE
- REQUEST_LIMIT_EXCEEDED
- QUERY_TIMEOUT
- 401 Unauthorized
- '429: Too many requests - Rate limit exceeded'
- '413 (Payload Too Large): Any request with a body size exceeding this limit will
  not be processed.'
- 'HTTP status 5xx: Retry calls with increasing intervals'
- 'HTTP status 3xx or 4xx: Trigger escalations'
- '400: We were unable to create a customer token with the provided data. Some field
  constraint was violated.'
- '403: You were not authorized to execute this operation.'
- '404: The authorization does not exist.'
- '401 Unauthorized: Check your credentials and token validity'
- '400 Bad Request: Ensure request parameters are correct'
- '404 Not Found: Check endpoint and resource availability'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.klarna.com
  headers:
    Klarna-Partner: string
source_metadata: null
