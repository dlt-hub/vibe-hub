resources:
- name: devices
  endpoint:
    path: /api/devices
    method: GET
    data_selector: results
- name: variables
  endpoint:
    path: /api/v1.6/variables
    method: GET
    data_selector: results
- name: devices
  endpoint:
    path: /devices/machine-a
    method: POST
    data_selector: ''
    params: {}
- name: devices
  endpoint:
    path: /api/v2.0/devices/
    method: POST
    data_selector: null
    params: {}
- name: variables
  endpoint:
    path: /api/v1.6/variables/
    method: GET
    data_selector: variables
- name: devices
  endpoint:
    path: /devices/<device_label>/
    method: POST
- name: send_data_to_device
  endpoint:
    path: /api/v1.6/devices
    method: POST
- name: send_data_to_device
  endpoint:
    path: /devices/<device_label>/
    method: POST
    data_selector: payload
    params: {}
- name: variable_data
  endpoint:
    path: /devices/<device_label>/<variable_label>/values
    method: GET
    data_selector: values
    params: {}
- name: variable_values
  endpoint:
    path: /devices/<device_label>/<variable_label>/values/
    method: GET
    data_selector: results
- name: last_value_variable
  endpoint:
    path: /api/v1.6/variables/{variable_id}/values
    method: GET
    data_selector: last_value
- name: variable_data
  endpoint:
    path: /devices/<device_label>/<variable_label>/values
    method: GET
    data_selector: Dots
    params:
      page_size: 100
- name: last_value
  endpoint:
    path: /devices/<device_label>/<variable_label>/lv
    method: GET
    data_selector: last_value
    params: {}
- name: variable_values
  endpoint:
    path: /devices/<device_label>/<variable_label>/values/
    method: GET
    data_selector: results
    params:
      page_size: 1
- name: last_value_variable
  endpoint:
    path: /devices/<device_label>/<variable_label>/lv
    method: GET
    data_selector: value
    params: {}
- name: get_last_value_of_a_variable
  endpoint:
    path: /api/v1.6/variables/{variable_id}/values
    method: GET
    data_selector: results
- name: last_value
  endpoint:
    path: /devices/<device_label>/<variable_label>/lv
    method: GET
    data_selector: value
    params: {}
- name: send_data_to_variable
  endpoint:
    path: /devices/<device_label>/<variable_label>/values
    method: POST
    data_selector: values
- name: last_value_variable
  endpoint:
    path: /devices/<device_label>/<variable_label>/lv
    method: GET
    data_selector: value
- name: variable_values
  endpoint:
    path: /devices/<device_label>/<variable_label>/values
    method: POST
    data_selector: temperature
    params: {}
- name: position_values
  endpoint:
    path: /devices/<device_label>/position/values
    method: POST
    data_selector: context
    params: {}
- name: send_data_to_a_device
  endpoint:
    path: /api/v1.6/devices/
    method: POST
- name: variable
  endpoint:
    path: /api/v1.6/variables/
    method: POST
    data_selector: data
    params: {}
- name: send_data_to_device
  endpoint:
    path: /<device_label>/
    method: POST
- name: send_data_to_variable
  endpoint:
    path: /devices/<device_label>/<variable_label>/values
    method: POST
- name: send_data_to_a_variable
  endpoint:
    path: /api/v1.6/variables/{variable_id}/values/
    method: POST
    data_selector: data
- name: send_data_to_variable
  endpoint:
    path: /variables/<variable_id>/values
    method: POST
    data_selector: value
    params: {}
- name: devices
  endpoint:
    path: /devices/<device_label>/
    method: POST
- name: variable_aggregated_data
  endpoint:
    path: /api/v1.6/variables/{variable_id}/aggregated
    method: GET
- name: variable_aggregated_data
  endpoint:
    path: /variables/<variable_id>/statistics/<aggregation>/<start>/<end>
    method: GET
    data_selector: ''
    params: {}
- name: send_data_to_variable
  endpoint:
    path: /api/v1.6/variables/<variable_id>/values
    method: POST
    data_selector: ''
    params: {}
- name: variable_data
  endpoint:
    path: /api/v1.6/variables/{variable_id}/values
    method: GET
    data_selector: results
- name: variable_data
  endpoint:
    path: /variables/<variable_id>/values
    method: GET
    data_selector: values
    params:
      page: 1
      page_size: 100
- name: variable_aggregated_data
  endpoint:
    path: /api/v1.6/variables/{variable_id}/values/
    method: GET
- name: variable_aggregated_data
  endpoint:
    path: /variables/<variable_id>/statistics/<aggregation>/<start>/<end>
    method: GET
- name: variable_values
  endpoint:
    path: /variables/<variable_id>/values/
    method: GET
    data_selector: results
    params:
      page_size: '1'
- name: send_data_to_variable
  endpoint:
    path: /api/v1.6/variables/{variable_id}/values/
    method: POST
    data_selector: data
- name: variable_data
  endpoint:
    path: /variables/<variable_id>/values
    method: GET
    data_selector: values
- name: send_data_to_variable
  endpoint:
    path: /variables/<variable_id>/values
    method: POST
    data_selector: value
- name: variable_values
  endpoint:
    path: /variables/<variable_id>/values
    method: GET
    data_selector: results
    params:
      page_size: '1'
- name: send_data_to_variable
  endpoint:
    path: /variables/<variable_id>/values
    method: POST
    data_selector: value
    params: {}
- name: data_aggregation
  endpoint:
    path: /api/v1.6/data/stats/aggregation/
    method: POST
    data_selector: results
- name: data_raw_series
  endpoint:
    path: /data/raw/series
    method: POST
    data_selector: data
    params: {}
- name: data_aggregation
  endpoint:
    path: /api/v1.6/data/stats/aggregation/
    method: POST
    data_selector: results
- name: data_raw_series
  endpoint:
    path: /data/raw/series
    method: POST
    data_selector: results
    params: {}
- name: data_raw_series
  endpoint:
    path: /api/v1.6/data-raw-series
    method: GET
- name: data_raw_series
  endpoint:
    path: /data/raw/series
    method: POST
    data_selector: data
    params: {}
- name: data_resample
  endpoint:
    path: /data/stats/resample/
    method: POST
    data_selector: results
- name: data_raw_series
  endpoint:
    path: /data/raw/series
    method: POST
    data_selector: results
    params: {}
- name: data_aggregation
  endpoint:
    path: /api/v1.6/data/stats/aggregation/
    method: POST
    data_selector: results
- name: data_resample
  endpoint:
    path: /api/v1.6/data/stats/resample/
    method: POST
- name: last_value
  endpoint:
    path: /api/v1.6/devices/my-new-device/control/lv
    method: GET
    data_selector: value
- name: data_aggregation
  endpoint:
    path: /api/v1.6/data/stats/aggregation/
    method: POST
    data_selector: results
    params: {}
- name: devices
  endpoint:
    path: /devices/my-new-device
    method: POST
    data_selector: my-sensor
- name: last_value
  endpoint:
    path: /api/v1.6/devices/my-new-device/control/lv
    method: GET
- name: send_string_value
  endpoint:
    path: /api/v1.6/devices/my-new-device
    method: POST
    data_selector: null
    params: {}
- name: devices
  endpoint:
    path: /devices/my-new-device
    method: POST
    data_selector: my-sensor
- name: devices
  endpoint:
    path: /api/v1.6/devices/{device_label}
    method: POST
    data_selector: location
    params: {}
- name: devices
  endpoint:
    path: /api/v1.6/devices/my-new-device
    method: POST
    data_selector: null
    params: {}
- name: variables
  endpoint:
    path: /api/v2.0/variables/
    method: GET
    data_selector: variables
    params:
      fields: device,label,lastValue
- name: devices
  endpoint:
    path: /api/v1.6/devices/my-new-device
    method: POST
    data_selector: location
    params: {}
- name: variables
  endpoint:
    path: /variables/
    method: GET
    data_selector: results
    params:
      fields: device,label,lastValue
      label: nh3
      device__deviceType: air-pollution
- name: last_values
  endpoint:
    path: /api/v2.0/devices
    method: GET
    data_selector: results
    params: {}
- name: variables
  endpoint:
    path: /api/v2.0/variables/
    method: GET
    data_selector: results
    params:
      fields: device,label,lastValue
- name: last_values
  endpoint:
    path: /variables/
    method: GET
    data_selector: results
    params:
      fields: device,label,lastValue
      label: nh3
      device__deviceType: air-pollution
- name: last_values
  endpoint:
    path: /api/v2.0/devices/{device_id}/variables/{variable_id}/values
    method: GET
    data_selector: results
- name: MQTT
  endpoint:
    path: /
    method: GET
- name: MQTT over WebSockets
  endpoint:
    path: /
    method: GET
- name: publish_device
  endpoint:
    path: /v1.6/devices/{DEVICE_LABEL}
    method: POST
    data_selector: data
- name: publish_variable
  endpoint:
    path: /v2.0/devices/{DEVICE_LABEL}
    method: POST
    data_selector: data
- name: publish_to_variable
  endpoint:
    path: /v1.6/devices/<device_label>/<variable_label>
    method: POST
    data_selector: value
- name: MQTT
  endpoint:
    path: /mqtt
    method: GET
- name: MQTT over WebSockets
  endpoint:
    path: /mqtt/ws
    method: GET
- name: device_temperature
  endpoint:
    path: /v1.6/devices/weather-station/temperature
    method: POST
    data_selector: value
- name: device_position
  endpoint:
    path: /v1.6/devices/weather-station/position
    method: POST
    data_selector: value
- name: devices
  endpoint:
    path: /v2.0/devices/<device_label>
    method: POST
    data_selector: payload
- name: publish_data_to_variable
  endpoint:
    path: /v1.6/devices/<device_label>/<variable_label>
    method: POST
    data_selector: value
    params: {}
- name: publish_data
  endpoint:
    path: /v1.6/devices/<device_label>
    method: POST
    data_selector: payload
    params: {}
- name: temperature
  endpoint:
    path: /v1.6/devices/weather-station/temperature
    method: POST
    data_selector: value
    params: {}
- name: position
  endpoint:
    path: /v1.6/devices/weather-station/position
    method: POST
    data_selector: value
    params: {}
- name: weather_station
  endpoint:
    path: /v1.6/devices/weather-station
    method: POST
    data_selector: data
    params: {}
- name: subscribe
  endpoint:
    path: /v1.6/devices/{DEVICE_LABEL}/{VARIABLE_LABEL}
    method: GET
- name: publish_data
  endpoint:
    path: /v2.0/devices/<device_label>
    method: POST
    data_selector: payload
- name: devices
  endpoint:
    path: /v1.6/devices/#
    method: SUBSCRIBE
    data_selector: dot
    params: {}
- name: publish_to_device
  endpoint:
    path: /v1.6/devices/<device_label>
    method: POST
    data_selector: payload
    params: {}
- name: subscribe_single_level_wildcard
  endpoint:
    path: /v1.6/devices/+/<variable_label>
    method: SUBSCRIBE
    data_selector: Last Dot
    params: {}
- name: devices
  endpoint:
    path: /v1.6/devices
    method: POST
    data_selector: devices
- name: subscribe_variable_last_value
  endpoint:
    path: /v1.6/subscribe-to-variable-last-value
    method: GET
    data_selector: data
- name: subscribe_variable_last_dot
  endpoint:
    path: /v1.6/subscribe-to-variables-last-dot
    method: GET
    data_selector: data
- name: device_variable
  endpoint:
    path: /v1.6/devices/+/pressure/lv
    method: SUBSCRIBE
    data_selector: results
    params: {}
- name: device_all_variables
  endpoint:
    path: /v1.6/devices/device-a/+/lv
    method: SUBSCRIBE
    data_selector: results
    params: {}
- name: multi_level_wildcard_subscription
  endpoint:
    path: /v1.6/devices/#
    method: SUBSCRIBE
- name: subscribe_to_variable_last_dot
  endpoint:
    path: /v1.6/devices/<device_label>/<variable_label>
    method: SUBSCRIBE
    data_selector: value
    params: {}
- name: subscribe_single_level_wildcard
  endpoint:
    path: /v1.6/devices/+/<variable_label>
    method: SUBSCRIBE
- name: subscribe_to_variable_last_value
  endpoint:
    path: /v1.6/devices/<device_label>/<variable_label>/lv
    method: GET
    data_selector: lastValue
- name: devices
  endpoint:
    path: /v1.6/devices
    method: GET
    data_selector: devices
    params: {}
- name: variable_last_dot
  endpoint:
    path: /v1.6/devices/<device_label>/<variable_label>
    method: GET
- name: subscribe_to_variable_last_value
  endpoint:
    path: /v1.6/devices/<device_label>/<variable_label>/lv
    method: GET
- name: send_data
  endpoint:
    path: /api/v1.6/variables
    method: POST
    data_selector: result
notes:
- This API allows sending and retrieving data from devices using various protocols.
- Ubidots stores 'dots' that come from your devices inside variables.
- A timestamp must be set in milliseconds.
- While it is possible to send the authentication token as a query parameter, it is
  much less secure.
- Ubidots accepts data as JSON.
- We strongly advise to use HTTPs to make sure your data travels encrypted, avoiding
  the exposure of your API token and/or sensor data.
- The maximum character length for the body is 10kb
- Requires setup of connected app in Ubidots
- Maximum character length for the body is 10kb
- Use X-Auth-Token header for authentication instead of query parameter.
- Requires setup of OAuth for authentication
- Use the 'X-Auth-Token' header for authentication.
- While sending token as a query parameter is supported, it is strongly recommended
  to use the X-Auth-Token header.
- Requires authentication to access variable data
- While sending the token as a query parameter is supported, using the X-Auth-Token
  header is strongly recommended.
- API URLs can vary depending on the specific use case.
- API requires an API key for authentication.
- Requires OAuth2 authentication
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 for authentication
- User must replace {variable_id} with the actual variable id.
- While sending the token as a query parameter is supported, using the 'X-Auth-Token'
  header is strongly recommended.
- Ensure to replace {variable_id} with the actual variable ID in the endpoint path.
- Ensure to replace {variable_id} with the actual variable ID
- By default, this endpoint will retrieve the last 100 Dots of the specified variable.
- Uses OAuth2 — requires setup of connected app in ubidots
- The request will use the last 100 values of each variable if neither start and end
  are included.
- If neither start and end are included, the request will use the last 100 values
  of each variable.
- An array of variable IDs is required to retrieve raw data.
- Token should be included in the header as 'X-Auth-Token'.
- If you wish to send a value including its location data, refer to the location data
  section.
- String values can provide additional information to your dots.
- Get last values from multiple devices in a single request
- Check out the guide to learn more about Ubidots Maps Features.
- Updated 6 months ago
- Ubidots doesn't support LWT messages.
- Ubidots doesn't support Persistent Sessions (setting the cleanSession flag to false
  won't make effect).
- We strongly advise to use MQTT with TLS to make sure your data travels encrypted,
  avoiding the exposure of your API token and/or sensor data to third parties.
- Ubidots doesn't support Persistent Sessions.
- Ubidots accepts MQTT data in JSON format.
- The maximum character length for the body is 10kb.
- All timestamps must be in milliseconds.
- A token is an unique key that authorizes your device to interact with Ubidots API.
- Password is not required.
- Ubidots accepts MQTT data JavaScript Object Notation or JSON.
- timestamp and context parameters are optional.
- Multiple variable single value and multiple variable Dots structures can be used
  for payload.
- Timestamp and context parameters are optional.
- Uses API key for authentication
- Payload may include timestamps and context
- Subscribe allows obtaining values without continuously asking the server.
- Use a global timestamp for multiple variables
- If a timestamp is provided within a Dot, it will ignore the global timestamp
- Non-specific results for subscriptions using wildcards give no clue of what variable
  has received the resulting value/dot.
- Single-level wildcards are represented with a plus sign (+).
- Requires setup of API key for authentication
- Multiple variables can be updated in a single request
- Use single-level wildcard to subscribe to variables.
- Non-specific results give no clue of what variable has received the resulting value/dot.
- Replace <device_label> and <variable_label> with the unique label of the device
  and variable.
- Replace the <device_label> and <variable_label> with the unique label of the device
  and the variable to subscribe for retrieving values update.
- TCP is connection oriented and implements confirmation methods.
- UDP is connectionless and does not implement confirmation methods.
- Replace <device_label> and <variable_label> with the unique label of the device
  and the variable.
- To send data to Ubidots using the TCP or UDP broker you need your Ubidots TOKEN.
- We strongly advise to always use TCP with TLS to make sure your data travels encrypted,
  avoiding the exposure of your API token and/or sensor data to third parties.
- If the specified Device or Variable do not exist, you will not able to establish
  the subscription with it.
- TCP is connection oriented, while UDP is connectionless.
- Ubidots will create the device if it does not exist.
- 'Valid message: Ubidots will answer Ok| followed by the dot value if the request
  is correct.'
- 'Invalid message: Ubidots will answer ERROR|400 if the message is not valid or ERROR|404
  if the message contains a variable or device that does not exist.'
- Ubidots will create device labels if they do not exist.
- Timestamps must be in milliseconds.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Ubidots also supports to retrieve the actual UTC timestamp from our servers.
- 'Invalid message: Ubidots will answer ERROR|400 if the message is not valid or ERROR|400
  if the message contains a variable or device that does not exist.'
errors:
- '401 Unauthorized: Recheck your API token'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check X-Auth-Token'
- '404 Not Found: Check the path or resource'
- '401 Unauthorized: Recheck your authentication token'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400001: The payload sent is not a valid json document.'
- '401001: Authentication credentials were not provided.'
- '401 Unauthorized: Recheck authentication token'
- '401 Unauthorized: Incorrect authentication credentials.'
- '401 Unauthorized: Recheck OAuth token'
- '401 Unauthorized: Invalid authentication credentials'
- '401 Unauthorized: Check your authentication token or account status.'
- '401 Unauthorized: Check the authentication token'
- '401 Unauthorized: Invalid API Key or token.'
- '401 Unauthorized: Invalid API key.'
- '400 Bad Request: Check the request body for errors.'
- '401002: Incorrect authentication credentials.'
- '401 Unauthorized: Invalid API token or insufficient permissions'
- '401 Unauthorized: Recheck authentication token.'
- '401 Unauthorized: Authentication credentials were not provided.'
- '400 Bad Request: JSON parse error - Expecting value.'
- 400 Bad Request
- '400 Bad Request: Check JSON structure or parameters'
- '401 Unauthorized: Check your API key.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '200: Ok -- Successful request'
- '201: Created -- Successful request + an entity (Device or Variable) was created'
- '202: Accepted -- The request has been accepted for processing, but the processing
  has not been completed'
- '204: One of the fields is incorrect and the request is not saved -- Please verify
  it''s a valid JSON string and that the fields are the ones expected by the endpoint
  (string, object or float)'
- '400: Bad Request -- Error due to an invalid body in your request. Please verify
  it''s a valid JSON string and that the fields are the ones expected by the endpoint
  (string, object or float)'
- '401: Invalid API key -- Please verify your API Key'
- '402: Payment required -- Please verify your balance'
- '403: Forbidden -- This token is not valid. Please verify your token'
- '404: Not Found -- We couldn’t find the URL you''re trying to access. This might
  be due to a wrong device label or ID, a wrong variable label or ID, or simply a
  typo in the URL of the request'
- '405: Method Not Allowed -- This API endpoint does not accept the method used. Check
  our API docs to see the allowed methods'
- '415: Unsupported media type -- The payload is in a format not supported by this
  method on the target resource'
- '420: You have exceeded your API limits -- To upgrade your API limit, contact the
  Ubidots team'
- '423: Device does not receive data because it is disabled'
- '429: Too many requests -- Many requests sent in a given amount of time ("rate limiting")'
- '50x: Internal Error -- We''re having issues with our servers. Please check our
  status page'
- Quality of Service guarantees message delivery up to QoS 1 (at least once).
- '50x: Internal Error -- We''re having issues with our servers. Please check our
  status page.'
- '401 Unauthorized: Check your Ubidots Token'
- '401 Unauthorized: Check your Ubidots Token.'
- '400 Bad Request: Validate your payload structure'
- '401 Unauthorized: Check API key validity'
- '400 Bad Request: Review payload structure'
- 'Connection refused: Ensure the correct port is used'
- 'Non-specific results: The results for Subscriptions using wildcards give no clue
  of what variable has received the resulting value/dot.'
- '401 Unauthorized: Recheck your Ubidots token'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Verify payload structure'
- '401 Unauthorized: Check API key or permissions.'
- 'Invalid subscription format: Ensure the topic follows the correct structure.'
- If the specified Device or Variable do not exist, you will not be able to establish
  the subscription.
- '401 Unauthorized: Check that your Ubidots Token is correct.'
- Subscription cannot be established if specified Device or Variable do not exist.
- If the specified Device or Variable do not exist, you will not able to establish
  the subscription with it.
- 'ERROR|400: Message is not valid'
- '401 Unauthorized: Recheck your TOKEN.'
- 'ERROR|400: The message is not valid.'
- 'ERROR|404: The message contains a variable or device that does not exist.'
- 'ERROR|400: Invalid message format.'
- 'ERROR|400: Invalid message'
- 'ERROR|404: Device or variable does not exist'
- ERROR|400
auth_info:
  mentioned_objects:
  - X-Auth-Token
client:
  base_url: https://industrial.ubidots.com
  auth:
    type: oauth2
source_metadata: null
