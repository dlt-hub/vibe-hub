resources:
- name: file
  endpoint:
    path: /example.json
    method: INSERT
    data_selector: records
    params: {}
- name: file_history
  endpoint:
    path: /file/history
    method: GET
    data_selector: files
    params: {}
- name: entity_history
  endpoint:
    path: /entity/history
    method: GET
    data_selector: entities
    params: {}
- name: version_history
  endpoint:
    path: /version/history
    method: GET
    data_selector: versions
    params: {}
- name: conversations
  endpoint:
    path: /api/functions/attachConversation
    method: POST
    data_selector: conversations
    params: {}
- name: detach_conversation
  endpoint:
    path: /api/functions/detachConversation
    method: POST
    data_selector: detach
    params: {}
- name: labels
  endpoint:
    path: /api/functions/attachLabel
    method: POST
- name: change_sets
  endpoint:
    path: /api/functions/createChangeSet
    method: POST
- name: key_value
  endpoint:
    path: /key_value
    method: GET
    data_selector: records
- name: key_value_all
  endpoint:
    path: /key_value_all
    method: GET
    data_selector: records
- name: key_value_history
  endpoint:
    path: /key_value_history
    method: GET
    data_selector: records
- name: JSONPropertySchema
  endpoint:
    path: /guide/schema
    method: GET
    data_selector: properties
    params: {}
- name: AccountSchema
  endpoint:
    path: /guide/schema
    method: GET
    data_selector: properties
    params: {}
- name: InMemoryEnvironment
  endpoint:
    path: /guide/inmemoryenvironment-default
    method: GET
    data_selector: ''
    params: {}
- name: OpfsSahEnvironment
  endpoint:
    path: /guide/opfssahenvironment
    method: GET
    data_selector: ''
    params: {}
- name: log
  endpoint:
    path: /log
    method: INSERT
    data_selector: logs
    params: {}
- name: json_plugin
  endpoint:
    path: /plugins/json
    method: POST
- name: csv_plugin
  endpoint:
    path: /plugins/csv
    method: POST
- name: markdown_plugin
  endpoint:
    path: /plugins/markdown
    method: POST
- name: file
  endpoint:
    path: /file
    method: POST
    data_selector: values
- name: file_history
  endpoint:
    path: /file_history
    method: GET
    data_selector: records
- name: file
  endpoint:
    path: /file
    method: GET
    data_selector: records
    params: {}
- name: entity
  endpoint:
    path: /state
    method: GET
    data_selector: records
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: records
    params: {}
- name: file
  endpoint:
    path: /example.json
    method: GET
    data_selector: records
    params: {}
- name: file_history
  endpoint:
    path: /file_history
    method: GET
    data_selector: records
    params: {}
- name: snapshot
  endpoint:
    path: /snapshot
    method: GET
    data_selector: snapshots
- name: change
  endpoint:
    path: /change
    method: GET
    data_selector: changes
- name: change_set
  endpoint:
    path: /change_set
    method: GET
    data_selector: records
- name: change_set_label
  endpoint:
    path: /change_set_label
    method: GET
    data_selector: records
- name: change_set_edge
  endpoint:
    path: /change_set_edge
    method: GET
    data_selector: records
- name: change
  endpoint:
    path: /change
    method: GET
    data_selector: records
- name: merge_change_set
  endpoint:
    path: /createMergeChangeSet
    method: POST
    data_selector: mergeChangeSet
    params: {}
- name: conflict_resolution
  endpoint:
    path: /resolveConflict
    method: POST
    data_selector: resolvedChange
    params: {}
- name: version
  endpoint:
    path: /createVersion
    method: POST
    data_selector: newVersion
    params: {}
- name: switch_version
  endpoint:
    path: /switchVersion
    method: POST
    data_selector: switchedVersion
    params: {}
- name: merge_version
  endpoint:
    path: /createMergeChangeSet
    method: POST
    data_selector: mergeChangeSet
    params: {}
- name: thread
  endpoint:
    path: /threads
    method: POST
    data_selector: created_thread
    params: {}
- name: comment
  endpoint:
    path: /comments
    method: POST
    data_selector: created_comment
    params: {}
- name: file
  endpoint:
    path: /file
    method: GET
    data_selector: records
- name: change
  endpoint:
    path: /change
    method: GET
    data_selector: records
- name: change_set
  endpoint:
    path: /change_set
    method: GET
    data_selector: records
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: records
- name: json_plugin
  endpoint:
    path: /plugins/json
    method: GET
    data_selector: data
    params: {}
- name: csv_plugin
  endpoint:
    path: /plugins/csv
    method: GET
    data_selector: data
    params: {}
- name: markdown_plugin
  endpoint:
    path: /plugins/markdown
    method: GET
    data_selector: data
    params: {}
- name: acceptChangeProposal
  endpoint:
    path: /api/functions/acceptChangeProposal
    method: POST
    data_selector: args
    params: {}
- name: applyChangeSet
  endpoint:
    path: /api/functions/applyChangeSet
    method: POST
    data_selector: applyChangeSet
    params: {}
- name: applyCommitDatabaseSchema
  endpoint:
    path: /api/functions/applyCommitDatabaseSchema
    method: GET
    data_selector: args
    params: {}
- name: applyConversationDatabaseSchema
  endpoint:
    path: /api/functions/applyConversationDatabaseSchema
    method: GET
    data_selector: args
    params: {}
- name: attachConversation
  endpoint:
    path: /api/functions/attachConversation
    method: POST
    data_selector: Promise<void>
    params: {}
- name: attachLabel
  endpoint:
    path: /api/functions/attachLabel
    method: POST
    data_selector: args
    params: {}
- name: commit
  endpoint:
    path: /api/functions/commitIsAncestorOf
    method: GET
- name: commit
  endpoint:
    path: /commit
    method: GET
    data_selector: records
- name: createAccount
  endpoint:
    path: /api/functions/createAccount
    method: POST
    data_selector: Promise
    params: {}
- name: createChangeProposal
  endpoint:
    path: /api/functions/createChangeProposal
    method: POST
- name: createChangeSet
  endpoint:
    path: /api/functions/createChangeSet
    method: POST
- name: createCheckpoint
  endpoint:
    path: /api/functions/createCheckpoint
    method: POST
    data_selector: Promise<LixSelectable<EntityStateView>>
    params: {}
- name: createConversation
  endpoint:
    path: /api/functions/createConversation
    method: POST
    data_selector: comments
- name: conversation_message
  endpoint:
    path: /api/functions/createConversationMessage
    method: POST
- name: createHooks
  endpoint:
    path: /api/functions/createHooks
    method: GET
    data_selector: LixHooks
    params: {}
- name: createLabel
  endpoint:
    path: /api/functions/createLabel
    method: POST
    data_selector: Promise
    params: {}
- name: log_entry
  endpoint:
    path: /createLog
    method: POST
    data_selector: id
    params: {}
- name: LixEngine
  endpoint:
    path: /api/functions/createQuerySync
    method: GET
- name: createServerProtocolHandler
  endpoint:
    path: /api/functions/createServerProtocolHandler
    method: POST
    data_selector: Promise<LixServerProtocolHandler>
    params: {}
- name: createVersion
  endpoint:
    path: /api/functions/createVersion
    method: POST
    data_selector: Promise
    params: {}
- name: create_version
  endpoint:
    path: /api/functions/createVersionFromCommit
    method: POST
    data_selector: args
    params: {}
- name: detachConversation
  endpoint:
    path: /api/functions/detachConversation
    method: POST
    data_selector: args
    params: {}
- name: detachLabel
  endpoint:
    path: /api/functions/detachLabel
    method: POST
    data_selector: args
    params: {}
- name: getTimestamp
  endpoint:
    path: /api/functions/getTimestamp
    method: GET
    data_selector: Promise<string>
    params: {}
- name: nanoId
  endpoint:
    path: /api/functions/nanoId
    method: GET
    data_selector: args
    params: {}
- name: newLixFile
  endpoint:
    path: /functions/newLixFile
    method: POST
    data_selector: Promise<NewLixBlob>
    params: {}
- name: normalizeFilePath
  endpoint:
    path: /api/functions/normalizeFilePath
    method: GET
- name: lix_instance
  endpoint:
    path: /functions/openLix
    method: POST
    data_selector: Promise<Lix>
    params: {}
- name: random_function
  endpoint:
    path: /api/functions/random
    method: GET
    data_selector: result
    params: {}
- name: reject_change_proposal
  endpoint:
    path: /rejectChangeProposal
    method: POST
    data_selector: args
    params: {}
- name: diff
  endpoint:
    path: /api/functions/selectCommitDiff
    method: GET
    data_selector: diff
- name: args
  endpoint:
    path: /api/types/Lix
    method: GET
    data_selector: lix
    params: {}
- name: switchAccount
  endpoint:
    path: /api/functions/switchAccount
    method: POST
    data_selector: args
    params: {}
- name: validateLixSchema
  endpoint:
    path: /api/functions/validateLixSchema
    method: POST
    data_selector: result
    params: {}
- name: DetectedChange
  endpoint:
    path: /api/types/DetectedChange
    method: GET
    data_selector: records
- name: call
  endpoint:
    path: /call
    method: POST
    data_selector: result
    params: {}
- name: close
  endpoint:
    path: /close
    method: POST
    data_selector: result
    params: {}
- name: db
  endpoint:
    path: /db
    method: GET
    data_selector: result
    params: {}
- name: toBlob
  endpoint:
    path: /toBlob
    method: GET
    data_selector: result
    params: {}
- name: active_account
  endpoint:
    path: /api/types/ActiveAccount
    method: GET
    data_selector: active_account
- name: active_version
  endpoint:
    path: /api/types/LixActiveVersion
    method: GET
    data_selector: active_version
- name: change
  endpoint:
    path: /api/types/Change
    method: GET
    data_selector: change
- name: directory
  endpoint:
    path: /api/types/DirectoryDescriptorView
    method: GET
    data_selector: directory
- name: directory_all
  endpoint:
    path: /api/types/DirectoryDescriptorAllView
    method: GET
    data_selector: directory_all
- name: directory_history
  endpoint:
    path: /api/types/DirectoryDescriptorHistoryView
    method: GET
    data_selector: directory_history
- name: state
  endpoint:
    path: /api/types/StateView
    method: GET
    data_selector: state
- name: state_all
  endpoint:
    path: /api/types/StateAllView
    method: GET
    data_selector: state_all
- name: state_history
  endpoint:
    path: /api/types/StateHistory
    method: GET
    data_selector: state_history
- name: state_with_tombstones
  endpoint:
    path: /api/types/StateWithTombstonesView
    method: GET
    data_selector: state_with_tombstones
- name: LixEntity
  endpoint:
    path: /api/types/LixEntity
    method: GET
- name: LixEntityCanonical
  endpoint:
    path: /api/types/LixEntityCanonical
    method: GET
    data_selector: properties
    params: {}
- name: lix_file
  endpoint:
    path: /api/types/LixFile
    method: GET
    data_selector: data
    params: {}
- name: Account
  endpoint:
    path: /api/types/Account
    method: GET
    data_selector: records
- name: applyChanges
  endpoint:
    method: POST
- name: detectChanges
  endpoint:
    method: POST
- name: detectChangesGlob
  endpoint:
    method: GET
- name: renderDiff
  endpoint:
    method: POST
- name: LixSchemaDefinition
  endpoint:
    path: /api/types/LixSchemaDefinition
    method: GET
    data_selector: properties
    params: {}
- name: entryModule
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: initialMessage
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: transfer
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: StateAllUpdate
  endpoint:
    path: /api/types/StateAllUpdate
    method: GET
    data_selector: records
- name: StateAllView
  endpoint:
    path: /api/types/StateAllView
    method: GET
    data_selector: records
- name: state_commit_change
  endpoint:
    path: /api/state_commit_change
    method: GET
    data_selector: records
    params: {}
- name: StateView
  endpoint:
    path: /api/types/StateView
    method: GET
    data_selector: StateView
- name: StateWithTombstonesView
  endpoint:
    path: /api/types/StateWithTombstonesView
    method: GET
    data_selector: Selectable
- name: StateWithTombstonesView
  endpoint:
    path: /path/to/StateWithTombstonesView
    method: GET
    data_selector: records
    params: {}
- name: LixAccountSchema
  endpoint:
    path: /variables/LixAccountSchema
    method: GET
    data_selector: properties
    params: {}
- name: lix_active_account
  endpoint:
    path: /api/variables/LixActiveAccountSchema
    method: GET
    data_selector: properties
    params: {}
- name: lix_active_version
  endpoint:
    path: /lix/active/version
    method: GET
    data_selector: version_id
    params: {}
- name: lix_change_author
  endpoint:
    path: /api/variables/LixChangeAuthorSchema
    method: GET
    data_selector: properties
    params: {}
- name: lix_change_set_element
  endpoint:
    path: /api/lix_change_set_element
    method: GET
    data_selector: properties
    params: {}
- name: lix_change_set_label
  endpoint:
    path: /lix_change_set_label
    method: GET
    data_selector: records
- name: lix_commit_edge
  endpoint:
    path: /api/variables/LixCommitEdgeSchema
    method: GET
    data_selector: properties
    params: {}
- name: lix_commit
  endpoint:
    path: /lix/commit
    method: GET
    data_selector: commit_data
    params: {}
- name: LixConversationMessage
  endpoint:
    path: /api/variables/LixConversationMessageSchema
    method: GET
    data_selector: properties
    params: {}
- name: lix_conversation
  endpoint:
    data_selector: id
- name: lix_directory_descriptor
  endpoint:
    path: /api/variables/LixDirectoryDescriptorSchema
    method: GET
    data_selector: properties
    params: {}
- name: lix_file_descriptor
  endpoint:
    path: /api/variables/LixFileDescriptorSchema
    method: GET
    data_selector: properties
    params: {}
- name: lix_label
  endpoint:
    data_selector: properties
    params: {}
- name: lix_log
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LixSchemaDefinition
  endpoint:
    path: /api/variables/LixSchemaDefinition
    method: GET
    data_selector: properties
    params: {}
- name: lix_stored_schema
  endpoint:
    path: /lix/stored/schema
    method: GET
- name: LixVersionDescriptor
  endpoint:
    path: /api/lix/version/descriptor
    method: GET
    data_selector: properties
    params: {}
- name: LixVersionTip
  endpoint:
    path: /api/lixVersionTip
    method: GET
    data_selector: properties
    params: {}
- name: call
  endpoint:
    path: /api/functions/call
    method: POST
    data_selector: unknown
    params: {}
- name: close
  endpoint:
    path: /api/functions/close
    method: POST
    data_selector: void
    params: {}
- name: create
  endpoint:
    path: /api/functions/create
    method: POST
    data_selector: void
    params: {}
- name: exists
  endpoint:
    path: /api/functions/exists
    method: POST
    data_selector: boolean
    params: {}
- name: export
  endpoint:
    path: /api/functions/export
    method: POST
    data_selector: ArrayBuffer
    params: {}
- name: open
  endpoint:
    path: /api/functions/open
    method: POST
    data_selector: LixEngine
    params: {}
- name: clear
  endpoint:
    path: /api/functions/clear
    method: POST
- name: call
  endpoint:
    path: /api/functions/call
    method: POST
- name: close
  endpoint:
    path: /api/functions/close
    method: POST
- name: create
  endpoint:
    path: /api/functions/create
    method: POST
- name: exists
  endpoint:
    path: /api/functions/exists
    method: POST
- name: export
  endpoint:
    path: /api/functions/export
    method: POST
- name: open
  endpoint:
    path: /api/functions/open
    method: POST
- name: spawnActor
  endpoint:
    path: /api/functions/spawnActor
    method: POST
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Metadata is stored as a JSON object.
- Use metadata when an entity is not owned by your application.
- 'Writer keys solve a general problem: any state that can be changed by multiple
  actors needs a way to react to external updates while avoiding feedback loops from
  its own writes.'
- 'Use default deterministic mode (enabled: true) for reproducibility testing (e.g.,
  unit tests, regression tests)'
- 'Use randomLixId mode (enabled: true, randomLixId: true) for distributed testing
  scenarios (e.g., simulating multiple Lix instances syncing)'
- Lix understands the content inside file formats.
- Lix tracks actual content units as separate entities.
- Snapshots provide several key benefits in the Lix architecture
- Once created, snapshots never change, providing a reliable history
- Change sets are fundamental building blocks in Lix that represent collections of
  related changes.
- Change sets capture the state of your data at a specific point in time and track
  how that state evolves.
- Merging involves combining changes from different branches and resolving conflicts.
- Lix uses a plugin system to provide support for different file formats and data
  structures.
- Available only when lix_deterministic_mode.enabled = true.
- Persists state across toBlob()/openLix({ blob }).
- More sophisticated diff strategies and proper conflict handling are planned for
  the future.
- UUID v7 provides better database performance than nanoId due to time-based sorting,
  but produces longer IDs that are less suitable for URLs.
- Accepts `{ engine }` (or `{ lix }`) and runs next to SQLite.
- Intended for engine/router and UDFs; app code should use [uuidV7](/api/functions/uuidV7).
- The glob pattern for detectChangesGlob should be used to specify files that invoke
  detectChanges.
- Type for updating entities in specific versions
- 'Uses object type with required fields: change_set_id, change_id, entity_id, schema_key,
  file_id'
- additionalProperties is false
- The schema requires both 'parent_id' and 'child_id' as mandatory fields.
- Commit-level author account identifiers. Explicit per-change overrides live in lix_change_author.
- Domain change identifiers contained in this commit. Excludes meta changes; used
  to derive change_set_elements.
- Meta change identifiers (e.g., version tip) associated with this commit and kept
  separate from domain membership.
- Direct parent commit identifiers; used to derive commit edges and ancestry.
- 'additionalProperties: false'
- 'required fields: id, conversation_id, body'
- 'Uses additionalProperties: false'
- Requires 'id' to be present
- Identifier of the parent directory. Null indicates the virtual root directory.
- Identifier of the directory containing the file. Null indicates the virtual root
  directory.
- File extension without the leading dot. Null when no extension is present.
- ID is of type string and is generated
- A JSON schema document that also includes custom x-key and x-version properties
  for identification and versioning.
- Use this mock plugin for testing purposes. Do not use this plugin in production!
  It may change at any time.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Missing required fields: change_set_id, change_id, entity_id, schema_key, file_id'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - lix_change
  - lix_account
  - lix_change_set
  - lix_label
  - LixConversation
  - LixConversationMessage
  - LixFileDescriptor
  - LixEntity
client:
  base_url: https://lix.api.com
  headers:
    Accept: application/json
source_metadata: null
