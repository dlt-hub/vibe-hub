resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: teams_members
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
- name: statistics
  endpoint:
    path: /xenioo-api/globa-platform-api/statistics/runtime-data
    method: GET
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bot
  endpoint:
    path: /globa-platform-api/bots
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /globa-platform-api/database
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: messages_count
  endpoint:
    path: /api/messages/count
    method: GET
    data_selector: records
    params: {}
- name: messages_count
  endpoint:
    path: /basic-concepts/your-account/messages-count
    method: GET
    data_selector: records
    params: {}
- name: messages_count
  endpoint:
    path: /messages/count
    method: GET
    data_selector: records
- name: Messages Count
  endpoint:
    path: /messages/count
    method: GET
    data_selector: count
    params: {}
- name: Action Messages
  endpoint:
    path: /action/messages
    method: POST
    data_selector: action_count
    params: {}
- name: Events Webhook
  endpoint:
    path: /events/webhook
    method: POST
    data_selector: webhook_event
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: bots
    params: {}
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
    data_selector: audiences
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: data
- name: teams
  endpoint:
    path: /globa-platform-api/teams/members/list
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
    data_selector: data
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: Database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: Teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: Conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
- name: statistics
  endpoint:
    path: /xenioo-api/globa-platform-api/statistics
    method: GET
- name: broadcasts
  endpoint:
    path: /xenioo-api/globa-platform-api/broadcasts
    method: GET
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: nlp_query
  endpoint:
    path: /xenioo-api/globa-platform-api/nlp-query
    method: GET
- name: statistics
  endpoint:
    path: /xenioo-api/globa-platform-api/statistics/runtime-data
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /api/bots
    method: GET
    data_selector: data
    params: {}
- name: actions
  endpoint:
    path: /services/data/vXX.X/actions
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: database_collections
  endpoint:
    path: /globa-platform-api/database/collections/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: contacts
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: chatbot
  endpoint:
    path: /chatbot/details
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: Teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
    data_selector: teams
    params: {}
- name: Conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
    data_selector: conversations
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: master_bot
  endpoint:
    path: /master_bot
    method: GET
    data_selector: data
- name: child_bot
  endpoint:
    path: /child_bot
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: broadcasts
  endpoint:
    path: /api/v1/broadcasts
    method: GET
    data_selector: data
    params: {}
- name: chatbot
  endpoint:
    path: /api/chatbots
    method: GET
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /globa-platform-api/database/collections/list
    method: GET
    data_selector: records
- name: broadcasts
  endpoint:
    path: /api/v1/broadcasts
    method: GET
    data_selector: broadcasts
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database_collections
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: team_members
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: nlp_query
  endpoint:
    path: /xenioo-api/globa-platform-api/nlp-query
    method: GET
- name: large_language_models
  endpoint:
    path: /xenioo-api/globa-platform-api/large-language-models
    method: GET
- name: statistics
  endpoint:
    path: /xenioo-api/globa-platform-api/statistics
    method: GET
- name: broadcasts
  endpoint:
    path: /xenioo-api/globa-platform-api/broadcasts
    method: GET
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
- name: bots_list
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database_collections
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections
    method: GET
- name: teams_members
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members
    method: GET
- name: conversations_audiences
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /api/v1/documents
    method: POST
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /functions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audience-contacts
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: collection
  endpoint:
    path: /database/collections
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: collections
  endpoint:
    path: /database/collections
    method: GET
    data_selector: data
    params: {}
- name: collections
  endpoint:
    path: /database/collections
    method: GET
    data_selector: records
    params: {}
- name: collections
  endpoint:
    path: /api/collections
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /globa-platform-api/teams/members/list
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: record
  endpoint:
    path: /database/api/access/read-record
    method: GET
    data_selector: data
    params: {}
- name: List Bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: Publish Bot
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/publishing/publish
    method: POST
- name: Save To Collection
  endpoint:
    path: /database/database-api-access/save-to-collection
    method: POST
    data_selector: records
- name: read_record
  endpoint:
    path: /database/database-api-access/query-collection
    method: GET
    data_selector: records
- name: Save To Collection
  endpoint:
    path: /database/database-api-access/save-to-collection
    method: POST
    data_selector: records
    params: {}
- name: Query Collection
  endpoint:
    path: /database/database-api-access/query-collection
    method: GET
    data_selector: records
    params: {}
- name: collection
  endpoint:
    path: /data/<COLLECTIONNAME>
    method: POST
    data_selector: Id
    params: {}
- name: collection
  endpoint:
    path: /database/collections
    method: DELETE
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Delete From Collection
  endpoint:
    path: /database/database-api-access/delete-from-collection
    method: DELETE
    data_selector: records
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: nlp_query
  endpoint:
    path: /xenioo-api/globa-platform-api/nlp-query
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: CSV Direct Data
  endpoint:
    path: /database
    method: GET
- name: CSV Direct Data
  endpoint:
    path: /database
    method: GET
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
    data_selector: records
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: broadcasts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: broadcast_widget
  endpoint:
    path: /broadcast/widget
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: distribution_list
  endpoint:
    path: /broadcast/distribution_lists
    method: GET
    data_selector: lists
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: create_audience
  endpoint:
    path: /create_audience
    method: POST
    data_selector: audience_data
    params: {}
- name: create_audience
  endpoint:
    path: /broadcast/create_audience
    method: POST
    data_selector: audience
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: conversation_translation
  endpoint:
    path: /conversations/general/conversationtranslation
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: users
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: conversation_history
  endpoint:
    path: /conversations/download
    method: GET
    data_selector: full_conversation_history
- name: forget_user
  endpoint:
    path: /conversations/forget
    method: POST
    data_selector: user_forget_confirmation
- name: take_over_conversation
  endpoint:
    path: /conversations/takeover
    method: POST
    data_selector: take_over_confirmation
- name: hand_over_conversation
  endpoint:
    path: /conversations/hand_over
    method: POST
    data_selector: hand_over_confirmation
- name: lock_user
  endpoint:
    path: /conversations/lock
    method: POST
    data_selector: user_lock_confirmation
- name: unlock_user
  endpoint:
    path: /conversations/unlock
    method: POST
    data_selector: user_unlock_confirmation
- name: assign_to_operator
  endpoint:
    path: /conversations/assign
    method: POST
    data_selector: assignment_confirmation
- name: mark_as_read
  endpoint:
    path: /conversations/mark_read
    method: POST
    data_selector: read_confirmation
- name: redirect_to
  endpoint:
    path: /conversations/redirect
    method: POST
    data_selector: redirect_confirmation
- name: broadcast
  endpoint:
    path: /conversations/broadcast
    method: POST
    data_selector: broadcast_confirmation
- name: reset_conversation
  endpoint:
    path: /conversations/reset
    method: POST
    data_selector: reset_confirmation
- name: tag_conversation
  endpoint:
    path: /conversations/tag
    method: POST
    data_selector: tag_confirmation
- name: create_view_url
  endpoint:
    path: /conversations/create_view_url
    method: POST
    data_selector: view_url_confirmation
- name: create_take_over_url
  endpoint:
    path: /conversations/create_take_over_url
    method: POST
    data_selector: take_over_url_confirmation
- name: remove_all_shares
  endpoint:
    path: /conversations/remove_all_shares
    method: POST
    data_selector: remove_shares_confirmation
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /conversations/filtering
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dashboards
  endpoint:
    path: /dashboards
    method: GET
    data_selector: widgets
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /globa-platform-api/database/collections/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: scheduled_export
  endpoint:
    path: /schedule_new_export
    method: POST
    data_selector: exports
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /globa-platform-api/database
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /globa-platform-api/teams
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations
    method: GET
    data_selector: records
- name: widgets
  endpoint:
    path: /api/widgets
    method: GET
    data_selector: records
    params: {}
- name: new_users
  endpoint:
    path: /api/v1/new_users
    method: GET
    data_selector: data
- name: returning_users
  endpoint:
    path: /api/v1/returning_users
    method: GET
    data_selector: data
- name: outgoing_messages
  endpoint:
    path: /api/v1/outgoing_messages
    method: GET
    data_selector: data
- name: incoming_messages
  endpoint:
    path: /api/v1/incoming_messages
    method: GET
    data_selector: data
- name: total_outgoing_messages
  endpoint:
    path: /api/v1/total_outgoing_messages
    method: GET
    data_selector: data
- name: total_new_users
  endpoint:
    path: /api/v1/total_new_users
    method: GET
    data_selector: data
- name: total_users_counter
  endpoint:
    path: /api/v1/total_users_counter
    method: GET
    data_selector: data
- name: tag_hit_counter
  endpoint:
    path: /api/v1/tag_hit_counter
    method: GET
    data_selector: data
- name: goal_reached
  endpoint:
    path: /api/v1/goal_reached
    method: GET
    data_selector: data
- name: fallback_replies
  endpoint:
    path: /api/v1/fallback_replies
    method: GET
    data_selector: data
- name: nlp_detection
  endpoint:
    path: /api/v1/nlp_detection
    method: GET
    data_selector: data
- name: nlp_missed_detections
  endpoint:
    path: /api/v1/nlp_missed_detections
    method: GET
    data_selector: data
- name: average_conversation_length
  endpoint:
    path: /api/v1/average_conversation_length
    method: GET
    data_selector: data
- name: take_overs
  endpoint:
    path: /api/v1/take_overs
    method: GET
    data_selector: data
- name: average_support_conversation_length
  endpoint:
    path: /api/v1/average_support_conversation_length
    method: GET
    data_selector: data
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /globa-platform-api/database/collections
    method: GET
- name: teams
  endpoint:
    path: /globa-platform-api/teams/members
    method: GET
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/entries
    method: GET
- name: nlp_query
  endpoint:
    path: /globa-platform-api/nlp-query
    method: GET
- name: statistics
  endpoint:
    path: /globa-platform-api/statistics/runtime-data
    method: GET
- name: executions
  endpoint:
    path: /api/v1/executions
    method: GET
    data_selector: data
- name: new_users
  endpoint:
    path: /new_users
    method: GET
    data_selector: data
- name: returning_users
  endpoint:
    path: /returning_users
    method: GET
    data_selector: data
- name: outgoing_messages
  endpoint:
    path: /outgoing_messages
    method: GET
    data_selector: data
- name: incoming_messages
  endpoint:
    path: /incoming_messages
    method: GET
    data_selector: data
- name: total_outgoing_messages
  endpoint:
    path: /total_outgoing_messages
    method: GET
    data_selector: data
- name: total_new_users
  endpoint:
    path: /total_new_users
    method: GET
    data_selector: data
- name: total_users_counter
  endpoint:
    path: /total_users_counter
    method: GET
    data_selector: data
- name: tag_hit_counter
  endpoint:
    path: /tag_hit_counter
    method: GET
    data_selector: data
- name: goal_reached
  endpoint:
    path: /goal_reached
    method: GET
    data_selector: data
- name: fallback_replies
  endpoint:
    path: /fallback_replies
    method: GET
    data_selector: data
- name: nlp_detection
  endpoint:
    path: /nlp_detection
    method: GET
    data_selector: data
- name: nlp_missed_detections
  endpoint:
    path: /nlp_missed_detections
    method: GET
    data_selector: data
- name: average_conversation_length
  endpoint:
    path: /average_conversation_length
    method: GET
    data_selector: data
- name: take_overs
  endpoint:
    path: /take_overs
    method: GET
    data_selector: data
- name: average_support_conversation_length
  endpoint:
    path: /average_support_conversation_length
    method: GET
    data_selector: data
- name: api_success_and_failures
  endpoint:
    path: /api/v1/success_failures
    method: GET
    data_selector: records
- name: api_requests
  endpoint:
    path: /api/v1/requests
    method: GET
    data_selector: records
- name: api_errors
  endpoint:
    path: /api/v1/errors
    method: GET
    data_selector: records
- name: script_js_errors
  endpoint:
    path: /api/v1/js_errors
    method: GET
    data_selector: records
- name: account_bots
  endpoint:
    path: /api/v1/account/bots
    method: GET
    data_selector: records
- name: sent_messages
  endpoint:
    path: /api/v1/messages/sent
    method: GET
    data_selector: records
- name: storage
  endpoint:
    path: /api/v1/storage
    method: GET
    data_selector: records
- name: nlp_intents
  endpoint:
    path: /api/v1/nlp/intents
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: variables_and_tags
  endpoint:
    path: /api/variables_and_tags
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: default_variables
  endpoint:
    path: /variables
    method: GET
    data_selector: variables
- name: default_tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: quick_reply_action
  endpoint:
    path: /api/v1/quick-reply-action
    method: GET
    data_selector: data
    params: {}
- name: quick_reply_action
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.buttonaction
    method: GET
    data_selector: records
    params: {}
- name: broadcasts
  endpoint:
    path: /api/v1/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: buttons
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: buttons
    params: {}
- name: chat_delay_action
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.delayaction
    method: GET
    data_selector: records
    params: {}
- name: quick_reply_action
  endpoint:
    path: /services/data/vXX.X/sobjects/QuickReplyAction
    method: GET
    data_selector: records
    params: {}
- name: chat_delay
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.delayaction
    method: POST
    data_selector: response
    params: {}
- name: phone_quick_reply
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.phonenumberbuttonaction
    method: POST
    data_selector: response
    params: {}
- name: button
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: records
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /globa-platform-api/database/collections/list
    method: GET
- name: teams
  endpoint:
    path: /globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
- name: Email Quick Reply Action
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.emailbuttonaction
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bot
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
- name: team_members
  endpoint:
    path: /globa-platform-api/teams/members/list
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: button_settings
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: settings
    params: {}
- name: chat_delay_action
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.delayaction
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: phone_quick_reply_action
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.phonenumberbuttonaction
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: location
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: settings
    params: {}
- name: quick_reply_action
  endpoint:
    path: /actions/quick_reply
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: quick_reply_action
  endpoint:
    path: /actions/quick_reply
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: qr_image_url
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: variables
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
    data_selector: records
- name: audio_action
  endpoint:
    path: /api/audio_action
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
    data_selector: records
- name: nlp_query
  endpoint:
    path: /xenioo-api/globa-platform-api/nlp-query
    method: GET
    data_selector: records
- name: statistics
  endpoint:
    path: /xenioo-api/globa-platform-api/statistics
    method: GET
    data_selector: records
- name: location
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: settings
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: QRCode
  endpoint:
    path: /actions-and-operations/content/xenioo.bots.actions.base.imageaction-1
    method: GET
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: records
    params: {}
- name: qr_image_url
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: variables
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
- name: NLP Topics
  endpoint:
    path: /nlp/topics
    method: GET
    data_selector: topics
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams_members
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: NLP Topics Summary
  endpoint:
    path: /actions-and-operations/nlp-topics-summary
    method: GET
- name: audiences
  endpoint:
    path: /conversations/audiences
    method: GET
    data_selector: records
- name: entries
  endpoint:
    path: /conversations/entries
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: generic_input_action
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.genericrequestaction
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: number_input_action
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Phone Number
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.phonerequestaction
    method: GET
    data_selector: records
    params: {}
- name: generic_input_action
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.genericrequestaction
    method: GET
    data_selector: records
    params: {}
- name: media_attachment
  endpoint:
    path: /actions/media_attachment
    method: POST
    data_selector: data
- name: bots
  endpoint:
    path: /globa-platform-api/bots
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /globa-platform-api/database
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /globa-platform-api/teams
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations
    method: GET
    data_selector: records
- name: nlp_query
  endpoint:
    path: /globa-platform-api/nlp-query
    method: GET
    data_selector: records
- name: large_language_models
  endpoint:
    path: /globa-platform-api/large-language-models
    method: GET
    data_selector: records
- name: statistics
  endpoint:
    path: /globa-platform-api/statistics
    method: GET
    data_selector: records
- name: broadcasts
  endpoint:
    path: /globa-platform-api/broadcasts
    method: GET
    data_selector: records
- name: voice_input_action
  endpoint:
    path: /api/voice/input/action
    method: POST
    data_selector: data
    params: {}
- name: successful_user_input
  endpoint:
    path: /actions/successful_user_input
    method: POST
    data_selector: variables
    params: {}
- name: Global Detection
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.textdetectionaction
    method: GET
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
- name: input_fail_count
  endpoint:
    data_selector: description
- name: input_fail_triggered
  endpoint:
    data_selector: description
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: records
- name: email_input_action
  endpoint:
    path: /actions/email
    method: POST
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: phone_number_action
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.phonerequestaction
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
- name: attachment_input
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.attachmentinputaction
    method: GET
    data_selector: records
- name: media_attachment
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.attachmentinputaction
    method: GET
- name: voice_input_action
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.speech.speechinputaction
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: successful_user_input
  endpoint:
    path: /actions/successful_user_input
    method: POST
    data_selector: variables
    params: {}
- name: Global Detection
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.textdetectionaction
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Global Detection Action
  endpoint:
    path: /actions-and-operations/input/xenioo.bots.actions.base.textdetectionaction
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: conversation_bookmark
  endpoint:
    path: /services/data/vXX.X/sobjects/ConversationBookmark
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: conversation_bookmark
  endpoint:
    path: /api/conversation/bookmark
    method: POST
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: agent_state_check
  endpoint:
    path: /actions-and-operations/flow/xenioo.bots.actions.base.agentstatecheckaction
    method: GET
- name: conversation
  endpoint:
    path: /api/conversation
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: calendar_check
  endpoint:
    path: /calendar/check
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Calendar Check
  endpoint:
    path: /actions-and-operations/flow/calendar-check
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: conversation
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: conversation
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Include Interaction
  endpoint:
    path: /actions-and-operations/flow/include-interaction-action
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Log Message
  endpoint:
    path: /actions-and-operations/flow/log-message
    method: POST
- name: Goal
  endpoint:
    path: /actions-and-operations/flow/goal
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: chat_operator_state
  endpoint:
    path: /set-chat-operator-state
    method: POST
    data_selector: data
    params: {}
- name: chatbot
  endpoint:
    path: /services/data/vXX.X/sobjects/Chatbot
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams_members
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: Reset Conversation Action
  endpoint:
    path: /actions-and-operations/flow/reset-conversation-action
    method: GET
- name: availability
  endpoint:
    path: /actions-and-operations/availability
    method: GET
    data_selector: availability
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: records
    params: {}
- name: set_chat_operator_state
  endpoint:
    path: /api/v1/chat/operator/state
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Set Chat Operator State Action
  endpoint:
    path: /actions-and-operations/flow/xenioo.bots.actions.base.requestoperatoraction
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Schedule Behaviour Action
  endpoint:
    path: /actions-and-operations/flow/xenioo.bots.actions.base.schedulebehaviouraction
    method: GET
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
    params: {}
- name: Control Conversation Transfer Action
  endpoint:
    path: /actions-and-operations/flow/control-conversation-transfer-action
    method: POST
- name: conversation_transfer_action
  endpoint:
    path: /actions-and-operations/flow/control-conversation-transfer-action
    method: GET
    data_selector: variables
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /api/forms
    method: GET
    data_selector: data
    params: {}
- name: settings
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: settings
    params: {}
- name: form_container
  endpoint:
    path: /actions-and-operations/forms
    method: GET
    data_selector: form_settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: audiences
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: audience_contacts
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audience-contacts
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Load Single Record
  endpoint:
    path: /load/single/record
    method: GET
- name: single_record
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: cursor_current_record
    params: {}
- name: delete_records
  endpoint:
    path: /services/data/vXX.X/deleteRecords
    method: DELETE
    data_selector: records
- name: form_container
  endpoint:
    path: /actions-and-operations/forms
    method: GET
- name: Delete Records
  endpoint:
    path: /services/data/vXX.X/sobjects/DeleteRecords
    method: DELETE
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: last_database_object_id
  endpoint:
    path: /actions-and-operations/database/set-field-value
    method: POST
    data_selector: variables
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: broadcasts
  endpoint:
    path: /api/v1/broadcasts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /database/contacts
    method: GET
    data_selector: records
- name: messages
  endpoint:
    path: /database/messages
    method: GET
    data_selector: records
- name: load_single_record
  endpoint:
    path: /actions-and-operations/database/load-single-record
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Delete Records
  endpoint:
    path: /actions-and-operations/database/delete-records
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Move To Next Record
  endpoint:
    path: /actions-and-operations/database/move-to-next-record
    method: GET
- name: cursor_current_record
  endpoint:
    path: ''
    method: ''
    data_selector: complete JSON content of the record extracted by the action
    params: {}
- name: record
  endpoint:
    path: /services/data/vXX.X/sobjects/Record
    method: POST
    data_selector: records
    params: {}
- name: Save Record
  endpoint:
    path: /actions-and-operations/database/save-record
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: bots_list
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: conversations_audiences
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: collection_data
  endpoint:
    path: /database/database-api-access/query-collection
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /globa-platform-api/teams
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: field_filter
  endpoint:
    path: /actions-and-operations/database/set-field-filter-value
    method: GET
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: broadcasts
  endpoint:
    path: /api/v1/broadcasts
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /api/campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/contact
    method: GET
    data_selector: records
- name: Bots
  endpoint:
    path: /globa-platform-api/bots/list
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: one_time_notification
  endpoint:
    path: /api/notifications/one_time
    method: POST
    data_selector: data
    params: {}
- name: Carousel Template Action
  endpoint:
    path: /actions-and-operations/cards/xenioo.bots.actions.base.generictemplateaction
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: One-Time Notification Request Action
  endpoint:
    path: /actions-and-operations/integration/xenioo.bots.actions.base.dynamicreplyaction
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database_carousel
  endpoint:
    path: /actions-and-operations/database/database-carousel
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: dynamic_carousel
  endpoint:
    path: /actions-and-operations/cards/xenioo.bots.actions.base.dynamiccarouselaction
    method: GET
- name: dynamic_carousel
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: items
    params: {}
- name: Interactive Message Action
  endpoint:
    path: /actions-and-operations/integration/xenioo.bots.actions.base.dynamicreplyaction
    method: POST
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
    params: {}
- name: notification_request
  endpoint:
    path: /api/v1/notifications/request
    method: POST
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
- name: Database Carousel
  endpoint:
    path: /actions-and-operations/cards/database-carousel-action
    method: GET
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: dynamic_carousel
  endpoint:
    path: /dynamic-carousel
    method: GET
    data_selector: items
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Set Tag Action
  endpoint:
    path: /actions-and-operations/profile/set-tag-action
    method: POST
    data_selector: records
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_subscription_action
  endpoint:
    path: /api/campaign_subscription_action
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Set Campaign Subscription
  endpoint:
    path: /actions-and-operations/profile/set-campaign-subscription-action
    method: POST
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Forget User
  endpoint:
    path: /actions-and-operations/privacy/xenioo.bots.actions.privacy.privacyforgetuseraction
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: privacy_opt_in
  endpoint:
    path: /api/v1/privacy-opt-in
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /globa-platform-api/bots
    method: GET
- name: database
  endpoint:
    path: /globa-platform-api/database
    method: GET
- name: teams
  endpoint:
    path: /globa-platform-api/teams
    method: GET
- name: conversations
  endpoint:
    path: /globa-platform-api/conversations
    method: GET
- name: nlp-query
  endpoint:
    path: /globa-platform-api/nlp-query
    method: GET
- name: large-language-models
  endpoint:
    path: /globa-platform-api/large-language-models
    method: GET
- name: statistics
  endpoint:
    path: /globa-platform-api/statistics
    method: GET
- name: broadcasts
  endpoint:
    path: /globa-platform-api/broadcasts
    method: GET
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign_subscription_action
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignSubscriptionAction
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
- name: campaign_subscription_action
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignSubscriptionAction
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: device_state_switch
  endpoint:
    path: /actions-and-operations/iot/xenioo.bots.actions.base.devicestateconditionaction
    method: GET
- name: Forget User
  endpoint:
    path: /actions-and-operations/privacy/xenioo.bots.actions.privacy.privacyforgetuseraction
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: privacy_flag_condition
  endpoint:
    path: /api/v1/privacy_flag_condition
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: privacy_flag_condition
  endpoint:
    path: /actions-and-operations/privacy/xenioo.bots.actions.privacy.privacyvariableconditionaction
    method: POST
- name: call_api_service
  endpoint:
    path: /actions-and-operations/integration/xenioo.bots.actions.base.callapiserviceaction
    method: POST
    data_selector: result
    params: {}
- name: Control Device State
  endpoint:
    path: /actions-and-operations/iot/xenioo.bots.actions.base.controldevicestateaction
    method: POST
- name: actions
  endpoint:
    path: /actions
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Send SMS Message
  endpoint:
    path: /actions-and-operations/integration/send-sms-message
    method: POST
- name: send_sms
  endpoint:
    path: /send_sms
    method: POST
    data_selector: sms_details
    params:
      sender_phone_number: Sender Phone Number
      sender_name: Sender Name
      partner_id: Partner Id
      app_id: App Id
      region_id: Region Id
      destination_phone_number: Destination Phone Number
      message: Message
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sms_message_settings
  endpoint:
    path: /actions/send_sms
    method: POST
    data_selector: settings
    params: {}
- name: Merge Fields
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: POST
    data_selector: MergeFields
- name: payment_transaction
  endpoint:
    path: /services/data/vXX.X/payment/transaction
    method: POST
    data_selector: transaction_url
    params: {}
- name: dynamic_content
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: items
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
    data_selector: records
- name: post_to_facebook
  endpoint:
    path: /v9.0/{page-id}/feed
    method: POST
    data_selector: id
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Facebook
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: POST
- name: action_settings
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: settings
    params: {}
- name: Firebase Database Action
  endpoint:
    path: /actions-and-operations/integration/firebase-database-action
    method: POST
- name: firebase_action
  endpoint:
    path: /actions/firebase
    method: POST
    data_selector: data
    params: {}
- name: dynamic_content
  endpoint:
    path: /actions-and-operations/dynamic-content
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /{page-id}/posts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Post To Facebook Action
  endpoint:
    path: /actions-and-operations/integration/xenioo.bots.actions.base.integrations.facebookposttopageaction
    method: POST
- name: contact
  endpoint:
    path: /actions-and-operations/integration/activecampaign
    method: POST
    data_selector: contact
    params: {}
- name: Facebook Post
  endpoint:
    path: /actions/post
    method: POST
- name: contact
  endpoint:
    path: /contacts
    method: POST
    data_selector: contact
    params:
      email: contact_email
      first_name: contact_first_name
      last_name: contact_last_name
      list_id: target_list_id
      tags: additional_tags
      custom_fields: other_fields
- name: firebase_document
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: POST
- name: webhook_action
  endpoint:
    path: /api/webhook/action
    method: POST
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/audiences
    method: GET
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: ActiveCampaign Action
  endpoint:
    path: /actions-and-operations/integration/xenioo.bots.actions.base.integrations.activecampaigncontactaction
    method: POST
- name: contact
  endpoint:
    path: /contacts
    method: POST
    data_selector: contact
    params: {}
- name: broadcasts
  endpoint:
    path: /v1/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /v1/conversations
    method: GET
    data_selector: records
    params: {}
- name: Microsoft Teams Webhook Action
  endpoint:
    path: /actions-and-operations/integration/microsoft-teams-webhook-action
    method: POST
- name: contacts
  endpoint:
    path: /lists/{list_id}/members
    method: GET
    data_selector: members
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: database_collections
  endpoint:
    path: /xenioo-api/globa-platform-api/database/collections/list
    method: GET
    data_selector: records
- name: teams_members
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations/entries
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /3.0/lists/{list_id}/members
    method: GET
    data_selector: members
- name: contact
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: POST
    data_selector: contact
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Microsoft Teams Webhook Action
  endpoint:
    path: /actions-and-operations/integration/microsoft-teams-webhook-action
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /actions-and-operations/integration/marketing-platform-action
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /actions
    method: POST
    data_selector: result
    params: {}
- name: contact
  endpoint:
    path: /actions/contact
    method: POST
    data_selector: contact
    params:
      api_key: YOUR_API_KEY
      list_id: YOUR_LIST_ID
      email_address: CONTACT_EMAIL
      merge_fields: MERGE_FIELDS
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      search_terms: Search Terms
      max_results_count: Max Results Count
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Marketing Platform Action
  endpoint:
    path: /actions-and-operations/integration/marketing-platform-action
    method: POST
- name: contact
  endpoint:
    path: /actions/add_contact
    method: POST
    data_selector: result
    params: {}
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
    params: {}
- name: messages
  endpoint:
    path: /api/messages
    method: GET
    data_selector: data
    params: {}
- name: rss_model
  endpoint:
    data_selector: items
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: data
- name: search_results
  endpoint:
    path: /wp-json/wp/v2/search
    method: GET
    data_selector: results
    params:
      search_terms: '{{ search_terms }}'
      max_results_count: '{{ max_results_count }}'
      no_results_text: '{{ no_results_text }}'
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots/list
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams/members/list
    method: GET
    data_selector: records
- name: broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: records
    params: {}
- name: SendGrid Mail Action
  endpoint:
    path: /actions-and-operations/integration/sendgrid-mail-action
    method: POST
- name: send_mail
  endpoint:
    path: /actions/send
    method: POST
    data_selector: response
    params:
      api_key: API Key
      from: From
      to: To
      subject: Subject
      body: Body
      template_id: Template Id
- name: RSS & Podcast Feed Action
  endpoint:
    path: /actions-and-operations/integration/rss-podcast-feed-action
    method: GET
- name: rss_model
  endpoint:
    path: /actions-and-operations/dynamic-parsing
    method: GET
    data_selector: rss_model
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: broadcasts
  endpoint:
    path: /api/v1/broadcasts
    method: GET
    data_selector: data
    params: {}
- name: send_mail
  endpoint:
    path: /actions-and-operations/integration/send-mail
    method: POST
    data_selector: response
    params: {}
- name: SendGrid Mail Action
  endpoint:
    path: /actions-and-operations/integration/sendgrid-mail-action
    method: POST
- name: custom_mail_action
  endpoint:
    path: /api/v1/custom/mail/action
    method: POST
    data_selector: data
    params: {}
- name: send_mail
  endpoint:
    path: /actions/send
    method: POST
    data_selector: response
    params:
      api_key: your_sendgrid_api_key
      from: sender@example.com
      to: recipient1@example.com;recipient2@example.com
      subject: Email Subject
      body: Email body in HTML format
      template_id: your_template_id
- name: Send Custom Mail Action
  endpoint:
    path: /actions-and-operations/integration/xenioo.bots.actions.base.sendcustommailmessageaction
    method: POST
- name: broadcasts
  endpoint:
    path: /api/v1/broadcasts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
    params: {}
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: records
    params: {}
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Send Mail Action
  endpoint:
    path: /actions-and-operations/integration/send-mail-message
    method: POST
- name: Campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: Contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: authorization_token
  endpoint:
    path: /authorization/integration
    method: POST
    data_selector: token
    params: {}
- name: send_custom_mail_action
  endpoint:
    path: /actions-and-operations/integration/send-custom-mail-action
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: sso_authorize
  endpoint:
    path: /sso/authorize
    method: POST
    data_selector: Data
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
    data_selector: records
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: teams
  endpoint:
    path: /api/teams
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: teams
  endpoint:
    path: /api/v1/teams
    method: GET
    data_selector: data
    params: {}
- name: NLP Query
  endpoint:
    path: /xenioo-api/globa-platform-api/nlp-query
    method: GET
    data_selector: intent
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
- name: nlp_detect
  endpoint:
    path: /nlp/detect
    method: GET
    data_selector: results
    params: {}
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
    params: {}
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: data
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: records
- name: NLP Query
  endpoint:
    path: /xenioo-api/globa-platform-api/nlp-query
    method: GET
- name: nlp_detect
  endpoint:
    path: /nlp/detect
    method: GET
- name: broadcasts
  endpoint:
    path: /api/broadcasts
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/conversations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bots
  endpoint:
    path: /xenioo-api/globa-platform-api/bots
    method: GET
- name: database
  endpoint:
    path: /xenioo-api/globa-platform-api/database
    method: GET
- name: teams
  endpoint:
    path: /xenioo-api/globa-platform-api/teams
    method: GET
- name: conversations
  endpoint:
    path: /xenioo-api/globa-platform-api/conversations
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Some actions may require specific permissions.
- OAuth2 authentication needed for API access
- Every exchange between a bot and human is recorded and stored
- All interactions are deleted automatically within a 30-day window
- Currently indexing, embedding, and querying of custom data training requires OpenAI.
- Messages exchanged with this assistant will not be visible within the MyLINKConnect
  interface but rather within the LINK OpenAI account subscription.
- Uses OAuth2 with refresh token — requires setup of connected app in Xenioo
- OpenAI will not use data submitted by customers via our API to train or improve
  our models, unless you explicitly decide to share your data with us for this purpose.
- Any data sent through the API will be retained for abuse and misuse monitoring purposes
  for a maximum of 30 days, after which it will be deleted (unless otherwise required
  by law).
- Data Consolidation collects real-time conversation events into statistical data.
- Requires OAuth2 setup for API access
- This feature is not available for voice channels including Google Assistant and
  Alexa.
- MLC holds 3 core privacy actions to help you remain compliant.
- LINK recommends best practices to seek consent from the chatbot recipient.
- Privacy Opt-in feature is not available for voice channels including Google Assistant
  and Alexa.
- The trial account will expire after 60 days from the day of your signup.
- After 60 days, if you do not chose to upgrade to a premium plan, your account as
  well as any related information will be deleted.
- The trial account will expire after 60 days from the day of your signup. After 60
  days, if you do not chose to upgrade to a premium plan, your account as well as
  any related information will be deleted.
- Each and every Xenioo chatbot action is free to be tested and tried with your trial
  account.
- 'Sometimes, while designing your chatbot, you will encounter some actions marked
  as premium: these actions can be used and previewed at will from your trial account.'
- Some objects may return nulls in deeply nested fields
- Message count has no impact on how you build your interactions.
- Any message exchanged with the bot inside the preview section does not count toward
  your total messages limit.
- Xenioo API Actions have by default a 10 seconds timeout.
- Data is removed from the platform on a daily basis.
- While conversations are regularly deleted according to your license retention policy,
  contact information is not.
- Basic details, such as phone numbers and email addresses, will be retained indefinitely.
- While conversations are regularly deleted according to your license retention policy,
  contact information is not. Basic details, such as phone numbers and email addresses,
  will be retained indefinitely.
- Multi-Factor Authentication (MFA) is a comprehensive security method designed to
  enhance user authentication processes.
- Enabling MFA is straightforward and significantly boosts security.
- Requires setup of connected app in Xenioo
- Requires setup of connected app in api
- You are not force to create multiple behaviors in your chatbot as much as you are
  not forced to create your chatbot using only one.
- You can change your mind later on and group all interactions into a single one or
  split them into multiple behaviors using the move command.
- When you create a new chatbot, Xenioo will automatically create for you your very
  first and basic Behavior.
- Ensure proper OAuth2 setup to access endpoints.
- Rate limits apply to API usage.
- Uses OAuth2 with refresh token — requires setup of connected app in xenioo
- These arrows display flow direction. If the action redirects to another interaction
  you will see arrows describing visually the conversation flow.
- In this area you will find all fields and options required to configure the selected
  action. Different actions will have, of course, different fields.
- This small box will display the event that the action may fire. A button for example
  (or Quick Reply as it is called) may have a 'On User Click' while an input action
  may have 'On User Input'.
- As the action activates the trigger all child operations are evaluated and executed.
  Not all actions have a trigger so not all actions may contain child operations.
- This button will display the operations selection dialog. Not all actions can trigger
  operations so not all action will have this button available.
- 'This is the operation header. Clicking on the operation header will shrink it:
  this is particularly useful when an action has many attached operations. Each operation
  can be shrunk or expanded independently.'
- This is the operation delete button. Use this button to remove the operation from
  the action. All operations that are child of this operation will be removed.
- If your operation is lower in the operations list, an Up or Down button can be used
  to move the operation up or down the queue.
- These small icons will display a warning related to specific channel limitations.
  Using Xenioo you can create a chatbot that lives simultaneously on multiple platforms
  but some of them may not support some specific actions.
- If an action as a red icon for a channel it means that it is not supported while
  an orange icon indicate some kind of limitation. You can hover the specific icon
  to visualize an additional tooltip.
- Requires setup of OAuth2 in Xenioo.
- The Quick Toolbar is not available in the Broadcast designer
- Requires configuration of OAuth2 credentials in the platform
- Requires OAuth2 authentication for API access.
- Ensure to set up connected app in Xenioo.
- Some endpoints may have rate limits.
- API keys are required for integration.
- Requires OAuth2 authentication setup in Xenioo
- API rate limits apply
- Only one user can work on chatbot design at any given time.
- Multiple team members simultaneously working may lead to unwanted loss of data.
- Ensure API keys are securely stored and retrieved.
- Ensure OAuth2 token is valid before making requests
- Requires OAuth2 authentication setup in Xenioo.
- Uses OAuth2 with refresh token — requires setup of connected app in Xenioo.
- Expressions of Intents shared from a NLP Master Container cannot be changed, added
  or removed
- Intents names, topics and contexts of Intents shared from a NLP Master Container
  cannot be updated
- Entities of Intents shared from a NLP Master Container cannot be extended with new
  values. Existing entity values can be used to train chatbot local intents.
- Some API calls may require specific permissions to access.
- Rate limiting may apply depending on the API endpoint.
- OAuth2 authentication requires setup of a connected app in Xenioo.
- The Xenioo Database section gives your chatbot full access to high performance cloud
  database that can be quickly accessed by your chatbots and shared between conversations.
- Data stored in collections is persistent and shared among all conversation instances.
- Collections are containers of data very similar to a table in a standard database.
- There are no actual limits to the number of collections each chatbot can have and
  to the number of records that each collection can contain.
- Requires setup of OAuth2 client credentials in Xenioo.
- Invoking each of the following API require a Bot Level Authorization Token as detailed
  here.
- Requires setup of OAuth connected app in Xenioo
- API may have rate limits that need to be considered
- Url Filtering is a way of joining multiple filters in a Url request so that Xenioo
  Database API Interface can dynamically extract or delete documents from a given
  collection.
- Invoking each of the following API requires a Bot Level Authorization Token.
- This API requires OAuth2 authentication.
- Ensure that you have the necessary permissions set up in your Xenioo account.
- Ensure to handle rate limits as per API guidelines.
- A Bot Level Authorization Token must be created and sent in the header.
- An active Database package must be active on the target account.
- The desired collection must exist and must be flagged as accessible through API.
- Some operations may require additional permissions
- Ensure to set up the OAuth2 authorization correctly.
- Xenioo broadcasts are like scheduled tasks that can send unattended messages to
  your users based on a specific time or an event.
- Broadcasts are like scheduled tasks that can send unattended messages to your users
  based on a specific time or an event.
- Broadcasts running at the same time of others are automatically put in a queue and
  distributed as soon as the previous one is completed.
- OnDemand broadcasts cannot be invoked by free and starter level accounts.
- Enabled broadcasts are active and will be sent to the selected audience according
  to the configured schedule.
- A disabled broadcast will not be sent.
- The unique URL is related to both the bot API Key and Secret. If the secret is reset,
  your bot will use a different Broadcast Widget URL.
- The unique URL is related to both the bot API Key and Secret.
- If the secret is reset, your bot will use a different Broadcast Widget URL.
- Currently, only the SMS channel supports the Sender Field parameter.
- Distribution Lists are available as an additional package and are not enabled by
  default.
- Audiences can be evaluated in near real-time while building them.
- Distribution Logs are cleared using a tail approach that automatically deletes any
  entry older than 7 days.
- Access to this section and to specific functionalities available on each contact
  can be greatly customized by the Pro Team package.
- This feature is available only with a specific license and a sufficient number of
  tokens.
- Users are added in this list in near real-time, as soon as the first interaction
  is fired.
- Web Chat Contacts behave slightly differently from other types of contacts.
- Only tags that are created on the flow designer are listed in the menu.
- Generating a new URL will invalidate the previous one of the same type.
- Operators accessing the conversation can attach custom notes to a contact.
- Custom notes are seen only by the operators that can access the conversation and
  by the account owner.
- Operators accessing the conversation can attach custom notes to a contact. Custom
  notes are seen only by the operators that can access the conversation and by the
  account owner.
- The panel is split into four different sub panels that contain runtime, system,
  privacy, and tags information.
- Requires setup of OAuth2 connected app in Xenioo
- Available export types are Conversations, Statistics, Delivery Receipts.
- Ensure proper API key and secret configuration
- Refer to Xenioo documentation for specific endpoint details
- Ensure OAuth2 setup is complete before proceeding.
- Requires API key for access
- Some endpoints may have rate limits
- Some API responses may include null values for optional fields.
- Variable names are forced into snake_case convention.
- Each conversation can have up to 512 unique variables.
- When used on the Web Channel, this action can be enhanced with basic scripting and
  HTML formatting.
- This action will automatically enrich http and https URL found inside the text and
  transform them in clickable links.
- Dynamic Parsing fully supports real-time JSON parsing.
- Recursive Parsing can be very helpful with complex, variable based flows.
- Telegram does not allow buttons to be displayed without any preceding text. Please
  make sure to have at least one text bubble before any quick button or no button
  will be displayed.
- By default, the custom keyboard on telegram will be hidden as soon as the user clicks
  on a button or types something that receives a reply. To override this behaviour,
  disable the 'Auto-Hide Keyboard after click' flag.
- Some actions may have limitations on data format
- Telegram does not allow buttons to be displayed without any preceding text.
- By default, this action is created with an empty Go To Operation attached.
- The Override Keyboard Mode is currently supported only by the Telegram channel.
- This action will display a native location content when supported by the current
  chat channel.
- If location content is not supported by the channel and no Google Maps Static API
  configuration is supplied, this action will try to display a link button redirecting
  to Google Maps for the supplied location name and address.
- Ensure to handle multiple response formats.
- API may have rate limits.
- According on the selected Type the other settings are going to have different length
  limits in order to fit the QR Code, the length is limited by the form.
- Requires setup of OAuth2 authentication.
- Requires OAuth2 authentication for access.
- If the target chat platform does not support a location content, Google Maps Static
  API will be used instead by displaying a static image.
- Ensure OAuth2 is configured correctly to avoid authentication issues
- API rate limits may apply to prevent excessive usage
- Maxlength for Text is 1000
- Maxlength for Name is 100
- Maxlength for Telephone Number is 20
- Maxlength for Email is 254
- Maxlength for SSID is 32
- Maxlength for Password is 100
- Maxlength for Message is 100
- Maxlength for Summary is 75
- Maxlength for Location is 75
- This action is not blocking. The flow will continue and restart from the relevant
  interaction if the user writes something instead of interacting with the template
  buttons.
- This action does not produce any result in any channel.
- This action can be used only inside interactions and not as child of other actions.
- The Highly Structured Message action will deliver a WhatsApp Business template in
  full accordance to Facebook API.
- This action can only be attached as a Global Bot Operation and will always be executed
  regardless of the current chatbot state even in face of blocking actions.
- This action is halting the conversation.
- 'Text detection can happen in two different ways: using simple text or using a Regular
  Expression.'
- Some API endpoints may have rate limits.
- This action can only be attached as a Global Bot Operation and will always be executed
  regardless of the current chatbot state.
- This execution mode ensures that any audio sent by the user is first parsed and
  passed to every action like standard text.
- Ensure to set up OAuth2 credentials in the Xenioo dashboard
- This action is halting the conversation. The chatbot is halted at the input point
  and will not proceed unless the conditions specified in the settings are met.
- Requires OAuth2 setup for accessing media attachment actions.
- This API requires a valid authentication setup.
- Text detection can happen using simple text or Regular Expression.
- Global Detection Action is used for text detection.
- The action is halting the conversation.
- If the maximum number of wrong answers is reached, the Successful User Input will
  still be triggered.
- Ensure proper authentication setup for API access.
- Check API limits to avoid throttling on requests
- Voice Input Action will hold the conversation until a valid voice message is received.
- Ensure to set up the application in the Xenioo console for OAuth.
- Some API calls may have rate limits.
- Requires OAuth2 authentication setup
- Some objects like Conversation may return nulls in deeply nested fields
- Some API calls may have rate limits
- Requires setup of connected app in Xenioo.
- Xenioo API requires OAuth2 authentication.
- Make sure the bot you're referencing is online when using the 'Include Interaction'
  action.
- If it's offline, the action will fail. Even if the bot goes offline later, this
  action will still break during the flow.
- Each Random Split action will run on a single chance roll for every interaction
  executed.
- Xenioo will not enforce a 100% total on all splits.
- Use this action whenever you need to reset the current conversation from the flow
  and/or clear any variable you may have used.
- Resetting Variables and Tags won't affect core variables.
- If it's offline, the action will fail.
- Ensure correct permissions are set for the OAuth app
- Requires setup of OAuth2 for authentication.
- The Control Value field supports multiple values checking in a single action.
- Numeric criteria like Greater Than, Lesser Than or Between will always automatically
  attempt a conversion of the selected variable value to a number.
- This action can transfer the current conversation to another chatbot without leaving
  the current channel.
- Any execution of this action will use 3 action messages for each activation.
- While under transfer state, the target chatbot cannot transfer the conversation
  to any other bot.
- Requires setup of OAuth in Xenioo.
- Using an empty title for the form will fully hide the floating area title zone.
- Hiding both confirm and cancel button will hide the floating area buttons zone.
- This action is available only to Premium Accounts.
- The conversation happens for the user seamlessly, with no information about the
  transfer.
- Requires OAuth2 authentication setup.
- If no unique id is specified, this action will delete all records that satisfy the
  given filters. Records are physically deleted from the collection with no way to
  retrieve them.
- If no unique id and not filters are specified, the action won't execute.
- This action alone does not produce any result. At least one Field Operation must
  be attached for the action to be executed.
- Regardless of the selected Save Mode, if no unique id is specified for the record
  or no record exists with the specified value, the Save Mode will be automatically
  set to replace whole record mode, possibly generating a new database record.
- Requires OAuth2 authentication with refresh token.
- Ensure that OAuth2 is properly configured in your account.
- Rate limits may apply based on your account type.
- Some API endpoints may require additional parameters for filtering.
- This action will retrieve a single record from a given collection by using a supplied
  unique id or a filter.
- This action will retrieve a single record from the specified collection.
- If no unique id is specified, this action will trigger all filters added as operations.
- This action does not directly extract any data but instead create a record cursor
  that can extract a single record on each read using a Move To Next Record action.
- If no Field Filter Operation is used, this action will open a record cursor for
  all of the records of the selected collection.
- Regardless of the selected Save Mode, if no unique id is specified for the record
  or no record exist with the specified value, the Save Mode will be automatically
  set to replace whole record mode, possibly generating a new database record.
- All filters, except Is Empty/Has Value apply only to records inside the collection
  that has the specified field.
- If the Value field is left empty and Criteria is not Empty/Has Value, the criteria
  will be forced to Empty.
- Some responses may contain null values
- Make sure to configure OAuth correctly to avoid authentication issues.
- This action has no settings.
- This action automatically will trigger any child operation when no more records
  are found in the current cursor.
- Requires OAuth2 authentication and setup of API keys.
- Rate limiting may apply to API calls.
- This action represents a field filter that can be applied to a Query, Load or Delete
  action.
- Requires OAuth2 authentication
- API responses may vary based on user permissions
- Requires OAuth2 setup
- Data may be rate-limited
- Ensure that the OAuth2 connected app is properly set up.
- Check for nulls in certain fields when retrieving data.
- Interactive Message are a WhatsApp native message type. On channels that do not
  have this type of message, Xenioo will automatically revert to a standard Carousel
  Action.
- Button messages can have a maximum of 3 buttons while Button Lists can go up to
  10.
- Requires OAuth2 setup for access.
- Displays a dynamically generated carousel based on a previous Xenioo Database Collection
  Query
- This action will display a dynamically generated carousel based on standard Xenioo
  Action Model Json content from either a Url or a variable.
- The Dynamic Carousel Action will be activated by a very specific JSON model that
  represents the carousel cards and buttons.
- This action does not produce any variable.
- Interactive Message are a WhatsApp native message type.
- OAuth2 requires a connected app setup in Xenioo
- If a math operation mode (e.g. Multiply) is used on a variable containing text,
  the value of the variable will be reset to the specified value.
- Variables can be set to contain multi-line text by using newline escaping with \r
  and \n.
- This action will create a carousel containing as many cards as records in the currently
  active query.
- The dynamic contents of each card can be set using standard dynamic parsing variables
  referencing the cursor_current_record variable.
- Some responses may vary based on user permissions
- Tags can be used to later identify the user as well as redirect a conversation flow
  using switches.
- Ensure the API keys are properly set in dlt secrets.
- Rate limits may apply to API calls.
- Uses OAuth2 with refresh token - requires setup of connected app in api
- This action will subscribe or unsubscribe the current user from the selected campaign.
- Ensure to setup OAuth2 authentication before accessing the API.
- Uses OAuth2 with refresh token.
- This action will remove a tag from the user profile.
- Requires setup of connected app in Xenioo API
- Some API actions may have rate limits or require specific permissions
- This operation can be used to call any external HTTP or HTTPS Web API services.
- Xenioo will never add any header or default call value to the request.
- Xenioo will invoke the URL using standard HTTP format
- A slow API call can slow down your bot response times and performance
- Depending on the selected provider not all settings may be required or displayed.
- Merge Fields should be specified with one value per line with a name=value syntax.
- This action requires a Premium Account to be used on a live chatbot.
- This action will generate a unique URL that will lead the user to the payment flow.
- Ensure the page access token is valid and has the necessary permissions
- All posts made by this action will have Xenioo as publisher.
- Merge Fields should be specified with one value per line with a name=value syntax.
  Merge fields should exist in the target list.
- Use this action to insert, update, delete or retrieve one or more Firebase cloud
  documents from your Firebase account.
- Requires Facebook App setup and permissions to access data
- API calls may be subject to rate limits
- Ensure to set up OAuth2 for authentication properly.
- This action can be used to post to a standard text message to a Microsoft Teams
  Webhook
- Requires a valid MailChimp API key.
- Rate limits apply; check documentation for details.
- Both API Key and List Id must be retrieved from your Mailchimp account.
- This action can be used to post to a standard text message to a Microsoft Teams
  Webhook.
- The List Name must be a valid name from your Marketing Platform defined profiles
  list. If the list is not found, the action will not be completed.
- Merge fields should be specified in a NAME=VALUE notation, with one field on each
  line.
- By default a Wordpress website may not have standard REST API enabled for searching.
- Requires OAuth2 setup with proper scopes.
- Uses API key for authentication.
- Ensure that the API key is valid and has the required permissions.
- This action will send a mail message using your SendGrid service account.
- Multiple addresses can be specified in the To field by separating each one with
  a semicolon.
- The Body setting can contain full html formatting. Different mail clients may choose
  to render custom html differently.
- Requires OAuth2 authentication.
- Check API documentation for rate limits.
- Ensure the connected app is set up correctly for OAuth2 authentication.
- Custom Mail Action may have specific payload requirements.
- The Body setting can contain full html formatting.
- Requires setup of a connected app in Xenioo.
- Global Platform API can be enabled as an additional package.
- Some API calls may require specific permissions.
- All global platform API require an authorization token to work.
- This action will send a customized mail message to one or more recipients.
- Requires OAuth2 setup for authentication
- The token generated cannot be used for any other type of Platform API requests.
- API requires setup of connected app in Xenioo
- The RSS feed contents are automatically updated once every hour.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API keys or tokens'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- '400 Bad Request: Invalid request parameters.'
- '401 Unauthorized: Check your OAuth token.'
- '429 Too Many Requests: Rate limit exceeded, slow down your requests.'
- '401 Unauthorized: Check your OAuth credentials.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your token validity and permissions'
- '401 Unauthorized: Check OAuth token validity.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure API key is valid.'
- '429 Too Many Requests: Rate limit exceeded.'
- '429 Too Many Requests: Exceeded the rate limit'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: The requested resource does not exist'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify API key and token.'
- '401 Unauthorized: Check your API key and token'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Check your credentials or token expiration.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your credentials and token status.'
- '404 Not Found: Verify the endpoint path or resource.'
- 'REQUEST_LIMIT_EXCEEDED: Reduce API call frequency'
- '401 Unauthorized: Verify client credentials'
- '404 Not Found: Ensure the requested resource exists.'
- '400 Bad Request: The call does not contain the data required to be fulfilled.'
- '404 Not Found: The specified collection has not been found.'
- '403 Unauthorized: The specified collection cannot be access through API'
- 'RATE_LIMIT_EXCEEDED: Please reduce the frequency of API calls.'
- '400: Bad Request. The call does not contain the data required to be fulfilled.'
- '404: Not Found. The specified collection has not been found.'
- '403: Unauthorized. The specified collection cannot be access through API'
- '200: Ok. The request has been successfully fulfilled.'
- '404 Not Found: Ensure the endpoint is correct'
- '403 Unauthorized: The specified collection cannot be accessed through API'
- If the user has no remaining AI tokens, an error banner will be displayed within
  the conversation, and no translation will occur.
- '401 Unauthorized: Check your API key'
- '401 Unauthorized: Check your access token.'
- '401 Unauthorized: Check API key or token'
- '429 Too Many Requests: Rate limit exceeded'
- '404 Not Found: Check the resource path or ID.'
- '401 Unauthorized: Verify your authentication credentials.'
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: Insufficient permissions for this action'
- '401 Unauthorized: Check client credentials or token validity'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Try again later or contact support'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Validate API credentials'
- '429 Too Many Requests: Slow down request rate'
- '401 Unauthorized: Verify the access token.'
- '404 Not Found: Ensure the endpoint exists.'
- '401 Unauthorized: Check your authentication credentials.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify your authentication credentials'
- '429 Too Many Requests: Throttle your requests'
- '429 Too Many Requests: You have exceeded the rate limit.'
- '401 Unauthorized: Check your OAuth token and permissions'
- '404 Not Found: Verify endpoint URL or resource availability'
- 'input_fail_triggered: True if the maximum number of wrong inputs has been reached.
  Otherwise empty.'
- '401 Unauthorized: Token may have expired.'
- '404 Not Found: Invalid endpoint.'
- Successful User Input will still be triggered if the maximum number of wrong answers
  is reached.
- '401 Unauthorized: Check your credentials.'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint and resource.'
- '429 Too Many Requests: You have exceeded the API rate limit'
- '401 Unauthorized: Check your API key or OAuth token'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of API calls.'
- 'INVALID_TOKEN: Refresh the OAuth token.'
- '401 Unauthorized: Ensure that access tokens are valid'
- '404 Not Found: Verify the endpoint path and parameters'
- '401 Unauthorized: Check client credentials or token expiration.'
- '401 Unauthorized: Check your OAuth credentials'
- '400 Bad Request: Ensure the request body is properly formatted'
- If the total of all the splits on an interaction amount to more than 100%, the splits
  that surpass it won't be executed.
- '401 Unauthorized: Check your credentials and token.'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: Verify the endpoint or resource.'
- '401 Unauthorized: Check your OAuth token or scopes.'
- '401 Unauthorized: Check credentials or token expiration.'
- '404 Not Found: Endpoint may be incorrect.'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Check your OAuth token validity.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Check authentication credentials.'
- '500 Internal Server Error: Try again later'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Validate your credentials.'
- '500 Internal Server Error: Retry the request later'
- '401 Unauthorized: Check the provided credentials and token.'
- '429 Too Many Requests: Reduce the frequency of API calls.'
- '401 Unauthorized: Verify your authentication details.'
- 'Channel specific availability follows the table below: Facebook: Revert to Carousel,
  WhatsApp: Provider Dependent, Telegram: Revert to Carousel, Web: Revert to Carousel,
  Alexa: Not Available, Google Assistant: Fully Available, Slack: Fully Available,
  Teams: Revert to Carousel, API: Fully Available.'
- 'INVALID_CREDENTIALS: Check your client_id and client_secret.'
- 'TOKEN_EXPIRED: Refresh your access token.'
- 'Revert to Carousel: Triggered on channels that do not support interactive messages.'
- 'Not Available: For channels like Alexa.'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check if your access token is valid.'
- '403 Forbidden: Ensure you have the required permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '400 Bad Request: Validate the request format and parameters.'
- '200 OK: Successful API call'
- Error messages from the remote URL
- '401 Unauthorized: If using Username and Password without Challenge Authentication
  Mode'
- '200: OK'
- '400: Bad Request'
- '401: Unauthorized'
- '401 Unauthorized: Verify access tokens and permissions'
- '403 Forbidden: Check if you have access to the requested resource'
- '401 Unauthorized: Ensure valid OAuth token.'
- '401 Unauthorized: Invalid API key.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Invalid API key'
- 'email_empty: The email field is null or empty'
- 'operation_failed: There was a generic error while executing the action'
- 'getlist_failed: There was an error while getting the Marketing Platform list informations'
- 'deleteprofile_failed: There was an error while deleting the Marketing Platform
  profile'
- 'resubscribeprofile_needed: The Marketing Platform profile for the specified email
  is deleted and the ''force resubscribe'' flag is not set'
- 'addprofile_failed: There was an error while adding the Marketing Platform profile'
- 'updateprofile_failed: There was an error while updating the existing Marketing
  Platform profile'
- 'resubscribeprofile_failed: There was an error while resubscribing the Marketing
  Platform profile to the list'
- '401 Unauthorized: Verify token validity.'
- '404 Not Found: Ensure endpoint is correct.'
- '401 Unauthorized: Check API key.'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check your client credentials.'
- '404 Not Found: Ensure resource path is correct.'
- '400 Bad Request: Check the request payload for errors'
- '401 Unauthorized: Verify the access token and its scopes'
- '404: Not Found. The specified account API key has not been found.'
- '403: Unauthorized. The specified account API key is related to a free account or
  an account that cannot integrate with Global Platform API.'
- '400: Bad Request. The request is incomplete or cannot be carried on with the supplied
  data.'
- '404: Not Found. The specified chatbot, account or team member have not been found.'
- '401 Unauthorized: Recheck OAuth credentials'
- '400 Bad Request: The supplied token is invalid or does not have enough permissions.'
- '404 Not Found: The account specified by the token could not be found.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth2
  - AccessToken
  - ClientCredentials
  - OAuthToken
  - UserAccessToken
  - PageAccessToken
  - AppAccessToken
  - Authorization
client:
  base_url: https://api.xenioo.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.xenioo.com/oauth2/token
    client_id: '{{ dlt.secrets[''xenioo_client_id''] }}'
    client_secret: '{{ dlt.secrets[''xenioo_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''xenioo_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
