resources:
- name: follow_user
  endpoint:
    path: /users/:username/follow
    method: PUT
- name: read_user_follows
  endpoint:
    path: /users/:username/follows
    method: GET
    data_selector: data
- name: purchase_asset
  endpoint:
    path: /elements/common/purchase-asset
    method: POST
- name: read_permissions
  endpoint:
    path: /datasets/:id/permissions
    method: GET
- name: share_asset
  endpoint:
    path: /datasets/:id/share
    method: PUT
- name: create_team
  endpoint:
    path: /teams/create
    method: POST
    data_selector: team
    params: {}
- name: join_team
  endpoint:
    path: /teams/join
    method: POST
    data_selector: team
    params: {}
- name: files
  endpoint:
    path: /files
    method: POST
    data_selector: files
    params: {}
- name: structure_doping
  endpoint:
    path: /materials/structure/doping
    method: POST
    data_selector: records
    params: {}
- name: thermo_ehull
  endpoint:
    path: /materials/thermo/ehull
    method: POST
    data_selector: records
    params: {}
- name: structure_cost
  endpoint:
    path: /structure/cost
    method: POST
    data_selector: records
    params: {}
- name: structure_supercell
  endpoint:
    path: /structure/supercell
    method: POST
    data_selector: records
    params: {}
- name: cif_to_xrd
  endpoint:
    path: /api/cif_to_xrd
    method: POST
    data_selector: response
    params: {}
- name: xrd_to_cif
  endpoint:
    path: /api/xrd_to_cif
    method: POST
    data_selector: response
    params: {}
notes:
- Generate an API key from Settings > API Keys
- 'Team names begin with #.'
- Create a public team, or a private team scoped to your organization.
- Create an API key to securely access the API.
- Each dataset automatically exposes a REST API, generated from its schema, so you
  can query or update data programmatically right away.
- Services give users the ability to integrate their own custom APIs into Ouro.
- APIs can be accessed via HTTP requests.
- Well-documented APIs with clear use cases and solid performance are always in demand.
- A new base URL to use
- An API key to pass with requests as an Auth header
- The Services are provided on an as-is and as-available basis.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Ehull endpoint is currently down
- Ouro is powered by bitcoin now
- Anyone can monetize assets, for free
errors:
- '400: Bad Request - The request was unacceptable, often due to missing a required
  parameter.'
- '401: Unauthorized - No valid API key provided.'
- '403: Forbidden - The API key doesn''t have permissions to perform the request.'
- '404: Not Found - The requested resource doesn''t exist.'
- '409: Conflict - The request conflicts with another request (perhaps due to using
  the same idempotent key).'
- '429: Too Many Requests - Too many requests hit the API too quickly. We recommend
  an exponential backoff of your requests.'
- '5xx: Server Errors - Something went wrong on Ouro''s end.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.ouro.foundation
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
