resources:
- name: browse
  endpoint:
    path: /ws/public/browse/{group}/{repo}/{type}/{refId}
    method: GET
    data_selector: data
    params:
      group: group
      repo: repo
      type: type
      refId: refId
      commitId: commitId
- name: groups
  endpoint:
    path: /ws/public/groups
    method: GET
    data_selector: data
    params:
      page: page
      pageSize: pageSize
      filter: filter
      onlyIfCanWrite: onlyIfCanWrite
- name: repository
  endpoint:
    path: /ws/public/repository
    method: GET
    data_selector: data
    params: {}
- name: repository_settings
  endpoint:
    path: /ws/public/repository/{group}/{repo}
    method: GET
    data_selector: data
    params:
      group: group
      repo: repo
- name: search
  endpoint:
    path: /ws/public/search
    method: GET
    data_selector: data
    params:
      query: query
      group: group
      repositoryId: repositoryId
      type: type
      categoryPaths: categoryPaths
      flowType: flowType
      processType: processType
      modellingApproach: modellingApproach
      validFromYear: validFromYear
      validUntilYear: validUntilYear
      location: location
      contact: contact
      page: page
      pageSize: pageSize
      filter: filter
- name: download_json_prepare
  endpoint:
    path: /ws/public/download/json/prepare/{group}/{repo}
    method: GET
    data_selector: data
    params:
      group: group
      repo: repo
      commitId: commitId
      path: path
- name: download_json
  endpoint:
    path: /ws/public/download/json/{token}
    method: GET
    data_selector: data
    params:
      token: token
- name: repository_avatar
  endpoint:
    path: /ws/public/repository/avatar/{group}/{repo}
    method: GET
    data_selector: data
    params:
      group: group
      repo: repo
- name: repository_file
  endpoint:
    path: /ws/public/repository/file/{group}/{repo}/{type}/{refId}/{path}
    method: GET
    data_selector: data
    params:
      group: group
      repo: repo
      type: type
      refId: refId
      path: path
- name: search_flowLinks
  endpoint:
    path: /ws/public/search/flowLinks/{flowRefId}
    method: GET
    data_selector: data
    params:
      flowRefId: flowRefId
      commitId: commitId
      direction: direction
      repositoryId: repositoryId
      page: page
      pageSize: pageSize
      filter: filter
notes:
- Public API allows unrestricted access without authentication.
errors:
- '200 OK: The request was successful, and the data is returned.'
- '400 Bad Request: The request was invalid, likely due to incorrect parameters.'
- '404 Not Found: The requested resource could not be found.'
- '500 Internal Server Error: An error occurred on the server.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://lcacommons.gov/lca-collaboration/ws/public/
source_metadata: null
