resources:
- name: managed_users
  endpoint:
    path: /api/managed_users/:managed_user_id/properties
    method: GET
    data_selector: ''
    params: {}
- name: connections
  endpoint:
    path: /api/managed_users/:managed_user_id/connections
    method: GET
    data_selector: ''
    params: {}
- name: recipes
  endpoint:
    path: /api/managed_users/:id/recipes
    method: GET
    data_selector: ''
    params: {}
- name: lookup_tables
  endpoint:
    path: /api/managed_users/:managed_user_id/lookup_tables
    method: GET
- name: lookup_row
  endpoint:
    path: /api/managed_users/:managed_user_id/lookup_tables/:lookup_table_id/lookup
    method: GET
- name: list_rows
  endpoint:
    path: /api/managed_users/:managed_user_id/lookup_tables/:lookup_table_id/rows
    method: GET
- name: add_row
  endpoint:
    path: /api/managed_users/:managed_user_id/lookup_tables/:lookup_table_id/rows
    method: POST
- name: update_row
  endpoint:
    path: /api/managed_users/:managed_user_id/lookup_tables/:lookup_table_id/rows/:row_id
    method: PUT
- name: delete_row
  endpoint:
    path: /api/managed_users/:managed_user_id/lookup_tables/:lookup_table_id/rows/:row_id
    method: DELETE
- name: get_row
  endpoint:
    path: /api/managed_users/:managed_user_id/lookup_tables/:lookup_table_id/rows/:row_id
    method: GET
- name: create_Workflow_apps_pages
  endpoint:
    path: /workflow-apps/pages-create
    method: GET
    data_selector: permissions
    params: {}
- name: create_Workflow_app
  endpoint:
    path: /workflow-apps/create-app
    method: GET
    data_selector: permissions
    params: {}
- name: manage_Workflow_apps_access
  endpoint:
    path: /workflow-apps/manage-access
    method: GET
    data_selector: permissions
    params: {}
- name: configure_Workflow_apps_portal_settings
  endpoint:
    path: /workflow-apps/portal-settings
    method: GET
    data_selector: permissions
    params: {}
- name: manage_Workflow_apps_portal_users
  endpoint:
    path: /workflow-apps/portal-users
    method: GET
    data_selector: permissions
    params: {}
- name: data_table
  endpoint:
    path: /data-tables
    method: GET
- name: workflow_apps_connector
  endpoint:
    path: /workflow-apps-connector
    method: GET
- name: projects
  endpoint:
    path: /data/v1/projects
    method: GET
- name: recipes
  endpoint:
    path: /data/v1/recipes
    method: GET
- name: job_history
  endpoint:
    path: /data/v1/job_history
    method: GET
- name: workflow_apps
  endpoint:
    path: /data/v1/workflow_apps
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /oem/api/customers
    method: GET
    data_selector: records
- name: usage_metrics
  endpoint:
    path: /oem/api/usage_metrics
    method: GET
    data_selector: records
- name: endpoint
  endpoint:
    path: /services/data/vXX.X/sobjects/Endpoint
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users/{user_id}
    method: PUT
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: API client
  endpoint:
    path: /ja/api-mgmt/api-client-mgmt.html
    method: GET
- name: access profile
  endpoint:
    path: /ja/api-mgmt/api-client-mgmt.html#access-profile
    method: GET
- name: API Activity
  endpoint:
    path: /api-activity
    method: GET
- name: Peak concurrent API requests
  endpoint:
    path: /peak-concurrent-requests
    method: GET
- name: Top request count
  endpoint:
    path: /top-request-count
    method: GET
- name: api_logs
  endpoint:
    path: /api/logs
    method: GET
    data_selector: logs
    params: {}
- name: api_logs
  endpoint:
    path: /api/logs
    method: GET
    data_selector: logs
    params: {}
- endpoint:
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- endpoint:
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: zendesk_demo
  endpoint:
    path: /demo/zendesk
    method: GET
- name: order_details
  endpoint:
    path: /orders/{order_id}/
    method: GET
    data_selector: records
- name: New event via polling
  endpoint:
    path: /connectors/workato-webhooks/wizard.html
    method: GET
- name: webhook_trigger
  endpoint:
    path: /webhooks
    method: POST
    data_selector: event
    params: {}
- name: API concurrency settings
  endpoint:
    path: /api/concurrency
    method: GET
    data_selector: settings
    params: {}
notes:
- AI gateway collections are versioned using a unique 1-10 character version identifier.
- A short description of the collection.
- Workatoは、エラーと例外処理のベストプラクティスの採用を推奨しています。
- API プラットフォームはアドオン機能です。
- API パブリッシャは、エンドポイントへのアクセスを制御し、リクエストを監視し、使用に対して制限を設定することも可能です。
- 会社がDocuSignを通じてWorkatoのAI機能付加契約に署名し、同意していること。
- ワークスペースでAdmin（システムロール）に割り当てられていること。
- On-premise access is enabled for select users only. Contact your Customer Success
  Manager for details.
- Workflow apps is available to direct customers on specific pricing plans, but isn’t
  available to Embedded partners or their customers.
- Each application has a dedicated data table that stores relevant information.
- The Workflow apps connector enables you to integrate your applications into your
  workflows.
- Maximum expiration time for a task is 370 days
- Maximum number of workflow stages is 1,000
- Maximum number of user groups per user is 50,000
- Maximum file size for files uploaded to Pages is 100 MB
- Maximum number of records the Workflow apps New open or search event from a drop-down
  component trigger can return is 1,000
- Maximum number of records searchable using 'contains' logic in data tables is 100
- The Workflow apps portal is designed for business users inside your organization
  and beyond.
- Ensure that the destination project name matches the name of the project in the
  source workspace.
- Workato allows organizations to streamline and automate complex business workflows
  across various applications and data systems.
- Data orchestration is included in specific pricing plans for direct customers.
- Workato enables you to build effective data pipelines that can combine and harmonize
  data from different sources.
- API publishers can control access to endpoints, monitor requests, and set limits
  on usage.
- Genies are available to all users in the US datacenter.
- Copilots do not have granular permission settings. When you enable it in your workspace,
  all collaborators within your workspace can access it, regardless of their role.
- AI by Workato processes data using Anthropic's Sonnet 4 model.
- AI by Workato doesn't use user data for training purposes.
- Enabling AI by Workato affects all environments within your workspace.
- IDP processes documents up to 15 pages.
- IDP supports up to 100 fields with a maximum of 5 nested levels.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Use cases are intended to serve as examples.
- On-prem connectivity is included in specific pricing plans for direct customers
  and is available to Embedded partners and their end customers for an additional
  fee.
- Enterprises deploy applications and databases within a restricted network to exercise
  greater control over security and privacy.
- Workato’s troubleshooting resources provide comprehensive guidance on addressing
  errors and unexpected recipe behaviors.
- It covers common issues such as design-time errors, run-time errors, timeouts, and
  connection issues.
- Additionally, it covers best practices for error handling, debugging tools like
  job debug tracing, and specific troubleshooting solutions for various apps.
- Workato supports OAuth 2.0 for connecting to remote systems using user-supplied
  credentials.
- Some objects like Contact may return nulls in deeply nested fields
- Embedded enables you to leverage Workato's comprehensive suite of integration tools.
- You must configure a SAML-based SSO through your IdP before you can provide a user
  with access.
- Ensure that the SAML-based SSO authentication toggle is enabled.
- API コレクションはフォルダーと関連付けることができるため、フォルダーに追加された新しい API レシピは、コレクションに自動的に追加されます。
- デフォルトでは、新しいエンドポイントはすべて無効になっています。
- API トークンはパスワードのように扱う必要があります。
- 同じ API トークンを再利用しない
- API トークンを定期的に更新する
- IP アドレスを許可リストに追加すると、API にアクセスできる発信元 IP を制限できます。
- JWT トークンの使用を検討する
- API へのユーザーアクセスを監視する
- クライアントごとに一意の API キーが生成されます。
- API キーは機密情報として扱ってください。
- Uses custom domains for API endpoints.
- Custom domains are case insensitive.
- oauth2 is a reserved namespace and cannot be used as a path prefix.
- Track and analyze API usage and performance with comprehensive monitoring and analytics
  tools.
- Logs help you monitor usage, troubleshoot failures, and track performance over time.
- Filters reset after you leave the page.
- Treat API tokens like a password
- Don't re-use the same API token
- Periodically refresh API tokens
- Use IP allowlists
- Consider using JWT tokens
- Monitor user access to APIs
- Workato's API gateway adopts a low-code/no-code approach.
- API gateway supports various authentication methods.
- AI gateway collections allow you to specify an authorization mechanism between Workato
  and the AI agent to keep your requests secure.
- AI gateway collections allow you to upload you OpenAPI Specification (OAS) from
  Workato to prevent additional processing for your AI agents.
- API access policies allow you to enforce rate limiting and quota management.
- Using Workato's API management tools, you can ensure your APIs are secure and compliant
  with industry standards.
- Custom domains aren't currently supported for the developer portal.
- Endpoints can be either Active or Inactive
- Path templating is only available for collections with API prefixes enabled.
- Use curly braces {} to mark parts of the URL as a path parameter.
- Endpoint paths must include one or more segments separated by a /.
- Caching is set on a per-endpoint basis
- Only GET methods support caching
- To view details about cached responses, navigate to API platform > Logs.
- Cached entries clear automatically, based on the retention period you define.
- Occasionally, clients decide to request the latest state by instructing the platform
  to re-validate the cached entry.
- Recipe-based endpoints provide external access to automate tasks defined within
  your Workato recipes.
- Workspaces have a limit of 10,000 cache entries
- Default cache time-to-live period is 600 seconds (10 minutes), maximum is 3600 seconds
  (60 minutes).
- Request timeout must be between 1 and 30 seconds, with 30 seconds as the maximum
  and default value.
- Request timeout default is 30 seconds, maximum is 240 seconds.
- Cache response default time-to-live is 600 seconds, maximum is 3600 seconds.
- Defines the data format of the request.
- Defines the expected schema request bodies must have.
- Defaults to JSON if left blank.
- No support for uploading binary files / attachments
- No support for GraphQL 'subscription' operation type
- The connector requires an on-prem agent.
- It can connect to web services located both in private networks and in the cloud.
- 'Standard job execution timeout: 180 seconds'
- 'Job execution timeout for REST connector actions: If wait for response is true:
  3,600 seconds (1 hour), If wait for response is false: 5,400 seconds (1.5 hours)'
- 'Job execution timeout for Salesforce connector actions: 24 hours'
- 'Job execution timeout for ServiceNow connector actions: 600 seconds'
- 'Job execution timeout for SFTP actions: 700 seconds'
- 'Read request timeout: 180 seconds'
- 'Read request timeout for REST connector actions: Variable. If wait for request
  is true, the timeout is 3,600 seconds (1 hour). Otherwise, the timeout is 120 seconds.'
- This trigger only passes you the API URL to fetch the actual data of the order that
  has been placed.
- This trigger only reads the first page of records in APIs that enforce pagination.
- Don't hard-code sensitive information, such as tokens, usernames or passwords, or
  client IDs/secrets, into input fields for this action.
- Workato supports various secrets managers including AWS Secrets Manager, Azure Key
  Vault, CyberArk Conjur Secrets Manager, and HashiCorp Vault.
- You must have a client ID and client secret to connect to your Eventbrite account
  successfully.
- AWS IAM authentication recommended
- This connector is deprecated
- Existing callable recipes will continue to function indefinitely, but new callable
  recipes can't be created
- API recipes are billable recipes.
- The API Platform is included in specific pricing plans for direct customers.
- It is available by default for Embedded partners and to their end customers for
  an additional fee.
- This action ends recipe jobs. When a job successfully executes this action, the
  current job will end. Any steps after this action will be ignored.
- Uses OAuth2 with refresh token — requires setup of connected app in Salesforce
- Custom domains in Workato are not case sensitive.
- Depending on the domain host, it might take up to an hour for the new CNAME record
  to propagate through the global domain name system.
- Custom authorization allows for role-based access control and custom business logic.
- You must upload at least one certificate bundle to enforce mTLS.
- Workato disables mTLS authentication and displays an alert in the Truststore if
  your custom domain is inactive or misconfigured.
- oauth2 is a reserved namespace. The path prefix oauth2/* is not allowed.
- Requests are queued by default when the concurrency limit is exceeded.
- Retrieve the SALT API traffic collector token from your SALT Security instance or
  representative. Workato uses this token for authentication but does not manage or
  rotate it. You are responsible for ensuring its security and availability.
- You must register an API client with a valid email to access the developer portal.
errors:
- '400: Bad request'
- '401: Unauthorized'
- '404: Not found'
- '500: Server error'
- 'error: App configuration can be imported only into project'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Common recipe errors
- General error codes
- Design-time errors
- Run-time errors
- '400 Bad Request: Common causes include malformed requests, invalid fields, or violations
  of field constraints, such as unsupported data types.'
- '401 Unauthorized: Common causes include missing tokens, invalid tokens, or incorrect
  credentials.'
- '403 Forbidden: The client is authenticated but doesn''t have the necessary permissions
  to access the requested resource.'
- '404 Not Found: The requested resource doesn''t exist or can''t be found.'
- '500 Server Error: The server encountered an unexpected condition that prevented
  it from fulfilling the request.'
- '400 Bad Request: The server couldn''t process the request due to client-side issues.'
- '401 Unauthorized: The request lacks valid authentication credentials.'
- '403 Forbidden: The client is authenticated but doesn''t have the necessary permissions.'
- '500 Server Error: The server encountered an unexpected condition.'
- 'UNIQUE EMAIL REQUIRED: The email address you enter must be unique.'
- 無効化されたクライアントは API を呼び出すことができません。
- '401 Unauthorized: access to this API has been disallowed'
- 404 Not found
- 422 Processing error
- '429 Too many requests: concurrency limit exceeded or rate/quota limit exceeded'
- 500 Server error
- '504 Gateway timeout: recipe execution takes too long'
- '404 Not Found: Resource not found'
- '404 Not Found: Check the endpoint path or resource availability'
- 'Invalid request: Indicates that the input parameters were incorrect, not all required
  parameters were supplied, or contained values that are invalid for the target recipe.'
- '503 Service Unavailable: Indicates server is currently unable to process the request.'
- 'Maximum cache entry size exceeded: Requests exceeding this limit do not cache'
- 'Maximum cache entry count exceeded: If exceeded, entries are flushed, from oldest
  to newest'
- '400 Bad Request: Request failed validation due to missing required fields or incorrect
  data types.'
- '401 Unauthorized: Claim evaluates to false or cannot be evaluated.'
- '401 Unauthorized: Check if the SALT API traffic collector token is valid.'
auth_info:
  mentioned_objects:
  - Workato Identity
  - SSO
  - password
  - OauthToken
  - AuthProvider
  - NamedCredential
  - パスワード認証
  - SAMLベースのSSO
client:
  base_url: https://www.workato.com
  auth:
    type: oauth2
source_metadata: null
