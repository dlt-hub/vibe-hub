resources:
- name: create_meeting
  endpoint:
    path: /create
    method: POST
- name: create
  endpoint:
    path: /bigbluebutton/api/create
    method: POST
    data_selector: response
- name: join
  endpoint:
    path: /bigbluebutton/api/join
    method: POST
    data_selector: response
- name: end
  endpoint:
    path: /bigbluebutton/api/end
    method: POST
    data_selector: response
- name: sendChatMessage
  endpoint:
    path: /bigbluebutton/api/sendChatMessage
    method: POST
    data_selector: response
- name: insertDocument
  endpoint:
    path: /bigbluebutton/api/insertDocument
    method: POST
    data_selector: response
- name: getMeetings
  endpoint:
    path: /bigbluebutton/api/getMeetings
    method: GET
    data_selector: response
- name: getMeetingInfo
  endpoint:
    path: /bigbluebutton/api/getMeetingInfo
    method: GET
    data_selector: response
- name: getRecordings
  endpoint:
    path: /bigbluebutton/api/getRecordings
    method: GET
    data_selector: response
- name: create_meeting
  endpoint:
    path: /create
    method: POST
    data_selector: response
    params:
      name: meetingName
      meetingID: meetingId
      parentMeetingID: parentMeetingId
      sequence: 1
      freeJoin: true
      breakoutRoomsPrivateChatEnabled: false
      breakoutRoomsRecord: false
- name: create_meeting
  endpoint:
    path: /create
    method: POST
    data_selector: response
    params: {}
- name: join
  endpoint:
    path: /join
    method: GET
    data_selector: response
    params:
      meetingID: string
      fullName: string
      role: string
- name: insertDocument
  endpoint:
    path: /insertDocument
    method: POST
    data_selector: response
    params:
      meetingID: string
- name: isMeetingRunning
  endpoint:
    path: /isMeetingRunning
    method: GET
    data_selector: response
    params:
      meetingID: string
- name: end
  endpoint:
    path: /end
    method: GET
    data_selector: response
    params:
      meetingID: string
- name: getMeetingInfo
  endpoint:
    path: /getMeetingInfo
    method: GET
    data_selector: response
    params:
      meetingID: string
- name: getMeetings
  endpoint:
    path: /getMeetings
    method: GET
    data_selector: response
    params: {}
- name: getRecordings
  endpoint:
    path: /getRecordings
    method: GET
    data_selector: recordings
    params:
      meetingID: ''
      recordID: ''
      state: ''
      meta: ''
      offset: 0
      limit: 100
- name: publishRecordings
  endpoint:
    path: /publishRecordings
    method: GET
    data_selector: published
    params:
      recordID: ''
      publish: ''
- name: deleteRecordings
  endpoint:
    path: /deleteRecordings
    method: GET
    data_selector: deleted
    params:
      recordID: ''
- name: updateRecordings
  endpoint:
    path: /updateRecordings
    method: POST
    data_selector: updated
    params:
      recordID: ''
      meta: ''
- name: getRecordingTextTracks
  endpoint:
    path: /getRecordingTextTracks
    method: GET
    data_selector: tracks
    params:
      recordID: ''
- name: putRecordingTextTrack
  endpoint:
    path: /putRecordingTextTrack
    method: POST
    data_selector: response
    params:
      recordID: required
      kind: required
      lang: required
      label: required
- name: sendChatMessage
  endpoint:
    path: /sendChatMessage
    method: GET
    data_selector: response
    params:
      meetingID: required
      message: required
      userName: optional
- name: getJoinUrl
  endpoint:
    path: /getJoinUrl
    method: GET
    data_selector: response
    params:
      replaceSession: optional
      sessionName: optional
      enforceLayout: optional
      userdata-*: optional
- name: bbb-web
  endpoint:
    path: /api
    method: GET
    data_selector: response
- name: bbb-web
  endpoint:
    path: /bigbluebutton/api
    method: GET
    data_selector: records
    params: {}
- name: pluginManifests
  endpoint:
    path: /create
    method: POST
    data_selector: pluginManifests
- name: extensible_ui_areas
  endpoint:
    path: /api/extensible-ui-areas
    method: GET
    data_selector: uiAreas
- name: auxiliary_functions
  endpoint:
    path: /api/auxiliary-functions
    method: GET
    data_selector: functions
- name: realtime_data_consumption
  endpoint:
    path: /api/realtime-data-consumption
    method: GET
    data_selector: realtimeData
- name: realtime_data_creation
  endpoint:
    path: /api/realtime-data-creation
    method: GET
    data_selector: creationData
- name: real_time_data_exchange
  endpoint:
    path: /api/real-time-data-exchange
    method: GET
    data_selector: dataExchange
- name: real_time_ui_data_consumption
  endpoint:
    path: /api/real-time-ui-data-consumption
    method: GET
    data_selector: uiDataConsumption
- name: fetch_ui_data_on_demand
  endpoint:
    path: /api/fetch-ui-data-on-demand
    method: GET
    data_selector: uiDataOnDemand
- name: uiCommands
  endpoint:
    path: /uiCommands
    method: GET
    data_selector: commands
    params: {}
- name: serverCommands
  endpoint:
    path: /serverCommands
    method: GET
    data_selector: commands
    params: {}
- name: learningAnalyticsDashboard
  endpoint:
    path: /learningAnalyticsDashboard
    method: GET
    data_selector: data
    params: {}
- name: externalDataResources
  endpoint:
    path: /externalDataResources
    method: GET
    data_selector: resources
    params: {}
- name: create
  endpoint:
    path: /create
    method: POST
    data_selector: response
    params:
      record: 'true'
- name: hooks_create
  endpoint:
    path: /bigbluebutton/api/hooks/create
    method: POST
    data_selector: response
    params: {}
- name: hooks_destroy
  endpoint:
    path: /bigbluebutton/api/hooks/destroy
    method: POST
    data_selector: response
    params: {}
- name: hooks_list
  endpoint:
    path: /bigbluebutton/api/hooks/list
    method: POST
    data_selector: response
    params: {}
- name: getRecordings
  endpoint:
    path: /getRecordings
    method: GET
- name: create
  endpoint:
    path: /create
    method: POST
    params:
      voiceBridge: required
- name: meetings
  endpoint:
    path: /api/create
    method: POST
    data_selector: response
    params: {}
- name: join
  endpoint:
    path: /api/join
    method: POST
    data_selector: response
    params: {}
- name: shared_notes
  endpoint:
    path: /shared_notes
    method: GET
    data_selector: notes
- name: timer
  endpoint:
    path: /timer
    method: GET
    data_selector: timerData
- name: layout_manager
  endpoint:
    path: /layout
    method: POST
    data_selector: layoutData
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: meeting
  endpoint:
    path: /meetings
    method: GET
    data_selector: meetings
notes:
- All API calls must include a checksum computed with a secret shared with the BigBlueButton
  server.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- The total size of the POST request can't exceed 2MB.
- Do not include any of the parameters in both the URL and the body.
- Note that you may want to disable terminal sessions for user bigbluebutton if you
  will later use the server in production.
- Make sure your BigBlueButton server is working before starting development.
- Consider using a Docker setup for a development environment.
- All browsers now require a valid SSL certificate from the web server when a page
  requests access to the user's webcam or microphone via web real-time communications
  (WebRTC).
- If you try to access a BigBlueButton server with an IP address only, the browsers
  will block BigBlueButton client from accessing your webcam or microphone.
- If upgrading from BigBlueButton 2.6 or 2.7, set up a new Ubuntu 22.04 server with
  BigBlueButton 3.0.
- If you encounter a message about modified config files during an upgrade, you should
  keep the newer version.
- Supports plugins for expanding capabilities
- Custom client settings can be passed through the meeting create API call
- Recording is not yet implemented, meaning that if you enable this experimental feature
  on your server and use it in a recorded session, the recording will most likely
  have broken whiteboard at best.
- We also strongly recommend setting up network interface filtering in LiveKit.
- While optional, this speeds up negotation times and works around an issue with the
  latest LiveKit versions that might cause CPU spikes if there's no filtering in place.
- As of BigBlueButton v3.0.7, recording is enabled by default for LiveKit sessions
  via the bbb-webrtc-recorder application.
- Keep in mind that the LiveKit integration is still experimental and not feature
  complete. Configuration, API parameters, and other details are subject to change.
- We mirror the webcam preview by default now.
- The word 'session' is more generic and encompasses both educational and work contexts.
- The JavaScript file (plugin) is delivered to the client automatically by the server.
- 'Do end users (e.g.: students) need to install anything, like a browser extension?
  No!'
- BigBlueButton does not have an administrator web interface to control the sessions
  or recordings as in both cases they are handled by 3rd party software.
- In BigBlueButton 2.6.9 media files are not saved unless the meeting is actively
  being recorded.
- To enable recording, API parameters must include record=true.
- Make sure the parameter 'record=true' is passed in the create API call to enable
  recording.
- Hooks are permanently stored on redis and will enabled until the hook is explicitly
  removed via API.
- Callbacks are always triggered for one event at a time and in order.
- Users can test their actual bandwidth using speedtest.net.
- BigBlueButton does not store any content between sessions.
- Some objects like Contact may return nulls in deeply nested fields
- When running in a container, FreeSWITCH might not be able to set its CPU priority
  to real-time round robin, leading to lower performance.
- If users see 'voice Application failed to register with sip server', they may need
  to restart BigBlueButton.
- To connect to fs_cli, use the command that supplies the password for authenticating.
- The default stun server 'stun.freeswitch.org' is not reliable; it's recommended
  to change it to your server's external IP.
- If you don't want FreeSWITCH to bind to 127.0.0.1, you need to figure out which
  IP address its using.
- If port 80 is free, check if your nginx configuration file has errors.
- If your network connection has changed (for example, after a reboot), you can clean
  up most of BigBlueButton's configuration files.
- Aria labels are important to focus when navigating with a screen reader, these labels
  have been used extensively throughout the client to provide audible announcements
  for selected elements.
- The accessKey attribute has certain limitations like not being able to set the modifier
  key to activate the shortcut.
- The benefit is the visibility it provides for screen readers about available shortcuts.
- There are a few minor controls within the client that are not fully accessible,
  The colour picker in the closed caption settings for example.
- Aria labels are important to focus when navigating with a screen reader, these labels
  have been used extensively through out the client to provide audible announcements
  for selected elements.
- The BigBlueButton HTML5 client is WCAG 2.0 AA accessible (with exceptions) and Section
  508 compliant.
- The accessKey attribute has certain limitation like not being able to set the modifier
  key to activate the shortcut.
- Various automated tests for features like shared notes, polling, chat functionality.
- The timer allows for activation and deactivation during a meeting.
- Layouts can be updated for individual users or everyone in a meeting.
errors:
- 'FAILED: Indicates an error occurred during the API call.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'checksumError: Checksums do not match'
- 'missingParameter: A required parameter is missing.'
- 'noRecordings: No recording was found matching the provided recording ID.'
- 'invalidKind: The kind parameter is not set to a permitted value.'
- 'invalidLang: The lang parameter is not a well-formed language tag.'
- Potential problems may indicate configuration errors or installation errors.
- Package locales-all is not available, but is referred to by another package.
- 'E: Package ''locales-all'' has no installation candidate.'
- 'E: Unable to locate package libxt6.'
- 'E: Unable to locate package libxrender1.'
- 'unsupportedContentType: Requests with a content type that differs from the supported
  set will be rejected.'
- '404 Not Found: Ensure the endpoint is correct'
- 'FAILED: An error happened while creating your hook. Check the logs.'
- 'FAILED: The hook informed was not found.'
- 'FAILED: You must specify a hookID in the parameters.'
- 'SETTINGSCHEDULER: Check systemd configuration for FreeSWITCH.'
- 'voice Application failed to register with sip server: Restart BigBlueButton if
  necessary.'
- 'Too many open files: Create an override file to increase the number of open files
  for bbb-web.'
- '500 Internal Server Error: It is most likely an error on GreenLight. Check the
  log file according to Troubleshooting Greenlight.'
- 'Error::Unsafe Host Error: Check if the ''Don''t use the proxy server for local
  (intranet) addresses'' is ticked.'
- voice Application failed to register with sip server
- 'No Symbolic Link: Potential Problems - nginx (conf): no symbolic link in /etc/nginx/sites-enabled
  for bigbluebutton'
- 'Too many open files: Caused by: java.io.IOException: Too many open files'
auth_info:
  mentioned_objects:
  - securitySalt
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://bigbluebutton.org
  headers:
    Accept: application/json
source_metadata: null
