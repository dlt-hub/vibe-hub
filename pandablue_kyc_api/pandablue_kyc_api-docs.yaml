resources:
- name: KYC
  endpoint:
    path: /api-documentation/kyc-api/kyc-endpoint
    method: GET
- name: countries
  endpoint:
    path: /specifications/countries-specifications
    method: GET
    data_selector: countries
    params: {}
- name: payment_methods
  endpoint:
    path: /api-documentation/deposits-api/endpoints/payment-methods-endpoint
    method: GET
    data_selector: payment_methods
    params: {}
- name: Deposit Creation
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-creation-endpoint
    method: POST
- name: Deposit Status
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-status-endpoint
    method: GET
- name: Payment Methods
  endpoint:
    path: /api/documentation/deposits-api/endpoints/payment-methods-endpoint
    method: GET
- name: Currency Exchange
  endpoint:
    path: /api/documentation/deposits-api/endpoints/currency-exchange-endpoint
    method: GET
- name: Crypto Exchange
  endpoint:
    path: /api/documentation/deposits-api/endpoints/crypto-exchange-endpoint
    method: GET
- name: Country States Codes
  endpoint:
    path: /api/documentation/deposits-api/endpoints/country-states-codes-endpoint
    method: GET
- name: Refund Creation
  endpoint:
    path: /api/documentation/deposits-api/endpoints/refund-creation-endpoint
    method: POST
- name: Refund Status
  endpoint:
    path: /api/documentation/deposits-api/endpoints/refund-status-endpoint
    method: GET
- name: Deposit Creation
  endpoint:
    path: /api-documentation/deposits-api/endpoints/deposit-creation-endpoint
    method: POST
- name: Deposit Status
  endpoint:
    path: /api-documentation/deposits-api/endpoints/deposit-status-endpoint
    method: GET
- name: Payment Methods
  endpoint:
    path: /api-documentation/deposits-api/endpoints/payment-methods-endpoint
    method: GET
- name: Currency Exchange
  endpoint:
    path: /api-documentation/deposits-api/endpoints/currency-exchange-endpoint
    method: GET
- name: Crypto Exchange
  endpoint:
    path: /api-documentation/deposits-api/endpoints/crypto-exchange-endpoint
    method: GET
- name: Country States Codes
  endpoint:
    path: /api-documentation/deposits-api/endpoints/country-states-codes-endpoint
    method: GET
- name: Refund Creation
  endpoint:
    path: /api-documentation/deposits-api/endpoints/refund-creation-endpoint
    method: POST
- name: Refund Status
  endpoint:
    path: /api-documentation/deposits-api/endpoints/refund-status-endpoint
    method: GET
- name: Deposit Status
  endpoint:
    path: /api-documentation/deposits-api/endpoints/deposit-status-endpoint
    method: GET
- name: Refund Status
  endpoint:
    path: /api-documentation/deposits-api/endpoints/refund-status-endpoint
    method: GET
- name: Deposit Creation
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-creation-endpoint
    method: POST
- name: Deposit Status
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-status-endpoint
    method: GET
- name: Payment Methods
  endpoint:
    path: /api/documentation/deposits-api/endpoints/payment-methods-endpoint
    method: GET
- name: Currency Exchange
  endpoint:
    path: /api/documentation/deposits-api/endpoints/currency-exchange-endpoint
    method: GET
- name: Crypto Exchange
  endpoint:
    path: /api/documentation/deposits-api/endpoints/crypto-exchange-endpoint
    method: GET
- name: Country States Codes
  endpoint:
    path: /api/documentation/deposits-api/endpoints/country-states-codes-endpoint
    method: GET
- name: cashout_creation
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-creation-endpoint
    method: GET
- name: cashout_status
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-status-endpoint
    method: GET
- name: cashout_update_status
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-status-endpoint-1
    method: GET
- name: cashout_cancellation
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-cancel-endpoint
    method: GET
- name: cashout_bank_codes
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-bank-codes
    method: GET
- name: cashout_creation
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-creation-endpoint
    method: POST
- name: cashout_status
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-status-endpoint
    method: GET
- name: cashout_update_status
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-status-endpoint-1
    method: PUT
- name: cashout_cancellation
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-cancel-endpoint
    method: DELETE
- name: cashout_bank_codes
  endpoint:
    path: /api-documentation/cashouts-api/endpoints/cashout-bank-codes
    method: GET
- name: american_countries
  endpoint:
    path: /api-documentation/cashouts-api/countries-validations/american-countries
    method: GET
    data_selector: countries
    params: {}
- name: african_countries
  endpoint:
    path: /api-documentation/cashouts-api/countries-validations/african-countries
    method: GET
    data_selector: countries
    params: {}
- name: asian_countries
  endpoint:
    path: /api-documentation/cashouts-api/countries-validations/asian-countries
    method: GET
    data_selector: countries
    params: {}
- name: subscription_creation
  endpoint:
    path: /v3/subscriptions
    method: POST
- name: subscription_status
  endpoint:
    path: /v3/subscriptions/{id}
    method: GET
- name: subscription_cancellation
  endpoint:
    path: /v3/subscriptions/{subscription_id}
    method: DELETE
- name: deposit_status
  endpoint:
    path: /v3/deposits/{deposit_id}
    method: GET
- name: deposit_creation
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-creation-endpoint
    method: POST
    data_selector: response
    params: {}
- name: subscription_cancellation
  endpoint:
    path: /v3/subscriptions/{subscription_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscription_status
  endpoint:
    path: /v3/subscriptions/{subscription_id}
    method: GET
    data_selector: subscription details
    params: {}
- name: bank_account_validation
  endpoint:
    path: /api-documentation/bank-accounts-validation-api/bank-account-validation-endpoint
    method: GET
- name: account_validation
  endpoint:
    path: /v5/account/validate
    method: POST
- name: kyc_request
  endpoint:
    path: /kyc
    method: POST
    data_selector: description
- name: cashouts
  endpoint:
    path: /v1/cashouts
    method: GET
    params: {}
- name: deposits
  endpoint:
    path: /v1/deposits
    method: GET
    data_selector: data
    params:
      from: null
      to: null
      page: 0
      country: all
      paymentMethod: all
      status: all
      clientDocument: all
- name: cashouts
  endpoint:
    path: /v1/cashouts
    method: GET
    data_selector: data
    params:
      from: null
      to: null
      page: 0
      country: all
      status: all
      clientDocument: all
- name: credit_and_debit_notes
  endpoint:
    path: /v1/notes
    method: GET
    data_selector: data
    params:
      from: null
      to: null
      page: 0
      type: all
- name: refunds
  endpoint:
    path: /v1/refund
    method: GET
    data_selector: data
    params:
      from: null
      to: null
      page: 0
      country: all
      paymentMethod: all
      status: all
- name: chargebacks
  endpoint:
    path: /v1/chargeback
    method: GET
    data_selector: data
    params:
      from: null
      to: null
      page: 0
      country: all
      status: all
- name: settlements
  endpoint:
    path: /v1/settlements
    method: GET
    data_selector: data
    params:
      from: null
      to: null
      page: 0
      status: all
- name: balance_report
  endpoint:
    path: /v1/balance/report
    method: GET
    data_selector: data
    params:
      from: null
      to: null
      page: 0
- name: total_available_balance
  endpoint:
    path: /v1/balance
    method: GET
- name: logout
  endpoint:
    path: /v1/auth/session/destroy
    method: DELETE
- name: create_refund
  endpoint:
    path: /v3/refunds
    method: POST
    data_selector: refund_id
    params: {}
- name: refund_status
  endpoint:
    path: /v3/refunds/{id}
    method: GET
    data_selector: status
    params: {}
- name: deposit_creation
  endpoint:
    path: /api/deposits
    method: POST
    data_selector: data
    params: {}
- name: deposit_status
  endpoint:
    path: /api/deposits/{id}/status
    method: GET
    data_selector: data
    params: {}
- name: deposit
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-creation-endpoint
    method: POST
- name: deposit_status
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-status-endpoint
    method: GET
- name: payment_methods
  endpoint:
    path: /api/documentation/deposits-api/endpoints/payment-methods-endpoint
    method: GET
- name: create_deposit
  endpoint:
    path: /api-documentation/deposits-api/create-deposit
    method: POST
    data_selector: response
    params:
      invoice_id: Helpers::generateRandomString(8)
      amount: 100
      country: BR
      currency: BRL
      language: en
- name: deposit_status
  endpoint:
    path: /api-documentation/deposits-api/deposit-status
    method: GET
    data_selector: response
    params:
      depositId: '300533668'
- name: payment_methods
  endpoint:
    path: /api-documentation/deposits-api/payment-methods
    method: GET
    data_selector: response
    params:
      country: BR
- name: currency_exchange
  endpoint:
    path: /api-documentation/deposits-api/currency-exchange
    method: GET
    data_selector: response
    params:
      country: BR
      amount: 100
- name: create_refund
  endpoint:
    path: /api-documentation/deposits-api/create-refund
    method: POST
    data_selector: response
    params:
      deposit_id: 300533180
      invoice_id: MP_b451645f30b8415ba833d37f3fa21209
      amount: 1
      notification_url: https://yoursite.com/deposit/108/confirm
- name: refund_status
  endpoint:
    path: /api-documentation/deposits-api/refund-status
    method: GET
    data_selector: response
    params:
      refundId: 168250
- name: countries
  endpoint:
    path: /api/countries
    method: GET
    data_selector: countries
- name: payment
  endpoint:
    path: /deposit
    method: POST
    data_selector: details
    params: {}
- name: deposit
  endpoint:
    path: /api/documentation/deposits-api
    method: POST
    data_selector: paymentData
    params:
      country: BR
      amount: 100
      currency: USD
      lang: PT
      url: https://directa24-js.com/deposit
      payerData:
        payerFirstName: FirstName
        payerLastName: LastName
        payerEmail: payerEmail@test.com
      disableInputDefaultValue: true
- name: deposit_creation
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-creation-endpoint
    method: POST
- name: deposit_status
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-status-endpoint
    method: GET
- name: payment_methods
  endpoint:
    path: /api-documentation/deposits-api/payment-methods
    method: GET
- name: exchange_rates
  endpoint:
    path: /v3/exchangeRates
    method: GET
- name: create_refund
  endpoint:
    path: /v3/refunds
    method: POST
- name: refund_status
  endpoint:
    path: /v3/refunds/{id}
    method: GET
- name: deposit_creation
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-creation-endpoint
    method: POST
- name: refund_creation
  endpoint:
    path: /api/documentation/deposits-api/endpoints/refund-creation-endpoint
    method: POST
- name: deposit_status
  endpoint:
    path: /api/documentation/deposits-api/endpoints/deposit-status-endpoint
    method: GET
- name: payment_methods
  endpoint:
    path: /api/documentation/deposits-api/endpoints/payment-methods-endpoint
    method: GET
notes:
- The validation for the postal codes depends upon the country sent. Make sure you
  validate them with the regex in the table below to avoid errors due to Invalid postal
  Code.
- We use the Google's common library for parsing, formatting, and validating international
  phone numbers. Validating the phone numbers on your end could help preventing Invalid
  phone number errors.
- We suggest you using the following regex to validate email addresses on your end
  and prevent invalid email errors.
- Get the production credentials, whitelist your IPs on the production environment
  and start processing your payments with D24.
- All API requests must be made over HTTPS.
- You will use the STG endpoints to integrate.
- The STG and PROD environments are not communicated in any way.
- Initial validations are performed by the API, such as merchant account balance enough
  to cover the cashout.
- API requests without Payload-Signature will also fail.
- You will be able to hit our APIs only from the IPs you have previously whitelisted
  on the Merchant Panel.
- API requests without Authentication will fail.
- You must provide your API Key in all the requests as the basic auth username value.
- To use the PCI flow, merchants must provide valid PCI AOC compliance documentation
  and be approved by our integration team.
- For optimal integration, implement webhook handling to receive real-time updates
  about subscription status changes.
- This API must be activated on your account.
- IPs must be whitelisted to use the API
- Account created for API usage won't work for web login
- All communications must be performed through secure connections over HTTPS.
- Only connections from whitelisted IPs will be accepted.
- API requires a valid API key for all requests.
- Make sure you have whitelisted your servers IPs on our Merchant Panel by going to
  Settings -> API Access.
- 'Minimum Requirements: WooCommerce 7.0 or greater'
- The validation for the postal codes dependes up on the country sent. Make sure you
  validate them with the regex in the table below to avoid errors due to Invalid postal
  Code.
- We use the Google's common library for parsing, formatting, and validating international
  phone numbers. Validating the phone numbers on your end could help preventing `Invalid
  phone number` errors.
- We suggest you using the following regex to validate email addresses on your end
  and prevent `invalid email` errors.
- Recommended to send all optional parameters stored in DB to avoid asking the customer
  for the same details multiple times.
errors:
- Requests without Authentication will fail.
- If the date you send differs in more than 5 seconds with the time in our servers,
  we will block the request for security reasons.
- 1xx - Header errors
- 2xx - Merchant/request validations errors
- 3xx - User errors
- 4xx - Create deposit errors
- 5xx - Other errors
- 7xx - Internal errors
- 8xx - Refund errors
- 9xx - Credit Card errors
- code: 100
  http_code: 401
  type: INVALID_CREDENTIALS
  message: Invalid Credentials
  description: The X-Login you sent is incorrect or it is not yet active
- code: 101
  http_code: 400
  type: MISSING_REQUIRED_HEADER
  message: Missing or invalid format for required header {headerName}
  description: Make sure all the headers are correct.
- code: 102
  http_code: 400
  type: INVALID_SIGNATURE
  message: Invalid signature
  description: Invalid Authorization signature.
- code: 103
  http_code: 400
  type: INVALID_DATE_RANGE
  message: X-Date header value out of valid range
  description: The X-Date value you sent in the header is outside the allowed time-frame.
- code: 104
  http_code: 400
  type: IDEMPOTENCY_KEY_ALREADY_USED
  message: Idempotency key {key} has been already used
  description: The X-Idempotency-Key you sent has already been used
- code: 105
  http_code: 400
  type: EMPTY_HEADER_VALUE
  message: Optional header {headerName} must not be blank
  description: If an optional header is sent, it can't be blank
- code: 200
  http_code: 405
  type: METHOD_NOT_ALLOWED
  message: Method not allowed
  description: The request method used is not allowed.
- code: 201
  http_code: 400
  type: BEAN_VALIDATION_ERROR
  message: Field validation error. Check details
  description: One or more fields sent were incorrect
- code: 202
  http_code: 401
  type: INVALID_IP
  message: Unregistered IP address
  description: You must whitelist your IP Address.
- code: 203
  http_code: 429
  type: VELOCITY_CHECK
  message: Too many consecutive attempts for user (Velocity Check)
  description: The user has created many deposits in a short period of time
- code: 204
  http_code: 400
  type: INVALID_MEDIA_TYPE
  message: Invalid media type
  description: The payload format is in an unsupported format.
- code: 205
  http_code: 400
  type: MISSING_REQUEST_PARAMETER
  message: Missing request parameter
  description: The request is missing an important parameter
- code: 206
  http_code: 400
  type: MISSING_PATH_VARIABLE
  message: Missing path variable
  description: The request is missing an important path variable
- code: 207
  http_code: 400
  type: INVALID_REQUEST_PARAMETER_TYPE
  message: Invalid request parameter type
  description: A parameter type sent was incorrect
- code: 208
  http_code: 404
  type: RESOURCE_NOT_FOUND
  message: Resource not found
  description: The deposit_id being used doesn't exist
- code: 209
  http_code: 400
  type: INVALID_REQUEST_BODY
  message: 'Invalid request body: {details}'
  description: There is a syntax error in the JSON payload
- code: 217
  http_code: 403
  type: FORBIDDEN_MERCHANT
  message: Merchant has no authorization to use this API
  description: Your Merchant Account is not enabled to use this API.
- code: 218
  http_code: 400
  type: CRYPTO_NOT_ALLOWED_FOR_MERCHANT
  message: Wrong merchant routing type for crypto payments
  description: Your Merchant Account is not enabled to use the Crypto functionality.
- code: 300
  http_code: 400
  type: USER_BLACKLISTED
  message: User blacklisted
  description: The user is known for committing fraud
- code: 301
  http_code: 400
  type: USER_GREYLISTED
  message: User greylisted
  description: The user is banned because we detected suspicious behavior
- code: 302
  http_code: 400
  type: USER_UNAUTHORIZED
  message: User unauthorized
  description: The user is blocked.
- code: 303
  http_code: 400
  type: USER_UNAUTHORIZED_REG_STATUS
  message: User unauthorized due to cadastral situation
  description: Check the user's cadastral situation
- code: 304
  http_code: 400
  type: USER_LIMIT_EXCEEDED
  message: 'The user limit has been exceeded: {TRANSACTION|DAILY|WEEKLY|MONTHLY}'
  description: Check the user's limit on the Merchant Panel.
- code: 305
  http_code: 400
  type: PAYMENT_METHOD_RESTRICTED
  message: Restricted payment method type
  description: The payment type is disallowed for the payer
- code: 306
  http_code: 400
  type: FINANCIAL_CAPACITY
  message: The transaction cannot be processed as the user has reached their financial
    capacity, please provide proof of funds.
  description: The transaction cannot be processed as the user has reached their financial
    capacity.
- code: 400
  http_code: 400
  type: INVALID_AMOUNT
  message: Invalid amount. The minimum is USD 2 or equivalent in local currency
  description: The amount does not reach the minimum limit of USD 2
- code: 401
  http_code: 400
  type: PAYMENT_METHOD_NOT_FOUND
  message: Payment method not found
  description: The payment_method_code sent isn't correct.
- code: 402
  http_code: 400
  type: INVOICE_ALREADY_USED
  message: Invoice already used
  description: The invoice_id sent has already been used
- code: 403
  http_code: 400
  type: INVALID_BANK_CODE
  message: 'Invalid bank code: {code}'
  description: The bank_code sent is invalid
- code: 404
  http_code: 400
  type: ERROR_CREATING_PAYMENT
  message: Payment method provider unavailable
  description: Our provider is temporarily unavailable.
- code: 406
  http_code: 400
  type: INVALID_ADDRESS
  message: Invalid address
  description: The address sent is invalid
- code: 407
  http_code: 400
  type: INVALID_CITY
  message: Invalid city
  description: The city sent is invalid
- code: 408
  http_code: 400
  type: PAYMENT_METHOD_LIMIT_EXCEEDED
  message: Payment method limit exceeded
  description: The amount sent exceeds the provider's payment method limit.
- code: 410
  http_code: 400
  type: PAYMENT_METHOD_MINIMUM_REQUIRED
  message: Payment method minimum required
  description: The amount sent is smaller than the provider's payment method minimum
    limit.
- code: 411
  http_code: 400
  type: INVALID_USER_DOCUMENT
  message: Invalid user document ID
  description: The document_id specified was rejected by the provider.
- code: 412
  http_code: 400
  type: PAYMENT_METHOD_UNAVAILABLE
  message: Payment Method Unavailable
  description: The payment method is temporarily unavailable.
- code: 413
  http_code: 400
  type: INVALID_REPORTED_INFO_BANK_BENEFICIARY
  message: Invalid reportedInfo.bankBeneficiary value
  description: The value sent in the field reported_info.bank_beneficiary is invalid.
- code: 414
  http_code: 400
  type: MISSING_REPORTED_INFO
  message: Missing reportedInfo attribute
  description: There are missing values for the reported_info object.
- code: 415
  http_code: 400
  type: INVALID_REPORTED_INFO_BANK_BRANCH
  message: Invalid reportedInfo.bankBranch value
  description: The value sent in the field reported_info.bankBranch is invalid.
- code: 416
  http_code: 400
  type: INVALID_REPORTED_INFO_BANK_ACCOUNT_NUMBER
  message: Invalid reportedInfo.bankAccountNumber value
  description: The value sent in the field reported_info.bankAccountNumber is invalid.
- code: 417
  http_code: 400
  type: INVALID_REPORTED_INFO_ACCOUNT_TYPE
  message: Invalid reportedInfo.bankAccountType value
  description: The value sent in the field reported_info.bankAccountType is invalid.
- code: 418
  http_code: 400
  type: MISSING_REQUIRED_FIELDS
  message: Missing required fields in order to generate Deposit
  description: The request is missing a required field.
- code: 419
  http_code: 400
  type: MISSING_PAYER_ID_OR_DOCUMENT
  message: payer.id or payer.document field is missing
  description: The request is missing the payer.id or payer.document field.
- code: 500
  http_code: 500
  type: GENERIC_ERROR
  message: Oh no! Something has gone wrong. Please contact a system administrator
  description: Internal error, please contact support
- code: 511
  http_code: 400
  type: NO_PAYMENT_METHODS_AVAILABLE
  message: No payment methods available
  description: Please contact your AM regarding payment methods’ availability
- code: 720
  http_code: 400
  type: MISSING_CONFIGURATION
  message: Missing configuration for merchant account
  description: Please contact your AM/TAM
- 'Insufficient Funds: Create and approve a deposit or reach out to integration@eroninternational.com
  to add funds to your account.'
- 'ERROR_ACCOUNT_INCORRECT: Invalid bank account'
- 'ERROR_ACCOUNT_CLOSED: Bank account is closed'
- 'ERROR_AMOUNT_INCORRECT: Invalid amount'
- 'ERROR_BANK_INVALID: Invalid bank code'
- 'ERROR_BANK_BRANCH_INCORRECT: Invalid bank branch'
- 'ERROR_BENEFICIARY_DOCUMENT_ID_INVALID: Invalid beneficiary document'
- 'ERROR_BENEFICIARY_NAME_INCORRECT: Beneficiary name doesn''t match bank details'
- 'ERROR_REJECTED_BY_BANK: Rejected by bank'
- 'ERROR_OTHER: Other error'
- 'WITHDRAWAL_EXPIRED: Withdrawal expired'
- 'LIMIT_EXCEEDED: Beneficiary limit exceeded'
- 'RISK_POLICY: Violates bank risk policy'
- 'BLOCKED_FROZEN_ACCOUNT: Bank account blocked/frozen'
- 'DOCUMENT_ACCOUNT_MISMATCH: Beneficiary document doesn''t match bank details'
- 'INVALID_PIX_KEY: Invalid Pix Key'
- 'INVALID_IFSC_CODE: Invalid IFSC code'
- 'INVALID_ACCOUNT_OR_IFSC_CODE: Invalid bank account or IFSC code'
- 'INVALID_NBIN: Invalid NBIN'
- 'ACCOUNT_UNABLE: The bank account is unable to receive transfers'
- 'INVALID_ACCOUNT_TYPE: Invalid bank account type'
- 'REJECTED_BY_MERCHANT_REQUEST: Rejected by merchant''s request'
- '300: Invalid params + [param name] + [reason]'
- '302: Invalid control string. [Click here for instructions](/api-documentation/cashouts-api/technical-and-security-aspects/calculating-the-payload-signature)'
- '303: Invalid bank code'
- '401: Invalid credentials'
- '402: Unregistered IP address (Go to API Access to whitelist the IP in the Merchant
  Panel)'
- '502: Invalid request body - Please check that the JSON is well formatted'
- '503: The transaction cannot be processed as the user has reached their financial
  capacity, please provide proof of winnings.'
- '504: User unauthorized due to cadastral situation.'
- '508: Limit exceeded: {TRANSACTION|DAILY|MONTHLY|USER MONTHLY QUANTITY}'
- '509: Cashout not found with this ID'
- '510: Invalid status: cashout is not Pending'
- '511: External ID already used'
- '514: Insufficient funds'
- '515: Invalid user status: {BLACKLISTED|BLOCKED|SUSPENDED}'
- '518: Country not available'
- '519: Merchant not enabled. Contact your Account Manager'
- '524: Invalid Credentials. Contact integration@d24.com'
- '525: Close loop rejection'
- '526: Invalid currency'
- '533: Invalid Amount. The minimum amount is {currency} {amount} or equivalent in
  USD'
- '537: Could not make the cashout. Contact integration@d24.com'
- '538: Invalid account status: {BLACKLISTED}'
- '539: Payout method unavailable. The country and/or bank selected is not available.
  Please check with your Account Manager'
- '540: Beneficiary email or phone is required'
- '541: email already used by another beneficiary'
- '542: phone already used by another beneficiary'
- '543: must be a [valid phone number](/specifications/countries-specifications#phone-numbers-validations)'
- '566: Bank Code disabled'
- '702: Could not cancel cashout'
- '703: Could not make the cashout. Contact integration@d24.com'
- '401 Unauthorized: Recheck API Key or IP Whitelisting'
- '421: Subscription was already cancelled.'
- '420: Subscription does not exist.'
- '426: Subscription is terminated and cannot be cancelled.'
- '501: Generic Error'
- '500: Generic Error'
- '400: Bad Request Validation error'
- '401: Unauthorized Invalid Credentials'
- '302: Invalid bank account'
- 'INVALID_CREDENTIALS: Invalid credentials'
- 'MISSING_REQUIRED_HEADER: Missing or invalid format for required header {0}'
- 'INVALID_SIGNATURE: Invalid signature'
- 'INVALID_DATE_RANGE: X-Date header value out of valid range'
- 'METHOD_NOT_ALLOWED: Request method {0} not supported'
- 'INVALID_IP: Unregistered IP address'
- 'INVALID_REQUEST_BODY: Invalid request body: {0}'
- 'FORBIDDEN_MERCHANT: Merchant not allowed to use this api'
- 'INVALID_DOCUMENT: Invalid document number'
- 'INVALID_BANK_CODE: Invalid bank code'
- 'INVALID_BANK_ACCOUNT: Invalid bank account'
- 'INVALID_BANK_BRANCH: Invalid bank branch'
- 'MISSING_REQUIRED_FIELDS: Missing required fields'
- 'COUNTRY_NOT_AVAILABLE: Country not available'
- 'INVALID_AMOUNT: Invalid amount. The minimum is {amount} {currency} or equivalent
  in {currency}'
- 'INVALID_CURRENCY: Invalid Currency'
- 'LIMIT_EXCEEDED: Limit exceeded'
- 'USER_LIMIT_EXCEEDED: Transaction declined because the limit of cashouts allowed
  from different users to that Bank Account has been exceeded.'
- 'BANK_ACCOUNT_BLOCKED: The bank account is blocked'
- 'BANK_ACCOUNT_CLOSED: The bank account is closed'
- 'INVALID_BENEFICIARY_NAME: The beneficiary name doesn''t match the bank details'
- 'INVALID_BENEFICIARY_DOCUMENT: The beneficiary document doesn''t match the bank
  details'
- 'INVALID_ACCOUNT_TYPE: Invalid account type'
- 'TRANSFER_TYPE_NOT_SUPPORTED: The transfer type is not supported on this account'
- 'BANK_ACCOUNT_UNAVAILABLE: The account is unable to receive transfers'
- 'OTHER: Other'
- 'REJECTED_BY_BANK: Rejected by bank'
- 'INTERNAL_SERVER_ERROR: Oh no! Something has gone wrong. Please contact a system
  administrator.'
- Requests made over plain HTTP will fail.
- Requests without Authentication will also fail.
- '300: Invalid document number'
- '100: Invalid Credentials'
- '83: You are not permitted to log in from this location, please contact your account
  administrator.'
- '400: Bad Request - Make sure the syntax of the request is correct'
- '401: Unauthorized - The token is expired or incorrect'
- '403: Forbidden - Your IP may not be whitelisted or you are not allowed to use this
  API'
- '405: Method Not Allowed - The request HTTP method you are using is incorrect'
- '412: Precondition Failed - Make sure you are sending the right credentials, that
  your account is active, or that it was configured for Merchants API usage.'
- '500: Internal Server Error - Make sure the content type of the request is the correct
  and that the syntax of the request is also correct'
- '11: You have typed wrong credentials, or the user is either locked or inactive
  - Make sure you are using the right credentials.'
- '17: Date `from` must be before date `to` - Make sure the FROM field in the GET
  request is smaller than the TO field'
- '19: Provided ISO country XX is not valid - Provide a valid country code'
- '26: Access denied. The user has insufficient privileges - Make sure your API user
  account is not configured as administrator.'
- '83: You are not permitted to log in from this location, please contact your account
  administrator - The IP you are using has to be whitelisted.'
- '96: The user type is incorrect - The user account is not configured for usage with
  the Merchants API.'
- '401 Unauthorized: API key missing or invalid.'
- '400 Bad Request: Invalid data format.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api-stg.directa24.com/
  auth:
    type: apikey
  headers:
    Authorization: '"D24 " plus a hash HMAC256 to verify request integrity'
    X-Login: Merchant API Key
    X-Date: 'ISO8601 Datetime: yyyy-MM-dd''T''HH:mm:ssZ'
    Content-Type: application/json
source_metadata: null
