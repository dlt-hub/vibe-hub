resources:
- name: chat_event
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: '[]'
- name: webhook_event
  endpoint:
    path: /v1/webhook
    method: POST
    data_selector: packet
    params: {}
- name: conversation
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: null
    params: {}
- name: message
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: composite_message
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: bubbles
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: carousel
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: button_template
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: list_template
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: buttons
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: media
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: navigate
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: contact_update
  endpoint:
    path: /api/um/bot/events/
    method: POST
    data_selector: info
    params: {}
- name: abort
  endpoint:
    path: /abort
    method: POST
    data_selector: packet
    params: {}
- name: end
  endpoint:
    path: /end
    method: POST
    data_selector: packet
    params: {}
- name: forward_group
  endpoint:
    path: /forward_group
    method: POST
    data_selector: packet
    params:
      group: Support
- name: forward_skills
  endpoint:
    path: /forward_skills
    method: POST
    data_selector: packet
    params:
      skills:
      - Support
      - English
- name: forward_any
  endpoint:
    path: /forward_any
    method: POST
    data_selector: packet
    params: {}
- name: forward_operator
  endpoint:
    path: /forward_operator
    method: POST
    data_selector: packet
    params:
      operator_id: 12345
- name: delay
  endpoint:
    path: /delay
    method: POST
    data_selector: packet
    params:
      delay: 2
- name: note_create
  endpoint:
    path: /note_create
    method: POST
    data_selector: packet
    params:
      body: Conversation-based note, displayed in the conversation's message history.
- name: conversation_update
  endpoint:
    path: /conversation_update
    method: POST
    data_selector: packet
    params:
      subject: Inquiry for new product
      topics:
      - Support
      - Sales
      locale: en_BG
- name: addon_dispatch
  endpoint:
    path: /addon_dispatch
    method: POST
    data_selector: packet
    params:
      type: zendesk
- name: email_dispatch
  endpoint:
    path: /email_dispatch
    method: POST
    data_selector: packet
    params:
      type: operator
      email: email_of_recipient@host.com
- name: activity_indicator
  endpoint:
    path: /activity_indicator
    method: POST
    data_selector: packet
    params:
      status: thinking
- name: webhook
  endpoint:
    path: /webhook
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: _lfa
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _lfa_expiry
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: MUID
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _ga
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _ga_
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _lfa
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: IDE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: lastExternalReferrerTime
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: AnalyticsSyncHistory
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: UserMatchHistory
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: bscookie
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: eventQueue
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: apolloAnonId
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _gcl_ls
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _uetvid_exp
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _uetsid_exp
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: topicsLastReferenceTime
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _uetvid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _uetsid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _gcl_au
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _uetsid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _uetvid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: _fbp
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: inbox
  endpoint:
    path: /inbox
    method: GET
    data_selector: conversations
- name: all_conversations
  endpoint:
    path: /all_conversations
    method: GET
    data_selector: conversations
- name: contact_list
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /api/v1/conversations
    method: GET
    data_selector: conversations
- name: contacts
  endpoint:
    path: /api/v1/contacts
    method: GET
    data_selector: contacts
- name: necessary_cookies
  endpoint:
    path: /necessary_cookies
    method: GET
    data_selector: cookies
    params: {}
- name: preference_cookies
  endpoint:
    path: /preference_cookies
    method: GET
    data_selector: cookies
    params: {}
- name: analytical_cookies
  endpoint:
    path: /analytical_cookies
    method: GET
    data_selector: cookies
    params: {}
- name: marketing_cookies
  endpoint:
    path: /marketing_cookies
    method: GET
    data_selector: cookies
    params: {}
- name: other_cookies
  endpoint:
    path: /other_cookies
    method: GET
    data_selector: cookies
    params: {}
- name: custom_channel
  endpoint:
    path: /features/channels/custom-channel
    method: GET
- name: cookies_info
  endpoint:
    path: /api/cookies
    method: GET
    data_selector: cookies
    params: {}
- name: necessary_cookies
  endpoint:
    path: /cookies/necessary
    method: GET
    data_selector: cookies
- name: preference_cookies
  endpoint:
    path: /cookies/preferences
    method: GET
    data_selector: cookies
- name: analytical_cookies
  endpoint:
    path: /cookies/analytical
    method: GET
    data_selector: cookies
- name: marketing_cookies
  endpoint:
    path: /cookies/marketing
    method: GET
    data_selector: cookies
- name: other_cookies
  endpoint:
    path: /cookies/other
    method: GET
    data_selector: cookies
- name: contacts
  endpoint:
    path: /analytics/contacts
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: allowed_redirect_urls
  endpoint:
    path: /sso/callback/oidc
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cookies
  endpoint:
    path: /cookies
    method: GET
    data_selector: cookies
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_channel
  endpoint:
    path: /channels/email
    method: POST
- name: smtp_configuration
  endpoint:
    path: /channels/email/custom_smtp
    method: POST
- name: operator_profile
  endpoint:
    path: /settings/team/operator/overview/
    method: GET
- name: cookies
  endpoint:
    path: /cookies
    method: GET
    data_selector: cookies
    params: {}
- name: other_cookies
  endpoint:
    path: /other_cookies
    method: GET
    data_selector: other_cookies
    params: {}
- name: twilio_channel
  endpoint:
    path: /services/data/vXX.X/sobjects/TwilioChannel
    method: POST
    data_selector: records
- name: channel_setup
  endpoint:
    path: /channel/setup
    method: POST
- name: threema_channel
  endpoint:
    path: /create/threema/channel
    method: POST
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: records
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: records
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
    data_selector: records
- name: single_conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: records
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: records
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
    data_selector: records
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: records
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: records
- name: all_contacts
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: records
- name: single_contact
  endpoint:
    path: /contact_identities/{id}/
    method: GET
    data_selector: records
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: records
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
    data_selector: records
- name: operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
    data_selector: records
- name: operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
    data_selector: records
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contacts
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
- name: operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params: {}
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
    params: {}
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{conversation_id}/messages/
    method: GET
    data_selector: results
    params:
      ordering: id
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
    params:
      limit: 10
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params:
      ordering: email
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
    data_selector: results
- name: navigation
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
- name: single_contact_identity
  endpoint:
    path: /contact_identities/{id}/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
    data_selector: results
- name: operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
    data_selector: results
- name: operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params:
      limit: '100'
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: contact_identities
  endpoint:
    path: /api/um/v3/contact_identities/
    method: GET
    params:
      search_query: userlike gregor
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: messages
  endpoint:
    path: /conversation/{conversation_id}/messages/
    method: GET
    params:
      ordering: id
      limit: 50
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    params: {}
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    params: {}
- name: operators
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: PATCH
    data_selector: null
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params: {}
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
    params: {}
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /api/um/v3/operators
    method: GET
    data_selector: records
- name: operator_single
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: GET
    data_selector: operator
    params: {}
- name: operator_update
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: PATCH
    data_selector: operator
    params: {}
- name: results
  endpoint:
    path: /results
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: single_conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact_identity
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: single_operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
- name: single_operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: results
- name: conversation_all_list
  endpoint:
    path: /conversations/all
    method: GET
    data_selector: conversations
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
- name: single_contact_identity
  endpoint:
    path: /contact_identities/{id}/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all
    method: GET
    data_selector: results
- name: conversation_list
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
    data_selector: ''
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: contact
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: operator
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
    params: {}
- name: operators
  endpoint:
    path: /operators/{id}/
    method: GET
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: DELETE
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact_identity
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
- name: operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params: {}
- name: conversation
  endpoint:
    path: /api/um/v3/conversations/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: uploaded_files
  endpoint:
    path: /retrieve/uploaded/files
    method: GET
    data_selector: media_file
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: single_conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contacts
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: single_operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
- name: single_operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params: {}
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
    data_selector: conversation
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /v3/conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /v3/notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /v3/navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /v3/contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params:
      cursor: id
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
    params: {}
- name: operators
  endpoint:
    path: /api/um/v3/operators
    method: GET
    data_selector: records
- name: single_operator
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: GET
    data_selector: operator
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params: {}
- name: conversations_all
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{conversation_id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    params: {}
- name: notes
  endpoint:
    path: /notes/
    method: GET
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact_identity
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params: {}
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
    params:
      ordering: id
- name: delete_conversations
  endpoint:
    path: /conversations/
    method: DELETE
    data_selector: null
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{conversation_id}/messages/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{conversation_id}/
    method: GET
    data_selector: ''
- name: conversation_messages
  endpoint:
    path: /conversation/{conversation_id}/messages/
    method: GET
    params: {}
- name: notes
  endpoint:
    path: /notes/
    method: GET
    params: {}
- name: notes
  endpoint:
    path: /notes/
    method: POST
    data_selector: notes
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: all_contacts
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
- name: single_contact
  endpoint:
    path: /contact_identities/{id}/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /api/um/v3/conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: note
  endpoint:
    path: /api/um/v3/notes/{id}
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /api/um/navigation/
    method: GET
    params:
      conversation_id: ''
      contact_identity_id: ''
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: single_conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contacts
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: single_operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
- name: single_operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params:
      limit: 10
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
    params:
      limit: 100
      ordering: id
- name: conversation_list
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /api/um/v3/conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /api/um/v3/conversations/{id}/messages/
    method: GET
- name: conversation_messages
  endpoint:
    path: /v3/conversation/{conversation_id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /v3/notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /v3/navigation/
    method: GET
    data_selector: results
- name: navigation
  endpoint:
    path: /navigation/
    method: GET
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /v3/conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /v3/notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /v3/navigation/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /api/um/v3/contact_identities/all/
    method: GET
    data_selector: records
    params:
      ordering: id
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params: {}
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{conversation_id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
    params:
      ordering: id
      limit: 100
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /v3/conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /v3/notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /v3/navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /v3/contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params:
      limit: 10
      ordering: id
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params:
      search_query: userlike
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: messages
  endpoint:
    path: /conversations/{conversation_id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /v3/conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /v3/notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /v3/navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /v3/contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
    data_selector: results
    params:
      cursor: '123'
      limit: '100'
      ordering: id
- name: contact
  endpoint:
    path: /api/um/v3/contact_identities/{id}
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact_identity
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
    params:
      limit: 10
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
    params:
      limit: 100
      ordering: id
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params:
      ordering: id
- name: operator
  endpoint:
    path: /api/um/v3/operators
    method: GET
- name: single_operator
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: GET
- name: operator_slots
  endpoint:
    path: /api/um/v3/operators/{id}/slots/
    method: GET
- name: operator_away_status
  endpoint:
    path: /api/um/v3/operators/{id}/away/
    method: GET
- name: conversations
  endpoint:
    path: /v3/conversations/
    method: GET
    data_selector: results
    params: {}
- name: contact_identities
  endpoint:
    path: /v3/contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: notes
  endpoint:
    path: /v3/notes/
    method: GET
    data_selector: results
    params: {}
- name: operators
  endpoint:
    path: /v3/operators/
    method: GET
    data_selector: results
    params: {}
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /v3/conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /v3/notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /v3/navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /v3/contact_identities/
    method: GET
    data_selector: results
- name: contact
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: operator
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
    params: {}
- name: operator_list
  endpoint:
    path: /api/um/v3/operators
    method: GET
- name: single_operator
  endpoint:
    path: /api/um/v3/operators/{id}
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contacts
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /api/um/v3/conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: contact
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params: {}
- name: operator
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
    params: {}
- name: operator
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: GET
    data_selector: records
- name: operators
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: PATCH
    data_selector: patched resource item
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: results
- name: all_conversations
  endpoint:
    path: /conversations/all
    method: GET
    data_selector: results
- name: conversation_list
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: single_conversation
  endpoint:
    path: /api/um/v3/conversations/{id}/
    method: GET
    data_selector: conversation
- name: conversation_messages
  endpoint:
    path: /api/um/v3/conversations/{id}/messages/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{conversation_id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
- name: operator
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: GET
- name: operator
  endpoint:
    path: /api/um/v3/operators/{id}
    method: PATCH
    data_selector: slot_data
- name: delete_operator
  endpoint:
    path: /api/um/v3/operators/{id}
    method: DELETE
    data_selector: null
- name: conversations
  endpoint:
    path: /conversations/
    method: GET
- name: all_conversations
  endpoint:
    path: /conversations/all/
    method: GET
- name: single_conversation
  endpoint:
    path: /conversations/{id}/
    method: GET
- name: conversation_messages
  endpoint:
    path: /conversations/{id}/messages/
    method: GET
- name: notes
  endpoint:
    path: /notes/
    method: GET
- name: single_note
  endpoint:
    path: /notes/{id}/
    method: GET
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
- name: all_contact_identities
  endpoint:
    path: /contact_identities/all/
    method: GET
- name: single_contact_identity
  endpoint:
    path: /contact_identities/{id}/
    method: GET
- name: operators
  endpoint:
    path: /operators/
    method: GET
- name: single_operator
  endpoint:
    path: /operators/{id}/
    method: GET
- name: operator_slots
  endpoint:
    path: /operators/{id}/slots/
    method: GET
- name: operator_away_status
  endpoint:
    path: /operators/{id}/away/
    method: GET
- name: conversations
  endpoint:
    path: /conversations
    method: GET
    data_selector: results
    params: {}
- name: all_conversations
  endpoint:
    path: /conversations/all
    method: GET
    data_selector: results
    params:
      ordering: id
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: conversation_messages
  endpoint:
    path: /conversation/{id}/messages/
    method: GET
    data_selector: results
- name: notes
  endpoint:
    path: /notes/
    method: GET
    data_selector: results
- name: navigation_events
  endpoint:
    path: /navigation/
    method: GET
    data_selector: results
- name: contacts
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /contact_identities/
    method: GET
    data_selector: results
    params:
      limit: 10
- name: operators
  endpoint:
    path: /operators/
    method: GET
    data_selector: results
    params:
      limit: 10
- name: operator
  endpoint:
    path: /api/um/v3/operators/{id}/
    method: GET
- name: operator_slots
  endpoint:
    path: /api/um/v3/operators/5/slots/
    method: GET
    data_selector: um_slots
- name: conversations
  endpoint:
    path: /api/um/v3/conversations/
    method: GET
    data_selector: results
- name: contact_identities
  endpoint:
    path: /api/um/v3/contact_identities/
    method: GET
    data_selector: results
- name: cookies
  endpoint:
    path: /cookies
    method: GET
    data_selector: results
    params: {}
- name: operators
  endpoint:
    path: /api/um/v3/operators
    method: DELETE
- name: general_capabilities
  endpoint:
    path: /roles/general_capabilities
    method: GET
    data_selector: capabilities
    params: {}
- name: conversation_capabilities
  endpoint:
    path: /roles/conversation_capabilities
    method: GET
    data_selector: capabilities
    params: {}
- name: contact_capabilities
  endpoint:
    path: /roles/contact_capabilities
    method: GET
    data_selector: capabilities
    params: {}
- name: default_role_capabilities
  endpoint:
    path: /roles/default_capabilities
    method: GET
    data_selector: capabilities
    params: {}
notes:
- You can only send 20 requests per minute that use the same `cid`.
- Webhook events include various types such as message, media, and location.
- Uses custom routing for chatbots based on channels.
- Session timeout can be configured in widget settings.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- 'Operators are able to delete previously sent messages for the following channels:
  WebChat, Telegram, Custom Channels.'
- Only operators can initiate a call - your contacts cannot start a call on their
  own.
- Please note that this function is only available when the contact is online.
- These effects are currently only supported in Chromium-based browsers.
- 'Maximum file size: 10MB'
- 'Maximum number of rows in CSV: 20,000'
- 'Recommended file encoding: UTF-8'
- This feature can be used for an additional fee starting from our Team package.
- Userlike is now Lime Connect.
- No separate login credentials are required for Lime Connect.
- Requires a set of OpenID Connect client credentials (client ID and secret)
- Custom metadata must be configured in the identity provider to include user name,
  email, and role
- Used to display our chat widget on this website and allow you to contact Userlike
  through it. The cookie also stores data about your visit to this website so you
  can pick up where you left off on your next visit. Personal data is only stored
  if you voluntarily enter it and submit it to us.
- Weiterleitungen für die alten Domains und E-Mail-Adressen bleiben aktiv.
- Os redirecionamentos permanecerão ativos, então os links existentes continuarão
  funcionando.
- Recomendamos atualizar seus favoritos e listas de contatos.
- Omleidingen voor de oude domeinen en e-mailadressen blijven actief.
- Les redirections pour les anciens domaines et adresses email resteront actives.
- La protection et la sécurité de vos données restent inchangées.
- I reindirizzamenti per i vecchi domini e indirizzi email rimarranno attivi.
- Se stai utilizzando il nostro custom add-on builder e definisci una Content Security
  Policy con una direttiva frame-ancestors, aggiungi https://app.lime-connect.com
  prima del 19 settembre.
- Only that way they will show up in your Lime Connect Message Center!
- We do not recommend to use an email-address, that is also used by an operator.
- The signature can also be set up by the operator, if their role has sufficient rights
  to do so.
- If the signature is activated for an operator profile, it will automatically be
  attached to messages sent out via one of your connected email channels.
- a clean phone number that’s currently not used to provide customer service with
  WhatsApp
- acceptance of WhatsApp’s Business Solution Terms
- compliance with WhatsApp’s Commerce Policy
- compliance with WhatsApp’s Business Policy
- helpful if you already have a verified Business Manager account on Facebook
- You need to be admin of the Page to grant the authorization.
- Make sure to grant access to everything Facebook demands in this step.
- If you have connected your Instagram Channel to Lime Connect, you want to make sure
  that Lime Connect is set as the 'main receiver' of Instagram messages within your
  Facebook Business Account to avoid getting error messages like 'Unable to take control
  of the conversation. Please configure the Lime Connect App as main receiver.'
- Requires setup of a bot via BotFather
- Contacts can find your bot by searching for its name or username
- Different channels may support varying subsets of markdown formatting.
- SMS does not support any markdown formatting.
- All API requests must be authenticated with an API token, passed as an authorization
  header.
- API requests must be authenticated with an API token passed as an authorization
  header
- You can make up to 5000 API requests per day to a specific resource of an organization.
- All API requests must be authenticated with an API token.
- For accessing different organization resources, provide 'Userlike-Organization-Id'
  header.
- Endpoints with offset pagination can return a maximum of 10,000 results.
- You can adapt the page size to your needs and return more or less resource items
  per API call.
- API token must be passed as an authorization header with each request
- Requests for a specific resource of an organization count against the same limit
- API token must be passed as an authorization header with each request.
- Uses cursor-based pagination for all conversations endpoint
- Default results are sorted by ID in descending order
- Conversation messages endpoint uses cursor based pagination.
- Notes can be filtered by either conversation_id or contact_identity_id.
- For organization-specific access, include 'Userlike-Organization-Id' header.
- Provide 'Userlike-Organization-Id' header for accessing different organization's
  resources
- Use 'Userlike-Organization-Id' header to access resources of a specific organization.
- Responses you receive will have a next link and a previous link with the correct
  cursor set if there are resources that come before or after the results list.
- Limit maximum amount of results returned to 10,000.
- Use 'Userlike-Organization-Id' header to access different organization resources.
- Responses include next and previous links for pagination.
- List endpoints are sorted by ID in descending order by default.
- Keep in mind if your search returns too many (undesired) results, and provide more
  specific search keyword(s).
- Rate limit of 5000 requests per day per resource.
- Uses OAuth2 with header authorization.
- Making a DELETE request will irrevocably delete conversations.
- Uses OAuth2 — requires setup of an authorization token.
- Cursor-based pagination is available for contact identities.
- Make sure to handle DELETE requests carefully as they can bulk delete contacts.
- Use PATCH method to update various fields for an operator.
- Pagination applied in the header to 'application/json'.
- API token required for each request.
- Uses cursor-based pagination with plain IDs.
- This endpoint has cursor-based pagination and allows access to all conversations
  in your organization and an unlimited number of results.
- Use 'Userlike-Organization-Id' header for accessing resources of a different organization.
- Responses will have next and previous links with the correct cursor set.
- Making a DELETE request will irrevocably delete conversations; 10 by default and
  100 max.
- The conversation messages endpoint supports filtering by type, sender_type, and
  event.
- The notes endpoint allows filtering by conversation_id and contact_identity_id.
- Contact list endpoint allows bulk delete.
- Operator list endpoint does not allow bulk delete.
- Rate limit is 5000 requests per day per resource.
- Responses will have a next link and a previous link with the correct cursor set
  if there are resources that come before or after the results list.
- 'Making a DELETE request to the conversation list endpoint will irrevocably delete
  a number of conversations at once: 10 by default and 100 at most.'
- As a precaution, you cannot delete ongoing conversations.
- To access resources of a different organization, provide the 'Userlike-Organization-Id'
  header.
- Uses cursor-based pagination for all conversations
- Default ordering is by ID in descending order
- 'Making a filtered DELETE request will irrevocably bulk delete a number of conversations:
  10 by default, 100 being the maximum allowed limit.'
- API requests must include an authorization token in the header.
- The maximum page size is 100 resource items.
- Uses cursor-based pagination for the all conversations endpoint
- 'Making a DELETE request will irrevocably delete a number of conversations at once:
  10 by default and 100 at most.'
- Maximum page size is 100 resource items. If a limit larger than that is provided,
  fallback to this limit will occur.
- By default, list of resources returned by all list endpoints are sorted by their
  ID, in descending order.
- Filtered DELETE requests will bulk delete conversations.
- Endpoint results can be filtered by various fields.
- Pagination is supported with a maximum page size of 100 for messages and navigation
  events.
- Contact list endpoint supports cursor-based pagination with id ordering.
- Requests for a specific resource of an organization count towards that resource's
  limit.
- Uses OAuth2 with refresh token — requires setup of connected app in userlike
- Conversation messages endpoint uses cursor based pagination
- Fetch a list of notes containing the last 10 notes that were created.
- Notes on conversations have a non-null `conversation_id`, while notes on contacts
  have a non-null `contact_identity_id`.
- Limit maximum amount of results returned to 10,000 for GET requests.
- Use 'Userlike-Organization-Id' header to access resources of different organizations.
- The conversation resource items returned by the list endpoint only contain the last
  message of the conversation.
- The conversation messages endpoint uses cursor based pagination with a maximum page
  size of 100 messages.
- Combining filters for conversation_id and contact_identity_id will result in an
  empty response.
- The note list endpoint results are sorted by their ID, in descending order - meaning
  that the most recently created notes are coming first.
- Conversations endpoint uses offset pagination with a maximum of 10,000 results.
- All conversations endpoint uses cursor-based pagination.
- The conversation messages endpoint uses cursor based pagination.
- The note list endpoint results are sorted by their ID in descending order.
- Results can be filtered by type, sender_type, and event.
- Notes can be filtered by conversation_id or contact_identity_id.
- All API requests must be authenticated with an API token passed as an authorization
  header.
- You can filter and delete conversations using the conversation list endpoint.
- Either conversation_id or contact_identity_id needs to be set.
- Maximum page size is 100 resource items.
- Conversations resource returns only the last message of the conversation.
- Make sure to read the general remarks on result filtering.
- Maximum page size is 10,000 results for list endpoints.
- Using 'Userlike-Organization-Id' header for organization-specific requests.
- Uses cursor-based pagination for the all conversations endpoint.
- 'Making a filtered DELETE request to the conversation list endpoint will also irrevocably
  bulk delete a number of conversations: 10 by default, 100 being the maximum allowed
  limit.'
- The notes endpoint supports filtering by conversation_id and contact_identity_id.
- Conversations have a limit of 10,000 results on list endpoint
- All conversations can be accessed using the all conversations endpoint
- The API uses OAuth2 for authentication.
- Pagination is based on cursor for most endpoints.
- Pagination info is included in the results array
- This endpoint allows access to all contacts in your organization with an unlimited
  number of results.
- All requests must be authenticated with an API token.
- Conversations resource uses offset pagination by default.
- Uses OAuth2 with a token in the Authorization header.
- 'Making a DELETE request to the contact list endpoint can potentially bulk delete
  a number of contacts: 10 by default, 100 being the maximum allowed limit.'
- 'Making a search DELETE request to the contact list endpoint will irrevocably bulk
  delete the matched contacts: 10 by default, 100 being the maximum allowed limit.'
- Limit maximum amount of conversations returned for GET request to the conversation
  list endpoint to 10,000.
- For accessing all contacts or conversations, use the new '/all/' endpoints that
  use cursor-based pagination.
- Responses include pagination info with next and previous links.
- The notes endpoint allows filtering by conversation_id or contact_identity_id.
- By default, the list of resources returned by all list endpoints are sorted by their
  ID, in descending order.
- The pagination links have filters set.
- The note list endpoint results are sorted by their ID, in descending order.
- If you provide a limit larger than that, it will fallback to this limit.
- Pagination uses cursor-based technique when accessing all conversations
- Pagination supports a maximum page size of 1000.
- Userlike offers both customer and organization authentication tokens.
- Conversations are ordered by ID in descending order by default.
- You can filter and search conversations using various parameters.
- The note list endpoint returns the last 10 notes created by default.
- The navigation events can be filtered by conversation_id or contact_identity_id.
- Contact list endpoint allows access to all contacts in your organization.
- Operator resource's list endpoint does not offer bulk deletion.
- Fetch a specific operator by providing its ID.
- Limit maximum amount of conversations or contacts returned for GET request to 10,000
- Use the header 'Userlike-Organization-Id' to access resources of a different organization
- Uses cursor-based pagination for all conversation endpoints
- By default, conversations are sorted by ID in descending order
- Pagination uses a maximum page size of 100.
- Either 'conversation_id' or 'contact_identity_id' needs to be set for certain endpoints.
- The operator resource’s list endpoint does not offer bulk deletion.
- API requests must be authenticated with an API token
- Organization authentication token allows access to a single organization's resources
- Conversations endpoint uses offset pagination, while all conversations endpoint
  uses cursor pagination.
- Default pagination size is 100 messages.
- Combination of filters is allowed for accessing specific messages or notes.
- Cursor-based pagination is available for the contact list endpoint.
- to the the 'Content-Type' header manually for PATCH requests.
- Only customers on Flex plan can create new organizations.
- Operators can always reply to conversations assigned to them, regardless of their
  permissions.
errors:
- '429: Rate limit exceeded'
- '401 Unauthorized: Recheck API security token.'
- '401 Unauthorized: Unauthorized'
- '400: Invalid packet name or state'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Invalid API token or incorrect organization ID'
- '429: Resource limit reached'
- '429: Rate limit exceeded for the specific resource.'
- '401: Unauthorized access due to invalid token.'
- '429: Burst throttling if too many requests are sent in a short time period.'
- '429: Too Many Requests - Rate limit exceeded'
- '401: Unauthorized - Invalid API token'
- '429: Too Many Requests - Rate limit exceeded.'
- '400 Bad Request: Incorrect parameters or request body.'
- '401 Unauthorized: Invalid API Key.'
- '429 Too Many Requests: You have exceeded the API rate limit.'
- '429: Too Many Requests - Limit reached for resource'
- '401: Unauthorized - Invalid API token or insufficient permissions'
- '204 No Content: Expected response status for DELETE requests'
- '429: Too Many Requests - API rate limit exceeded.'
- '429 Too Many Requests: Rate limit exceeded.'
- HTTP/1.1 204 No Content
- '204 No Content: Expected response for successful DELETE requests.'
- '401 Unauthorized: Recheck API key or permissions.'
- '429 Too Many Requests: You have exceeded the rate limit.'
- '401 Unauthorized: Invalid authentication token.'
- '204 No Content: Successful deletion, no response data.'
- '401 Unauthorized: Check your authorization token.'
- '401 Unauthorized: Recheck API key or token expiration'
- '429 Too Many Requests: Rate limit exceeded'
- '429: Too Many Requests - Throttle API calls.'
- '401: Unauthorized - Check your API token.'
- '429: Too Many Requests - Throttle your requests.'
- 'HTTP/1.1 204 No Content: No result data - expected response status'
- '204 No Content: Successful deletion of the resource.'
- '429: Too many requests - API rate limit exceeded.'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Ensure the conversation ID is correct'
- '204 No Content: Successful DELETE request.'
- '401 Unauthorized: Invalid API key or token.'
- '401: Unauthorized - Check API token.'
- '404: Not Found - Resource not found.'
- '204 No Content: Successful deletion'
- '401 Unauthorized: Check your authorization token'
- '429: Too many requests - rate limit exceeded.'
- '401: Unauthorized - check your API token.'
- '404: Not found - resource does not exist.'
- '429: Too many requests.'
- 'HTTP/1.1 204 No Content: Expected response status for delete operations.'
- 'Bad Request: Passing both conversation_id and contact_identity_id will result in
  an error response'
- '429: Too Many Requests - You have exceeded the rate limit.'
- '204 No Content: Successful delete request'
- '401 Unauthorized: Invalid authentication token'
- 'HTTP/1.1 204 No Content: Expected response status for successful DELETE requests.'
- '429: Too many requests. Rate limit exceeded.'
- '401: Unauthorized. Check API token.'
- '401 Unauthorized: Recheck OAuth token.'
- '401 Unauthorized: Recheck OAuth token or permissions'
- '404 Not Found: Ensure the resource ID is correct'
- '204 No Content: Successful deletion of conversations.'
- '404 Not Found: Check the endpoint path.'
- '204 No Content: Indicates successful deletion of contacts.'
- '429: Too Many Requests'
- '401: Unauthorized'
- 'HTTP/1.1 204 No Content: Expected response status for DELETE requests.'
- '429: Too Many Requests - You have exceeded your request limit.'
- '403: Forbidden - You do not have permission to perform this action.'
- 'HTTP/1.1 204 No Content: Expected response status for delete operations'
- '401: Unauthorized - Invalid API token.'
- 'HTTP/1.1 204 No Content: Successful deletion of conversation.'
- '204 No Content: Expected response status for DELETE requests.'
- '429: Too Many Requests - Throttle API calls'
- '204 No Content: Indicates successful deletion without data returned.'
- '429: Too many requests - limit reached'
- '403: Forbidden - check permissions or organization ID'
- '403 Forbidden: Request denied due to potential harmful action'
- '401: Unauthorized - Invalid API token or missing authorization'
- '404 Not Found: Ensure the endpoint URL is correct.'
- '403 Forbidden: Cannot delete owner'
- '403 Forbidden: Cannot delete operator making the request'
- '401 Unauthorized: Recheck API token or permissions'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - customer authentication token
  - organization authentication token
  - Authorization
client:
  base_url: https://api.userlike.com/api/um/v3
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
