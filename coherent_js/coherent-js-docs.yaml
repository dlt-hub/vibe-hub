resources:
- name: renderToString
  endpoint:
    path: /renderToString
    method: GET
    data_selector: html
- name: renderHTML
  endpoint:
    path: /renderHTML
    method: GET
    data_selector: html
- name: renderHTMLSync
  endpoint:
    path: /renderHTMLSync
    method: GET
    data_selector: html
- name: renderToStream
  endpoint:
    path: /renderToStream
    method: GET
    data_selector: stream
- name: createComponent
  endpoint:
    path: /createComponent
    method: POST
    data_selector: component
- name: withState
  endpoint:
    path: /withState
    method: POST
    data_selector: component
- name: memo
  endpoint:
    path: /memo
    method: POST
    data_selector: component
- name: compose
  endpoint:
    path: /compose
    method: POST
    data_selector: component
- name: registerEventHandler
  endpoint:
    path: /api/registerEventHandler
    method: POST
    data_selector: eventHandler
    params: {}
- name: express.coherentMiddleware
  endpoint:
    path: /api/express/coherentMiddleware
    method: POST
    data_selector: middleware
    params: {}
- name: fastify.coherentFastify
  endpoint:
    path: /api/fastify/coherentFastify
    method: POST
    data_selector: fastifyPlugin
    params: {}
- name: nextjs.createCoherentNextHandler
  endpoint:
    path: /api/nextjs/createCoherentNextHandler
    method: POST
    data_selector: nextHandler
    params: {}
- name: ExpressHomePage
  endpoint:
    path: /
    method: GET
    data_selector: html
- name: ExpressUserPage
  endpoint:
    path: /user/:username
    method: GET
    data_selector: html
- name: APIStatus
  endpoint:
    path: /api/status
    method: GET
    data_selector: json
- name: hydration_demo
  endpoint:
    path: /examples/hydration-demo.js
    method: GET
    data_selector: children
    params: {}
- name: hydration_demo
  endpoint:
    path: /hydration_demo
    method: GET
    data_selector: children
- name: home
  endpoint:
    path: /api/home
    method: GET
- name: user
  endpoint:
    path: /api/user/[username]
    method: GET
- name: status
  endpoint:
    path: /api/status
    method: GET
- name: streaming_list
  endpoint:
    path: /streaming/list
    method: GET
    data_selector: items
    params: {}
- name: streaming_data_table
  endpoint:
    path: /streaming/data-table
    method: GET
    data_selector: rows
    params: {}
- name: streaming_demo
  endpoint:
    path: /data
    method: GET
    data_selector: html.children
    params: {}
- name: '@coherentjs/core'
  endpoint:
    path: /packages/@coherentjs/core
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/api'
  endpoint:
    path: /packages/@coherentjs/api
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/client'
  endpoint:
    path: /packages/@coherentjs/client
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/express'
  endpoint:
    path: /packages/@coherentjs/express
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/fastify'
  endpoint:
    path: /packages/@coherentjs/fastify
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/koa'
  endpoint:
    path: /packages/@coherentjs/koa
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/nextjs'
  endpoint:
    path: /packages/@coherentjs/nextjs
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/database'
  endpoint:
    path: /packages/@coherentjs/database
    method: GET
    data_selector: records
    params: {}
- name: '@coherentjs/cli'
  endpoint:
    path: /packages/@coherentjs/cli
    method: GET
    data_selector: records
    params: {}
- name: ResponsiveText
  endpoint:
    path: /components/responsive-text
    method: GET
    data_selector: styles
- name: AnimatedButton
  endpoint:
    path: /components/animated-button
    method: GET
    data_selector: styles
- name: AnimatedCard
  endpoint:
    path: /components/animated-card
    method: GET
    data_selector: styles
- name: AccessibleButton
  endpoint:
    path: /components/accessible-button
    method: GET
    data_selector: styles
- name: greeting
  endpoint:
    path: /components/Greeting
    method: GET
- name: counter
  endpoint:
    path: /components/Counter
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: rows
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
- name: profiles
  endpoint:
    path: /profiles
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /database/users
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: user_by_id
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
- name: home
  endpoint:
    path: /
    method: GET
- name: about
  endpoint:
    path: /about
    method: GET
- name: users
  endpoint:
    path: /api/users/:id
    method: GET
    data_selector: user
- name: users_profile
  endpoint:
    path: /api/users/:id/profile
    method: GET
    data_selector: html
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: create_user
  endpoint:
    path: /create-user
    method: POST
- name: user_posts
  endpoint:
    path: /api/v1/users/:id/posts
    method: GET
- name: user_by_id
  endpoint:
    path: /api/v1/users/:id
    method: GET
- name: performance_optimizations
  endpoint:
    path: /performance-optimizations
    method: GET
    data_selector: optimizations
    params: {}
- name: coherent-app
  endpoint:
    path: /api/app.js
    method: GET
- name: test
  endpoint:
    path: /coherent_test
    method: POST
    data_selector: reports
    params: {}
- name: build
  endpoint:
    path: /build
    method: POST
    data_selector: docker
    params: {}
- name: deploy
  endpoint:
    path: /deploy
    method: POST
    data_selector: kubectl
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: CSS File Integration
  endpoint:
    path: /css-file-integration
    method: GET
    data_selector: styles
    params: {}
notes:
- Interactive components support client-side hydration.
- This page demonstrates client-side hydration where server-rendered HTML becomes
  interactive on the client. Components maintain their state and event handlers are
  attached seamlessly.
- Performance monitoring script included.
- Demonstrates server-side rendering and client-side interactivity.
- Export as default for Next.js API routes
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- This comprehensive guide covers all aspects of state management in Coherent.js.
- Event handlers must be serializable functions (no closures over external variables)
- The pattern is designed for simple event handling; complex logic should still use
  separate functions
- Ensure functionality works without JavaScript
- Always use `makeHydratable` for components that will be hydrated
- Add `data-coherent-component` attributes to mark components for hydration
- Use `data-action` attributes for event handling
- Clean up by calling `destroy()` when components are no longer needed
- Handle errors gracefully in component methods
- Server-side rendering provides fast initial load and SEO-friendly applications.
- 'Multi-Database Support: PostgreSQL, MySQL, SQLite, MongoDB'
- 'Use Connection Pooling: Configure appropriate pool sizes for your workload'
- The query builder works with different database adapters.
- Automatically sanitizes JSON request bodies.
- All integrations support performance monitoring when enabled
- Multi-stage Docker build for production
- Health check configured for the application
- Token expires in 24 hours
- 'Environment Configuration: Set up proper environment variables'
- 'Security Hardening: Enable HTTPS, set security headers'
- 'Performance Optimization: Enable caching and compression'
- 'Monitoring Setup: Configure logging and error tracking'
- 'Health Checks: Implement health check endpoints'
- 'Backup Strategy: Set up database and file backups'
- 'CI/CD Pipeline: Automate testing and deployment'
- Uses Node.js environment for production
- Basic health check endpoint at /health returns status and uptime
- Detailed health check endpoint at /health/detailed checks database and Redis connections
- Readiness probe endpoint at /ready checks database connection
- Uses PostgreSQL for database operations
- Backup script uploads to S3 if bucket is set
- This comprehensive deployment guide covers all aspects of deploying Coherent.js
  applications from development to production, ensuring reliability, security, and
  scalability.
- Uses pure object-oriented approach for routing
- All HTTP methods supported
- 'Supports multiple CSS integration methods: CSS Files, CSS Links, Inline CSS, Mixed
  Approaches.'
errors:
- If an error occurs in an event handler, it will be caught and logged to the console
  with a warning message, preventing the entire application from crashing
- '"Hydration can only be performed in a browser environment": This error occurs when
  trying to hydrate components in a Node.js environment. Make sure hydration code
  only runs in the browser.'
- 'Event handlers not working: Ensure elements have the correct `data-action` attributes
  and that the hydration process completed successfully.'
- 'State not updating: Check that the component was properly hydrated and that `setState`
  is being called with the correct parameters.'
- 'Validation failed: Handle validation errors accordingly'
- 'Query failed: Handle error'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Invalid API key'
auth_info:
  mentioned_objects: []
client:
  base_url: http://localhost:3000
source_metadata: null
