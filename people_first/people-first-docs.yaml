resources:
- name: profile
  endpoint:
    path: /api/profile
    method: GET
    data_selector: null
    params: {}
- name: persondrivers
  endpoint:
    path: /hrm/people/{personId}/drivers
    method: POST
    data_selector: data.persondrivers
    params: {}
- name: drivers
  endpoint:
    path: /people/{personId}/drivers
    method: POST
    data_selector: persondrivers
- name: driver_resource_template
  endpoint:
    path: /people/{personId}/drivers/resourcetemplate
    method: GET
    data_selector: persondrivers
- name: Create Person Resource Template
  endpoint:
    path: /hrm/people/resourcetemplate
    method: POST
    data_selector: data
- name: person
  endpoint:
    path: /hrm/people/resourcetemplate
    method: POST
    data_selector: data.person
- name: applicants
  endpoint:
    path: /api/v1/recruitment/odata/applicants
    method: GET
    data_selector: value
    params: {}
- name: applicants
  endpoint:
    path: /api/v1/recruitment/odata/applicants
    method: GET
    data_selector: value
    params: {}
- name: event_stream
  endpoint:
    path: /rtpi/eventstream
    method: GET
    data_selector: data.eventStream
    params: {}
- name: event_stream
  endpoint:
    path: /rtpi/eventstream
    method: GET
    data_selector: data.eventStream
- name: AbsenceLeaveChanged
  endpoint:
    path: /events/absenceLeaveChanged
    method: POST
    data_selector: events
    params: {}
- name: AbsenceLeaveDeleted
  endpoint:
    path: /events/absenceLeaveDeleted
    method: POST
    data_selector: events
    params: {}
- name: AbsenceLeaveRejected
  endpoint:
    path: /events/absenceLeaveRejected
    method: POST
    data_selector: events
    params: {}
- name: AbsenceLeaveApproved
  endpoint:
    path: /events/absenceLeaveApproved
    method: POST
    data_selector: events
    params: {}
- name: BankAccountCreated
  endpoint:
    path: /events/bankAccountCreated
    method: POST
    data_selector: events
    params: {}
- name: CustomCardDataCreated
  endpoint:
    path: /events/customCardDataCreated
    method: POST
    data_selector: events
    params: {}
- name: OccupancySalaryAndHoursTimelineChanged
  endpoint:
    path: /events/occupancySalaryAndHoursTimelineChanged
    method: POST
    data_selector: events
    params: {}
- name: OpenTimePairCreated
  endpoint:
    path: /events/OpenTimePairCreated
    method: POST
    data_selector: EventData
    params: {}
- name: ClosedTimePairCreated
  endpoint:
    path: /events/ClosedTimePairCreated
    method: POST
    data_selector: EventData
    params: {}
- name: TimePairApproved
  endpoint:
    path: /events/TimePairApproved
    method: POST
    data_selector: EventData
    params: {}
- name: TimePairRejected
  endpoint:
    path: /events/TimePairRejected
    method: POST
    data_selector: EventData
    params: {}
- name: EmploymentPeriodCreated
  endpoint:
    path: /employment-period-created
    method: POST
    data_selector: EmploymentPeriodCreated
- name: EmploymentPeriodEnded
  endpoint:
    path: /employment-period-ended
    method: POST
    data_selector: EmploymentPeriodEnded
- name: EmploymentPeriodReinstated
  endpoint:
    path: /employment-period-reinstated
    method: POST
    data_selector: EmploymentPeriodReinstated
- name: JobLeaverCreated
  endpoint:
    path: /job-leaver-created
    method: POST
    data_selector: JobLeaverCreated
- name: JobLeaverReinstated
  endpoint:
    path: /job-leaver-reinstated
    method: POST
    data_selector: JobLeaverReinstated
- name: OccupancyCreated
  endpoint:
    path: /occupancy-created
    method: POST
    data_selector: OccupancyCreated
- name: OccupancyEnded
  endpoint:
    path: /occupancy-ended
    method: POST
    data_selector: OccupancyEnded
- name: OccupancyReinstated
  endpoint:
    path: /occupancy-reinstated
    method: POST
    data_selector: OccupancyReinstated
- name: OccupancyDeleted
  endpoint:
    path: /occupancy-deleted
    method: POST
    data_selector: OccupancyDeleted
- name: OccupancyStartDateChanged
  endpoint:
    path: /occupancy-start-date-changed
    method: POST
    data_selector: OccupancyStartDateChanged
- name: ReckonableServiceDateCreated
  endpoint:
    path: /reckonable-service-date-created
    method: POST
    data_selector: ReckonableServiceDateCreated
- name: ReckonableServiceDateChanged
  endpoint:
    path: /reckonable-service-date-changed
    method: POST
    data_selector: ReckonableServiceDateChanged
- name: ReckonableServiceDateDeleted
  endpoint:
    path: /reckonable-service-date-deleted
    method: POST
    data_selector: ReckonableServiceDateDeleted
- name: OccupancyHoursAndBasisCreated
  endpoint:
    path: /occupancy-hours-and-basis-created
    method: POST
    data_selector: OccupancyHoursAndBasisCreated
- name: OccupancyHoursAndBasisChanged
  endpoint:
    path: /occupancy-hours-and-basis-changed
    method: POST
    data_selector: OccupancyHoursAndBasisChanged
- name: OccupancySalaryTimelineCreated
  endpoint:
    path: /occupancy-salary-timeline-created
    method: POST
    data_selector: OccupancySalaryTimelineCreated
- name: OccupancySalaryTimelineChanged
  endpoint:
    path: /occupancy-salary-timeline-changed
    method: POST
    data_selector: OccupancySalaryTimelineChanged
- name: WorkingPatternCreated
  endpoint:
    path: /working-pattern-created
    method: POST
    data_selector: WorkingPatternCreated
- name: WorkingPatternChanged
  endpoint:
    path: /working-pattern-changed
    method: POST
    data_selector: WorkingPatternChanged
- name: AbsenceLeaveCreated
  endpoint:
    path: /absence-leave-created
    method: POST
    data_selector: AbsenceLeaveCreated
- name: AbsenceSicknessCreated
  endpoint:
    path: /absence-sickness-created
    method: POST
    data_selector: AbsenceSicknessCreated
- name: AbsenceOtherCreated
  endpoint:
    path: /absence-other-created
    method: POST
    data_selector: AbsenceOtherCreated
- name: TimePairChanged
  endpoint:
    path: /events/timepairchanged
    method: POST
    data_selector: EventData
    params: {}
- name: TimePairDeleted
  endpoint:
    path: /events/timepairdeleted
    method: POST
    data_selector: EventData
    params: {}
- name: VacancyRequestApproved
  endpoint:
    path: /events/vacancyrequestapproved
    method: POST
    data_selector: vacancyRequest
    params: {}
- name: AbsenceLeaveChanged
  endpoint:
    path: /absenceLeaveChanged
    method: POST
    data_selector: records
- name: AbsenceLeaveDeleted
  endpoint:
    path: /absenceLeaveDeleted
    method: POST
    data_selector: records
- name: AbsenceLeaveRejected
  endpoint:
    path: /absenceLeaveRejected
    method: POST
    data_selector: records
- name: AbsenceLeaveApproved
  endpoint:
    path: /absenceLeaveApproved
    method: POST
    data_selector: records
- name: BankAccountCreated
  endpoint:
    path: /bankAccountCreated
    method: POST
    data_selector: records
- name: CustomCardDataCreated
  endpoint:
    path: /customCardDataCreated
    method: POST
    data_selector: records
- name: OccupancySalaryAndHoursTimelineChanged
  endpoint:
    path: /occupancySalaryAndHoursTimelineChanged
    method: POST
    data_selector: records
- name: Get Person Resource Template
  endpoint:
    path: /template/person
    method: GET
- name: Create Person
  endpoint:
    path: /person
    method: POST
- name: Get All People
  endpoint:
    path: /people
    method: GET
- name: Get Person by Id
  endpoint:
    path: /people/{{personId}}
    method: GET
- name: person
  endpoint:
    path: /hrm/people
    method: GET
    data_selector: data.person
- name: OpenTimePairCreated
  endpoint:
    path: /events/OpenTimePairCreated
    method: POST
    data_selector: EventData
    params: {}
- name: ClosedTimePairCreated
  endpoint:
    path: /events/ClosedTimePairCreated
    method: POST
    data_selector: EventData
    params: {}
- name: TimePairApproved
  endpoint:
    path: /events/TimePairApproved
    method: POST
    data_selector: EventData
    params: {}
- name: TimePairRejected
  endpoint:
    path: /events/TimePairRejected
    method: POST
    data_selector: EventData
    params: {}
- name: applicants
  endpoint:
    path: /api/v1/recruitment/odata/applicants
    method: GET
    data_selector: value
    params: {}
- name: TimePairChanged
  endpoint:
    path: /events/TimePairChanged
    method: POST
    data_selector: EventData
    params: {}
- name: TimePairDeleted
  endpoint:
    path: /events/TimePairDeleted
    method: POST
    data_selector: EventData
    params: {}
- name: VacancyRequestApproved
  endpoint:
    path: /events/VacancyRequestApproved
    method: POST
    data_selector: EventData
    params: {}
- name: person_resource_template
  endpoint:
    path: /template
    method: GET
- name: create_person
  endpoint:
    path: /people
    method: POST
- name: get_all_people
  endpoint:
    path: /people
    method: GET
- name: get_person_by_id
  endpoint:
    path: /people/{{personId}}
    method: GET
- name: person
  endpoint:
    path: /hrm/people
    method: GET
    data_selector: data.person
    params: {}
- name: applicants
  endpoint:
    path: /api/v1/recruitment/odata/applicants
    method: GET
    data_selector: value
    params: {}
- name: odata_request
  endpoint:
    path: ODATA_REQUEST_URI_PATH
    method: GET
notes:
- Uses Bearer Authentication — requires access token supplied by System Administrator
- Access Tokens are generated in the admin area of People First by a user with a system
  administrator role.
- ID tokens are obtained from a tenant's registered identity provider.
- Uses Bearer Authentication — requires access token supplied by System Administrator.
- People First APIs require authentication in order for an application to access them
  and make API calls.
- Mandatory fields cannot be left blank when creating drivers details.
- Ensure the access-token is valid and inserted as a header.
- Metadata provides information about data fields and their requirements.
- Metadata can provide information about a particular data field, what info can be
  entered into that data field, and also if a data field is mandatory or not.
- The People First OData APIs are designed specifically for data extraction purposes
  and is therefore read-only.
- OData APIs are designed specifically for data extraction purposes and are read-only.
- The People First OData services support OData v4.0 and both JSON and XML response
  formats.
- The Event Stream API is comprised of a single RESTful endpoint.
- Events are eventually consistent and will not necessarily appear in the order the
  events occurred.
- The API requires an access token with the 'System Integration' role.
- OData APIs are designed specifically for data extraction purposes and is therefore
  read-only.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: The request was not valid, it may be missing appropriate tenant headers, or
  it had a malformed payload'
- '401: Authentication was required but was either not provided or invalid'
- '403: You do not have access to this resource'
- '404: The requested resource does not exist, or you are not authorised to access
  it'
- '500: An internal error occurred'
- '503: The API is temporarily unavailable'
- '405: The method used is not allowed'
- '409: The request was not processed because of a concurrency issue, most commonly
  the [''If-Match''] header was required but not provided'
- '412: The request was not processed because a [''If-Match''] request header condition
  was not met'
- '401 Unauthorized: Recheck access token'
auth_info:
  mentioned_objects: []
client:
  base_url: https://TENANT_CODE-ENVIRONMENT_CODE.people-first.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Accept-Language: en-GB
    Content-Type: application/json; charset=utf-8
source_metadata: null
