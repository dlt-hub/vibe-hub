resources:
- name: events
  endpoint:
    path: /datahub/v1/events
    method: POST
    data_selector: events
- name: csv_upload
  endpoint:
    path: /datahub/v1/csv/upload
    method: POST
    data_selector: batch
- name: events
  endpoint:
    path: /datahub/v1/events
    method: POST
    data_selector: events
- name: csv_upload
  endpoint:
    path: /datahub/v1/csv/upload
    method: POST
    data_selector: batch
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    params:
      maxResults: '500'
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: users
  endpoint:
    path: /iam/v1/users
    method: GET
    data_selector: records
- name: allocations
  endpoint:
    path: /analytics/v1/allocations
    method: GET
    data_selector: records
- name: datahub_csv_upload
  endpoint:
    path: /datahub/v1/csv/upload
    method: POST
    data_selector: response
- name: alerts
  endpoint:
    path: /reference/getalert
    method: GET
- name: anomalies
  endpoint:
    path: /reference/getanomaly
    method: GET
- name: assets
  endpoint:
    path: /reference/idofassets
    method: GET
- name: attribution_groups
  endpoint:
    path: /reference/getattributiongroup
    method: GET
- name: attributions
  endpoint:
    path: /reference/getattribution
    method: GET
- name: budgets
  endpoint:
    path: /reference/getbudget
    method: GET
- name: invoices
  endpoint:
    path: /reference/getinvoice
    method: GET
- name: known_issues
  endpoint:
    path: /reference/getknownissue
    method: GET
- name: reports
  endpoint:
    path: /reference/getreport
    method: GET
- name: alerts
  endpoint:
    path: /reference/getalert
    method: GET
- name: anomalies
  endpoint:
    path: /reference/getanomaly
    method: GET
- name: assets
  endpoint:
    path: /reference/idofassets
    method: GET
- name: attribution_groups
  endpoint:
    path: /reference/getattributiongroup
    method: GET
- name: attributions
  endpoint:
    path: /reference/getattribution
    method: GET
- name: budgets
  endpoint:
    path: /reference/getbudget
    method: GET
- name: invoices
  endpoint:
    path: /reference/getinvoice
    method: GET
- name: known_issues
  endpoint:
    path: /reference/getknownissue
    method: GET
- name: reports
  endpoint:
    path: /reference/getreport
    method: GET
- name: reports_list
  endpoint:
    path: /analytics/v1/reports
    method: GET
    data_selector: reports
- name: report_details
  endpoint:
    path: /analytics/v1/reports/{id}
    method: GET
    data_selector: result
- name: report_config
  endpoint:
    path: /analytics/v1/reports/{id}/config
    method: GET
    data_selector: config
- name: create_report
  endpoint:
    path: /analytics/v1/reports
    method: POST
- name: run_query
  endpoint:
    path: /analytics/v1/reports/query
    method: POST
- name: update_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: PATCH
- name: delete_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: DELETE
- name: report_results
  endpoint:
    path: /reports/{id}
    method: GET
    data_selector: result
    params:
      timeRange: optional
- name: reports_list
  endpoint:
    path: /analytics/v1/reports
    method: GET
    data_selector: reports
    params:
      maxResults: '5'
- name: report_details
  endpoint:
    path: /analytics/v1/reports/{id}
    method: GET
    data_selector: report
    params: {}
- name: report_config
  endpoint:
    path: /analytics/v1/reports/{id}/config
    method: GET
    data_selector: config
    params: {}
- name: create_report
  endpoint:
    path: /analytics/v1/reports
    method: POST
    data_selector: report
    params: {}
- name: run_query
  endpoint:
    path: /analytics/v1/reports/query
    method: POST
    data_selector: result
    params: {}
- name: update_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: PATCH
    data_selector: report
    params: {}
- name: delete_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: DELETE
    data_selector: result
    params: {}
- name: resource_permission
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: GET
    data_selector: permissions
- name: update_resource_permission
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: PUT
    data_selector: permissions
- name: report_results
  endpoint:
    path: /reports/{id}
    method: GET
    data_selector: result
- name: anomalies.list
  endpoint:
    path: /anomalies/v1/
    method: GET
    data_selector: anomalies
    params: {}
- name: anomalies.get
  endpoint:
    path: /anomalies/v1/{anomaly_id}
    method: GET
    data_selector: anomaly
    params: {}
- name: resource_permission
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: GET
    data_selector: permissions
- name: update_resource_permission
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: PUT
    data_selector: permissions
- name: invoices.list
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params:
      minCreationTime: string
      maxCreationTime: string
      filter: string
- name: invoices.get
  endpoint:
    path: /invoices/{invoice_id}
    method: GET
    data_selector: invoice
    params: {}
- name: anomalies.list
  endpoint:
    path: /anomalies/v1/
    method: GET
    data_selector: anomalies
    params: {}
- name: anomalies.get
  endpoint:
    path: /anomalies/v1/{anomaly_id}
    method: GET
    data_selector: anomaly
    params: {}
- name: list_users
  endpoint:
    path: /users/v1/list
    method: GET
    data_selector: records
- name: invite_user
  endpoint:
    path: /users/v1/invite
    method: POST
    data_selector: user
- name: update_user
  endpoint:
    path: /users/v1/{id}
    method: PATCH
    data_selector: user
- name: delete_user
  endpoint:
    path: /users/v1/{id}
    method: DELETE
- name: knownIssues
  endpoint:
    path: /core/v1/knownissues
    method: GET
    data_selector: knownIssues
    params: {}
- name: cloudIncidents
  endpoint:
    path: /core/v1/cloudincidents/{issue_id}
    method: GET
    data_selector: Cloud Incident
    params: {}
- name: invoices.list
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      minCreationTime: string
      maxCreationTime: string
      filter: string
- name: invoices.get
  endpoint:
    path: /billing/v1/invoices/{invoice_id}
    method: GET
    data_selector: invoice
- name: assets.list
  endpoint:
    path: /billing/v1/assets
    method: GET
    data_selector: assets
    params:
      filter: type:g-suite|type:google-cloud
- name: assets.patch
  endpoint:
    path: /billing/v1/assets/{asset_id}
    method: PATCH
    data_selector: properties
    params: {}
- name: list_users
  endpoint:
    path: /users/v1/list
    method: GET
    data_selector: ''
    params: {}
- name: invite_user
  endpoint:
    path: /users/v1/invite
    method: POST
    data_selector: ''
    params: {}
- name: update_user
  endpoint:
    path: /users/v1/{id}
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_user
  endpoint:
    path: /users/v1/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: assets.create
  endpoint:
    path: /billing/v1/createAsset
    method: POST
    data_selector: accountID
    params: {}
- name: tickets
  endpoint:
    path: /support/v1/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: knownIssues
  endpoint:
    path: /core/v1/knownissues
    method: GET
    data_selector: knownIssues
    params: {}
- name: cloudIncidents
  endpoint:
    path: /core/v1/cloudincidents/{issue_id}
    method: GET
    data_selector: Cloud Incident
    params: {}
- name: ticket_status
  endpoint:
    path: /docs/ticket-statuses
    method: GET
    data_selector: API Value
- name: ticket_severity
  endpoint:
    path: /docs/ticket-statuses
    method: GET
    data_selector: API Value
- name: assets
  endpoint:
    path: /billing/v1/assets
    method: GET
    data_selector: assets
    params:
      filter: type:g-suite|type:google-cloud
- name: assets_patch
  endpoint:
    path: /billing/v1/assets/{asset_id}
    method: PATCH
    data_selector: ''
    params: {}
- name: alerts
  endpoint:
    path: /analytics/v1/alerts
    method: GET
    data_selector: alerts
    params:
      maxResults: '500'
- name: assets.create
  endpoint:
    path: /billing/v1/createAsset
    method: POST
    data_selector: accountID
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: object
    params: {}
- name: create_alert
  endpoint:
    path: /alerts
    method: POST
    data_selector: object
    params: {}
- name: tickets.list
  endpoint:
    path: /tickets
    method: GET
    data_selector: tickets
    params: {}
- name: tickets.create
  endpoint:
    path: /tickets
    method: POST
    data_selector: id
    params: {}
- name: alert
  endpoint:
    path: /analytics/v1/alerts/{id}
    method: GET
- name: platforms
  endpoint:
    path: /docs/support-metadata
    method: GET
    data_selector: platform
    params: {}
- name: products
  endpoint:
    path: /docs/support-metadata
    method: GET
    data_selector: product
    params: {}
- name: delete_alert
  endpoint:
    path: /analytics/v1/alerts/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: ticket_status
  endpoint:
    path: /ticket-statuses
    method: GET
    data_selector: support_request_status
- name: ticket_severity
  endpoint:
    path: /ticket-severities
    method: GET
    data_selector: support_request_severity
- name: update_alert
  endpoint:
    path: /analytics/v1/alerts/{id}
    method: PATCH
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: allocations
  endpoint:
    path: /allocations
    method: GET
    data_selector: allocations
    params: {}
- name: allocations
  endpoint:
    path: /allocations
    method: POST
- name: events
  endpoint:
    path: /datahub/v1/events
    method: POST
- name: allocation
  endpoint:
    path: /allocations/{id}
    method: GET
- name: create_alert
  endpoint:
    path: /analytics/v1/alerts
    method: POST
    data_selector: object
    params: {}
- name: Delete an allocation
  endpoint:
    path: /analytics/v1/allocations/{id}
    method: DELETE
    data_selector: object
    params: {}
- name: alert
  endpoint:
    path: /alerts/{id}
    method: GET
    data_selector: object
    params: {}
- name: Update an allocation
  endpoint:
    path: /analytics/v1/allocations/{id}
    method: PATCH
- name: delete_alert
  endpoint:
    path: /alerts/{id}
    method: DELETE
- name: update_alert
  endpoint:
    path: /analytics/v1/alerts/{id}
    method: PATCH
- name: attribution_groups
  endpoint:
    path: /analytics/v1/attributiongroups
    method: GET
    params: {}
- name: attribution_group
  endpoint:
    path: /attributiongroups
    method: POST
    data_selector: response
    params: {}
- name: allocations
  endpoint:
    path: /allocations
    method: GET
    data_selector: allocations
    params: {}
- name: attribution_group
  endpoint:
    path: /attributiongroups/{id}
    method: GET
- name: allocations
  endpoint:
    path: /allocations
    method: POST
- name: attribution_group
  endpoint:
    path: /analytics/v1/attributiongroups/{id}
    method: DELETE
- name: allocation
  endpoint:
    path: /analytics/v1/allocations/{id}
    method: GET
- name: attribution_group
  endpoint:
    path: /analytics/v1/attributiongroups/{id}
    method: PATCH
    data_selector: error
    params: {}
- name: delete_allocation
  endpoint:
    path: /allocations/{id}
    method: DELETE
- name: attributions
  endpoint:
    path: /analytics/v1/attributions
    method: GET
    data_selector: Attributions
    params: {}
- name: Update an allocation
  endpoint:
    path: /allocations/{id}
    method: PATCH
- name: attribution
  endpoint:
    path: /attributions
    method: POST
- name: attribution_groups
  endpoint:
    path: /analytics/v1/attributiongroups
    method: GET
    data_selector: attributionGroups
- name: attribution
  endpoint:
    path: /attributions/{id}
    method: GET
    data_selector: attribution
- name: delete_attribution
  endpoint:
    path: /analytics/v1/attributions/{id}
    method: DELETE
- name: attribution_group
  endpoint:
    path: /attributiongroups
    method: POST
    data_selector: responses
    params: {}
- name: attribution
  endpoint:
    path: /analytics/v1/attributions/{id}
    method: PATCH
- name: attribution_group
  endpoint:
    path: /analytics/v1/attributiongroups/{id}
    method: GET
- name: budgets
  endpoint:
    path: /analytics/v1/budgets
    method: GET
    data_selector: budgets
    params: {}
- name: attribution_group
  endpoint:
    path: /analytics/v1/attributiongroups/{id}
    method: DELETE
    data_selector: object
    params: {}
- name: budgets
  endpoint:
    path: /budgets
    method: POST
    data_selector: object
- name: attribution_group
  endpoint:
    path: /analytics/v1/attributiongroups/{id}
    method: PATCH
- name: budgets
  endpoint:
    path: /analytics/v1/budgets/{id}
    method: GET
- name: attributions
  endpoint:
    path: /attributions
    method: GET
    data_selector: Attributions
    params: {}
- name: budgets
  endpoint:
    path: /analytics/v1/budgets/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: attribution
  endpoint:
    path: /attributions
    method: POST
- name: budgets
  endpoint:
    path: /analytics/v1/budgets/{id}
    method: PATCH
- name: dimension
  endpoint:
    path: /analytics/v1/dimension
    method: GET
- name: attribution
  endpoint:
    path: /attributions/{id}
    method: GET
- name: attribution
  endpoint:
    path: /analytics/v1/attributions/{id}
    method: DELETE
    data_selector: error
    params: {}
- name: dimensions
  endpoint:
    path: /analytics/v1/dimensions
    method: GET
    data_selector: dimensions
    params:
      maxResults: '500'
- name: attribution
  endpoint:
    path: /analytics/v1/attributions/{id}
    method: PATCH
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: budgets
  endpoint:
    path: /budgets
    method: GET
    data_selector: budgets
    params:
      maxResults: '50'
- name: create_report
  endpoint:
    path: /analytics/v1/reports
    method: POST
- name: budgets
  endpoint:
    path: /budgets
    method: POST
    data_selector: object
- name: run_query
  endpoint:
    path: /reports/query
    method: POST
- name: budgets
  endpoint:
    path: /budgets/{id}
    method: GET
- name: get_report_results
  endpoint:
    path: /analytics/v1/reports/{id}
    method: GET
    data_selector: object
- name: budgets
  endpoint:
    path: /budgets/{id}
    method: DELETE
    data_selector: error
- name: delete_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: DELETE
    data_selector: object
- name: budgets
  endpoint:
    path: /analytics/v1/budgets/{id}
    method: PATCH
- name: update_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: PATCH
    data_selector: object
    params: {}
- name: dimension
  endpoint:
    path: /analytics/v1/dimension
    method: GET
- name: report_config
  endpoint:
    path: /analytics/v1/reports/{id}/config
    method: GET
- name: resource_permissions
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: GET
- name: dimensions
  endpoint:
    path: /dimensions
    method: GET
    data_selector: dimensions
    params: {}
- name: Update resource permissions
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: PUT
- name: Get resource permissions
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: GET
- name: reports
  endpoint:
    path: /analytics/v1/reports
    method: GET
    params: {}
- name: anomalies
  endpoint:
    path: /anomalies/v1
    method: GET
- name: create_report
  endpoint:
    path: /reports
    method: POST
    data_selector: object
    params: {}
- name: anomaly
  endpoint:
    path: /anomalies/v1/{id}
    method: GET
- name: Run a query
  endpoint:
    path: /analytics/v1/reports/query
    method: POST
- name: validate_user
  endpoint:
    path: /validate
    method: GET
    data_selector: object
- name: get_report_results
  endpoint:
    path: /analytics/v1/reports/{id}
    method: GET
    data_selector: object
- name: create_asset
  endpoint:
    path: /createAsset
    method: POST
    data_selector: object
    params:
      type: amazon-web-services
      mode: New
      accountName: Account name
- name: delete_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: DELETE
    data_selector: object
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params:
      maxResults: '50'
- name: update_report
  endpoint:
    path: /analytics/v1/reports/{id}
    method: PATCH
- name: Update an asset
  endpoint:
    path: /billing/v1/assets/{id}
    method: PATCH
- name: report_config
  endpoint:
    path: /reports/{id}/config
    method: GET
- name: Ingest CSV file
  endpoint:
    path: /datahub/v1/csv/upload
    method: POST
- name: delete_all_events
  endpoint:
    path: /datahub/v1/events
    method: DELETE
    data_selector: object
- name: resource_permissions
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: GET
- name: delete_specific_events
  endpoint:
    path: /events/delete
    method: POST
- name: update_resource_permissions
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: PUT
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params: {}
- name: anomalies
  endpoint:
    path: /anomalies/v1
    method: GET
    data_selector: anomalies
- name: invoice
  endpoint:
    path: /billing/v1/invoices/{id}
    method: GET
    data_selector: object
    params: {}
- name: anomaly
  endpoint:
    path: /anomalies/v1/{id}
    method: GET
- name: cloud_incidents
  endpoint:
    path: /cloudincidents
    method: GET
    data_selector: incidents
    params: {}
- name: validate_user
  endpoint:
    path: /auth/v1/validate
    method: GET
    data_selector: object
- name: cloud_incident
  endpoint:
    path: /cloudincidents/{id}
    method: GET
- name: account_team
  endpoint:
    path: /customers/v1/accountTeam
    method: GET
    data_selector: accountManagers
- name: create_asset
  endpoint:
    path: /createAsset
    method: POST
    data_selector: object
    params: {}
- name: users
  endpoint:
    path: /iam/v1/users
    method: GET
    data_selector: users
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params:
      maxResults: '50'
- name: invite_user
  endpoint:
    path: /iam/v1/users/invite
    method: POST
    data_selector: message
    params: {}
- name: assets
  endpoint:
    path: /billing/v1/assets/{id}
    method: PATCH
- name: delete_user
  endpoint:
    path: /iam/v1/users/{id}
    method: DELETE
    data_selector: object
    params: {}
- name: Ingest CSV file
  endpoint:
    path: /csv/upload
    method: POST
- name: update_user
  endpoint:
    path: /iam/v1/users/{id}
    method: PATCH
- name: delete_all_events
  endpoint:
    path: /datahub/v1/events
    method: DELETE
    data_selector: object
    params: {}
- name: roles
  endpoint:
    path: /iam/v1/roles
    method: GET
    data_selector: roles
- name: delete_specific_events
  endpoint:
    path: /datahub/v1/events/delete
    method: POST
    data_selector: message
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: array of objects
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params:
      maxResults: 50
- name: platforms
  endpoint:
    path: /listplatforms
    method: GET
    data_selector: platforms
- name: products
  endpoint:
    path: /metadata/products
    method: GET
    data_selector: products
- name: invoice
  endpoint:
    path: /invoices/{id}
    method: GET
    data_selector: object
    params: {}
- name: list_requests
  endpoint:
    path: /support/v1/tickets
    method: GET
    data_selector: tickets
    params:
      maxResults: '50'
- name: cloud_incidents
  endpoint:
    path: /cloudincidents
    method: GET
    data_selector: incidents
    params: {}
- name: support_request
  endpoint:
    path: /support/v1/tickets
    method: POST
    data_selector: object
    params: {}
- name: cloud_incident
  endpoint:
    path: /cloudincidents/{id}
    method: GET
    data_selector: object
    params: {}
- name: account_team
  endpoint:
    path: /accountTeam
    method: GET
    data_selector: accountManagers
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: allocations
  endpoint:
    path: /allocations
    method: GET
    data_selector: allocations
    params: {}
- name: invite_user
  endpoint:
    path: /iam/v1/users/invite
    method: POST
- name: attribution_groups
  endpoint:
    path: /analytics/v1/attributiongroups
    method: GET
    data_selector: attributionGroups
- name: delete_user
  endpoint:
    path: /iam/v1/users/{id}
    method: DELETE
    data_selector: object
- name: attributions
  endpoint:
    path: /attributions
    method: GET
    data_selector: Attributions
    params: {}
- name: update_user
  endpoint:
    path: /iam/v1/users/{id}
    method: PATCH
- name: budgets
  endpoint:
    path: /budgets
    method: GET
    data_selector: budgets
    params: {}
- name: roles
  endpoint:
    path: /iam/v1/roles
    method: GET
    data_selector: roles
- name: dimension
  endpoint:
    path: /dimension
    method: GET
    data_selector: object
    params:
      type: datetime
      id: ''
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: array of objects
- name: platforms
  endpoint:
    path: /metadata/platforms
    method: GET
- name: reports
  endpoint:
    path: /analytics/v1/reports
    method: GET
    data_selector: reports
    params: {}
- name: products
  endpoint:
    path: /metadata/products
    method: GET
    data_selector: products
- name: resource_permissions
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: GET
- name: anomalies
  endpoint:
    path: /anomalies/v1
    method: GET
    data_selector: anomalies
- name: list_requests
  endpoint:
    path: /support/v1/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: validate_user
  endpoint:
    path: /auth/v1/validate
    method: GET
    data_selector: object
    params: {}
- name: support_request
  endpoint:
    path: /tickets
    method: POST
    data_selector: object
- name: create_asset
  endpoint:
    path: /createAsset
    method: POST
    data_selector: object
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: ingest_csv_file
  endpoint:
    path: /csv/upload
    method: POST
    data_selector: object
    params: {}
- name: allocations
  endpoint:
    path: /allocations
    method: GET
    data_selector: allocations
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params:
      maxResults: 50
- name: cloud_incidents
  endpoint:
    path: /cloudincidents
    method: GET
    data_selector: incidents
    params: {}
- name: attribution_group
  endpoint:
    path: /analytics/v1/attributiongroups
    method: GET
    data_selector: attributionGroups
    params: {}
- name: account_team
  endpoint:
    path: /customers/v1/accountTeam
    method: GET
    data_selector: accountManagers
- name: attributions
  endpoint:
    path: /analytics/v1/attributions
    method: GET
    data_selector: Attributions
- name: users
  endpoint:
    path: /iam/v1/users
    method: GET
    data_selector: users
- name: budgets
  endpoint:
    path: /analytics/v1/budgets
    method: GET
    params:
      maxResults: '50'
- name: roles
  endpoint:
    path: /iam/v1/roles
    method: GET
- name: dimension
  endpoint:
    path: /analytics/v1/dimension
    method: GET
    params:
      type: datetime
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: array of objects
- name: reports
  endpoint:
    path: /analytics/v1/reports
    method: GET
    data_selector: reports
    params: {}
- name: platforms
  endpoint:
    path: /metadata/platforms
    method: GET
    data_selector: platforms
- name: resource_permissions
  endpoint:
    path: /sharing/v1/{resourceType}/{resourceId}
    method: GET
- name: products
  endpoint:
    path: /metadata/products
    method: GET
- name: anomalies
  endpoint:
    path: /anomalies/v1
    method: GET
    data_selector: anomalies
    params: {}
- name: list_requests
  endpoint:
    path: /support/v1/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: validate_user
  endpoint:
    path: /auth/v1/validate
    method: GET
    data_selector: object
    params: {}
- name: create_asset
  endpoint:
    path: /createAsset
    method: POST
    data_selector: object
    params: {}
- name: Ingest CSV file
  endpoint:
    path: /datahub/v1/csv/upload
    method: POST
    data_selector: batch
    params: {}
- name: invoices
  endpoint:
    path: /billing/v1/invoices
    method: GET
    data_selector: invoices
    params:
      maxResults: 50
- name: cloud_incidents
  endpoint:
    path: /cloudincidents
    method: GET
    data_selector: incidents
    params: {}
- name: account_team
  endpoint:
    path: /accountTeam
    method: GET
- name: users
  endpoint:
    path: /iam/v1/users
    method: GET
    data_selector: users
- name: roles
  endpoint:
    path: /iam/v1/roles
    method: GET
    data_selector: roles
- name: organizations
  endpoint:
    path: /iam/v1/organizations
    method: GET
    data_selector: array of objects
- name: platforms
  endpoint:
    path: /metadata/platforms
    method: GET
    data_selector: platforms
- name: products
  endpoint:
    path: /metadata/products
    method: GET
    data_selector: products
- name: support_requests
  endpoint:
    path: /support/v1/tickets
    method: GET
    data_selector: tickets
    params: {}
notes:
- The DataHub API only accepts files no larger than 30MB. If your CSV is beyond 30MB,
  compress it using ZIP or GZ.
- The ingested data will be available in the DoiT console within 15 minutes, regardless
  of the data formats.
- The DataHub API only accepts files no larger than 30MB.
- If your CSV is beyond 30MB, compress it using ZIP or GZ.
- The API key is automatically populated in the logged-in user's Authorization header
  field.
- DoiT API enforces rate limits to safeguard the API server against bursts of incoming
  traffic and excessive resource consumption, helping ensure fair usage and stability.
- 'API request rate limit: Up to 1,000 requests per minute.'
- Requires setup of connected app in DoiT.
- 'If you need to add API key manually, use the format: Authorization: Bearer <YOUR
  API KEY>.'
- maxResults does not guarantee a specific number of results per page
- A non-empty nextPageToken field indicates incomplete results
- Filters are a powerful tool you can use to access the data you need
- Most DoiT Platform APIs (`*.list` operations) support the `filter` parameter.
- maxResults does not guarantee a specific number of results per page.
- A non-empty nextPageToken indicates there are more results to fetch.
- 'Required Permissions: Cloud Analytics User'
- You can pass an optional timeRange query parameter to override the time range of
  the report.
- You must provide the full permission list in the request body when updating permissions.
- For a single report, you can have up to three concurrent requests using the same
  API key.
- You cannot cancel a request while it is in progress.
- Anomalies API helps to obtain cloud cost or usage anomalies for Google Cloud, AWS,
  and Azure.
- Invoice Viewer permission is required to access invoice data.
- Cloud Analytics User permission is required.
- The Users API allows you to invite and manage users in your organization.
- No permission is required to access Cloud incidents API
- Invoice Viewer role required to access invoices
- Licenses Manager permissions are required to access this API.
- Only online subscriptions can be modified by this API.
- The Users API allows you to invite and manage the users in your organization.
- Requires Billing Profile Admin permissions (part of Admin built-in role)
- No permission is required to access Support API
- Customers with active Google Workspace or Microsoft Office 365 subscriptions can
  provision additional licenses for their domains.
- While you can always add more licenses, you won't be able to decrease the number
  of licenses for annual/commitment subscriptions.
- Billing Profile Admin permissions required to use this API.
errors:
- 'HTTP 201 OK: Indicates successful ingestion of data.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Authorization field missing
- 400 Bad Request - The server cannot process the request, often due to malformed
  request.
- 401 Unauthorized - Invalid API key.
- 403 Forbidden - The client is not authorized to perform the request.
- 404 Not Found - The requested resource does not exist.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Replace ''YOUR_API_KEY'' with your actual API key'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Ensure API key is valid.'
- '404 Not Found: Check if the invoice ID is correct.'
- '401 Unauthorized: Replace ''YOUR_API_KEY'' with your actual API key.'
- '401 Unauthorized: Recheck API key'
- 500 Internal Server Error - Something went wrong with the DoiT API server.
- '400 Bad Request: The server cannot process the request, often due to malformed
  request.'
- '401 Unauthorized: Invalid API key.'
- '403 Forbidden: The client is not authorized to perform the request.'
- '404 Not Found: The requested resource does not exist.'
- 409 Conflict - The allocation cannot be deleted because it is used by other resources.
- 409 Conflict - The attribution group cannot be deleted because it is being used
  by other resources.
- '500 Internal Server Error: Something went wrong with the DoiT API server.'
- 409 Conflict - The attribution cannot be deleted because it is being used by other
  resources.
- 429 Too Many Requests.
auth_info:
  mentioned_objects:
  - API keys
client:
  base_url: https://api.doit.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
