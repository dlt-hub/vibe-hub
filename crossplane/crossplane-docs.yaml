resources:
- name: iscsiVolume
  endpoint:
    path: /iscsi/volume
    method: POST
    data_selector: volumeData
    params:
      iqn: required
      lun: required
      targetPortal: required
- name: ClusterUsage
  endpoint:
    path: /apis/protection.crossplane.io/v1beta1/clusterusages
    method: GET
    data_selector: items
    params: {}
- name: CompositeResourceDefinition
  endpoint:
    path: /apis/apiextensions.crossplane.io/v1/compositeresourcedefinitions
    method: GET
    data_selector: items
    params: {}
- name: Composition
  endpoint:
    path: /apis/apiextensions.crossplane.io/v1/compositions
    method: GET
    data_selector: items
    params: {}
- name: LocalObjectReference
  endpoint:
    path: /object
    method: GET
- name: liveness_probe
  endpoint:
    path: /liveness
    method: GET
    data_selector: probes
    params: {}
- name: startup_probe
  endpoint:
    path: /startup
    method: GET
    data_selector: probes
    params: {}
- name: ResourceClaim
  endpoint:
    path: /pod/spec/resourceClaims
    method: GET
- name: hostPath
  endpoint:
    path: /volumes/glusterfs
    method: GET
    data_selector: items
    params: {}
- name: iscsi
  endpoint:
    path: /volumes/iscsi
    method: GET
    data_selector: items
    params: {}
- name: nfs
  endpoint:
    path: /volumes/nfs
    method: GET
    data_selector: items
    params: {}
- name: volume
  endpoint:
    path: /api/v1/volume
    method: GET
    data_selector: volumes
- name: usage
  endpoint:
    path: /usages
    method: GET
    data_selector: items
- name: CompositeResourceDefinition
  endpoint:
    path: /apis/apiextensions.crossplane.io/v1/compositeresourcedefinitions
    method: GET
- name: Composition
  endpoint:
    path: /apis/apiextensions.crossplane.io/v1/compositions
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: DownwardAPIVolumeFile
  endpoint:
    path: /path/to/DownwardAPIVolumeFile
    method: GET
    data_selector: items
    params: {}
- name: nfs
  endpoint:
    path: /nfs
    method: GET
    data_selector: items
    params:
      server: ''
      path: ''
- name: ClusterUsage
  endpoint:
    path: /apis/protection.crossplane.io/v1beta1/clusterusages
    method: GET
    data_selector: items
- name: CompositeResourceDefinition
  endpoint:
    path: /apis/apiextensions.crossplane.io/v1/compositeresourcedefinitions
    method: GET
    data_selector: items
- name: Composition
  endpoint:
    path: /apis/apiextensions.crossplane.io/v1/compositions
    method: GET
    data_selector: items
- name: CompositionRevision
  endpoint:
    path: /apis/apiextensions.crossplane.io/v1/compositionrevisions
    method: GET
    data_selector: items
- name: Configuration
  endpoint:
    path: /apis/pkg.crossplane.io/v1/configurations
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: secretRef
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: monitors
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: path
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: readOnly
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: secretFile
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: secretRef
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: fsType
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: volumeID
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: path
  endpoint:
    path: /volumes/glusterfs/path
    method: GET
- name: readOnly
  endpoint:
    path: /volumes/glusterfs/readOnly
    method: GET
- name: hostPath
  endpoint:
    path: /volumes/glusterfs/hostPath
    method: GET
- name: storageos
  endpoint:
    path: /storageos
    method: GET
- name: vsphereVolume
  endpoint:
    path: /vsphereVolume
    method: GET
- name: custom_resource_definition
  endpoint:
    path: /apis/<group>/<version>/...
    method: POST
    data_selector: resources
    params: {}
- name: usage
  endpoint:
    path: /v1beta1/usages
    method: GET
    data_selector: items
    params: {}
notes:
- An empty selector ({}) matches all namespaces.
- If no RuntimeClass resource matches the named class, the pod will not be run.
- If not specified, the pod will be dispatched by default scheduler.
- 'mode is Optional: mode bits used to set permissions on this file. Must be an octal
  value between 0000 and 0777 or a decimal value between 0 and 511.'
- JSON requires decimal values for mode bits.
- Ensure that the filesystem type is supported by the host operating system.
- Defaults to 'default' for iscsiInterface.
- Operations are an alpha feature available in Crossplane v2.
- Crossplane v2 makes Crossplane more useful, more intuitive, and less opinionated.
- Most users can upgrade to Crossplane v2 without breaking changes.
- Crossplane v2 is backward compatible with v1-style XRs and MRs.
- This is an alpha feature.
- Crossplane may change or drop this feature at any time.
- Install the Crossplane CLI on a user’s computer.
- Most Crossplane CLI commands are independent of Kubernetes and don’t require access
  to a Crossplane pod.
- Default for revisionActivationPolicy is Automatic.
- Default for revisionHistoryLimit is 1.
- Default for skipDependencyResolution is false.
- Name must match the name of one entry in pod.spec.resourceClaims of the Pod where
  this field is used. It makes that resource available inside a container.
- 'readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
  the ReadOnly setting in VolumeMounts.'
- 'secretFile is Optional: SecretFile is the path to key ring for User, default is
  /etc/ceph/user.secret'
- Crossplane follows the CNCF Code of Conduct.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Empty topologyKey is not allowed.
- This requires the ProcMountType feature flag to be enabled.
- Note that this field cannot be set when spec.os.name is windows.
- Only annotations, labels, name, namespace and uid are supported for field selection.
- This will be canonicalized upon output, so case-variant names will be understood
  as the same header.
- If unset or empty, the “legacy” RuntimeClass will be used, which is an implicit
  class with an empty definition that uses the default runtime handler.
- 'Default: IfNotPresent'
- 'Default: Automatic'
- 'Default: 1'
- 'Default: false'
- 'Default: 3'
- Defaults to HTTP.
- This field enables fine-grained control over resource allocation for the entire
  pod, allowing resource sharing among containers in a pod.
- This is an alpha field and requires enabling the PodLevelResources feature gate.
- The scheme must be “https”; the URL must begin with “https://”.
- Using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://releases.crossplane.io/stable/current/bin
source_metadata: null
