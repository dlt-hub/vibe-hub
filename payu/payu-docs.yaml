resources:
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
    data_selector: records
- name: Android Core SDK
  endpoint:
    path: /android-core-sdk
    method: GET
    data_selector: records
- name: Android Custom Browser SDK
  endpoint:
    path: /android-custombrowser-sdk
    method: GET
    data_selector: records
- name: Android Native OTP Assist SDK
  endpoint:
    path: /android-native-otp-assist-sdk
    method: GET
    data_selector: records
- name: Android UPI SDK
  endpoint:
    path: /android-upi-sdk
    method: GET
    data_selector: records
- name: Android Google Pay SDK
  endpoint:
    path: /android-google-pay-sdk
    method: GET
    data_selector: records
- name: Android PhonePe SDK
  endpoint:
    path: /android-phonepe-sdk
    method: GET
    data_selector: records
- name: Android Ola Money SDK
  endpoint:
    path: /ola-money-sdk
    method: GET
    data_selector: records
- name: Android 3DS 2.0 SDK
  endpoint:
    path: /android-3ds20-sdk
    method: GET
    data_selector: records
- name: Android UPI Bolt SDK
  endpoint:
    path: /payu-bolt-sdk
    method: GET
    data_selector: records
- name: refund
  endpoint:
    path: /v1/refunds
    method: POST
    data_selector: data
    params: {}
- name: Collect Payment API
  endpoint:
    path: /_payment_payu_hosted_checkout
    method: POST
- name: Merchant Hosted Checkout
  endpoint:
    path: /_payment_merchant_hosted
    method: POST
- name: S2S
  endpoint:
    path: /_payment_server_to_server
    method: POST
- name: payment_link
  endpoint:
    path: /payment/link
    method: POST
- name: transaction_details
  endpoint:
    path: /transaction/details
    method: GET
- name: Collect Payment
  endpoint:
    path: /_payment
    method: POST
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: ''
    params: {}
- name: Hosted Checkout
  endpoint:
    path: /reference/_payment_cross-border_payu_hosted_checkout
    method: GET
- name: Merchant Hosted Integration
  endpoint:
    path: /reference/merchant-hosted-integration-cb
    method: GET
- name: UPI
  endpoint:
    path: /reference/_payment_cross-border_merchant_hosted_upi
    method: GET
- name: Cards
  endpoint:
    path: /reference/_payment_cross-border_merchant_hosted_cards
    method: GET
- name: UDF Update API
  endpoint:
    path: /reference/udf_update_api
    method: GET
- name: Invoice Upload API
  endpoint:
    path: /reference/invoice_upload_api
    method: GET
- name: Settlement Detail Range API
  endpoint:
    path: /reference/settlement-detail-range-api-for-cross-border
    method: GET
- name: Get Settlement Detail API
  endpoint:
    path: /reference/get-settlement-detail-api-cross-border-payments
    method: GET
- name: Pre-Authorize Payment
  endpoint:
    path: /reference/pre-authroze-payment-api-reference-introduction
    method: GET
- name: Capture a Pre-Authorized API
  endpoint:
    path: /reference/capture_a_payment
    method: GET
- name: Merchant Activation
  endpoint:
    path: /app/onboarding
    method: GET
- name: checkout_pro_sdk
  endpoint:
    path: /docs/android-checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /docs/android-core-sdk
    method: GET
- name: custom_browser_sdk
  endpoint:
    path: /docs/android-custombrowser-sdk
    method: GET
- name: native_otp_assist_sdk
  endpoint:
    path: /docs/native-otp-assist-sdk
    method: GET
- name: upi_sdk
  endpoint:
    path: /docs/android-upi-sdk
    method: GET
- name: google_pay_sdk
  endpoint:
    path: /docs/android-google-pay-sdk
    method: GET
- name: phonepe_sdk
  endpoint:
    path: /docs/android-phonepe-sdk
    method: GET
- name: ola_money_sdk
  endpoint:
    path: /docs/ola-money-sdk
    method: GET
- name: 3ds_2.0_sdk
  endpoint:
    path: /docs/android-3ds20-sdk
    method: GET
- name: upi_bolt_sdk
  endpoint:
    path: /docs/payu-bolt-sdk
    method: GET
- name: documents_checklist
  endpoint:
    path: /api/documents/checklist
    method: GET
    data_selector: documents
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: GET
    data_selector: records
- name: core_sdk
  endpoint:
    path: /coresdk
    method: GET
    data_selector: records
- name: custom_browser
  endpoint:
    path: /custombrowser
    method: GET
    data_selector: records
- name: upi
  endpoint:
    path: /upi
    method: GET
    data_selector: records
- name: android_checkout_pro_sdk
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: ios_checkout_pro_sdk
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: react_native_checkout_pro_sdk
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: track_transactions
  endpoint:
    path: /track-transactions
    method: GET
- name: checkout_pro
  endpoint:
    path: /checkoutpro/api/v1
    method: POST
    data_selector: data
    params: {}
- name: core_sdk
  endpoint:
    path: /core/api/v1
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: Android Checkout Pro SDK
  endpoint:
    path: /docs/android-checkoutpro-sdk
    method: GET
- name: Android Core SDK
  endpoint:
    path: /docs/android-core-sdk
    method: GET
- name: Android Custom Browser SDK
  endpoint:
    path: /docs/custom-browser-sdk
    method: GET
- name: Android Native OTP Assist SDK
  endpoint:
    path: /docs/native-otp-assist-sdk
    method: GET
- name: Android UPI SDK
  endpoint:
    path: /docs/android-upi-sdk
    method: GET
- name: Android Google Pay SDK
  endpoint:
    path: /docs/android-google-pay-sdk
    method: GET
- name: Android PhonePe SDK
  endpoint:
    path: /docs/android-phonepe-sdk
    method: GET
- name: Android Ola Money SDK
  endpoint:
    path: /docs/ola-money-sdk
    method: GET
- name: Android 3DS 2.0 SDK
  endpoint:
    path: /docs/android-3ds20-sdk
    method: GET
- name: Android UPI Bolt SDK
  endpoint:
    path: /docs/payu-bolt-sdk
    method: GET
- name: transaction_records
  endpoint:
    path: /export-the-transaction-records
    method: GET
- name: transaction_records
  endpoint:
    path: /export/transaction_records
    method: GET
    data_selector: records
- name: monthly_tdr_report
  endpoint:
    path: /docs/download-monthly-tdr-report
    method: GET
- name: monthly_tdr_report
  endpoint:
    path: /docs/download-monthly-tdr-report
    method: GET
    data_selector: invoice
    params: {}
- name: settlement_details
  endpoint:
    path: /docs/settlements-dashboard
    method: GET
    data_selector: settlement
    params: {}
- name: settlement_records
  endpoint:
    path: /settlements
    method: GET
    data_selector: records
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: POST
    data_selector: response
- name: core_sdk
  endpoint:
    path: /core
    method: GET
    data_selector: data
- name: settlement_records
  endpoint:
    path: /export-the-settlement-records
    method: GET
    data_selector: records
- name: checkout_pro_sdk
  endpoint:
    path: /checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /core-sdk
    method: GET
- name: generate_report
  endpoint:
    path: /generate_report
    method: POST
    data_selector: report_data
    params:
      date_range: selected_date_range
      report_type: selected_report_type
      file_format: CSV or XLSX
- name: generate_payouts_reports
  endpoint:
    path: /docs/generate-payouts-reports
    method: GET
    data_selector: reports
    params: {}
- name: employee
  endpoint:
    path: /add-an-employee
    method: POST
- name: refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: refunds
    params: {}
- name: update_employee_detail
  endpoint:
    path: /update-an-employee-detail
    method: GET
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: records
- name: affordability
  endpoint:
    path: /affordability
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: update_role
  endpoint:
    path: /update-a-role
    method: POST
- name: webhooks
  endpoint:
    path: /manage-webhooks
    method: GET
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: checkout_pro
  endpoint:
    path: /checkoutpro/v1
    method: POST
    data_selector: data
    params: {}
- name: core_sdk
  endpoint:
    path: /core/v1
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: PATCH
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: DELETE
    data_selector: null
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: POST
    data_selector: data
    params: {}
- name: chargeback
  endpoint:
    path: /docs/chargeback
    method: GET
- name: payment_buttons
  endpoint:
    path: /docs/payment-buttons-dashboard
    method: GET
- name: payment_links
  endpoint:
    path: /docs/payment-links-dashboard
    method: GET
- name: payment_links
  endpoint:
    path: /docs/integration-api-for-payment-links
    method: GET
    data_selector: payment_links_data
    params: {}
- name: payment_link
  endpoint:
    path: /docs/create-a-new-payment-link
    method: POST
    data_selector: data
    params: {}
- name: payment_links
  endpoint:
    path: /docs/payment-links-dashboard
    method: GET
- name: transactions
  endpoint:
    path: /docs/transactions
    method: GET
- name: payment_link_history
  endpoint:
    path: /export/payment-link-history
    method: GET
- name: payment_link_history
  endpoint:
    path: /v1/payment_links
    method: GET
    data_selector: records
- name: create_payment_link
  endpoint:
    path: /reference/create-payment-links
    method: POST
- name: share_payment_link
  endpoint:
    path: /reference/share_payment_link_api
    method: POST
- name: get_single_payment_link
  endpoint:
    path: /reference/get-single-payment-link
    method: GET
- name: get_all_payment_links
  endpoint:
    path: /reference/get-all-payment-links-api
    method: GET
- name: create_payment_link
  endpoint:
    path: /create_payment_link
    method: POST
    data_selector: data
    params:
      merchant_key: required
      transaction_amount: required
      product_info: required
      customer_details: required
      callback_url: required
- name: customize_payment_link
  endpoint:
    path: /customize_payment_link
    method: POST
    data_selector: data
    params:
      product_code: optional
      product_price: optional
      product_description: optional
      shipping_address: optional
      tax_amount: optional
      logo: optional
      branding: optional
- name: create_payment_button
  endpoint:
    path: /create/new/payment/button
    method: POST
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: iOS Checkout Pro SDK
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: React Native Checkout Pro SDK
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: create_invoice
  endpoint:
    path: /docs/create-an-invoice
    method: POST
- name: manage_invoice_items
  endpoint:
    path: /docs/manage-invoice-items
    method: PUT
- name: create_customer
  endpoint:
    path: /docs/create-a-new-customer
    method: POST
- name: create_invoice
  endpoint:
    path: /docs/create-an-invoice
    method: POST
- name: invoice_items
  endpoint:
    path: /manage/invoice/items
    method: GET
- name: invoice_items
  endpoint:
    path: /manage-invoice-items
    method: GET
- name: create_customer
  endpoint:
    path: /create-a-new-customer
    method: POST
    data_selector: customer
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkout-pro/sdk
    method: POST
    data_selector: response
    params: {}
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: response
    params: {}
- name: invoice
  endpoint:
    path: /v1/invoices
    method: POST
    data_selector: data
    params: {}
- name: Pre-Authorize Card Transactions
  endpoint:
    path: /docs/auth-and-capture-pre-authorize-credit-card-payments
    method: GET
- name: Checkout page customization
  endpoint:
    path: /docs/enforce-pay-method-or-remove-category
    method: GET
- name: transaction_request
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: payment_response
    params: {}
- name: merchant_account
  endpoint:
    path: /docs/register-for-a-merchant-account
    method: GET
- name: payment_links
  endpoint:
    path: /docs/payment-links-dashboard
    method: GET
- name: transactions
  endpoint:
    path: /docs/transactions
    method: GET
- name: settlements
  endpoint:
    path: /docs/settlements-dashboard
    method: GET
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: POST
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
- name: checkout_pro_sdk
  endpoint:
    path: /checkoutpro/sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
- name: payment_methods
  endpoint:
    path: /payment/methods
    method: GET
- name: paypal_wallet
  endpoint:
    path: /paypal/wallet
    method: POST
- name: checkout_settings
  endpoint:
    path: /checkout/settings
    method: GET
    data_selector: settings
    params: {}
- name: refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: refund_data
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params:
      enforce_paymethod: SODEXO
      drop_category: MC|SODEXO
- name: checkout_pro
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /ios-core-sdk
    method: GET
- name: custom_browser_sdk
  endpoint:
    path: /ios-custombrowser-sdk
    method: GET
- name: native_otp_assist_sdk
  endpoint:
    path: /ios-native-otp-assist-sdk
    method: GET
- name: upi_sdk
  endpoint:
    path: /ios-upi-sdk
    method: GET
- name: webview_configuration
  endpoint:
    path: /webview/configuration
    method: POST
    data_selector: configuration
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: GET
    data_selector: records
    params: {}
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: payment_parameters
- name: collect_payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: data
    params:
      key: JPg***r
      txnid: ypl938459435
      amount: '10.00'
      productinfo: iPhone
      firstname: Ashish
      email: abc@payu.in
      phone: ''
      pg: TESTPG
      bankcode: TESTPGNB
      furl: ''
      surl: ''
      hash: sha512(key|txnid|amount|productinfo|firstname|email|udf1|udf2|udf3|udf4|udf5||||||SALT)
- name: net_banking_payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params:
      key: JP***g
      txnid: t6svtqtjRdl34W
      productinfo: iPhone
      amount: '10'
      email: test@gmail.com
      firstname: Ashish
      lastname: Kumar
      pg: TESTPG
      bankcode: TESTPGNB
      surl: your own success url
      furl: your own failure url
      phone: '9988776655'
      hash: eabec285da28fd0e3054d41a4d24fe9f7599c9d0b66646f7a9984303fd6124044b6206daf831e9a8bda28a6200d318293a13d6c193109b60bd4b4f8b09c90972
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: iOS Checkout Pro SDK
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: React Native Checkout Pro SDK
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: check_isDomestic
  endpoint:
    path: /docs/bin-apis
    method: GET
- name: Merchant Hosted Checkout
  endpoint:
    path: /docs/_payment_merchant_hosted
    method: POST
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params: {}
- name: checkout_pro
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /ios-core-sdk
    method: GET
- name: custom_browser_sdk
  endpoint:
    path: /ios-custombrowser-sdk
    method: GET
- name: native_otp_assist_sdk
  endpoint:
    path: /ios-native-otp-assist-sdk
    method: GET
- name: upi_sdk
  endpoint:
    path: /ios-upi-sdk
    method: GET
- name: transaction
  endpoint:
    path: /_payment
    method: POST
    data_selector: Array
    params: {}
- name: guest_checkout_transaction
  endpoint:
    path: /docs/collect-payment-api-cards
    method: POST
    params:
      pg: CC
      bankcode: AMEX
      alt_id: ''
      ccexpmon: '10'
      ccexpyr: '2021'
      additional_info: '{}'
- name: 3ds_secure_transaction
  endpoint:
    path: /docs/handling-3ds-secure-20-transaction
    method: GET
- name: 3DS Secure 2.0 Transaction
  endpoint:
    path: /3ds-secure-2-0-transaction
    method: POST
    data_selector: threeDS2RequestData
    params: {}
- name: 3DS Secure 2.0 Transaction
  endpoint:
    path: /_payment
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params:
      key: JP***g
      txnid: bvRCCBO4YiGGHE
      amount: '10.00'
      firstname: Ashish
      email: test@gmail.com
      phone: '9876543210'
      productinfo: iPhone
      pg: MC
      bankcode: SODEXO
      surl: https://apiplayground-response.herokuapp.com/
      furl: https://apiplayground-response.herokuapp.com/
      ccnum: 637513XXXXXX9318
      ccexpmon: '05'
      ccexpyr: '2022'
      ccvv: '123'
      ccname: Ashish
      hash: ad36b3253313753088c662053b043fbe6d7a10112b31fbf20c4b0945b6a70c3a12239c5330ec2d0a0956bcd28a689f08c94fbb9cc2c5e06bb08dc81968672f64
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: PaymentResponse
    params: {}
- name: PayTM
  endpoint:
    path: /test/wallets/paytm
    method: GET
    data_selector: wallets
    params:
      mobile_number: '7777777777'
      otp: '888888'
- name: PhonePe
  endpoint:
    path: /test/wallets/phonepe
    method: GET
    data_selector: wallets
    params: {}
- name: AmazonPay
  endpoint:
    path: /test/wallets/amazonpay
    method: GET
    data_selector: wallets
    params: {}
- name: hash_generator
  endpoint:
    path: /generateHash
    method: POST
    data_selector: hash
    params: {}
- name: CommercePro Checkout API
  endpoint:
    path: /checkout-express
    method: GET
- name: Checkout Pro SDK
  endpoint:
    path: /checkoutpro/sdk
    method: GET
- name: Core SDK
  endpoint:
    path: /core/sdk
    method: GET
- name: Custom Browser SDK
  endpoint:
    path: /custombrowser/sdk
    method: GET
- name: Native OTP Assist SDK
  endpoint:
    path: /nativeotpassist/sdk
    method: GET
- name: UPI SDK
  endpoint:
    path: /upi/sdk
    method: GET
- name: Google Pay SDK
  endpoint:
    path: /googlepay/sdk
    method: GET
- name: PhonePe SDK
  endpoint:
    path: /phonepe/sdk
    method: GET
- name: Ola Money SDK
  endpoint:
    path: /olamoney/sdk
    method: GET
- name: 3DS 2.0 SDK
  endpoint:
    path: /3ds20/sdk
    method: GET
- name: transaction
  endpoint:
    path: /transaction
    method: POST
    data_selector: response
    params:
      key: merchant_key
      txnid: unique_transaction_id
      amount: transaction_amount
      firstname: customer_first_name
      phone: customer_mobile_number
      surl: success_url
      furl: failure_url
      isCheckoutExpress: true
      icp_source: express
      orderid: order_id
      cart_details: {}
- name: transaction_request
  endpoint:
    path: /bolt/bolt.min.js
    method: GET
    data_selector: expressData
- name: transaction_parameters
  endpoint:
    path: /transaction/parameters
    method: POST
    data_selector: parameters
- name: transaction_request
  endpoint:
    path: /launch
    method: POST
    data_selector: data
    params:
      key: O85456
      hash: hash
      txnid: tnxID
      amount: '1'
      firstname: surbhi
      email: text@example.com
      phone: '1234567890'
      productinfo: BOLT
      surl: http://thirdparty.com/testresponse.php
      furl: http://thirdparty.com/testresponse.php
      lastname: soni
      enforce_paymethod: creditcard|debitcard|HDFB|AXIB
      display_lang: Hindi
      drop_category: creditcard|debitcard
      pg: CC
      custom_note: You will be charged an extra amount of Rs 100 on this transaction
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: records
    params: {}
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
    data_selector: records
- name: Android Core SDK
  endpoint:
    path: /android-core-sdk
    method: GET
    data_selector: records
- name: Android Custom Browser SDK
  endpoint:
    path: /android-custom-browser-sdk
    method: GET
    data_selector: records
- name: Android UPI SDK
  endpoint:
    path: /android-upi-sdk
    method: GET
    data_selector: records
- name: refunds
  endpoint:
    path: /v1/refunds
    method: POST
    data_selector: refunds
    params: {}
- name: payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: result
    params: {}
- name: payment_request
  endpoint:
    path: /_payment
    method: POST
    data_selector: result
    params:
      incremental: txnid
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: POST
    data_selector: data
    params: {}
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: authorize_transaction
  endpoint:
    path: /AuthorizeTransaction.php
    method: POST
- name: payment_initiation
  endpoint:
    path: /_payment
    method: POST
    data_selector: result
    params:
      key: mandatory
      txnid: mandatory
      amount: mandatory
      productinfo: mandatory
      firstname: mandatory
      email: mandatory
      phone: mandatory
      pg: mandatory
      bankcode: mandatory
      ccnum: mandatory
      ccname: mandatory
      ccvv: mandatory
      ccexpmon: mandatory
      ccexpyr: mandatory
      furl: mandatory
      surl: mandatory
      hash: mandatory
      txn_s2s_flow: mandatory
      auth_only: mandatory
      termUrl: mandatory
      authentication_flow: mandatory
      s2s_client_ip: mandatory
      s2s_device_info: mandatory
- name: 3DS Secure 2.0 Transaction
  endpoint:
    path: /_payment
    method: POST
    data_selector: threeDS2RequestData
    params: {}
- name: direct_authorization
  endpoint:
    path: /_payment
    method: POST
    data_selector: result
    params:
      key: JP***g
      txnid: ATGNMtNsHKgBQ4
      amount: '199.00'
      firstname: PayU User
      email: test@gmail.com
      phone: '9876543210'
      productinfo: iPhone
      pg: cc
      bankcode: cc
      surl: https://apiplayground-response.herokuapp.com/
      furl: https://apiplayground-response.herokuapp.com/
      ccnum: '5123456789012346'
      ccexpmon: '05'
      ccexpyr: '2022'
      ccvv: '123'
      ccname: ''
      txn_s2s_flow: '3'
      threeDS2RequestData: '{"threeDSVersion":"2.2.0","deviceChannel":"APP/BRW"}'
      authentication_info: '{"eci":"05","cavv":"AAABAWFlmQAAAABjRWWZEEFgFz+=","flowType":"Frictionless","threeDSTransID":"67b4c71f-19bf-4d97-bd09-4e3687dc9e42","threeDSServerTransID":"eea30d14-71cf-41af-b961-f95b7d67dc93","threeDSTransStatus":"Y","threeDSTransStatusReason":"01-99","additionalinfo":{"authudf2":"1_1665637507_954_104_l73c004m_IAMRB"},"acquirer_bin":"401200"}'
- name: UPI Collection S2S
  endpoint:
    path: /upi/collection/s2s
    method: POST
- name: UPI Intent S2S
  endpoint:
    path: /upi/intent/s2s
    method: POST
- name: UPI Omnichannel S2S
  endpoint:
    path: /upi/omnichannel/s2s
    method: POST
- name: UPI Integration
  endpoint:
    path: /upi-collection-s2s
    method: POST
    data_selector: response
- name: validate_vpa
  endpoint:
    path: /validate_vpa
    method: POST
    data_selector: result
- name: initiate_payment
  endpoint:
    path: /initiate_payment
    method: POST
    data_selector: result
- name: check_transaction_status
  endpoint:
    path: /verify_payment
    method: POST
    data_selector: result
- name: upi_collection
  endpoint:
    path: /upi/collection
    method: POST
    data_selector: data
    params: {}
- name: upi_intent
  endpoint:
    path: /upi/intent
    method: POST
    data_selector: data
    params: {}
- name: initiate_payment
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params:
      key: merchant_key
      txnid: unique_transaction_id
      amount: transaction_amount
      phone: customer_phone
      productinfo: product_name
      firstname: customer_first_name
      email: customer_email
      pg: UPI
      bankcode: INTENT
      txn_s2s_flow: 4
      s2s_client_ip: user_device_ip
      s2s_device_info: user_agent_device
      upiAppName: phonepe
- name: UPI Collection
  endpoint:
    path: /upi-collection-s2s
    method: POST
- name: UPI Intent
  endpoint:
    path: /upi-intent-server-to-server
    method: POST
- name: initiatePayment
  endpoint:
    path: /_payment
    method: POST
    data_selector: response
    params:
      key: Your Test Key
      api_version: '1'
      txnid: s7hhDQVWvbhBdN
      amount: 10.0
      productinfo: iPhone
      email: test@gmail.com
      phone: '9876543210'
      surl: https://apiplayground-response.herokuapp.com/
      furl: https://apiplayground-response.herokuapp.com/
      pg: UPI
      bankcode: INTENT
      firstname: Ashish
      lastname: Verma
      hash: eabec285da28fd0e3054d41a4d24fe9f7599c9d0b66646f7a9984303fd6124044b6206daf831e9a8bda28a6200d318293a13d6c193109b60bd4b4f8b09c90972
      s2s_client_ip: ''
      s2s_device_info: ''
      upiAppName: ''
      vpa: 8800411088@upi
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: POST
- name: core_sdk
  endpoint:
    path: /coresdk
    method: GET
- name: upi_sdk
  endpoint:
    path: /upisdk
    method: POST
- name: generate_hash
  endpoint:
    path: /hash/generate
    method: POST
    data_selector: hash
    params: {}
- name: test_cards_upi_id_and_wallets
  endpoint:
    path: /docs/test-cards-upi-id-and-wallets
    method: GET
- name: test_cards
  endpoint:
    path: /test/cards
    method: GET
    data_selector: cards
- name: upi_id_wallets
  endpoint:
    path: /upi/id/wallets
    method: GET
    data_selector: wallets
- name: test_cards
  endpoint:
    path: /test/cards
    method: GET
    data_selector: cards
    params: {}
- name: upi_id
  endpoint:
    path: /test/upi
    method: GET
    data_selector: upi
    params: {}
- name: wallets
  endpoint:
    path: /test/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: net_banking
  endpoint:
    path: /test/net_banking
    method: GET
    data_selector: net_banking
    params: {}
- name: bnpl_credentials
  endpoint:
    path: /test/bnpl
    method: GET
    data_selector: bnpl
    params: {}
- name: checkout_pro_sdk
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /android-core-sdk
    method: GET
- name: custom_browser_sdk
  endpoint:
    path: /android-custom-browser-sdk
    method: GET
- name: native_otp_assist_sdk
  endpoint:
    path: /android-native-otp-assist-sdk
    method: GET
- name: upi_sdk
  endpoint:
    path: /android-upi-sdk
    method: GET
- name: google_pay_sdk
  endpoint:
    path: /android-google-pay-sdk
    method: GET
- name: phone_pe_sdk
  endpoint:
    path: /android-phonepe-sdk
    method: GET
- name: ola_money_sdk
  endpoint:
    path: /ola-money-sdk
    method: GET
- name: three_ds_sdk
  endpoint:
    path: /android-3ds20-sdk
    method: GET
- name: upi_bolt_sdk
  endpoint:
    path: /payu-bolt-sdk
    method: GET
- name: Collect Payment
  endpoint:
    path: /_payment
    method: POST
- name: Verify Payment
  endpoint:
    path: /merchant
    method: POST
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: POST
    data_selector: data
    params: {}
- name: payment_options
  endpoint:
    path: /payment/options
    method: GET
    data_selector: options
    params: {}
- name: pre_authorize_payments
  endpoint:
    path: /docs/auth-and-capture-pre-authorize-credit-card-payments
    method: GET
- name: chargeback_dashboard
  endpoint:
    path: /docs/chargeback-dashboard
    method: GET
- name: cross_border_payments
  endpoint:
    path: /docs/introduction-cross-border-payments-import
    method: GET
- name: pre_authorize_payments
  endpoint:
    path: /docs/auth-and-capture-pre-authorize-credit-card-payments
    method: GET
- name: chargeback_dashboard
  endpoint:
    path: /docs/chargeback-dashboard
    method: GET
- name: cross_border_payments
  endpoint:
    path: /docs/introduction-cross-border-payments-import
    method: GET
- name: split_settlements
  endpoint:
    path: /docs/split-settlments
    method: GET
- name: tokenization
  endpoint:
    path: /docs/introduction-save-cards
    method: GET
- name: third_party_verification
  endpoint:
    path: /docs/introduction-to-payu-tpv
    method: GET
- name: merchant_wallet
  endpoint:
    path: /docs/introduction-to-merchant-wallet
    method: GET
- name: partners
  endpoint:
    path: /docs/payu-partner-program-overview
    method: GET
- name: in_person_payments
  endpoint:
    path: /docs/in-person-payments
    method: GET
- name: payouts
  endpoint:
    path: /docs/introduction-to-payouts
    method: GET
- name: mcp
  endpoint:
    path: /docs/payu-mcp-server
    method: GET
- name: bbps
  endpoint:
    path: /docs/connect-agent-api-integration
    method: GET
- name: virtual_cards
  endpoint:
    path: /docs/web-integration-virtual-cards
    method: GET
- name: test_wallets
  endpoint:
    path: /test/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: GET
    data_selector: records
- name: core_sdk
  endpoint:
    path: /core
    method: GET
    data_selector: records
- name: verify_payment
  endpoint:
    path: /verify_payment
    method: POST
- name: check_isDomestic
  endpoint:
    path: /check_isDomestic
    method: POST
- name: get_checkout_details
  endpoint:
    path: /get_checkout_details
    method: POST
- name: getNetbankingStatus
  endpoint:
    path: /getNetbankingStatus
    method: POST
    data_selector: response
    params:
      key: QyT13U
      var1: AXIB
      environment: Test
- name: getIssuingBankStatus
  endpoint:
    path: /getIssuingBankStatus
    method: POST
    data_selector: response
    params:
      key: QyT13U
      var1: '512345'
      environment: Test
- name: validateVPA
  endpoint:
    path: /validateVPA
    method: POST
    data_selector: response
    params:
      key: QyT13U
      var1: 9999999999@upi
      environment: Test
- name: getTransactionDetails
  endpoint:
    path: /getTransactionDetails
    method: POST
    data_selector: response
    params:
      key: key
      environment: Test
      var1: startdate
      var2: enddate
- name: create_invoice
  endpoint:
    path: /create_invoice
    method: POST
    data_selector: response
    params:
      key: QyT13U
      var1: json
      environment: Test
- name: expire_invoice
  endpoint:
    path: /expire_invoice
    method: POST
    data_selector: response
    params:
      key: QyT13U
      var1: oknjhyg64tgd
      environment: Test
- name: eligibleBinsForEMI
  endpoint:
    path: /eligibleBinsForEMI
    method: POST
    data_selector: response
    params:
      key: QyT13U
      var1: bin
      var2: '512345'
      environment: Test
- name: getEmiAmountAccordingToInterest
  endpoint:
    path: /getEmiAmountAccordingToInterest
    method: POST
    data_selector: response
    params:
      key: QyT13U
      var1: '100'
      environment: Test
- name: cancel_refund_transaction
  endpoint:
    path: /cancel_refund_transaction
    method: POST
    data_selector: response
    params:
      key: QyT13U
      environment: Test
      var1: '403993715527261883'
      var2: rfveds238456uyt8yh34
      var3: '05.00'
- name: Test credentials for Net Banking
  endpoint:
    params:
      user_name: payu
      password: payu
      OTP: '123456'
- name: Test VPA for UPI
  endpoint:
    params:
      VPA_1: anything@payu
      VPA_2: 9999999999@payu.in
- name: Test cards for EMI
  endpoint:
    params:
      Kotak_DC_EMI:
        Card_Number: 4706-1378-0509-9594
        Expiry: any future date (mm/yy)
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
      AXIS_DC_EMI:
        Card_Number: 4011-5100-0000-0007
        Expiry: any future date (mm/yy)
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
      HDFC_CC_EMI:
        Card_Number: 4453-3410-65876437
        Expiry: any future date (mm/yy)
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
      ICICI_CC_EMI:
        Card_Number: 4453-3410-65876437
        Expiry: any future date (mm/yy)
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: Android Core SDK
  endpoint:
    path: /android-core-sdk
    method: GET
- name: Android Custom Browser SDK
  endpoint:
    path: /android-custom-browser-sdk
    method: GET
- name: Android Native OTP Assist SDK
  endpoint:
    path: /native-otp-assist-sdk
    method: GET
- name: Android UPI SDK
  endpoint:
    path: /android-upi-sdk
    method: GET
- name: Android Google Pay SDK
  endpoint:
    path: /android-google-pay-sdk
    method: GET
- name: Android PhonePe SDK
  endpoint:
    path: /android-phonepe-sdk
    method: GET
- name: Android Ola Money SDK
  endpoint:
    path: /ola-money-sdk
    method: GET
- name: Android 3DS 2.0 SDK
  endpoint:
    path: /android-3ds20-sdk
    method: GET
- name: Android UPI Bolt SDK
  endpoint:
    path: /payu-bolt-sdk
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
- name: settlements
  endpoint:
    path: /v1/settlements
    method: GET
    data_selector: data
- name: payment
  endpoint:
    path: /v1/payment
    method: POST
    data_selector: transaction
    params: {}
- name: payment_verification
  endpoint:
    path: /v1/payment/verify
    method: POST
    data_selector: transaction
    params: {}
- name: transaction_details
  endpoint:
    path: /getTransaction
    method: POST
    data_selector: data
    params: {}
- name: validate_upi
  endpoint:
    path: /validateUpi
    method: POST
    data_selector: data
    params: {}
- name: cancel_refund_transaction
  endpoint:
    path: /cancelRefundTransaction
    method: POST
    data_selector: data
    params: {}
- name: check_refund_status
  endpoint:
    path: /checkRefundStatus
    method: POST
    data_selector: data
    params: {}
- name: get_net_banking_status
  endpoint:
    path: /getTransaction
    method: POST
    data_selector: data
    params: {}
- name: get_issuing_bank_status
  endpoint:
    path: /getIssuingBankStatus
    method: POST
    data_selector: data
    params: {}
- name: check_bin_type
  endpoint:
    path: /getCardBin
    method: POST
    data_selector: data
    params: {}
- name: create_invoice
  endpoint:
    path: /createPaymentInvoice
    method: POST
    data_selector: data
    params: {}
- name: expire_invoice
  endpoint:
    path: /expirePaymentInvoice
    method: POST
    data_selector: data
    params: {}
- name: eligible_bins_for_emi
  endpoint:
    path: /checkEligibleEMIBins
    method: POST
    data_selector: data
    params: {}
- name: get_emi_amount
  endpoint:
    path: /getEmiAmount
    method: POST
    data_selector: data
    params: {}
- name: get_settlement_details
  endpoint:
    path: /getSettlementDetails
    method: POST
    data_selector: data
    params: {}
- name: get_checkout_detail
  endpoint:
    path: /getCheckoutDetails
    method: POST
    data_selector: data
    params: {}
- name: test_wallets
  endpoint:
    path: /test/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: test_credentials_net_banking
  endpoint:
    path: /test-credentials/net-banking
    method: GET
    data_selector: credentials
    params: {}
- name: test_credentials_upi
  endpoint:
    path: /test-credentials/upi
    method: GET
    data_selector: vp_as
    params: {}
- name: test_credentials_emi
  endpoint:
    path: /test-credentials/emi
    method: GET
    data_selector: cards
    params: {}
- name: checkout_pro_sdk
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
    data_selector: records
    params: {}
- name: get_checkout_details
  endpoint:
    path: /get_checkout_details
    method: POST
    data_selector: checkout_details
- name: get_transaction_details
  endpoint:
    path: /get_transaction_details
    method: POST
    data_selector: transaction_details
- name: cancel_refund_transaction
  endpoint:
    path: /cancel_refund_transaction
    method: POST
    data_selector: refund_details
- name: create_invoice
  endpoint:
    path: /createInvoice
    method: POST
    data_selector: response
    params: {}
- name: expire_invoice
  endpoint:
    path: /expireInvoice
    method: POST
    data_selector: response
    params: {}
- name: validate_vpa
  endpoint:
    path: /validateVPA
    method: POST
    data_selector: response
    params: {}
- name: get_net_banking_status
  endpoint:
    path: /getNetbankingStatus
    method: POST
    data_selector: response
    params: {}
- name: get_issuing_bank_status
  endpoint:
    path: /getIssuingBankStatus
    method: POST
    data_selector: response
    params: {}
- name: eligible_bins_for_emi
  endpoint:
    path: /eligibleBinsForEMI
    method: POST
    data_selector: response
    params: {}
- name: get_emi_amount_according_to_interest
  endpoint:
    path: /getEmiAmountAccordingToInterest
    method: POST
    data_selector: response
    params: {}
- name: check_is_domestic
  endpoint:
    path: /checkIsDomestic
    method: POST
    data_selector: response
    params: {}
- name: verify_payment
  endpoint:
    path: /verifyPayment
    method: POST
    data_selector: response
    params: {}
- name: test_credentials_net_banking
  endpoint:
    path: /test-credentials/net-banking
    method: GET
    data_selector: credentials
    params: {}
- name: test_credentials_upi
  endpoint:
    path: /test-credentials/upi
    method: GET
    data_selector: vpas
    params: {}
- name: test_credentials_emi
  endpoint:
    path: /test-credentials/emi
    method: GET
    data_selector: cards
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: POST
    data_selector: response
    params: {}
- name: core_sdk
  endpoint:
    path: /coresdk
    method: GET
    data_selector: response
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkoutpro/sdk
    method: GET
    data_selector: records
    params: {}
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: records
    params: {}
- name: transaction_details
  endpoint:
    path: /get_Transaction_Details
    method: GET
- name: settlement_details
  endpoint:
    path: /getSettlementDetails
    method: GET
- name: checkout_pro
  endpoint:
    path: /checkout-pro
    method: POST
    data_selector: response
    params: {}
- name: core_sdk
  endpoint:
    path: /core-sdk
    method: GET
    data_selector: data
    params: {}
- name: net_banking_status
  endpoint:
    path: /getNetbankingStatus
    method: GET
    data_selector: status
    params:
      ibibo_code: default
- name: issuing_bank_status
  endpoint:
    path: /getIssuingBankStatus
    method: GET
    data_selector: status
    params: {}
- name: checkout_details
  endpoint:
    path: /get_checkout_details
    method: GET
    data_selector: details
    params: {}
- name: emi_amount
  endpoint:
    path: /getEmiAmountAccordingToInterest
    method: GET
    data_selector: emi
    params: {}
- name: create_invoice
  endpoint:
    path: /create_invoice
    method: POST
    data_selector: invoice
    params: {}
- name: expire_invoice
  endpoint:
    path: /expire_invoice
    method: POST
    data_selector: result
    params: {}
- name: eligible_bins_for_emi
  endpoint:
    path: /eligibleBinsForEMI
    method: GET
    data_selector: bins
    params: {}
- name: check_bin_type
  endpoint:
    path: /checkIsDomestic
    method: GET
    data_selector: bin_type
    params: {}
- name: check_action_status
  endpoint:
    path: /check_action_status
    method: GET
    data_selector: action_status
    params: {}
- name: cancel_refund_transaction
  endpoint:
    path: /cancel_refund_transaction
    method: POST
    data_selector: result
    params: {}
- name: validate_vpa
  endpoint:
    path: /validateVPA
    method: GET
    data_selector: vpa_validation
    params: {}
- name: update_udf
  endpoint:
    path: /update_udf
    method: POST
    data_selector: udf_update
    params: {}
- name: test_credentials_net_banking
  endpoint:
    params:
      username: payu
      password: payu
      OTP: '123456'
- name: test_credentials_upi
  endpoint:
    params:
      VPA:
      - anything@payu
      - 9999999999@payu.in
- name: test_credentials_emi
  endpoint:
    params:
      cards:
      - bank: Kotak DC EMI
        card_number: 4706-1378-0509-9594
        expiry: any future date
        CVV: '123'
        OTP: '111111'
        name: Any name
        mobile_number: '9123412345'
      - bank: AXIS DC EMI
        card_number: 4011-5100-0000-0007
        expiry: any future date
        CVV: '123'
        OTP: '111111'
        name: Any name
        mobile_number: '9123412345'
      - bank: HDFC CC EMI
        card_number: 4453-3410-65876437
        expiry: any future date
        CVV: '123'
        OTP: '111111'
        name: Any name
        mobile_number: '9123412345'
      - bank: ICICI CC EMI
        card_number: 4453-3410-65876437
        expiry: any future date
        CVV: '123'
        OTP: '111111'
        name: Any name
        mobile_number: '9123412345'
- name: CheckoutPro
  endpoint:
    path: /checkoutpro
    method: POST
    data_selector: response
    params: {}
- name: Core
  endpoint:
    path: /core
    method: GET
    data_selector: data
    params: {}
- name: manifest_file
  endpoint:
    path: /queries
    method: POST
    data_selector: queries
    params: {}
- name: upiApps
  endpoint:
    path: /upi/apps
    method: GET
    data_selector: upiApps
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: transactionDetails
    params: {}
- name: transactionVerification
  endpoint:
    path: /transaction/verify
    method: GET
    data_selector: transactionStatus
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: GET
    data_selector: records
- name: core_sdk
  endpoint:
    path: /core_sdk
    method: GET
    data_selector: records
- name: custom_browser
  endpoint:
    path: /custom_browser
    method: GET
    data_selector: records
- name: upi
  endpoint:
    path: /upi
    method: GET
    data_selector: records
- name: payment_params
  endpoint:
    path: /sdk/payment
    method: POST
    data_selector: params
- name: hash_generation
  endpoint:
    path: /sdk/generateHash
    method: POST
    data_selector: hash
- name: test_credentials
  endpoint:
    path: /test-credentials
    method: GET
    data_selector: credentials
    params:
      environment: '1'
- name: get_bin_info
  endpoint:
    path: /reference/get_bin_info_api
    method: GET
    data_selector: hash
- name: validate_vpa
  endpoint:
    path: /reference/validate_vpa_api
    method: GET
    data_selector: hash
- name: get_eligible_payment_options
  endpoint:
    path: /reference/get_eligible_payment_options
    method: GET
    data_selector: hash
- name: get_checkout_details
  endpoint:
    path: /reference/get_checkout_details
    method: GET
    data_selector: hash
- name: lookup_api_hash
  endpoint:
    path: /reference/lookup_api_hash
    method: GET
    data_selector: hash
- name: check_balance_api_hash
  endpoint:
    path: /reference/check_balance_api_hash
    method: GET
    data_selector: hash
- name: post_salt
  endpoint:
    path: /reference/post_salt
    method: POST
    data_selector: hash
- name: merchant_config
  endpoint:
    path: /services/config
    method: POST
    data_selector: config
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: POST
    data_selector: data
    params: {}
- name: payment_options
  endpoint:
    path: /payment/options
    method: GET
    data_selector: options
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: settlement
  endpoint:
    path: /settlements
    method: GET
    data_selector: settlements
    params: {}
- name: CustomBrowserConfig
  endpoint:
    path: /custom/browser/config
    method: POST
    data_selector: config
    params: {}
- name: sku_offers
  endpoint:
    path: /api/skuOffers
    method: POST
- name: error_handling
  endpoint:
    path: /docs/error-handling
    method: GET
    data_selector: errors
    params: {}
- name: payment
  endpoint:
    path: /docs/android-coresdk-integration-steps
    method: GET
    data_selector: records
- name: payment_params
  endpoint:
    path: /sdk/success
    method: POST
    data_selector: response
    params: {}
- name: PAYMENT_RELATED_DETAILS_FOR_MOBILE_SDK
  endpoint:
    path: /GetPaymentRelatedDetailsTask
    method: GET
- name: VAS_FOR_MOBILE_SDK
  endpoint:
    path: /ValueAddedServiceTask
    method: GET
- name: GET_BIN_INFO
  endpoint:
    path: /BinInfoTask
    method: GET
- name: CHECK_IS_DOMESTIC
  endpoint:
    path: /GetCardInformationTask
    method: GET
- name: GET_TRANSACTION_INFO
  endpoint:
    path: /GetTransactionInfoTask
    method: GET
- name: VERIFY_PAYMENT
  endpoint:
    path: /VerifyPaymentTask
    method: GET
- name: CHECK_OFFER_DETAILS
  endpoint:
    path: /CheckOfferDetailsTask
    method: GET
- name: API_GET_EMI_AMOUNT_ACCORDING_INTEREST
  endpoint:
    path: /GetEmiAmountAccordingToInterestTask
    method: GET
- name: CHECK_OFFER_STATUS
  endpoint:
    path: /GetOfferStatusTask
    method: GET
- name: ELIGIBLE_BINS_FOR_EMI
  endpoint:
    path: /EligibleBinsForEMITask
    method: GET
- name: GET_CHECKOUT_DETAILS
  endpoint:
    path: /GetCheckoutDetailsTask
    method: GET
- name: GET_PAYMENT_INSTRUMENT
  endpoint:
    path: /GetTokenisedCardTask
    method: GET
- name: DELETE_PAYMENT_INSTRUMENT
  endpoint:
    path: /DeleteTokenisedCardTask
    method: GET
- name: GET_PAYMENT_DETAILS
  endpoint:
    path: /GetTokenisedCardDetailsTask
    method: GET
- name: CHECK_BALANCE
  endpoint:
    path: /CheckBalanceTask
    method: GET
- name: tax_info
  endpoint:
    path: /getTaxInfo
    method: GET
    data_selector: taxSpecification
    params: {}
- name: checkout_details
  endpoint:
    path: /checkout/details
    method: POST
    data_selector: response
    params:
      requestId: '1614595430980'
      transactionDetails:
        amount: 5000
      customerDetails:
        mobile: '9999999999'
      useCase:
        getAdditionalCharges: true
        getTaxSpecification: true
        checkDownStatus: true
        getExtendedPaymentDetails: true
        getOfferDetails: true
- name: LookupRequest
  endpoint:
    path: /lookup
    method: POST
    data_selector: response
    params: {}
- name: ValueAddedServiceTask
  endpoint:
    path: /vas-api/value-added-service-task
    method: POST
    data_selector: payuResponse
- name: eligible_bins_for_emi
  endpoint:
    path: /eligible-bins-for-emi
    method: GET
    data_selector: eligibleBinsForEMI
    params: {}
- name: Get EMI Amount
  endpoint:
    path: /get-emi-amount
    method: POST
    data_selector: emiDetails
    params: {}
- name: Get Transaction Info
  endpoint:
    path: /get-transaction-info
    method: POST
    data_selector: transaction_details
    params:
      startTime: startDate
      endTime: endDate
- name: verify_payment
  endpoint:
    path: /api/verify_payment
    method: POST
    data_selector: response
    params: {}
- name: Get Bin Info
  endpoint:
    path: /get-bin-info
    method: POST
    data_selector: response
    params:
      var1: '1'
      var2: '1'
      var5: <pass card BIN Number>
      hash: <Api Command Hash>
- name: Check is Domestic
  endpoint:
    path: /get-card-information
    method: POST
    data_selector: response
    params: {}
- name: validate_offer
  endpoint:
    path: /validateOfferDetails
    method: POST
    data_selector: response
    params: {}
- name: fetch_offer_details
  endpoint:
    path: /docs/fetch-offer-details
    method: GET
    data_selector: offers
    params: {}
- name: validate_offer_details
  endpoint:
    path: /docs/validate-offer-details
    method: POST
    data_selector: validation
    params: {}
- name: Check Balance
  endpoint:
    path: /check-balance
    method: POST
    data_selector: payuResponse
    params:
      var1: sodexoSourceId
- name: Get Tokenized Stored Cards
  endpoint:
    path: /docs/get-tokenized-stored-cards-api
    method: GET
    data_selector: stored_cards
    params: {}
- name: Get Tokenized Stored Card Details
  endpoint:
    path: /docs/get-tokenized-stored-card-details-api
    method: GET
    data_selector: card_details
    params: {}
- name: Delete Tokenized Stored Cards
  endpoint:
    path: /docs/delete-tokenized-stored-cards-api
    method: DELETE
    data_selector: deleted_card
    params: {}
- name: make_payment
  endpoint:
    path: /make_payment
    method: POST
    data_selector: paymentResponse
    params: {}
- name: payment_hash
  endpoint:
    path: /payment/hash
    method: POST
    data_selector: payment_hash
    params: {}
- name: si_payment
  endpoint:
    path: /payment/si
    method: POST
    data_selector: si_payment
    params: {}
- name: split_payment
  endpoint:
    path: /payment/split
    method: POST
    data_selector: split_payment
    params: {}
- name: Checkout Pro SDK
  endpoint:
    path: /checkoutpro/sdk
    method: GET
- name: Core SDK
  endpoint:
    path: /core/sdk
    method: GET
- name: Custom Browser SDK
  endpoint:
    path: /custombrowser/sdk
    method: GET
- name: UPI SDK
  endpoint:
    path: /upi/sdk
    method: GET
- name: card_payment
  endpoint:
    path: /sdk/success
    method: POST
    data_selector: response
    params: {}
- name: net_banking_payment
  endpoint:
    path: /sdk/success
    method: POST
    data_selector: response
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: POST
    data_selector: data
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: data
- name: google_pay_integration
  endpoint:
    path: /google_pay/integration
    method: POST
    data_selector: payment_post_data
    params:
      Bankcode: PPINTENT
      PG: CASH
- name: phonepe_integration
  endpoint:
    path: /phonepe/integration
    method: POST
    data_selector: payment_post_data
    params:
      Bankcode: PPINTENT
      PG: CASH
- name: PhonePeIntent
  endpoint:
    path: /public/repositories/phonepe-intentsdk-android
    method: GET
    data_selector: records
- name: CustomBrowserConfig
  endpoint:
    path: /CustomBrowserConfig
    method: POST
    data_selector: PostData
    params: {}
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: Android Core SDK
  endpoint:
    path: /android-core-sdk
    method: GET
- name: Android Custom Browser SDK
  endpoint:
    path: /android-custom-browser-sdk
    method: GET
- name: Android Native OTP Assist SDK
  endpoint:
    path: /android-native-otp-assist-sdk
    method: GET
- name: Android UPI SDK
  endpoint:
    path: /android-upi-sdk
    method: GET
- name: Android Google Pay SDK
  endpoint:
    path: /android-google-pay-sdk
    method: GET
- name: Android PhonePe SDK
  endpoint:
    path: /android-phonepe-sdk
    method: GET
- name: Android Ola Money SDK
  endpoint:
    path: /ola-money-sdk
    method: GET
- name: Android 3DS 2.0 SDK
  endpoint:
    path: /android-3ds20-sdk
    method: GET
- name: Android UPI Bolt SDK
  endpoint:
    path: /payu-bolt-sdk
    method: GET
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: GET
    data_selector: records
    params: {}
- name: core_sdk
  endpoint:
    path: /coresdk
    method: GET
    data_selector: records
    params: {}
- name: test_wallets
  endpoint:
    path: /test_wallets
    method: GET
    data_selector: wallets
    params: {}
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: iOS Checkout Pro SDK
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: React Native Checkout Pro SDK
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: postData
- name: upi_intent_response
  endpoint:
    path: /sdk/response
    method: POST
    data_selector: result
    params: {}
- name: Payment Options
  endpoint:
    path: /payment/options
    method: GET
- name: Android Checkout Pro SDK
  endpoint:
    path: /docs/android-checkoutpro-sdk
    method: GET
- name: iOS Checkout Pro SDK
  endpoint:
    path: /docs/ios-checkoutpro-sdk
    method: GET
- name: React Native Checkout Pro SDK
  endpoint:
    path: /docs/react-native-checkoutpro-sdk
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: settlements
  endpoint:
    path: /v1/settlements
    method: GET
    data_selector: records
- name: payment_availability
  endpoint:
    path: /checkForPaymentAvailability
    method: GET
    data_selector: availability
- name: payment
  endpoint:
    path: /makePayment
    method: POST
    data_selector: paymentResponse
- name: webhook
  endpoint:
    path: /verifyTransaction
    method: POST
    data_selector: verificationResponse
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: settlements
  endpoint:
    path: /v1/settlements
    method: GET
    data_selector: settlements
    params: {}
- name: checkout_pro_sdk
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /ios-core-sdk
    method: GET
- name: checkout
  endpoint:
    path: /checkout/v1
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /payment/make
    method: POST
    data_selector: response
    params:
      postData: txnid=1524122818080&productinfo=product_info&user_credentials=default&key=*****&surl=**SUCCESS_URL**&furl=**FAILURE_URL**&firstname=firstname&email=test@gmail.com&amount=10&udf1=udf1&udf2=udf2&udf3=udf3&udf4=udf4&udf5=udf5&pg=CASH&bankcode=PPINTENT&hash=***PAYMENT_HASH***
- name: transaction_verification
  endpoint:
    path: /transaction/verify
    method: POST
    data_selector: verification_response
    params: {}
- name: Android Checkout Pro SDK
  endpoint:
    path: /docs/android-checkoutpro-sdk
    method: GET
- name: iOS Checkout Pro SDK
  endpoint:
    path: /docs/ios-checkoutpro-sdk
    method: GET
- name: React Native Checkout Pro SDK
  endpoint:
    path: /docs/react-native-checkoutpro-sdk
    method: GET
- name: pre_authorize_payment
  endpoint:
    path: /docs/auth-and-capture-pre-authorize-credit-card-payments
    method: POST
- name: cancel_pre_authorized_payment
  endpoint:
    path: /docs/cancel-a-pre-authorized-payment
    method: POST
- name: chargeback_dashboard
  endpoint:
    path: /docs/chargeback-dashboard
    method: GET
- name: cross_border_payments
  endpoint:
    path: /docs/introduction-cross-border-payments-import
    method: GET
- name: tokenization
  endpoint:
    path: /docs/introduction-save-cards
    method: GET
- name: payment_initialization
  endpoint:
    path: /payment/initialization
    method: POST
    data_selector: result
    params: {}
- name: eligibility_check
  endpoint:
    path: /eligibility/check
    method: POST
    data_selector: result
    params: {}
- name: Registration
  endpoint:
    path: /docs/payubolt-sdk-integration-native#integrate-registration-flow
    method: POST
- name: Payment
  endpoint:
    path: /docs/payubolt-sdk-integration-native#integrate-payment-flow
    method: POST
- name: Management
  endpoint:
    path: /docs/payubolt-sdk-integration-native#integrate-management-flow
    method: POST
- name: fetchTransactionHistory
  endpoint:
    path: /fetchTransactionHistory
    method: GET
    data_selector: PayUTransactionHistory
- name: checkBalance
  endpoint:
    path: /checkBalance
    method: GET
    data_selector: Balance
- name: removeAccount
  endpoint:
    path: /removeAccount
    method: POST
    data_selector: Response
- name: changeMpin
  endpoint:
    path: /changeMpin
    method: POST
    data_selector: Response
- name: fetchVpaProfile
  endpoint:
    path: /fetchVpaProfile
    method: GET
    data_selector: REQUEST_GET_PROFILE_VPA_V3
- name: saveVpa
  endpoint:
    path: /saveVpa
    method: POST
    data_selector: REQUEST_SAVE_VPA_V3
- name: deleteVpa
  endpoint:
    path: /deleteVpa
    method: DELETE
    data_selector: REQUEST_GET_VPA_REMOVE_V3
- name: raiseQuery
  endpoint:
    path: /raiseQuery
    method: POST
    data_selector: REQUEST_GET_RAISE_QUERY_V3
- name: fetchQueryList
  endpoint:
    path: /fetchQueryList
    method: GET
    data_selector: REQUEST_LIST_QUERIES_V3
- name: deregister
  endpoint:
    path: /deregister
    method: POST
    data_selector: REQUEST_GET_CUSTOMER_DEREGISTER_V3
- name: checkout_pro_sdk
  endpoint:
    path: /checkoutpro/sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
- name: upi_bolt_sdk_availability
  endpoint:
    path: /isUpiBoltEnabled
    method: GET
    data_selector: response
- name: register_and_pay
  endpoint:
    path: /registerAndPay
    method: POST
    data_selector: response
- name: manage_upi_accounts
  endpoint:
    path: /openUPIManagement
    method: POST
    data_selector: response
- name: si_parameters
  endpoint:
    path: /path/to/si-parameters
    method: POST
    data_selector: siDetails
    params:
      is_free_trial: true
      billing_amount: '1.0'
      billing_cycle: ONCE
      billing_currency: INR
      billing_interval: 1
      payment_start_date: '2021-12-24'
      payment_end_date: '2021-12-31'
      billing_rule: MAX
      billing_limit: 'ON'
      remarks: SI Txn
- name: standing_instruction_parameters
  endpoint:
    params:
      billingAmount: '100.00'
      billingCycle: MONTHLY
      billingInterval: 1
      billingLimit: 'ON'
      billingRule: MAX
      billingCurrency: INR
      paymentStartDate: '2022-02-14'
      paymentEndDate: '2023-01-14'
      freeTrial: 1
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: paymentResponse
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: PayTM
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params:
      Mobile Number: '7777777777'
      OTP: '888888'
- name: PhonePe
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params:
      Mobile Number: 'Use the Phonepe Pre-Prod app for testing purposes as described
        in the following PhonePe doc. location: https://developer.phonepe.com/v1/docs/setting-up-test-account'
      OTP: NA
- name: AmazonPay
  endpoint:
    path: NA
    method: NA
    data_selector: NA
    params:
      Mobile Number: You can test using your original Amazon account details.
      OTP: NA
- name: generate_dynamic_hash
  endpoint:
    path: /generate/dynamic/hash
    method: POST
    data_selector: result
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: POST
    data_selector: data
    params: {}
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: data
    params: {}
- name: checkout_pro_sdk
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: ios_checkout_pro_sdk
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: react_native_checkout_pro_sdk
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: sku_details
  endpoint:
    path: /ios_checkoutpro-offers_integration
    method: POST
    data_selector: skus
    params: {}
- name: checkout_pro_sdk
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /ios-core-sdk
    method: GET
- name: react_native_checkout_pro_sdk
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: dynamic_hash
  endpoint:
    path: /generateHash
    method: POST
    data_selector: hash
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkout/v1/checkout
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /ios_success
    method: POST
    data_selector: paymentParamForPassing
    params: {}
- name: failure
  endpoint:
    path: /ios_failure
    method: POST
    data_selector: paymentParamForPassing
    params: {}
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: iOS Checkout Pro SDK
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: React Native Checkout Pro SDK
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: net_banking
  endpoint:
    path: /docs/net-banking-integration-ios-core-sdk
    method: GET
    data_selector: paymentParamForPassing
    params:
      bankCode: AXIB
- name: android_checkout_pro_sdk
  endpoint:
    path: /android/checkoutpro/sdk
    method: GET
- name: ios_checkout_pro_sdk
  endpoint:
    path: /ios/checkoutpro/sdk
    method: GET
- name: react_native_checkout_pro_sdk
  endpoint:
    path: /react-native/checkoutpro/sdk
    method: GET
- name: Fetch Payment Option
  endpoint:
    path: /fetchPaymentOption
    method: GET
    data_selector: subventionEligibility
    params:
      subventionEligibility: all
- name: EMI
  endpoint:
    path: /emi
    method: POST
    data_selector: paymentParamForPassing
- name: Cardless EMI
  endpoint:
    path: /cardless-emi
    method: POST
    data_selector: paymentParamForPassing
- name: Subvention EMI
  endpoint:
    path: /subvention-emi
    method: POST
    data_selector: paymentParamForPassing
- name: checkout_pro_sdk
  endpoint:
    path: /checkout/pro/sdk
    method: GET
    data_selector: records
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: records
- name: payment_request
  endpoint:
    path: /createRequestWithPaymentParam
    method: POST
    data_selector: request
    params:
      notifyURL: https://notifyURL.com
- name: twid_pay
  endpoint:
    path: /twidpay-integration-ios-core-sdk
    method: POST
    data_selector: twidCustomerHash
    params: {}
- name: test_wallets
  endpoint:
    path: /test/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: test_credentials_net_banking
  endpoint:
    path: /test/netbanking
    method: POST
    data_selector: credentials
    params:
      user_name: payu
      password: payu
      OTP: '123456'
- name: test_credentials_upi
  endpoint:
    path: /test/upi
    method: POST
    data_selector: vp_as
    params:
      vpa1: anything@payu
      vpa2: 9999999999@payu.in
- name: test_credentials_emi
  endpoint:
    path: /test/emi
    method: POST
    data_selector: cards
    params:
      kotak_dc_emi:
        card_number: 4706-1378-0509-9594
        expiry: any future date (mm/yy)
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
      axis_dc_emi:
        card_number: 4011-5100-0000-0007
        expiry: any future date (mm/yy)
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
      hdfc_cc_emi:
        card_number: 4453-3410-65876437
        expiry: any future date (mm/yy)
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
      icici_cc_emi:
        card_number: 4453-3410-65876437
        expiry: any future date (mm/yy)
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
- name: fetch_payment_options
  endpoint:
    path: /docs/fetch-payment-options-ios-core-sdk
    method: GET
- name: vas_integration
  endpoint:
    path: /docs/vas-integration-ios-core-sdk
    method: GET
- name: offer_apis
  endpoint:
    path: /docs/offer-apis-ios-core-sdk
    method: GET
- name: get_emi_according_to_interest
  endpoint:
    path: /docs/get-emi-according-to-interest-api-ios-core-sdk
    method: GET
- name: verify_payment
  endpoint:
    path: /docs/verify-payment-ios-core-sdk
    method: GET
- name: check_is_domestic
  endpoint:
    path: /docs/check-is-domestic-api-ios-core-sdk
    method: GET
- name: get_transaction_info
  endpoint:
    path: /docs/get-transaction-info-api-ios-core-sdk
    method: GET
- name: get_bin_info
  endpoint:
    path: /docs/get-bin-info-api-ios-core-sdk
    method: GET
- name: get_checkout_details
  endpoint:
    path: /docs/get-checkout-details-api-ios-core-sdk
    method: GET
- name: lookup
  endpoint:
    path: /docs/lookup-api-ios-core-sdk
    method: GET
- name: check_pluxee_card_balance
  endpoint:
    path: /docs/check-pluxee-card-balance-ios-core-sdk
    method: GET
- name: tokenized_payments_integration
  endpoint:
    path: /docs/tokenized-payments-integration-ios-core-sdk
    method: GET
- name: payment_related_details_for_mobile_sdk
  endpoint:
    path: /getPayUPaymentRelatedDetailForMobileSDK
    method: GET
    data_selector: paymentRelatedDetails
    params:
      var1: userCredentials
- name: VAS for Mobile SDK
  endpoint:
    path: /vas_for_mobile_sdk
    method: POST
    data_selector: result
- name: validate_offer_details
  endpoint:
    path: /validateOfferDetails
    method: POST
    data_selector: offerDetails
- name: get_all_offer_details
  endpoint:
    path: /getAllOfferDetails
    method: POST
    data_selector: offerDetails
- name: EMI Details
  endpoint:
    path: /getEMIAmountAccordingToInterest
    method: POST
    data_selector: dictEMIDetails
    params: {}
- name: verify_payment
  endpoint:
    path: /docs/verify-payment-ios-core-sdk
    method: POST
    data_selector: verifyPaymentDetail
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: POST
    data_selector: response
    params: {}
- name: payment_options
  endpoint:
    path: /payment/options
    method: GET
    data_selector: options
    params: {}
- name: check_isDomestic
  endpoint:
    path: /check-is-domestic
    method: POST
    data_selector: result
    params:
      cardNumber: '5123456789012346'
- name: getTransactionInfo
  endpoint:
    path: /getTransactionInfo
    method: POST
    data_selector: arrOfGetTxnInfo
    params:
      startTime: '2014-01-12 16:00:00'
      endTime: '2014-01-12 16:00:50'
- name: getBinInfo
  endpoint:
    path: /getBinInfo
    method: POST
    data_selector: result
    params:
      cardNumber: '5123456789012346'
      isSIInfo: 'true'
- name: Checkout Pro SDK
  endpoint:
    path: /checkoutpro
    method: GET
    data_selector: records
- name: Core SDK
  endpoint:
    path: /coresdk
    method: GET
    data_selector: records
- name: getCheckoutDetail
  endpoint:
    path: /getCheckoutDetail
    method: POST
    data_selector: paymentRelatedDetails
- name: lookup
  endpoint:
    path: /lookup
    method: POST
    data_selector: response
    params:
      merchantAccessKey: E5ABOXOWAAZNXB6JEF5Z
      baseAmount:
        value: 10000.0
        currency: INR
      merchantOrderId: OBE-JU89-13151-110
      productType: MCP
      signature: be5a56667354d9e2ea5ea1c6af78b0afc1894eb2
- name: Android SDKs
  endpoint:
    path: /android/sdks
    method: GET
- name: iOS SDKs
  endpoint:
    path: /ios/sdks
    method: GET
- name: React Native SDKs
  endpoint:
    path: /reactnative/sdks
    method: GET
- name: sodexo_card_details
  endpoint:
    path: /fetchSodexoCardDetails
    method: POST
    data_selector: sodexoCardDetail
    params:
      sodexoSourceId: <Sodexo source id>
      checkBalanceApiHash: hash
- name: android_checkout_pro_sdk
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
- name: ios_checkout_pro_sdk
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
- name: react_native_checkout_pro_sdk
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: get_tokenized_payment_details
  endpoint:
    path: /getTokenizedPaymentDetails
    method: POST
    data_selector: paymentParam
    params: {}
- name: get_tokenized_stored_cards
  endpoint:
    path: /getTokenizedStoredCards
    method: POST
    data_selector: paymentParamForPassing
    params: {}
- name: delete_tokenized_stored_cards
  endpoint:
    path: /deleteTokenizedStoredCard
    method: POST
    data_selector: paymentParamForPassing
    params: {}
- name: payment
  endpoint:
    path: /createRequest
    method: POST
    data_selector: request
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkout_pro
    method: GET
    data_selector: data
    params: {}
- name: core_sdk
  endpoint:
    path: /core_sdk
    method: GET
    data_selector: data
    params: {}
- name: upi_sdk
  endpoint:
    path: /upi_sdk
    method: GET
    data_selector: data
    params: {}
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: GET
- name: core_sdk
  endpoint:
    path: /core-sdk
    method: GET
- name: payment
  endpoint:
    path: /_payment
    method: POST
- name: Android Checkout Pro SDK
  endpoint:
    path: /android-checkoutpro-sdk
    method: GET
    data_selector: records
- name: iOS Checkout Pro SDK
  endpoint:
    path: /ios-checkoutpro-sdk
    method: GET
    data_selector: records
- name: React Native Checkout Pro SDK
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
    data_selector: records
- name: PayTM
  endpoint:
    path: /test-wallets/paytm
    method: GET
    data_selector: credentials
    params:
      mobile_number: '7777777777'
      otp: '888888'
- name: PhonePe
  endpoint:
    path: /test-wallets/phonepe
    method: GET
    data_selector: credentials
    params:
      mobile_number: 'Use the Phonepe Pre-Prod app for testing purposes as described
        in the following PhonePe doc. location: https://developer.phonepe.com/v1/docs/setting-up-test-account'
- name: AmazonPay
  endpoint:
    path: /test-wallets/amazonpay
    method: GET
    data_selector: credentials
    params:
      mobile_number: You can test using your original Amazon account details.
- name: PUCBConfiguration
  endpoint:
    path: /docs/payu-custom-browser-configuration
    method: GET
    data_selector: configuration
    params: {}
- name: Android Checkout Pro SDK
  endpoint:
    path: /docs/android-checkoutpro-sdk
    method: GET
- name: iOS Checkout Pro SDK
  endpoint:
    path: /docs/ios-checkoutpro-sdk
    method: GET
- name: React Native Checkout Pro SDK
  endpoint:
    path: /docs/react-native-checkoutpro-sdk
    method: GET
- name: PayUOlaMoneySDK
  endpoint:
    path: /payu-olamoney-ios/
    method: GET
    data_selector: framework
- name: checkEligibility
  endpoint:
    path: /checkEligibility
    method: POST
- name: getPostData
  endpoint:
    path: /getPostData
    method: POST
- name: Net Banking
  endpoint:
    params:
      user_name: payu
      password: payu
      OTP: '123456'
- name: UPI
  endpoint:
    params:
      test_vpa_1: anything@payu
      test_vpa_2: 9999999999@payu.in
- name: EMI
  endpoint:
    params:
      Kotak_DC_EMI:
        Card_Number: 4706-1378-0509-9594
        Expiry: any future date
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
      AXIS_DC_EMI:
        Card_Number: 4011-5100-0000-0007
        Expiry: any future date
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
      HDFC_CC_EMI:
        Card_Number: 4453-3410-65876437
        Expiry: any future date
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
      ICICI_CC_EMI:
        Card_Number: 4453-3410-65876437
        Expiry: any future date
        CVV: '123'
        OTP: '111111'
        Name: Any name
        Mobile_Number: '9123412345'
- name: checkout_pro
  endpoint:
    path: /checkoutpro
    method: POST
    data_selector: data
    params: {}
- name: core_sdk
  endpoint:
    path: /core_sdk
    method: GET
    data_selector: data
    params: {}
- name: verify_payment
  endpoint:
    path: /merchant/postservice.php?form=2
    method: POST
    data_selector: status
    params: {}
- name: PayTM
  endpoint:
    path: /test/wallets/paytm
    method: GET
    data_selector: credentials
    params:
      mobile_number: '7777777777'
      otp: '888888'
- name: PhonePe
  endpoint:
    path: /test/wallets/phonepe
    method: GET
    data_selector: credentials
    params: {}
- name: AmazonPay
  endpoint:
    path: /test/wallets/amazonpay
    method: GET
    data_selector: credentials
    params: {}
- name: net_banking
  endpoint:
    params:
      username: payu
      password: payu
      otp: '123456'
- name: upi
  endpoint:
    params:
      vpa1: anything@payu
      vpa2: 9999999999@payu.in
- name: emi
  endpoint:
    params:
      kotak_dc_emi:
        card_number: 4706-1378-0509-9594
        expiry: any future date
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
      axis_dc_emi:
        card_number: 4011-5100-0000-0007
        expiry: any future date
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
      hdfc_cc_emi:
        card_number: 4453-3410-65876437
        expiry: any future date
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
      icici_cc_emi:
        card_number: 4453-3410-65876437
        expiry: any future date
        cvv: '123'
        otp: '111111'
        name: Any name
        mobile_number: '9123412345'
- name: payment
  endpoint:
    path: /sdk/success
    method: POST
    data_selector: paymentParams
    params: {}
- name: paymentOptions
  endpoint:
    path: /getUPIPaymentOptions
    method: POST
    data_selector: paymentOptions
    params: {}
- name: validateVPA
  endpoint:
    path: /validateVPA
    method: POST
    data_selector: validationResponse
    params: {}
- name: test_wallets
  endpoint:
    path: /test/wallets
    method: GET
    data_selector: wallets
    params: {}
- name: SDK Integration
  endpoint:
    path: /docs/ios-3ds-20-sdk
    method: GET
- name: Test the Integration
  endpoint:
    path: /docs/2-test-the-integration-copy
    method: GET
- name: Go-live Checklist
  endpoint:
    path: /docs/ios-3ds-go-live-checklist
    method: GET
- name: Generate Static Hash
  endpoint:
    path: /docs/generate-static-hash-ios
    method: GET
- name: SDK Installation
  endpoint:
    path: /docs/ios-3ds-20-sdk#step-1-install-the-sdk-in-your-app-project
    method: GET
- name: SDK Initialization
  endpoint:
    path: /docs/ios-3ds-20-sdk#step-2-initialise-the-sdk
    method: GET
- name: PayU3DS2
  endpoint:
    path: /sdk/integrate
    method: POST
    data_selector: result
- name: checkout_pro
  endpoint:
    path: /checkout/pro
    method: POST
    data_selector: data
- name: core_sdk
  endpoint:
    path: /core/sdk
    method: GET
    data_selector: records
- name: test_wallets
  endpoint:
    path: /test-wallets
    method: GET
    data_selector: wallets
    params: {}
- name: checkout_pro
  endpoint:
    path: /react-native-checkoutpro-sdk
    method: GET
- name: core_sdk
  endpoint:
    path: /react-native-core-sdk
    method: GET
- name: custom_browser_sdk
  endpoint:
    path: /reactnative-coresdk-custom-browser-sdk
    method: GET
- name: upi_sdk
  endpoint:
    path: /react-native-upi-sdk
    method: GET
- name: customer_registration
  endpoint:
    path: /upi/registration
    method: POST
    data_selector: registrationResponse
- name: one_click_payment
  endpoint:
    path: /upi/payment
    method: POST
    data_selector: paymentResponse
- name: UPI Bolt SDK Initialization
  endpoint:
    path: /docs/payu-upi-bolt-sdk-initialization
    method: POST
    data_selector: response
    params:
      merchantName: <merchantName>
      merchantKey: <merchantKey>
      phone: <phone>
      email: <email>
      refId: <refId>
      pluginTypes:
      - <pluginType>
      excludedBanksIINs:
      - <excludedBanksIIN>
      isProduction: <isProduction>
- name: Check UPI Bolt SDK Availability
  endpoint:
    path: /docs/check-upi-bolt-sdk-availability
    method: GET
    data_selector: response
    params:
      callback: PayUUPIBoltUICallBack
- name: registerAndPay
  endpoint:
    path: /registerAndPay
    method: POST
    data_selector: paymentParams
    params:
      paymentParams: PayUUPIBoltPaymentParams
- name: openUPIManagement
  endpoint:
    path: /openUPIManagement
    method: POST
    data_selector: screenType
    params:
      screenType: PayUUPIBoltUIScreenType
- name: PayUPaymentParams
  endpoint:
    path: /PayUPaymentParams
    method: POST
    data_selector: paymentParams
    params:
      amount: String
      txnId: String
      productInfo: String
      firstName: String
      furl: String
      surl: String
      udf1: String
      udf2: String
      udf3: String
      udf4: String
      udf5: String
- name: PayUUPIResponse
  endpoint:
    path: /PayUUPIResponse
    method: GET
    data_selector: result
    params: {}
- name: SI_parameters
  endpoint:
    path: /path/to/si_parameters
    method: POST
    data_selector: parameters
    params:
      EnableSI: mandatory
      billingAmount: mandatory
      billingCycle: mandatory
      billingInterval: mandatory
      billingLimit: mandatory
      billingRule: mandatory
      billingCurrency: mandatory
      paymentStartDate: mandatory
      paymentEndDate: mandatory
      freeTrial: optional
      isPreAuthTxn: mandatory
- name: PayUBeneficiaryParams
  endpoint:
    path: /docs/ios-payu-beneficiary-parameters
    method: POST
    data_selector: parameters
    params: {}
notes:
- Explore Android SDKs for detailed integration steps.
- Some SDKs may have specific requirements for setup.
- Requires setup of connected app in PayU
- Supports multiple SDKs for Android, iOS, and React Native.
- PayU recommends you to integrate with Test environment initially for all the integration
  before you go live to Production environment.
- Uses OAuth2 for authentication
- 'Hash logic for _payment API is: sha512(key|txnid|amount|productinfo|firstname|email|udf1|udf2|udf3|udf4|udf5||||||SALT)'
- Uses OAuth2 with refresh token — requires setup of connected app in PayU
- PayU recommends you to integrate with Test environment initially for all the integration
  before you go live to Production enviroment.
- Dynamic Configuration using Dashboard
- Integrate Recommendation Engine
- Ensure that the list of pages are created on your website as indicated under the
  Important – Your website must have the following pages.
- Requires setup of connected app in api
- Please provision the list of partners/senior members of the organisation during
  your onboarding.
- The document will be validated through API. However, in case of any discrepancies,
  keep this document handy to process your onboarding.
- Documents are validated through API. Keep them handy to process your onboarding.
- PayU provides payment gateway solutions to online businesses through its cutting-edge
  and award-winning technology.
- 'Merchant key and salt: Used in all the v1 APIs for authentication and hash generation.'
- The API key and Salt will not be visible or accessible for merchants who have not
  completed onboarding or website was verified by PayU.
- While onboarding, the website verification takes 1-2 days.
- The API key and Salt will not be visible for merchants without a website.
- Use the Copy Key or Copy Salt button next to each field to copy them to a text file
  and save them in a confidential location for your perusal.
- New Salt expires in 15 days expiry if not activated.
- If the new Salt not activated within the 15 days, you will require to regenerate
  another salt.
- After the new Salt is activated, the new Salt will be updated to replace of Salt
  version 1.
- PayU recommends you to activate the regenerated Salt to avoid any payment or API
  call failures with your customers.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Ensure to follow the integration steps for each SDK.
- Test the integration before going live.
- You can categorize the records view using the customize columns and filter options.
- Integration requires obtaining client ID and secret from the PayU dashboard.
- The calendar view will display the current and previous month by default, along
  with the time range starts from 12:00 AM to end time 11.59 PM.
- You can use the Reset to clear all checkbox selections.
- You can choose the column entries in the report using the Select Fields option from
  the drop-down list.
- You can share the report to multiple email IDs by entering the comma-separated entries.
- Some objects may return nulls in deeply nested fields
- You can export the detailed settlement record to .pdf format using the Download
  Report button on the top-right corner of the page.
- Ensure proper integration and configuration based on the SDK documentation.
- Some endpoints may have rate limits
- Requires integration with connected app in PayU
- Some SDKs may have specific integration steps
- The dashboard shows the past seven days’ settlements by default.
- Requires setup of connected app in the PayU dashboard
- Priority Settlements allow eligible merchants to receive payments faster than the
  standard settlement time.
- Uses OAuth2 with refresh token - requires setup of connected app in PayU
- Merchants must meet KYC compliance, have a successful transaction history for at
  least 60 days, and maintain a low dispute and chargeback rate.
- Get Client ID and Secret from Dashboard
- Integration steps available for various SDKs.
- Use the Clear All option to reset the field selection.
- Integration Guide available for setup.
- Updated 4 months ago
- Requires OAuth2 setup for authentication
- Webhooks can be created to receive data from specified events.
- Ensure to handle webhook responses correctly.
- You can create as many webhooks as per your requirements and monitor the response
  from PayU.
- Some responses may include null fields
- Only webhook URL can be updated. If you want to change the webhook event, you have
  to delete that webhook and create a new webhook.
- Integration requires setup of the PayU account.
- Various SDKs for Android, iOS, and React Native available
- Integration steps include SDK integration, testing, and go-live checklists
- When you try to update the details, the *Verify Your Password* pop-up page is displayed
  to verify your password.
- You can add or edit email IDs and subscribe to the various types of notifications
  and manage the distribution of certain notifications.
- Some features may be restricted to certain membership levels or require additional
  permissions.
- Requires setup of merchant account on PayU dashboard
- Requires setup of connected app in PayU.
- The input for Upload File and Batch description fields are mandatory.
- Merchants can take bulk actions on multiple transactions by uploading an excel file.
- Uses OAuth2 with refresh token and requires setup of a connected app in PayU.
- All the above APIs must be used with a bearer token that must be generated using
  the Get Token API, where the scope must be specified as indicated.
- The Revoke Token API must be used to revoke or cancel the token.
- Using a payment token instead of the customer’s details provides an additional layer
  of security as the customer’s sensitive information is not shared with you.
- Each payment token is valid for a single transaction only.
- Ensure to follow the integration steps outlined in the documentation.
- You can save, send, or cancel the invoice using the options on the top-right corner
  of the page.
- Requires setup of connected app in API
- Ensure to obtain Merchant Key and Salt from PayU Dashboard.
- Requires setup of Merchant Account for access
- Integration requires adherence to PayU's SDK guidelines
- Ensure to test thoroughly before going live
- Ensure to fill in all required customer details.
- Update billing and shipping addresses as needed.
- Ensure to register for a Merchant Account on the dashboard.
- Some responses may include null values in nested fields
- PayU manages the checkout experience on your website.
- Enables the customer to select the payment option through the readymade payment
  page hosted on the PayU server.
- Requires setup of merchant account and obtaining client ID and secret from the dashboard
- Error messages with error codes can be referred to Error Codes for Refund Initiation.
- Handling the redirect URLs can be found in Handling the Redirect URLs.
- After receiving a response from PayU, you must calculate the hash again and validate
  it against the hash that you sent in the request to ensure the transaction is secure.
- You need to ensure that sensitive information related to the integration is not
  part of the payment request to PayU.
- Compare the parameters sent by PayU in the response with the ones you sent in the
  request to make sure none of them have been changed.
- Response includes fields such as mihpayid, status, amount, email, and phone.
- Test the Integration
- Integrate with Closed Loop Wallet
- The UPI in-app and UPI intent flow is not available in the Test mode.
- Refer to the documentation for integration steps and SDKs.
- Generate Hash API is part of the integration process.
- Hashing logic for Web Integration and SDK is different
- Ensure that the hash is generated using the SHA512 encryption algorithm.
- The hash should be generated on the server-side to prevent tampering.
- The hash should be verified on the PayU server to ensure the authenticity of the
  transaction data.
- Salt is a susceptible information. Do not pass Salt in the payment request.
- PayU recommends you to use Merchant Salt (Version 2).
- Extract parameters or use empty string if not provided
- Construct hash string with exact parameter sequence
- Uses OAuth2 with refresh token
- Use the Hash API of the PayU node SDK to perform hashing.
- PayU advises against sending the salt value as part of the payment request package.
- Do not pass Salt in the payment request.
- Requires setup of Merchant Account on PayU Dashboard
- Use this parameter only after proper testing as an incorrect string will display
  undesirable payment modes.
- Before implementing on your Production environment, PayU strongly recommends you
  to enforce the payment parameters described in this section on the Test environment.
- Ensure that you are using the delimiter as pipe (|) character between the values
  in these examples.
- Ensure you use this parameter only after testing properly as an incorrect string
  will lead to undesirable payment options being displayed.
- Integration requires proper setup of SDKs.
- The `display_lang` parameter should be set to one of the specified language values.
- Ensure to register for a Merchant Account and activate it before integration.
- Integration guides are available for various SDKs.
- You can enable or activate any of the above payment modes only if your are eligible
  or you have signed an agreement with PayU.
- Logo image size must be 90x90 and format must be PNG.
- Production Checklist
- Requires OAuth2 authentication setup
- PayU supports only PayU Hosted Checkout (non-seamless) and Merchant Hosted Checkout
  integration (seamless) using this API. Server-to-Server (S2S) integration is not
  supported for Sodexo.
- Currently, PayU only supports the Sodexo payment option in the mealcard category.
- We recommend that you compute the hash at your server so to prevent cyber attackers
  from tampering your requests.
- Merchant need not to handle such error like ERR_BLOCKED_BY_ORB, let webview default
  behaviour handle it.
- Call webview.loadUrl(url) only once in a session like in OnCreate of Activity or
  fragment(once in a session), please do not loadURL in onResume.
- Requires OAuth2 setup for accessing the API
- Ensure to test the integration before going live
- Merchant Hosted Checkout is a specific PayU product with defined features. It’s
  distinct from simply hosting payment elements on your website.
- Always refer to the official PayU documentation for the most up-to-date information
  on supported payment methods and their corresponding parameters.
- The bankcode values are case-sensitive.
- Ensure that the payment methods you intend to support are enabled in your PayU merchant
  account.
- Test your integration thoroughly in the PayU sandbox environment before going live.
- For NEFT/RTGS transactions, implement a reconciliation process to track transaction
  status and match payments with orders.
- Requires hashing of request parameters using the specified logic.
- Ensure to verify the payment response by checking the hash.
- PayU accepts domestic and international transactions, but international transactions
  need to be enabled by writing to PayU Integration Team (integration@pay.in).
- If you are storing or transmitting cardholder data, you must fill the 'Self-Assessment
  Questionnaire A-EP and Attestation of Compliance' form.
- This is a server-side call, never execute this client-side
- This handles sensitive card data and requires PCI DSS compliance.
- Use different URLs for test/production environments.
- PayU requires setup of connected app in API
- Dynamic Configuration using Dashboard is supported.
- Sample Apps are available for each SDK.
- To enable the authRefNo response parameter in response, contact your PayU Key Account
  Manager or PayU Support.
- Guest checkout transactions won’t be allowed post 31st Oct. 2023.
- The par parameter is optional as part of additional_info JSON.
- Integration requires merchant account registration and activation.
- PayU supports 3DS Secure 2.0 transaction with Merchant Hosted Checkout integration.
- Before you use the _payment API to collect a payment, it is recommended to use the
  Fetch Balance API (check_balance API) to check the Pluxee card balance and display
  it on the checkout page for the customer.
- Merchant is not allowed to store the complete card number or card expiry or card
  CVV details entered by the customer, even if customer provides permission to store
  the card.
- Merchant is not allowed to store the complete card number or card expiry or card
  CVV details entered by the customer.
- Merchants are recommended to use the check_balance API for checking the Sodexo card
  balance.
- You must hash the request parameters using the specified hash logic.
- While sending the response, PayU takes the exact same parameters that were sent
  in the request (in reverse order) to calculate the hash.
- You must only use the Test merchant Key and Test Salt to carry out a test transaction.
- Generate Hash requires Merchant Key and Salt.
- Uses SHA-512 for hash generation.
- PayU advises against sending the salt value as part of the payment request package,
  as it severely compromises the security of the transaction.
- API Integration requires setup of connected app in api
- 'To test your integration of CommercePro on UAT environment, use the following URL:
  https://jssdk-uat.payu.in/bolt/bolt.min.js'
- The 'isCheckoutExpress' value is always true.
- The 'icp_source' value is always 'express'.
- The 'isCheckoutExpress' parameter value is always true.
- The 'icp_source' parameter value is always 'express'.
- SDK Integration steps are provided for various platforms including Android, iOS,
  and React Native.
- The Checkout Plus integration is not recommended for the app browsers.
- Replace the script mentioned in the earlier code snippet with https://jssdk-uat.payu.in/bolt/bolt.min.js
  to test the integration.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- PayU strongly recommends you test your integration using the test merchant Key or
  Salt.
- PayU recommends you integrate with Test environment initially.
- Various SDKs for different payment integrations available.
- You must be PCI-DSS certified to use Server-to-Server integration.
- Some responses may vary based on transaction types
- You must calculate the hash again and validate it against the hash that you sent
  in the request to ensure the transaction is secure.
- Sensitive information should not be part of the payment request to PayU.
- Uses server-to-server cURL call for payment requests
- Hashing of request parameters is required
- Requires setup of connected app in PayU dashboard
- Some API endpoints may have usage limits
- Some objects like Contact may return nulls in deeply nested fields
- The amount must be greater than Rs. 8000 for the cardless EMI option.
- Transaction ID can be used only once.
- This API is backward compatible and you can continue to the existing integration
  parameters to process the 3DS 1.0.2 transactions.
- Direct Authorization Integration
- Sample cURL request includes browser details for 3DS Secure 2.0.
- Ensure proper API key and secret management
- VPA can first be validated using VPA validate web service.
- Ensure proper merchant account setup before integration.
- Check for the latest API version.
- User VPA is not required for this flow.
- Every time there is a change, you need to incorporate the changes to avoid breaking
  the transactions.
- Integration requires proper setup in merchant dashboard
- Whitelisting is required at both merchant’s and PayU’s end to establish this connection.
- You need to check before hand, whether the customer’s device has a PhonePe app or
  not. If the customer’s device does not have a PhonePe App, do not show this feature
  on your check out page.
- The highlighted parameter i.e. udf 1 parameter contains the offer details to be
  applied against the transaction. The offer details are pre-determined between you
  and PhonePe.
- Dynamic configuration available using dashboard
- Uses SHA-512 for hashing.
- 'Ensure that you include the delimiters (pipe symbol: |) if you don''t pass the
  UDF parameters, so you need to ensure that 5 delimiters are included if UDF parameters
  are not passed.'
- It has been observed that a majority of the hash mismatch errors result from an
  incorrect key insert by the merchant’s developers while generating the hash value.
- API integration may require a connected app setup.
- To enable the additional charges facility, you need to contact PayU Support.
- In this method of applying additional charges, the hash sequence would be affected
  for both pre-Transaction and post-transaction.
- The additional charges would be added only once the customer clicks the Pay Now
  option.
- Error handling section available in documentation
- Integration steps for Android, iOS, and React Native SDKs are provided.
- If you encounter any other issues or errors and are unable to resolve them, contact
  PayU Support.
- Test cards only for Test environment
- Any value can be used for the name parameter in Test environment
- Any name can be used for the name parameter in Test environment.
- The anything@payu VPA can be used in the sandbox or API Playground and any other
  VPA will not work for the _payment only.
- Requires setup of Merchant Account and API key from Dashboard
- While creating the server URL, ensure that it can accept the data in the above content
  formats.
- When integrating with PayU, the server-to-server (S2S) callback feature is a highly
  recommended option.
- PayU provides a test environment that allows you to test your payment integration
  without processing real payments.
- It is important to keep your Key/Salt secure and backed up in a safe place.
- The response from PayU is not in JSON format and it is in an encrypted format. You
  need to append '?form=2' with the endpoint to get the response in JSON format.
- In the cURL request, if there are unwanted spaces in the key, Salt, or with any
  other parameter’s value, the response may indicate 'Merchant key is empty'. Check
  and remove the unwanted spaces in the cURL request.
- Integration guides available for Android, iOS, and React Native SDKs.
- You need to enable QR payments by contacting your PayU Key Account Manager.
- There are no prerequisites for using the PayU Hosted Checkout integration.
- Ensure to register for a Merchant Account to access the API.
- Some endpoints may require additional setup in the PayU dashboard.
- Some endpoints may have additional query parameters
- To validate whether the card was issued in India, you must use the check_isDomestic
  API by posting the first six digits of the card number.
- In the Merchant Hosted Checkout integration, you must use CASH with the pg parameter
  for collecting payment using wallets.
- PayU GO SDK takes care of the low-level details of the API integration.
- Enable payment methods from Dashboard > Settings > Payment methods.
- Test cards, UPI, and Wallet credentials must only be used in the sandbox environment.
- You can use the following wallets and their corresponding credentials to test wallet
  integration.
- Use the Phonepe Pre-Prod app for testing purposes as described in the following
  PhonePe doc.
- Set the value of the setIsProduction()to true in the payment integration code. This
  enables the integration to accept live payments.
- Configure the Verify payment method to fetch the payment status. We strongly recommend
  that you use this as a back up method to handle scenarios where the payment callback
  is failed due to technical error.
- We recommend that you configure Webhook to receive payment responses on your server.
- The PayU SDK for java enables you to easily work with the APIs of PayU by integrating
  this SDK within your base system.
- Uses multipart/form-data for requests
- Test the integration using provided test cards and UPI IDs.
- Test cards, UPI, and Wallet credentials must only be used in the sandbox environment.
  Using these test cards in production environment may cause validation error.
- Set the value of the `setIsProduction()`to `true` in the payment integration code.
  This enables the integration to accept live payments.
- We strongly recommend that you use Verify payment method as a back up method to
  handle scenarios where the payment callback is failed due to technical error.
- PHP version >= 7
- 1 for Live Environment/ 0 for SandBox Environment
- Setup Convenience Fee
- Set the value of the setIsProduction() to true in the payment integration code.
  This enables the integration to accept live payments.
- We strongly recommend that you use the Verify payment method as a back up method
  to handle scenarios where the payment callback is failed due to technical error.
- Requires setup of API keys and salts for authentication.
- Environment parameter can be set to 'Test' or 'Production'.
- Test cards must only be used in the sandbox environment.
- Ensure that you are using the production merchant key and salt generated in the
  live mode.
- Set the value of the `setIsProduction()`to `true` in the payment integration code.
- Some endpoints may have specific rate limits
- The PayU SDK for NodeJS lets you to easily work with PayU APIs by integrating this
  SDK within your base system.
- Uses OAuth2 with refresh token â€” requires setup of connected app in PayU
- Requires OAuth2 authentication setup with PayU
- Check for SDK integration guidelines for each platform
- Integration requires API keys for accessing endpoints.
- Uses upi://pay as a prefix for transaction intents
- Use dynamic configuration using the dashboard
- A complete checkout solution for Android apps.
- During the integration, refer the Generate Dynamic Hash for hash generation details.
- Enable the payment methods that you want to offer to your customers from Dashboard
  > Settings > Payment methods.
- By default, Cards, UPI, and other payment methods are enabled.
- The URLs used in surl and furl are for temporary use. PayU recommends you to design
  or use your own surl and furl after testing is completed.
- In case of UPI intent/InApp flow, you will not receive a callback response in surl
  or furl.
- Consider the mihpayid in the PayU response as PayU ID/ID.
- Various SDKs available for Android, iOS, and React Native.
- Mobile Number is mandatory for EMI.
- UPI in-app and UPI intent flow is not available in the Test mode.
- We are not recommended to go live with PayU SURL and FURL.
- For passing V2 dynamic hashes, you will receive a call on the generateHash method
  of PayUCheckoutProListener.
- Dynamic hashes must be generated at runtime for each transaction and will vary based
  on the transaction parameters.
- Hashing logic for SDK and Web Integration is different.
- The Native OTP flow is not available in the Test mode
- The Gpay InApp flow is not available in the Test mode.
- The PhonePe InApp flow is not available in the Test mode.
- Merchants can enable Surepay on the bank page.
- 'Default payment modes order on the checkout screen is as below: Card, NetBanking,
  UPI, and Wallets'
- The maximum length for the merchant name is 20 characters.
- By default, the logo is invisible.
- The default value for showing the saved card feature is enabled.
- The default value for showing the toolbar is displayed.
- The default value for exit confirmation on checkout screen is true.
- The default value for exit confirmation on payment screen is true.
- The default value for runtime SMS permission is true.
- The default value for auto-select OTP flow is false.
- The default response timeout is 10 seconds.
- To start using dynamic config use the latest version of SDK 1.8.5. Also, if you
  are using PayU OTP assist SDK please update its version to 1.2.2.
- Ensure to comply with PayU's terms and conditions for integration.
- Ensure to follow integration steps for each SDK
- Requires merchant account setup on PayU Dashboard
- Check API limits to avoid throttling
- No integration change is required to enable One Click Checkout in Checkout Pro SDK.
- Merchants need to send the valid phone numbers of customers.
- Merchant needs to set parameters in the CustomBrowserConfig object while initializing
  CB SDK
- You can enable Closed-Loop wallet payment mode from PayU’s Merchant Dashboard.
- This integration requires dynamic hashes.
- Make sure you integrate with CheckoutPro SDK for Android
- PayU supports various SDKs for integration including Flutter and Cordova.
- In PayUCheckotPro SDK, Native OTP feature is not supported in UAT. Please comment
  the line of code from build.gradle file.
- This error occurs when you take the payment integration live without setting the
  value of the setIsProduction parameter to true.
- PayU Core Android SDK version 3.0 is deprecated.
- It is recommended to generate hash from server only.
- Some approaches for generating hash are not recommended for live environments.
- Transaction ID should be kept unique for each transaction and not more than 25 characters.
- Email and First name can be empty strings "" if you don't want to use them.
- Test cards for EMI include mandatory mobile number for EMI.
- Before you integrate these APIs, you must follow Step 1 and Step 2 of this section.
- 'The hash logic for this API is: <key>|payment_related_details_for_mobile_sdk|<userCredential>|<salt>'
- requestId is a unique random number passed in the request.
- You can check if a particular NetBanking service is down or not by just passing
  the bankCode or card-bin (first 6 digits of card number).
- Implementing the verification step in your Android payment flow protects your application
  from potential payment status tampering.
- If you are passing wrong Hash then you will get null response
- Multiple SDKs available for Android, iOS, and React Native.
- For TPV transactions, you need to have a different Merchant ID. Contact your Key
  Account Manager at PayU for the same.
- The static hashes can be passed to SDK during integration and do not change.
- Payment hash calculation varies based on transaction types.
- 'Min SDK Version: 21'
- 'Compile SDK Version: 31 and above'
- 'Kotlin version: 1.6.10'
- Ensure to follow the Go-live Checklist for each SDK.
- The `pg` parameter is mandatory for payment category.
- Each payment option requires a unique `bankcode`.
- Ensure to follow the integration steps as outlined for each SDK.
- You can use test cards and wallets for integration testing.
- Mobile Number is mandatory for EMI transactions.
- TLS v1.1+ Support for API levels 16-19 is done via chrome custom tabs.
- Chrome must be present in the device (version 45+ available JB onwards).
- Since payment is done through Chrome Custom tabs hence no surepay/OTP assist feature
  will be available.
- Do not clear cookies for some URLs- We clear cookies for the URLs that load on the
  Custom Browser. If you don’t want to clear your webpage cookies, you should provide
  a list of URLs on which we would not clear the cookies.
- Mandatory configuration includes PostData and PostURL.
- The SDK runs a BIN check before proceeding with the Native OTP experience.
- There are few bins that are not eligible for native OTP flow even if the Bank and
  card scheme are eligible.
- Bank downtime will affect the performance of this flow.
- Hash is required for PayU to validate the authenticity of the transaction. This
  hashing should be done on your server.
- After you get the response from SDK, make sure to confirm it with the PayU server.
- It is recommended to implement the PayU Webhook or backend verify call from your
  backend.
- Some endpoints may have specific limitations
- Go-live Checklist is provided for various SDK integrations.
- Multiple SDKs available for different platforms.
- PayU recommends you configure the timeout to less than 60 seconds for a better user
  experience.
- UPI SDK supports collect, intent and in app flows for accepting UPI payments through
  major acquirers.
- Implementation of most of the UPI flows is different when compared to normal transactions.
- Every transaction (payment or non-payment) needs a hash by you before sending the
  transaction details to PayU.
- API responses may vary based on transaction success or failure.
- Documentation for various SDK integrations available.
- Set the value of the setIsProduction() to true in the payment integration code.
- We strongly recommend that you use the Verify payment method to fetch the payment
  status.
- Ensure that the merchant account is verified before integration.
- Transactions may take some time to reflect in the dashboard.
- It is recommended to pass ifscCode for UPI, UPI Intent and TEZ TPV transactions.
- Uses PaymentPostParams for payment post parameters
- Supports UPI, card and wallet payment modes
- Opens as an in app experience without any redirection
- UPI PIN authentication
- For Google pay, no CVV rather an OTP with auto read/ submit is there
- Fallbacks to collect in case app is not installed
- Ensure to handle rate limiting as specified in the documentation
- SDK Integration steps are provided for each SDK.
- Supports UPI, card, and wallet payment modes
- Opens as an in-app experience without any redirection
- Merchants are advised to show PhonePe option on their UI after the PhonePe initialization
  callback is called.
- Uses OAuth2 with refresh token – requires setup of connected app in PayU
- Some APIs may return nulls in certain fields
- Configure Webhook to receive payment responses on your server.
- API documentation available for various SDKs.
- Values set in the PayUOlaMoneyParams must be the same that needs to be sent to PayU’s
  backend in payment post-data.
- Power native experience on the new 3DS 2.0 protocol for card transactions.
- Fallback to 3DS 1 available in case of failures in device collection.
- Compliant EMVCO certified 3DS SDK with more control across the whole customer journey.
- If auto-read is false, auto-submit will not work whereas auto-read will work in
  case of auto-submit is false.
- Minimum Android SDK Version - 23 and above.
- Compile SDK Version - 31 and above.
- For callback logic refer to Listener or Callback logic sub-section.
- The PayUCheckoutPro experience allows integration with the PayU PG with minimal
  effort.
- If you are using Test Key & Test Salt, configure the setIsProduction parameter as
  false.
- Otherwise, if you are using Production Key and Salt, configure the setIsProduction
  parameter as true.
- PayU CheckoutPro SDK does not support SSL Pinning due to business continuity.
- PhonePe integration with PayU Android SDK is currently available only in India.
- Merchant must be PCI-DSS certified when collecting customer’s card details.
- You need to contact your PayU Key Account Manager to enable Server-to-Server integration.
- PayU recommends you generate the hashes on your server. Do not generate the hashes
  locally in your app as it will compromise the security of the transactions.
- You need not use the Payment API if you are using PayU Mobile SDK, as PayU Mobile
  SDK will call all the APIs internally.
- If you want to use collect flow, it is mandatory to enter VPA, otherwise, it is
  not required.
- In PayU SKD, always pass String value in amount field for iOS and Android.
- Minimum supported iOS version is 12. Please update it on project and podfile.
- A complete, ready-to-use native Checkout UI
- Support for multiple payment options including major card providers, netbanking,
  UPI, prepaid wallets, credit card EMI, and recurring payments
- 'Minimum iOS version: iOS 11'
- SDK Integration steps are available for various platforms including Android, iOS,
  and React Native.
- Please add NSCameraUsageDescription key in your application Info.plist file.
- The URL used in surl and furl are for temporary use. PayU recommends you to design
  or use your own surl and furl after testing is completed.
- We don't support UPI Intent SI or UPI Intent OTM in IOS, We support only Card/NB/UPI
  Collect.
- In case of UPI intent/Collect flow, you will not receive a callback response in
  surl or furl.
- Consider the mihpayid in the PayU response as PayU ID/ID
- Ensure to register for a Merchant Account before integration.
- Ensure to handle token expiration
- You can dynamically make the changes listed in this section using the PayU Dashboard.
- Default response timeout is 5 seconds
- To integrate Native OTP Assist, get enabled txn_s2s_flow on your merchant key from
  your Key Account Manager at PayU
- For security reasons, hash has to be calculated at the server side.
- Make sure you integrate with CheckoutPro SDK for iOS
- Uses latest version of SDK 1.8.5 for dynamic configuration.
- If using PayU OTP assist SDK, update to version 1.2.2.
- Merchant will receive a call on the method generateHash of PayUCheckoutProListener.
- The server will append salt at the end and generate sha512 hash over it.
- Various SDKs available for integration
- Includes documentation for both Android and iOS
- You don't need to set udf1-5 in case you are not using them email and firstname
  can be empty strings if you don't want to use them. For store user card feature
  you need to set userCredentials.
- To save a card, StoreCardName must be provided along with userCredentials.
- To collect payments using cards tokenized outside the PayU platform.
- It is good to go state. You can use request parameter in webview to open Payment
  Page
- To pay using a Cash Card, set the cashcard parameter with the bank code.
- 'For Subvention EMI, if subventionAmount is passed, the hash formula for payment
  hash will be similar to the format: sha512(key|txnid|amount|productinfo|firstname|email|udf1|udf2|udf3|udf4|udf5||||||SALT|SubventionAmount)'
- Ensure to follow the integration steps properly for successful API calls.
- Refer to the official documentation for detailed integration steps.
- Get the Twid customer hash in the field5 param of PayuResponse, which can be used
  in the next transactions to skip authentication.
- Download the app and register your mobile number and follow the instructions as
  described in the above PhonePe docs.
- These test cards, UPI, and Wallet credentials must only be used in the sandbox environment.
  Using these test cards in production environment may cause validation error.
- Integrate with various SDKs and plugins for mobile and web platforms.
- Go-live checklist
- paymentRelatedDetails.availablePaymentOptionsArray gives you all the available payment
  options for you.
- You can check if a particular NetBanking service is down or not by passing the bankCode
  or card-bin.
- In `completionBlockForHashGeneration`, you will get hash string without salt so
  you need to append the salt at the end of this hash string and convert using sha512
  and pass that value in hash completion as passing below in the code.
- PayU strongly recommends that this API is used to reconcile with PayU’s database
  once you receive the response.
- Integration requires setting up a client on the PayU dashboard.
- Ensure to handle token expiration appropriately.
- Explore various SDKs for Android, iOS, and React Native.
- Requires hash generation using `Sha512(Key|Command|Var1|Salt)` format.
- 'Hash will be in the format of: Sha512(Key|Command|Var1|Salt)'
- Requires a JSON in var1 with requestId as a unique random number
- For more information on Static Hashing, refer to [Generate Static Hash](https://docs.payu.in/docs/generate-static-hash-ios).
- Static hashes can be passed to SDK during integration and do not change.
- Payment hash is calculated using SHA512 with specific parameters.
- Some API responses may vary based on integration type
- PayU recommends that you integrate the latest version of Custom Browser SDK.
- Setup of merchant account required for integration
- Review Order and SurePay features are deprecated from v9.0.0 onwards.
- Hashes must be generated only on your server. Your secret key must never be included
  in your app.
- Some endpoints may return nulls in deeply nested fields
- We strongly recommend that you use the Verify payment method as a backup to handle
  scenarios where the payment callback fails due to technical error.
- Ensure to register for a Merchant Account.
- Test Integration is necessary before going live.
- Ensure to handle dynamic hash generation for secure transactions.
- The OTP Assist SDK provides a complete authentication flow for card transactions.
- Configure Excluded Architectures to arm64 in the Build Settings of your project
  to run in Simulator.
- There is no WebView involved in any payment flow. Every payment flow is completely
  API based and super quick.
- Hashes must be generated only on your server as it needs a secret key.
- Your app must never contain salt.
- Use the Phonepe Pre-Prod app for testing purposes as described in the PhonePe docs.
- Requires OAuth2 authentication.
- The 3DS2 SDK is offered via CocoaPods.
- Initialisation of SDK is mandatory if merchant is utilising PayU 3DS 2.0 for de-coupled
  functionality.
- Test Integration
- Generate Hash
- Merchants can take advantage of a complete user funnel to understand user behavior.
- Supported iOS deployment target - iOS 17 and above.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid credentials'
- '500 Internal Server Error: An unexpected error occurred'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the request format and parameters'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Endpoint does not exist'
- 'INVALID_CREDENTIALS: Check your API key and secret'
- 'TIMEOUT: Ensure your request parameters are correct'
- '403 FORBIDDEN: Check your access permissions'
- '401 Unauthorized: Check client credentials'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry the request'
- '400 Bad Request: Check the request payload format.'
- '401 Unauthorized: Verify your API credentials.'
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Verify API key and secret'
- Unauthorized access errors
- Permission denied messages
- Responses indicating that the requested resource is not available
- 'INVALID_REQUEST: Check the request parameters and structure.'
- '401 Unauthorized: Verify client credentials and token.'
- 'AUTHENTICATION_FAILED: Verify API credentials'
- 'UNAUTHORIZED: Ensure the access token is valid'
- 'FORBIDDEN: Verify permissions for the requested operation'
- Refer to Error Codes for Refund Initiation for error messages.
- 'E000: No Error'
- Some issues arise when merchants configure their system to close the webview whenever
  an error occurs on the checkout page.
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify your credentials and token'
- '500 Internal Server Error: Contact support'
- 'Incorrect Hash: Double-check the hash generation logic and ensure that the parameters
  are in the correct order.'
- 'Invalid API Credentials: Verify that you are using the correct key and salt for
  the environment (test or production).'
- 'Payment Method Not Enabled: Ensure that the payment method you are trying to use
  is enabled in your PayU merchant account.'
- 'Webhook Issues: Check your webhook logs to identify any errors in processing transaction
  updates.'
- Transaction Completed Successfully
- 'E1903: Authorization failed at Bank'
- 'E000: success'
- 'E001: failure — check parameters'
- '401 Unauthorized: Verify credentials'
- '429 Too Many Requests: Rate limit exceeded'
- Transaction is Successful
- 'E1617: Invalid vpa'
- '400 Bad Request: Missing required parameters.'
- '401 Unauthorized: Invalid credentials.'
- '500 Internal Server Error: Try again later.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Ensure valid credentials are used.'
- Mandatory parameters are missing in the transaction request.
- Transaction failed due to incorrectly calculated hash parameter.
- The transaction ID (txnid) has been used previously or was successfully captured.
- Invalid amount or amount parameter was not passed.
- The debit card or credit card details passed are incorrect.
- 'bad request: indicates that there is something wrong with the request parameters
  being sent.'
- 'invalid parameter: typically means that one or more of the parameters being sent
  in the API request is not valid.'
- '400: Remove the ''txn_s2s_flow'' parameter from the payment request.'
- Using test cards in production environment may cause validation error.
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify client credentials.'
- The UPI in-app and UPI intent flow is not available in the Test mode.
- 'Validation error: Using test cards in production environment.'
- '401 Unauthorized: Verify client credentials'
- 'INVALID_REQUEST: Check API request parameters'
- '401 Unauthorized: Verify client credentials and token'
- '503 Service Unavailable: Retry after some time'
- 'INVALID_REQUEST: Check the request parameters for correctness.'
- 'UNAUTHORIZED_ACCESS: Verify API keys and permissions.'
- 'E1302: Bank failed to authenticate the customer due to 3D Secure Enrollment decline'
- 'E308: Transaction Failed at bank end.'
- 'SSL_ERROR: The error message is shown as received from the SSL error description.'
- '400 BAD_REQUEST: Check parameters passed in the request.'
- '401 UNAUTHORIZED: Verify client credentials or token.'
- '401 Unauthorized: Recheck OAuth credentials'
- '''verify your server'' OR Something went wrong, please verify with your server.'
- Value &lt;!DOCTYPE of type java.lang.String cannot be converted to JSONObject
- Oops Something went Wrong
- Something Went Wrong
- Some Problem Occurred Issue
- MERCHANT_INFO_NOT_PRESENT
- '400 Bad Request: Check the parameters passed in the request.'
- '401 Unauthorized: Recheck API key and authentication credentials.'
- '1: VENDOR_NOT_SUPPORTED: The device Vendor is not supported'
- '2: DEVICE_NOT_SUPPORTED: The device is not supported'
- '3: APP_VERSION_MISMATCH: Samsung Pay version doesn''t meet the requirements'
- '4: COUNTRY_NOT_SUPPORTED: The country of device origin is not supported by Samsung
  Pay'
- '5: MERCHANT_KEY_NOT_REGISTER_FOR_SAMSUNG_PAY: Merchant is not registered for Samsung
  Pay with PayU'
- '6: CONTEXT_NULL: Context is null'
- '7: PAYMENT_ID_NOT_PRESENT: Check your postdata'
- '1001: DEVICE_NOT_SUPPORTED: In case enablewebflow is set to false for Tez payment
  and the Tez app is not present on the device following error would be thrown'
- '1002: MERCHANT_INFO_NOT_PRESENT: In case below error is received while processing
  payment please check your postData and hash'
- '1001: '
- '1002: Network timeout, please verify with your server.'
- '1003: Gateway timeout, please verify with your server.'
- '1004: User canceled it, please verify with your server.'
- '1005: Something went wrong, please verify with your server.'
- '1006: The bank page timed out, please verify with your server.'
- Using test cards in production environment may cause validation error
- 'VENDOR_NOT_SUPPORTED: The device Vendor is not supported'
- 'DEVICE_NOT_SUPPORTED: The device is not supported'
- 'APP_VERSION_MISMATCH: Samsung Pay version doesn''t meet the requirements'
- 'COUNTRY_NOT_SUPPORTED: The country of device origin is not supported by Samsung
  Pay'
- 'MERCHANT_KEY_NOT_REGISTER_FOR_SAMSUNG_PAY: Merchant is not registered for Samsung
  Pay with PayU'
- 'CONTEXT_NULL: Context is null'
- 'PAYMENT_ID_NOT_PRESENT: Check your postdata'
- 'MERCHANT_INFO_NOT_PRESENT: '
- 'INVOKING_APP_NOT_INSTALLED_CODE: The selected app is not installed on the device.'
- 'INVOKING_APP_NOT_ONBOARDED_CODE: Application uses have not been onboarded on UPI
  on the selected'
- 'INVALID_MERCHANT_KEY: Check if the merchant key is correct.'
- 'TRANSACTION_NOT_FOUND: Verify the transaction reference.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '400 Bad Request: Check the request parameters for accuracy'
- '401 Unauthorized: Verify the token validity'
- '404 Not Found: Ensure the endpoint is correct'
- '1: MERCHANT_KEY_NOT_REGISTER_FOR_PHONEPE: Merchant is not registered for PhonePe
  with PayU'
- '100: Mandatory params are missing. Please check again!'
- '101: Something Went Wrong!'
- '0: Success'
- '1: Fail'
- '3: Challenge timeout'
- '4: Challenge protocol error'
- '5: Challenge cancelled'
- '101: Card bin or card token was empty'
- '102: Merchant key null'
- '103: Amount not in correct format'
- '104: Transaction ID null'
- '105: Hash null'
- '106: Card not supported on 3DS 2.0'
- '107: Card scheme not supported'
- '108: Hash incorrect'
- '500: Something went wrong'
- '504: Gateway timeout'
- Value <!DOCTYPE of type java.lang.String cannot be converted to JSONObject (Error
  code 5014)
- 'UNAUTHORIZED: Verify the access token.'
- 'INVALID_CREDENTIALS: Check your credentials'
- 'RATE_LIMIT_EXCEEDED: Throttle your requests'
- '400 Bad Request: Check your request parameters'
- '400 Bad Request: Check request parameters and payload'
- '401 Unauthorized: Verify client ID, secret, or tokens'
- '500 Internal Server Error: Retry the request after some time'
- Something went wrong with Parameter, error contains the error Message string
- error contains the error Message string
- 'UNAUTHORIZED: Verify API key or authentication method.'
- 'SERVER_ERROR: Retry the request after some time.'
- 'INVALID_CREDENTIALS: Check client ID and secret'
- 'ACCESS_DENIED: Ensure correct permissions are set'
- 'RATE_LIMIT_EXCEEDED: Throttle API requests'
- '1001: No Internet'
- '1004: The user canceled it, please verify with your server.'
- '400 Bad Request: Check the parameters sent in the request.'
- '401 Unauthorized: Recheck API credentials.'
- '1: Fail/ Invalid params'
- '2: Error while creating transaction to generate device details, please try again'
- '3: Time out'
- '5: User cancelled the transaction'
- '6: Runtime Error'
- '12: Action params null for headless flow'
- '14: Resend OTP limit exceeded'
- '15: The OTP code you entered is incorrect'
- '17: Transaction failed'
- '105: Hash cannot be nil'
- '109: Invalid ACS UI Type'
- '503: Error while creating transaction to generate device details, please try again'
- '1: Fail/ Invalid Response/ Missing params'
- '2: User canceled the transaction'
- '100: Transaction timeout'
- '101: Hash missing'
- '102: Incorrect Hash'
- '103: Handshake failed'
- '104: UPI bolt not supported'
- '105: Device not supported for UPI Bolt'
- '106: Permission missing'
- '107: Sim info not available'
- '108: Device binding failed'
- '501: No internet connection'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Merchant Account
  - Merchant Key
  - Merchant Secret
  - Client ID
  - Secret
  - MerchantAccount
  - Payment
  - Webhook
client:
  base_url: https://docs.payu.in
  auth:
    type: oauth2
source_metadata: null
