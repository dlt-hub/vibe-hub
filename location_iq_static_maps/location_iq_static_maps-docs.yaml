resources:
- name: static_map
  endpoint:
    path: /staticmap
    method: GET
    data_selector: ''
    params:
      key: YOUR_ACCESS_TOKEN
      zoom: '18'
      size: 300x300
      format: png
      maptype: streets
- name: free_form_query
  endpoint:
    path: /v1/search
    method: GET
    data_selector: array of objects
- name: free_form_query
  endpoint:
    path: /v1/search
    method: GET
    data_selector: array of objects
    params:
      q: string
      format: string
      addressdetails: integer
      statecode: integer
      viewbox: string
      bounded: integer
      limit: integer
      accept-language: string
      countrycodes: string
      normalizeaddress: integer
      normalizecity: integer
      postaladdress: integer
      matchquality: integer
      source: string
      normalizeimportance: integer
      dedupe: integer
      namedetails: integer
      extratags: integer
      polygon_geojson: integer
      polygon_kml: integer
      polygon_svg: integer
      polygon_text: integer
      json_callback: string
      polygon_threshold: number
- name: structured_geocoding
  endpoint:
    path: /v1/search/structured
    method: GET
    data_selector: results
    params:
      limit: '10'
      accept-language: en
- name: postal_code_search
  endpoint:
    path: /v1/search/postalcode
    method: GET
    data_selector: array of objects
- name: reverse_geocoding
  endpoint:
    path: /v1/reverse
    method: GET
    data_selector: address
    params:
      lat: float
      lon: float
      format: string
      zoom: integer
      accept-language: string
      addressdetails: integer
      normalizeaddress: integer
      normalizecity: integer
      postaladdress: integer
      oceans: integer
      showdistance: integer
      statecode: integer
      source: string
      namedetails: integer
      extratags: integer
      polygon_geojson: integer
      polygon_kml: integer
      polygon_svg: integer
      polygon_text: integer
      polygon_threshold: number
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: array of objects
- name: lookup
  endpoint:
    path: /lookup
    method: GET
    data_selector: results
    params: {}
- name: directions
  endpoint:
    path: /directions/{profile}/{coordinates}
    method: GET
    data_selector: routes
- name: optimize_service
  endpoint:
    path: /v1/optimize/{profile}/{coordinates}
    method: GET
    data_selector: waypoints
- name: matching_service
  endpoint:
    path: /v1/matching/{profile}/{coordinates}
    method: GET
    data_selector: tracepoints
- name: matrix
  endpoint:
    path: /v1/matrix/{profile}/{coordinates}
    method: GET
    data_selector: distances
    params: {}
- name: nearest_service
  endpoint:
    path: /v1/nearest/{profile}/{coordinates}
    method: GET
    data_selector: waypoints
    params: {}
- name: nearby_points_of_interest
  endpoint:
    path: /nearby
    method: GET
    data_selector: array of objects
    params:
      lat: float
      lon: float
      tag: string
      radius: integer
      limit: integer
- name: timezone
  endpoint:
    path: /timezone
    method: GET
    data_selector: timezone
    params:
      lat: required
      lon: required
      timestamp: optional
- name: balance
  endpoint:
    path: /v1/balance
    method: GET
    data_selector: object
- name: maps
  endpoint:
    path: /<theme>/<type>.json
    method: GET
    data_selector: tiles
    params:
      access_token: <access_token>
- name: static_map
  endpoint:
    path: /staticmap
    method: GET
    data_selector: image
    params: {}
- name: free_form_query
  endpoint:
    path: /v1/search
    method: GET
    data_selector: array of objects
    params:
      q: string
      format: string
      addressdetails: integer
      statecode: integer
      viewbox: string
      bounded: integer
      limit: integer
      accept-language: string
      countrycodes: string
      normalizeaddress: integer
      normalizecity: integer
      postaladdress: integer
      matchquality: integer
      source: string
      normalizeimportance: integer
      dedupe: integer
      namedetails: integer
      extratags: integer
      polygon_geojson: integer
      polygon_kml: integer
      polygon_svg: integer
      polygon_text: integer
      json_callback: string
      polygon_threshold: number
- name: reverse_geocoding
  endpoint:
    path: /v1/reverse
    method: GET
    data_selector: object
    params:
      lat: required
      lon: required
      format: json
      zoom: 18
      accept-language: en
      addressdetails: 1
      normalizeaddress: 0
- name: autocomplete
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: array of objects
- name: lookup
  endpoint:
    path: /v1/lookup
    method: GET
    data_selector: object
    params: {}
- name: directions
  endpoint:
    path: /{profile}/{coordinates}
    method: GET
    data_selector: object
    params: {}
- name: nearby_poi
  endpoint:
    path: /nearby
    method: GET
    data_selector: array of objects
    params:
      lat: float
      lon: float
      tag: string
      radius: integer
      limit: integer
- name: timezone
  endpoint:
    path: /v1/timezone
    method: GET
    data_selector: timezone
    params:
      lat: required
      lon: required
      timestamp: optional
- name: balance
  endpoint:
    path: /v1/balance
    method: GET
    data_selector: object
    params: {}
- name: search_forward_geocoding
  endpoint:
    path: /v1/search?
    method: GET
- name: reverse_geocoding
  endpoint:
    path: /v1/reverse?
    method: GET
- name: autocomplete
  endpoint:
    path: /v1/autocomplete?
    method: GET
- name: nearby_poi
  endpoint:
    path: /v1/nearby?
    method: GET
- name: timezone
  endpoint:
    path: /v1/timezone?
    method: GET
- name: directions
  endpoint:
    path: /v1/directions
    method: GET
- name: optimize
  endpoint:
    path: /v1/optimize
    method: GET
- name: map_matching
  endpoint:
    path: /v1/matching
    method: GET
- name: distance_matrix
  endpoint:
    path: /v1/matrix
    method: GET
- name: nearest
  endpoint:
    path: /v1/nearest
    method: GET
- name: dynamic_maps
  endpoint:
    path: tiles.locationiq.com/v3/
    method: GET
- name: static_maps
  endpoint:
    path: maps.locationiq.com/v3
    method: GET
- name: balance
  endpoint:
    path: /v1/balance?
    method: GET
- name: reverse_geocoding
  endpoint:
    path: /v1/reverse
    method: GET
    data_selector: address
    params: {}
- name: convert_addresses_to_coordinates
  endpoint:
    path: /v1/search
    method: GET
    data_selector: results
    params:
      format: json
- name: nearby_poi
  endpoint:
    path: /v1/nearby
    method: GET
    data_selector: results
    params:
      radius: '2000'
      tag: cafe
- name: geocoding
  endpoint:
    path: /v1/search
    method: GET
    data_selector: results
    params:
      format: json
- name: geocoding
  endpoint:
    path: /search
    method: GET
    data_selector: ''
    params:
      format: json
      addressdetails: '1'
- name: routing
  endpoint:
    path: /directions/driving/
    method: GET
    data_selector: ''
    params:
      overview: simplified
      annotations: 'false'
- name: timezone
  endpoint:
    path: /
    method: GET
    data_selector: timezone
- name: search
  endpoint:
    path: /v1/search
    method: GET
    data_selector: ''
    params: {}
- name: reverse_geocoding
  endpoint:
    path: /v1/reverse
    method: GET
    data_selector: ''
    params:
      key: YOUR_ACCESS_TOKEN
      lat: LATITUDE
      lon: LONGITUDE
      format: json
- name: autocomplete
  endpoint:
    path: /v1/autocomplete
    method: GET
    data_selector: results
    params:
      key: YOUR_ACCESS_TOKEN
      q: SEARCH_STRING
- name: nearby_points_of_interest
  endpoint:
    path: /v1/nearby
    method: GET
    data_selector: ''
    params:
      lat: LATITUDE
      lon: LONGITUDE
      radius: '100'
- name: nearby
  endpoint:
    path: /v1/nearby
    method: GET
    data_selector: ''
    params: {}
- name: timezone
  endpoint:
    path: /v1/timezone
    method: GET
    data_selector: timezone
    params:
      key: YOUR_ACCESS_TOKEN
      lat: LATITUDE
      lon: LONGITUDE
      timestamp: TIMESTAMP
- name: directions
  endpoint:
    path: /directions/{profile}/{coordinates}
    method: GET
    data_selector: routes
    params:
      key: <YOUR_ACCESS_TOKEN>
- name: map_matching
  endpoint:
    path: /map-matching/{coordinates}
    method: GET
    data_selector: routes
    params:
      key: <YOUR_ACCESS_TOKEN>
- name: matrix
  endpoint:
    path: /matrix
    method: GET
    data_selector: routes
    params:
      key: <YOUR_ACCESS_TOKEN>
- name: nearest
  endpoint:
    path: /nearest/{coordinates}
    method: GET
    data_selector: routes
    params:
      key: <YOUR_ACCESS_TOKEN>
- name: optimize
  endpoint:
    path: /optimize/{profile}/{coordinates}
    method: GET
    data_selector: routes
    params:
      key: <YOUR_ACCESS_TOKEN>
- name: optimize
  endpoint:
    path: /v1/optimize/driving/{coordinates}
    method: GET
    data_selector: ''
    params:
      key: <YOUR_ACCESS_TOKEN>
      roundtrip: 'true'
      source: any
      destination: any
      steps: 'false'
      annotations: 'false'
      geometries: polyline
      overview: simplified
- name: matrix
  endpoint:
    path: /v1/matrix/driving/{coordinates}
    method: GET
- name: map_matching
  endpoint:
    path: /v1/matching/driving/{coordinates}
    method: GET
    data_selector: matchings
    params: {}
- name: nearest
  endpoint:
    path: /v1/nearest/driving/{coordinates}
    method: GET
    data_selector: waypoints
    params:
      number: integer >= 1 (default 1)
- name: balance
  endpoint:
    path: /v1/balance
    method: GET
    data_selector: balance
    params:
      key: YOUR_ACCESS_TOKEN
- name: address_details
  endpoint:
    path: /addressdetails
    method: GET
    data_selector: elements
    params:
      addressdetails: '1'
- name: directions
  endpoint:
    path: /v1/directions/driving/{coordinates}
    method: GET
    params:
      key: <YOUR_ACCESS_TOKEN>
      alternatives: '{true|false|number}'
      steps: '{true|false}'
      geometries: '{polyline|polyline6|geojson}'
      overview: '{full|simplified|false}'
      annotations: '{true|false}'
- name: country_codes
  endpoint:
    path: /countrycodes
    method: GET
    data_selector: country_codes
    params: {}
notes:
- We're part of the open data community, and we give back by contributing to open
  source projects and datasets.
- We recommend using REST clients like Postman to test our APIs.
- Ensure you have your access token at hand.
- API key is essential for authentication and authorization to make API requests.
- Replace YOUR_ACCESS_TOKEN with your actual API access token
- Register for an account with LocationIQ and obtain your Access Token.
- Choose the endpoint closer to your user base for faster response times.
- Ensure address strings are URL encoded.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The Autocomplete API endpoint is intended for use where predictive, typeahead functionality
  is necessary.
- The Nearby API endpoint is presently in BETA. The request or response format may
  change without notice.
- Uses API key for authentication
- Distances are not the shortest distance between two coordinates, but rather the
  distances of the fastest routes.
- When using our Routing APIs, the order of coordinates should be entered as longitude,latitude
  instead of the typical latitude,longitude format.
- Add your authentication credentials and customize the parameters as needed
- Due to the distributed nature of our API stack that spans multiple continents and
  datacenters, the values returned by this endpoint will be a few seconds old.
- The Directions API is restricted to a maximum of 25 coordinates and a total distance
  limit of 10,000 KM.
- Level of detail required for the address corresponds roughly to the zoom level used
  in map frameworks.
- Uses OAuth2 with access token — requires setup of access token in LocationIQ
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Invalid Request'
- '401 Unauthorized: Invalid Key'
- 403 The request has been made from an unauthorized domain.
- 404 No location or places were found for the given input.
- 429 Request exceeded the rate-limits set on your account.
- 500 Internal Server Error
- 400 Bad Request
- 401 Unauthorized
- 404 No location or places were found for the given input
- 429 Request exceeded the rate-limits set on your account
- 'authentication: Invalid access token'
- 'invalid_tile_URL: The requested tile URL is not valid'
- '403: Access restricted'
- '404: Unable to geocode'
- '429: Rate Limited Day'
- '429: Rate Limited Minute'
- '429: Rate Limited Second'
- '500: Internal Server Error'
- '401 Unauthorized: Check your access token.'
- Failed to retrieve timezone information
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'cURL Error #: Check connection or API endpoint'
- '401 Unauthorized: Recheck API key'
- 'InvalidUrl: URL string is invalid.'
- 'InvalidService: Service name is invalid.'
- 'InvalidOptions: Options are invalid.'
- 'InvalidQuery: The query string is syntactically malformed.'
- 'InvalidValue: The successfully parsed query parameters are invalid.'
- 'NoSegment: One of the supplied input coordinates could not snap to street segment.'
- 'TooBig: The request size violates one of the service specific request size restrictions.'
- 'NoMatch: No matchings found.'
- 'NoTrips: No trips found because input coordinates are not connected.'
- 'NotImplemented: This request is not supported'
- 'NoTable: No route found.'
- 'Ok: Successful request'
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- 'Invalid Request: Required parameters are missing, or invalid'
- 'Invalid key: An invalid Access Token was provided'
- 'Key not active - Please write to hello@locationiq.com: The Access Token provided
  is invalid or inactive'
- 'Service not enabled: The specific service is not enabled on your token. Write to
  hello@locationiq.com to enable this.'
- 'Access restricted: The request has been made from an unauthorized domain or IP
  address.'
- 'Unable to geocode: No location or places were found for the given input'
- 'Imagery not found: No style or tile available for the specified url'
- 'Rate Limited Second: Request exceeded the per-second rate-limits set on your account'
- 'Rate Limited Minute: Request exceeded the per-minute rate-limits set on your account'
- 'Rate Limited Day: Request exceeded the per-day rate-limits set on your account'
- 'Unknown error - Please try again after some time: This is an error on the server''s
  side, we monitor this 24x7 and you should try again.'
- 'Rate limit exceeded: 1 request per second'
- 'NoRoute: No route found.'
auth_info:
  mentioned_objects:
  - access_token
client:
  base_url: https://us1.locationiq.com/v1/search
  headers:
    accept: application/json
source_metadata: null
