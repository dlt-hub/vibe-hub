resources:
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: null
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: group
  endpoint:
    path: /groups
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params:
      limit: 10
      starting_after: ''
- name: webhook_subscription
  endpoint:
    path: /webhook_subscriptions
    method: POST
    data_selector: webhook_subscription
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: id
- name: content
  endpoint:
    path: /content
    method: GET
    data_selector: data
- name: content_versions
  endpoint:
    path: /content_versions
    method: GET
    data_selector: data
- name: content_sessions
  endpoint:
    path: /content_sessions
    method: GET
    data_selector: data
- name: webhook_subscriptions
  endpoint:
    path: /webhook_subscriptions
    method: GET
    data_selector: data
    params: {}
- name: create_webhook_subscription
  endpoint:
    path: /webhook_subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: get_webhook_subscription
  endpoint:
    path: /webhook_subscriptions/:webhook_subscription_id
    method: GET
    data_selector: ''
    params: {}
- name: update_webhook_subscription
  endpoint:
    path: /webhook_subscriptions/:webhook_subscription_id
    method: PATCH
    data_selector: ''
    params: {}
- name: delete_webhook_subscription
  endpoint:
    path: /webhook_subscriptions/:webhook_subscription_id
    method: DELETE
    data_selector: ''
    params: {}
- name: userflow
  endpoint:
    path: /userflow.js
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: groups
  endpoint:
    path: /api/groups
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: event_response
- name: userflow_start
  endpoint:
    path: /userflow/start
    method: POST
    data_selector: start
- name: userflow_end_all
  endpoint:
    path: /userflow/endAll
    method: POST
    data_selector: endAll
- name: userflow_open_resource_center
  endpoint:
    path: /userflow/openResourceCenter
    method: POST
    data_selector: openResourceCenter
- name: userflow_close_resource_center
  endpoint:
    path: /userflow/closeResourceCenter
    method: POST
    data_selector: closeResourceCenter
- name: userflow_toggle_resource_center
  endpoint:
    path: /userflow/toggleResourceCenter
    method: POST
    data_selector: toggleResourceCenter
- name: userflow_set_resource_center_launcher_hidden
  endpoint:
    path: /userflow/setResourceCenterLauncherHidden
    method: POST
    data_selector: setResourceCenterLauncherHidden
- name: checklist
  endpoint:
    path: /checklists
    method: GET
    data_selector: data
    params: {}
- name: resource_center
  endpoint:
    path: /resource-center
    method: GET
    data_selector: widgets
    params: {}
- name: AI Assistant
  endpoint:
    path: /ai-assistant
    method: POST
    data_selector: response
    params: {}
- name: launchers
  endpoint:
    path: /launchers
    method: GET
    data_selector: records
    params: {}
- name: surveys
  endpoint:
    path: /surveys/nps
    method: GET
    data_selector: surveys
    params: {}
- name: announcements
  endpoint:
    path: /api/announcements
    method: POST
    data_selector: announcement
    params: {}
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: companies
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: segments
  endpoint:
    path: /api/v1/segments
    method: GET
    data_selector: data
    params: {}
- name: team_member_roles
  endpoint:
    path: /api/team_roles
    method: GET
    data_selector: roles
- name: flows
  endpoint:
    path: /api/v1/flows
    method: GET
    data_selector: data
- name: checklists
  endpoint:
    path: /api/v1/checklists
    method: GET
    data_selector: data
- name: content
  endpoint:
    path: /v1/content
    method: DELETE
    data_selector: records
- name: trackers
  endpoint:
    path: /v1/trackers
    method: DELETE
    data_selector: records
- name: context_variables
  endpoint:
    path: /api/context-variables
    method: GET
    data_selector: variables
- name: custom_filters
  endpoint:
    path: /api/custom-filters
    method: GET
    data_selector: filters
- name: flowEnded
  endpoint:
    path: /flowEnded
    method: GET
    data_selector: event_properties
    params: {}
- name: resourceCenterChanged
  endpoint:
    path: /resourceCenterChanged
    method: GET
    data_selector: event_properties
    params: {}
- name: Content object
  endpoint:
    path: /contentObject
    method: GET
    data_selector: properties
    params: {}
- name: ResourceCenterState object
  endpoint:
    path: /resourceCenterState
    method: GET
    data_selector: properties
    params: {}
- name: user
  endpoint:
    path: /userflow.identify
    method: POST
    data_selector: user
- name: group
  endpoint:
    path: /userflow.group
    method: POST
    data_selector: group
- name: event
  endpoint:
    path: /userflow.track
    method: POST
    data_selector: event
- name: start_flow
  endpoint:
    path: /start
    method: POST
    data_selector: flow
    params:
      contentId: 89eff72a-d0ae-4be6-b241-1ab04e3da7cc
      options.once: true
- name: end_all_flows
  endpoint:
    path: /endAll
    method: POST
    data_selector: status
- name: open_resource_center
  endpoint:
    path: /openResourceCenter
    method: POST
    data_selector: resourceCenter
- name: close_resource_center
  endpoint:
    path: /closeResourceCenter
    method: POST
    data_selector: status
- name: toggle_resource_center
  endpoint:
    path: /toggleResourceCenter
    method: POST
    data_selector: status
- name: set_resource_center_launcher_hidden
  endpoint:
    path: /setResourceCenterLauncherHidden
    method: POST
    data_selector: status
    params:
      hidden: true
- name: get_resource_center_state
  endpoint:
    path: /getResourceCenterState
    method: GET
    data_selector: resourceCenterState
- name: onboarding_flows
  endpoint:
    path: /v1/onboarding_flows
    method: GET
    data_selector: data
- name: user_engagement
  endpoint:
    path: /v1/user_engagement
    method: GET
    data_selector: data
- name: nested_menu
  endpoint:
    path: /api/v1/nested_menus
    method: GET
    data_selector: menus
    params: {}
- name: user
  endpoint:
    path: /users
    method: DELETE
    data_selector: user_data
    params: {}
- name: flow_session
  endpoint:
    path: /flow_sessions
    method: DELETE
    data_selector: session_data
    params: {}
notes:
- Creating and updating a user is the same operation.
- Creating and updating a group is the same operation.
- Memberships can't be created/updated directly.
- You can create webhook subscription objects to subscribe to notifications.
- Requires an API key for authentication.
- Webhook notifications will immediately begin sending to url for all events occurring
  going forward.
- If Userflow does not receive a 2xx response status code within a timeout of 15 seconds,
  Userflow will retry the request using exponential backoff.
- Userflow.js is a tiny piece of JavaScript code (~15 kB), which is loaded asynchronously
  in your web app, so it won’t affect your page load speed.
- Identity verification is a Userflow security feature that prevents malicious third
  parties from impersonating your users.
- Userflow.js requires initialization with a Userflow Token.
- Userflow allows for programmatic control of flows and resource centers.
- User onboarding is often the first experience your customers have with your product.
- Userflow caches your web pages for up to one week.
- Userflow surveys are built directly into your app experience.
- 'Privacy- and security-friendly: Trackers run 100% client-side. We’re not streaming
  any content or tracking clicks from the user’s browser.'
- Data location selected applies to end-user data.
- By default, all data is stored in North America.
- Uses OAuth2 with refresh token.
- Segments update in real-time.
- Only Owners can add, remove, or change roles of team members.
- Userflow does not support native mobile apps (e.g. native iOS or Android), it does
  support mobile web apps.
- Even though the Userflow content is responsive, the resource center/checklist launchers
  might still seem too big.
- Having multiple Userflow accounts still only requires one user login, as you can
  easily switch between accounts in the UI.
- To manage multiple products on a single account, ensure that you include the domain
  in your auto-start conditions to prevent flows from starting on the wrong product.
- You can start a flow or checklist automatically by using auto-start conditions.
- You can combine the conditions and make and/or combinations by, for example, using
  logic groups.
- Uses random attributes for A/B testing
- Feature is currently in Beta and available exclusively to Pro plan customers and
  above.
- Alerting is exclusively available on our Pro and Enterprise plans.
- Userflow will wait for 3 seconds after your app finishes loading, before giving
  up.
- Try to avoid hidden steps
- Using the Debugging tool to troubleshoot
- Unpublishing will disable content but allow analytics to be retained.
- Userflow supports iframes natively if your app follows certain rules.
- Voice-over is a theme setting.
- Most browsers block auto-playing audio, except as a direct consequence of a user
  interaction.
- SAML SSO is only available as an add-on to Pro or as a part of Userflow’s Enterprise
  plan.
- Liquid templates allow for highly custom logic based on user attributes.
- Each environment has a unique token.
- The Userflow Secret Key is a secret! Do not store it in your code repository, include
  it in your front-end code or otherwise expose it to third parties.
- Requires proper setup for OAuth2 authentication
- Ensure to handle token expiration gracefully
- Use nested menus to enhance user navigation.
- Deleting a user will remove all associated data.
- If a user signs in again, they will be recreated without history.
- Sometimes you might want to allow your users to snooze a flow for x days, especially
  for survey flows this can be relevant.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key'
- '404 Not Found: If the user or group does not exist.'
- '400: Bad Request - Invalid query parameters or JSON body. Check the error response
  for details on how to fix.'
- '401: Unauthorized - Missing or invalid API key.'
- '429: Too Many Requests - You have sent too many requests, too quickly, and are
  being rate limited.'
- '500: Internal Server Error - Something went wrong on Userflow''s end. Consider
  retrying the request, or reach out to Userflow for help.'
- '503: Internal Server Error - Service Unavailable - We''re temporarily offline for
  maintenance. Please try again later.'
- '404 Not Found: If the webhook subscription does not exist.'
- '400 Bad Request: If the request body is malformed.'
- 'Could not load Userflow.js: Ensure correct script path or network accessibility.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check permissions for accessing the resource.'
- '404 Not Found: Verify the endpoint path or resource ID.'
- 'INVALID_CREDENTIALS: Verify client_id and client_secret'
- 'ACCESS_DENIED: Check user permissions for the requested resource'
- 'TOKEN_EXPIRED: Refresh the token using the refresh token flow'
- '400 Bad Request: Check the parameters sent in the request.'
- '401 Unauthorized: Verify your API key or token.'
- 'USER_NOT_FOUND: Ensure the user exists before attempting to delete.'
- 'SESSION_NOT_FOUND: Verify the session ID before deletion.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.userflow.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Userflow-Version: '2020-01-03'
    Content-Type: application/json
source_metadata: null
