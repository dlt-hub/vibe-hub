resources:
- name: crypto_source_of_funds
  endpoint:
    path: /resources/applicantActions/-/forApplicant/{applicantId}/cryptoSourceOfFunds
    method: POST
    data_selector: ''
- name: applicant_actions
  endpoint:
    path: /resources/applicantActions/-
    method: POST
    data_selector: null
    params: {}
- name: get_applicant_actions
  endpoint:
    path: /resources/applicantActions/-;applicantId={applicantId}
    method: GET
    data_selector: null
    params:
      limit: '1000'
      offset: '0'
- name: add_images_to_applicant_actions
  endpoint:
    path: /resources/applicantActions/{applicantActionId}/images
    method: POST
    data_selector: null
    params: {}
- name: request_action_check
  endpoint:
    path: /resources/applicantActions/{applicantActionId}/review/status/pending
    method: POST
    data_selector: null
    params: {}
- name: get_action_check_results
  endpoint:
    path: /resources/applicantActions/{applicantActionId}/one
    method: GET
    data_selector: null
    params: {}
- name: get_images_from_applicant_actions
  endpoint:
    path: /resources/applicantActions/{applicantActionId}/images/{imageId}
    method: GET
    data_selector: null
    params:
      preview: 'true'
- name: add_payment_method_information
  endpoint:
    path: /resources/applicantActions/{applicantActionId}/paymentMethod
    method: POST
    data_selector: null
    params: {}
- name: Get audit trail events
  endpoint:
    path: /reference/audit-trail-events
    method: GET
- name: Get API health status
  endpoint:
    path: /reference/review-api-health
    method: GET
- name: user_verification
  endpoint:
    path: /user-verification
    method: POST
    data_selector: verificationResult
    params: {}
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: cases
- name: blueprints
  endpoint:
    path: /blueprints
    method: GET
    data_selector: blueprints
- name: aml_matches
  endpoint:
    path: /aml_matches
    method: GET
    data_selector: aml_matches
- name: user_verification
  endpoint:
    path: /user/verification
    method: GET
    data_selector: records
    params: {}
- name: fraud_prevention
  endpoint:
    path: /fraud/prevention
    method: GET
    data_selector: records
    params: {}
- name: user_verification
  endpoint:
    path: /api/user-verification
    method: POST
    data_selector: data
    params: {}
- name: business_verification
  endpoint:
    path: /api/business-verification
    method: POST
    data_selector: data
    params: {}
- name: transaction_monitoring
  endpoint:
    path: /api/transaction-monitoring
    method: POST
    data_selector: data
    params: {}
- name: sso_integration
  endpoint:
    path: /resources/auth/sso
    method: POST
    data_selector: data
    params: {}
- name: transaction
  endpoint:
    path: /services/data/vXX.X/sobjects/Transaction
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: supported_address_documents
  endpoint:
    path: /supported_address_documents
    method: GET
    data_selector: documents
- name: unsupported_documents
  endpoint:
    path: /unsupported_documents
    method: GET
    data_selector: documents
- name: supported_id_documents
  endpoint:
    path: /supported_id_documents
    method: GET
    data_selector: documents
- name: supported_id_documents
  endpoint:
    path: /api/supported_id_documents
    method: GET
    data_selector: documents
- name: supported_address_documents
  endpoint:
    path: /api/supported_address_documents
    method: GET
    data_selector: documents
- name: unsupported_documents
  endpoint:
    path: /api/unsupported_documents
    method: GET
    data_selector: documents
- name: supported_id_documents
  endpoint:
    path: /supported/id/documents
    method: GET
    data_selector: documents
    params: {}
- name: supported_address_documents
  endpoint:
    path: /supported/address/documents
    method: GET
    data_selector: documents
    params: {}
- name: rejected_documents
  endpoint:
    path: /rejected/documents
    method: GET
    data_selector: documents
    params: {}
- name: enrichment
  endpoint:
    path: /enrichment
    method: POST
    data_selector: output_data
- name: validity_check
  endpoint:
    path: /validity_check
    method: POST
    data_selector: output_data
- name: 1x1_matching
  endpoint:
    path: /1x1_matching
    method: POST
    data_selector: output_data
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: applicants
  endpoint:
    path: /resources/applicants
    method: POST
    data_selector: ''
    params:
      levelName: global-address-verification
- name: extracted_data
  endpoint:
    path: /api/eid_verification/results
    method: GET
    data_selector: extracted_data
- name: eID_verification
  endpoint:
    path: /verification/eid
    method: POST
    data_selector: verificationResult
    params: {}
- name: Argentina_Identity_Verification
  endpoint:
    path: /verification/argentina
    method: POST
    data_selector: data
    params: {}
- name: Bangladesh_Identity_Verification
  endpoint:
    path: /verification/bangladesh
    method: POST
    data_selector: data
    params: {}
- name: Brazil_Identity_Verification
  endpoint:
    path: /verification/brazil
    method: POST
    data_selector: data
    params: {}
- name: Denmark_Identity_Verification
  endpoint:
    path: /verification/denmark
    method: POST
    data_selector: data
    params: {}
- name: India_Identity_Verification
  endpoint:
    path: /verification/india
    method: POST
    data_selector: data
    params: {}
- name: identity_verification
  endpoint:
    path: /api/v1/verify
    method: POST
    data_selector: attributes
    params: {}
- name: identity_verification_france
  endpoint:
    path: /identity_verification/france
    method: POST
    data_selector: data
    params: {}
- name: identity_verification_indonesia
  endpoint:
    path: /identity_verification/indonesia
    method: POST
    data_selector: data
    params: {}
- name: identity_verification_kenya
  endpoint:
    path: /identity_verification/kenya
    method: POST
    data_selector: data
    params: {}
- name: identity_verification_netherlands
  endpoint:
    path: /identity_verification/netherlands
    method: POST
    data_selector: data
    params: {}
- name: identity_verification_nigeria
  endpoint:
    path: /identity_verification/nigeria
    method: POST
    data_selector: data
    params: {}
- name: identity_verification_south_africa
  endpoint:
    path: /identity_verification/south_africa
    method: POST
    data_selector: data
    params: {}
- name: applicant
  endpoint:
    path: /resources/applicants
    method: POST
    data_selector: ''
    params:
      levelName: doc-free-level
- name: submit_applicant_data
  endpoint:
    path: /resources/applicants/{applicantId}/ekyc/submit
    method: POST
    data_selector: ''
    params: {}
- name: confirm_applicant_data
  endpoint:
    path: /resources/applicants/{applicantId}/ekyc/confirm/{confirmationId}
    method: POST
    data_selector: ''
    params: {}
- name: upload_selfie
  endpoint:
    path: /resources/applicants/{applicantId}/info/idDoc
    method: POST
    data_selector: ''
    params: {}
- name: request_applicant_check
  endpoint:
    path: /resources/applicants/{applicantId}/status/pending
    method: POST
    data_selector: ''
    params: {}
- name: applicant_data
  endpoint:
    path: /resources/checks/latest
    method: GET
    data_selector: data
    params:
      type: E_KYC_CHECK
- name: clarify_rejection_reason
  endpoint:
    path: /reference/clarify-rejection-reason
    method: GET
    data_selector: rejection_reasons
- name: non_doc_identity_verification
  endpoint:
    path: /non-doc-identity-verification
    method: POST
    data_selector: results
    params: {}
- name: non_doc_address_verification
  endpoint:
    path: /non-doc-address-verification
    method: POST
    data_selector: results
    params: {}
- name: customer_identity
  endpoint:
    path: /api/customer_identity
    method: GET
    data_selector: records
    params: {}
- name: customer_address
  endpoint:
    path: /api/customer_address
    method: GET
    data_selector: records
    params: {}
- name: customer_due_diligence
  endpoint:
    path: /guidelines/customer_due_diligence
    method: GET
    data_selector: records
- name: customer_identification
  endpoint:
    path: /customer/identification
    method: GET
    data_selector: customers
    params: {}
- name: customer_identification
  endpoint:
    path: /api/customer_identification
    method: POST
    data_selector: data
    params: {}
- name: identity_verification
  endpoint:
    path: /api/identity_verification
    method: POST
    data_selector: verification_results
    params: {}
- name: KYC Procedures
  endpoint:
    path: /api/kyc/procedures
    method: GET
    data_selector: procedures
- name: country_availability
  endpoint:
    path: /supported-countries-for-non-doc-address-verification
    method: GET
    data_selector: countries
    params: {}
- name: Non-Doc Address Verification
  endpoint:
    path: /non-doc-address-verification
    method: GET
    data_selector: records
    params: {}
- name: Enrichment
  endpoint:
    path: /enrichment
    method: POST
    data_selector: response
    params: {}
- name: 1X1 Matching
  endpoint:
    path: /1x1-matching
    method: POST
    data_selector: response
    params: {}
- name: 2X2 Matching
  endpoint:
    path: /2x2-matching
    method: POST
    data_selector: response
    params: {}
- name: applicant
  endpoint:
    path: /resources/applicants
    method: POST
    data_selector: ''
    params:
      levelName: non-doc-address-2x2
- name: applicant_status
  endpoint:
    path: /resources/applicants/{applicant_id}/status/pending
    method: POST
    data_selector: ''
    params: {}
- name: non_doc_address_verification
  endpoint:
    path: /non-doc/address/verification
    method: GET
    data_selector: results
- name: address_information
  endpoint:
    path: /api/v1/address
    method: GET
    data_selector: address_records
- name: user_address_information
  endpoint:
    path: /api/user_address_information
    method: GET
    data_selector: results
- name: address_information
  endpoint:
    path: /address/information
    method: GET
    data_selector: records
    params: {}
- name: address_verification
  endpoint:
    path: /address-verification
    method: POST
    data_selector: data
    params: {}
- name: address_verification
  endpoint:
    path: /verification/address
    method: POST
    data_selector: results
    params: {}
- name: user_verification
  endpoint:
    path: /api/user-verification
    method: GET
    data_selector: records
- name: proof_of_address
  endpoint:
    path: /configure-verification-levels
    method: POST
    data_selector: verification_steps
    params: {}
- name: user_verification
  endpoint:
    path: /user/verification
    method: GET
    data_selector: data
    params: {}
- name: aml_screening
  endpoint:
    path: /aml/screening
    method: GET
    data_selector: data
    params: {}
- name: aml_screening
  endpoint:
    path: /api/aml/screening
    method: POST
    data_selector: results
    params: {}
- name: video_call_data
  endpoint:
    path: /reference/get-video-call-data
    method: GET
- name: video_call_media
  endpoint:
    path: /reference/get-video-call-media
    method: GET
- name: ID Verification
  endpoint:
    path: /docs/identity-verification
    method: GET
    data_selector: records
- name: Liveness Check
  endpoint:
    path: /docs/liveness
    method: GET
    data_selector: records
- name: Phone and Email Verification
  endpoint:
    path: /docs/email-and-phone-verification
    method: GET
    data_selector: records
- name: Document Signing
  endpoint:
    path: /docs/document-signing
    method: GET
    data_selector: records
- name: get_e_sign_verification_results
  endpoint:
    path: /resources/checks/latest
    method: GET
    params:
      type: E_SIGN
      applicantId: '{applicantId}'
- name: get_signed_documents
  endpoint:
    path: /reference/get-signed-document-qes
    method: GET
- name: applicant
  endpoint:
    path: /resources/applicants
    method: POST
    data_selector: applicant
    params:
      levelName: QES Verification (Seamless ID Capture)
- name: upload_document
  endpoint:
    path: /resources/applicants/{applicantId}/esign/resources/uploadDoc
    method: POST
    data_selector: uploadResult
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Penny Drop Verification
  endpoint:
    path: /resources/checks/latest
    method: GET
    params:
      type: BANK_DETAILS_CHECK
      applicantId: '{applicantId}'
- name: bank_processing_times
  endpoint:
    path: /api/bank_processing_times
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: bank_account_verification
  endpoint:
    path: /bank-account-verification
    method: GET
- name: bank_account_verification
  endpoint:
    path: /api/v1/bank-accounts
    method: POST
    data_selector: data
    params: {}
- name: bank_account_verification
  endpoint:
    path: /resources/checks/latest
    method: GET
    data_selector: checks
    params:
      type: BANK_DETAILS_CHECK
- name: applicants
  endpoint:
    path: /resources/applicants
    method: PATCH
    data_selector: records
- name: accessTokens
  endpoint:
    path: /resources/accessTokens/sdk
    method: POST
    data_selector: records
- name: shareToken
  endpoint:
    path: /reference/generate-share-token
    method: POST
    data_selector: records
- name: generate_share_token
  endpoint:
    path: /resources/accessTokens/shareToken
    method: POST
    data_selector: token
    params:
      applicantId: 63e092c51b7b4030f2e01154
      forClientId: CoolCoinLtd
      ttlInSecs: '600'
- name: reuse_applicant
  endpoint:
    path: /resources/api/reusableIdentity/reuse
    method: POST
    data_selector: id
    params:
      shareToken: _act-jwt-...
      levelName: liveness-id-poa
- name: preview_reuse_applicant
  endpoint:
    path: /resources/api/reusableIdentity/reuse/preview
    method: POST
    data_selector: id
    params:
      shareToken: _act-jwt-...
      levelName: liveness-id-poa
- name: generate_share_token
  endpoint:
    path: /resources/accessTokens/shareToken
    method: POST
    data_selector: token
    params:
      applicantId: 63e092c51b7b4030f2e01154
      forClientId: CoolCoinLtd
      ttlInSecs: '600'
- name: copy_applicant_profile
  endpoint:
    path: /resources/applicants/-/import
    method: POST
    data_selector: id
    params:
      shareToken: _act-0b8a43f6-b70f-4ad3-bda9-7ce904589380
- name: nfc_verification_results
  endpoint:
    path: /reference/get-nfc-verification-results
    method: GET
    data_selector: ''
- name: select
  endpoint:
    path: /reference/get-questionnaire-information#options-element-fields
    method: GET
    data_selector: options
- name: bool
  endpoint:
    path: /reference/get-questionnaire-information#bool-type
    method: GET
    data_selector: bool
- name: countrySelect
  endpoint:
    path: /reference/get-questionnaire-information#countrySelect-type
    method: GET
    data_selector: countrySelect
- name: fileAttachment
  endpoint:
    path: /reference/get-questionnaire-information#fileAttachment-types
    method: GET
    data_selector: fileAttachment
- name: applicant_data
  endpoint:
    path: /reference/get-applicant-data
    method: GET
    data_selector: questionnaires
- name: questionnaire
  endpoint:
    path: /questionnaire
    method: GET
    data_selector: records
- name: questionnaire
  endpoint:
    path: /reference/get-questionnaire-information
    method: GET
    data_selector: questionnaires
    params: {}
- name: questionnaire
  endpoint:
    path: /questionnaires
    method: GET
    data_selector: questionnaires
- name: questionnaire
  endpoint:
    path: /manage/questionnaires
    method: GET
    data_selector: data
- name: questionnaires
  endpoint:
    path: /questionnaires
    method: POST
    data_selector: data
- name: questionnaire
  endpoint:
    path: /import/questionnaire
    method: POST
- name: applicant_questionnaire
  endpoint:
    path: /resources/applicants/{applicantId}/questionnaires
    method: POST
    data_selector: sections
    params: {}
- name: create_applicant_action
  endpoint:
    path: /reference/create-applicant-action
    method: POST
    data_selector: data
    params: {}
- name: add_verification_documents
  endpoint:
    path: /reference/add-verification-documents
    method: POST
    data_selector: data
    params: {}
- name: add_applicant_questionnaire
  endpoint:
    path: /reference/add-applicant-questionnaire
    method: POST
    data_selector: data
    params: {}
- name: get_information_about_document_images
  endpoint:
    path: /reference/get-information-about-document-images
    method: GET
    data_selector: data
    params: {}
- name: add_applicant_action_questionnaire
  endpoint:
    path: /reference/add-applicant-action-questionnaire
    method: POST
    data_selector: data
    params: {}
- name: all_docs_results
  endpoint:
    path: /reference/get-alldocs-results-by-applicantid
    method: GET
    data_selector: results
    params: {}
- name: all_docs_results_by_action
  endpoint:
    path: /reference/get-alldocs-results-by-actionid
    method: GET
    data_selector: results
    params: {}
- name: get_action_information
  endpoint:
    path: /reference/get-action-information#paymentsource-attributes
    method: GET
    data_selector: results
- name: create_applicant_action
  endpoint:
    path: /reference/create-applicant-action
    method: POST
    data_selector: applicantActions
- name: payment_method_check_advanced
  endpoint:
    path: /docs/payment-method-check-advanced
    method: GET
    data_selector: results
    params: {}
- name: create_applicant_action
  endpoint:
    path: /reference/create-applicant-action
    method: POST
    data_selector: results
    params: {}
- name: get_action_information
  endpoint:
    path: /reference/get-action-information
    method: GET
    data_selector: results
    params: {}
- name: applicant_profiles
  endpoint:
    path: /applicant/profiles
    method: POST
    data_selector: profiles
    params: {}
- name: applicant_profile
  endpoint:
    path: /create/applicant/profile
    method: POST
- name: applicants
  endpoint:
    path: /v1/applicants
    method: GET
    data_selector: data
    params: {}
- name: applicants
  endpoint:
    path: /v1/applicants
    method: GET
    data_selector: applicants
- name: request_check
  endpoint:
    path: /reference/request-applicant-check
    method: POST
- name: applicant_profile
  endpoint:
    path: /reset/applicant/profile
    method: POST
- name: reset_applicant
  endpoint:
    path: /reference/reset-applicant
    method: POST
    data_selector: response
    params: {}
- name: applicant
  endpoint:
    path: /applicants
    method: GET
    data_selector: records
- name: applicant_profile
  endpoint:
    path: /applicant/profile/inactive
    method: POST
- name: make_applicant_documents_inactive
  endpoint:
    path: /make_applicant_documents_inactive
    method: POST
- name: blocklist_applicants
  endpoint:
    path: /blocklist/applicants
    method: POST
- name: add_additional_documents
  endpoint:
    path: /add/additional/documents
    method: POST
- name: applicant_tags
  endpoint:
    path: /applicant_tags
    method: POST
    data_selector: tags
- name: create_applicants
  endpoint:
    path: /reference/create-applicants
    method: POST
- name: IP check results
  endpoint:
    path: /resources/checks/latest
    method: GET
    data_selector: checks
    params:
      type: IP_CHECK
- name: fraud_networks
  endpoint:
    path: /reference/get-fraud-networks
    method: GET
    data_selector: networks
- name: applicant_fraud_networks
  endpoint:
    path: /reference/get-applicant-fraud-networks
    method: GET
    data_selector: applicantNetworks
- name: fraud_network_by_id
  endpoint:
    path: /reference/get-fraud-network-by-id
    method: GET
    data_selector: network
- name: anomaly_detection
  endpoint:
    path: /anomaly-detection
    method: GET
    data_selector: results
- name: Account Takeover Checks
  endpoint:
    path: /docs/advanced-ip-check
    method: GET
    data_selector: checks
    params: {}
- name: Rules Library
  endpoint:
    path: /kyt/rulesManager/rulesLibrary
    method: GET
    data_selector: rules
    params: {}
- name: Installed Rules
  endpoint:
    path: /kyt/rulesManager/rulesList
    method: GET
    data_selector: installed_rules
    params: {}
- name: submit_transaction
  endpoint:
    path: /resources/applicants/{applicant_id}/kyt/txns/-/data
    method: POST
    data_selector: data
- name: webhook_statuses
  endpoint:
    path: /transaction-monitoring-webhooks
    method: GET
    data_selector: statuses
- name: dynamic_risk_scoring
  endpoint:
    path: /docs/dynamic-risk-scoring
    method: GET
    data_selector: results
    params: {}
- name: verification_level
  endpoint:
    path: /docs/get-started-with-verification-level
    method: GET
- name: custom_rules
  endpoint:
    path: /docs/create-custom-rules
    method: GET
- name: user_verification
  endpoint:
    path: /user/verification
    method: POST
    data_selector: data
    params: {}
- name: rules
  endpoint:
    path: /docs/tm-rules
    method: GET
    data_selector: records
- name: bulk_import
  endpoint:
    path: /reference/bulk-transaction-import
    method: POST
    data_selector: data
- name: aggregate
  endpoint:
    path: /docs/aggregate
    method: GET
    data_selector: aggregate_info
    params: {}
- name: rules
  endpoint:
    path: /docs/create-custom-rules
    method: GET
    data_selector: rules_info
    params: {}
- name: transaction_monitoring
  endpoint:
    path: /kyt/rulesManager/rulesList
    method: GET
    data_selector: rules
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: kyc_transactions
  endpoint:
    path: /kyc_transactions
    method: POST
    data_selector: kycTransaction
    params: {}
- name: mirrored_transactions
  endpoint:
    path: /mirrored_transactions
    method: POST
    data_selector: mirroredTransaction
    params: {}
- name: transactions
  endpoint:
    path: /docs/tm-transactions
    method: GET
    data_selector: transactions
- name: KYC transactions
  endpoint:
    path: /kyc/transactions
    method: POST
    data_selector: transaction
    params: {}
- name: transactions
  endpoint:
    path: /reference/approve-and-reject-transaction
    method: GET
    data_selector: transactions
    params: {}
- name: transaction_tags
  endpoint:
    path: /reference/add-txn-tags
    method: POST
    data_selector: tags
    params: {}
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: rules
    params: {}
- name: General Settings
  endpoint:
    path: /transactions-and-travel-rule-settings/general
    method: GET
    data_selector: settings
    params: {}
- name: Tags Settings
  endpoint:
    path: /transactions-and-travel-rule-settings/tags
    method: GET
    data_selector: tags
    params: {}
- name: AML Screening Settings
  endpoint:
    path: /transactions-and-travel-rule-settings/amlScreening
    method: GET
    data_selector: amlScreening
    params: {}
- name: inbound_data_exchange_transaction
  endpoint:
    path: /reference/submit-transaction-for-existing-applicant
    method: POST
- name: confirm_wallet_ownership
  endpoint:
    path: /reference/confirm-wallet-ownership
    method: POST
- name: confirm_or_reject_transaction_ownership
  endpoint:
    path: /reference/confirm-or-reject-transaction-ownership
    method: POST
- name: find_specific_travel_rule_transactions
  endpoint:
    path: /reference/how-to-find-specific-travel-rule-transactions-via-api
    method: GET
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: records
    params: {}
- name: travel_rule_data_exchange
  endpoint:
    path: /api/travel-rule/data-exchange
    method: POST
    data_selector: result
    params: {}
- name: Argentina
  endpoint:
    path: /travel-rule/argentina
    method: GET
    data_selector: details
- name: Australia
  endpoint:
    path: /travel-rule/australia
    method: GET
    data_selector: details
- name: Austria
  endpoint:
    path: /travel-rule/austria
    method: GET
    data_selector: details
- name: Bahamas
  endpoint:
    path: /travel-rule/bahamas
    method: GET
    data_selector: details
- name: user_verification
  endpoint:
    path: /user/verification
    method: GET
    data_selector: records
- name: natural_person_data
  endpoint:
    path: /data/natural_person
    method: GET
    data_selector: data
    params: {}
- name: legal_entity_data
  endpoint:
    path: /data/legal_entity
    method: GET
    data_selector: data
    params: {}
- name: general_information
  endpoint:
    path: /api/general_info
    method: GET
    data_selector: data
    params: {}
- name: obligations_originating_casp
  endpoint:
    path: /api/obligations/originating_casp
    method: GET
    data_selector: data
    params: {}
- name: obligations_beneficiary_casp
  endpoint:
    path: /api/obligations/beneficiary_casp
    method: GET
    data_selector: data
    params: {}
- name: obligations_intermediary_casp
  endpoint:
    path: /api/obligations/intermediary_casp
    method: GET
    data_selector: data
    params: {}
- name: originator_data
  endpoint:
    path: /originator/data
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_data
  endpoint:
    path: /beneficiary/data
    method: GET
    data_selector: data
    params: {}
- name: originating_vasp_obligations
  endpoint:
    path: /vasp/originating/obligations
    method: GET
    data_selector: obligations
    params: {}
- name: beneficiary_vasp_obligations
  endpoint:
    path: /vasp/beneficiary/obligations
    method: GET
    data_selector: obligations
    params: {}
- name: intermediary_vasp_obligations
  endpoint:
    path: /vasp/intermediary/obligations
    method: GET
    data_selector: obligations
    params: {}
- name: originator_info
  endpoint:
    path: /originator/info
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_info
  endpoint:
    path: /beneficiary/info
    method: GET
    data_selector: data
    params: {}
- name: originator_information
  endpoint:
    path: /originator_information
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_information
  endpoint:
    path: /beneficiary_information
    method: GET
    data_selector: data
    params: {}
- name: obligations_originating_vasp
  endpoint:
    path: /obligations/originating
    method: GET
    data_selector: data
    params: {}
- name: obligations_beneficiary_vasp
  endpoint:
    path: /obligations/beneficiary
    method: GET
    data_selector: data
    params: {}
- name: obligations_intermediary_vasp
  endpoint:
    path: /obligations/intermediary
    method: GET
    data_selector: data
    params: {}
- name: user_verification
  endpoint:
    path: /user/verification
    method: GET
    data_selector: records
- name: essential_check
  endpoint:
    path: /api/v1/essential_check
    method: GET
    data_selector: results
- name: extended_essential_check
  endpoint:
    path: /api/v1/extended_essential_check
    method: GET
    data_selector: results
- name: vasp_score
  endpoint:
    path: /vasp/score
    method: GET
    data_selector: data
    params: {}
- name: user_verification
  endpoint:
    path: /user-verification
    method: POST
    data_selector: data
    params: {}
- name: aml_screening
  endpoint:
    path: /aml-screening
    method: POST
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: records
    params: {}
- name: rules
  endpoint:
    path: /api/rules
    method: GET
    data_selector: records
    params: {}
- name: inbound_travel_rule_transaction
  endpoint:
    path: /api/inbound-travel-rule-transaction
    method: POST
    data_selector: transaction
    params: {}
- name: submit_transaction_for_existing_applicant
  endpoint:
    path: /resources/applicants/{applicantId}/kyt/txns/-/data
    method: POST
    data_selector: data
- name: bulk_transaction_import
  endpoint:
    path: /resources/kyt/misc/txns/import
    method: POST
    data_selector: data
- name: update_blockchain_transaction_details
  endpoint:
    path: /resources/kyt/txns/{transactionId}/data/info
    method: PATCH
    data_selector: data
- name: travel_rule_transaction
  endpoint:
    path: /api/v1/travel-rule/transaction
    method: POST
    data_selector: data
    params: {}
- name: applicantKytTxnApproved
  endpoint:
    path: /webhooks/applicantKytTxnApproved
    method: POST
    data_selector: applicantId
- name: applicantKytTxnRejected
  endpoint:
    path: /webhooks/applicantKytTxnRejected
    method: POST
    data_selector: applicantId
- name: data_exchange_transaction
  endpoint:
    path: /resources/kyt/txns/id/one
    method: GET
    data_selector: transactionDetails
- name: confirm_wallet_ownership
  endpoint:
    path: /resources/kyt/txns/{transaction_id}/ownership/confirmed
    method: POST
- name: enrich_data_exchange_transaction
  endpoint:
    path: /resources/kyt/txns/{transaction_id}/travelRuleOwnership
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: POST
- name: submit_travel_rule_transaction
  endpoint:
    path: /resources/tr/sdk/init
    method: POST
    data_selector: txnInfo
    params: {}
- name: travel_rule
  endpoint:
    path: /travel-rule
    method: POST
    data_selector: data
    params: {}
- name: completed_to_finished
  endpoint:
    path: /reference/enriching-transaction-with-travel-rule
    method: GET
    data_selector: completed -> finished
    params: {}
- name: completed_to_canceled
  endpoint:
    path: /reference/enriching-transaction-with-travel-rule
    method: GET
    data_selector: completed -> canceled
    params: {}
- name: inbound_data_exchange_transaction
  endpoint:
    path: /docs/test-vasp-data-exchange
    method: GET
    data_selector: inbound data exchange transaction
    params: {}
- name: completed
  endpoint:
    path: /test/vasp/completed
    method: GET
    data_selector: records
- name: awaitingCounterparty
  endpoint:
    path: /test/vasp/awaitingCounterparty
    method: GET
    data_selector: records
- name: counterpartyUnconfirmedOwnership
  endpoint:
    path: /test/vasp/counterpartyUnconfirmedOwnership
    method: GET
    data_selector: records
- name: counterpartyVaspNotReachable
  endpoint:
    path: /test/vasp/counterpartyVaspNotReachable
    method: GET
    data_selector: records
- name: counterpartyVaspNotFound
  endpoint:
    path: /test/vasp/counterpartyVaspNotFound
    method: GET
    data_selector: records
- name: awaitingCounterpartyExpired
  endpoint:
    path: /test/vasp/awaitingCounterpartyExpired
    method: GET
    data_selector: records
- name: unhosted_wallet_verification
  endpoint:
    path: /api/unhosted_wallet_verification
    method: POST
    data_selector: verification_results
    params: {}
- name: transaction
  endpoint:
    path: /resources/applicants/-/kyt/txns/-/data
    method: POST
    data_selector: data
    params: {}
- name: bulk_transaction_import
  endpoint:
    path: /resources/kyt/misc/txns/import
    method: POST
    data_selector: data
    params: {}
- name: import_wallet_addresses
  endpoint:
    path: /resources/kyt/walletAddress/import
    method: POST
    data_selector: ''
    params: {}
- name: rules
  endpoint:
    path: /rules
    method: POST
    data_selector: rules
    params: {}
- name: rules_library
  endpoint:
    path: /checkus/kyt/rulesManager/rulesLibrary
    method: GET
    data_selector: rules
    params: {}
- name: install_rules
  endpoint:
    path: /manage-rules/install
    method: POST
    data_selector: installation_status
    params: {}
- name: submit_transaction_existing_applicant
  endpoint:
    path: /resources/applicants/67e41ba6b97b2046cd4c1c1f/kyt/txns/-/data
    method: POST
    data_selector: data
    params: {}
- name: submit_transaction_non_existing_applicant
  endpoint:
    path: /resources/applicants/-/kyt/txns/-/data
    method: POST
    data_selector: data
    params: {}
- name: webhook_applicantKytTxnApproved
  endpoint:
    path: /webhook/applicantKytTxnApproved
    method: POST
    data_selector: data
    params: {}
- name: webhook_applicantKytTxnRejected
  endpoint:
    path: /webhook/applicantKytTxnRejected
    method: POST
    data_selector: data
    params: {}
- name: webhook_applicantKytTxnReviewed
  endpoint:
    path: /webhook/applicantKytTxnReviewed
    method: POST
    data_selector: data
    params: {}
- name: webhook_applicantKytOnHold
  endpoint:
    path: /webhook/applicantKytOnHold
    method: POST
    data_selector: data
    params: {}
- name: webhook_applicantKytTxnAwaitingUser
  endpoint:
    path: /webhook/applicantKytTxnAwaitingUser
    method: POST
    data_selector: data
    params: {}
- name: company_verification
  endpoint:
    path: /verify-businesses
    method: POST
    data_selector: verification_results
    params: {}
- name: applicant_profile
  endpoint:
    path: /applicants
    method: POST
    data_selector: profiles
    params: {}
- name: verification_links
  endpoint:
    path: /verification-links
    method: POST
    data_selector: links
    params: {}
- name: business_verification
  endpoint:
    path: /business-verification
    method: POST
    data_selector: verificationData
    params: {}
- name: business_verification_levels
  endpoint:
    path: /business-verification/levels
    method: GET
    data_selector: levels
- name: business_verification
  endpoint:
    path: /verify-businesses
    method: POST
    data_selector: results
    params: {}
- name: user_verification
  endpoint:
    path: /api/user_verification
    method: POST
    data_selector: data
    params: {}
- name: fraud_prevention
  endpoint:
    path: /api/fraud_prevention
    method: GET
    data_selector: data
    params: {}
- name: business_verification
  endpoint:
    path: /verify-businesses
    method: POST
    data_selector: results
    params: {}
- name: business_verification
  endpoint:
    path: /business-verification
    method: POST
    data_selector: data
    params: {}
- name: business_verification
  endpoint:
    path: /business-verification
    method: GET
- name: business_registry
  endpoint:
    path: /business/registry
    method: GET
- name: business_registration
  endpoint:
    path: /business/registration
    method: GET
    data_selector: registrations
    params: {}
- name: countries_verification_sources
  endpoint:
    path: /countries/verification-sources
    method: GET
    data_selector: countries
    params: {}
- name: country_verification_sources
  endpoint:
    path: /country/verification_sources
    method: GET
    data_selector: records
- name: country_verification_sources
  endpoint:
    path: /verification/sources
    method: GET
    data_selector: sources
    params: {}
- name: user_verification
  endpoint:
    path: /user-verification
    method: POST
    data_selector: data
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: records
- name: cases
  endpoint:
    path: /cases
    method: GET
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
    params: {}
- name: AML cases
  endpoint:
    path: /caseManagement/amlCases
    method: GET
    data_selector: cases
    params: {}
- name: applicantReviewed
  endpoint:
    path: /applicantReviewed
    method: POST
    data_selector: applicantReviewed
    params: {}
- name: applicantOnHold
  endpoint:
    path: /applicantOnHold
    method: POST
    data_selector: applicantOnHold
    params: {}
- name: applicantActionPending
  endpoint:
    path: /applicantActionPending
    method: POST
    data_selector: applicantActionPending
    params: {}
- name: applicantActionReviewed
  endpoint:
    path: /applicantActionReviewed
    method: POST
    data_selector: applicantActionReviewed
    params: {}
- name: applicantActionOnHold
  endpoint:
    path: /applicantActionOnHold
    method: POST
    data_selector: applicantActionOnHold
    params: {}
- name: applicantPersonalInfoChanged
  endpoint:
    path: /applicantPersonalInfoChanged
    method: POST
    data_selector: applicantPersonalInfoChanged
    params: {}
- name: applicantTagsChanged
  endpoint:
    path: /applicantTagsChanged
    method: POST
    data_selector: applicants
    params: {}
- name: applicantActivated
  endpoint:
    path: /applicantActivated
    method: POST
    data_selector: applicants
    params: {}
- name: applicantDeactivated
  endpoint:
    path: /applicantDeactivated
    method: POST
    data_selector: applicants
    params: {}
- name: applicantDeleted
  endpoint:
    path: /applicantDeleted
    method: POST
    data_selector: applicants
    params: {}
- name: applicantReset
  endpoint:
    path: /applicantReset
    method: POST
    data_selector: applicants
    params: {}
- name: applicantPrechecked
  endpoint:
    path: /applicantPrechecked
    method: POST
    data_selector: applicants
    params: {}
- name: applicantLevelChanged
  endpoint:
    path: /applicantLevelChanged
    method: POST
    data_selector: applicants
    params: {}
- name: applicantWorkflowCompleted
  endpoint:
    path: /applicant/workflow/completed
    method: POST
    data_selector: data
    params: {}
- name: applicantWorkflowFailed
  endpoint:
    path: /applicant/workflow/failed
    method: POST
    data_selector: data
    params: {}
- name: videoIdentStatusChanged
  endpoint:
    path: /videoIdent/status/changed
    method: POST
    data_selector: data
    params: {}
- name: videoIdentCompositionCompleted
  endpoint:
    path: /videoIdent/composition/completed
    method: POST
    data_selector: data
    params: {}
- name: applicantAwaitingService
  endpoint:
    path: /applicant/awaiting/service
    method: POST
    data_selector: data
    params: {}
- name: applicantAwaitingUser
  endpoint:
    path: /applicant/awaiting/user
    method: POST
    data_selector: data
    params: {}
- name: transaction_monitoring
  endpoint:
    path: /transaction/monitoring
    method: POST
    data_selector: data
    params: {}
- name: applicantKytTxnApproved
  endpoint:
    path: /applicantKytTxnApproved
    method: POST
    data_selector: applicantKytTxnApproved
    params: {}
- name: applicantKytTxnRejected
  endpoint:
    path: /applicantKytTxnRejected
    method: POST
    data_selector: applicantKytTxnRejected
    params: {}
- name: applicantKytTxnReviewed
  endpoint:
    path: /applicantKytTxnReviewed
    method: POST
    data_selector: reviewResult
    params: {}
- name: applicantKytTxnDeleted
  endpoint:
    path: /applicantKytTxnDeleted
    method: POST
    data_selector: reviewStatus
    params: {}
- name: applicantKytOnHold
  endpoint:
    path: /applicantKytOnHold
    method: POST
    data_selector: reviewStatus
    params: {}
- name: applicantKytTxnAwaitingUser
  endpoint:
    path: /applicantKytTxnAwaitingUser
    method: POST
    data_selector: reviewStatus
    params: {}
- name: applicantKytTxnDataChanged
  endpoint:
    path: /applicantKytTxnDataChanged
    method: POST
    data_selector: reviewResult
    params: {}
- name: amlCaseRejected
  endpoint:
    path: /aml/case/rejected
    method: POST
    data_selector: correlationId
    params: {}
- name: amlCaseOnHold
  endpoint:
    path: /aml/case/onHold
    method: POST
    data_selector: correlationId
    params: {}
- name: kytCaseCreated
  endpoint:
    path: /webhooks/kytCaseCreated
    method: POST
    data_selector: applicantId
    params: {}
- name: kytCaseReviewed
  endpoint:
    path: /webhooks/kytCaseReviewed
    method: POST
    data_selector: applicantId
    params: {}
- name: kytCaseStatusChanged
  endpoint:
    path: /webhooks/kytCaseStatusChanged
    method: POST
    data_selector: applicantId
    params: {}
- name: amlCaseApproved
  endpoint:
    path: /webhooks/amlCaseApproved
    method: POST
    data_selector: amlCaseId
    params: {}
- name: amlCaseRejected
  endpoint:
    path: /webhooks/amlCaseRejected
    method: POST
    data_selector: amlCaseId
    params: {}
- name: amlCaseOnHold
  endpoint:
    path: /webhooks/amlCaseOnHold
    method: POST
    data_selector: amlCaseId
    params: {}
- name: applicantFraudNetworkCreated
  endpoint:
    path: /api/fraud-network-created
    method: POST
    data_selector: payload
    params: {}
- name: applicantFraudNetworkModified
  endpoint:
    path: /api/fraud-network-modified
    method: POST
    data_selector: payload
    params: {}
- name: webhook_logs
  endpoint:
    path: /checkus/#/devSpace/webhooks/webhookLogs
    method: GET
    data_selector: logs
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: generate_access_token
  endpoint:
    path: /resources/accessTokens/sdk
    method: POST
    data_selector: token
    params: {}
- name: WebSDK
  endpoint:
    path: /launch
    method: POST
    data_selector: response
    params: {}
- name: verification_activity
  endpoint:
    path: /verification/activity
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: records
- name: preferred_documents
  endpoint:
    path: /reference/add-id-documents#supported-document-types
    method: GET
    data_selector: documents
    params: {}
- name: fonts
  endpoint:
    path: /fonts
    method: GET
    data_selector: fonts
    params: {}
- name: colors
  endpoint:
    path: /colors
    method: GET
    data_selector: colors
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: rules
  endpoint:
    path: /rules
    method: GET
    data_selector: records
- name: user_verification
  endpoint:
    path: /user-verification
    method: GET
    data_selector: records
    params: {}
- name: fonts
  endpoint:
    path: /fonts
    method: GET
    data_selector: fonts
    params: {}
- name: colors
  endpoint:
    path: /colors
    method: GET
    data_selector: colors
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: rules
  endpoint:
    path: /api/v1/rules
    method: GET
    data_selector: data
    params: {}
- name: preferred_documents
  endpoint:
    path: /withPreferredDocumentDefinitions
    method: POST
    data_selector: response
    params: {}
- name: disable_ml_kit
  endpoint:
    path: /withDisableMLKit
    method: POST
    data_selector: response
    params: {}
- name: localization
  endpoint:
    path: /withLocale
    method: POST
    data_selector: response
    params: {}
- name: strings
  endpoint:
    path: /withStrings
    method: POST
    data_selector: response
    params: {}
- name: analytics
  endpoint:
    path: /withAnalyticsEnabled
    method: POST
    data_selector: response
    params: {}
- name: events
  endpoint:
    path: /withHandlers
    method: POST
    data_selector: response
    params: {}
- name: cameraContent
  endpoint:
    path: /cameraContent
    method: GET
    data_selector: cameraContent
- name: cardBorderedBackground
  endpoint:
    path: /cardBorderedBackground
    method: GET
    data_selector: cardBorderedBackground
- name: cardPlainBackground
  endpoint:
    path: /cardPlainBackground
    method: GET
    data_selector: cardPlainBackground
- name: contentCritical
  endpoint:
    path: /contentCritical
    method: GET
    data_selector: contentCritical
- name: contentInfo
  endpoint:
    path: /contentInfo
    method: GET
    data_selector: contentInfo
- name: contentLink
  endpoint:
    path: /contentLink
    method: GET
    data_selector: contentLink
- name: contentNeutral
  endpoint:
    path: /contentNeutral
    method: GET
    data_selector: contentNeutral
- name: contentStrong
  endpoint:
    path: /contentStrong
    method: GET
    data_selector: contentStrong
- name: contentSuccess
  endpoint:
    path: /contentSuccess
    method: GET
    data_selector: contentSuccess
- name: contentWarning
  endpoint:
    path: /contentWarning
    method: GET
    data_selector: contentWarning
- name: contentWeak
  endpoint:
    path: /contentWeak
    method: GET
    data_selector: contentWeak
- name: fieldBackground
  endpoint:
    path: /fieldBackground
    method: GET
    data_selector: fieldBackground
- name: fieldBackgroundInvalid
  endpoint:
    path: /fieldBackgroundInvalid
    method: GET
    data_selector: fieldBackgroundInvalid
- name: fieldBorder
  endpoint:
    path: /fieldBorder
    method: GET
    data_selector: fieldBorder
- name: fieldContent
  endpoint:
    path: /fieldContent
    method: GET
    data_selector: fieldContent
- name: fieldPlaceholder
  endpoint:
    path: /fieldPlaceholder
    method: GET
    data_selector: fieldPlaceholder
- name: fieldTint
  endpoint:
    path: /fieldTint
    method: GET
    data_selector: fieldTint
- name: listSelectedItemBackground
  endpoint:
    path: /listSelectedItemBackground
    method: GET
    data_selector: listSelectedItemBackground
- name: listSeparator
  endpoint:
    path: /listSeparator
    method: GET
    data_selector: listSeparator
- name: primaryButtonBackground
  endpoint:
    path: /primaryButtonBackground
    method: GET
    data_selector: primaryButtonBackground
- name: primaryButtonBackgroundDisabled
  endpoint:
    path: /primaryButtonBackgroundDisabled
    method: GET
    data_selector: primaryButtonBackgroundDisabled
- name: primaryButtonBackgroundHighlighted
  endpoint:
    path: /primaryButtonBackgroundHighlighted
    method: GET
    data_selector: primaryButtonBackgroundHighlighted
- name: primaryButtonContent
  endpoint:
    path: /primaryButtonContent
    method: GET
    data_selector: primaryButtonContent
- name: primaryButtonContentDisabled
  endpoint:
    path: /primaryButtonContentDisabled
    method: GET
    data_selector: primaryButtonContentDisabled
- name: primaryButtonContentHighlighted
  endpoint:
    path: /primaryButtonContentHighlighted
    method: GET
    data_selector: primaryButtonContentHighlighted
- name: secondaryButtonBackground
  endpoint:
    path: /secondaryButtonBackground
    method: GET
    data_selector: secondaryButtonBackground
- name: secondaryButtonBackgroundDisabled
  endpoint:
    path: /secondaryButtonBackgroundDisabled
    method: GET
    data_selector: secondaryButtonBackgroundDisabled
- name: secondaryButtonBackgroundHighlighted
  endpoint:
    path: /secondaryButtonBackgroundHighlighted
    method: GET
    data_selector: secondaryButtonBackgroundHighlighted
- name: secondaryButtonContent
  endpoint:
    path: /secondaryButtonContent
    method: GET
    data_selector: secondaryButtonContent
- name: secondaryButtonContentDisabled
  endpoint:
    path: /secondaryButtonContentDisabled
    method: GET
    data_selector: secondaryButtonContentDisabled
- name: secondaryButtonContentHighlighted
  endpoint:
    path: /secondaryButtonContentHighlighted
    method: GET
    data_selector: secondaryButtonContentHighlighted
- name: statusBarColor
  endpoint:
    path: /statusBarColor
    method: GET
    data_selector: statusBarColor
- name: iconClose
  endpoint:
    path: /iconClose
    method: GET
    data_selector: iconClose
- name: pictureAgreement
  endpoint:
    path: /pictureAgreement
    method: GET
    data_selector: pictureAgreement
- name: pictureDocumentFlip
  endpoint:
    path: /pictureDocumentFlip
    method: GET
    data_selector: pictureDocumentFlip
- name: rejectLabels
  endpoint:
    path: /applicant/info/companyInfo/beneficiaries
    method: GET
    data_selector: rejectLabels
- name: applicant_type
  endpoint:
    path: /applicant/type
    method: GET
    data_selector: types
- name: validity_period
  endpoint:
    path: /validityPeriod
    method: GET
    data_selector: period
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: addressData
- name: nfc
  endpoint:
    path: /nfc
    method: GET
    data_selector: nfcData
- name: device_stats
  endpoint:
    path: /deviceStats
    method: GET
    data_selector: deviceStatsData
- name: checks
  endpoint:
    path: /checks
    method: GET
    data_selector: checkData
- name: verification_flow
  endpoint:
    path: /create/verification/flow
    method: POST
    data_selector: results
    params: {}
- name: verification_flow
  endpoint:
    path: /api/verification_flow
    method: POST
    data_selector: verification_results
    params: {}
- name: verification_flow
  endpoint:
    path: /docs/handle-applicants-based-on-their-ip-address
    method: POST
    data_selector: results
    params: {}
notes:
- Protect your company from online payment fraud losses.
- Detect suspicious transactions with advanced anti-fraud and AML Transaction Monitoring.
- Requires setup of connected app in Sumsub
- Automation reduces operational costs and improves detection accuracy for various
  types of financial crimes.
- Blueprints allow high-risk cases to receive immediate attention.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 'If you use JS in your backend deployment, make sure to always pass the Content-Type:
  application/json header unless otherwise specified.'
- Sumsub can be integrated with your website or application.
- Users showing clear fraud attempts are not given a second chance.
- We can increase these limits upon individual requests.
- Integrate with SDK or API for verification processes.
- Uses SSO for authentication
- Supports SAML version 2.0
- Use single sign-on (SSO) with Okta for user authentication
- Configure multi-factor authentication (MFA) for additional security
- Some objects may return nulls in deeply nested fields
- The Sumsub's Transaction Monitoring solution also offers the ability to set triggers
  and define further actions while checking transactions.
- The Payment methods step is not supported at the moment.
- Face authentication action type will soon be fully deprecated in level configurations
  within the SDK.
- SDK customization in the Dashboard.
- Each Sumsub customer can have up to 300 source keys.
- Uses Sandbox mode to test your integration before going live.
- Documents must be not older than 3 months.
- Some documents are country-specific.
- Old documents (older than 3 months) are not accepted.
- Documents must not be older than 3 months.
- 'Sumsub currently supports three data verification methods: Enrichment, 1x1/2x2
  Matching, and Validity Check.'
- The list of available countries for Database Validation is constantly updated and
  expanded.
- Ensure data authenticity with Database Validation solution.
- The required fields and country code must be provided in the `fixedInfo` object
- Ensure reliability of user data by leveraging a global database
- Minimize gaps in information
- According to German AML regulation, the identification was carried out on the basis
  of an eID.
- This solution is commonly known as the AusweisApp2, however, with Sumsub's SDK integration,
  no external app downloads are required.
- We recommend leaving the file upload option available for highest conversion rates.
- You can add up to four steps of the Identity document type per level where each
  step is having its own unique document(s).
- Configure ongoing document monitoring to ensure your applicants submit active documents.
- The list of countries where Non-Document Identity Verification is available is constantly
  updated and expanded.
- Requires user to log in to their bank account
- Utilizes secure data transfer for identity verification
- Non-Document Identity Verification is eIDAS-compliant for France.
- The verification process varies by country and must adhere to local regulations.
- Non-Doc Identity Verification comes at an additional cost regardless of the integration
  method.
- Ensure to check for missing data after Non-Doc Identity Verification.
- Uses OAuth2 with refresh token — requires setup of connected app in Sumsub
- Physical documents remain a preferable option for identity verification.
- Electronic identification schemes must comply with eIDAS regulation.
- Non-Doc KYC is permitted as a standalone method for onboarding when a copy of the
  document can be obtained.
- The HKMA recognises iAM Smart as a digital identification system that can be used
  for identity verification of natural persons.
- The SFC Guideline provides a similar requirement for identity verification.
- Identification means establishing the customer's identity on the basis of information
  provided by the customer.
- Verification of identity means ascertaining the customer's identity on the basis
  of documents, data or information obtained from a reliable and independent source.
- Supervised entities should create procedures for authenticating documents and information
  used for identity verification.
- Verification of identity may be fulfilled through electronic means under certain
  conditions.
- Higher-risk customers might require more robust verification.
- Electronic verification of address is permitted as a standalone method as long as
  it uses a reliable and independent source.
- Non-documentary identity verification is permissible for SAMA-regulated financial
  institutions via reliable and independent government-maintained electronic sources.
- The only example explicitly named is the National Information Center.
- Non-documentary identity verification is permissible when using reliable and independent
  electronic services.
- Verification of residential address can be done through geolocation or public registers.
- 'E-verification and e-authentication appear not only permissible, but mandatory
  in at least two scenarios: (i) the customer opens a payment account using their
  Electronic Identity or Electronic Identity Card; and (ii) the customer conducts
  certain types of transactions as listed in the 2023 Decision on Implementing Safety
  and Security in Online Payment and Bank Card Payment.'
- The underlying national databases leveraged to perform e-verification and e-authentication
  are only accessible by using the data extracted from an eID with an embedded NFC
  chip.
- Some objects like Contact may return nulls in deeply nested fields
- List of countries is constantly updated and expanded.
- 'Sumsub currently supports two data verification methods: Enrichment and 1x1/2x2
  Matching.'
- Non-Doc Address Verification comes at an additional cost regardless of the integration
  method.
- When applicants skip or fail Non-Doc Address Verification, they can be moved to
  another flow for passing verification using documents.
- Ensure to handle verification results properly
- Verification of address may be done via external databases or physical documents.
- 'In Brazil, both the Score 2A and the Score 3 are applied: Score 2 — for Betting
  Operators and Central Bank-regulated Entities. Score 3 — for CVM-regulated entities.'
- 'In Saudi Arabia, both the score 2 and the Score 3 are applied: Score 2 — for SAMA-regulated
  Financial Institutions. Score 3 — for CMA-regulated Entities and Certain DNFPBs.'
- 'In Kyrgyzstan, both the score 1 and the Score 3 are applied: Score 1 — for temporary
  address. Score 3 — for permanent address.'
- 'In Kazakhstan, both the score 1 and the Score 3 are applied: Score 1 — for banks,
  insurance companies, professional participants in the securities market. Score 3
  — for VASPs.'
- Address collection and verification requirements vary by jurisdiction.
- Identity data to be collected includes address.
- Verification of address is expected.
- Document-free methods for verification are permissible.
- Regulated entities have the discretion to choose methods for address verification
  as no specific requirements are mandated.
- Verification of the permanent (registration) address shall be done on the basis
  of a document, while verification of temporary (residence) address is not required
  at all.
- Use Non-Doc Address Verification as an alternative verification option.
- If applicants are not comfortable sharing their GPS data, they are switched to the
  traditional proof of address verification procedure.
- If applicants use a device that does not support geolocation, they are offered to
  continue on a device that supports it.
- PoA through Geolocation is not affected by P.O. Box restriction settings specified
  in the preset configuration.
- The Geo as PoA step is available only in the WebSDK 2.0.
- If you approve rejected applicants manually, you will need to initiate a new AML
  check using this API method.
- Ongoing AML monitoring is available at an additional cost and will work only for
  the applicants that will be approved after the purchase of the service.
- Changes in regulation settings affect the ongoing AML monitoring search.
- Uses OAuth2 for authentication
- BYOK services may include integration costs. Check your Service Agreement to learn
  more.
- The results of the AML check are located In the Watchlists section of the applicant
  profile.
- You can generate a screening report and save it as PDF.
- TAN verification is required for Germany-based companies.
- The solution can be tested using mock personal data on our Sandbox environment,
  while the Production environment allows test using real end-user information.
- QES Verification is compliant with AML/CTF regulations across all European Union
  countries under the eIDAS framework.
- Countries such as Switzerland, United Kingdom, Turkey, Ukraine, and Georgia have
  separate approval processes for Qualified Trust Service Providers.
- QES verification is supported only in the WebSDK 2.0 and MobileSDK starting from
  version 1.33.0 or higher.
- You can upload only one document per API request.
- The current nominal payment amount is set to 0.10 EUR, however, this may be increased
  in the future.
- Penny Drop Verification only supports transactions made in the Euro (€) currency.
- Some financial institutions may charge additional fees, depending on their internal
  policy.
- Solution compliance assessment
- Sumsub’s Bank Account Verification solution is built on the EU/EEA open banking
  infrastructure.
- Open Banking infrastructure under the Directive (EU) 2015/2366 enables access to
  financial customer data.
- Reusable KYC via SDK only works on WebSDK 2.0.
- Share tokens are invalidated once used.
- Sumsub ID only works on the MobileSDK version 1.35 and higher or on WebSDK 2.0.
- Liveness check must be enabled at the level.
- Level must not include Live capture without manual mode.
- Welcome screen must be displayed at the level.
- Requires client key (client ID) enabled for integration.
- NFC-based verification is available only on MobileSDK.
- Ensure to manage applicant profiles correctly.
- Scoring is available only within the Multiple choice, Checkboxes, Country, and Dropdown
  question types.
- Manage applicants based on Questionnaire risk score
- Import questionnaire data via API
- If there is any data in an applicant’s profile that you want to use to prefill the
  questionnaire, you can retrieve it using the Get applicant data method.
- Payment Method Check Advanced works only in the WebSDK 2.0.
- Sumsub is approved by the German Commission for the Protection of Minors in the
  Media (KJM) as an age verification solution in line with German regulatory standards.
- Create, review, and manage applicant profiles the way you need.
- Ensure to handle rate limits as per API guidelines.
- The Request check button is not available for profiles that are in Pending, Queued,
  Prechecked, or Rejected statuses.
- It is not recommended to reset an applicant with final rejection. Such cases may
  involve restricted countries or potentially fraudulent applicants.
- You cannot reset profiles with Pending, Processing, or Prechecked statuses.
- Marking an applicant as inactive does not constitute a final onboarding or rejection
  decision.
- The system does not allow to deactivate documents of the applicants currently being
  checked with the pending, queued, or prechecked status.
- Ensure to follow the API documentation for proper integration.
- Applicant tags are custom labels that you can create and then add to applicant profiles
  for better filtering and classification.
- Rejected labels include various reasons for rejection such as ADVERSE_MEDIA, AGE_REQUIREMENT_MISMATCH,
  BLOCKLIST, etc.
- Applicants can correct any outstanding issues in accordance with the system instructions
  and attempt verification again.
- Device Intelligence is integrated across key touchpoints in both KYC and Transaction
  Monitoring processes.
- Email and phone risk assessment is available at an additional cost.
- The Advanced IP check is available at an additional cost.
- Uses AI/ML to detect abnormal events for transaction monitoring and fraud prevention.
- To enable account takeover prevention, install specified rules from the Rules Library.
- You can switch between Sandbox and Production mode directly from the Dashboard using
  the toggle.
- To receive webhooks to your backend, you have to configure it in the Dashboard.
- Transaction tags differ from applicant tags as they are associated with transactions.
- High-risk customers are required to update their information at least once every
  two years.
- Medium-risk customers should update their information once every eight years.
- Low-risk customers should update their information once every ten years, starting
  from the account opening date or the last KYC update.
- You must check the results of the required actions before the transaction status
  is updated.
- The bulk method expects transactions to be passed as a valid NDJSON.
- If you have performed a search for the same counterparty within the period of activity,
  we will reuse the same AML case instead of making a new API call for each new transaction
- If no AML check has been performed for this counterparty or the period of activity
  of the case has passed - we will create a new AML case.
- You can configure this setting in the Dashboard. Open Settings in the Transactions
  and Travel Rule section and select AML Screening.
- The AML screening process requires installing rules with the paid features.
- A bring-your-own-key (BYOK) option is available for integrated services.
- Monitor and prevent fraudulent activities on time.
- Each transaction triggers a set of rules intended to verify its legitimacy.
- Bulk upload available upon request. To extend the default upload limit, reach out
  to your Customer Success Manager or Support team.
- At least one of the rules from the Basic Onboarding bundle must be installed for
  the option to take effect.
- The option of creating KYC transactions during onboarding is mandatory for the applicant
  onboarding score calculation (based on the transaction score).
- The mirrored transactions option only works for financial transactions.
- To use tags for ongoing risk assessment, make sure to select the Score applicant
  checkbox when creating the tag.
- Test mode allows you to test the risk matrix or check how the newly created rule
  or condition would affect your transactions without impacting the transaction status
  or risk score.
- Rules with paid features come at a charge, but you will only be charged if the rule
  is triggered.
- Cooling-off period of 24 hours for first-time investors
- To start using the Sumsub Travel Rule solution, your company needs to register as
  a Virtual Asset Service Provider (VASP) within the Sumsub ecosystem.
- We recommend enabling the entire Travel Rule bundle when integrating the product
  to cover all of the check steps.
- It is highly recommended that you specify the counterparty VASP ID when sending
  data exchange transactions.
- Ensure compliance with Travel Rule requirements before processing transactions.
- VASTs should collect information for transfers exceeding the 1,000 USD/EUR threshold.
- Differences in travel rule requirements. Jurisdictions implement Travel Rule differently
  by establishing different de-minimis transaction value thresholds, the scope of
  information required to be collected/transmitted, and so on.
- Data protection and privacy issues. Most jurisdictions require licensed/registered
  VASPs to meet local DPP regulations when processing personal data following national
  AML/CFT requirements. Some jurisdictions imposed additional data security requirements
  on VASPs in the process of registration/licensing approvals, such as asking to obtain
  an information security certificate.
- Processing cross-border transfers. Due to jurisdictional differences, a VASP needs
  to be able to distinguish between a domestic VA transfer and a cross-border VA transfer
  to determine which rules and regulations to follow.
- Dealing with inaccurate or incomplete information. Where the beneficiary VASP becomes
  aware that the information is missing or incomplete, when receiving VA transfers,
  it shall reject it and ask for the required information on the originator and the
  beneficiary before determining whether to make the virtual assets available to the
  beneficiary.
- No threshold. The Travel Rule applies to all virtual asset transfers irrespective
  of value.
- The required information shall be transmitted immediately and in a secure manner.
- Record retention period is 5 years.
- No threshold. The Travel Rule applies to all crypto-asset transfers irrespective
  of value.
- Record retention is 5 years.
- The Travel Rule applies to all crypto-asset transfers irrespective of value.
- Required information must be transmitted immediately and in a secure manner, and
  no later than the initiation of the blockchain transaction.
- The Travel Rule applies to all virtual asset transfers irrespective of value.
- No threshold for data sharing.
- Threshold applies to all crypto-asset transfers irrespective of value.
- Time and way to share the Information shall be transmitted immediately and in a
  secure manner, and no later than the initiation of the blockchain transaction.
- Batch file transfer may be exempt under certain conditions.
- 'Time and way to share the Information: The required information shall be transmitted
  immediately and in a secure manner.'
- Record retention is required for 5 years.
- Record retention for 5 years.
- Record retention is 10 years.
- The Travel Rule applies only to transmittals of funds with an equivalent value of
  $3,000 or more.
- No threshold for Travel Rule.
- Information must be transmitted immediately and securely.
- The Travel Rule settings are available only if your organization has the Travel
  Rule service enabled.
- API Reference available for detailed endpoint information
- 'Sumsub supports UTXO transactions conducted using only the following cryptocurrency
  networks: Bitcoin (BTC), Bitcoin Cash (BCH), and Litecoin (LTC).'
- Sumsub does not re-verify the information provided by the data partner and cannot
  be held liable for its accuracy.
- Ensure beneficiary VASPs pose no money laundering risk.
- Screening results are available in the Extended Essential Checks report for VASPs.
- To be onboarded and transact on the GTR and CODE protocols, VASP Due Diligence must
  have been completed successfully.
- The VASP score is only a complementary metric to be used with your internal risk-assessment
  mechanisms. It can not be treated as an independent risk score.
- API has rate limiting — monitor usage
- VASP attribution allows you to identify the virtual asset service provider (VASP)
  associated with a wallet address in a Travel Rule transaction when the information
  about the counterparty VASP is not explicitly provided.
- To use CODE within Sumsub, VASPs will have to complete the Sumsub VASP Due Diligence
  requirements.
- The email solution was developed by Sumsub to ensure that all VASPs are covered
  regardless of their location and Travel Rule solutions are in place.
- Uses webhooks for transaction notifications
- To create the inbound Travel Rule data exchange transaction, you need to install
  and enable the required rules.
- The info.direction field of your transaction should contain the in value.
- The blockchain ID should be included in the info.paymentTxnId field.
- The rules you install remain in Test mode until you activate them.
- You can also activate a rule bundle specific to your jurisdiction (EU, UK, Singapore,
  and others).
- The originating VASP is expected to send the transaction to the blockchain after
  data exchange.
- Automation tips for the confirmation process are available in the documentation.
- 'Webhooks available for transaction status updates: applicantKytTxnApproved, applicantKytTxnRejected,
  applicantKytOnHold.'
- Generate an app token to sign your API calls.
- Ensure to follow the API rate limits to avoid throttling.
- To test this VASP data exchange, use the example provided here and this API method.
- You can get the desired status of the data exchange transaction by filling in different
  sets of fields and changing them in accordance with your requirements.
- Countries that follow the Travel Rule requirements may oblige VASPs to verify the
  ownership of self-hosted wallets before transacting with them.
- The wallet verification flow via Sumsub is seamless — all done via a link.
- Data exchange transactions have no attribution.
- Unhosted Wallet Verification is enabled.
- Sumsub works with a number of technological partners.
- Sumsub also offers its own solution built to cater to the Travel Rule requirements.
- You can only access a specific bundle in the Rules Library if you have Crypto Monitoring
  enabled with the provider of interest.
- KYB verification measures are key components of Anti-Money Laundering (AML) and
  Combating the Financing of Terrorism (CFT) regulations.
- Verifying business in-house or having several KYC and KYB services can be a burden.
- Requires setup of connected app in api
- ACDR does not provide document type detection, fraud detection, and ownership structure
  prefill.
- Documents categorized as Custom or Other are not supported by this feature.
- If you enable the option to not link previously verified applicants, make sure to
  allow duplicates on your source keys.
- All languages are supported during KYB checks.
- The migration process to SDK 2.0 includes configuring basic level settings and removing
  outdated steps.
- If no information is found on the company, the profile will be declined with the
  Not found in external database tag.
- Requires setup of connected app in API
- The results will be displayed in the applicant profile.
- The average time of completing the FULL KYB checks does not exceed 24 hours.
- Sumsub requests a bundle of documents that confirm the legal existence and corporate
  details of the company.
- Ensure regulatory compliance during customer onboarding.
- The main business solution offered and provided via Sumsub’s Cases is post-monitoring.
- You can download AML cases as a CSV file.
- Regulatory reporting is currently free of charge for all Sumsub clients.
- 'You can manage your webhook settings in any of the following ways: Edit webhook
  parameters, Remove webhooks, Disable webhooks.'
- You can also search for webhooks by specifying filters such as webhook type, status,
  and receiver.
- We do not send any information to endpoints using HTTP, only HTTPS.
- Supported versions of the TLS protocol are 1.2 or higher.
- Not receiving an answer from a webhook endpoint for more than 5 seconds is considered
  to be a timeout.
- When a webhook HTTP request fails, we attempt to resend it four times until the
  request succeeds.
- If a webhook is automatically disabled after continuous request failures, team members
  with Manage company settings enabled will receive an email notification.
- Each webhook type has specific fields that may be included based on the event.
- Webhook notifications are sent for various applicant events.
- API requires authentication via API key.
- Personal applicant information is not available in the webhook payload.
- Webhook notifications for transaction status changes.
- App tokens do not have an expiration period, so you have unlimited access to the
  Sumsub API within the permissions set for each created app token.
- Each token is unique per mode in which it was created; you cannot use an app token
  in Production mode if this token was created in Sandbox, and vice versa.
- Complete the steps described in the article before using this feature, to properly
  configure redirection links.
- Post-verification redirect URL functionality is supported only in the Web SDK, while
  the Use redirect URL for SDK link generation setting is compatible with both the
  Mobile and Web SDKs.
- As of June 1, 2025, WebSDK 1.0 is no longer supported by Sumsub. We strongly recommend
  that you migrate to WebSDK 2.0.
- Provide a unique and meaningful userId parameter, which can be an external user
  ID in your system or an email address.
- When generating an access token for Local Data Processing, use the regional domain.
- Make sure that accessToken was provided to the SDK initialization function.
- SDK's iframe resizes itself according to its container and SDK screen content.
- Documentation outlines various verification types and methods.
- Integration on the sandbox environment is required before moving to production.
- To send email notifications to your applicants, enable this functionality in the
  verification level settings by selecting the necessary notification types.
- Not setting up an SPF record will result in Sumsub emails being blocked for your
  applicants. Therefore, email sending will be disabled automatically.
- MobileSDK requires setup of verification levels
- Integration can be done for iOS, Android or cross-platform
- Make sure bitcode is disabled for your project.
- Provided parameters will be applied only if the corresponding combination of country
  and idDocType is allowed.
- Ignoring the color adjustment may lead to the occurrence of incompatible and inappropriate
  settings
- Documentation is available for various verification methods and API endpoints.
- Default is *`.natural`*
- Default is the colors.backgroundCritical color.
- Default is the clear color.
- 'Default is #94A0B8 and #FFFFFF with alpha 40% for the dark appearance.'
- 'Default is #333C4D and #FFFFFF with alpha 85% for the dark appearance.'
- 'Default is #1693E9 and #1485D1 for the dark appearance.'
- 'Default is #D1D6E1 and #FFFFFF with alpha 20% for the dark appearance.'
- 'Default is #F6F7F9 and #FFFFFF with alpha 7% for the dark appearance.'
- 'Default is #FFFFFF and #333C4D for the dark appearance.'
- Default is a cross icon.
- Default is a back arrow icon. Setting to nil forces the system back button to be
  used instead.
- Default is a magnifying glass icon.
- Default is a simple disclosing arrow icon.
- Default is a down arrow icon.
- Default is a calendar icon.
- Default is a clip icon.
- Default is a picture icon.
- Default is a trash bin icon.
- Default is a filled flash icon.
- Default is an outlined flash icon.
- Default is a photos stack icon.
- Default is a rounded arrows icon.
- Default is a photo rotation icon.
- Default is a letter icon.
- Default is a play icon in the circle.
- Default is an exclamation mark in the triangle of 24x24 pixels.
- Default is an empty rectangle icon with colors.contentWeak border color.
- Default is a white checkmark icon on a background rectangle with colors.fieldTint
  color.
- Default is an empty circle icon with colors.contentWeak border color.
- Default is a white circle icon on a background circle with colors.fieldTint color.
- Default is a checkmark icon.
- Default is an exclamation mark in the triangle.
- Default is an uploading-to-the-cloud icon.
- Default is a geolocation pin icon.
- Default is a crossed geolocation pin icon.
- Default is a globe decorated.
- Default is an ID document with a rotating arrow below.
- Default is true.
- Default is .default.
- Default is .medium for iOS 13+ and .gray for previous ones.
- Default is .icon.
- Default is .right.
- Default is 16pt.
- Default is 48pt.
- Default is 8pt.
- Default is 1pt.
- Default is 2pt.
- Default is 14pt.
- Default is 0pt.
- Default is 36pt x 4pt.
- Default is filled.
- Default is bordered.
- Default is .center.
- Make sure you have configured your verification level and access token before initializing
  the SDK.
- The SDK can operate using screen light in low-light conditions.
- Updated about 1 month ago
- 'The SDK can be customized: you can change styles, colors, typefaces, and so on.'
- Ensure proper OAuth scopes are set for access
- Theme options are named to express their semantic and used in many different places
  across the Android SDK.
- Integration settings may vary based on use case.
- The `Payment methods` step is not supported at the moment.
- The Face authentication action type will soon be fully deprecated in level configurations
  within the SDK.
- Use Kotlin 1.9.25 and API level 23 (Android 5.0) or higher in your Android project.
- Disable bitcode for your iOS project.
- Before launching, make sure you have configured your verification level and access
  token.
- The SDK collects and sends usage data to Sumsub servers.
- Customize plugin appearance to match your preferences.
- The mobile SDK allows for customization through the use of a specially formatted
  JSON object, known as the 'theme'.
- When generating Access Token, use the regional domain.
- Uses OAuth2 for authentication.
- While setting up an applicant workflow, avoid using the same verification level
  twice.
- Create a verification flow that considers applicants’ age and determines further
  actions.
- Manage applicants via Workflow Builder based on their age
- Combination of two verification methods in one flow allows you to secure your entire
  verification process.
- Some of the cases may require more thorough consideration of the applicant profile.
- Uses Advanced IP check to detect VPN usage.
- Includes steps for managing applicants based on their IP address.
- Make sure that target regions are enabled in your Twilio account.
- SMS messages are only delivered via a digital channel, and not directly from Sumsub.
- Valid contract with Chainalysis is required.
- Chainalysis TM License or Address Screening License is needed.
- In order for integration to succeed, make sure to add an applicantId tag in your
  Comply Advantage dashboard.
- Connect Sumsub to your World-Check One account.
- Valid contract with Elliptic required
- Access to the Elliptic Lens Product or Elliptic Navigator Product required
- Configured risk settings on Elliptic required
- External Crypto Transaction Monitoring is a paid feature and can be enabled via
  your Customer Success Manager at csm@sumsub.com
- 'Always pass the Content-Type: application/json header unless otherwise specified.'
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'CASE_NOT_FOUND: Ensure the case ID is correct.'
- 'INVALID_BLUEPRINT: Check blueprint configuration.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '405 Method not allowed: Make sure that you use a correct HTTP verb.'
- '415 Unsupported media type: Make sure that you use the correct headers provided
  for the expected return type.'
- '401 error code: Make sure that all authorization headers have been provided.'
- 'FINAL: eID card has expired.'
- 'FINAL: eID card has been reported as lost or stolen.'
- 'RETRY: 5-digit transport/activation PIN is incorrect.'
- 'RETRY: 6-digit PIN is incorrect.'
- 'FINAL: eID card has been digitally altered or tampered.'
- 'FINAL: NFC chip belongs to a different eID card.'
- 'FINAL: Device is unable to scan the NFC chip of the eID card.'
- 'INVALID_CREDENTIALS: Check bank account details'
- 'TIMEOUT: Ensure stable internet connection'
- '403 FORBIDDEN: Verify API access permissions'
- 'Invalid applicant data: The provided data is invalid and must be resubmitted.'
- 'BAD_SELFIE: An issue related to Liveness & Face match occurred.'
- 'CHECK_UNAVAILABLE: The government database is currently unavailable.'
- 'NO_MATCH: The data presented does not match with anyone in the system.'
- Handle verification results as per the documentation.
- 'FINAL: dbNetReject_dataNotFound: The data provided was not found.'
- 'FINAL: dbNetReject_dataMismatch: The provided data does not match the data from
  the sources.'
- 'FINAL: dbNetReject_nameMismatch: The provided name does not match the data from
  the sources.'
- 'FINAL: dbNetReject_addressMismatch: The provided address does not match the data
  from the sources.'
- 'FINAL: dbNetReject_dobMismatch: The provided date of birth does not match the data
  from the sources.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Invalid credentials or token expired'
- Geolocation data may be forged with a third-party app.
- Geolocation alone may not be precise enough for compliance purposes.
- '401 Unauthorized: Check your app token or permissions.'
- '400 Bad Request: Validate the request parameters and payload.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify OAuth token validity.'
- '403 Forbidden: Check user permissions.'
- '400: reusable-kyc-not-compatible-doc-type - Not Reusable KYC for level: id-liveness-preview'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your credentials.'
- '404 Not Found: Confirm the endpoint exists.'
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Verify the authentication credentials'
- 'Request failed: Ensure that the provided credentials are correct.'
- 'Rule installation failed: Check the access permissions for the Rules Library.'
- 'INVALID_DATA: Ensure all required fields are included'
- 'UNAUTHORIZED_ACCESS: Verify your permissions'
- 'Due Diligence not started: The VASP has not attempted to complete the due diligence
  questionnaire.'
- 'Due Diligence In progress: The VASP has either started filling out this questionnaire
  or has filled it out, and it is currently being reviewed by Sumsub.'
- 'Due Diligence completed: The VASP has completed the questionnaire, and it has been
  reviewed by Sumsub. The VASP Due Diligence report is available for this VASP.'
- 'Rejected: The VASP has been rejected due to certain data.'
- 'counterpartyVaspNotFound: The originating VASP cannot be found.'
- 'counterpartyVaspNotReachable: The originating VASP cannot be reached.'
- 'applicantKytOnHold: Notification of a new Travel Rule data exchange transaction
  pending action.'
- '401 Unauthorized: Recheck your app token or authentication settings.'
- '401 Unauthorized: Check your credentials and token validity.'
- '429 Too Many Requests: You have exceeded the rate limit.'
- 'INVALID_WALLET: The provided wallet address is not valid.'
- 'VERIFICATION_FAILED: Unable to verify wallet ownership.'
- 'Invalid applicantId: Ensure the applicantId is correct and exists in the system.'
- 'Invalid inspectionId: Ensure the inspectionId is correct and corresponds to a valid
  applicant.'
- 'Unauthorized: Check your API credentials and permissions.'
- 'INVALID_CLIENT: Check client credentials'
- 'UNAUTHORIZED: Check OAuth token'
- 'NOT_FOUND: Verify endpoint paths'
- '400 Bad Request: Check the request body and parameters.'
- '401 Unauthorized: Verify API key and permissions.'
- '404 Not Found: Ensure the endpoint exists.'
- '400 Bad Request: Invalid request data format.'
- '401 Unauthorized: Check client credentials.'
- '403 Forbidden: Insufficient permissions.'
- '401 Unauthorized: Ensure your API key is valid.'
- '404 Not Found: Verify the endpoint path.'
- Not setting up an SPF record will result in Sumsub emails being blocked for your
  applicants. Therefore, email sending will be disabled automatically.
- '401 Unauthorized: Check your credentials and token validity'
- '401 Unauthorized: Check your API key and permissions.'
- '500 Internal Server Error: Contact support for more information.'
- 'Unauthorized: Unauthorized access detected (most likely `accessToken` is invalid
  or expired and has failed to be refreshed).'
- 'InvalidParameters: Attempt to set up with invalid parameters.'
- 'Unauthorized: Unauthorized access detected (most likely accessToken is invalid
  or expired)'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - PhilID
  - PhilSys Number
  - General Electronic Population Registration System
  - Authorization
client:
  base_url: https://cockpit.sumsub.com
  auth:
    type: oauth2
source_metadata: null
