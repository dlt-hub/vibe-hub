resources:
- name: series
  endpoint:
    path: /series/{ticker}
    method: GET
    data_selector: series
- name: markets
  endpoint:
    path: /markets
    method: GET
    data_selector: markets
    params:
      series_ticker: KXHIGHNY
      status: open
- name: orderbook
  endpoint:
    path: /markets/{market_ticker}/orderbook
    method: GET
    data_selector: orderbook
- name: api_keys
  endpoint:
    path: /api_keys
    method: GET
    data_selector: api_keys
- name: balance
  endpoint:
    path: /trade-api/v2/portfolio/balance
    method: GET
- name: orders
  endpoint:
    path: /trade-api/v2/portfolio/orders
    method: POST
    data_selector: order
- name: markets
  endpoint:
    path: /trade-api/v2/markets
    method: GET
    data_selector: markets
    params:
      limit: '1'
      status: open
- name: series
  endpoint:
    path: /series/{series_ticker}
    method: GET
    data_selector: series
- name: markets
  endpoint:
    path: /markets
    method: GET
    data_selector: markets
    params:
      limit: 100
- name: market_order_book
  endpoint:
    path: /trade-api/v2/markets/{ticker}/orderbook
    method: GET
    data_selector: orderbook
    params:
      depth: '100'
- name: markets
  endpoint:
    path: /markets
    method: GET
    data_selector: markets
    params:
      limit: 100
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: series
  endpoint:
    path: /series
    method: GET
    data_selector: series
    params: {}
- name: trades
  endpoint:
    path: /markets/trades
    method: GET
    data_selector: trades
    params: {}
- name: portfolio_history
  endpoint:
    path: /portfolio/history
    method: GET
    data_selector: history
    params: {}
- name: fills
  endpoint:
    path: /portfolio/fills
    method: GET
    data_selector: fills
    params: {}
- name: orders
  endpoint:
    path: /portfolio/orders
    method: GET
    data_selector: orders
    params: {}
- name: orderbook
  endpoint:
    path: /markets/{ticker}/orderbook
    method: GET
    data_selector: orderbook
    params: {}
- name: portfolio_balance
  endpoint:
    path: /trade-api/v2/portfolio/balance
    method: GET
- name: api_keys
  endpoint:
    path: /api_keys
    method: GET
    data_selector: api_keys
- name: create_api_key
  endpoint:
    path: /api_keys
    method: POST
    data_selector: api_key_id
- name: generate_api_key
  endpoint:
    path: /api_keys/generate
    method: POST
    data_selector: api_key_id
    params: {}
- name: delete_api_key
  endpoint:
    path: /trade-api/v2/api_keys/{api_key}
    method: DELETE
    data_selector: '204'
    params: {}
- name: communications_id
  endpoint:
    path: /communications/id
    method: GET
    data_selector: communications_id
- name: quotes
  endpoint:
    path: /communications/quotes
    method: GET
    data_selector: quotes
- name: create_quote
  endpoint:
    path: /trade-api/v2/communications/quotes
    method: POST
    data_selector: id
- name: quote
  endpoint:
    path: /communications/quotes/{quote_id}
    method: GET
    data_selector: quote
- name: delete_quote
  endpoint:
    path: /trade-api/v2/communications/quotes/{quote_id}
    method: DELETE
- name: accept_quote
  endpoint:
    path: /trade-api/v2/communications/quotes/{quote_id}/accept
    method: PUT
    data_selector: accepted_side
- name: confirm_quote
  endpoint:
    path: /trade-api/v2/communications/quotes/{quote_id}/confirm
    method: PUT
- name: rfqs
  endpoint:
    path: /communications/rfqs
    method: GET
    data_selector: rfqs
- name: create_rfqs
  endpoint:
    path: /trade-api/v2/communications/rfqs
    method: POST
    data_selector: id
- name: rfq
  endpoint:
    path: /communications/rfqs/{rfq_id}
    method: GET
    data_selector: rfq
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params:
      limit: '100'
- name: event
  endpoint:
    path: /events/{event_ticker}
    method: GET
    data_selector: event
    params:
      with_nested_markets: 'false'
- name: event_metadata
  endpoint:
    path: /trade-api/v2/events/{event_ticker}/metadata
    method: GET
    data_selector: image_url
    params: {}
- name: trades
  endpoint:
    path: /markets/trades
    method: GET
    data_selector: trades
    params:
      limit: '100'
- name: market
  endpoint:
    path: /markets/{ticker}
    method: GET
    data_selector: market
    params: {}
- name: series
  endpoint:
    path: /series
    method: GET
    data_selector: series
- name: candlesticks
  endpoint:
    path: /series/{series_ticker}/markets/{ticker}/candlesticks
    method: GET
    data_selector: candlesticks
    params:
      start_ts: integer
      end_ts: integer
      period_interval: integer
- name: announcements
  endpoint:
    path: /v2/exchange/announcements
    method: GET
    data_selector: announcements
- name: exchange_schedule
  endpoint:
    path: /trade-api/v2/exchange/schedule
    method: GET
    data_selector: schedule
    params: {}
- name: exchange_status
  endpoint:
    path: /exchange/status
    method: GET
    data_selector: exchange_active
    params: {}
- name: user_data_timestamp
  endpoint:
    path: /trade-api/v2/exchange/user_data_timestamp
    method: GET
    data_selector: as_of_time
- name: milestones
  endpoint:
    path: /milestones
    method: GET
    data_selector: milestones
    params:
      limit: 100
- name: milestone
  endpoint:
    path: /milestones/{milestone_id}
    method: GET
    data_selector: milestone
    params: {}
- name: multivariate_event_collections
  endpoint:
    path: /multivariate_event_collections
    method: GET
    data_selector: multivariate_contracts
- name: multivariate_event_collection
  endpoint:
    path: /multivariate_event_collections/{collection_ticker}
    method: GET
    data_selector: multivariate_contract
- name: multivariate_event_collections
  endpoint:
    path: /multivariate_event_collections/{collection_ticker}
    method: POST
    data_selector: selected_markets
    params: {}
- name: multivariate_event_collection_lookup
  endpoint:
    path: /multivariate_event_collections/{collection_ticker}/lookup
    method: GET
    data_selector: lookup_points
    params: {}
- name: lookup_tickers
  endpoint:
    path: /trade-api/v2/multivariate_event_collections/{collection_ticker}/lookup
    method: PUT
    data_selector: selected_markets
- name: balance
  endpoint:
    path: /portfolio/balance
    method: GET
    data_selector: balance
- name: fills
  endpoint:
    path: /trade-api/v2/portfolio/fills
    method: GET
    data_selector: fills
    params: {}
- name: order_groups
  endpoint:
    path: /portfolio/order_groups
    method: GET
    data_selector: order_groups
- name: order_group
  endpoint:
    path: /trade-api/v2/portfolio/order_groups/create
    method: POST
    data_selector: order_group_id
- name: order_group
  endpoint:
    path: /portfolio/order_groups/{order_group_id}
    method: GET
    data_selector: is_auto_cancel_enabled
    params: {}
- name: order_group
  endpoint:
    path: /portfolio/order_groups/{order_group_id}
    method: DELETE
    data_selector: object
    params: {}
- name: reset_order_group
  endpoint:
    path: /trade-api/v2/portfolio/order_groups/{order_group_id}/reset
    method: PUT
    data_selector: object
    params: {}
- name: orders
  endpoint:
    path: /portfolio/orders
    method: GET
    data_selector: orders
    params:
      ticker: string
      event_ticker: string
      min_ts: integer
      max_ts: integer
      status: string
      cursor: string
      limit: integer
- name: create_order
  endpoint:
    path: /portfolio/orders
    method: POST
    data_selector: order
- name: batch_create_orders
  endpoint:
    path: /trade-api/v2/portfolio/orders/batched
    method: POST
    data_selector: orders
- name: queue_positions
  endpoint:
    path: /trade-api/v2/portfolio/orders/queue_positions
    method: GET
    data_selector: queue_positions
    params: {}
- name: order
  endpoint:
    path: /portfolio/orders/{order_id}
    method: GET
    data_selector: order
- name: amend_order
  endpoint:
    path: /trade-api/v2/portfolio/orders/{order_id}/amend
    method: POST
    data_selector: order
    params: {}
- name: decrease_order
  endpoint:
    path: /portfolio/orders/{order_id}/decrease
    method: POST
    data_selector: order
    params: {}
- name: queue_position
  endpoint:
    path: /trade-api/v2/portfolio/orders/{order_id}/queue_position
    method: GET
    data_selector: queue_position
    params:
      order_id: string
- name: positions
  endpoint:
    path: /portfolio/positions
    method: GET
    data_selector: event_positions
    params: {}
- name: settlements
  endpoint:
    path: /portfolio/settlements
    method: GET
    data_selector: settlements
    params: {}
- name: portfolio_resting_order_total_value
  endpoint:
    path: /trade-api/v2/portfolio/summary/total_resting_order_value
    method: GET
    data_selector: total_value
    params: {}
- name: structured_targets
  endpoint:
    path: /v2/structured_targets
    method: GET
    data_selector: structured_targets
- name: structured_target
  endpoint:
    path: /structured_targets/{structured_target_id}
    method: GET
    data_selector: structured_target
- name: GetEvents
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: GetMarketCandlesticks
  endpoint:
    path: /markets/candlesticks
    method: GET
    data_selector: candlesticks
- name: GetOrderGroups
  endpoint:
    path: /order-groups
    method: GET
    data_selector: order_groups
- name: OrderConfirmation
  endpoint:
    path: /OrderConfirmation
    method: GET
    data_selector: properties
- name: OrderGroupSummary
  endpoint:
    path: /OrderGroupSummary
    method: GET
    data_selector: properties
- name: PublicTrade
  endpoint:
    path: /PublicTrade
    method: GET
    data_selector: properties
- name: Market
  endpoint:
    path: /Market
    method: GET
    data_selector: properties
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: results
    params:
      limit: '100'
      cursor: ''
      with_nested_markets: 'false'
      status: ''
      series_ticker: ''
      min_close_ts: ''
- name: event
  endpoint:
    path: /events/{event_ticker}
    method: GET
    data_selector: results
    params:
      with_nested_markets: 'false'
- name: quotes
  endpoint:
    path: /api/v1/quotes
    method: GET
    data_selector: quotes
    params: {}
- name: rfqs
  endpoint:
    path: /api/v1/rfqs
    method: GET
    data_selector: rfqs
    params: {}
- name: settlements
  endpoint:
    path: /api/v1/settlements
    method: GET
    data_selector: settlements
    params: {}
- name: market_candlesticks
  endpoint:
    path: /market_candlesticks
    method: GET
    data_selector: data
- name: structured_targets
  endpoint:
    path: /structured_targets
    method: GET
    data_selector: data
    params: {}
- name: structured_target
  endpoint:
    path: /structured_targets/{structured_target_id}
    method: GET
    data_selector: data
    params: {}
- name: order_groups
  endpoint:
    path: /portfolio/order_groups/{order_group_id}
    method: get
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /portfolio/orders
    method: get
    data_selector: orders
    params: {}
- name: queue_positions
  endpoint:
    path: /portfolio/orders/queue_positions
    method: get
    data_selector: queue_positions
    params: {}
- name: positions
  endpoint:
    path: /portfolio/positions
    method: get
    data_selector: positions
    params: {}
- name: settlements
  endpoint:
    path: /portfolio/settlements
    method: get
    data_selector: settlements
    params: {}
- name: series
  endpoint:
    path: /series
    method: get
    data_selector: series
    params: {}
- name: event_metadata
  endpoint:
    path: /event_metadata
    method: GET
    data_selector: records
    params:
      event_ticker: ''
- name: exchange_announcements
  endpoint:
    path: /exchange/announcements
    method: GET
    data_selector: records
    params: {}
- name: exchange_schedule
  endpoint:
    path: /exchange/schedule
    method: GET
    data_selector: records
    params: {}
- name: exchange_status
  endpoint:
    path: /exchange/status
    method: GET
    data_selector: records
    params: {}
- name: user_data_timestamp
  endpoint:
    path: /exchange/user_data_timestamp
    method: GET
    data_selector: records
    params: {}
- name: markets
  endpoint:
    path: /markets
    method: GET
    data_selector: records
    params:
      limit: 100
      cursor: ''
      event_ticker: ''
      series_ticker: ''
      max_close_ts: ''
      min_close_ts: ''
      status: ''
      tickers: ''
- name: trades
  endpoint:
    path: /markets/trades
    method: GET
    data_selector: records
    params:
      limit: 100
      cursor: ''
      ticker: ''
      min_ts: ''
      max_ts: ''
- name: market
  endpoint:
    path: /markets/{ticker}
    method: GET
    data_selector: records
    params:
      ticker: ''
- name: market_orderbook
  endpoint:
    path: /markets/{ticker}/orderbook
    method: GET
    data_selector: records
    params:
      ticker: ''
      depth: 100
- name: milestones
  endpoint:
    path: /milestones
    method: GET
    data_selector: records
    params:
      minimum_start_date: ''
      category: ''
      competition: ''
      type: ''
      related_event_ticker: ''
      limit: ''
      cursor: ''
- name: milestone
  endpoint:
    path: /milestones/{milestone_id}
    method: GET
    data_selector: records
    params:
      milestone_id: ''
- name: multivariate_event_collections
  endpoint:
    path: /multivariate_event_collections
    method: GET
    data_selector: records
    params: {}
- name: multivariate_event_collection
  endpoint:
    path: /multivariate_event_collections/{collection_ticker}
    method: GET
    data_selector: records
    params:
      collection_ticker: ''
- name: portfolio_balance
  endpoint:
    path: /portfolio/balance
    method: GET
    data_selector: records
    params: {}
- name: portfolio_fills
  endpoint:
    path: /portfolio/fills
    method: GET
    data_selector: records
    params:
      ticker: ''
      order_id: ''
      min_ts: ''
      max_ts: ''
      limit: 100
      cursor: ''
      use_dollars: ''
- name: portfolio_order_groups
  endpoint:
    path: /portfolio/order_groups
    method: GET
    data_selector: records
    params: {}
notes:
- No authentication headers are required for the endpoints in this guide.
- Some endpoints return an authentication_error.
- API keys allow programmatic access to the platform without requiring username/password
  authentication.
- Batch order endpoints are available to all API users in the demo environment.
- Rate limits still apply based on user tier.
- client_order_id is crucial for order deduplication
- If network issues occur, you can resubmit with the same client_order_id
- WebSocket connections require authentication using the same API key signing mechanism
  as REST endpoints.
- API returns results in pages to keep response sizes manageable
- Each page contains data array, cursor field, and limit
- Each request must be signed with the private key.
- 'Qualification for tiers: Basic: Completing signup, Advanced: Completing https://kalshi.typeform.com/advanced-api,
  Premier: 3.75% of exchange traded volume in a given month, Prime: 7.5% of exchange
  traded volume in a given month.'
- 'In addition to the volume targets, technical competency is a requirement for Premier/Prime
  access. Before providing access to the Premier/Prime tiers, the Exchange will establish
  that the trader/trading entity has the following requirements met: Knowledge of
  common security practices for API usage, Proficiency in setting up monitoring for
  API usage, and ability to monitor API usage in near real-time, Understanding and
  implementation of rate limiting and throttling mechanisms imposed by the API, and
  the ability to self-limit load, Awareness of legal and compliance aspects related
  to API usage.'
- Users with Premier or Market Maker API usage levels can create API keys.
- Endpoint for accepting a quote. This will require the quoter to confirm
- Cursor for pagination to get the next page of results.
- The response includes a ‘cursor’ field - pass this value in the ‘cursor’ parameter
  of your next request to get the next page.
- Endpoint for getting data about milestones with optional filtering.
- Uses OAuth2 with refresh token — requires setup of connected app in Kalshi
- Some endpoints may have specific access requirements.
errors:
- 'Incorrect API signature: Check the API signature.'
- '401 Unauthorized: Check your API Key ID and private key file path'
- '401 Unauthorized: Check your API keys and signature generation'
- '400 Bad Request: Verify your order parameters (price must be 1-99 cents)'
- '409 Conflict: Order with this client_order_id already exists'
- '429 Too Many Requests: You’ve hit the rate limit - slow down your requests'
- 'invalid_auth: Authentication failed'
- 'invalid_market: Market ticker not found'
- 'rate_limit: Too many requests'
- 'invalid_action: Unknown command'
- '201: API key created successfully'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check OAuth credentials'
- '404 Not Found: Verify endpoint path and parameters'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.elections.kalshi.com/trade-api/v2
source_metadata: null
