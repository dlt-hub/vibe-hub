resources:
- name: token_search
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      page: '1'
      limit: '100'
- name: token_search
  endpoint:
    path: /search
    method: GET
    data_selector: data
- name: latest_tokens
  endpoint:
    path: /datastream/websockets/latesttokens
    method: WSS
- name: swap
  endpoint:
    path: /swap-api/swap
    method: GET
- name: rate
  endpoint:
    path: /swap-api/rate
    method: GET
- name: account_subscribe
  endpoint:
    path: /solana-rpc/websockets/accountsubscribe
    method: POST
- name: account_notification
  endpoint:
    path: /solana-rpc/websockets/accountnotification
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: SUBSCRIBE
    data_selector: data
    params:
      commitment: confirmed
      ping: true
- name: Risk Score
  endpoint:
    path: /data-api/risk
    method: GET
    data_selector: risk
    params: {}
- name: get_token_information
  endpoint:
    path: /tokens/{tokenAddress}
    method: GET
- name: token
  endpoint:
    path: /token
    method: GET
    data_selector: token
- name: pools
  endpoint:
    path: /pools
    method: GET
    data_selector: pools
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: token_information
  endpoint:
    path: /tokens/{tokenAddress}
    method: GET
    data_selector: token
    params: {}
- name: price
  endpoint:
    path: /price
    method: GET
    data_selector: ''
    params: {}
- name: latest_tokens
  endpoint:
    path: /tokens/latest
    method: GET
    data_selector: data
    params: {}
- name: wallet
  endpoint:
    path: /wallet/{walletAddress}
    method: GET
    data_selector: ''
    params: {}
- name: swap
  endpoint:
    path: /swap-api/swap
    method: GET
- name: rate
  endpoint:
    path: /swap-api/rate
    method: GET
- name: swap
  endpoint:
    path: /swap
    method: GET
    data_selector: txn
    params: {}
- name: rate
  endpoint:
    path: /rate
    method: GET
    data_selector: rate
    params: {}
- name: rate
  endpoint:
    path: /rate
    method: GET
    data_selector: amountIn, amountOut, minAmountOut, currentPrice, executionPrice,
      priceImpact, fee, baseCurrency, quoteCurrency, platformFee, platformFeeUI
    params: {}
- name: getProgramAccountsV2
  endpoint:
    path: /
    method: POST
    data_selector: result.value.accounts
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getProgramAccountsV2
- name: getTokenAccountsByOwnerV2
  endpoint:
    path: /
    method: POST
    data_selector: result.value.accounts
    params:
      method: getTokenAccountsByOwnerV2
- name: getPriorityFeeEstimate
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getPriorityFeeEstimate
      params:
      - transaction: AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAEDArczbMia1tLmq7zz4DinMNN0pJ1JtLdqIJPUw3YrGCzYAMHBsgN27lcgB6H2WQvFgyZuJYHa46puOQo9yQ8CVQbd9uHXZaGT2cvhRs7reawctIXtX1s3kTqM9YV+/wCp20C7Wj2aiuk5TReAXo+VTVg8QTHjs0UjNMMKCvpzZ+ABAgEBARU=
        options:
          recommended: true
- name: getAccountInfo
  endpoint:
    path: /
    method: POST
    data_selector: result.value
    params:
      jsonrpc: '2.0'
      id: 1
      method: getAccountInfo
      params:
      - AYAmCRPotwZprbNpPQ1hVGSEpbgWUgWHUbjnjt4bfLo1
- name: getBalance
  endpoint:
    path: /
    method: POST
    data_selector: result.value
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getBalance
      params:
      - 83astBRguLMdt2h5U1Tpdq5tjFoJ6noeGwaY3mDLVcri
- name: getMultipleAccounts
  endpoint:
    path: /
    method: POST
    data_selector: result.value
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getMultipleAccounts
- name: getProgramAccounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getProgramAccounts
      params:
      - 4Nd1mBQtrMJVYVfKf2PJy9NZUZdTAsp7D4xWLs4gDB4T
- name: getTokenAccountBalance
  endpoint:
    path: /
    method: POST
    data_selector: result.value
    params: {}
- name: getTokenAccountsByDelegate
  endpoint:
    path: /
    method: POST
    data_selector: result.value
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getTokenAccountsByDelegate
      params:
      - 4Nd1mBQtrMJVYVfKf2PJy9NZUZdTAsp7D4xWLs4gDB4T
      - programId: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA
      - encoding: jsonParsed
- name: getTokenAccountsByOwner
  endpoint:
    path: /
    method: POST
    data_selector: result.value
    params: {}
- name: getTokenLargestAccounts
  endpoint:
    path: /
    method: POST
    data_selector: result.value
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getTokenLargestAccounts
      params:
      - 9BB6NFEcjBCtnNLFko2FqVQBq8HHM13kCyYcdQbgpump
- name: getTokenSupply
  endpoint:
    path: /solana-rpc/http/gettokensupply
    method: POST
- name: getBlock
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getBlock
      params:
      - 335157111
- name: getBlockHeight
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      commitment: finalized
      minContextSlot: 1
- name: getBlockProduction
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: getBlockCommitment
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: getBlocks
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getBlocks
      params:
      - 5
      - 10
      - commitment: finalized
- name: getBlocksWithLimit
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getBlocksWithLimit
- name: getBlockTime
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: getFirstAvailableBlock
  endpoint:
    path: /solana-rpc/http/getfirstavailableblock
    method: POST
- name: getLatestBlockhash
  endpoint:
    path: /solana-rpc/http/getlatestblockhash
    method: POST
- name: isBlockhashValid
  endpoint:
    path: /solana-rpc/http/isblockhashvalid
    method: POST
- name: getLatestBlockhash
  endpoint:
    path: /solana-rpc/http/getlatestblockhash
    method: POST
- name: getSignatureStatuses
  endpoint:
    path: /solana-rpc/http/getsignaturestatuses
    method: POST
- name: getSignatureStatuses
  endpoint:
    path: /solana-rpc/http/getsignaturestatuses
    method: POST
- name: getSignaturesForAddress
  endpoint:
    path: /solana-rpc/http/getsignaturesforaddress
    method: POST
- name: getSignaturesForAddress
  endpoint:
    path: /solana-rpc/http/getsignaturesforaddress
    method: POST
- name: getTransaction
  endpoint:
    path: /solana-rpc/http/gettransaction
    method: POST
- name: getSignaturesForAddress
  endpoint:
    path: /solana-rpc/http/getsignaturesforaddress
    method: POST
- name: getTransactionCount
  endpoint:
    path: /solana-rpc/http/gettransactioncount
    method: POST
- name: getTransactionCount
  endpoint:
    path: /solana-rpc/http/gettransactioncount
    method: POST
    data_selector: response
    params: {}
- name: sendTransaction
  endpoint:
    path: /solana-rpc/http/sendtransaction
    method: POST
- name: getTransaction
  endpoint:
    path: /solana-rpc/http/gettransaction
    method: POST
- name: getTransactionCount
  endpoint:
    path: /solana-rpc/http/gettransactioncount
    method: POST
- name: simulateTransaction
  endpoint:
    path: /solana-rpc/http/simulatetransaction
    method: POST
- name: getFeeForMessage
  endpoint:
    path: /solana-rpc/http/getfeeformessage
    method: POST
- name: getRecentPrioritizationFees
  endpoint:
    path: /solana-rpc/http/getrecentprioritizationfees
    method: POST
- name: getClusterNodes
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: '1'
      method: getClusterNodes
- name: getEpochInfo
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      commitment: finalized
      minContextSlot: 1000
- name: getEpochSchedule
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      method: getEpochSchedule
      id: db16f277-1a22-41ff-9f85-f37e2cd77900
- name: getGenesisHash
  endpoint:
    path: /solana-rpc/http/getgenesishash
    method: POST
- name: getHealth
  endpoint:
    path: /solana-rpc/http/gethealth
    method: POST
- name: getHighestSnapshotSlot
  endpoint:
    path: /solana-rpc/http/gethighestsnapshotslot
    method: POST
- name: getIdentity
  endpoint:
    path: /solana-rpc/http/getidentity
    method: POST
- name: inflation_governor
  endpoint:
    path: /solana-rpc/http/getinflationgovernor
    method: POST
- name: getInflationRate
  endpoint:
    path: /solana-rpc/http/getinflationrate
    method: POST
- name: inflation_reward
  endpoint:
    path: /solana-rpc/http/getinflationreward
    method: POST
- name: largest_accounts
  endpoint:
    path: /solana-rpc/http/getlargestaccounts
    method: POST
- name: getLeaderSchedule
  endpoint:
    path: /solana-rpc/http/getleaderschedule
    method: POST
- name: getMaxRetransmitSlot
  endpoint:
    path: /solana-rpc/http/getmaxretransmitslot
    method: POST
- name: getMaxShredInsertSlot
  endpoint:
    path: /solana-rpc/http/getmaxshredinsertslot
    method: POST
- name: getMinimumBalanceForRentExemption
  endpoint:
    path: /solana-rpc/http/getminimumbalanceforrentexemption
    method: POST
- name: getMaxShredInsertSlot
  endpoint:
    path: /solana-rpc/http/getmaxshredinsertslot
    method: POST
- name: getRecentPerformanceSamples
  endpoint:
    path: /solana-rpc/http/getrecentperformancesamples
    method: POST
- name: getRecentPerformanceSamples
  endpoint:
    path: /solana-rpc/http/getrecentperformancesamples
    method: POST
- name: getSlot
  endpoint:
    path: /solana-rpc/http/getslot
    method: POST
- name: getSlotLeader
  endpoint:
    path: /solana-rpc/http/getslotleader
    method: POST
- name: getSlotLeaders
  endpoint:
    path: /solana-rpc/http/getslotleaders
    method: POST
    data_selector: ''
    params: {}
- name: supply
  endpoint:
    path: /solana-rpc/http/getsupply
    method: POST
- name: getVersion
  endpoint:
    path: /solana-rpc/http/getversion
    method: POST
- name: getSupply
  endpoint:
    path: /solana-rpc/http/getsupply
    method: POST
- name: minimumLedgerSlot
  endpoint:
    path: /solana-rpc/http/minimumledgerslot
    method: POST
- name: getVersion
  endpoint:
    path: /solana-rpc/http/getversion
    method: POST
- name: getStakeMinimumDelegation
  endpoint:
    path: /solana-rpc/http/getstakeminimumdelegation
    method: POST
- name: vote_accounts
  endpoint:
    path: /solana-rpc/http/getvoteaccounts
    method: POST
    data_selector: null
    params: {}
- name: requestAirdrop
  endpoint:
    path: /solana-rpc/http/requestairdrop
    method: POST
- name: getVoteAccounts
  endpoint:
    path: /solana-rpc/http/getvoteaccounts
    method: POST
- name: getProgramAccountsV2
  endpoint:
    path: /solana-rpc/http/getprogramaccountsV2
    method: POST
    data_selector: result
    params: {}
- name: getTokenAccountsByOwnerV2
  endpoint:
    path: /solana-rpc/http/gettokenaccountsbyownerv2
    method: POST
    data_selector: result
    params: {}
- name: getTransaction
  endpoint:
    path: /solana-rpc/http/gettransaction
    method: POST
    data_selector: result
    params: {}
- name: getBlock
  endpoint:
    path: /solana-rpc/http/getblock
    method: POST
    data_selector: result
    params: {}
- name: shred_unsubscribe
  endpoint:
    path: /solana-rpc/websockets/shredunsubscribe
    method: POST
    data_selector: result
notes:
- API Key for authentication is required.
- Zero-Delay Trading - Sub-second execution
- Multi-DEX Routing - Optimal prices across DEXs
- Priority Control - Manual or automatic fee optimization
- Custom Fees - Monetization with add/deduct modes
- Flexible Amounts - Numeric, auto, or percentage
- API key for authentication must be provided as a query parameter
- High-performance, real-time Solana blockchain data streaming with ultra-low latency.
- Bidirectional streaming with instant subscription creation and cancellation.
- Cursor pagination for big datasets
- 404 page not found indicates possible incorrect endpoint usage
- This endpoint is for pre-swap quotes only. Do not use it as a free pricing or market
  data API.
- Excessive requests for non-swap purposes may result in rate limiting.
- Use cursor pagination to efficiently retrieve all accounts (up to 10k per request).
- Need to track only new accounts? Use `changedSince` to fetch accounts modified after
  a specific slot.
- Uses API key for authorization — required in query string
- Supports incremental updates with changedSince parameter and filtering with excludeZero
- Requires API key as a query parameter
- Most API calls cost 1 credit.
- Historical blockchain data retrieval costs 10 credits.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check if API Key is valid.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401: Invalid API key'
- '429: Rate limit exceeded'
- '500: Server error - please retry'
- 'Invalid token address: Verify addresses are valid'
- 'Invalid amount: Use number, “auto”, or percentage'
- 'Invalid slippage: Set between 0-100'
- 'Token has no pools: Token may be delisted'
- 'Insufficient liquidity: Try smaller amount'
- 'Invalid or missing token address: Verify token addresses'
- 'Invalid amount: Ensure amount is positive'
- 'Invalid slippage tolerance: Set slippage 0-100'
- 'Unable to fetch pools: Token may lack active pools'
- '200: Successfully retrieved paginated token accounts by owner'
- '200: Successful response'
- '400: Bad Request'
- '401: Unauthorized'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '504: Gateway Timeout'
- '400'
- '401'
- '429'
- '500'
- '503'
- '504'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: API key required'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Server issue'
- '503 Service Unavailable: Service temporarily unavailable'
- '504 Gateway Timeout: Request timed out'
- 400 Bad Request
- 401 Unauthorized
- 429 Too Many Requests
- 500 Internal Server Error
- 503 Service Unavailable
- 504 Gateway Timeout
- '401 Unauthorized: Ensure API key is valid'
- '429 Too Many Requests: Throttle API calls'
- '500 Internal Server Error: Retry the request'
- '429 Too Many Requests: Requests exceeding your rate limit.'
auth_info:
  mentioned_objects:
  - api-key
client:
  base_url: https://rpc-mainnet.solanatracker.io
  auth:
    type: api-key
    location: query
  headers:
    Content-Type: application/json
  paginator:
    type: cursor
    cursor_param: nextCursor
    default_page_size: 10000
source_metadata: null
