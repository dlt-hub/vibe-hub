resources:
- name: address_validation
  endpoint:
    path: /api/v1/address/validate
    method: POST
    data_selector: address
    params: {}
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
    data_selector: object
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
    data_selector: info
- name: carrier_account
  endpoint:
    path: /carrier-accounts
    method: GET
- name: Carrier Limits
  endpoint:
    path: /docs/shipium-carrier-selection-carrier-limits
    method: GET
- name: rate_tables
  endpoint:
    path: /rate_tables
    method: GET
    data_selector: rate_tables
    params: {}
- name: tenants
  endpoint:
    path: /tenants
    method: GET
- name: fulfillment_contexts
  endpoint:
    path: /docs/fulfillment-contexts
    method: GET
- name: fulfillment_context
  endpoint:
    path: /api/fulfillment_context
    method: POST
    data_selector: context
    params: {}
- name: carrier_contract
  endpoint:
    path: /api/carrier_contract
    method: POST
    data_selector: contract
    params: {}
- name: label_configuration
  endpoint:
    path: /api/label_configuration
    method: POST
    data_selector: label
    params: {}
- name: third_party_billing
  endpoint:
    path: /api/third_party_billing
    method: POST
    data_selector: billing
    params: {}
- name: injection_shipping
  endpoint:
    path: /api/injection_shipping
    method: POST
    data_selector: injection
    params: {}
- name: shipment_lanes
  endpoint:
    path: /api/shipment_lanes
    method: POST
    data_selector: lanes
    params: {}
- name: carrier_contracts
  endpoint:
    path: /carrier-contracts
    method: GET
- name: third_party_billing
  endpoint:
    path: /third-party-billing
    method: GET
    data_selector: data
    params: {}
- name: carrier_account
  endpoint:
    path: /add_carrier_account
    method: POST
    data_selector: carrier_account_details
    params: {}
- name: carrier_rate
  endpoint:
    path: /add_carrier_rate
    method: POST
    data_selector: carrier_rate_details
    params: {}
- name: carrier_schedule
  endpoint:
    path: /add_carrier_schedule
    method: POST
    data_selector: carrier_schedule_details
    params: {}
- name: label_augmentation
  endpoint:
    path: /add_label_augmentation
    method: POST
    data_selector: label_augmentation_details
    params: {}
- name: shipment_lane
  endpoint:
    path: /shipment-lane
    method: GET
    data_selector: carrierSelection.laneMatch
    params: {}
- name: shipment_lane
  endpoint:
    path: /shipment-lanes
    method: GET
    data_selector: shipmentLanes
- name: print_return_labels
  endpoint:
    path: /print/return_labels
    method: POST
- name: Print Labels
  endpoint:
    path: /print-labels
    method: GET
- name: Label
  endpoint:
    path: /docs/label
    method: GET
    data_selector: Label
- name: Shipment Order Items
  endpoint:
    path: /docs/shipment-order-items
    method: GET
    data_selector: ShipmentOrderItems
- name: Rate Selection Results
  endpoint:
    path: /docs/rate-selection-results
    method: GET
    data_selector: RateSelectionResults
- name: Service Method
  endpoint:
    path: /docs/service-method
    method: GET
    data_selector: ServiceMethod
- name: shipment_export_fields
  endpoint:
    path: /shipment/export/fields
    method: GET
    data_selector: fields
    params: {}
- name: shipment_export
  endpoint:
    path: /export/shipment/data
    method: GET
    data_selector: shipment_data
- name: Address Validation API
  endpoint:
    path: /docs/shipium-address-validation-api
    method: GET
- name: Batch Label Creation API
  endpoint:
    path: /docs/batch-label-creation-api
    method: GET
- name: Carrier and Method Selection API
  endpoint:
    path: /docs/carrier-and-method-selection-api
    method: GET
- name: Carrier and Method Selection & Shipment Label API
  endpoint:
    path: /docs/carrier-and-method-selection-and-shipment-label-api
    method: GET
- name: Configuration APIs
  endpoint:
    path: /docs/configuration-apis
    method: GET
- name: Origin Configuration API
  endpoint:
    path: /docs/origin-configuration-api
    method: GET
- name: Batch Label Creation
  endpoint:
    path: /batch-label-creation
    method: POST
- name: shipmentRequests
  endpoint:
    path: /shipmentRequests
    method: POST
    data_selector: shipmentRequests
    params:
      currencyCode: usd
      destinationAddress:
        countryCode: US
        postalCode: ''
      deliveryWindow:
        endWindow:
          hour: ''
          minute: ''
          nano: 0
          second: ''
        startWindow:
          hour: ''
          minute: ''
          nano: 0
          second: ''
- name: batch_labels
  endpoint:
    path: /api/v1/shipment/bulkprocessing/labels
    method: POST
- name: shipmentRequests
  endpoint:
    path: /shipmentRequests
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: shipping_label
  endpoint:
    path: /batch/labels
    method: POST
    data_selector: carrierLabel
    params: {}
- name: ping
  endpoint:
    path: /api/v1/shipment/bulkprocessing/ping
    method: GET
    data_selector: info
    params: {}
- name: create_labels
  endpoint:
    path: /api/v1/shipment/bulkprocessing/labels
    method: POST
    data_selector: results
    params: {}
- name: shipping_labels
  endpoint:
    path: /api/v1/shipping_labels
    method: POST
    data_selector: labels
    params: {}
- name: shipping_label
  endpoint:
    path: /api/shipping_labels
    method: POST
    data_selector: labelDetails
- name: shipping_labels
  endpoint:
    path: /services/shipping/labels
    method: POST
    data_selector: labels
    params: {}
- name: shipping_labels
  endpoint:
    path: /shipping/labels
    method: GET
    data_selector: labels
    params: {}
- name: shipment_label
  endpoint:
    path: /api/v1/shipment_labels
    method: GET
    data_selector: labels
    params: {}
- name: shipping_labels
  endpoint:
    path: /api/v1/shipping_labels
    method: GET
    data_selector: labels
    params:
      partnerId: f8569788-5001-4242-a04e-6156268011cd
- name: shipping_labels
  endpoint:
    path: /v1/shipping_labels
    method: GET
    data_selector: labels
- name: shipment_labels
  endpoint:
    path: /api/v1/shipment_labels
    method: GET
    data_selector: records
- name: CarrierSelection
  endpoint:
    path: /reference/createcarrierselectionv1
    method: POST
    data_selector: response
    params: {}
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection
    method: POST
- name: carrier_selection
  endpoint:
    path: /carrier/selection
    method: POST
    data_selector: carrierDecision
    params:
      asOfDate: '2024-03-21T17:29:51.621Z'
- name: carrier_decision
  endpoint:
    path: /v1/carrierDecision
    method: POST
    data_selector: carrierDecision
    params: {}
- name: carrier_selection_label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: INSERT REQUEST BODY FROM BELOW
    params: {}
- name: carrier_selection_label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: records
    params: {}
- name: carrier_selection_label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: response
    params: {}
- name: label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}
    method: GET
    params:
      includeLabelImageinResponse: 'true'
- name: shipment_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/zpl
    method: GET
    data_selector: documents
- name: shipment_carrier_selection_label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: records
    params: {}
- name: shipmentParameters
  endpoint:
    path: /shipmentParameters
    method: POST
    data_selector: parameters
    params: {}
- name: shipmentParameters
  endpoint:
    path: /shipment/parameters
    method: POST
    data_selector: shipmentDetails
    params:
      currencyCode: Required
      destinationAddress.countryCode: Required
      destinationAddress.postalCode: Required
      destinationAddress.addressType: Required
      destinationAddress.name: Required
      destinationAddress.city: Required
      destinationAddress.state: Required
      destinationAddress.street1: Required
      shipFromAddress.countryCode: Required
      shipFromAddress.postalCode: Required
- name: shipment
  endpoint:
    path: /api/v1/shipments
    method: POST
    data_selector: shipment
- name: Carrier and Method Selection
  endpoint:
    path: /api/carrier-method-selection
    method: POST
    data_selector: results
- name: Shipment Labels
  endpoint:
    path: /api/shipment-labels
    method: POST
    data_selector: label
- name: origin_configuration
  endpoint:
    path: /origin-configuration
    method: GET
    data_selector: origins
- name: origin_schedule_configuration
  endpoint:
    path: /origin-schedule-configuration
    method: GET
    data_selector: schedules
- name: origins
  endpoint:
    path: /api/v1/partnerConfiguration/origins/{originId}
    method: DELETE
- name: origins
  endpoint:
    path: /api/v1/partnerConfiguration/origins
    method: POST
    data_selector: null
    params: {}
- name: delete_origin
  endpoint:
    path: /api/v1/partnerConfiguration/origins/{originId}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_origin_schedule_entry
  endpoint:
    path: /api/v1/partnerConfiguration/origins/{originId}/schedule/entry/{originScheduleEntryId}
    method: DELETE
    data_selector: success
    params: {}
- name: create_origin_schedule_entry
  endpoint:
    path: /api/v1/partnerConfiguration/origins/{originId}/schedule/entry
    method: POST
    data_selector: carrierSchedules
    params: {}
- name: retrieve_origin_schedules
  endpoint:
    path: /api/v1/partnerConfiguration/origins/{originId}/schedule/entry/{originScheduleEntryId}
    method: DELETE
    data_selector: ''
    params: {}
- name: Product View Delivery Promise
  endpoint:
    path: /product-view-delivery-promise
    method: GET
- name: Cart Checkout Delivery Promise
  endpoint:
    path: /cart-checkout-delivery-promise
    method: GET
- name: product_view
  endpoint:
    path: /api/v1/deliveryexperience/productview
    method: POST
    data_selector: deliveryEstimateId
- name: delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/productview
    method: POST
    data_selector: response
    params: {}
- name: cart_delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/cartDeliveryEstimate
    method: POST
    data_selector: response
    params: {}
- name: cartDeliveryEstimate
  endpoint:
    path: /api/v1/deliveryexperience/cartDeliveryEstimate
    method: POST
    data_selector: originDeliveryEstimates
    params: {}
- name: productDetails
  endpoint:
    data_selector: productDetails
    params: {}
- name: fulfillment_plan
  endpoint:
    path: /api/v1/fe/plans
    method: POST
- name: fulfillment_centers
  endpoint:
    path: /fulfillment_centers
    method: POST
    data_selector: fulfillmentCenters
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: orders
    params: {}
- name: product_details
  endpoint:
    path: /product_details
    method: POST
    data_selector: productDetails
    params: {}
- name: fulfillment_plan
  endpoint:
    path: /api/v1/fe/plans
    method: POST
    data_selector: null
    params: {}
- name: proposedShipments
  endpoint:
    path: /proposedShipments
    method: GET
    data_selector: proposedShipments
    params: {}
- name: unfulfillableItems
  endpoint:
    path: /unfulfillableItems
    method: GET
    data_selector: unfulfillableItems
    params: {}
- name: resultingInventory
  endpoint:
    path: /resultingInventory
    method: GET
    data_selector: resultingInventory
    params: {}
- name: fulfillment_centers
  endpoint:
    path: /fulfillmentCenters
    method: POST
    data_selector: fulfillmentCenters.rules.splitSettings
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: orders
    params: {}
- name: fulfillment_plan
  endpoint:
    path: /services/data/vXX.X/sobjects/FulfillmentPlan
    method: GET
    data_selector: records
    params: {}
- name: LTL Shipment Cost API
  endpoint:
    path: /docs/ltl-shipment-cost-api
    method: GET
    data_selector: records
- name: LTL Shipment Cost Compare API
  endpoint:
    path: /docs/ltl-shipment-cost-compare-api
    method: GET
    data_selector: records
- name: shipment_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost
    method: POST
- name: ltl_shipment_costing
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: POST
    data_selector: costingResults
    params:
      currencyCode: usd
      destinationAddress.countryCode: required
      destinationAddress.postalCode: required
      destinationAddress.addressType: required
      ltlShipmentParameters.billToContact.countryCode: required
      ltlShipmentParameters.billToContact.postalCode: required
      ltlShipmentParameters.collectOnDelivery.amount: optional
      ltlShipmentParameters.collectOnDelivery.currency: optional
      ltlShipmentParameters.paymentDetails.payerType: required
      ltlShipmentParameters.paymentDetails.paymentTerms: required
      ltlShipmentParameters.pickupDate: required
      packedShipments.loadPackagingSize.height: required
      packedShipments.loadPackagingSize.length: required
      packedShipments.loadPackagingSize.linearUnit: required
      packedShipments.loadPackagingSize.weight: required
      packedShipments.loadPackagingSize.weightUnit: required
      packedShipments.loadPackagingSize.width: required
      packedShipments.nmfcFreightClass: required
- name: ltl_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost/{ltlCostId}
    method: POST
    data_selector: response attributes
    params:
      includeEvaluatedServiceMethodsInResponse: true
- name: ltl_shipment_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost/{ltlCostId}
    method: POST
    data_selector: shipments
    params: {}
- name: ltlShipment
  endpoint:
    path: /api/v1/ltlShipment
    method: POST
    data_selector: shipments
    params: {}
- name: cost_compare
  endpoint:
    path: /api/v1/ltl/shipment/costCompare
    method: POST
- name: packageShipmentParameters
  endpoint:
    path: /package/shipment/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: shipment_cost_compare
  endpoint:
    path: /api/v1/ltl/shipment/costCompare/{ltlCostId}
    method: POST
- name: ltlShipmentParameters
  endpoint:
    params:
      businessDaysOfTransit: Optional
      currencyCode: Required
      desiredDeliveryDate: Optional
      destinationAddress.countryCode: Required
      destinationAddress.postalCode: Required
      destinationAddress.addressType: Required
      ltlShipmentParameters.billToContact.countryCode: Required
      ltlShipmentParameters.billToContact.postalCode: Required
      ltlShipmentParameters.billToContact.thirdPartyBillingSetId: Required
      ltlShipmentParameters.paymentDetails.payerType: Required
      ltlShipmentParameters.paymentDetails.paymentTerms: Required
      ltlShipmentParameters.pickupDate: Required
      packedShipments.loadPackagingSize.height: Required
      packedShipments.loadPackagingSize.length: Required
      packedShipments.loadPackagingSize.linearUnit: Required
      packedShipments.loadPackagingSize.weight: Required
      packedShipments.loadPackagingSize.weightUnit: Required
      packedShipments.loadPackagingSize.width: Required
      packedShipments.nmfcFreightClass: Required
- name: cost_compare
  endpoint:
    path: /api/v1/ltl/shipment/costCompare/{ltlCostId}
    method: POST
    data_selector: records
    params: {}
- name: shipments
  endpoint:
    path: /ltl-shipments
    method: GET
    data_selector: shipments
    params: {}
- name: packageCostDetails
  endpoint:
    path: /package-cost-details
    method: GET
    data_selector: packageCostDetails
    params: {}
- name: packaging_planner
  endpoint:
    path: /api/v1/packaging/planner
    method: POST
    data_selector: ''
    params: {}
- name: packaging_guidance
  endpoint:
    path: /packaging/planner
    method: POST
    data_selector: packages
    params: {}
- name: create_order
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: create_order
  endpoint:
    path: /api/v1/packShip/order
    method: POST
- name: order
  endpoint:
    path: /createOrder
    method: POST
    data_selector: response
    params: {}
- name: search_order
  endpoint:
    path: /order/search
    method: POST
    data_selector: records
    params: {}
- name: get_order
  endpoint:
    path: /order/{orderId}
    method: POST
    data_selector: records
    params: {}
- name: generate_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label
    method: POST
    data_selector: response
    params: {}
- name: retrieve_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{returnLabelId}
    method: GET
    data_selector: response
    params: {}
- name: generate_shipment_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/manifest
    method: POST
- name: retrieve_label_details
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/manifest
    method: POST
- name: retrieve_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierselection/label/{shipiumLabelId}
    method: GET
    params:
      includeLabelImagesInResponse: 'true'
- name: void_label
  endpoint:
    path: /api/v1/deliveryexperience/cancel
    method: POST
    data_selector: shipiumLabelId
- name: manifest_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/manifest
    method: POST
- name: shipmentPlanning
  endpoint:
    path: /api/v1/deliveryexperience/shipmentPlanning
    method: POST
    data_selector: shipmentPlanningId
    params: {}
- name: shipmentPlanning
  endpoint:
    path: /api/v1/deliveryexperience/shipmentPlanning
    method: POST
    data_selector: shipmentPlanningId
- name: tracking_by_carrier
  endpoint:
    path: /api/v1/tracking/carrier/{carrierId}/{carrierTrackingId}
    method: GET
- name: bulk_tracking
  endpoint:
    path: /api/v1/tracking/bulkCarrierTrackingSearch
    method: POST
- name: tracking_single
  endpoint:
    path: /api/v1/tracking/{shipiumTrackingId}
    method: GET
    data_selector: shipiumTrackingId
    params:
      excludeEvents: 'true'
- name: tracking_bulk
  endpoint:
    path: /api/v1/tracking/bulkTrackingSearch
    method: POST
    data_selector: trackings
    params:
      excludeEvents: 'true'
- name: tracking_single
  endpoint:
    path: /api/v1/tracking/carrier/{carrierId}/{carrierTrackingId}
    method: GET
    data_selector: trackings
    params:
      excludeEvents: 'true'
- name: tracking_bulk
  endpoint:
    path: /api/v1/tracking/bulkCarrierTrackingSearch
    method: POST
    data_selector: trackings
    params:
      excludeEvents: 'true'
- name: tracking_search_by_shipium
  endpoint:
    path: /api/v1/tracking/{shipiumTrackingId}
    method: GET
    data_selector: trackings
    params: {}
- name: tracking_bulk_search_by_shipium
  endpoint:
    path: /api/v1/tracking/bulkTrackingSearch
    method: POST
    data_selector: trackings
    params: {}
- name: bulk_registration
  endpoint:
    path: /api/v1/tracking/bulkRegister
    method: POST
    data_selector: trackingRegistrations
- name: single_registration
  endpoint:
    path: /api/v1/tracking/register
    method: POST
    data_selector: shipiumTrackingId
- name: product_view_delivery_promise
  endpoint:
    path: /docs/product-view-delivery-promise-api
    method: GET
    data_selector: records
- name: cart_checkout_delivery_promise
  endpoint:
    path: /docs/cart-checkout-delivery-promise-api
    method: GET
    data_selector: records
- name: packaging
  endpoint:
    path: /packaging
    method: GET
- name: packaging_set
  endpoint:
    path: /packaging_set
    method: GET
- name: ship_with_amazon
  endpoint:
    path: /carrier-and-method-selection-and-shipment-label
    method: POST
    data_selector: response
    params: {}
- name: vendor_direct_fulfillment
  endpoint:
    path: /vendor-direct-fulfillment
    method: POST
    data_selector: response
    params: {}
- name: shipment_parameters
  endpoint:
    path: /api/shipment
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: declared_value
  endpoint:
    path: /shipmentParameters
    method: POST
    data_selector: totalDeclaredValue
    params: {}
- name: hold_at_location
  endpoint:
    path: /labelParameters
    method: POST
    data_selector: holdAtLocation
    params: {}
- name: packaging_type
  endpoint:
    path: /shipmentParameters
    method: POST
    data_selector: packagingType
    params: {}
- name: shipment
  endpoint:
    path: /shipment
    method: POST
    data_selector: shipmentParameters
- name: shipmentParameters
  endpoint:
    path: /shipmentParameters
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: shipmentParameters
  endpoint:
    path: /shipment
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: letter_mail
  endpoint:
    path: /shipmentParameters
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: USPS Direct
  endpoint:
    path: /usps/direct
    method: GET
- name: Sway Expedited Delivery
  endpoint:
    path: /sway/expedited/service/method
    method: GET
    data_selector: records
    params:
      carrierId: sway
      carrierServiceMethodId: sway-expedited-service-method
- name: 99minutos
  endpoint:
    path: /99minutos
    method: GET
    data_selector: service methods
    params: {}
- name: AirTerra
  endpoint:
    path: /airterra
    method: GET
    data_selector: service methods
    params: {}
- name: Amazon - Ship With Amazon (SWA)
  endpoint:
    path: /amazon/swa
    method: GET
    data_selector: service methods
    params: {}
- name: Amazon - Vendor Direct Fulfillment
  endpoint:
    path: /amazon/vdf
    method: GET
    data_selector: service methods
    params: {}
- name: AMPM
  endpoint:
    path: /ampm
    method: GET
    data_selector: service methods
    params: {}
- name: Asendia
  endpoint:
    path: /asendia
    method: GET
    data_selector: service methods
    params: {}
- name: AxleHire
  endpoint:
    path: /axlehire
    method: GET
    data_selector: service methods
    params: {}
- name: Better Trucks
  endpoint:
    path: /bettertrucks
    method: GET
    data_selector: service methods
    params: {}
- name: Canada Post
  endpoint:
    path: /canadapost
    method: GET
    data_selector: service methods
    params: {}
- name: CDL
  endpoint:
    path: /cdl
    method: GET
    data_selector: service methods
    params: {}
- name: Cirro
  endpoint:
    path: /cirro
    method: GET
    data_selector: service methods
    params: {}
- name: ClearJet
  endpoint:
    path: /clearjet
    method: GET
    data_selector: service methods
    params: {}
- name: DHL eCommerce
  endpoint:
    path: /dhl/ecommerce
    method: GET
    data_selector: service methods
    params: {}
- name: DHL Express
  endpoint:
    path: /dhl/express
    method: GET
    data_selector: service methods
    params: {}
- name: DoorDash
  endpoint:
    path: /doordash
    method: GET
    data_selector: service methods
    params: {}
- name: ECMS
  endpoint:
    path: /ecms
    method: GET
    data_selector: service methods
    params: {}
- name: eHub
  endpoint:
    path: /ehub
    method: GET
    data_selector: service methods
    params: {}
- name: Envoi
  endpoint:
    path: /services/envoi
    method: GET
    data_selector: service_methods
    params: {}
- name: ePost Global
  endpoint:
    path: /services/epostglobal
    method: GET
    data_selector: service_methods
    params: {}
- name: Estafeta
  endpoint:
    path: /services/estafeta
    method: GET
    data_selector: service_methods
    params: {}
- name: FedEx
  endpoint:
    path: /services/fedex
    method: GET
    data_selector: service_methods
    params: {}
- name: FirstMile
  endpoint:
    path: /services/firstmile
    method: GET
    data_selector: service_methods
    params: {}
- name: FlavorCloud
  endpoint:
    path: /services/flavorcloud
    method: GET
    data_selector: service_methods
    params: {}
- name: FleetOptics
  endpoint:
    path: /services/fleetoptics
    method: GET
    data_selector: service_methods
    params: {}
- name: FRONTdoor Collective
  endpoint:
    path: /services/frontdoor
    method: GET
    data_selector: service_methods
    params: {}
- name: Global-e
  endpoint:
    path: /services/global-e
    method: GET
    data_selector: service_methods
    params: {}
- name: GLS
  endpoint:
    path: /services/gls
    method: GET
    data_selector: service_methods
    params: {}
- name: GoBolt
  endpoint:
    path: /services/gobolt
    method: GET
    data_selector: service_methods
    params: {}
- name: Gori
  endpoint:
    path: /services/gori
    method: GET
    data_selector: service_methods
    params: {}
- name: Intelcom | Dragonfly
  endpoint:
    path: /services/intelcom
    method: GET
    data_selector: service_methods
    params: {}
- name: Landmark
  endpoint:
    path: /services/landmark
    method: GET
    data_selector: service_methods
    params: {}
- name: LaserShip
  endpoint:
    path: /services/lasership
    method: GET
    data_selector: service_methods
    params: {}
- name: Lone Star Overnight (LSO)
  endpoint:
    path: /services/lso
    method: GET
    data_selector: service_methods
    params: {}
- name: Meal Plan Delivery (MPD)
  endpoint:
    path: /services/mealplandelivery
    method: GET
    data_selector: service_methods
    params: {}
- name: Midland
  endpoint:
    path: /services/midland
    method: GET
    data_selector: service_methods
    params: {}
- name: Need It Now
  endpoint:
    path: /services/needitnow
    method: GET
    data_selector: service_methods
    params: {}
- name: OnTrac
  endpoint:
    path: /services/ontrac
    method: GET
    data_selector: service_methods
    params: {}
- name: OpenBorder
  endpoint:
    path: /services/openborder
    method: GET
    data_selector: service_methods
    params: {}
- name: Optima
  endpoint:
    path: /services/optima
    method: GET
    data_selector: service_methods
    params: {}
- name: Orchestro
  endpoint:
    path: /services/orchestro
    method: GET
    data_selector: service_methods
    params: {}
- name: OSM
  endpoint:
    path: /services/osm
    method: GET
    data_selector: service_methods
    params: {}
- name: Paquetexpress
  endpoint:
    path: /services/paquetexpress
    method: GET
    data_selector: service_methods
    params: {}
- name: Passport
  endpoint:
    path: /services/passport
    method: GET
    data_selector: service_methods
    params: {}
- name: Point2Point Global (P2P)
  endpoint:
    path: /services/p2p
    method: GET
    data_selector: service_methods
    params: {}
- name: Purolator E-Ship
  endpoint:
    path: /services/purolator
    method: GET
    data_selector: service_methods
    params: {}
- name: Reliable Logistics
  endpoint:
    path: /services/reliablelogistics
    method: GET
    data_selector: service_methods
    params: {}
- name: Roadie
  endpoint:
    path: /services/roadie
    method: GET
    data_selector: service_methods
    params: {}
- name: ShipX
  endpoint:
    path: /services/shipx
    method: GET
    data_selector: service_methods
    params: {}
- name: SmartKargo
  endpoint:
    path: /services/smartkargo
    method: GET
    data_selector: service_methods
    params: {}
- name: SpeedX
  endpoint:
    path: /services/speedx
    method: GET
    data_selector: service_methods
    params: {}
- name: Carrier and Method Selection & Shipment Label
  endpoint:
    path: /docs/carrier-and-method-selection-and-shipment-label-api
    method: GET
- name: Carrier and Method Selection
  endpoint:
    path: /docs/carrier-and-method-selection-api
    method: GET
- name: Shipment Label
  endpoint:
    path: /docs/shipment-label-api
    method: GET
- name: Carrier and Method Selection
  endpoint:
    path: /docs/carrier-and-method-selection-api
    method: GET
- name: Shipment Label
  endpoint:
    path: /docs/shipment-label-api
    method: GET
- name: Carrier and Method Selection
  endpoint:
    path: /carrier-and-method-selection
    method: GET
    data_selector: shipmentParameters.configurationOverrides
    params:
      maximumAdditionalDaysToHold: 3
- name: shipmentParameters
  endpoint:
    path: /shipmentParameters
    method: POST
    data_selector: payorAccounts
    params: {}
- name: Carrier Selection
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: business_days_of_transit
  endpoint:
    path: /business-days-of-transit
    method: GET
    data_selector: businessDaysOfTransit
- name: cancel_shipment
  endpoint:
    path: /api/v1/deliveryexperience/cancel
    method: POST
    data_selector: null
    params: {}
- name: carrier_failover
  endpoint:
    path: /docs/carrier-failover
    method: GET
    data_selector: carrierLabel
    params: {}
- name: customs_info
  endpoint:
    path: /customs-info
    method: GET
    data_selector: customsInfo
    params: {}
- name: customsInfo
  endpoint:
    path: /customsInfo
    method: POST
    data_selector: customsInfo
    params: {}
- name: customsItems
  endpoint:
    path: /customsItems
    method: POST
    data_selector: customsItems
    params: {}
- name: shipmentParameters
  endpoint:
    path: /docs/customs-info-api-example-definitions
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: Carrier and Method Selection & Shipment Label
  endpoint:
    path: /docs/carrier-and-method-selection-and-shipment-label-api
    method: POST
    data_selector: shipmentParameters.customsInfo
    params: {}
- name: Carrier and Method Selection
  endpoint:
    path: /docs/carrier-and-method-selection-api
    method: POST
    data_selector: customsInfo
    params: {}
- name: shipment_search
  endpoint:
    path: /api/v1/shipment/search
    method: GET
    data_selector: results
    params: {}
- name: evaluated_service_methods
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: response
    params:
      includeEvaluatedServiceMethodsInResponse: 'true'
- name: carrier_selection
  endpoint:
    path: /carrierSelection
    method: GET
    data_selector: carrierSelection
    params:
      includeEvaluatedServiceMethodsInResponse: 'true'
      includeLineItemsInEvaluatedServiceMethods: 'true'
- name: orderItems
  endpoint:
    path: /hazmat/orderItems
    method: POST
    data_selector: orderItemQuantities
- name: carrier_rates
  endpoint:
    path: /api/v2/shipment/carrierselection/label
    method: POST
    data_selector: carrierSelection
- name: hundredweight
  endpoint:
    path: /hundredweight
    method: GET
- name: Carrier and Method Selection & Shipment Labels
  endpoint:
    path: /docs/carrier-and-method-selection-and-shipment-label-api
    method: POST
    data_selector: shipmentParameters.configurationOverrides
    params:
      labelToDockDoorHours: 1.5
- name: LTL Shipment Cost
  endpoint:
    path: /docs/ltl-shipment-cost-api#determine-ltl-shipment-costing
    method: GET
    data_selector: costing
- name: LTL Shipment Cost Comparison
  endpoint:
    path: /docs/ltl-shipment-cost-compare-api#compare-ltl-shipment-and-parcel-shipping-costs
    method: GET
    data_selector: comparison
- name: manifest_shipments
  endpoint:
    path: /docs/manifest-shipments
    method: GET
    data_selector: shipments
- name: general_manifest_report
  endpoint:
    path: /generate/general_manifest_report
    method: POST
    data_selector: report
    params:
      fulfillment_center: required
      carrier: required
      date_range: required
- name: past_manifest_reports
  endpoint:
    path: /view/past_manifest_reports
    method: GET
    data_selector: reports
    params:
      fulfillment_center: required
      date_range: required
- name: multi_parcel_shipment
  endpoint:
    path: /path/to/multi-parcel/shipment
    method: POST
    data_selector: response
    params: {}
- name: carrier_selection_label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
- name: Carrier and Method Selection & Shipment Label
  endpoint:
    path: /docs/carrier-and-method-selection-and-shipment-label-api
    method: GET
    data_selector: null
    params: {}
- name: carrier_selection_label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: multiParcelShipmentParameters
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: GET
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: GET
    data_selector: shipments
- name: partial_shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: PATCH
    data_selector: INSERT REQUEST BODY FROM BELOW
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipmentId}
    method: PATCH
    data_selector: shipiumShipmentId
    params: {}
- name: carrier_selection_label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: currencyCode
    params: {}
- name: partial_shipments
  endpoint:
    path: /export/partial_shipments
    method: GET
    data_selector: shipment_data
- name: Canada Post
  endpoint:
    path: /docs/peak-and-other-carrier-surcharges#canada-post
    method: GET
    data_selector: records
    params: {}
- name: DHL
  endpoint:
    path: /docs/peak-and-other-carrier-surcharges#dhl
    method: GET
    data_selector: records
    params: {}
- name: dhl_express_surcharges
  endpoint:
    path: /dhl/express/surcharges
    method: GET
    data_selector: surcharges
- name: fedex_surcharges
  endpoint:
    path: /fedex/surcharges
    method: GET
    data_selector: surcharges
- name: gls_surcharges
  endpoint:
    path: /gls/surcharges
    method: GET
    data_selector: surcharges
- name: ontrac_surcharges
  endpoint:
    path: /ontrac/surcharges
    method: GET
    data_selector: surcharges
- name: osm_surcharges
  endpoint:
    path: /osm/surcharges
    method: GET
    data_selector: surcharges
- name: purolator_surcharges
  endpoint:
    path: /purolator/surcharges
    method: GET
    data_selector: surcharges
- name: ups_surcharges
  endpoint:
    path: /ups/surcharges
    method: GET
    data_selector: surcharges
- name: usps_surcharges
  endpoint:
    path: /usps/surcharges
    method: GET
    data_selector: surcharges
- name: perishable_items
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: shipmentParameters
    params: {}
- name: carrier_schedule_limits
  endpoint:
    path: /carrier/schedule
    method: GET
- name: shipment_count_limits
  endpoint:
    path: /shipment/count
    method: GET
- name: shipment_cost_limits
  endpoint:
    path: /shipment/cost
    method: GET
- name: cancel_shipment
  endpoint:
    path: /cancel_shipment
    method: POST
    data_selector: response
    params: {}
- name: ship_option
  endpoint:
    path: /shipment/ship-option
    method: GET
    data_selector: shipOptions
    params: {}
- name: Carrier and Method Selection with Label
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: ''
    params: {}
- name: shipment_create_from_order
  endpoint:
    path: /deliveryexperience/order/{customerOrderId}/shipment
    method: POST
- name: shipment_create
  endpoint:
    path: /deliveryexperience/shipment
    method: POST
- name: default_ship_options
  endpoint:
    path: /docs/shipium-default-ship-options
    method: GET
    data_selector: ship_options
    params: {}
- name: special_processing_properties
  endpoint:
    path: /shipment/special-processing-properties
    method: GET
    data_selector: properties
- name: carrier_service_method
  endpoint:
    path: /docs/carrier-service-method
    method: GET
    data_selector: carrierServiceMethod
    params: {}
- name: shipmentParameters
  endpoint:
    path: /shipment
    method: POST
    data_selector: payorAccounts
    params: {}
- name: specifying_payors
  endpoint:
    path: /docs/specifying-payors
    method: GET
    data_selector: payorAccounts
- name: shipments
  endpoint:
    path: /api/v1/shipments
    method: POST
    data_selector: shipmentParameters.payorAccounts
    params: {}
- name: Carrier and Method Selection & Shipment Label API
  endpoint:
    path: /api/carrier-and-method-selection-and-shipment-label
    method: POST
    data_selector: shipmentParameters
    params:
      testMode: 'true'
- name: carrier_selection
  endpoint:
    path: /carrier/selection
    method: POST
    data_selector: carrierSelection
    params: {}
- name: label_without_costing
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
    data_selector: shipmentParameters
    params:
      carrierServiceMethodAllowList: ups-ground-service-method
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label
    method: POST
- name: generate_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{returnLabelId}
    method: GET
    data_selector: ''
    params: {}
- name: void_label
  endpoint:
    path: /api/v1/deliveryexperience/cancel
    method: POST
    data_selector: ''
    params: {}
- name: void_label_with_id
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierselection/voidlabel
    method: POST
    data_selector: ''
    params: {}
- name: carrier_selection_and_label_create_update
  endpoint:
    path: /path/to/carrier_selection_and_label_create_update
    method: POST
    data_selector: data
    params: {}
- name: carrier_selection_and_label_delete
  endpoint:
    path: /path/to/carrier_selection_and_label_delete
    method: DELETE
    data_selector: data
    params: {}
- name: carrier_selection_webhook
  endpoint:
    path: /webhooks/carrier-selection
    method: POST
    data_selector: event
    params: {}
- name: Track Shipments
  endpoint:
    path: /track-shipments
    method: GET
- name: Track Non-Shipium Shipments
  endpoint:
    path: /track-non-shipium-shipments
    method: POST
- name: Use Webhooks for Tracking
  endpoint:
    path: /use-webhooks-for-tracking
    method: POST
- name: shipment_tracking
  endpoint:
    path: /shipment/tracking
    method: GET
- name: shipment_tracking_registration
  endpoint:
    path: /docs/shipment-tracking-registration-api
    method: POST
- name: shipment_file
  endpoint:
    path: /shipment_file
    method: POST
    data_selector: records
- name: shipment_file_transfer
  endpoint:
    path: /historical-shipment-data
    method: GET
    data_selector: records
- name: simulation_results
  endpoint:
    path: /simulation/results
    method: GET
- name: simulation
  endpoint:
    path: /simulation
    method: GET
    data_selector: simulation_data
- name: delivery_speed
  endpoint:
    path: /delivery-speed
    method: GET
- name: label_failovers
  endpoint:
    path: /label-failovers
    method: GET
- name: label_generation
  endpoint:
    path: /label-generation
    method: GET
- name: on_time_performance
  endpoint:
    path: /on-time-performance
    method: GET
- name: rate_shop_selections
  endpoint:
    path: /rate-shop-selections
    method: GET
- name: selected_vs_evaluated
  endpoint:
    path: /selected-vs-evaluated
    method: GET
- name: shipment_cost_breakdown
  endpoint:
    path: /shipment-cost-breakdown
    method: GET
- name: delivery_speed_ship_to_deliver
  endpoint:
    path: /api/v1/delivery-speed/ship-to-deliver
    method: GET
    data_selector: data
    params:
      label_creation_period: last_seven_weeks
- name: delivery_speed_data_export
  endpoint:
    path: /api/v1/delivery-speed/data-export
    method: GET
    data_selector: data
    params: {}
- name: Label Generation Volume & Cost
  endpoint:
    path: /label-generation-volume-cost
    method: GET
    data_selector: reports
- name: Label Generation Data Export
  endpoint:
    path: /label-generation-data-export
    method: GET
    data_selector: data
- name: On-Time Performance | Desired Delivery Date
  endpoint:
    path: /on-time-performance/desired-delivery-date
    method: GET
- name: On-Time Performance Data Export
  endpoint:
    path: /on-time-performance/data-export
    method: GET
- name: Rate Shop Selections Volume & Cost
  endpoint:
    path: /rate-shop-selections/volume-cost
    method: GET
    data_selector: data
    params: {}
- name: Rate Shop Selections Data Export
  endpoint:
    path: /rate-shop-selections/data-export
    method: GET
    data_selector: data
    params: {}
- name: selected_vs_evaluated_rates
  endpoint:
    path: /api/v1/selected_vs_evaluated_rates
    method: GET
- name: selected_vs_evaluated_data_export
  endpoint:
    path: /api/v1/selected_vs_evaluated_data_export
    method: GET
- name: shipment_cost_breakdown_dashboard
  endpoint:
    path: /shipment-cost-breakdown
    method: GET
    data_selector: reports
- name: shipment_cost_breakdown_data_export
  endpoint:
    path: /shipment-cost-breakdown/data-export
    method: GET
    data_selector: data
- name: delivery_estimate
  endpoint:
    path: /get-a-delivery-estimate
    method: GET
    data_selector: deliveryEstimate
    params: {}
- name: register_customer_order
  endpoint:
    path: /register-a-customer-order
    method: POST
    data_selector: shipiumOrderId
- name: address_validation
  endpoint:
    path: /api/v1/address/validate
    method: POST
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
    data_selector: object
- name: ping
  endpoint:
    path: /api/v1/tracking/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/tracking/ping
    method: GET
- name: Product View Delivery Estimate
  endpoint:
    path: /api/v1/deliveryexperience/productview
    method: post
- name: delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/productview
    method: POST
    data_selector: object
- name: Get Delivery Estimate
  endpoint:
    path: /api/v1/deliveryexperience/productview/{deliveryEstimateId}
    method: GET
- name: delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/productview/deliveryEstimateId
    method: GET
    data_selector: object
- name: cart_delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/cartDeliveryEstimate
    method: POST
- name: delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/cartDeliveryEstimate
    method: POST
- name: multi_cart_delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/multiCartDeliveryEstimate
    method: POST
- name: multiCartDeliveryEstimate
  endpoint:
    path: /api/v1/deliveryexperience/multiCartDeliveryEstimate
    method: POST
- name: Cart Delivery Date Estimate
  endpoint:
    path: /reference/calculatecartestimateddeliverydate
    method: POST
- name: thirdPartyBilling
  endpoint:
    path: /thirdPartyBilling
    method: GET
    data_selector: billingInfo
    params: {}
- name: Create Shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: POST
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
    data_selector: records
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
    data_selector: shipments
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
    data_selector: shipments
    params: {}
- name: thirdPartyBillingForShippingCosts
  endpoint:
    path: /thirdPartyBillingForShippingCosts
    method: GET
    data_selector: records
    params: {}
- name: thirdPartyBillingForDutiesAndTaxes
  endpoint:
    path: /thirdPartyBillingForDutiesAndTaxes
    method: GET
    data_selector: records
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: GET
    data_selector: object
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: POST
    data_selector: response
    params: {}
- name: thirdPartyBillingForShippingCosts
  endpoint:
    path: /thirdPartyBillingForShippingCosts
    method: GET
    data_selector: records
- name: thirdPartyBillingForDutiesAndTaxes
  endpoint:
    path: /thirdPartyBillingForDutiesAndTaxes
    method: GET
    data_selector: records
- name: carrierLabelCurrencyCode
  endpoint:
    path: /carrierLabelCurrencyCode
    method: GET
    data_selector: records
- name: carrierLabelPrice
  endpoint:
    path: /carrierLabelPrice
    method: GET
    data_selector: records
- name: billableWeight
  endpoint:
    path: /billableWeight
    method: GET
    data_selector: records
- name: billableCubicVolume
  endpoint:
    path: /billableCubicVolume
    method: GET
    data_selector: records
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
- name: labelExpiration
  endpoint:
    path: /labelExpiration
    method: GET
    data_selector: records
- name: labelFormat
  endpoint:
    path: /labelFormat
    method: GET
    data_selector: records
- name: labelProperties
  endpoint:
    path: /labelProperties
    method: GET
    data_selector: records
- name: labelImage
  endpoint:
    path: /labelImage
    method: GET
    data_selector: records
- name: labelUrl
  endpoint:
    path: /labelUrl
    method: GET
    data_selector: records
- name: carrierTrackingId
  endpoint:
    path: /carrierTrackingId
    method: GET
    data_selector: records
- name: carrierTrackingLink
  endpoint:
    path: /carrierTrackingLink
    method: GET
    data_selector: records
- name: packageReferenceIdentifier
  endpoint:
    path: /packageReferenceIdentifier
    method: GET
    data_selector: records
- name: shipiumPackageReferenceId
  endpoint:
    path: /shipiumPackageReferenceId
    method: GET
    data_selector: records
- name: packageScannableId
  endpoint:
    path: /packageScannableId
    method: GET
    data_selector: records
- name: carrierShipmentId
  endpoint:
    path: /carrierShipmentId
    method: GET
    data_selector: records
- name: internationalDocuments
  endpoint:
    path: /internationalDocuments
    method: GET
    data_selector: records
- name: hazardousMaterialsDocuments
  endpoint:
    path: /hazardousMaterialsDocuments
    method: GET
    data_selector: records
- name: labelFailoverOccurred
  endpoint:
    path: /labelFailoverOccurred
    method: GET
    data_selector: records
- name: trackingInfo
  endpoint:
    path: /trackingInfo
    method: GET
    data_selector: records
- name: testMode
  endpoint:
    path: /testMode
    method: GET
    data_selector: records
- name: multiParcel
  endpoint:
    path: /multiParcel
    method: GET
    data_selector: records
- name: totalCustomsValue
  endpoint:
    path: /totalCustomsValue
    method: GET
    data_selector: records
- name: totalCustomsValueCurrency
  endpoint:
    path: /totalCustomsValueCurrency
    method: GET
    data_selector: records
- name: customsDescription
  endpoint:
    path: /customsDescription
    method: GET
    data_selector: records
- name: reasonForExport
  endpoint:
    path: /reasonForExport
    method: GET
    data_selector: records
- name: invoiceDate
  endpoint:
    path: /invoiceDate
    method: GET
    data_selector: records
- name: invoiceNumber
  endpoint:
    path: /invoiceNumber
    method: GET
    data_selector: records
- name: ultimateConsigneeType
  endpoint:
    path: /ultimateConsigneeType
    method: GET
    data_selector: records
- name: aesInternalTransactionNumber
  endpoint:
    path: /aesInternalTransactionNumber
    method: GET
    data_selector: records
- name: b13AFilingOption
  endpoint:
    path: /b13AFilingOption
    method: GET
    data_selector: records
- name: exportComplianceStatement
  endpoint:
    path: /exportComplianceStatement
    method: GET
    data_selector: records
- name: permitNumber
  endpoint:
    path: /permitNumber
    method: GET
    data_selector: records
- name: customsItems
  endpoint:
    path: /customsItems
    method: GET
    data_selector: records
- name: electronicExportCommodityInformation
  endpoint:
    path: /electronicExportCommodityInformation
    method: GET
    data_selector: records
- name: desiredDeliveryDate
  endpoint:
    path: /desiredDeliveryDate
    method: GET
    data_selector: records
- name: estimatedDeliveryDate
  endpoint:
    path: /estimatedDeliveryDate
    method: GET
    data_selector: records
- name: missingRequiredLabelFields
  endpoint:
    path: /missingRequiredLabelFields
    method: GET
    data_selector: records
- name: effectiveShipDateTime
  endpoint:
    path: /effectiveShipDateTime
    method: GET
    data_selector: records
- name: thirdPartyBilling
  endpoint:
    path: /thirdPartyBilling
    method: GET
    data_selector: records
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: GET
    data_selector: shipments
- name: Get Shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipmentId}
    method: GET
    data_selector: ''
    params: {}
- name: shipment
  endpoint:
    path: /shipments
    method: GET
    data_selector: object
    params: {}
- name: shipment
  endpoint:
    path: /shipments
    method: GET
    data_selector: shipments
- name: shipment
  endpoint:
    path: /shipments
    method: GET
- name: thirdPartyBillingForShippingCosts
  endpoint:
    path: /api/v1/thirdPartyBillingForShippingCosts
    method: GET
    data_selector: billingData
    params: {}
- name: thirdPartyBillingForDutiesAndTaxes
  endpoint:
    path: /api/v1/thirdPartyBillingForDutiesAndTaxes
    method: GET
    data_selector: billingData
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipmentId
    method: GET
    data_selector: response
    params: {}
- name: thirdPartyBillingForShippingCosts
  endpoint:
    path: /thirdPartyBillingForShippingCosts
    method: GET
    data_selector: records
    params: {}
- name: thirdPartyBillingForDutiesAndTaxes
  endpoint:
    path: /thirdPartyBillingForDutiesAndTaxes
    method: GET
    data_selector: records
    params: {}
- name: carrierLabelCurrencyCode
  endpoint:
    path: /carrierLabelCurrencyCode
    method: GET
    data_selector: records
    params: {}
- name: carrierLabelPrice
  endpoint:
    path: /carrierLabelPrice
    method: GET
    data_selector: records
    params: {}
- name: billableWeight
  endpoint:
    path: /billableWeight
    method: GET
    data_selector: records
    params: {}
- name: billableCubicVolume
  endpoint:
    path: /billableCubicVolume
    method: GET
    data_selector: records
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
    params: {}
- name: labelExpiration
  endpoint:
    path: /labelExpiration
    method: GET
    data_selector: records
    params: {}
- name: labelFormat
  endpoint:
    path: /labelFormat
    method: GET
    data_selector: records
    params: {}
- name: labelProperties
  endpoint:
    path: /labelProperties
    method: GET
    data_selector: records
    params: {}
- name: labelImage
  endpoint:
    path: /labelImage
    method: GET
    data_selector: records
    params: {}
- name: labelUrl
  endpoint:
    path: /labelUrl
    method: GET
    data_selector: records
    params: {}
- name: carrierTrackingId
  endpoint:
    path: /carrierTrackingId
    method: GET
    data_selector: records
    params: {}
- name: carrierTrackingLink
  endpoint:
    path: /carrierTrackingLink
    method: GET
    data_selector: records
    params: {}
- name: packageReferenceIdentifier
  endpoint:
    path: /packageReferenceIdentifier
    method: GET
    data_selector: records
    params: {}
- name: shipiumPackageReferenceId
  endpoint:
    path: /shipiumPackageReferenceId
    method: GET
    data_selector: records
    params: {}
- name: packageScannableId
  endpoint:
    path: /packageScannableId
    method: GET
    data_selector: records
    params: {}
- name: carrierShipmentId
  endpoint:
    path: /carrierShipmentId
    method: GET
    data_selector: records
    params: {}
- name: internationalDocuments
  endpoint:
    path: /internationalDocuments
    method: GET
    data_selector: records
    params: {}
- name: hazardousMaterialsDocuments
  endpoint:
    path: /hazardousMaterialsDocuments
    method: GET
    data_selector: records
    params: {}
- name: trackingInfo
  endpoint:
    path: /trackingInfo
    method: GET
    data_selector: records
    params: {}
- name: customsInfo
  endpoint:
    path: /customsInfo
    method: GET
    data_selector: records
    params: {}
- name: cancel_shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipmentId}
    method: DELETE
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: GET
    data_selector: object
    params: {}
- name: shipment
  endpoint:
    path: /v1/shipment
    method: POST
    data_selector: object
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
    data_selector: object
- name: third_party_billing
  endpoint:
    path: /thirdPartyBilling
    method: GET
    data_selector: records
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipmentId
    method: DELETE
    data_selector: shipment
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
    data_selector: shipments
- name: thirdPartyBillingForShippingCosts
  endpoint:
    path: /thirdPartyBillingForShippingCosts
    method: GET
    data_selector: boolean
- name: thirdPartyBillingForDutiesAndTaxes
  endpoint:
    path: /thirdPartyBillingForDutiesAndTaxes
    method: GET
    data_selector: boolean
- name: carrierLabelCurrencyCode
  endpoint:
    path: /carrierLabelCurrencyCode
    method: GET
    data_selector: string
- name: carrierLabelPrice
  endpoint:
    path: /carrierLabelPrice
    method: GET
    data_selector: float
- name: billableWeight
  endpoint:
    path: /billableWeight
    method: GET
    data_selector: object
- name: billableCubicVolume
  endpoint:
    path: /billableCubicVolume
    method: GET
    data_selector: object
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: array of objects
- name: labelExpiration
  endpoint:
    path: /labelExpiration
    method: GET
    data_selector: date-time
- name: labelFormat
  endpoint:
    path: /labelFormat
    method: GET
    data_selector: string
- name: labelProperties
  endpoint:
    path: /labelProperties
    method: GET
    data_selector: object
- name: labelImage
  endpoint:
    path: /labelImage
    method: GET
    data_selector: object
- name: labelUrl
  endpoint:
    path: /labelUrl
    method: GET
    data_selector: string
- name: carrierTrackingId
  endpoint:
    path: /carrierTrackingId
    method: GET
    data_selector: string
- name: carrierTrackingLink
  endpoint:
    path: /carrierTrackingLink
    method: GET
    data_selector: string
- name: packageReferenceIdentifier
  endpoint:
    path: /packageReferenceIdentifier
    method: GET
    data_selector: string
- name: shipiumPackageReferenceId
  endpoint:
    path: /shipiumPackageReferenceId
    method: GET
    data_selector: string
- name: packageScannableId
  endpoint:
    path: /packageScannableId
    method: GET
    data_selector: string
- name: carrierShipmentId
  endpoint:
    path: /carrierShipmentId
    method: GET
    data_selector: string
- name: internationalDocuments
  endpoint:
    path: /internationalDocuments
    method: GET
    data_selector: array of objects
- name: hazardousMaterialsDocuments
  endpoint:
    path: /hazardousMaterialsDocuments
    method: GET
    data_selector: array of objects
- name: labelFailoverOccurred
  endpoint:
    path: /labelFailoverOccurred
    method: GET
    data_selector: boolean
- name: trackingInfo
  endpoint:
    path: /trackingInfo
    method: GET
    data_selector: object
- name: testMode
  endpoint:
    path: /testMode
    method: GET
    data_selector: boolean
- name: failureType
  endpoint:
    path: /failureType
    method: GET
    data_selector: string
- name: multiParcel
  endpoint:
    path: /multiParcel
    method: GET
    data_selector: boolean
- name: customsInfo
  endpoint:
    path: /customsInfo
    method: GET
    data_selector: object
- name: totalCustomsValue
  endpoint:
    path: /totalCustomsValue
    method: GET
    data_selector: float
- name: totalCustomsValueCurrency
  endpoint:
    path: /totalCustomsValueCurrency
    method: GET
    data_selector: string
- name: customsDescription
  endpoint:
    path: /customsDescription
    method: GET
    data_selector: string
- name: reasonForExport
  endpoint:
    path: /reasonForExport
    method: GET
    data_selector: string
- name: invoiceDate
  endpoint:
    path: /invoiceDate
    method: GET
    data_selector: date
- name: invoiceNumber
  endpoint:
    path: /invoiceNumber
    method: GET
    data_selector: string
- name: europeanUnionInfo
  endpoint:
    path: /europeanUnionInfo
    method: GET
    data_selector: object
- name: ultimateConsigneeAddress
  endpoint:
    path: /ultimateConsigneeAddress
    method: GET
    data_selector: object
- name: ultimateConsigneeType
  endpoint:
    path: /ultimateConsigneeType
    method: GET
    data_selector: string
- name: aesInternalTransactionNumber
  endpoint:
    path: /aesInternalTransactionNumber
    method: GET
    data_selector: string
- name: electronicExportInformation
  endpoint:
    path: /electronicExportInformation
    method: GET
    data_selector: object
- name: b13AFilingOption
  endpoint:
    path: /b13AFilingOption
    method: GET
    data_selector: string
- name: exportComplianceStatement
  endpoint:
    path: /exportComplianceStatement
    method: GET
    data_selector: string
- name: permitNumber
  endpoint:
    path: /permitNumber
    method: GET
    data_selector: string
- name: customsItems
  endpoint:
    path: /customsItems
    method: GET
    data_selector: array of objects
- name: customsValue
  endpoint:
    path: /customsValue
    method: GET
    data_selector: float
- name: customsValueCurrency
  endpoint:
    path: /customsValueCurrency
    method: GET
    data_selector: string
- name: commodityDescription
  endpoint:
    path: /commodityDescription
    method: GET
    data_selector: string
- name: countryOfManufacture
  endpoint:
    path: /countryOfManufacture
    method: GET
    data_selector: string
- name: customsWeight
  endpoint:
    path: /customsWeight
    method: GET
    data_selector: object
- name: quantity
  endpoint:
    path: /quantity
    method: GET
    data_selector: int32
- name: productId
  endpoint:
    path: /productId
    method: GET
    data_selector: string
- name: quantityUnitOfMeasurement
  endpoint:
    path: /quantityUnitOfMeasurement
    method: GET
    data_selector: string
- name: harmonizedTariffNumber
  endpoint:
    path: /harmonizedTariffNumber
    method: GET
    data_selector: string
- name: commodityPartNumber
  endpoint:
    path: /commodityPartNumber
    method: GET
    data_selector: string
- name: marksAndNumbers
  endpoint:
    path: /marksAndNumbers
    method: GET
    data_selector: string
- name: electronicExportCommodityInformation
  endpoint:
    path: /electronicExportCommodityInformation
    method: GET
    data_selector: object
- name: b13AFilingOption
  endpoint:
    path: /b13AFilingOption
    method: GET
    data_selector: string
- name: exportComplianceStatement
  endpoint:
    path: /exportComplianceStatement
    method: GET
    data_selector: string
- name: incoterm
  endpoint:
    path: /incoterm
    method: GET
    data_selector: string
- name: taxIdentificationNumber
  endpoint:
    path: /taxIdentificationNumber
    method: GET
    data_selector: string
- name: importerOfRecord
  endpoint:
    path: /importerOfRecord
    method: GET
    data_selector: object
- name: brokers
  endpoint:
    path: /brokers
    method: GET
    data_selector: array of objects
- name: totalDeclaredValue
  endpoint:
    path: /totalDeclaredValue
    method: GET
    data_selector: object
- name: declaredValue
  endpoint:
    path: /declaredValue
    method: GET
    data_selector: float
- name: currencyCode
  endpoint:
    path: /currencyCode
    method: GET
    data_selector: string
- name: saturdayDelivery
  endpoint:
    path: /saturdayDelivery
    method: GET
    data_selector: boolean
- name: deliverySignatureOption
  endpoint:
    path: /deliverySignatureOption
    method: GET
    data_selector: string
- name: lastMileDeliveryOptions
  endpoint:
    path: /lastMileDeliveryOptions
    method: GET
    data_selector: object
- name: deliveryInstruction
  endpoint:
    path: /deliveryInstruction
    method: GET
    data_selector: string
- name: undeliverableInstruction
  endpoint:
    path: /undeliverableInstruction
    method: GET
    data_selector: string
- name: tip
  endpoint:
    path: /tip
    method: GET
    data_selector: object
- name: deliverableActionForLabelCreate
  endpoint:
    path: /deliverableActionForLabelCreate
    method: GET
    data_selector: string
- name: undeliverableActionForLabelCreate
  endpoint:
    path: /undeliverableActionForLabelCreate
    method: GET
    data_selector: string
- name: deliveryWindow
  endpoint:
    path: /deliveryWindow
    method: GET
    data_selector: object
- name: pickupWindow
  endpoint:
    path: /pickupWindow
    method: GET
    data_selector: object
- name: deliveryNote
  endpoint:
    path: /deliveryNote
    method: GET
    data_selector: string
- name: requestThirdPartyBillingSetId
  endpoint:
    path: /requestThirdPartyBillingSetId
    method: GET
    data_selector: string
- name: shipiumThirdPartyBillingSetId
  endpoint:
    path: /shipiumThirdPartyBillingSetId
    method: GET
    data_selector: string
- name: partnerThirdPartyBillingSetId
  endpoint:
    path: /partnerThirdPartyBillingSetId
    method: GET
    data_selector: string
- name: forceThirdPartyBilling
  endpoint:
    path: /forceThirdPartyBilling
    method: GET
    data_selector: boolean
- name: referenceIdentifier
  endpoint:
    path: /referenceIdentifier
    method: GET
    data_selector: string
- name: purchaseOrderIdentifier
  endpoint:
    path: /purchaseOrderIdentifier
    method: GET
    data_selector: string
- name: partnerReferenceIdentifier
  endpoint:
    path: /partnerReferenceIdentifier
    method: GET
    data_selector: string
- name: carrierProcessingId
  endpoint:
    path: /carrierProcessingId
    method: GET
    data_selector: string
- name: fulfillmentContext
  endpoint:
    path: /fulfillmentContext
    method: GET
    data_selector: string
- name: requestTenantId
  endpoint:
    path: /requestTenantId
    method: GET
    data_selector: string
- name: shipiumTenantId
  endpoint:
    path: /shipiumTenantId
    method: GET
    data_selector: string
- name: partnerTenantId
  endpoint:
    path: /partnerTenantId
    method: GET
    data_selector: string
- name: createdWithVersion
  endpoint:
    path: /createdWithVersion
    method: GET
    data_selector: string
- name: shipmentProperties
  endpoint:
    path: /shipmentProperties
    method: GET
    data_selector: array of strings
- name: testMode
  endpoint:
    path: /testMode
    method: GET
    data_selector: boolean
- name: orderSourceName
  endpoint:
    path: /orderSourceName
    method: GET
    data_selector: string
- name: thirdPartyBillingAccounts
  endpoint:
    path: /thirdPartyBillingAccounts
    method: GET
    data_selector: array of objects
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: POST
    data_selector: object
    params: {}
- name: thirdPartyBilling
  endpoint:
    path: /thirdPartyBilling
    method: GET
    data_selector: documents
- name: update_shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipmentId}
    method: PATCH
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: POST
    data_selector: shipments
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
    data_selector: object
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment
    method: GET
    data_selector: object
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipmentId
    method: PATCH
    data_selector: response
- name: third_party_billing
  endpoint:
    path: /api/v1/thirdPartyBilling
    method: GET
    data_selector: records
    params: {}
- name: thirdPartyBillingAccount
  endpoint:
    path: /thirdPartyBillingAccount
    method: GET
    data_selector: accounts
- name: all_in_one_cancel
  endpoint:
    path: /api/v1/deliveryexperience/cancel
    method: POST
    data_selector: responses
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
    data_selector: shipment
    params: {}
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: GET
- name: shipment
  endpoint:
    path: /v1/shipments
    method: POST
    data_selector: shipments
    params: {}
- name: thirdPartyBillingForShippingCosts
  endpoint:
    path: /thirdPartyBillingForShippingCosts
    method: GET
    data_selector: billingCosts
- name: thirdPartyBillingForDutiesAndTaxes
  endpoint:
    path: /thirdPartyBillingForDutiesAndTaxes
    method: GET
    data_selector: billingDuties
- name: carrierLabelCurrencyCode
  endpoint:
    path: /carrierLabelCurrencyCode
    method: GET
    data_selector: currencyCode
- name: carrierLabelPrice
  endpoint:
    path: /carrierLabelPrice
    method: GET
    data_selector: labelPrice
- name: billableWeight
  endpoint:
    path: /billableWeight
    method: GET
    data_selector: weight
- name: billableCubicVolume
  endpoint:
    path: /billableCubicVolume
    method: GET
    data_selector: cubicVolume
- name: shipment
  endpoint:
    path: /shipments
    method: GET
    data_selector: shipments
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/cancel
    method: POST
    data_selector: response
    params: {}
- name: thirdPartyBillingForShippingCosts
  endpoint:
    path: /thirdPartyBilling/forShippingCosts
    method: GET
    data_selector: records
- name: thirdPartyBillingForDutiesAndTaxes
  endpoint:
    path: /thirdPartyBilling/forDutiesAndTaxes
    method: GET
    data_selector: records
- name: carrierLabelCurrencyCode
  endpoint:
    path: /carrierLabel/currencyCode
    method: GET
    data_selector: records
- name: carrierLabelPrice
  endpoint:
    path: /carrierLabel/price
    method: GET
    data_selector: records
- name: packageReferenceIdentifier
  endpoint:
    path: /package/referenceIdentifier
    method: GET
    data_selector: records
- name: shippingCosts
  endpoint:
    path: /shipping/costs
    method: GET
    data_selector: records
- name: shipment_events
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipmentId}/events
    method: GET
- name: shipmentPlanning
  endpoint:
    path: /api/v1/deliveryexperience/shipmentPlanning
    method: POST
    data_selector: shipmentPlanningId
- name: shipmentPlanning
  endpoint:
    path: /deliveryexperience/shipmentPlanning
    method: POST
    data_selector: object
- name: create_order
  endpoint:
    path: /api/v1/deliveryexperience/order
    method: POST
- name: order
  endpoint:
    path: /api/v1/deliveryexperience/order
    method: POST
- name: retrieve_order
  endpoint:
    path: /api/v1/deliveryexperience/order/{orderId}
    method: GET
- name: order
  endpoint:
    path: /api/v1/deliveryexperience/order/orderId
    method: GET
    data_selector: object
- name: update_order
  endpoint:
    path: /api/v1/deliveryexperience/order/{orderId}
    method: POST
- name: order
  endpoint:
    path: /api/v1/deliveryexperience/order
    method: POST
- name: shipment
  endpoint:
    path: /api/v1/shipment
    method: POST
- name: tracking
  endpoint:
    path: /api/v1/tracking
    method: POST
- name: search_orders
  endpoint:
    path: /api/v1/deliveryexperience/order/search
    method: GET
    data_selector: results
    params: {}
- name: order_search
  endpoint:
    path: /api/v1/deliveryexperience/order/search
    method: GET
    data_selector: array of objects
- name: create_order
  endpoint:
    path: /api/v1/createorderv1
    method: POST
- name: get_order
  endpoint:
    path: /api/v1/getorderv1
    method: GET
- name: update_order
  endpoint:
    path: /api/v1/updateorderv1
    method: POST
- name: delete_order
  endpoint:
    path: /api/v1/deleteorderv1
    method: DELETE
- name: shipments
  endpoint:
    path: /shipments
    method: GET
    data_selector: shipments
- name: mega_shipment_process
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
- name: carrier_selection
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
- name: search_orders
  endpoint:
    path: /reference/searchordersv1
    method: GET
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection
    method: POST
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipiumShipmentId/carrierSelection
    method: POST
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}
    method: GET
- name: cancel_carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipmentId}/carrierSelection/{carrierSelectionId}
    method: DELETE
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipmentId/carrierSelection/carrierSelectionId
    method: DELETE
- name: getLabelShortcut
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}
    method: GET
    data_selector: metadata
- name: manifest_label_shortcut
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}/manifest
    method: POST
- name: carrier_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}/pdf
    method: GET
- name: carrier_selection_label_png
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/shipiumLabelId/png
    method: GET
- name: png_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}/png
    method: GET
    data_selector: object
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}/zpl
    method: GET
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label
    method: POST
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label
    method: POST
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: tracking
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: shipment_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}
    method: GET
- name: patch_shipment_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}
    method: PATCH
- name: manifest_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/manifest
    method: POST
- name: streams_pdf_carrier_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/pdf
    method: GET
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipiumShipmentId/carrierSelection/carrierSelectionId/label/shipiumLabelId/png
    method: GET
- name: png_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/png
    method: GET
- name: zpl_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/zpl
    method: GET
- name: void_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/void
    method: POST
- name: shipment
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/void
    method: POST
    data_selector: object
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
    data_selector: object
- name: void_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/voidLabel
    method: POST
- name: batch_label_import
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/batchLabelImport
    method: POST
- name: carrier_label_pdf
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}/pdf/
    method: GET
- name: png_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}/png/
    method: GET
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/shipiumLabelId/png/
    method: GET
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}/zpl/
    method: GET
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/shipiumLabelId/zpl/
    method: GET
    data_selector: metadata
    params: {}
- name: shipment_labels
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/labels
    method: GET
- name: end_of_day_manifest
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/labels/endOfDayManifest
    method: PUT
- name: update_carrier_labels
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/labels/manifest/metadata
    method: PUT
- name: update_label_cost
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/cost
    method: PUT
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipiumShipmentId/carrierSelection/carrierSelectionId/label/shipiumLabelId/pdf/
    method: GET
- name: pdf_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/pdf/
    method: GET
- name: png_label
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/png/
    method: GET
- name: retrieve_shipium_details
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/shipiumDetails
    method: GET
- name: retrieve_shipium_details
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipiumShipmentId/carrierSelection/carrierSelectionId/label/shipiumLabelId/zpl/
    method: GET
    data_selector: string
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection/{carrierSelectionId}/label/{shipiumLabelId}/zpl/
    method: GET
    data_selector: object
- name: label_import
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipmentId}/carrierSelection/{carrierSelectionId}/labelImport
    method: POST
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipmentId/carrierSelection/carrierSelectionId/labelImport
    method: POST
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: ltl_shipment_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost
    method: GET
    params: {}
- name: ltl_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost
    method: GET
- name: ltl_shipment_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost
    method: POST
- name: ltl_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost/ltlCostId
    method: GET
    data_selector: object
- name: ltl_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost/{ltlCostId}
    method: GET
- name: ltl_cost_comparison
  endpoint:
    path: /api/v1/ltl/shipment/costCompare
    method: GET
- name: shipment_cost_compare
  endpoint:
    path: /api/v1/ltl/shipment/costCompare
    method: POST
- name: ltl_shipment_cost
  endpoint:
    path: /api/v1/ltl/shipment/costCompare/{ltlCostId}
    method: GET
- name: manifest_by_carrier
  endpoint:
    path: /api/v1/manifest/carrier
    method: POST
    data_selector: carrierIds
- name: ltl_shipment_cost
  endpoint:
    path: /ltl-shipment-cost
    method: GET
- name: manifest_shipments
  endpoint:
    path: /api/v2/manifest/carrier
    method: POST
- name: manifest
  endpoint:
    path: /manifest/carrier
    method: POST
- name: download_manifest
  endpoint:
    path: /api/v2/manifest/download
    method: POST
- name: return_label_generation
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label
    method: POST
    data_selector: object
    params: {}
- name: customer_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label
    method: POST
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: returns_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}
    method: GET
    data_selector: metadata
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}/pdf
    method: GET
- name: returns_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/shipiumCustomerReturnLabelId/pdf
    method: GET
    data_selector: string
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}/png
    method: GET
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/shipiumCustomerReturnLabelId/png
    method: GET
    data_selector: string
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}/zpl
    method: GET
- name: void_customer_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}/void
    method: GET
- name: void_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/voidLabel
    method: POST
- name: returns_void_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/voidLabel
    method: POST
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}/pdf/
    method: GET
- name: customer_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/shipiumCustomerReturnLabelId/pdf/
    method: GET
    data_selector: string
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}/png/
    method: GET
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/shipiumCustomerReturnLabelId/png/
    method: GET
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/{shipiumCustomerReturnLabelId}/zpl/
    method: GET
- name: return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label/shipiumCustomerReturnLabelId/zpl/
    method: GET
- name: packaging_planner
  endpoint:
    path: /api/v1/packaging/planner
    method: POST
- name: packaging_planner
  endpoint:
    path: /api/v1/packaging/planner
    method: POST
- name: track
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: tracking
  endpoint:
    path: /api/v1/tracking/shipiumTrackingId
    method: GET
    params:
      excludeEvents: 'true'
- name: tracking
  endpoint:
    path: /api/v1/tracking/{shipiumTrackingId}
    method: GET
    data_selector: object
    params:
      excludeEvents: 'true'
- name: tracking
  endpoint:
    path: /api/v1/tracking/carrier/{carrierId}/{carrierTrackingId}
    method: GET
    data_selector: object
    params:
      excludeEvents: 'true'
- name: tracking_by_shipium_tracking_id
  endpoint:
    path: /api/v1/tracking/carrier/carrierId/carrierTrackingId
    method: GET
- name: bulk_tracking_by_shipium_tracking_ids
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: bulk_tracking_search
  endpoint:
    path: /api/v1/tracking/bulkTrackingSearch
    method: POST
- name: tracking
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: tracking
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
    data_selector: trackings
- name: bulkPartnerShipmentIdSearch
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
    data_selector: trackings
- name: tracking
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: tracking_registration
  endpoint:
    path: /api/v1/tracking/register
    method: POST
- name: tracking
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: tracking_registration
  endpoint:
    path: /api/v1/tracking/register
    method: POST
- name: tracking_registration
  endpoint:
    path: /api/v1/tracking/bulkRegister
    method: POST
- name: tracking_registration
  endpoint:
    path: /api/v1/tracking/bulkRegister
    method: POST
    data_selector: trackingRegistrations
    params: {}
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order
    method: POST
- name: search_existing_orders
  endpoint:
    path: /reference/searchpackshiporderorchestrationv1
    method: GET
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order
    method: POST
- name: search_existing_orders
  endpoint:
    path: /api/v1/packShip/order
    method: GET
- name: get_existing_order
  endpoint:
    path: /api/v1/packShip/order
    method: GET
- name: cancel_existing_order
  endpoint:
    path: /api/v1/packShip/order
    method: DELETE
- name: update_order_to_be_packed
  endpoint:
    path: /api/v1/packShip/order
    method: PATCH
- name: pack_and_ship_order
  endpoint:
    path: /api/v1/packShip/order
    method: POST
- name: search_orders
  endpoint:
    path: /api/v1/packShip/order
    method: GET
    params: {}
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order
    method: GET
- name: search_orders
  endpoint:
    path: /api/v1/search/orders
    method: GET
- name: order
  endpoint:
    path: /api/v1/packShip/order/{orderId}
    method: GET
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order/orderId
    method: GET
- name: search_existing_orders
  endpoint:
    path: /api/v1/search/orders
    method: GET
- name: cancel_existing_order
  endpoint:
    path: /api/v1/cancel/order
    method: DELETE
- name: create_order
  endpoint:
    path: /api/v1/create/order
    method: POST
- name: cancel_order
  endpoint:
    path: /api/v1/packShip/order/{orderId}
    method: DELETE
    params: {}
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order
    method: GET
- name: search_orders
  endpoint:
    path: /api/v1/search/orders
    method: GET
- name: create_order
  endpoint:
    path: /api/v1/create/packShip/order
    method: POST
- name: update_order
  endpoint:
    path: /api/v1/update/packShip/order
    method: PATCH
- name: cancel_order
  endpoint:
    path: /api/v1/cancel/packShip/order
    method: DELETE
- name: update_order
  endpoint:
    path: /api/v1/packShip/order/{orderId}
    method: PATCH
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order/orderId
    method: PATCH
- name: search_existing_orders
  endpoint:
    path: /api/v1/search/orders
    method: GET
- name: create_order
  endpoint:
    path: /api/v1/create/order
    method: POST
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order/{orderId}/submit
    method: POST
- name: packShipOrder
  endpoint:
    path: /api/v1/packShip/order/orderId/submit
    method: POST
    data_selector: response
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
    data_selector: response
- name: ping
  endpoint:
    path: /api/v1/packShip/ping
    method: GET
    data_selector: status
- name: ping
  endpoint:
    path: /api/v1/packaging/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/packaging/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
    data_selector: object
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/shipment/bulkprocessing/ping
    method: GET
    data_selector: info
- name: ping
  endpoint:
    path: /api/v1/shipment/bulkprocessing/ping
    method: GET
    data_selector: object
- name: ping
  endpoint:
    path: /api/v1/deliveryexperience/ping
    method: GET
    data_selector: object
- name: ping
  endpoint:
    path: /deliveryexperience/ping
    method: GET
    data_selector: object
- name: Product View Delivery Estimate
  endpoint:
    path: /api/v1/deliveryexperience/productview
    method: POST
- name: delivery_estimate
  endpoint:
    path: /api/v1/deliveryexperience/productview
    method: POST
    data_selector: object
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: shipmentPlanning
  endpoint:
    path: /api/v1/deliveryexperience/shipmentPlanning
    method: POST
    data_selector: object
- name: shipmentPlanning
  endpoint:
    path: /api/v1/deliveryexperience/shipmentPlanning
    method: POST
- name: create_order
  endpoint:
    path: /api/v1/deliveryexperience/order
    method: POST
- name: order
  endpoint:
    path: /api/v1/deliveryexperience/order
    method: POST
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
- name: shipment
  endpoint:
    path: /shipments
    method: GET
    data_selector: shipments
- name: mega_shipment_process
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
- name: carrier_selection
  endpoint:
    path: /api/v1/shipment/carrierselection/label
    method: POST
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/shipiumShipmentId/carrierSelection
    method: POST
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/{shipiumShipmentId}/carrierSelection
    method: POST
- name: label_generation
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/{shipiumLabelId}
    method: GET
    data_selector: object
    params:
      includeLabelImagesInResponse: true
- name: carrier_selection
  endpoint:
    path: /api/v1/deliveryexperience/shipment/carrierSelection/label/shipiumLabelId
    method: GET
    data_selector: object
    params:
      includeLabelImagesInResponse: 'true'
- name: ltl_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost
    method: GET
    data_selector: array of objects
- name: ltl_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost
    method: GET
    params: {}
- name: manifest_shipments
  endpoint:
    path: /api/v1/manifest/carrier
    method: POST
    data_selector: response
    params:
      carrierIds: array of strings
- name: ltl_shipment_cost
  endpoint:
    path: /api/v1/ltl/shipment/cost
    method: GET
- name: manifest_by_carrier
  endpoint:
    path: /api/v2/manifest/carrier
    method: POST
- name: manifest
  endpoint:
    path: /manifest/carrier
    method: POST
- name: download_manifest
  endpoint:
    path: /downloadmanifestbycarrier
    method: POST
- name: return_label_generation
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label
    method: POST
- name: customer_return_label
  endpoint:
    path: /api/v1/deliveryexperience/customerreturn/label
    method: POST
    data_selector: object
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
    data_selector: object
- name: packaging_planner
  endpoint:
    path: /api/v1/packaging/planner
    method: POST
- name: packaging_planner
  endpoint:
    path: /api/v1/packaging/planner
    method: POST
- name: track
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: tracking
  endpoint:
    path: /api/v1/tracking/{shipiumTrackingId}
    method: GET
    data_selector: object
    params:
      excludeEvents: 'true'
- name: tracking
  endpoint:
    path: /api/v1/tracking/{shipiumTrackingId}
    method: GET
    data_selector: object
- name: tracking_registration
  endpoint:
    path: /api/v1/tracking/register
    method: POST
    data_selector: object
    params: {}
- name: tracking_registration
  endpoint:
    path: /api/v1/tracking/register
    method: POST
- name: bulk_search_tracking
  endpoint:
    path: /api/v1/tracking/bulkPartnerShipmentIdSearch
    method: POST
- name: bulk_register_tracking
  endpoint:
    path: /api/v1/tracking/bulkregistertracking_1
    method: POST
- name: get_tracking_by_carrier_id_and_carrier_tracking_id
  endpoint:
    path: /api/v1/tracking
    method: GET
- name: address_validation
  endpoint:
    path: /api/v1/address/validate
    method: POST
- name: address_validation
  endpoint:
    path: /address/validate
    method: POST
    data_selector: object
    params: {}
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order
    method: POST
- name: pack_ship_order
  endpoint:
    path: /api/v1/packShip/order
    method: POST
- name: search_existing_orders
  endpoint:
    path: /reference/searchpackshiporderorchestrationv1
    method: GET
- name: ping
  endpoint:
    path: /api/v1/packaging/ping
    method: GET
- name: ping
  endpoint:
    path: /api/v1/packaging/ping
    method: GET
    data_selector: object
    params: {}
- name: bulk_processing_orchestration
  endpoint:
    path: /api/v1/shipment/bulkprocessing/labels
    method: POST
- name: ping
  endpoint:
    path: /api/v1/ping
    method: GET
notes:
- Uses OAuth2 or API Key for authentication
- Shipium provides an enterprise shipping platform for modern ecommerce operations.
- Removing a user is permanent
- API keys are persistent and remain valid until deactivated.
- Basic Auth uses a colon to separate username and password.
- OAuth 2.0 clients are not persistent, and their access tokens must be refreshed
  periodically.
- Shipium supports custom SSO configuration
- 'To configure SSO for your organization''s account users, you''ll need to provide
  the following values to Shipium''s IT team: Sign-in URL, Sign-out URL, X.509 signing
  certificate, Email address attribute (optional).'
- Shipium supports single sign-on (SSO) using Azure as your SAML identity provider.
- Shipium supports single sign-on (SSO) using Okta as your SAML identity provider.
- AWS discourages the use of certificate pinning.
- If Test Mode is set to False, then you will be getting production labels.
- If Test Mode is set to True, you will get test labels that do not charge your organization
  money and are not valid for shipping.
- Make sure label changes are approved
- Some carriers will require an annual recertification if you are making modifications
- Tenant configuration allows for specific rulesets for managing individual shippers.
- An origin is required for a valid fulfillment context.
- To use a fulfillment context, you must establish an origin for it.
- Carrier account required to establish rates
- You must have a carrier account configured before you can configure carrier rates
  for the carrier contract.
- A valid fulfillment context requires a carrier contract to be associated with it.
- Label configuration is optional for a fulfillment context.
- Carrier contract required for injection site
- Shipment lanes require a schedule by day of week.
- A ZIP code can only be configured for one partnerLaneId per carrier service method.
- SSO configuration is the first step
- If you're trying to print labels from a company-managed computer, you may need to
  work with your company's IT team to get the QZ Tray software installed and configured
  on your fulfillment center's workstations.
- During your shipment search, if a date range is not provided, the search includes
  shipments from the previous 24 hours.
- Can retrieve a 6-week range of data dating back as far as 100 days
- Request authentication is via OAuth 2.0 using the authorization request header or
  authorization URL parameter.
- Uses OAuth2 with refresh token — requires setup of connected app in Batch Label
  Creation API
- Uses REST API for batch label creation
- Requires setup of connected app in API
- Ensure that the correct permissions are set for the API access.
- Requires setup of connected app in the API
- May return nulls in deeply nested fields
- API rate limits apply
- Ensure correct label format is requested
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Ensure proper setup of OAuth2 credentials for authentication.
- The request body is empty for this call.
- Test mode is enabled.
- Multi-parcel shipment is not supported.
- Indicates that this shipment is marked for Saturday delivery; does not guarantee
  delivery on Saturday.
- These APIs can modify elements of your organization's network fulfillment configuration
  in ways that could negatively impact the production of your fulfillment operations.
- This API can modify elements of your organization's network fulfillment configuration
  in ways that could negatively impact the production of your fulfillment operations.
- Uses OAuth2 for authentication.
- Orders will be processed into proposed shipments based on the order in which they
  are listed in the API call.
- The timestamp must be a valid ISO 8601 timestamp.
- 'Required path element: ltlCostId'
- API requires setup of connected app in Shipium
- Some endpoints may have rate limits
- Include packagingSetId value in API call.
- Defaults to including dimensional details in the response.
- Including testMode = 'true' in your call enables generation of labels for testing
  purposes.
- As with all Shipium API responses, this API follows the API Response Codes standards
  unless otherwise specified.
- Uses various optional parameters for shipment planning.
- You're limited to no more than 100 tracking numbers within a single request.
- Shipium retains the partnerShipmentId value for 100 days.
- Bulk tracking registration is limited to registering 100 tracking IDs at a time.
- Shipium recommends a hierarchy that selects the Shipium calculated TNT values.
- If you have questions about your TNT configuration or wish to make adjustments,
  please reach out to your Shipium Implementation or Customer Success team member.
- Fulfillment context must have at least one origin and one carrier contract associated
  with it.
- All API calls for Amazon - Vendor Direct Fulfillment must have test mode set to
  a value of 'false', as Vendor Direct Fulfillment does not support test mode.
- Supports single-parcel and multi-parcel shipments.
- Address requirements vary by carrier.
- Ensure you have provided required credentials to ship with AMPM.
- You must configure credentials in the Shipium Console.
- Prior to shipping with Canada Post, you must configure credentials in the Shipium
  Console.
- Ensure you have provided required credentials to ship with Cirro.
- You'll provide a user name and API key for production and test mode.
- In addition to providing credentials for your Envoi account, you also must work
  with your Envoi carrier representative to configure three packaging attributes for
  successful integration with the Shipium system.
- Ensure you have provided required credentials to ship with Estafeta.
- For single-parcel shipments, the customsDescription field is required.
- Ensure your FedEx account is registered and verified, and create FedEx shipping
  labels.
- Ensure you have provided required credentials to ship with LaserShip.
- You must include three required fields as part of the shipmentParameters.
- OpenBorder requires that you include either the product SKU number or the order
  number from OpenBorder in your API call.
- Prior to shipping with Paquetexpress, you must configure credentials in the Shipium
  Console.
- UPS launched its OAuth 2.0 security model for all APIs to enhance the overall security
  of its applications.
- All new UPS shipping accounts must be created and authorized and follow the OAuth
  2.0 protocol.
- Uses USPS's Ground Advantage service method for certain conditions.
- Maximum weight for letter mail is 3.5 ounces.
- A USPS business account is required to use the USPS Direct service methods.
- You must provide either an account number OR a permit number and permit ZIP.
- Shipment data stored in the Shipium Console for 100 days
- Before starting to use the APIs for carrier and method selection, your organization
  must set up one or more carriers and associated shipment methods.
- If your organization includes third party billing in your call to the Shipium API
  but no third party billing is set up for your Fulfillment Context, you'll receive
  a 404 error message.
- Third party billing carrier contract must be set up in your fulfillment context
- Your third party billing account must be set up before calling the APIs
- If third party billing is configured in the Shipium Console, any values included
  in the payorAccounts array will override configurations in the console.
- BPM information is provided within shipments as part of the orderItemQuantities
  field.
- Business days refers to Monday through Friday weekdays and does not include holidays.
- This feature should be used with great care. If configured and triggered, it will
  mean that Shipium is choosing to USE A MORE EXPENSIVE CARRIER if there is a failure
  on this carrier's part.
- Provide customs details about your package in your API calls.
- API call value overrides console configuration
- The consignee tax ID is required when shipping to certain countries
- When the guaranteedDateDelivery field value is set to TRUE, all carriers and service
  methods that do not support guaranteed date delivery will be filtered out and not
  considered during carrier selection.
- You can conduct a shipment search that returns the service methods that were evaluated
  but not selected.
- To enable UPS's hundredweight designation to be passed in your calls to Shipium's
  APIs, you must configure your account accordingly.
- Fulfillment center needed for scheduled manifesting
- Multi-parcel shipments are supported for various carriers including FedEx, FlavorCloud,
  Global-e, Midland, Uber, and UPS in the U.S. and Canada.
- Multi-parcel shipment support
- Test mode enabled
- Uses a test mode for API calls
- You can opt to include partial shipments in your shipment reporting.
- Creating shipments in a multi-step process might be of benefit to your organization.
- The fields for packagingTypeId and linearDimensions are mutually exclusive; including
  both will result in an error.
- Perishable items are prone to becoming unsafe for consumption if they are not shipped
  at the appropriate temperature.
- Count limits apply for the day of selection
- Once you establish a dynamic shipment count limit in the Shipium platform, it's
  effective immediately after the previous day's pull time.
- Cost limits apply for the day of selection
- Ancillary service endorsements are a USPS feature that allows the sender to obtain
  a shipment addressee's new (forwarding) address, if the addressee has filed a Change
  of Address order with USPS, for packages that are undeliverable as addressed. Additional
  carrier fees may apply.
- For creating a shipment, either use the order shipment endpoint or the shipment
  endpoint for more complex cases.
- This variable and mechanism should only ever be used as an option of last resort.
- USPS requires payor account credentials for all payor types.
- Account information included via API call in payorAccounts will override account
  credentials configured in the Shipium Console.
- Carrier-specific information for payors is required depending on the type of account.
- Including testMode = "true" in your call to the Shipment Label API enables generation
  of labels for testing purposes, so that your account will not be charged.
- Some carriers require an annual recertification if you are making modifications
- Shipium advises using caution when augmenting labels as you'll likely need to obtain
  approval from any carriers whose labels you're augmenting.
- Test mode can be specified either in an individual API call or by setting a given
  carrier method for a particular carrier account in test mode via the Shipium Console.
- 'Setting ''testMode'': true in your API calls is recommended whenever you are doing
  any kind of integration testing with Shipium Carrier and Method Selection.'
- If I generate a label with costing, uncosted carrier rates will be ignored.
- 'You can add testMode: "true" to the data passed to any label call to retrieve labels
  without charging money in a carrier-specific manner.'
- Retrieve previously created labels by passing the returnLabelId you received in
  the response body.
- Void is idempotent — a call to void a label already voided returns a 200 response.
- Webhook response must be an HTTP status code within the 200-299 range and delivered
  within 3 seconds.
- If a 200-level HTTP code response is not received within 3 seconds, the webhook
  will retry three times and log this as an error.
- Webhook for event updates with Shipium requires one webhook registered per application.
- One webhook per application to be notified with updates
- Shipium suggests creating one webhook per desired application for which your organization
  needs to receive shipment event updates
- These steps are not live in production yet.
- Webhook responses must be HTTP status code within the 200-299 range and delivered
  within 3 seconds.
- Shipium will retry the webhook three times if a 200-level HTTP code response is
  not received within 3 seconds.
- Requires setup of SFTP or S3 for file transfer
- Must schedule uploads to take place at least once per month
- Shipium supports both SFTP and S3 direct file drops.
- All data transmitted and stored is encrypted and does not include any personally
  identifiable information (PII).
- Regular reviews and updates ensure that your data remains secure.
- Default label creation period is the last seven weeks, grouped by week.
- Data is available starting from January 1, 2023.
- Default setting is a label creation period of the last seven weeks, grouped by week.
- Labels with a status of 'failures' or 'voided' are excluded by default.
- The default setting is a label creation period of the last seven weeks, grouped
  by week.
- Data is not available at the shipment ID level.
- The reporting application only supports exporting one million rows at a time.
- Default setting is a rate creation period of the last seven weeks.
- Each dashboard defaults to a label creation period of the last seven weeks, grouped
  by week.
- This API follows the API Response Codes standards unless otherwise specified.
- Requires setup of connected app in Shipium
- Includes information about the billing account associated with shipments.
- This API requires valid ISO 8601 timestamps for various date fields.
- Requires setup of connected app in shipium
- Uses OAuth2 for authentication
- 400 Invalid inputs were provided.
- Requires setup of OAuth2 for authentication
- API may have limitations on bulk processing
- OAuth2 Bearer token required for authentication
- Some shipments may have multiple associated documents
- The unique identifier for this shipment is required.
- Indicates whether the third party should be billed for the cost of shipping the
  package
- Indicates whether the third party should be billed for duties and taxes
- Requires unique identifiers for shipments and orders.
- Supports multiple packaging types and shipping methods.
- Requires setup of OAuth2 credentials.
- Uses OAuth2 Bearer token for authentication
- Some fields may return nulls in deeply nested structures
- Describes whether the third party should be billed for the cost of shipping the
  package
- Describes whether the third party should be billed for duties and taxes
- Requires OAuth2 authentication for API access.
- Requires setup of OAuth2 credentials for accessing shipment data
- Provides shipment and tracking information.
- OAuth2 Bearer token is required for authentication
- Uses OAuth2 with Bearer token.
- Streams zpl formatted version of a previously requested carrier label.
- Retrieve a previously generated shipment label. This call is the metadata about
  the label, the images of the labels must be asked for specifically in the call.
- OAuth2 Bearer credentials required for API access.
- Retrieve the cost for a LTL shipment.
- Retrieve an existing LTL shipment cost or cost comparison.
- Uses OAuth2 with Bearer token
- Simple ping endpoint which will respond with a status of 1, and info of pong when
  all authentication and authorizations at the OAuth level are valid.
- A synchronous bulk orchestration in front of the MegaShipmentProcess, allowing concurrent
  requests to be created and return results together. Please note that this endpoint
  is will block while the the full request is completely processed. Failures will
  not block and are returned alongside the results.
- Overrides the requestDate to a specific date & time from which the ship by and drop
  by date are calculated. ISO 8601 format
- Requires setup of connected app in Shipium.
- Retrieve a previously generated returns label. This call is the metadata about the
  label, the images of the labels must be asked for specifically in the call.
- Tracking endpoint to retrieve tracking info about shipments using carrierId and
  carrierTrackingId
errors:
- '400: Bad Request'
- '200: Good Request'
- 'INVALID_UNKNOWN_REASON: The validation source determined that the address was invalid
  but returned no additional information.'
- 'MISSING_CITY: A value for the required city field was not provided.'
- 'MISSING_POSTALCODE: A value for the required postalCode field was not provided.'
- 'MISSING_REGION: A value for the required region field was not provided.'
- 'MISSING_STREET1: A value for the required street1 field was not provided.'
- 'MALFORMED_ADDRESSTYPE: Invalid address type in the call. If provided, addressType
  must be either commercial or residential.'
- 'MALFORMED_POSTALCODE: The postal code was in an invalid format for the region.  For
  the US, postalCode must be of the format: 12345 or 12345-7890.'
- 'MISMATCH_ADDRESSTYPE: The addressType provided in the call did not match the addressType
  of the validated address.'
- 'MISMATCH_POSTALCODE: The postalCode value provided did not match the correct postalCode
  for this address.  Note that we will ignore a city mismatch if the state and postalcode
  are both correct to handle neighborhood designations.'
- 'MISMATCH_REGION: The provided state or region did not match with the address.'
- 'MISMATCH_REGION_AND_POSTAL: The provided postalCode is not valid for the state
  or region passed.'
- 'MISMATCH_STREETLINES: The provided street1/street2 combination has one or more
  errors, which are detailed in the errorDescription.'
- 'invalid_token: Invalid access token'
- 'javax.net.ssl.SSLHandshakeException - PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException:
  unable to find valid certification path to requested target'
- '200: Success!'
- '4XX: Failure'
- '5XX: Failure'
- '400 (Bad Request): Missing required values or badly formatted input values'
- '401 (Unauthorized): You will receive a 401 most commonly if you attempt to either
  (1) access APIs without having first authenticated or (2) attempting to utilize
  a service that your company is not authorized to use (e.g., not paying for).'
- '403 (Forbidden): You will receive a 403 if you are authenticated but attempting
  to access data to which the authenticated credentials do not have access.'
- '404 (Not Found): This is generally an issue with a bad ID (shipment ID, label ID,
  etc.) or a bad route.'
- '429 (Too Many Requests): You will only see a 429 if you have increased your call
  volume to a degree that it looks like a DDOS attack.'
- '500 (Internal Server Error): A 500 means that something bad has happened and it
  was our fault.'
- '502 (Bad Gateway): A 502 may be returned if a required external resource is unavailable
  and no backup (cache, secondary resource, etc.) is available.'
- '503 (Service Unavailable): A 503 may be returned during certain timeframes in which
  the service has been taken offline for some reason.'
- '504 (Gateway Timeout): Similar to a 502, but specifically related to timeouts from
  required external resources'
- '401 Unauthorized: Request failed with status code 401'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check if the token has expired or is invalid.'
- '404 Not Found: Verify the endpoint URL.'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: API key may be invalid'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check your access token and client credentials.'
- '429 Too Many Requests: Throttle API calls'
- '404 NOT_FOUND: Check if the tracking ID is registered'
- Carrier tracking ID cannot be null.
- Carrier ID does not exist.
- 'INVALID_REQUEST: Check the request format and required fields.'
- 'AUTHORIZATION_FAILED: Ensure valid credentials are provided.'
- Including both packagingTypeId and linearDimensions will result in an error.
- '400 Bad Request: Check required fields for payor accounts.'
- Maximum Delivery Attempt Count = 4
- Maximum Backoff Time/Expires After = 24 hours
- 'Backoff Policy: Attempt #1 = No backoff, Attempt #2 = 1 hour, Attempt #3 = 4 hours,
  Attempt #4 = 16 hours'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 (Unauthorized): You will receive a 401 most commonly if you attempt to either
  (1) access APIs without having first authenticated, or (2) utilize a service that
  your organization is not authorized to use'
- '403 (Forbidden): You will receive a 403 if you are authenticated but attempting
  to access data to which the authenticated credentials do not have access'
- '404 (Not Found): This is generally an issue with a bad ID or a bad route'
- '429 (Too Many Requests): You will only see a 429 if you have increased your call
  volume to a degree that it looks like a distributed denial-of-service (DDOS) attack'
- '500 (Internal Server Error): A 500 means that something bad has happened and it
  was Shipium''s fault'
- '502 (Bad Gateway): A 502 may be returned if a required external resource is unavailable
  and no backup is available'
- '503 (Service Unavailable): A 503 may be returned during certain timeframes in which
  the service has been taken offline'
- '504 (Gateway Timeout): Similar to a 502, a 504 is specifically related to timeouts
  from required external resources'
- 400 Bad Request
- 403 Not authenticated / authorized via OAuth
- 400 Invalid inputs were provided.
- 403 Not authenticated / authorized via OAuth.
- 404 Unable to find the deliveryEstimateId.
- '400: Invalid inputs were provided.'
- '401: Unauthorized access. Check credentials.'
- '401: Unauthorized'
- '404: Not Found'
- '400 Bad Request: Validate request parameters'
- '401 Unauthorized: Check OAuth token validity'
- '500 Internal Server Error: Retry the request'
- 404 Unable to find the shipmentId to delete.
- '400 Bad Request: Check the request parameters.'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify the shipment ID or path'
- '500 Internal Server Error: Retry the request or contact support'
- '401 Unauthorized: Check your token and permissions.'
- '400: Invalid inputs were provided'
- '401: Unauthorized access - check OAuth token'
- '404: Shipment not found'
- '403: Forbidden'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Check your authentication'
- '403 Forbidden: You do not have access to this resource'
- 401 Unauthorized
- 404 Not Found
- '401 Unauthorized: Recheck OAuth tokens'
- '403 Forbidden: Ensure you have access rights'
- '401 Unauthorized: Check authentication details'
- '403 Forbidden: Access denied'
- 403 Forbidden
- '200: Successful response'
- '400: Bad request'
- '404: Not found'
- '500: Internal server error'
- '200'
- '400'
- '401'
- '403'
- '404'
- '400 Bad Request: Check required parameters'
- '401 Unauthorized: Check authentication credentials'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.shipium.com
  headers:
    accept: application/json
    content-type: application/json
source_metadata: null
