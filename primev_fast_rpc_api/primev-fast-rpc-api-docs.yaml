resources:
- name: mevcommit_getTransactionCommitments
  endpoint:
    path: /mevcommit_getTransactionCommitments
    method: POST
    data_selector: result
- name: mevcommit_getBalance
  endpoint:
    path: /mevcommit_getBalance
    method: POST
    data_selector: result
- name: mevcommit_optInBlock
  endpoint:
    path: /mevcommit_optInBlock
    method: POST
    data_selector: result
- name: mevcommit_cancelTransaction
  endpoint:
    path: /mevcommit_cancelTransaction
    method: POST
    data_selector: result
- name: mevcommit_estimateDeposit
  endpoint:
    path: /mevcommit_estimateDeposit
    method: POST
    data_selector: result
- name: mevcommit_estimateBridge
  endpoint:
    path: /mevcommit_estimateBridge
    method: POST
    data_selector: result
- name: bidder_bid
  endpoint:
    path: /v1/bidder/bid
    method: POST
    data_selector: ''
    params: {}
- name: getTransactionCommitments
  endpoint:
    path: /mevcommit_getTransactionCommitments
    method: POST
- name: getBalance
  endpoint:
    path: /mevcommit_getBalance
    method: POST
- name: optedInBlock
  endpoint:
    path: /mevcommit_optedInBlock
    method: POST
- name: provider_registry
  endpoint:
    path: /provider_registry
    method: GET
    data_selector: providers
- name: validator_registry
  endpoint:
    path: /validator_registry
    method: GET
    data_selector: validators
- name: mevcommit_getTransactionCommitments
  endpoint:
    path: /mevcommit_getTransactionCommitments
    method: POST
    data_selector: result
- name: mevcommit_getBalance
  endpoint:
    path: /mevcommit_getBalance
    method: POST
    data_selector: result
- name: mevcommit_optInBlock
  endpoint:
    path: /mevcommit_optInBlock
    method: POST
    data_selector: result
- name: mevcommit_cancelTransaction
  endpoint:
    path: /mevcommit_cancelTransaction
    method: POST
    data_selector: result
- name: mevcommit_estimateDeposit
  endpoint:
    path: /mevcommit_estimateDeposit
    method: POST
    data_selector: result
- name: mevcommit_estimateBridge
  endpoint:
    path: /mevcommit_estimateBridge
    method: POST
    data_selector: result
- name: ReceiveBids
  endpoint:
    path: /ReceiveBids
    method: RPC
    data_selector: Bid
- name: SendProcessedBids
  endpoint:
    path: /SendProcessedBids
    method: RPC
    data_selector: BidResponse
- name: topology
  endpoint:
    path: /v1/debug/topology
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: mev-commit AVS registration
  endpoint:
    path: /mev-commit-operator-cli/register
    method: POST
    data_selector: registration
    params:
      avs-address: '0xBc77233855e3274E1903771675Eb71E602D9DC2e'
      boost-gas-params: 'false'
- name: deregistration
  endpoint:
    path: /mev-commit-operator-cli/request-deregistration
    method: POST
    data_selector: deregistration
    params: {}
- name: commitments
  endpoint:
    path: /v1/provider/get_commitment_info
    method: GET
    data_selector: commitments
    params:
      blockNumber: optional
      page: optional
      limit: optional
- name: get_min_stake
  endpoint:
    path: /v1/provider/get_min_stake
    method: GET
    data_selector: amount
    params: {}
- name: provider_reward
  endpoint:
    path: /get_provider_reward
    method: GET
    data_selector: amount
- name: get_stake
  endpoint:
    path: /v1/provider/get_stake
    method: GET
    data_selector: amount
    params: {}
- name: receive_bids
  endpoint:
    path: /v1/provider/receive_bids
    method: GET
    data_selector: result
    params: {}
- name: stake
  endpoint:
    path: /v1/provider/stake/{amount}
    method: POST
    data_selector: amount
    params: {}
- name: unstake
  endpoint:
    path: /v1/provider/unstake
    method: POST
    data_selector: object
- name: withdraw_stake
  endpoint:
    path: /withdraw_stake
    method: POST
    data_selector: amount
- name: bid
  endpoint:
    path: /v1/bidder/bid
    method: POST
    data_selector: rawTransactions
    params: {}
- name: eth_sendRawTransaction
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: eth_getTransactionReceipt
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: mevcommit_getTransactionCommitments
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: mevcommit_getBalance
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: mevcommit_optedInBlock
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: commitment
  endpoint:
    path: /api/commitment
    method: GET
    data_selector: result
    params: {}
- name: ReceiveBids
  endpoint:
    path: /ReceiveBids
    method: RPC
    data_selector: Bid
    params: {}
- name: SendProcessedBids
  endpoint:
    path: /SendProcessedBids
    method: RPC
    data_selector: BidResponse
    params: {}
- name: topology
  endpoint:
    path: /v1/debug/topology
    method: GET
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: pprof
  endpoint:
    path: /debug/pprof
    method: GET
- name: node
  endpoint:
    path: /mev-commit
    method: GET
    data_selector: node_data
notes:
- The keystore-path flag expects the directory path for your keystore, not the file
  path itself.
- Fees are paid through a pre-funded gas tank, requiring ETH deposit before sending
  transactions.
- Transactions are preconfirmed through mev-commit.
- Relays must change the provider registry address used to query provider registrations.
- End-to-end privacy for all bids and commitments until commitments are opened.
- You can deploy any EVM compatible contracts to the mev-commit chain
- Chain ID to 57173 for mainnet
- Chain ID to 17864 for testnet
- Streaming responses
- You can deploy any EVM compatible contracts to the mev-commit chain, simply set
  your Chain ID to 8855 and RPC Url to https://chainrpc.mev-commit.xyz.
- You can deploy any EVM compatible contracts to the mev-commit chain, simply set
  your Chain ID to 17864 and RPC Url to https://chainrpc.testnet.mev-commit.xyz.
- The mev-commit node, when started for the first time will create a private key for
  the node at ~/.mev-commit/key.
- In order to run a provider node, the machine needs to be publicly accessible.
- Operators currently serve the purpose of (optionally) being able to register validators
  with mev-commit, if the relevant validator(s) are natively restaked with Eigenlayer
  and delegated to the operator.
- A full list of command options can be found by running `mev-commit-operator-cli
  register --help`.
- Real-time confirmation of future execution, translating to reduced risk for transacting
- Ability to secure a specific execution slot at a better price
- Even in the event of being frontrun, your transaction parameters will remain within
  your defined slippage, or else not execute
- Instant transaction UX for searchers
- Predictable gas costs
errors:
- '123: <string>'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://chainrpc.mev-commit.xyz
  headers:
    Accept: application/json
source_metadata: null
