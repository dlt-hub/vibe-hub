resources:
- name: domain_available
  endpoint:
    path: /domain.available
    method: GET
    data_selector: domains
- name: domain_count
  endpoint:
    path: /domain.count
    method: GET
    data_selector: count
- name: domain_create
  endpoint:
    path: /domain.create
    method: POST
    data_selector: domain_create
- name: domain_info
  endpoint:
    path: /domain.info
    method: GET
    data_selector: domain_info
- name: domain_list
  endpoint:
    path: /domain.list
    method: GET
    data_selector: domain_list
- name: domain_price
  endpoint:
    path: /domain.price
    method: GET
    data_selector: domain_price
- name: domain_push
  endpoint:
    path: /domain.push
    method: POST
    data_selector: domain_push
- name: domain_release
  endpoint:
    path: /domain.release
    method: POST
    data_selector: domain_release
- name: domain_renew
  endpoint:
    path: /domain.renew
    method: POST
    data_selector: domain_renew
- name: domain_restore
  endpoint:
    path: /domain.restore
    method: POST
    data_selector: domain_restore
- name: domain_authinfo_reset
  endpoint:
    path: /domain.authinfo.reset
    method: POST
    data_selector: authinfo data
- name: domain_owner_set
  endpoint:
    path: /domain.owner.set
    method: POST
    data_selector: change_owner
- name: domain_contacts_set
  endpoint:
    path: /domain.contacts.set
    method: POST
    data_selector: domain_contact_change
- name: domain_webredir_count
  endpoint:
    path: /domain.webredir.count
    method: GET
    data_selector: count
- name: domain_webredir_create
  endpoint:
    path: /domain.webredir.create
    method: POST
    data_selector: redirection information
- name: domain_webredir_delete
  endpoint:
    path: /domain.webredir.delete
    method: DELETE
    data_selector: boolean
- name: domain_webredir_list
  endpoint:
    path: /domain.webredir.list
    method: GET
    data_selector: List of redirections
- name: domain_webredir_update
  endpoint:
    path: /domain.webredir.update
    method: POST
    data_selector: redirection information
- name: domain_status_lock
  endpoint:
    path: /domain.status.lock
    method: POST
    data_selector: domain_status_update
- name: domain_status_unlock
  endpoint:
    path: /domain.status.unlock
    method: POST
    data_selector: domain_status_update
- name: domain_host_count
  endpoint:
    path: /domain.host.count
    method: GET
    data_selector: count
- name: domain_host_create
  endpoint:
    path: /domain.host.create
    method: POST
    data_selector: host_create
- name: domain_host_delete
  endpoint:
    path: /domain.host.delete
    method: DELETE
    data_selector: host_delete
- name: domain_host_info
  endpoint:
    path: /domain.host.info
    method: GET
    data_selector: Glue record information
- name: domain_host_list
  endpoint:
    path: /domain.host.list
    method: GET
    data_selector: Glue records
- name: domain_host_update
  endpoint:
    path: /domain.host.update
    method: POST
    data_selector: host_update_ip
- name: domain_mailbox_count
  endpoint:
    path: /domain.mailbox.count
    method: GET
    data_selector: count
- name: domain_mailbox_create
  endpoint:
    path: /domain.mailbox.create
    method: POST
    data_selector: Mailbox information
- name: domain_mailbox_delete
  endpoint:
    path: /domain.mailbox.delete
    method: DELETE
    data_selector: boolean
- name: domain_mailbox_info
  endpoint:
    path: /domain.mailbox.info
    method: GET
    data_selector: Mailbox information
- name: domain_mailbox_list
  endpoint:
    path: /domain.mailbox.list
    method: GET
    data_selector: Mailbox information
- name: domain_mailbox_purge
  endpoint:
    path: /domain.mailbox.purge
    method: POST
    data_selector: Operation
- name: domain_mailbox_update
  endpoint:
    path: /domain.mailbox.update
    method: POST
    data_selector: Mailbox information
- name: domain_mailbox_alias_set
  endpoint:
    path: /domain.mailbox.alias.set
    method: POST
    data_selector: Mailbox information
- name: domain_mailbox_responder_activate
  endpoint:
    path: /domain.mailbox.responder.activate
    method: POST
    data_selector: responder activation
- name: responder_deactivate
  endpoint:
    path: /domain/mailbox/responder/deactivate
    method: POST
    params: {}
- name: responder_activate
  endpoint:
    path: /domain/mailbox/responder/activate
    method: POST
    params: {}
- name: forward_count
  endpoint:
    path: /domain/forward/count
    method: GET
    params: {}
- name: forward_create
  endpoint:
    path: /domain/forward/create
    method: POST
    params: {}
- name: forward_delete
  endpoint:
    path: /domain/forward/delete
    method: DELETE
    params: {}
- name: forward_list
  endpoint:
    path: /domain/forward/list
    method: GET
    params: {}
- name: forward_update
  endpoint:
    path: /domain/forward/update
    method: PUT
    params: {}
- name: packmail_autorenew
  endpoint:
    path: /domain/packmail/autorenew
    method: POST
    params: {}
- name: packmail_create
  endpoint:
    path: /domain/packmail/create
    method: POST
    params: {}
- name: packmail_delete
  endpoint:
    path: /domain/packmail/delete
    method: DELETE
    params: {}
- name: packmail_info
  endpoint:
    path: /domain/packmail/info
    method: GET
    params: {}
- name: packmail_renew
  endpoint:
    path: /domain/packmail/renew
    method: POST
    params: {}
- name: packmail_update
  endpoint:
    path: /domain/packmail/update
    method: PUT
    params: {}
- name: tld_list
  endpoint:
    path: /domain/tld/list
    method: GET
    params: {}
- name: transferin_available
  endpoint:
    path: /domain/transferin/available
    method: GET
    params: {}
- name: transferin_proceed
  endpoint:
    path: /domain/transferin/proceed
    method: POST
    params: {}
- name: transferin_resend_foa
  endpoint:
    path: /domain/transferin/resend_foa
    method: POST
    params: {}
- name: transferin_update_authinfo
  endpoint:
    path: /domain/transferin/update_authinfo
    method: PUT
    params: {}
- name: nameservers_set
  endpoint:
    path: /domain/nameservers/set
    method: POST
    params: {}
- name: zone_list
  endpoint:
    path: /domain/zone/list
    method: GET
    params: {}
- name: record_delete
  endpoint:
    path: /domain/zone/record/delete
    method: DELETE
    params:
      apikey: string
      zone_id: int
      version_id: int
      opts: struct
- name: record_list
  endpoint:
    path: /domain/zone/record/list
    method: GET
    params:
      apikey: string
      zone_id: int
      version_id: int
      opts: struct
- name: record_set
  endpoint:
    path: /domain/zone/record/set
    method: POST
    params:
      apikey: string
      zone_id: int
      version_id: int
      params: struct
- name: record_update
  endpoint:
    path: /domain/zone/record/update
    method: PUT
    params:
      apikey: string
      zone_id: int
      version_id: int
      opts: struct
      params: struct
- name: dnssec_create
  endpoint:
    path: /domain/dnssec/create
    method: POST
    params:
      apikey: string
      domain: string
      params: struct
      orga_params: struct
- name: dnssec_delete
  endpoint:
    path: /domain/dnssec/delete
    method: DELETE
    params:
      apikey: string
      key_id: int
      orga_params: struct
- name: dnssec_list
  endpoint:
    path: /domain/dnssec/list
    method: GET
    params:
      apikey: string
      domain: string
- name: dnssec_set
  endpoint:
    path: /domain/dnssec/set
    method: POST
    params:
      apikey: string
      domain: string
      params: array
      orga_params: struct
- name: delete_info
  endpoint:
    path: /domain.delete.info
    method: GET
    params:
      apikey: string
      fqdn: string
      authcode: string
      v5: boolean
- name: delete_proceed
  endpoint:
    path: /domain.delete.proceed
    method: DELETE
    params:
      apikey: string
      domain: string
- name: send_foa_email
  endpoint:
    path: /domain.delete.send_foa_email
    method: POST
    params:
      apikey: string
      fqdn: string
      email: string
- name: transferout_proceed
  endpoint:
    path: /domain.transferout.proceed
    method: POST
    params:
      apikey: string
      domain: string
      command: string
      authinfo: string
- name: ProductSearchOptions
  endpoint:
    path: /api/v1/productsearchoptions
    method: GET
    data_selector: records
- name: TldSuggestListFoOptions
  endpoint:
    path: /api/v1/tldsuggestlistfooptions
    method: GET
    data_selector: records
- name: webredir
  endpoint:
    path: /domain/webredir
    method: POST
    data_selector: records
- name: host
  endpoint:
    path: /domain/host
    method: GET
    data_selector: records
- name: mailbox
  endpoint:
    path: /domain/mailbox
    method: GET
    data_selector: records
- name: forward
  endpoint:
    path: /domain/forward
    method: GET
    data_selector: records
- name: packmail
  endpoint:
    path: /domain/packmail
    method: GET
    data_selector: records
- name: tld
  endpoint:
    path: /domain/tld
    method: GET
    data_selector: records
- name: transfer
  endpoint:
    path: /domain/transfer
    method: POST
    data_selector: records
- name: ZoneClone
  endpoint:
    path: /domain/zone/clone
    method: POST
- name: ZoneCreate
  endpoint:
    path: /domain/zone/create
    method: POST
    params:
      name: string
- name: ZoneListOptions
  endpoint:
    path: /domain/zone/list
    method: GET
    params:
      items_per_page: 500
      page: 0
- name: ZoneUpdate
  endpoint:
    path: /domain/zone/update
    method: PUT
- name: RecordDeleteOptions
  endpoint:
    path: /domain/zone/record/delete
    method: DELETE
- name: RecordListOptions
  endpoint:
    path: /domain/zone/record/list
    method: GET
    params:
      items_per_page: 100
      page: 0
- name: RecordUpdateOptions
  endpoint:
    path: /domain/zone/record/update
    method: PUT
- name: ZoneRecord
  endpoint:
    path: /domain/zone/record/add
    method: POST
    params:
      name: string
      type: string
      value: string
      ttl: 10800
- name: DNSCreateKey
  endpoint:
    path: /domain/dnssec/create
    method: POST
    params:
      algorithm: int
      flags: int
      public_key: string
- name: TagListOptions
  endpoint:
    path: /domain/tag/list
    method: GET
    params:
      items_per_page: 100
      page: 0
- name: EOIListOptions
  endpoint:
    path: /domain/eoi/list
    method: GET
    params:
      items_per_page: 100
      page: 0
- name: AutorenewActive
  endpoint:
    path: /domain/autorenew/activate
    method: POST
- name: UKRights
  endpoint:
    path: /domain/misc/ukrights
    method: POST
    params:
      domains: array of string
- name: TransferOutProceedCommand
  endpoint:
    path: /domain/transferout/proceed
    method: POST
- name: TLDSuggestInfoReturn
  endpoint:
    path: /domain/price/list
    method: GET
    data_selector: records
- name: ChangeOwnerOperationReturn
  endpoint:
    path: /changeowner/create
    method: GET
    data_selector: records
- name: WebredirReturn
  endpoint:
    path: /domain/webredir/create
    method: GET
    data_selector: records
- name: DomainStatusUpdateOperationReturn
  endpoint:
    path: /domain/status/lock
    method: GET
    data_selector: records
- name: HostListReturn
  endpoint:
    path: /domain/host/list
    method: GET
    data_selector: records
- name: MailboxListReturn
  endpoint:
    path: /domain/mailbox/list
    method: GET
    data_selector: records
- name: PackmailReturn
  endpoint:
    path: /domain/packmail/info
    method: GET
    data_selector: records
- name: TLDListReturn
  endpoint:
    path: /domain/tld/list
    method: GET
    data_selector: records
- name: TransferInOperationReturn
  endpoint:
    path: /domain/transferin/proceed
    method: POST
    data_selector: records
- name: NsSetOperationReturn
  endpoint:
    path: /domain/nameservers/set
    method: POST
    data_selector: records
- name: ZoneListReturn
  endpoint:
    path: /domain/zone/list
    method: GET
    data_selector: records
- name: ZoneReturn
  endpoint:
    path: /domain/zone/info
    method: GET
    data_selector: records
- name: ZoneVersionReturn
  endpoint:
    path: /domain/zone/version/list
    method: GET
    data_selector: records
- name: ZoneRecordReturn
  endpoint:
    path: /domain/zone/record/list
    method: GET
    data_selector: records
- name: DnssecReturn
  endpoint:
    path: /domain/dnssec/list
    method: GET
    data_selector: records
- name: DomainDnssecOperationReturn
  endpoint:
    path: /domain/dnssec/create
    method: POST
    data_selector: records
- name: TagReturn
  endpoint:
    path: /domain/tag/list
    method: GET
    data_selector: records
- name: EOIReturn
  endpoint:
    path: /domain/eoi/list
    method: GET
    data_selector: records
- name: ClaimReturn
  endpoint:
    path: /domain/claims/request
    method: POST
    data_selector: records
- name: ClaimsCheckReturn
  endpoint:
    path: /domain/claims/check
    method: POST
    data_selector: records
- name: ClaimsRequestReturn
  endpoint:
    path: /domain/claims/info
    method: GET
    data_selector: records
- name: BaseSMDReturn
  endpoint:
    path: /domain/smd/extract
    method: GET
    data_selector: records
- name: SMDListReturn
  endpoint:
    path: /domain/smd/list
    method: GET
    data_selector: records
- name: SMDReturn
  endpoint:
    path: /domain/smd/create
    method: GET
    data_selector: records
- name: UKRightsStatus
  endpoint:
    path: /domain/misc/ukrights
    method: GET
    data_selector: records
- name: TransferinReturn
  endpoint:
    path: /domain/delete/info
    method: GET
    data_selector: records
- name: DomainDeleteOperationReturn
  endpoint:
    path: /domain/delete/proceed
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: version_info
  endpoint:
    path: /version.info
    method: POST
    data_selector: ''
    params: {}
- name: catalog
  endpoint:
    path: /catalog
    method: POST
    data_selector: result
- name: catalog
  endpoint:
    path: /catalog.list
    method: GET
    params:
      apikey: ''
      opts: {}
- name: certificates
  endpoint:
    path: /cert/list
    method: POST
    data_selector: certificates
- name: hosted_certificates
  endpoint:
    path: /cert/hosted/list
    method: POST
    data_selector: hosted_certificates
- name: change_dcv
  endpoint:
    path: /cert/change_dcv
    method: POST
    params: {}
- name: count
  endpoint:
    path: /cert/count
    method: POST
    params: {}
- name: create
  endpoint:
    path: /cert/create
    method: POST
    params: {}
- name: delete
  endpoint:
    path: /cert/delete
    method: POST
    params: {}
- name: get_dcv_params
  endpoint:
    path: /cert/get_dcv_params
    method: POST
    params: {}
- name: info
  endpoint:
    path: /cert/info
    method: POST
    params: {}
- name: list
  endpoint:
    path: /cert/list
    method: POST
    params: {}
- name: recheck_caa
  endpoint:
    path: /cert/recheck_caa
    method: POST
    params: {}
- name: renew
  endpoint:
    path: /cert/renew
    method: POST
    params: {}
- name: resend_dcv
  endpoint:
    path: /cert/resend_dcv
    method: POST
    params: {}
- name: update
  endpoint:
    path: /cert/update
    method: POST
    params: {}
- name: package_list
  endpoint:
    path: /cert/package/list
    method: POST
    params: {}
- name: hosted_count
  endpoint:
    path: /cert/hosted/count
    method: POST
    params: {}
- name: hosted_create
  endpoint:
    path: /cert/hosted/create
    method: POST
    params: {}
- name: hosted_delete
  endpoint:
    path: /cert/hosted/delete
    method: POST
    params: {}
- name: hosted_info
  endpoint:
    path: /cert/hosted/info
    method: POST
    params: {}
- name: hosted_list
  endpoint:
    path: /cert/hosted/list
    method: POST
    params: {}
- name: CertPackageListOptions
  endpoint:
    params:
      items_per_page: 100
- name: SSLCreateParams
  endpoint:
    params:
      crt: ''
      key: ''
- name: SSLListOptions
  endpoint:
    params:
      items_per_page: 100
      page: 0
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: contacts
- name: activate
  endpoint:
    path: /contact.activate
    method: GET
    data_selector: boolean
    params:
      apikey: string
      handle: string
- name: available_currencies
  endpoint:
    path: /contact.available_currencies
    method: GET
    data_selector: array
    params:
      apikey: string
- name: balance
  endpoint:
    path: /contact.balance
    method: GET
    data_selector: struct
    params:
      apikey: string
- name: count
  endpoint:
    path: /contact.count
    method: GET
    data_selector: int
    params:
      apikey: string
- name: create
  endpoint:
    path: /contact.create
    method: POST
    data_selector: struct
    params:
      apikey: string
      params: struct
- name: delete
  endpoint:
    path: /contact.delete
    method: DELETE
    data_selector: boolean
    params:
      apikey: string
      handle: string
- name: reachability_resend
  endpoint:
    path: contact.reachability.resend
    method: GET
    params:
      apikey: string
      params: struct
- name: reachability_resend_v5
  endpoint:
    path: contact.reachability.resend_v5
    method: GET
    params:
      apikey: string
      params: struct
- name: reachability_reset_bo
  endpoint:
    path: contact.reachability.reset_bo
    method: GET
    params:
      apikey: string
      target: struct
- name: reachability_unlock
  endpoint:
    path: contact.reachability.unlock
    method: GET
    params:
      apikey: string
      reachability: struct
- name: reachability_validate
  endpoint:
    path: contact.reachability.validate
    method: GET
    params:
      apikey: string
      valid_hash: string
- name: shipping_count_bo
  endpoint:
    path: contact.shipping.count_bo
    method: GET
    params:
      apikey: string
      options: array
- name: shipping_delete
  endpoint:
    path: contact.shipping.delete
    method: GET
    params:
      apikey: string
      handle: string
- name: shipping_get
  endpoint:
    path: contact.shipping.get
    method: GET
    params:
      apikey: string
      handle: string
      date: string
- name: shipping_get_bo
  endpoint:
    path: contact.shipping.get_bo
    method: GET
    params:
      apikey: string
      handle: struct
      date: dateTime.iso8601
- name: shipping_list_bo
  endpoint:
    path: contact.shipping.list_bo
    method: GET
    params:
      apikey: string
      options: array
- name: shipping_set
  endpoint:
    path: contact.shipping.set
    method: GET
    params:
      apikey: string
      shipping_address: struct
- name: autofoa_count
  endpoint:
    path: contact.autofoa.count
    method: GET
    params:
      apikey: string
      opts: struct
- name: autofoa_create
  endpoint:
    path: contact.autofoa.create
    method: GET
    params:
      apikey: string
      params: struct
- name: autofoa_delete
  endpoint:
    path: contact.autofoa.delete
    method: GET
    params:
      apikey: string
      autofoa_id: int
- name: autofoa_list
  endpoint:
    path: contact.autofoa.list
    method: GET
    params:
      apikey: string
      opts: struct
- name: autofoa_validate
  endpoint:
    path: contact.autofoa.validate
    method: GET
    params:
      apikey: string
      autofoa_id: int
      code: int
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ContactCheckDomainBulk
  endpoint:
    path: /contact/check_domain_bulk
    method: POST
    data_selector: data
    params: {}
- name: ContactClone
  endpoint:
    path: /contact/clone
    method: POST
    data_selector: data
    params: {}
- name: ContactCreateFormDescription
  endpoint:
    path: /contact/create_form_description
    method: POST
    data_selector: data
    params: {}
- name: ContactListOptions
  endpoint:
    path: /contact/list_options
    method: GET
    data_selector: data
    params: {}
- name: EmailValidation
  endpoint:
    path: /contact/validate_email
    method: POST
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: InternalContactListOptions
  endpoint:
    params:
      items_per_page: 100
      page: 0
- name: MinimalContactCreateFormDescription
  endpoint:
    params:
      email: ''
      given: ''
      lang: ''
      city: ''
      country: ''
      family: ''
      orgname: ''
      phone: ''
      reseller: ''
      siren: ''
      state: ''
      streetaddr: ''
      type: '0'
      vat_number: ''
      zip: ''
- name: ShippingAddress
  endpoint:
    path: /contact/shipping
    method: POST
- name: ShippingListOptions
  endpoint:
    path: /contact/shipping/list
    method: GET
- name: AutoFOAListOptions
  endpoint:
    path: /contact/autofoa/list
    method: GET
- name: AutoFoaParams
  endpoint:
    path: /contact/autofoa/create
    method: POST
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: records
- name: OperationInformation
  endpoint:
    path: /operation/information
    method: GET
    data_selector: records
- name: OperationReturn
  endpoint:
    path: /operation/return
    method: GET
    data_selector: records
- name: reachability_info
  endpoint:
    path: /contact/reachability/info
    method: GET
- name: shipping_list_bo
  endpoint:
    path: /contact/shipping/list_bo
    method: GET
- name: shipping_get_bo
  endpoint:
    path: /contact/shipping/get_bo
    method: GET
- name: shipping_get
  endpoint:
    path: /contact/shipping/get
    method: GET
- name: shipping_set
  endpoint:
    path: /contact/shipping/set
    method: POST
- name: autofoa_create
  endpoint:
    path: /contact/autofoa/create
    method: POST
- name: autofoa_list
  endpoint:
    path: /contact/autofoa/list
    method: GET
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: contacts
    params:
      items_per_page: 10
- name: mailbox
  endpoint:
    path: /domain/mailbox
    method: POST
    data_selector: mailbox
- name: forward
  endpoint:
    path: /domain/forward
    method: POST
    data_selector: forward
- name: info
  endpoint:
    path: /domain/info
    method: GET
    data_selector: info
- name: domain_available
  endpoint:
    path: /domain.available
    method: POST
    data_selector: result
    params: {}
- name: contact_create
  endpoint:
    path: /contact.create
    method: POST
    data_selector: result
    params: {}
- name: domain_create
  endpoint:
    path: /domain.create
    method: POST
    data_selector: result
    params: {}
- name: domain_info
  endpoint:
    path: /domain/info
    method: GET
    data_selector: authinfo
    params: {}
- name: domain_host
  endpoint:
    path: /domain/host
    method: GET
    data_selector: hosts
    params: {}
- name: domain_webredir
  endpoint:
    path: /domain/webredir
    method: GET
    data_selector: redirections
    params: {}
- name: domain_mailbox
  endpoint:
    path: /domain/mailbox
    method: GET
    data_selector: mailboxes
    params: {}
- name: domain_forward
  endpoint:
    path: /domain/forward
    method: GET
    data_selector: forwards
    params: {}
- name: contacts
  endpoint:
    path: /domain/contacts
    method: POST
    data_selector: contacts_spec
- name: status
  endpoint:
    path: /domain/status
    method: POST
- name: nameservers
  endpoint:
    path: /domain/nameservers
    method: POST
- name: mailbox
  endpoint:
    path: /domain/mailbox
    method: POST
- name: forward
  endpoint:
    path: /domain/forward
    method: POST
- name: renew
  endpoint:
    path: /domain/renew
    method: POST
- name: domain_transferin_available
  endpoint:
    path: /domain/transferin/available
    method: GET
- name: domain_transferin_proceed
  endpoint:
    path: /domain/transferin/proceed
    method: POST
- name: domain_transferin_resend_foa
  endpoint:
    path: /domain/transferin/resend_foa
    method: POST
- name: domain_transferin_update_authinfo
  endpoint:
    path: /domain/transferin/update_authinfo
    method: POST
- name: domain_restore
  endpoint:
    path: /domain/restore
    method: POST
- name: domain_tld_list
  endpoint:
    path: /domain/tld/list
    method: GET
- name: domain_tld_region
  endpoint:
    path: /domain/tld/region
    method: GET
- name: domain_price_list
  endpoint:
    path: /domain/price/list
    method: POST
- name: domain
  endpoint:
    path: /domain/list
    method: GET
    data_selector: domains
    params:
      incremental: date_registry_end
- name: zone
  endpoint:
    path: /domain/zone/list
    method: GET
    data_selector: zones
    params: {}
- name: dnssec
  endpoint:
    path: /domain/dnssec/list
    method: GET
    data_selector: keys
    params: {}
- name: domain
  endpoint:
    path: /domain/list
    method: GET
    data_selector: domains
    params:
      items_per_page: 10
      page: 0
- name: zone
  endpoint:
    path: /domain/zone/list
    method: GET
    data_selector: zones
    params: {}
- name: version_info
  endpoint:
    path: /version.info
    method: POST
    data_selector: result
    params:
      apikey: my 24-character API key
- name: datacenter_list
  endpoint:
    path: /hosting.datacenter.list
    method: POST
    data_selector: result
    params:
      apikey: my 24-character API key
- name: image_list
  endpoint:
    path: /hosting.image.list
    method: POST
    data_selector: result
    params:
      apikey: my 24-character API key
- name: vm_create
  endpoint:
    path: /hosting.vm.create
    method: POST
    data_selector: result
    params:
      apikey: my 24-character API key
- name: vm_update
  endpoint:
    path: /hosting.vm.update
    method: POST
    data_selector: result
    params:
      apikey: my 24-character API key
- name: vm_statistics
  endpoint:
    path: /hosting/metric/query
    method: POST
    data_selector: points
    params:
      resource_id:
      - 648
      resource_type: vm
- name: account_credit
  endpoint:
    path: /hosting.account.credit
    method: POST
    params:
      apikey: ''
      params: {}
- name: account_info
  endpoint:
    path: /hosting.account.info
    method: GET
    params:
      apikey: ''
- name: datacenter_list
  endpoint:
    path: /datacenter.list
    method: GET
    data_selector: datacenters
    params:
      items_per_page: 100
      page: 0
- name: disk_image_info
  endpoint:
    path: /hosting.image.info
    method: GET
    data_selector: struct
    params:
      apikey: string
      image: int
- name: disk_image_list
  endpoint:
    path: /hosting.image.list
    method: GET
    data_selector: list
    params:
      apikey: string
      opts: struct
- name: iface_count
  endpoint:
    path: /hosting/iface/count
    method: GET
    params: {}
- name: iface_create
  endpoint:
    path: /hosting/iface/create
    method: POST
    params: {}
- name: iface_delete
  endpoint:
    path: /hosting/iface/delete
    method: DELETE
    params: {}
- name: iface_info
  endpoint:
    path: /hosting/iface/info
    method: GET
    params: {}
- name: iface_list
  endpoint:
    path: /hosting/iface/list
    method: GET
    params: {}
- name: iface_migrate
  endpoint:
    path: /hosting/iface/migrate
    method: POST
    params: {}
- name: iface_update
  endpoint:
    path: /hosting/iface/update
    method: PUT
    params: {}
- name: vlan_count
  endpoint:
    path: /hosting/vlan/count
    method: GET
    params: {}
- name: vlan_create
  endpoint:
    path: /hosting/vlan/create
    method: POST
    params: {}
- name: vlan_delete
  endpoint:
    path: /hosting/vlan/delete
    method: DELETE
    params: {}
- name: vlan_info
  endpoint:
    path: /hosting/vlan/info
    method: GET
    params: {}
- name: vlan_list
  endpoint:
    path: /hosting/vlan/list
    method: GET
    params: {}
- name: vlan_update
  endpoint:
    path: /hosting/vlan/update
    method: PUT
    params: {}
- name: count_reverse_proxies
  endpoint:
    path: /hosting/rproxy/count
    method: GET
    data_selector: int
    params: {}
- name: create_reverse_proxy
  endpoint:
    path: /hosting/rproxy/create
    method: POST
    data_selector: list
    params: {}
- name: delete_reverse_proxy
  endpoint:
    path: /hosting/rproxy/delete
    method: DELETE
    data_selector: struct
    params: {}
- name: info_reverse_proxy
  endpoint:
    path: /hosting/rproxy/info
    method: GET
    data_selector: struct
    params: {}
- name: list_reverse_proxies
  endpoint:
    path: /hosting/rproxy/list
    method: GET
    data_selector: struct
    params: {}
- name: update_reverse_proxy
  endpoint:
    path: /hosting/rproxy/update
    method: PUT
    data_selector: struct
    params: {}
- name: hosting.catalog.list
  endpoint:
    path: /hosting/catalog/list
    method: GET
- name: hosting.catalog.price
  endpoint:
    path: /hosting/catalog/price
    method: GET
- name: hosting.rating
  endpoint:
    path: /hosting/rating/list
    method: GET
- name: create_product
  endpoint:
    path: /hosting.product.create
    method: POST
    data_selector: nil
    params: {}
- name: delete_product
  endpoint:
    path: /hosting.product.delete
    method: DELETE
    data_selector: nil
    params: {}
- name: renew_product
  endpoint:
    path: /hosting.product.renew
    method: POST
    data_selector: nil
    params: {}
- name: update_product
  endpoint:
    path: /hosting.product.update
    method: POST
    data_selector: nil
    params: {}
- name: ssh_key_count
  endpoint:
    path: /hosting/ssh/count
    method: GET
    data_selector: int
    params:
      apikey: string
- name: ssh_key_create
  endpoint:
    path: /hosting/ssh/create
    method: POST
    data_selector: struct
    params:
      apikey: string
      params: struct
- name: ssh_key_delete
  endpoint:
    path: /hosting/ssh/delete
    method: DELETE
    data_selector: boolean
    params:
      apikey: string
      key_id: struct
- name: ssh_key_info
  endpoint:
    path: /hosting/ssh/info
    method: GET
    data_selector: struct
    params:
      apikey: string
      key_id: struct
- name: ssh_key_list
  endpoint:
    path: /hosting/ssh/list
    method: GET
    data_selector: struct
    params:
      apikey: string
      opts: struct
- name: available_metrics
  endpoint:
    path: /hosting.metric.available
    method: GET
    data_selector: metrics
- name: query_metrics
  endpoint:
    path: /hosting.metric.query
    method: GET
    data_selector: points
- name: notification
  endpoint:
    path: /notification/list
    method: POST
    data_selector: notifications
- name: notification_count
  endpoint:
    path: /notification/count
    method: POST
    data_selector: count
- name: notification_test
  endpoint:
    path: /notification/test
    method: POST
    data_selector: result
- name: notification_count
  endpoint:
    path: /notification.count
    method: GET
    data_selector: count
    params:
      apikey: string
- name: notification_list
  endpoint:
    path: /notification.list
    method: GET
    data_selector: list
    params:
      apikey: string
- name: notification_test
  endpoint:
    path: /notification.test
    method: POST
    data_selector: success
    params:
      apikey: string
      notification: string
- name: notification_subscription_count
  endpoint:
    path: /notification.subscription.count
    method: GET
    data_selector: count
    params:
      apikey: string
- name: notification_subscription_create
  endpoint:
    path: /notification.subscription.create
    method: POST
    data_selector: operation
    params:
      apikey: string
      params: struct
- name: notification_subscription_delete
  endpoint:
    path: /notification.subscription.delete
    method: POST
    data_selector: operation
    params:
      apikey: string
      params: struct
- name: notification_subscription_list
  endpoint:
    path: /notification.subscription.list
    method: GET
    data_selector: list
    params:
      apikey: string
- name: GenericOperationCountFilter
  endpoint:
    path: /internal/operation/count_all
    method: GET
    data_selector: records
    params: {}
- name: GenericOperationFilter
  endpoint:
    path: /internal/operation/list_all
    method: GET
    data_selector: records
    params: {}
- name: OperationCreate
  endpoint:
    path: /operation/create_bo
    method: POST
    data_selector: records
    params:
      type: string
- name: OperationListOptions
  endpoint:
    path: /operation/list
    method: GET
    data_selector: records
    params:
      items_per_page: 100
      page: 0
- name: RelaunchOperationParameters
  endpoint:
    path: /operation/relaunch
    method: POST
    data_selector: records
    params: {}
- name: OperationInformation
  endpoint:
    path: /operation/information
    method: GET
    data_selector: records
    params: {}
- name: count
  endpoint:
    path: /paas.count
    method: GET
    data_selector: instances
    params: {}
- name: info
  endpoint:
    path: /paas.info
    method: GET
    data_selector: instance_info
    params: {}
- name: list
  endpoint:
    path: /paas.list
    method: GET
    data_selector: instances
    params: {}
- name: vhost_count
  endpoint:
    path: /paas.vhost.count
    method: GET
    data_selector: virtual_hosts
    params: {}
- name: vhost_get_dns_entries
  endpoint:
    path: /paas.vhost.get_dns_entries
    method: GET
    data_selector: dns_entries
    params: {}
- name: vhost_info
  endpoint:
    path: /paas.vhost.info
    method: GET
    data_selector: vhost_info
    params: {}
- name: vhost_list
  endpoint:
    path: /paas.vhost.list
    method: GET
    data_selector: virtual_hosts
    params: {}
- name: snapshot_count
  endpoint:
    path: /paas.snapshot.count
    method: GET
    data_selector: snapshots
    params: {}
- name: snapshot_info
  endpoint:
    path: /paas.snapshot.info
    method: GET
    data_selector: snapshot_info
    params: {}
- name: snapshot_list
  endpoint:
    path: /paas.snapshot.list
    method: GET
    data_selector: snapshots
    params: {}
- name: type_count
  endpoint:
    path: /paas.type.count
    method: GET
    data_selector: types
    params: {}
- name: type_list
  endpoint:
    path: /paas.type.list
    method: GET
    data_selector: types
    params: {}
- name: site
  endpoint:
    path: /site
    method: POST
    data_selector: result
- name: site
  endpoint:
    path: /site
    method: GET
    data_selector: records
    params: {}
- name: SiteOperationReturn
  endpoint:
    path: /site/operation
    method: POST
    data_selector: operation
    params: {}
- name: SiteReturn
  endpoint:
    path: /site/info
    method: GET
    data_selector: site_info
    params: {}
- name: SiteKeyReturn
  endpoint:
    path: /site/key
    method: GET
    data_selector: site_key
    params: {}
- name: SitePackageListReturn
  endpoint:
    path: /site/package
    method: GET
    data_selector: package_list
    params: {}
- name: domain_create
  endpoint:
    path: /domain.create
    method: POST
    params:
      --dry-run: true
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Store your API key in a safe place.
- The Gandi API does not maintain sessions.
- A maximum of 30 calls per 2 seconds are permitted with the same Gandi API Key.
- You must authenticate yourself by passing the API key as the first method's argument.
- Due to some limitation, certificates are NOT available in Gandi OT&E System.
- You must authenticate yourself by passing the API key as the first method's argument
- Ensure correct configuration of OAuth2 authentication
- PEAR::XML_RPC2 has known bugs on methods calls.
- API connection key is required for all operations.
- Some endpoints may require specific parameters based on their functionality.
- 'Changed in version 3.3.18: key `validation` has been added.'
- 'Changed in version 3.3.0: keys `security_question_num`, `security_question_answer`
  are deprecated and will be removed in the next major release.'
- API requires an API key for authorization
- Supports pagination for listing contacts
- the Domain API does not use HTTP authentication. It uses a custom authentication
  mechanism based on the API key.
- Type defaults to http302 if not specified
- The Domain API does not use HTTP authentication. It uses a custom authentication
  mechanism based on the API key.
- XML_RPC2 works with a ‘prefix’ in order to bind to namespace.
- The domain deletion is currently a restricted feature.
- You can only modify the zones you own
- In some cases, some of these fields may be nil.
- The Hosting API only manages devices and servers instances.
- 'Changed in version 3.3.32: key `dc_code` has been added.'
- This API is deprecated and is going to be dropped soon
- Ensure your prepaid account has enough credit for operations
- The Notification API does not use the standard HTTP authentication scheme. It uses
  a custom authentication mechanism based on the API key.
- 'Changed in version 3.3.38: keys x-vn_registrant_ident_number, x-my_passport_number,
  x-vn_registrant_prefix, x-dk_ident_number, x-no_ident_number, x-pl_company_number,
  x-pl_vatid, x-al_id_type, x-dk_registrant_vatid, x-ma_vatid, x-vn_registrant_birth_date,
  x-au_registrant_domain_relation_type, x-ee_company_number, x-vn_company_number,
  x-xn--55qx5d_registrant_document_number, x-al_vatid, x-au_registrant_id_type, x-ax_business_number,
  x-au_registrant_id_number, x-ma_id_number, x-sa_company_number, x-eu_country_of_citizenship,
  x-xn--io0a7i_registrant_document_number, x-al_id_number, x-xn--io0a7i_registrant_document_type,
  x-pl_ident_number, x-au_registrant_organization, x-xn--fiqs8s_registrant_document_number,
  x-ax_id_number, x-fi_birthdate, x-cn_registrant_document_type, x-vn_registrant_job,
  x-dk_admin_vatid, x-zuerich_uid_number, x-xn--fiqs8s_registrant_document_type, x-ee_birthdate,
  x-xn--55qx5d_registrant_document_type, x-cn_registrant_document_number, x-au_registrant_domain_relation
  have been added.'
- the Gandi PaaS API does not use the HTTP authentication scheme. It uses a custom
  authentication mechanism based on the API key.
errors:
- A prereservation for this domain already exists
- SMD not match label
- SMD is revoked
- Domain need more nameservers
- Waiting for the contact to provide registration documents
- Waiting for the start of the registration phase
- Waiting for the registration of the premium domain to be processed
- Waiting for domain to be released
- Nameservers issue during domain creation
- Domain have pendingTransfer status
- Waiting for the domain to be declared on our NS servers
- The wanted object is duplicate
- There is a missing parameter
- The query was ratelimited
- The query timeout
- Unknown
- 'authorization_error: An authorization error happened'
- 'domain_change_owner:changeowner_prohibited: Change Owner is not allowed on this
  domain.'
- 'domain_change_owner:domain_not_found: Domain was not found'
- 'domain_status_update:command_failed: The command failed at registry.'
- 'domain_status_update:invalid_status: The domain update is prohibited.'
- 'missing_parameter: There is a missing parameter'
- 'ratelimit: The query was ratelimited'
- 'timeout: The query timeout'
- 'domain_delete:client_delete_prohibited: Domain registry status prevents deletion.'
- 'domain_delete:delete_refused: You refused to delete, cancel this operation.'
- 'domain_delete:domain_not_ours: Domain is not ours at the registry.'
- 'domain_delete:foa_timeout: The delete FOA is more than 15 days old.'
- 'domain_delete:no_domain: Could not find the domain in database.'
- 'domain_delete:no_foa: This domain delete has no FOA.'
- 'domain_delete:no_foa_answers: This domain delete has no FOA answers.'
- 'domain_delete:wrong_innerstep: Don’t know this inner step.'
- 'duplicate: The wanted object is duplicate'
- 'unknown: Unknown'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'EC_INVALIDPARAM1: Invalid parameter provided'
- 'EC_INTERNALERR2: Internal error occurred'
- '401 Unauthorized: Recheck API key or permissions'
- 'transfer_availability_error: TLD is discontinued'
- 'transfer_availability_eoi: TLD is in Expression of Interest phase'
- 'transfer_availability_error: SLD not supported or does not exist'
- 'reserved_corporate: User without a Corporate Account'
- 'domain_is_restorable: Domain is in restore period'
- 'transfer_prohibited: Domain statuses prevent Transfer'
- 'site:invalid_operation: The operation is not valid.'
- 'site:wrong_status: Site need to be deleted to be restored.'
- '505237: Error on object : OBJECT_FQDN (CAUSE_BADPARAMETER)'
- 'qualif: 5'
- 'object: 52'
- 'cause: 37'
- 'EC_MISSINGMANDATORY: missing field admin'
- 'EC_MISSINGMANDATORY: missing field owner'
- 'EC_MISSINGMANDATORY: missing field duration'
- 'EC_MISSINGMANDATORY: missing field bill'
- 'EC_MISSINGMANDATORY: missing field tech'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://rpc.gandi.net/xmlrpc/
  auth:
    type: apikey
source_metadata: null
