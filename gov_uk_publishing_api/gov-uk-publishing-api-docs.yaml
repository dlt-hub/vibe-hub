resources:
- name: content
  endpoint:
    path: /v2/content/:content_id
    method: PUT
    data_selector: links
    params:
      previous_version: optional, recommended
      bulk_publishing: 'optional, default: false'
- name: publish_content
  endpoint:
    path: /v2/content/:content_id/publish
    method: POST
    data_selector: links
    params:
      previous_version: optional, recommended
      bulk_publishing: 'optional, default: false'
- name: republish_content
  endpoint:
    path: /v2/content/:content_id/republish
    method: POST
    data_selector: links
    params:
      previous_version: optional, recommended
      bulk_publishing: 'optional, default: false'
- name: unpublish_content
  endpoint:
    path: /v2/content/:content_id/unpublish
    method: POST
    data_selector: links
    params:
      previous_version: optional, recommended
      bulk_publishing: 'optional, default: false'
- name: discard_draft_content
  endpoint:
    path: /v2/content/:content_id/discard-draft
    method: POST
    data_selector: links
    params:
      previous_version: optional, recommended
      bulk_publishing: 'optional, default: false'
- name: get_content
  endpoint:
    path: /v2/content
    method: GET
    data_selector: editions
    params: {}
- name: content
  endpoint:
    path: /v2/content/:content_id
    method: GET
- name: links
  endpoint:
    path: /v2/links/:content_id
    method: GET
- name: editions
  endpoint:
    path: /v2/editions
    method: GET
- name: lookup_by_base_path
  endpoint:
    path: /lookup-by-base-path
    method: POST
- name: publish_intent
  endpoint:
    path: /publish-intent(/*base_path)
    method: PUT
- name: delete_publish_intent
  endpoint:
    path: /publish-intent(/*base_path)
    method: DELETE
- name: delete_paths
  endpoint:
    path: /paths/:base_path
    method: DELETE
- name: put_paths
  endpoint:
    path: /paths/:base_path
    method: PUT
- name: account-api
  endpoint:
    path: /repos/account-api.html
    method: GET
- name: asset-manager
  endpoint:
    path: /repos/asset-manager.html
    method: GET
- name: content-data-api
  endpoint:
    path: /repos/content-data-api.html
    method: GET
- name: content-store
  endpoint:
    path: /repos/content-store.html
    method: GET
- name: email-alert-api
  endpoint:
    path: /repos/email-alert-api.html
    method: GET
- name: hmrc-manuals-api
  endpoint:
    path: /repos/hmrc-manuals-api.html
    method: GET
- name: link-checker-api
  endpoint:
    path: /repos/link-checker-api.html
    method: GET
- name: locations-api
  endpoint:
    path: /repos/locations-api.html
    method: GET
- name: places-manager
  endpoint:
    path: /repos/places-manager.html
    method: GET
- name: publishing-api
  endpoint:
    path: /repos/publishing-api.html
    method: GET
- name: search-api
  endpoint:
    path: /repos/search-api.html
    method: GET
- name: search-api-v2
  endpoint:
    path: /repos/search-api-v2.html
    method: GET
- name: support-api
  endpoint:
    path: /repos/support-api.html
    method: GET
- name: repos_by_type
  endpoint:
    path: /repos
    method: GET
    data_selector: repositories
- name: repos_by_team
  endpoint:
    path: /repos/by-team
    method: GET
    data_selector: repositories
- name: repos
  endpoint:
    path: /repos.json
    method: GET
    data_selector: records
- name: document_types
  endpoint:
    path: /document-types.csv
    method: GET
    data_selector: data
    params: {}
- name: put-content
  endpoint:
    path: /repos/publishing-api/api.html
    method: PUT
- name: patch-link-set
  endpoint:
    path: /repos/publishing-api/api.html
    method: PATCH
- name: document
  endpoint:
    path: /repos/publishing-api/api.html
    method: GET
    data_selector: records
- name: edition
  endpoint:
    path: /repos/publishing-api/api.html
    method: GET
    data_selector: records
- name: unpublishing
  endpoint:
    path: /repos/publishing-api/api.html
    method: GET
    data_selector: records
- name: content
  endpoint:
    path: /v2/content/:content_id
    method: PUT
- name: publish_content
  endpoint:
    path: /v2/content/:content_id/publish
    method: POST
- name: published_documents
  endpoint:
    path: /repositories/publishing-api/rabbitmq.html
    method: POST
    data_selector: messages
    params: {}
- name: rails_app
  endpoint:
    path: /manual/get-started.html
    method: GET
- name: applications
  endpoint:
    path: /manual/applications
    method: GET
- name: naming
  endpoint:
    path: /manual/naming
    method: GET
- name: Content Store
  endpoint:
    path: /api/content
    method: GET
    data_selector: content
    params: {}
- name: Search API
  endpoint:
    path: /api/search
    method: GET
    data_selector: results
    params: {}
- name: local_authority
  endpoint:
    path: /local-authorities
    method: GET
    data_selector: local_authorities
    params: {}
- name: postcode
  endpoint:
    path: /locations/postcode
    method: GET
    data_selector: results
- name: homepage
  endpoint:
    path: /homepage
    method: GET
- name: places_manager_api
  endpoint:
    path: /places_manager_api_pact_test
    method: GET
    data_selector: interaction
    params: {}
- name: gds_api_adapters
  endpoint:
    path: /gds_api_adapters
    method: GET
    data_selector: interaction
    params: {}
- name: security-analysis
  endpoint:
    path: /manual/security-analysis
    method: GET
- name: security-alerts
  endpoint:
    path: /manual/security-alerts.html
    method: GET
- name: dependency-review
  endpoint:
    path: /marketplace/actions/dependency-review
    method: GET
    data_selector: logs
    params: {}
- name: security-alerts
  endpoint:
    path: /manual/security-alerts.html
    method: GET
    data_selector: alerts
    params: {}
- name: load_test
  endpoint:
    path: /world
    method: GET
    data_selector: responses
- name: CI Workflow
  endpoint:
    path: /.github/workflows/ci.yml
    method: GET
    data_selector: jobs
- name: CI
  endpoint:
    path: /.github/workflows/ci.yml
    method: GET
    data_selector: jobs
    params: {}
- name: CI workflow
  endpoint:
    path: /manual/test-and-build-a-project-with-GitHub-Actions
    method: GET
    data_selector: workflow
    params: {}
notes:
- You must specify your email address as the MFA device name.
- If you don’t have admin access to your laptop, file a ticket with the IT helpdesk
  and copy your line manager.
- All content is available under the Open Government Licence v3.0
- Nobody is expected to understand every part of GOV.UK - you don’t need to know how
  to fix every issue on your own
- Logs are not as important as being available - if you need to lose some logs in
  order to bring the site back up, that’s probably a good trade-off to make
- This website is partially compliant with the Web Content Accessibility Guidelines
  version 2.1 AA standard.
- The Publishing API aims to provide workflow as a service so that common publishing
  features can be written once and used by all publishing applications across Government.
- Link expansion is complicated and thus can be challenging for developers to understand.
- This document serves as a broad introduction to the domain models used in the Publishing
  API and their respective purposes.
- Individual applications require bearer tokens to access the publishing API.
- This document has not been updated for a while now. It may be out of date.
- GOV.UK have adopted the FutureLearn readable feature test approach to writing feature
  tests in RSpec
- Develop your Rails app in line with the conventions for Rails applications.
- Name your Rails app in line with the conventions for naming apps.
- You must add a `LICENCE` file to your project’s root folder that specifies the software
  licence.
- Change the default `README.md` file to match the standard README template.
- currently (as of 04/08/2020) GOV.UK Notify has a maximum rate limit of 350 requests
  per second and a daily limit of 30 million emails per day
- When a request to GOV.UK fails, we need to handle the error in some way, so that
  GOV.UK does not look completely broken.
- Applications should report exceptions to Sentry. Applications must not swallow errors.
- Notifications should be actionable.
- Uses Fastly CDN for content delivery
- Caching behavior can impact data freshness
- OS Places Api keeps itself up to date automatically and should never be more than
  about a week out of date.
- ONS Postcode Directory is refreshed roughly 2-3 times a year.
- Add a note to the top of the README explaining that the repo has been retired and,
  if applicable, what has replaced it.
- Archiving a repo does not remove its GitHub Pages site (if any). The site stays
  up but the settings become read-only.
- There is no separate app for homepage, all the code for homepage lives inside the
  Mainstream Publisher app and hence any user permission required for homepage is
  also managed via the Mainstream Publisher app.
- GDS API Adapters is often used as the consumer for pact tests.
- When an application calls an API directly, that application will be the consumer.
- CodeQL scans may fail because they cannot find source code for a specified language,
  despite detecting other languages.
- Do not create public GitHub issues for security vulnerabilities. They may expose
  sensitive information.
- The CI workflow file should be named 'ci.yml' and located in the '.github/workflows'
  directory.
- The CI workflow should have a 'name' property with a value of 'CI'.
- The workflow should be configured to run on 'push' to the default branch (main)
  and 'pull_request' events.
- Pull Requests must not be merged until the jobs defined in the CI workflow have
  passed.
- You should always define a workflow called CI.
- You should name the file used for configuring the CI workflow `ci.yml`. It should
  live in the `.github/workflows` directory.
- The CI workflow configured above should have a `name` property with a value of `CI`.
- Pull Requests must not be merged until the jobs defined in the `CI` workflow have
  passed.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'If you cannot make your shift because you’re ill, message the delivery manager
  and #govuk-technical-on-call Slack channel'
- Some links are broken.
- Some headings do not fit with the content that follows.
- Some links do not clearly explain where they lead, or that they lead to external
  sites.
- Some pages skip heading levels.
- Some images do not have good alternative text, or have no alternative text.
- Some content uses emojis without alternative text.
- '409 Conflict: Previous version does not match'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- Bugs, where the application crashes unexpectedly
- Sidekiq non-retryable errors (or retries exhausted)
- Intermittent errors without user impact
- Intermittent errors with user impact
- User input errors, e.g. user submits a form with invalid data.
- IP spoof errors (HTTP 400).
- Environmental errors, e.g. errors due to data sync.
- '404 Not Found: Check the requested URL'
- '500 Internal Server Error: Retry the request later'
- Encountered a fatal error while running CodeQL database finalize - CodeQL detected
  code written in JavaScript/TypeScript, but not any written in Ruby.
auth_info:
  mentioned_objects: []
client:
  base_url: https://github.com/alphagov/govuk-developer-docs
  headers:
    Accept: application/json
source_metadata: null
