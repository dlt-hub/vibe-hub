resources:
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: null
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: null
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: null
    params: {}
- name: bundle_selection
  endpoint:
    path: /bundle_selections
    method: POST
    data_selector: bundle_selection
- name: retrieve_bundle_selection
  endpoint:
    path: /bundle_selections/{id}
    method: GET
    data_selector: bundle_selection
- name: update_bundle_selection
  endpoint:
    path: /bundle_selections/{id}
    method: PUT
    data_selector: bundle_selection
- name: delete_bundle_selection
  endpoint:
    path: /bundle_selections/{id}
    method: DELETE
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: charges_list
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: apply_discount
  endpoint:
    path: /charges/{id}/apply_discount
    method: POST
    data_selector: charge
- name: remove_discount
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
- name: unskip_charge
  endpoint:
    path: /charges/{id}/unskip
    method: POST
    data_selector: charge
    params: {}
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
- name: capture_charge
  endpoint:
    path: /charges/{id}/capture_payment
    method: POST
    data_selector: charge
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkouts
- name: checkout
  endpoint:
    path: /services/data/vXX.X/sobjects/Checkout
    method: GET
    data_selector: records
    params: {}
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params:
      get_shipping_rates: true
- name: retrieve_checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
    params: {}
- name: collection_products_bulk
  endpoint:
    path: /collections/{id}/collection_products-bulk
    method: POST
    data_selector: collection_products
    params: {}
- name: credit_accounts
  endpoint:
    path: /credit_accounts
    method: GET
    data_selector: credit_accounts
    params: {}
- name: credit_adjustments
  endpoint:
    path: /credit_adjustments
    method: GET
    data_selector: credit_adjustments
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: checkouts
  endpoint:
    path: /checkouts/{token}
    method: PUT
    data_selector: checkout
    params:
      incremental: updated_at
- name: shipping_rates
  endpoint:
    path: /checkouts/{token}/shipping_rates
    method: GET
    data_selector: shipping_rates
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: POST
    data_selector: collection
    params: {}
- name: collection_detail
  endpoint:
    path: /collections/{id}
    method: GET
    data_selector: collection
    params: {}
- name: update_collection
  endpoint:
    path: /collections/{id}
    method: PUT
    data_selector: collection
    params: {}
- name: delete_collection
  endpoint:
    path: /collections/{id}
    method: DELETE
    data_selector: {}
    params: {}
- name: customers
  endpoint:
    path: /customers/{id}
    method: GET
    data_selector: customer
- name: delivery_schedule
  endpoint:
    path: /customers/{id}/delivery_schedule
    method: GET
    data_selector: deliverySchedule
- name: credit_summary
  endpoint:
    path: /customers/{id}/credit_summary
    method: GET
    data_selector: credit_summary
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
- name: discount
  endpoint:
    path: /discounts/{id}
    method: PUT
    data_selector: discount
    params: {}
- name: metafield
  endpoint:
    path: /metafields
    method: POST
    data_selector: metafield
    params: {}
- name: notification
  endpoint:
    path: /customers/{id}/notifications
    method: POST
    data_selector: {}
    params: {}
- name: onetime
  endpoint:
    path: /onetimes
    method: POST
    data_selector: onetime
    params: {}
- name: onetimes
  endpoint:
    path: /onetimes
    method: GET
    data_selector: onetimes
    params:
      limit: '50'
- name: create_onetime
  endpoint:
    path: /onetimes
    method: POST
    data_selector: onetime
- name: retrieve_onetime
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
- name: update_onetime
  endpoint:
    path: /onetimes/{id}
    method: PUT
    data_selector: onetime
- name: delete_onetime
  endpoint:
    path: /onetimes/{id}
    method: DELETE
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
- name: clone_order
  endpoint:
    path: /orders/{id}/clone
    method: POST
    data_selector: order
- name: delay_order
  endpoint:
    path: /orders/{id}/delay
    method: POST
    data_selector: order
- name: order
  endpoint:
    path: /orders/{id}
    method: PUT
    data_selector: order
    params: {}
- name: payment_method
  endpoint:
    path: /payment_methods
    method: POST
    data_selector: payment_method
    params: {}
- name: payment_method
  endpoint:
    path: /payment_methods/{id}
    method: PUT
    data_selector: payment_method
    params: {}
- name: async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params:
      limit: '50'
- name: bulk_create_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: POST
    data_selector: plans
- name: bulk_update_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: PUT
    data_selector: plans
- name: bulk_delete_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: DELETE
    data_selector: plans
- name: create_product
  endpoint:
    path: /products
    method: POST
    data_selector: product
- name: retrieve_product
  endpoint:
    path: /products/{external_product_id}
    method: GET
    data_selector: product
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: retention_strategies
  endpoint:
    path: /retention_strategies
    method: GET
    data_selector: retention_strategies
- name: store
  endpoint:
    path: /store
    method: GET
    data_selector: store
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscription
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: retrieve_subscription
  endpoint:
    path: /subscriptions/{id}
    method: GET
    data_selector: subscription
- name: subscriptions
  endpoint:
    path: /subscriptions/{id}
    method: PUT
    data_selector: subscription
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: change_next_charge_date
  endpoint:
    path: /subscriptions/{id}/set_next_charge_date
    method: POST
    data_selector: subscription
    params: {}
- name: change_address
  endpoint:
    path: /subscriptions/{id}/change_address
    method: POST
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{id}/cancel
    method: POST
    data_selector: subscription
    params: {}
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
    data_selector: subscription
    params: {}
- name: skip_gift_subscription
  endpoint:
    path: /subscriptions/skip_gift
    method: POST
    data_selector: response
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: webhook
    params: {}
- name: update_webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    data_selector: response
    params: {}
- name: test_webhook
  endpoint:
    path: /webhooks/{id}/test
    method: POST
    data_selector: response
    params: {}
- name: async_batches
  endpoint:
    path: /async_batches
    method: GET
    data_selector: async_batches
- name: async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
- name: create_async_batch
  endpoint:
    path: /async_batches
    method: POST
    data_selector: async_batch
- name: process_async_batch
  endpoint:
    path: /async_batches/{batch_id}/process
    method: POST
    data_selector: async_batch
- name: tasks_async_batch
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
- name: async_batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: GET
    data_selector: async_batch_tasks
    params:
      ids: string
- name: token_information
  endpoint:
    path: /token_information
    method: GET
    data_selector: token_information
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
    params: {}
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
    params: {}
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
    params: {}
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: {}
    params: {}
- name: list_addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: {}
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: ''
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: ''
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: ''
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: charge_refund
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
- name: charge_refund
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: address_count
  endpoint:
    path: /addresses/count
    method: GET
    data_selector: count
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: charges
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: count_addresses
  endpoint:
    path: /addresses/count
    method: GET
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: discounts
  endpoint:
    path: /discounts
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: address
- name: count_addresses
  endpoint:
    path: /addresses/count
    method: GET
    data_selector: count
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: address
- name: charges
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
- name: charge_count
  endpoint:
    path: /charges/count
    method: GET
    data_selector: count
    params: {}
- name: checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
- name: charge_refund
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: charge_skip
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: {}
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: {}
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
- name: list_charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
- name: charge_count
  endpoint:
    path: /charges/count
    method: GET
    data_selector: count
    params: {}
- name: change_next_charge_date
  endpoint:
    path: /charges/{id}/change_next_charge_date
    method: POST
    data_selector: charge
    params: {}
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
    params: {}
- name: unskip_charge
  endpoint:
    path: /charges/{id}/unskip
    method: POST
    data_selector: charge
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
    params: {}
- name: capture_payment
  endpoint:
    path: /charges/{id}/capture_payment
    method: POST
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
    params: {}
- name: checkout
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params: {}
- name: retrieve_checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
    params: {}
- name: update_checkout
  endpoint:
    path: /checkouts/{token}
    method: PUT
    data_selector: checkout
    params: {}
- name: shipping_rates
  endpoint:
    path: /checkouts/{token}/shipping_rates
    method: GET
    data_selector: shipping_rates
- name: charge_checkout
  endpoint:
    path: /checkouts/{token}/charge
    method: POST
    data_selector: checkout_charge
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: customer
  endpoint:
    path: /customers/{id}
    method: GET
    data_selector: customer
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params:
      limit: '50'
- name: customers_count
  endpoint:
    path: /customers/count
    method: GET
    data_selector: count
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: async_batches_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: null
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discount_count
  endpoint:
    path: /discounts/count
    method: GET
    data_selector: count
- name: apply_discount_to_address
  endpoint:
    path: /addresses/{id}/apply_discount
    method: POST
    data_selector: address
- name: apply_discount_to_charge
  endpoint:
    path: /charges/{id}/apply_discount
    method: POST
    data_selector: charge
- name: update_discount
  endpoint:
    path: /discounts/{id}
    method: PUT
    data_selector: discount
- name: delete_discount
  endpoint:
    path: /discounts/{id}
    method: DELETE
- name: async_batches_tasks
  endpoint:
    path: /async_batches/<batch_id>/tasks
    method: POST
    data_selector: tasks
- name: remove_discount
  endpoint:
    path: /addresses/<address_id>/remove_discount/
    method: POST
- name: metafields
  endpoint:
    path: /metafields
    method: POST
    data_selector: metafield
- name: metafields
  endpoint:
    path: /metafields
    method: GET
    data_selector: metafields
- name: create_metafield
  endpoint:
    path: /metafields/{id}
    method: PUT
    data_selector: metafield
- name: delete_metafield
  endpoint:
    path: /metafields/{id}
    method: DELETE
- name: notifications
  endpoint:
    path: /customers/{id}/notifications
    method: POST
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params:
      limit: '50'
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
    params: {}
- name: onetimes
  endpoint:
    path: /onetimes
    method: GET
    data_selector: onetimes
    params:
      limit: '50'
- name: onetime
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
    params: {}
- name: create_onetime
  endpoint:
    path: /onetimes
    method: POST
    data_selector: onetime
    params: {}
- name: update_onetime
  endpoint:
    path: /onetimes/{id}
    method: PUT
    data_selector: onetime
    params: {}
- name: delete_onetime
  endpoint:
    path: /onetimes/{id}
    method: DELETE
    data_selector: {}
    params: {}
- name: order_count
  endpoint:
    path: /orders/count
    method: GET
    data_selector: count
- name: change_order_date
  endpoint:
    path: /orders/{id}/change_date
    method: POST
    data_selector: order
- name: update_shopify_variant
  endpoint:
    path: /orders/{id}/update_shopify_variant/{remote_variant_id}
    method: PUT
    data_selector: order
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
- name: order_delay
  endpoint:
    path: /orders/{id}/delay
    method: POST
- name: async_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
- name: product
  endpoint:
    path: /products
    method: POST
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params:
      limit: '50'
- name: product_count
  endpoint:
    path: /products/count
    method: GET
    data_selector: count
    params: {}
- name: shop
  endpoint:
    path: /shop
    method: GET
    data_selector: shop
    params: {}
- name: async_batches_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: tasks
    params: {}
- name: shipping_countries
  endpoint:
    path: /shop/shipping_countries
    method: GET
    data_selector: shipping_countries
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: subscription_count
  endpoint:
    path: /subscriptions/count
    method: GET
    data_selector: count
    params: {}
- name: set_next_charge_date
  endpoint:
    path: /subscriptions/{id}/set_next_charge_date
    method: POST
    data_selector: subscription
- name: change_address
  endpoint:
    path: /subscriptions/{id}/change_address
    method: POST
    data_selector: subscription
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
    data_selector: subscription
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
- name: subscriptions_bulk_update
  endpoint:
    path: /addresses/{id}/subscriptions-bulk
    method: PUT
    data_selector: subscriptions
- name: subscriptions_bulk_delete
  endpoint:
    path: /addresses/{id}/subscriptions-bulk
    method: DELETE
    data_selector: subscriptions
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: webhook_by_id
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: webhook
- name: update_webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
- name: delete_webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    data_selector: ''
- name: async_batches
  endpoint:
    path: /async_batches
    method: GET
    data_selector: async_batches
- name: create_async_batch
  endpoint:
    path: /async_batches
    method: POST
    data_selector: async_batch
- name: retrieve_async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
- name: process_async_batch
  endpoint:
    path: /async_batches/{batch_id}/process
    method: POST
    data_selector: async_batch
- name: batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: tasks
    params: {}
- name: list_batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: GET
    data_selector: async_batch_tasks
    params: {}
- name: token_information
  endpoint:
    path: /token_information
    method: GET
    data_selector: token_information
    params: {}
- name: address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: list_addresses
  endpoint:
    path: /addresses
    method: GET
- name: checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: addresses_count
  endpoint:
    path: /addresses/count
    method: GET
    data_selector: count
- name: charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: retrieve_charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: count_addresses
  endpoint:
    path: /addresses/count
    method: GET
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
- name: list_charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: address
- name: count_addresses
  endpoint:
    path: /addresses/count
    method: GET
    data_selector: count
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: address
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charge
    params: {}
- name: retrieve_charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: charge_count
  endpoint:
    path: /charges/count
    method: GET
    data_selector: count
- name: checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
- name: charge_refund
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: charge_skip
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
- name: list_charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: address
- name: count_addresses
  endpoint:
    path: /addresses/count
    method: GET
    data_selector: count
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: address
- name: charges_count
  endpoint:
    path: /charges/count
    method: GET
    data_selector: count
    params: {}
- name: change_next_charge_date
  endpoint:
    path: /charges/{id}/change_next_charge_date
    method: POST
    data_selector: charge
    params: {}
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
    params: {}
- name: unskip_charge
  endpoint:
    path: /charges/{id}/unskip
    method: POST
    data_selector: charge
    params: {}
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
    params: {}
- name: capture_payment
  endpoint:
    path: /charges/{id}/capture_payment
    method: POST
    data_selector: charge
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params: {}
- name: retrieve_checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
    params: {}
- name: update_checkout
  endpoint:
    path: /checkouts/{token}
    method: PUT
    data_selector: checkout
    params: {}
- name: shipping_rates
  endpoint:
    path: /checkouts/{token}/shipping_rates
    method: GET
    data_selector: shipping_rates
- name: charge_checkout
  endpoint:
    path: /checkouts/{token}/charge
    method: POST
    data_selector: checkout_charge
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: customer
  endpoint:
    path: /customers/{id}
    method: GET
    data_selector: customer
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params:
      limit: '50'
- name: customers_count
  endpoint:
    path: /customers/count
    method: GET
    data_selector: count
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discount_count
  endpoint:
    path: /discounts/count
    method: GET
    data_selector: count
- name: apply_discount_to_address
  endpoint:
    path: /addresses/{id}/apply_discount
    method: POST
- name: apply_discount_to_charge
  endpoint:
    path: /charges/{id}/apply_discount
    method: POST
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
- name: update_discount
  endpoint:
    path: /discounts/{id}
    method: PUT
- name: delete_discount
  endpoint:
    path: /discounts/{id}
    method: DELETE
- name: async_batches_tasks
  endpoint:
    path: /async_batches/<batch_id>/tasks
    method: POST
    data_selector: tasks
    params: {}
- name: addresses_remove_discount
  endpoint:
    path: /addresses/<address_id>/remove_discount
    method: POST
    data_selector: ''
    params: {}
- name: metafields
  endpoint:
    path: /metafields
    method: POST
    data_selector: metafield
    params: {}
- name: metafields
  endpoint:
    path: /metafields
    method: GET
    data_selector: metafields
    params:
      owner_resource: store
      limit: '50'
- name: metafield_count
  endpoint:
    path: /metafields/count
    method: GET
    data_selector: count
    params:
      owner_resource: store
- name: create_metafield
  endpoint:
    path: /metafields/{id}
    method: PUT
    data_selector: metafield
- name: delete_metafield
  endpoint:
    path: /metafields/{id}
    method: DELETE
- name: send_notification
  endpoint:
    path: /customers/{id}/notifications
    method: POST
    data_selector: '{}'
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: '{}'
- name: onetimes
  endpoint:
    path: /onetimes
    method: GET
    data_selector: onetimes
    params:
      limit: '50'
- name: create_onetime_task
  endpoint:
    path: /async_batches/<batch_id>/tasks
    method: POST
    data_selector: tasks
- name: retrieve_onetime
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
- name: update_onetime
  endpoint:
    path: /onetimes/{id}
    method: PUT
    data_selector: onetime
- name: delete_onetime
  endpoint:
    path: /onetimes/{id}
    method: DELETE
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
- name: order_list
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params:
      limit: '50'
- name: update_order
  endpoint:
    path: /orders/{id}
    method: PUT
    data_selector: order
- name: delete_order
  endpoint:
    path: /orders/{id}
    method: DELETE
- name: count_orders
  endpoint:
    path: /orders/count
    method: GET
- name: orders_count
  endpoint:
    path: /orders/count
    method: GET
    data_selector: count
    params: {}
- name: change_order_date
  endpoint:
    path: /orders/{id}/change_date
    method: POST
    data_selector: order
    params: {}
- name: update_shopify_variant
  endpoint:
    path: /orders/{id}/update_shopify_variant/{remote_variant_id}
    method: PUT
    data_selector: order
    params: {}
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
    params: {}
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params:
      limit: '50'
- name: shop
  endpoint:
    path: /shop
    method: GET
    data_selector: shop
- name: product_count
  endpoint:
    path: /products/count
    method: GET
    data_selector: count
- name: order_delay
  endpoint:
    path: /orders/{id}/delay
    method: POST
    data_selector: order
    params: {}
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
    params: {}
- name: product
  endpoint:
    path: /products
    method: POST
    data_selector: product
    params: {}
- name: async_batches_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: tasks
- name: shipping_countries
  endpoint:
    path: /shop/shipping_countries
    method: GET
    data_selector: shipping_countries
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: count_subscriptions
  endpoint:
    path: /subscriptions/count
    method: GET
    data_selector: count
- name: subscriptions_set_next_charge_date
  endpoint:
    path: /subscriptions/{id}/set_next_charge_date
    method: POST
- name: subscriptions_change_address
  endpoint:
    path: /subscriptions/{id}/change_address
    method: POST
- name: subscriptions_activate
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
- name: async_batches_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
- name: bulk_update_subscriptions
  endpoint:
    path: /addresses/{id}/subscriptions-bulk
    method: PUT
    data_selector: subscriptions
- name: bulk_delete_subscriptions
  endpoint:
    path: /addresses/{id}/subscriptions-bulk
    method: DELETE
    data_selector: subscriptions
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: retrieve_webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: webhook
- name: update_webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
- name: delete_webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
- name: list_webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: test_webhook
  endpoint:
    path: /webhooks/{id}/test
    method: POST
- name: async_batches
  endpoint:
    path: /async_batches
    method: GET
    data_selector: async_batches
- name: async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
- name: create_async_batch
  endpoint:
    path: /async_batches
    method: POST
    data_selector: async_batch
- name: process_async_batch
  endpoint:
    path: /async_batches/{batch_id}/process
    method: POST
    data_selector: async_batch
- name: batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: tasks
    params: {}
- name: list_batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: GET
    data_selector: async_batch_tasks
    params: {}
- name: token_information
  endpoint:
    path: /token_information
    method: GET
    data_selector: token_information
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
    params:
      limit: '50'
- name: create_address
  endpoint:
    path: /addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: merge_addresses
  endpoint:
    path: /addresses/merge
    method: POST
    data_selector: address
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
- name: list_charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
- name: bundle_selection
  endpoint:
    path: /bundle_selections
    method: POST
    data_selector: bundle_selection
    params: {}
- name: list_bundle_selections
  endpoint:
    path: /bundle_selections
    method: GET
    data_selector: bundle_selections
    params: {}
- name: retrieve_bundle_selection
  endpoint:
    path: /bundle_selections/{id}
    method: GET
    data_selector: bundle_selection
    params: {}
- name: update_bundle_selection
  endpoint:
    path: /bundle_selections/{id}
    method: PUT
    data_selector: bundle_selection
    params: {}
- name: delete_bundle_selection
  endpoint:
    path: /bundle_selections/{id}
    method: DELETE
    data_selector: bundle_selection
    params: {}
- name: apply_discount
  endpoint:
    path: /charges/{id}/apply_discount
    method: POST
    data_selector: charge
    params: {}
- name: remove_discount
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
    params: {}
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
    params: {}
- name: unskip_charge
  endpoint:
    path: /charges/{id}/unskip
    method: POST
    data_selector: charge
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
- name: capture_payment
  endpoint:
    path: /charges/{id}/capture_payment
    method: POST
    data_selector: charge
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: ''
- name: checkout
  endpoint:
    path: /services/data/vXX.X/sobjects/Checkout
    method: GET
    data_selector: checkout
    params: {}
- name: checkout
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params:
      get_shipping_rates: 'true'
- name: retrieve_checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
    params: {}
- name: checkout
  endpoint:
    path: /checkouts/{token}
    method: PUT
    data_selector: checkout
    params: {}
- name: shipping_rates
  endpoint:
    path: /checkouts/{token}/shipping_rates
    method: GET
    data_selector: shipping_rates
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: POST
    data_selector: collection
    params: {}
- name: collection
  endpoint:
    path: /collections/{id}
    method: GET
    data_selector: collection
    params: {}
- name: update_collection
  endpoint:
    path: /collections/{id}
    method: PUT
    data_selector: collection
    params: {}
- name: delete_collection
  endpoint:
    path: /collections/{id}
    method: DELETE
    data_selector: {}
    params: {}
- name: collection_products_bulk_add
  endpoint:
    path: /collections/{id}/collection_products-bulk
    method: POST
- name: collection_products_bulk_remove
  endpoint:
    path: /collections/{id}/collection_products-bulk
    method: DELETE
- name: credit_accounts
  endpoint:
    path: /credit_accounts
    method: GET
- name: credit_adjustments
  endpoint:
    path: /credit_adjustments
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: POST
- name: customers
  endpoint:
    path: /customers/{id}
    method: PUT
    data_selector: customer
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: discounts
  endpoint:
    path: /discounts/{id}
    method: PUT
    data_selector: discount
    params: {}
- name: metafields
  endpoint:
    path: /metafields
    method: POST
    data_selector: metafield
    params: {}
- name: notifications
  endpoint:
    path: /customers/{id}/notifications
    method: POST
    data_selector: {}
    params: {}
- name: onetimes
  endpoint:
    path: /onetimes
    method: POST
    data_selector: onetime
    params: {}
- name: onetimes
  endpoint:
    path: /onetimes
    method: GET
    data_selector: onetimes
    params:
      limit: '50'
- name: create_onetime
  endpoint:
    path: /onetimes
    method: POST
    data_selector: onetime
- name: retrieve_onetime
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
- name: update_onetime
  endpoint:
    path: /onetimes/{id}
    method: PUT
    data_selector: onetime
- name: delete_onetime
  endpoint:
    path: /onetimes/{id}
    method: DELETE
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
    params: {}
- name: clone_order
  endpoint:
    path: /orders/{id}/clone
    method: POST
    data_selector: order
    params:
      scheduled_at: datetime
- name: delay_order
  endpoint:
    path: /orders/{id}/delay
    method: POST
    data_selector: order
    params: {}
- name: order
  endpoint:
    path: /orders/{id}
    method: PUT
    data_selector: order
    params: {}
- name: payment_method
  endpoint:
    path: /payment_methods/{id}
    method: GET
    data_selector: payment_method
    params: {}
- name: payment_methods
  endpoint:
    path: /payment_methods/{id}
    method: PUT
    data_selector: payment_method
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params:
      limit: '50'
      page: '1'
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: retention_strategies
  endpoint:
    path: /retention_strategies
    method: GET
    data_selector: retention_strategies
- name: bulk_create_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: POST
    data_selector: plans
- name: bulk_update_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: PUT
    data_selector: plans
- name: bulk_delete_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: DELETE
    data_selector: plans
- name: create_product
  endpoint:
    path: /products
    method: POST
    data_selector: product
- name: retrieve_product
  endpoint:
    path: /products/{external_product_id}
    method: GET
    data_selector: product
- name: store
  endpoint:
    path: /store
    method: GET
    data_selector: store
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscription
- name: subscriptions
  endpoint:
    path: /subscriptions/{id}
    method: PUT
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{id}/cancel
    method: POST
    data_selector: subscription
    params: {}
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
    data_selector: subscription
    params: {}
- name: change_address
  endpoint:
    path: /subscriptions/{id}/change_address
    method: POST
    data_selector: subscription
    params: {}
- name: set_next_charge_date
  endpoint:
    path: /subscriptions/{id}/set_next_charge_date
    method: POST
    data_selector: subscription
    params: {}
- name: skip_gift_subscription
  endpoint:
    path: /subscriptions/skip_gift
    method: POST
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: create_webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: webhook
    params: {}
- name: update_webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: test_webhook
  endpoint:
    path: /webhooks/{id}/test
    method: POST
    data_selector: ''
    params: {}
- name: async_batches
  endpoint:
    path: /async_batches
    method: GET
    data_selector: async_batches
    params: {}
- name: create_async_batch
  endpoint:
    path: /async_batches
    method: POST
    data_selector: async_batch
    params: {}
- name: retrieve_async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
    params: {}
- name: process_async_batch
  endpoint:
    path: /async_batches/{batch_id}/process
    method: POST
    data_selector: async_batch
    params: {}
- name: async_batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: tasks
    params: {}
- name: list_batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: GET
    data_selector: async_batch_tasks
    params:
      ids: ''
- name: token_information
  endpoint:
    path: /token_information
    method: GET
    data_selector: token_information
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params:
      created_at_min: ''
      created_at_max: ''
      object_type: ''
      object_id: ''
      verbs: ''
      customer_id: ''
      origin: ''
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
    params: {}
- name: address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
    params: {}
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
    params: {}
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
    params: {}
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: {}
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: addresses
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
    params: {}
- name: address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
    params: {}
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
    params: {}
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
- name: charge_refund
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: addresses_count
  endpoint:
    path: /addresses/count
    method: GET
    data_selector: count
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: retrieve_charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: charges
  endpoint:
    path: /charges
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: products
  endpoint:
    path: /products
    method: GET
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
    data_selector: address
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: address
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: charges_count
  endpoint:
    path: /charges/count
    method: GET
    data_selector: count
    params: {}
- name: charges
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: list_charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params:
      limit: '50'
- name: checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /customers/{id}/addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: count_addresses
  endpoint:
    path: /addresses/count
    method: GET
    data_selector: count
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: list_charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: charges_count
  endpoint:
    path: /charges/count
    method: GET
    data_selector: count
    params: {}
- name: change_next_charge_date
  endpoint:
    path: /charges/{id}/change_next_charge_date
    method: POST
    data_selector: charge
    params: {}
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
    params: {}
- name: unskip_charge
  endpoint:
    path: /charges/{id}/unskip
    method: POST
    data_selector: charge
    params: {}
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
- name: checkout
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params: {}
- name: retrieve_checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
    params: {}
- name: update_checkout
  endpoint:
    path: /checkouts/{token}
    method: PUT
    data_selector: checkout
    params: {}
- name: capture_payment
  endpoint:
    path: /charges/{id}/capture_payment
    method: POST
    data_selector: charge
    params: {}
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params: {}
- name: shipping_rates
  endpoint:
    path: /checkouts/{token}/shipping_rates
    method: GET
    data_selector: shipping_rates
- name: charge_checkout
  endpoint:
    path: /checkouts/{token}/charge
    method: POST
    data_selector: checkout_charge
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: customer
  endpoint:
    path: /customers/{id}
    method: GET
    data_selector: customer
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params:
      limit: '50'
- name: customers_count
  endpoint:
    path: /customers/count
    method: GET
    data_selector: count
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: GET
    data_selector: discounts
- name: discount_count
  endpoint:
    path: /discounts/count
    method: GET
    data_selector: count
- name: apply_discount_to_address
  endpoint:
    path: /addresses/{id}/apply_discount
    method: POST
    data_selector: address
- name: apply_discount_to_charge
  endpoint:
    path: /charges/{id}/apply_discount
    method: POST
    data_selector: charge
- name: batch_task
  endpoint:
    path: /async_batches/<batch_id>/tasks
    method: POST
    data_selector: tasks
- name: remove_discount_address
  endpoint:
    path: /addresses/<address_id>/remove_discount
    method: POST
    data_selector: {}
- name: remove_discount_charge
  endpoint:
    path: /charges/<charge_id>/remove_discount
    method: POST
    data_selector: {}
- name: metafield
  endpoint:
    path: /metafields
    method: POST
    data_selector: metafield
- name: metafields
  endpoint:
    path: /metafields
    method: GET
    data_selector: metafields
    params:
      limit: '50'
- name: notifications
  endpoint:
    path: /customers/{id}/notifications
    method: POST
    data_selector: '{}'
- name: batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: '{}'
- name: onetimes
  endpoint:
    path: /onetimes
    method: GET
    data_selector: onetimes
    params:
      limit: '50'
- name: onetime
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
    params: {}
- name: create_onetime
  endpoint:
    path: /onetimes
    method: POST
    data_selector: onetime
    params: {}
- name: update_onetime
  endpoint:
    path: /onetimes/{id}
    method: PUT
    data_selector: onetime
    params: {}
- name: delete_onetime
  endpoint:
    path: /onetimes/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params:
      limit: '50'
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
    params: {}
- name: update_order
  endpoint:
    path: /orders/{id}
    method: PUT
    data_selector: order
    params: {}
- name: delete_order
  endpoint:
    path: /orders/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: order_count
  endpoint:
    path: /orders/count
    method: GET
    data_selector: count
    params: {}
- name: change_order_date
  endpoint:
    path: /orders/{id}/change_date
    method: POST
    data_selector: order
    params: {}
- name: update_shopify_variant
  endpoint:
    path: /orders/{id}/update_shopify_variant/{remote_variant_id}
    method: PUT
    data_selector: order
    params: {}
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
    params: {}
- name: order_delay
  endpoint:
    path: /orders/{id}/delay
    method: POST
    data_selector: order
- name: batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: tasks
- name: product
  endpoint:
    path: /products
    method: POST
    data_selector: product
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params:
      limit: '50'
- name: shop
  endpoint:
    path: /shop
    method: GET
    data_selector: shop
    params: {}
- name: shipping_countries
  endpoint:
    path: /shop/shipping_countries
    method: GET
    data_selector: shipping_countries
    params: {}
- name: batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
    params: {}
- name: retrieve_subscription
  endpoint:
    path: /subscriptions/{id}
    method: GET
    data_selector: subscription
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{id}
    method: DELETE
    data_selector: {}
    params: {}
- name: list_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: count_subscriptions
  endpoint:
    path: /subscriptions/count
    method: GET
    data_selector: {}
    params: {}
- name: change_subscription_next_charge_date
  endpoint:
    path: /subscriptions/{id}/set_next_charge_date
    method: POST
    data_selector: subscription
- name: change_subscription_address
  endpoint:
    path: /subscriptions/{id}/change_address
    method: POST
    data_selector: subscription
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
    data_selector: subscription
- name: create_batch_task
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
- name: async_batches
  endpoint:
    path: /async_batches
    method: GET
    data_selector: async_batches
- name: async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
- name: create_async_batch
  endpoint:
    path: /async_batches
    method: POST
    data_selector: async_batch
- name: process_async_batch
  endpoint:
    path: /async_batches/{batch_id}/process
    method: POST
    data_selector: async_batch
- name: bulk_update_subscriptions
  endpoint:
    path: /addresses/{id}/subscriptions-bulk
    method: PUT
    data_selector: subscriptions
- name: bulk_delete_subscriptions
  endpoint:
    path: /addresses/{id}/subscriptions-bulk
    method: DELETE
    data_selector: subscriptions
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
- name: retrieve_webhook
  endpoint:
    path: /webhooks/{id}
    method: GET
    data_selector: webhook
- name: update_webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
- name: delete_webhook
  endpoint:
    path: /webhooks/{id}
    method: DELETE
- name: list_webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: test_webhook
  endpoint:
    path: /webhooks/{id}/test
    method: POST
- name: batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: tasks
- name: list_batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: GET
    data_selector: async_batch_tasks
- name: token_information
  endpoint:
    path: /token_information
    method: GET
    data_selector: token_information
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: merge_addresses
  endpoint:
    path: /addresses/merge
    method: POST
    data_selector: address
- name: bundle_selection
  endpoint:
    path: /bundle_selections
    method: GET
    data_selector: bundle_selection
    params: {}
- name: skip_charge
  endpoint:
    path: /addresses/{id}/charges/skip
    method: POST
    data_selector: charge
    params: {}
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: unskip_charge
  endpoint:
    path: /charges/{id}/unskip
    method: POST
    data_selector: charge
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
- name: apply_discount
  endpoint:
    path: /charges/{id}/apply_discount
    method: POST
    data_selector: charge
    params: {}
- name: remove_discount
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
    params: {}
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
    params: {}
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
- name: capture_payment
  endpoint:
    path: /charges/{id}/capture_payment
    method: POST
    data_selector: charge
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: ''
- name: checkout
  endpoint:
    path: /services/data/vXX.X/sobjects/Checkout
    method: GET
    data_selector: checkout
    params: {}
- name: checkout
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params:
      get_shipping_rates: true
- name: retrieve_checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
    params: {}
- name: checkouts
  endpoint:
    path: /checkouts/{token}
    method: PUT
    data_selector: checkout
    params: {}
- name: shipping_rates
  endpoint:
    path: /checkouts/{token}/shipping_rates
    method: GET
    data_selector: shipping_rates
    params: {}
- name: process_checkout
  endpoint:
    path: /checkouts/{token}/charge
    method: POST
    data_selector: checkout_charge
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: POST
    data_selector: collection
    params: {}
- name: retrieve_collection
  endpoint:
    path: /collections/{id}
    method: GET
    data_selector: collection
    params: {}
- name: update_collection
  endpoint:
    path: /collections/{id}
    method: PUT
    data_selector: collection
    params: {}
- name: delete_collection
  endpoint:
    path: /collections/{id}
    method: DELETE
    data_selector: collection
    params: {}
- name: collection_products_bulk_add
  endpoint:
    path: /collections/{id}/collection_products-bulk
    method: POST
    data_selector: collection_products
    params: {}
- name: collection_products_bulk_delete
  endpoint:
    path: /collections/{id}/collection_products-bulk
    method: DELETE
    data_selector: collection_products
    params: {}
- name: credit_accounts
  endpoint:
    path: /credit_accounts
    method: GET
    data_selector: credit_accounts
    params: {}
- name: credit_adjustments
  endpoint:
    path: /credit_adjustments
    method: GET
    data_selector: credit_adjustments
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: customers
  endpoint:
    path: /customers/{id}
    method: PUT
    data_selector: customer
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: discount
  endpoint:
    path: /discounts/{id}
    method: PUT
    data_selector: discount
    params: {}
- name: metafield
  endpoint:
    path: /metafields/{id}
    method: GET
    data_selector: metafield
    params: {}
- name: customer_notification
  endpoint:
    path: /customers/{id}/notifications
    method: POST
    data_selector: ''
    params: {}
- name: onetime
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
    params: {}
- name: onetime
  endpoint:
    path: /onetimes
    method: GET
    data_selector: onetimes
    params:
      limit: '50'
- name: create_onetime
  endpoint:
    path: /onetimes
    method: POST
    data_selector: onetime
- name: retrieve_onetime
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
- name: update_onetime
  endpoint:
    path: /onetimes/{id}
    method: PUT
    data_selector: onetime
- name: delete_onetime
  endpoint:
    path: /onetimes/{id}
    method: DELETE
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
    params: {}
- name: clone_order
  endpoint:
    path: /orders/{id}/clone
    method: POST
    data_selector: order
    params: {}
- name: delay_order
  endpoint:
    path: /orders/{id}/delay
    method: POST
    data_selector: order
    params: {}
- name: orders
  endpoint:
    path: /orders/{id}
    method: PUT
    data_selector: order
- name: payment_methods
  endpoint:
    path: /payment_methods/{id}
    method: GET
    data_selector: payment_method
- name: payment_methods
  endpoint:
    path: /payment_methods/{id}
    method: PUT
    data_selector: payment_method
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params:
      limit: '50'
- name: plans_bulk_create
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: POST
    data_selector: plans
    params: {}
- name: plans_bulk_update
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: PUT
    data_selector: plans
    params: {}
- name: plans_bulk_delete
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: DELETE
    data_selector: plans
    params: {}
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: product
    params: {}
- name: retrieve_product
  endpoint:
    path: /products/{external_product_id}
    method: GET
    data_selector: product
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: retention_strategies
  endpoint:
    path: /retention_strategies
    method: GET
    data_selector: retention_strategies
- name: store
  endpoint:
    path: /store
    method: GET
    data_selector: store
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscription
- name: skip_gift_subscription
  endpoint:
    path: /subscriptions/skip_gift
    method: POST
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{id}
    method: PUT
    data_selector: subscription
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: list_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: null
    params: {}
- name: set_next_charge_date
  endpoint:
    path: /subscriptions/{id}/set_next_charge_date
    method: POST
    data_selector: subscription
    params: {}
- name: change_address
  endpoint:
    path: /subscriptions/{id}/change_address
    method: POST
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{id}/cancel
    method: POST
    data_selector: subscription
    params: {}
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
    data_selector: subscription
    params: {}
- name: async_batches
  endpoint:
    path: /async_batches
    method: GET
    data_selector: async_batches
- name: create_async_batch
  endpoint:
    path: /async_batches
    method: POST
    data_selector: async_batch
- name: retrieve_async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
- name: process_async_batch
  endpoint:
    path: /async_batches/{batch_id}/process
    method: POST
    data_selector: async_batch
- name: add_tasks_to_async_batch
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
    data_selector: count
- name: async_batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: GET
    data_selector: async_batch_tasks
    params:
      ids: ''
- name: token_information
  endpoint:
    path: /token_information
    method: GET
    data_selector: token_information
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: ''
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: address
  endpoint:
    path: /addresses
    method: GET
    data_selector: addresses
- name: create_address
  endpoint:
    path: /addresses
    method: POST
    data_selector: address
- name: retrieve_address
  endpoint:
    path: /addresses/{id}
    method: GET
    data_selector: address
- name: update_address
  endpoint:
    path: /addresses/{id}
    method: PUT
    data_selector: address
- name: delete_address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: merge_addresses
  endpoint:
    path: /addresses/merge
    method: POST
    data_selector: address
- name: bundle_selection
  endpoint:
    path: /bundle_selections
    method: POST
    data_selector: bundle_selection
- name: charge
  endpoint:
    path: /charges/{id}
    method: GET
    data_selector: charge
    params: {}
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: charges
    params: {}
- name: apply_discount
  endpoint:
    path: /charges/{id}/apply_discount
    method: POST
    data_selector: charge
    params: {}
- name: remove_discount
  endpoint:
    path: /async_batches/{id}
    method: GET
    data_selector: async_batch
    params: {}
- name: skip_charge
  endpoint:
    path: /charges/{id}/skip
    method: POST
    data_selector: charge
    params: {}
- name: unskip_charge
  endpoint:
    path: /charges/{id}/unskip
    method: POST
    data_selector: charge
    params: {}
- name: refund_charge
  endpoint:
    path: /charges/{id}/refund
    method: POST
    data_selector: charge
    params: {}
- name: checkout
  endpoint:
    path: /checkouts
    method: GET
    data_selector: checkout
    params: {}
- name: process_charge
  endpoint:
    path: /charges/{id}/process
    method: POST
    data_selector: charge
- name: capture_charge
  endpoint:
    path: /charges/{id}/capture_payment
    method: POST
    data_selector: charge
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: ''
- name: create_checkout
  endpoint:
    path: /checkouts
    method: POST
    data_selector: checkout
    params:
      get_shipping_rates: 'true'
- name: retrieve_checkout
  endpoint:
    path: /checkouts/{token}
    method: GET
    data_selector: checkout
    params: {}
- name: checkouts
  endpoint:
    path: /checkouts/{token}
    method: PUT
    data_selector: checkout
    params: {}
- name: shipping_rates
  endpoint:
    path: /checkouts/{token}/shipping_rates
    method: GET
    data_selector: shipping_rates
    params: {}
- name: collections
  endpoint:
    path: /collections
    method: GET
    data_selector: collections
    params: {}
- name: customers
  endpoint:
    path: /customers/{id}
    method: PUT
    data_selector: customer
    params: {}
- name: discounts
  endpoint:
    path: /discounts
    method: POST
    data_selector: discount
    params: {}
- name: collection_products_bulk
  endpoint:
    path: /collections/{id}/collection_products-bulk
    method: POST
    data_selector: collection_products
    params: {}
- name: credit_accounts
  endpoint:
    path: /credit_accounts
    method: GET
    data_selector: credit_accounts
    params:
      limit: '50'
- name: credit_adjustments
  endpoint:
    path: /credit_adjustments
    method: GET
    data_selector: credit_adjustments
    params:
      limit: '50'
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: customer
    params: {}
- name: discounts
  endpoint:
    path: /discounts/{id}
    method: PUT
    data_selector: discount
    params: {}
- name: metafields
  endpoint:
    path: /metafields
    method: POST
    data_selector: metafield
    params: {}
- name: notifications
  endpoint:
    path: /customers/{id}/notifications
    method: POST
    data_selector: null
    params: {}
- name: onetimes
  endpoint:
    path: /onetimes/{id}
    method: GET
    data_selector: onetime
    params: {}
- name: onetime
  endpoint:
    path: /onetimes
    method: GET
    data_selector: onetimes
    params:
      limit: '50'
- name: order
  endpoint:
    path: /orders/{id}
    method: GET
    data_selector: order
    params: {}
- name: clone_order
  endpoint:
    path: /orders/{id}/clone
    method: POST
    data_selector: order
    params:
      scheduled_at: datetime
- name: delay_order
  endpoint:
    path: /orders/{id}/delay
    method: POST
    data_selector: order
    params: {}
- name: orders
  endpoint:
    path: /orders/{id}
    method: PUT
    data_selector: order
    params: {}
- name: payment_methods
  endpoint:
    path: /payment_methods
    method: POST
    data_selector: payment_method
    params: {}
- name: payment_methods
  endpoint:
    path: /payment_methods/{id}
    method: PUT
    data_selector: payment_method
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params:
      limit: '50'
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: retention_strategies
  endpoint:
    path: /retention_strategies
    method: GET
    data_selector: retention_strategies
- name: bulk_create_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: POST
    data_selector: plans
    params:
      plans: []
- name: bulk_update_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: PUT
    data_selector: plans
    params:
      plans: []
- name: bulk_delete_plans
  endpoint:
    path: /products/{external_product_id}/plans-bulk
    method: DELETE
    data_selector: plans
    params:
      plans: []
- name: create_product
  endpoint:
    path: /products
    method: POST
    data_selector: product
    params: {}
- name: retrieve_product
  endpoint:
    path: /products/{external_product_id}
    method: GET
    data_selector: product
    params: {}
- name: store
  endpoint:
    path: /store
    method: GET
    data_selector: store
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscription
- name: retrieve_subscription
  endpoint:
    path: /subscriptions/{id}
    method: GET
    data_selector: subscription
- name: skip_gift_subscription
  endpoint:
    path: /subscriptions/skip_gift
    method: POST
    data_selector: ''
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions/{id}
    method: PUT
    data_selector: subscription
    params: {}
- name: delete_subscription
  endpoint:
    path: /subscriptions/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: list_subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: change_next_charge_date
  endpoint:
    path: /subscriptions/{id}/set_next_charge_date
    method: POST
    data_selector: subscription
    params: {}
- name: change_address
  endpoint:
    path: /subscriptions/{id}/change_address
    method: POST
    data_selector: subscription
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{id}/cancel
    method: POST
    data_selector: subscription
    params: {}
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
    data_selector: subscription
    params: {}
- name: batch_tasks
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: GET
- name: token_information
  endpoint:
    path: /token_information
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
- name: async_batches
  endpoint:
    path: /async_batches
    method: GET
- name: async_batch
  endpoint:
    path: /async_batches/{id}
    method: GET
- name: create_async_batch
  endpoint:
    path: /async_batches
    method: POST
- name: process_async_batch
  endpoint:
    path: /async_batches/{batch_id}/process
    method: POST
- name: add_tasks_to_batch
  endpoint:
    path: /async_batches/{batch_id}/tasks
    method: POST
notes:
- Only Addresses with no active Subscriptions can be deleted.
- All requests must be made over HTTPS.
- When no version is specified it will default to the default version on your store.
- BundleSelections endpoints are available for Recharge Pro merchants.
- Processed charges older than 90 days will not appear in responses.
- You cannot add a `Discount` to an existing queued `Charge` if the `Charge` or the
  associated `Address` already has one.
- If a `Charge` has a `Discount` and it gets updated, the `Discount` will be lost.
- Requires write_orders and write_payment_methods scopes.
- The `Checkout` endpoints are only available for BigCommerce and Custom.
- Shipping cost and sales tax determination are automatic functions of the Recharge
  Checkout resource.
- The Checkout endpoints are only available for BigCommerce and Custom.
- There is a set limit of 250 products that can be added per request.
- The Checkout endpoints are only available for BigCommerce and Custom. Checkouts
  on Shopify must go through Shopify.
- Requires API token for authentication.
- Requires setup of API token for authentication.
- Ensure appropriate permissions are set for each resource.
- API uses X-Recharge-Access-Token for authentication.
- If you see 'You do not have sufficient permissions (scopes) for this object', update
  the token to have 'Read access' or 'Read and Write access'.
- Requires setup of API token for access
- There is a limit of 20 plans per request.
- Requires API token for authentication
- Subscriptions require at least one Plan to be added
- 'When updating subscription `status` attribute from `cancelled` to `active`, following
  attributes will be set to null: `cancelled_at`, `cancellation_reason` and `cancellation_reason_comments`.'
- When updating `order_interval_unit` OR `order_interval_frequency` OR `charge_interval_frequency`,
  all three parameters are required.
- Ensure idempotency of the webhook call by detecting duplicates within your application.
- Webhook acknowledges receipt of data by sending a 200 OK response.
- API Token must have read permissions for Subscriptions enabled (`read_subscriptions`).
- API Token must have read permissions for Store enabled (`read_store`).
- Webhooks created through the API can be verified by calculating a digital signature.
- The Events API is limited to events that occurred in the last 7 days.
- Only Addresses with no active subscriptions can be deleted.
- Each request to the API should contain an API token in the header.
- Requires setup of access token with appropriate scopes
- Processed charges that have a value for processed_at greater than 90 days will no
  longer appear in responses starting March 19th, 2025.
- Processed charges older than 90 days will no longer appear in responses starting
  March 19th, 2025.
- Processed charges over 90 days old will no longer appear in responses.
- Returned charges are sorted ascending by id value by default.
- Address validation works only for USA addresses.
- Starting March 19th, 2025, processed charges that have a value for processed_at
  greater than 90 days in the past will no longer appear in responses.
- Charge data processed over 90 days ago will remain available through the Exports
  tool in the Recharge merchant portal.
- 'Scopes required: write_orders, write_payments'
- Requires setup of API token for access.
- Cursor based pagination is preferred for looping through records.
- Checkouts on Shopify must go through Shopify.
- Checkout endpoints are only available for BigCommerce and Custom.
- Creating a customer in Recharge will not create the customer on any other platform.
- Page-based pagination has been deprecated but still available to use for pages up
  to a 100.
- Cannot add another discount if the address already has a discount.
- Batches may contain up to 10,000 tasks.
- 'Scopes required: read_orders for retrieving orders, write_orders for updating and
  deleting orders.'
- The API includes operations for managing one-time products.
- Batches will only leverage resources from the same version they are created in.
- 'Scopes: write_orders, write_products'
- The 'email' field is deprecated. Use 'shop_email' instead.
- The product must be part of a ruleset to be added to a subscription.
- There is a limit of 20 subscriptions per request.
- Async batches and their tasks will only be retained for one month after batch creation.
- Processed charges older than 90 days will no longer appear in responses.
- Charges are sorted ascending by id value by default.
- Starting March 19th, 2025, processed charges over 90 days old will not appear in
  responses.
- Starting March 19th, 2025, processed charges will no longer appear if processed_at
  is greater than 90 days in the past.
- Charges are sorted ascending by id value.
- Cannot add if an existing queued charge in the address already has a discount.
- A batch can contain up to 10,000 tasks and a single request to add tasks may contain
  up to 1,000 tasks.
- When getting metafields, you must specify owner_resource in the URL. It can be address,
  store, customer, subscription, order, charge.
- Scopes required include read_subscriptions and write_subscriptions.
- 'Scopes required for operations: read_orders, write_orders'
- Uses API key for authentication. Ensure to provide a valid token.
- Some fields are deprecated and will not be removed from this API version.
- Scopes required include write_orders and write_products.
- Batches can contain up to 10,000 tasks.
- Requires setup of API key for authentication
- If there are two active subscriptions with the same address_id, and you update their
  next_charge_date parameters to match, their charges will get merged into a new charge
  with a new id.
- Async batches and their tasks will only be retained in Recharge for one month after
  batch creation.
- When updating the country property you will have to update the zip property as well.
- Cannot add a Discount to an existing queued Charge if the Charge or the associated
  Address already has one.
- If a Charge has a Discount and it gets updated, or a regeneration occurs, the Discount
  will be lost.
- Requires setup of API token in headers
- The `Checkout` endpoints are only available for BigCommerce and Custom. Checkouts
  on Shopify must go through Shopify.
- There is a set limit of 250 products that can be added or removed per request.
- Creating a customer does not create the customer on any other platform.
- Requires setup of connected app in api
- The API allows for both GET and POST requests to manage discounts and metafields.
- Uses API key authentication.
- 'Requires scopes for operations: write_orders, read_payment_methods'
- Multiple Plans may exist for any Product.
- Use X-Recharge-Access-Token for authentication.
- Requires write_subscriptions scope for modifying subscriptions.
- Ensure idempotency of the webhook call by detecting duplicates.
- API Token must have read permissions for Subscriptions and Store enabled.
- Only addresses with no active subscriptions can be deleted.
- Processed charges with a processed_at date greater than 90 days in the past will
  no longer appear in responses.
- Starting March 19th, 2025, processed charges older than 90 days will no longer appear
  in responses.
- 'Scopes: write_orders, write_payments'
- 'Scopes required: read_orders for count, write_orders for change_next_charge_date,
  skip, and unskip operations.'
- You can provide either discount_id or discount_code for applying discounts.
- A batch may contain up to 10,000 tasks.
- There is a limit of 50 metafields per owner_id.
- Ensure to manage rate limits when making API calls.
- Scopes required for various operations include read_subscriptions and write_subscriptions.
- 'Scopes required: read_orders for GET, write_orders for PUT and DELETE.'
- 'Scopes required: write_orders, write_products'
- Query parameters like limit for pagination are available.
- Some fields are deprecated but still present in the API.
- The product needs to be part of a ruleset in order to be added to a subscription.
- If there are two active subscriptions with the same address_id, their charges will
  get merged into a new charge with a new id.
- API token requires write_batches permission to create, retrieve, or process batches.
- Each API token can register a maximum of 10 webhooks of the same topic.
- If one of the Addresses being merged has a different presentment currency, the entire
  merge will fail.
- You cannot add a Discount to an existing queued Charge if the Charge or the associated
  Address already has one.
- The charge processing route can be used to process Charges that are in a queued
  or error status.
- Limit of 250 products can be added per request.
- The customer’s phone number must be in E.164 format.
- Billing zip is required for US citizens when billing country is specified.
- Requires WRITE rights for creating or updating resources.
- Uses API key for authentication, provide your API token in the header.
- You must provide the entire json block for line_items when updating an order.
- Requires specific scopes for write operations
- Uses API key for authentication
- Webhook acknowledges that it received data by sending a `200` OK response.
- 'Scopes: write_subscriptions'
- Webhook validation requires calculating a digital signature.
- Async batches and their tasks will only be retained for one month after creation.
- BundleSelections endpoints are available for Recharge Pro merchants. If you’re interested
  in leveraging the Recharge bundle_selections endpoints, reach out to your account
  manager or our Support team.
- Parameter `billing_zip` is required when updating customer’s `billing_country` parameter
  for US citizens.
- Phone must be in E.164 format, such as `+16175551212`.
- 'Important: there is a set limit of 250 products that can be added per request.'
- Requires setup of API key for authentication.
- Use the latest API version specified in the headers.
- 'Scopes: read_orders, write_orders'
- 'Scopes required for order updates: write_orders'
- 'Scopes required for payment method creation: write_payment_methods'
- Multiple Plans may exist for any Product
- Updating/modifying plans in 2021-11 will impact /products in 2021-01
- Scopes required for various operations include write_products and read_products.
- The API can only be used to create a webhook.
- 'Requires scopes: write_subscriptions'
- API Token must have read permissions for `Subscriptions` and `Store` enabled.
errors:
- '422: Non-integer values will result in a 422 error'
- '400 - Bad Request: The request was unacceptable, often due to a missing required
  parameter.'
- '401 - Unauthorized: No valid API key was provided.'
- '404 - Not Found: The requested resource doesn’t exist.'
- '404: The BundleSelection with bundle_selection_id does not exist'
- '422: Missing required field or invalid items passed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API token'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Ensure the resource exists.'
- '422 Unprocessable: Check request parameters.'
- 400 Bad Request
- 404 Not Found
- 422 Unprocessable
- '200: successful response'
- '201: successful response'
- '204: Content Deleted'
- '422: unprocessable entity'
- '404: Not found'
- '500: internal server error.'
- '422: Invalid parameters.'
- '204: Content Deleted.'
- '401 Unauthorized: Check API token.'
- '404 Not Found: Check endpoint and resource ID.'
- '404 Not Found: Check if the onetime ID is valid.'
- '400 Bad Request: Ensure required fields are included in the request.'
- 'You do not have sufficient permissions (scopes) for this object: Update the token
  to have ''Read access'' or ''Read and Write access''.'
- '404 Not Found: Check the resource ID or URL'
- '422 Unprocessable Entity: Check request body for validation errors'
- '204: Content Deleted: The server has successfully fulfilled the request and deleted
  the desired object and there is no content to send in the response body.'
- '204: successful response'
- '401 Unauthorized: Recheck API token or permissions'
- '404 Not Found: Verify endpoint or resource id'
- '400: Bad Request'
- '422: invalid data passed to the endpoint'
- '401 Unauthorized: Recheck API token permissions.'
- '404 Not Found: Check if the resource exists.'
- '404 Not Found: Charge not found or processed_at date is older than 90 days'
- '404 Not Found: Charge not found or processed_at is older than 90 days.'
- '422: Non-integer values for ids will result in an error.'
- 429 - The request has been rate limited.
- '422: Non-integer values will result in a 422 error.'
- '422: Non-integer values in ids query parameter'
- '404: Not Found'
- '422: Unprocessable'
- '422 Unprocessable: Check your input data'
- '422 Unprocessable: Ensure all required fields are provided.'
- '401 Unauthorized: Recheck your API token.'
- '200: Success'
- '422: Invalid request - check input values.'
- '404 Not Found: Check the endpoint or resource ID'
- '400 Bad Request: Validate the request parameters'
- '404 Not Found: Check the subscription ID or resource path.'
- '401 Unauthorized: Check the API token.'
- '200: Successful response'
- '401: Unauthorized access'
- '201: Success'
- '200 - OK: Everything worked as expected.'
- '404: Charge does not exist or has been removed'
- 403 - The request was authenticated but not authorized for the requested resource
  (permission scope error).
- '404 Not Found: Check if the charge ID is correct or if the charge is older than
  90 days'
- '422: Non-integer values will result in an error.'
- 500 - Internal server error.
- '422 Unprocessable Entity: Non-integer values in IDs'
- '400 Bad Request: Missing required fields'
- '400: Bad Request, check your request format'
- '401: Unauthorized, check your API token'
- '404 Not Found: Check if the onetime ID is correct.'
- '400 Bad Request: Ensure all required fields are included in the request body.'
- '401 Unauthorized: Check your API token.'
- '400 Bad Request: Check the request body for correct parameters.'
- '401 Unauthorized: Verify your API token.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '401 Unauthorized: Recheck API key or permissions'
- '401 Unauthorized: Recheck API token validity'
- '404 Not Found: Check charge ID'
- '404: The BundleSelection with the specified ID does not exist.'
- '422: Missing required field or invalid items passed.'
- 'not_started: batch is not started'
- '422 Unprocessable: Check request body parameters'
- '204 Content Deleted: Successfully deleted the resource.'
- '500: internal server error'
- '422: Unable to process request due to validation errors'
- '204 No Content: The request was successful and there is no content to send in the
  response body.'
- '401 Unauthorized: Recheck API key or token.'
- 'You do not have sufficient permissions (scopes) for this object: Update token for
  correct access'
- '401 Unauthorized: Recheck API token or permissions.'
- '204 No Content: Successful deletion'
- '200 OK: Successful response for updates and activations'
- '401 Unauthorized: Invalid API token'
- '422: Non-integer values in ids parameter will result in an error'
- '422: Non-integer values in ids will result in a 422 error.'
- '422 Unprocessable: Check the request body for required fields.'
- '401 Unauthorized: Check API token and permissions.'
- '404 Not Found: Ensure the onetime ID exists.'
- '422: Unprocessable Entity - Check request parameters.'
- '401: Unauthorized - Check API token.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Ensure your API token is valid'
- '404 Not Found: Verify the resource exists'
- '401: Unauthorized'
- '404 Not Found: Subscription ID does not exist.'
- '400 Bad Request: Invalid request payload or parameters.'
- '422 error: Non-integer values will result in an error when filtering by id.'
- '404: the BundleSelection with bundle_selection_id does not exist'
- '422: missing required field or invalid items passed'
- '404 Not Found: Charge not found.'
- '401 Unauthorized: Invalid API token.'
- '422 Unprocessable: Check request parameters'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not found: Check if the resource exists.'
- '204 Content Deleted: Successfully deleted the collection.'
- '422 Unprocessable Entity: Check the validity of the parameters.'
- You do not have sufficient permissions (scopes) for this object
- '422: Invalid data passed to the endpoint'
- '400 Bad Request: Check the request body for errors.'
- '404 Not Found: Ensure the batch ID is correct.'
- '404 Not Found: If the charge_id does not exist or has been removed.'
- '422 Unprocessable: Invalid request parameters.'
- '404 Not found: Resource not found'
- '204 Content Deleted: Successful deletion'
- '422: Attempting to update apply_credit_to_next_recurring_charge when not allowed
  due to store''s credit settings.'
- '204: Content Deleted: The server has successfully fulfilled the request and deleted
  the desired object.'
- '201: OK: The request was successful, created a new resource.'
- '204 No Content: Successful response for DELETE operations'
- '200 OK: Successful response for GET operations'
auth_info:
  mentioned_objects:
  - OauthToken
  - X-Recharge-Access-Token
  - ApiKey
  - AuthProvider
  - NamedCredential
  - API Token
  - API Client Secret
  - read_orders
  - Scopes
client:
  base_url: https://api.rechargeapps.com
  auth:
    type: apikey
    location: header
    header_name: X-Recharge-Access-Token
  headers:
    X-Recharge-Version: 2021-11
    Content-Type: application/json
source_metadata: null
