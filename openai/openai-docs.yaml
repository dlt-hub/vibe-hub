resources:
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: null
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: null
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: null
- name: audio_transcriptions
  endpoint:
    path: /v1/audio/transcriptions
    method: POST
    data_selector: null
- name: audio_translations
  endpoint:
    path: /v1/audio/translations
    method: POST
    data_selector: null
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: null
    params: {}
- name: image_edit
  endpoint:
    path: /v1/images/edits
    method: POST
    data_selector: null
    params: {}
- name: image_variation
  endpoint:
    path: /v1/images/variations
    method: POST
    data_selector: null
    params: {}
- name: completions
  endpoint:
    path: /v1/completions
    method: POST
    data_selector: null
    params: {}
- name: edits
  endpoint:
    path: /v1/edits
    method: POST
    data_selector: null
    params: {}
- name: campaign_member
  endpoint:
    path: /api/campaign_member
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /api/contact
    method: GET
    data_selector: records
    params: {}
- name: signup
  endpoint:
    path: /signup
    method: POST
- name: add_or_edit_record
  endpoint:
    path: /add_or_edit_record
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: sign_up
  endpoint:
    path: /signup
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: groups
  endpoint:
    path: /groups
    method: GET
    data_selector: records
    params: {}
- name: agent_observability
  endpoint:
    path: /services/data/vXX.X/sobjects/AgentObservability
    method: GET
    data_selector: records
    params: {}
- name: mistral
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: post
  endpoint:
    path: /api/v1/posts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_resource
  endpoint:
    path: /v1/resource
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: compliance_center_version_history
  endpoint:
    path: /api/compliance/version_history
    method: GET
    data_selector: version_history
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: scrape_session
  endpoint:
    path: /scrape_session
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_key
  endpoint:
    path: /api/keys
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /mywebhook/test
    method: POST
    data_selector: result
    params: {}
- name: tasks_production
  endpoint:
    path: /mywebhook/production
    method: POST
    data_selector: result
    params: {}
- name: recipes
  endpoint:
    path: /api/recipes
    method: POST
    data_selector: data
    params: {}
- name: proteins
  endpoint:
    path: /api/proteins
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: models
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: audio_transcriptions
  endpoint:
    path: /v1/audio/transcriptions
    method: POST
    data_selector: text
    params: {}
- name: audio_translations
  endpoint:
    path: /v1/audio/translations
    method: POST
    data_selector: text
    params: {}
- name: image_generations
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: data
    params: {}
- name: image_edits
  endpoint:
    path: /v1/images/edits
    method: POST
    data_selector: data
    params: {}
- name: image_variations
  endpoint:
    path: /v1/images/variations
    method: POST
    data_selector: data
    params: {}
- name: completions
  endpoint:
    path: /v1/completions
    method: POST
    data_selector: choices
    params: {}
- name: edits
  endpoint:
    path: /v1/edits
    method: POST
    data_selector: choices
    params: {}
- name: create_edit
  endpoint:
    path: /v1/edits
    method: POST
    data_selector: edited_text
- name: images
  endpoint:
    path: /api/images
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /api/v1/campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/v1/contact
    method: GET
    data_selector: records
- name: mcp_server
  endpoint:
    path: /services/data/v1/mcp_server
    method: GET
    data_selector: records
- name: performance_insights
  endpoint:
    path: /services/data/v1/performance_insights
    method: GET
    data_selector: records
- name: openai_chat_completion
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params:
      stream: false
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: get_publishable_key
  endpoint:
    path: /get-publishable-key
    method: GET
    data_selector: publishable_key
- name: create_payment_intent
  endpoint:
    path: /create-payment-intent
    method: POST
    data_selector: clientSecret
- name: payment_intent
  endpoint:
    path: /create-payment-intent
    method: POST
    data_selector: clientSecret
- name: publishable_key
  endpoint:
    path: /get-publishable-key
    method: GET
    data_selector: key
- name: webhook_test
  endpoint:
    path: /mywebhook/test
    method: POST
- name: webhook_production
  endpoint:
    path: /mywebhook/production
    method: POST
- name: send_message
  endpoint:
    path: /v1/projects/YOUR_PROJECT_ID/messages:send
    method: POST
    data_selector: results
    params: {}
- name: addons
  endpoint:
    path: /api/v1/addons
    method: GET
    data_selector: records
    params: {}
- name: GET Filter
  endpoint:
    path: /transform/get/filter
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /sites/{site_id}/webhooks
    method: POST
    data_selector: records
    params: {}
- name: recipes
  endpoint:
    path: /api/recipes
    method: POST
    data_selector: records
    params: {}
- name: recipe
  endpoint:
    path: /api/recipes
    method: POST
    data_selector: data
    params: {}
- name: recipes
  endpoint:
    path: /api/recipes
    method: POST
    data_selector: data
    params: {}
- name: proteins
  endpoint:
    path: /api/proteins
    method: GET
    data_selector: data
    params: {}
- name: runs
  endpoint:
    path: /api/runs
    method: GET
    data_selector: records
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: records
- name: fine_tuning
  endpoint:
    path: /api/fine-tuning
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: models
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: audio_transcriptions
  endpoint:
    path: /v1/audio/transcriptions
    method: POST
    data_selector: text
    params: {}
- name: audio_translations
  endpoint:
    path: /v1/audio/translations
    method: POST
    data_selector: text
    params: {}
- name: image_generation
  endpoint:
    path: /v1/images/generations
    method: POST
    data_selector: ''
    params: {}
- name: image_edit
  endpoint:
    path: /v1/images/edits
    method: POST
    data_selector: ''
    params: {}
- name: image_variation
  endpoint:
    path: /v1/images/variations
    method: POST
    data_selector: ''
    params: {}
- name: completions
  endpoint:
    path: /v1/completions
    method: POST
    data_selector: ''
    params: {}
- name: edits
  endpoint:
    path: /v1/edits
    method: POST
    data_selector: edited_text
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Skill Sprint
  endpoint:
    path: /community-challenges
    method: GET
    data_selector: challenges
    params: {}
- name: 'Challenge #34 - Value Collector'
  endpoint:
    path: /knowledge-base/post/challenge-34---value-collector-O6nY8c0btC256KF
    method: GET
    data_selector: instructions
    params: {}
- name: 'Challenge #33 - Key Extractor'
  endpoint:
    path: /knowledge-base/post/challenge-33---key-extractor-64XUWtuVGxIu9cB
    method: GET
    data_selector: instructions
    params: {}
- name: 'Challenge #32 - Filter Non-Empty Entries from an Array'
  endpoint:
    path: /knowledge-base/post/challenge-32---filter-non-empty-entries-from-an-array-l1bC5opcrGE2fhE
    method: GET
    data_selector: instructions
    params: {}
- name: 'Challenge #31 - Flatten a Multi-Dimensional Array'
  endpoint:
    path: /knowledge-base/post/challenge-31---flatten-a-multi-dimensional-array-WPxI59NKWpBPdAq
    method: GET
    data_selector: instructions
    params: {}
- name: 'Challenge #30 - Add Item to Beginning of Array'
  endpoint:
    path: /knowledge-base/post/challenge-30---add-item-to-beginning-of-array-TA4VctW5yTm5Oni
    method: GET
    data_selector: instructions
    params: {}
- name: 'Challenge #29 - Add Item to End of Array'
  endpoint:
    path: /knowledge-base/post/challenge-29---push-item-to-end-of-array-hO3qqu2tMU4AZSq
    method: GET
    data_selector: instructions
    params: {}
- name: 'Challenge #28 - Count Items in Array'
  endpoint:
    path: /knowledge-base/post/challenge-28---count-items-in-array-WYsKJar7twM33OJ
    method: GET
    data_selector: instructions
    params: {}
- name: 'Challenge #19 - Case Converter'
  endpoint:
    path: /knowledge-base/post/challenge-19---case-converter-eZFnjKGl94Bb745
    method: GET
    data_selector: instructions
    params: {}
- name: 'Text Substitution - Challenge #18'
  endpoint:
    path: /knowledge-base/post/text-substitution---challenge-18-BCQSxE2DIJu1NBn
    method: GET
    data_selector: instructions
    params: {}
- name: 'String Concatenation - Challenge #17'
  endpoint:
    path: /knowledge-base/post/string-concatenation---challenge-17-ROK1HE0z4d3FX4b
    method: GET
    data_selector: instructions
    params: {}
- name: 'Rounding Down a Decimal - Challenge #27'
  endpoint:
    path: /knowledge-base/post/rounding-down-a-decimal---challenge-27-Fv9ihVLO9X1iS9C
    method: GET
    data_selector: instructions
    params: {}
- name: 'Rounding Up a Decimal - Challenge #26'
  endpoint:
    path: /knowledge-base/post/rounding-up-a-decimal---challenge-26-zNPdw8S0l7nCM5c
    method: GET
    data_selector: instructions
    params: {}
- name: 'Calculate Absolute Value - Challenge #25'
  endpoint:
    path: /knowledge-base/post/challenge-25---calculate-absolute-value-THmhiFA0oixoNZk
    method: GET
    data_selector: instructions
    params: {}
- name: 'Compute Quotient - Challenge #24'
  endpoint:
    path: /knowledge-base/post/compute-quotient---challenge-24-1mNIX5cKhA1ro7z
    method: GET
    data_selector: instructions
    params: {}
- name: 'Compute the Difference - Challenge #21'
  endpoint:
    path: /knowledge-base/post/compute-the-difference---challenge-21-1x2Q8GXv8BQQtSu
    method: GET
    data_selector: instructions
    params: {}
- name: 'Compute Integer Sum - Challenge #20'
  endpoint:
    path: /knowledge-base/post/compute-sum---challenge-20-U1djiABvcZp2d45
    method: GET
    data_selector: instructions
    params: {}
- name: spending_analysis
  endpoint:
    path: /knowledge-base/post/spending-analysis-T6ywegpuMP1CE52
    method: GET
    data_selector: array
    params: {}
- name: spending_category
  endpoint:
    path: /knowledge-base/post/spending-analysis-wFvF4Lp4jEGqJXt
    method: GET
    data_selector: array
    params: {}
- name: transaction_summary
  endpoint:
    path: /knowledge-base/post/transaction-summary-rNQx2valVnc545W
    method: GET
    data_selector: array
    params: {}
- name: spending_stats
  endpoint:
    path: /knowledge-base/post/spending-stats-InDylbgMuuBRgpq
    method: GET
    data_selector: array
    params: {}
- name: json_data_modification
  endpoint:
    path: /knowledge-base/post/json-data-modification-vtLRjdibDmACYWc
    method: GET
    data_selector: array
    params: {}
- name: lowest_temperature
  endpoint:
    path: /knowledge-base/post/lowest-temperature-LTCOihjZgDSCtI1
    method: GET
    data_selector: array
    params: {}
- name: array_contains_challenge
  endpoint:
    path: /knowledge-base/post/array-contains-challenge-pt6LqPM7UCxIGa3
    method: GET
    data_selector: array
    params: {}
- name: book
  endpoint:
    path: /books
    method: GET
    data_selector: properties
    params: {}
- name: person
  endpoint:
    path: /person
    method: GET
    data_selector: keys_array
    params: {}
- name: filtered_array
  endpoint:
    path: /knowledge-base/post/challenge-32---filter-non-empty-entries-from-an-array-l1bC5opcrGE2fhE
    method: GET
    data_selector: expected_result
    params: {}
- name: nested_array
  endpoint:
    path: /nested_array
    method: GET
    data_selector: flattened_array
    params: {}
- name: transaction_summary
  endpoint:
    path: /transaction-summary
    method: GET
    data_selector: array_of_objects
- name: customer
  endpoint:
    path: /api:IZ8IN-R8/customer_csv
    method: GET
- name: transaction
  endpoint:
    path: /api:IZ8IN-R8/transaction_csv
    method: GET
notes:
- Uses API key for authentication.
- Some endpoints may experience rate limits based on subscription plan.
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in Xano
- Some objects may return nulls in deeply nested fields
- Ensure proper resource management to avoid memory issues.
- Be aware of null values in JSON data handling.
- Authentication and secure auth token handling are already set up
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Endpoints keep disappearing and require updates to both tables to get them back.
- Sometimes returns a 401 error or 'Xano signup endpoint cannot be loaded' error.
- Getting an error 'Failed to init Xano, please ensure your API key has the permission
  required.' but I have given 'All Access' to that key. This is a new issue post 2.0
  release.
- Same key works with Xano Auth plugin so I believe the issue is on Xano not WeWeb
- 'Rate limits apply: 25 requests per 20 seconds on free plans.'
- 'Failed to fetch realtime channels: Whoa there! Your plan only supports 25 requests
  per 20 seconds.'
- Agents clearly took a back seat vs XanoScript / 2.0 launch
- Regardless of beta status we don't intend to introduce breaking changes without
  clear communication
- Some API responses may contain null values in nested fields
- Scheduled tasks may overlap if they take longer than the interval, leading to duplicate
  processing.
- Consider using a lock system with a key-value flag to prevent overlapping runs.
- If data arrives infrequently, reduce the schedule or trigger tasks manually.
- A dashboard could be useful to monitor queue size and task run timing.
- API has a rate limit of 5 requests/second; implement throttling to avoid exceeding
  this limit.
- Some responses may include nulls in optional fields
- Xano does not support formula or computed fields in the database, like Airtable
  does.
- Xano 2.0 allows building production-grade backends with code, visual, or AI modalities.
- All existing insight history will be deleted as part of this deploy. The new data
  format will be used moving forward.
- Tenant-level read-safe endpoints added.
- 'HDS Compliance Add-on [Paid Upgrade]: Compliance with Hébergement de Données de
  Santé (HDS), ensuring the confidentiality, integrity, availability, and strict localization
  of the health data processed on our platform.'
- New Switzerland Server Region available for deployment
- Workflow tests can take time to execute.
- This feature could enable true test-driven development (TDD) in Xano.
- This is just an experimental internal tool, so it’s not quite 'production-ready'.
- Xano may enhance this feature in the future.
- There is no overview of which API endpoints are disabled, causing me to open and
  check every one of them one at a time.
- Xano recommends creating API authentication schemes by associating an API key with
  a given user.
- Requires setup of the Xano workspace.
- API keys are required for authentication
- API requests should include the Authorization header with Bearer token
- Ensure OAuth2 is correctly set up to avoid authentication issues.
- The focus of this conversation is on resolving an issue related to an API call within
  Adalo that involves integrating with Xano, specifically around time zone handling
  and data formatting.
- Initially, there were errors (HTTP 500 and 400) occurring due to incorrect date
  and time formatting between Adalo and Xano.
- The user was guided to change the time zone handling in the API calls from New York
  time to UTC.
- Streaming APIs need to be more robust with error messages.
- Some objects may return nulls in deeply nested fields.
- Now includes built-in functions for transforming arrays—no Lambdas, no loops, no
  guesswork.
- Direct Query functions and external connections will need to be updated.
- All new workspaces made after this release will default to the new format, but you
  can always convert back.
- Streaming function available in OpenAI API to get responses as they come in.
- Sesha INVST is part of the Xano Community
- Xano - The Fastest No Code Backend Dev Platform
- Xano handles real-time websockets and authentication.
- Build a real-time collaborative drawing app in minutes
- Xano handles more than data
- Best practices for securing AI Agents
- Designing safe and auditable backend systems
- How Xano helps enforce authentication, access control, and data protection
- Page not found.
- This guide is not for the faint of heart and can get pretty technical.
- Proceed at your own risk.
- Error handling is an ongoing learning process.
- The Xano Development Methodology (XDM) provides streamlined steps to build powerful,
  scalable & low-debt backends with Xano.
- Stripe deals in cents, so $10 is represented as 1000.
- You need to handle token validity checks separately.
- Stripe deals in cents, so $10 is represented as 1000. You'll need to handle this
  somewhere.
- Use x-data-source header to differentiate between test and production environments
- Ensure correct scopes are set for the JWT token.
- Handle notification messages appropriately based on app state.
- OAuth2 with refresh token — requires setup of connected app in Xano
- Some endpoints may require different authentication methods.
- As the performance and load capacity of a certain server is depend on the type of
  APIs that are called under load, it's of course difficult for Xano to say that a
  certain plan can support up to X calls/users.
- Therefore testing needs to happen for your own use case.
- A first step would be to have better analysis on performance and what exactly is
  the bottleneck.
- A second step would be a build in possibility to load test your servers.
- Requires setup of connected app in api
- OpenAI's API is a pay per request service and can be expensive, be sure to confirm
  which model you are using and consult their pricing page for further details before
  getting started.
- 'Each function containing an API request has a response with two objects: Result
  & Status'
- Errors can be determined by both the status (not 200) and an error message appearing
  within the result object.
- API keys are required for authentication and should be included in the Authorization
  header.
- The Edits endpoint allows you to provide an input text and instructions for how
  to edit that text.
- Streaming API responses are now LIVE.
- Realtime can be a complicated setup, but it opens new possibilities!
- You only need to install the snippet once, and you'll be able to solve any of the
  available challenges.
- The objective is to create an array and add a new element to the beginning of it.
- No authentication required for accessing data.
- No authentication required for accessing public resources.
- Create a variable named `integer_one` and assign it the value `6`.
- Create a second variable named `integer_two` and assign it the value `4`.
- 'Make sure to upload the CSV files provided and set up your tables as described
  in challenge #6.'
- 'Completing challenges #7 and #8 are also required to complete this challenge.'
- The expected result is case-sensitive. Make sure your spelling matches the example
  in the image above.
- 'Objective: Write an API endpoint that sifts through a dataset of recipes, returning
  all recipes that list ''eggs'' as an ingredient.'
- Ensure that the HTML and JavaScript are correctly set up, including checking for
  multiple instances of IDs causing conflicts.
- Change the time zone handling in the API calls from New York time to UTC.
- Focus on practical implementation details of integrating Xano WebSockets to enable
  real-time updates.
- Struggling with establishing and maintaining a stable connection and effectively
  managing message exchanges across sessions.
- The issue where the form submission is not triggering any network events when sending
  data to Xano.
- Verification that the API endpoint URL is correct.
- Ensuring that the HTML and JavaScript are correctly set up, including checking for
  multiple instances of IDs causing conflicts.
- Adding console logs to debug and confirm that the form submission event is firing.
- We resolved the problem by identifying and removing duplicate elements with the
  same IDs and ensuring the JavaScript was correctly targeting the updated IDs. This
  allowed the form submission to successfully trigger and send data to the API.
- Ensuring that these channels are private and require authentication.
- Enabling anonymous connections temporarily to test nested channels.
- Disabling anonymous connections and ensuring messages are only sent to authenticated
  users.
- The focus of this conversation is on managing large file transfers, particularly
  wav and zip files exceeding 2GB.
- Recommendations to use external services like Amazon S3, Google Cloud Storage, or
  Uploadcare for handling large file storage.
- Explanation of how Uploadcare provides frontend components to handle direct uploads
  from the client, bypassing Xano, and sending notifications to Xano via webhooks.
- Guidance on orchestrating file transfers using API keys, Xano as a conductor, and
  handling notifications for successful uploads.
- Ensuring that Xano's integration is efficient by only handling structured data and
  orchestrating rather than processing large files directly.
errors:
- '401 Unauthorized: Ensure API key has the required permissions.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key permissions or configuration'
- OOM command not allowed when used memory > 'maxmemory'.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls.'
- '401: Recheck configuration; it might be because Swagger is disabled'
- Failed to init Xano, please ensure your API key has the permission required.
- 'AI_TypeValidationError: Invalid literal value, expected "function"'
- 'map is not a function: Error occurred when merging branches.'
- 'Unauthorized: Invalid API key'
- '401 Unauthorized: Check your API key'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check your credentials and try again.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Function stack triggers an error without a message.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'UNAUTHENTICATED: Check if token is valid.'
- 'INVALID_ARGUMENT: Review message format and fields.'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check input validation errors'
- '401 Unauthorized: Ensure the API key is valid and included in the Authorization
  header.'
- 'invalid_request_error: Check the request format and parameters.'
- 'HTTP 500: Internal Server Error - Check server logs for more details'
- 'HTTP 400: Bad Request - Verify the request format and parameters.'
- 'HTTP 500: Server error due to incorrect date formatting'
- 'HTTP 400: Bad request due to incorrect time zone handling'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://www.xano.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
