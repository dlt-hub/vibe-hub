resources:
- name: Onvis Smart Motion Sensor SMS2
  endpoint:
    path: /product_details/SMS2.html
    method: GET
- name: Onvis Security Sensor CS2
  endpoint:
    path: /product_details/CS2.html
    method: GET
- name: Secuyou Smart Lock Matter for Patio-Doors
  endpoint:
    path: /products/smart-lock-matter-hojre-mc?lang=en
    method: GET
- name: Qingping Motion & Light Sensor T
  endpoint:
    path: /motion-light-sensor/overview
    method: GET
- name: SmartWings Motorized Roller Shades
  endpoint:
    path: /products/smartwings-motorized-roller-shades-100-blackout-essential
    method: GET
- name: arre Smart Button
  endpoint:
    path: /pages/arre-smart-button
    method: GET
- name: arre Contact Sensor
  endpoint:
    path: /pages/contact-sensor
    method: GET
- name: Eve Shutter Switch
  endpoint:
    path: /en/eve-shutter-switch?utm_source=ShutterSwitch&utm_medium=OpenThread&utm_campaign=Thread
    method: GET
- name: Eve Flare
  endpoint:
    path: /en/eve-flare?utm_source=Flare&utm_medium=OpenThread&utm_campaign=Thread
    method: GET
- name: Nanoleaf Matter A19 Smart Bulb
  endpoint:
    path: /essentials-matter-a19
    method: GET
- name: Nanoleaf Matter Lightstrip 80â€³ Smarter Kit (2 Meters)
  endpoint:
    path: /essentials-matter-ls-2m
    method: GET
- name: Nanoleaf Matter BR30 Smart Bulb
  endpoint:
    path: /essentials-matter-br30
    method: GET
- name: Nanoleaf Matter GU10 Smart Bulb
  endpoint:
    path: /essentials-matter-gu10
    method: GET
- name: Nanoleaf Matter Downlight
  endpoint:
    path: /en-US/products/ceiling-lights/downlight/?size=each
    method: GET
- name: GL-S200 Thread Border Router
  endpoint:
    path: /products/gl-s200/
    method: GET
- name: SmartThings Station
  endpoint:
    path: /us/mobile/mobile-accessories/phones/smartthings-station-with-travel-adapter-white-ep-p9500twegus/
    method: GET
- name: Onvis Smart Contact Sensor CT3
  endpoint:
    path: /onvis-thread-enabled-homekit-door-window-contact-sensor-bluetooth-wireless-low-energy-no-hub-required-1-pack
    method: GET
- name: Onvis 5-Key Switch HS2
  endpoint:
    path: /collections/all
    method: GET
- name: Qingping Temp & RH Monitor T
  endpoint:
    path: /temp-rh-monitor/overview
    method: GET
- name: Aeotec Smart Home Hub
  endpoint:
    path: /products/aeotec-smartthings-hub/
    method: GET
- name: AIRVERSA Purelle Smart Air Purifier
  endpoint:
    path: /products/ap2
    method: GET
- name: Nest Hub (2nd gen)
  endpoint:
    path: /product/nest_hub_2nd_gen
    method: GET
- name: Aqara Motion and Light Sensor P2
  endpoint:
    path: /products/aqara-motion
    method: GET
- name: Aqara Door and Window Sensor P2
  endpoint:
    path: /products/aqara-door
    method: GET
- name: Nest Wifi Pro
  endpoint:
    path: /us/product/nest_wifi_pro
    method: GET
- name: eero PoE 6
  endpoint:
    path: /eeroPoE6/dp/B09HJB9RJ3
    method: GET
- name: eero PoE Gateway
  endpoint:
    path: /eeroPoEGateway/dp/B09HJNCG81
    method: GET
- name: Eve Light Switch (US & Canada)
  endpoint:
    path: /eve-light-switch?utm_source=LightSwitch&utm_medium=OpenThread&utm_campaign=Thread
    method: GET
- name: Wemo Smart Dimmer
  endpoint:
    path: /us/smart-home/wemo/smart-dimmer/p/p-wds070/
    method: GET
- name: Eve Energy (Australia)
  endpoint:
    path: /products/eve-energy-au
    method: GET
- name: Eve Aqua
  endpoint:
    path: /en/eve-aqua?utm_source=Aqua&utm_medium=OpenThread&utm_campaign=Thread
    method: GET
- name: Eve Motion
  endpoint:
    path: /eve-motion?utm_source=Motion&utm_medium=OpenThread&utm_campaign=Thread
    method: GET
- name: eero Pro 6E
  endpoint:
    path: /shop/eero-pro-6e
    method: GET
- name: eero 6+
  endpoint:
    path: /shop/eero-6-plus
    method: GET
- name: Schlage Encode Plus Smart WiFi Deadbolt
  endpoint:
    path: /en/home/products.html
    method: GET
- name: Eve Water Guard
  endpoint:
    path: /eve-water-guard?utm_source=WaterGuard&utm_medium=OpenThread&utm_campaign=Thread
    method: GET
- name: Eve MotionBlinds
  endpoint:
    path: /eve-motionblinds?utm_source=MotionBlinds&utm_medium=OpenThread&utm_campaign=Thread
    method: GET
- name: Border Router
  endpoint:
    path: /guides/border-router
    method: GET
    data_selector: records
- name: Commissioner
  endpoint:
    path: /guides/commissioner
    method: GET
    data_selector: records
- name: Pyspinel
  endpoint:
    path: /guides/pyspinel
    method: GET
    data_selector: records
- name: Border Router services
  endpoint:
    path: /guides/border-router/services
    method: GET
    data_selector: services
    params: {}
- name: OTBR firewall
  endpoint:
    path: /guides/border-router/firewall
    method: GET
    data_selector: firewall
    params: {}
- name: STM32WB
  endpoint:
    path: /reference
    method: GET
    data_selector: data
    params: {}
- name: Thread HAL Service
  endpoint:
    path: /hardware/interfaces/threadnetwork/aidl/default/threadnetwork-service.rc
    method: GET
    data_selector: service
    params: {}
- name: threadnetwork
  endpoint:
    path: /apex/com.android.hardware.threadnetwork/bin/hw/android.hardware.threadnetwork-service
    method: spinel+hdlc+uart
    data_selector: service
    params: {}
- name: NAT64 prefix
  endpoint:
    path: /guides/border-router
    method: GET
    data_selector: Prefixes
    params: {}
- name: otBorderRouterConfig
  endpoint:
    path: prefix add
    method: POST
    data_selector: members
    params: {}
- name: otRoutePreference
  endpoint:
    path: prefix add
    method: POST
    data_selector: preference
    params: {}
- name: otExternalRouteConfig
  endpoint:
    path: publish route
    method: POST
    data_selector: config
    params: {}
- name: Border Router Docker Image
  endpoint:
    path: /siliconlabsinc/openthread-border-router/tags
    method: GET
    data_selector: tags
- name: network_data
  endpoint:
    path: /ot-ctl/netdata
    method: GET
    data_selector: Prefixes
    params: {}
- name: service_registration
  endpoint:
    path: /srp/client/service
    method: POST
    data_selector: instance
    params: {}
- name: service_discovery
  endpoint:
    path: /_ipps._tcp
    method: GET
    data_selector: services
    params: {}
- name: ping_device
  endpoint:
    path: /ping
    method: POST
    data_selector: response
    params: {}
- name: OT Daemon
  endpoint:
    path: /src/posix
    method: GET
    data_selector: records
    params: {}
- name: OTBR Docker Configuration
  endpoint:
    path: /guides/border-router/build-docker
    method: GET
    data_selector: configurations
    params: {}
- name: sensors
  endpoint:
    path: /sensors
    method: GET
    data_selector: sensors
- name: wireless_sensors
  endpoint:
    path: /products/wireless_sensors
    method: GET
    data_selector: sensors
    params: {}
- name: sensors
  endpoint:
    path: /en-US/Products-Services/Intelligent-sensor-solutions/Sense-by-MACO
    method: GET
    data_selector: sensors
    params: {}
- name: Sensor
  endpoint:
    path: /services/data/vXX.X/sobjects/Sensor
    method: GET
    data_selector: records
    params: {}
- name: sensors
  endpoint:
    path: /sensors
    method: GET
    data_selector: sensors
- name: ba
  endpoint:
    path: /border-agent
    method: GET
    data_selector: borderAgentData
    params: {}
- name: bbr
  endpoint:
    path: /backbone-router
    method: GET
    data_selector: backboneRouterData
    params: {}
- name: br
  endpoint:
    path: /border-routing
    method: GET
    data_selector: borderRoutingData
    params: {}
- name: br_state
  endpoint:
    path: /br/state
    method: GET
    data_selector: state
    params:
      joinerport: udp-port
- name: br_routers
  endpoint:
    path: /br/routers
    method: GET
    data_selector: routers
    params:
      joinerport: udp-port
- name: br_peers
  endpoint:
    path: /br/peers
    method: GET
    data_selector: peers
    params:
      joinerport: udp-port
- name: br_pd_state
  endpoint:
    path: /br/pd/state
    method: GET
    data_selector: pd_state
    params:
      joinerport: udp-port
- name: br_nat64prefix_local
  endpoint:
    path: /br/nat64prefix/local
    method: GET
    data_selector: local_nat64prefix
    params:
      joinerport: udp-port
- name: bufferinfo
  endpoint:
    path: /bufferinfo
    method: GET
    data_selector: total
- name: child
  endpoint:
    path: /child
    method: GET
    data_selector: id
- name: coap
  endpoint:
    path: /coap
    method: GET
    data_selector: parameters
- name: commissioner announce
  endpoint:
    path: /commissioner/announce
    method: POST
    data_selector: result
    params: {}
- name: commissioner energy
  endpoint:
    path: /commissioner/energy
    method: POST
    data_selector: result
    params: {}
- name: commissioner id
  endpoint:
    path: /commissioner/id
    method: GET
    data_selector: result
    params: {}
- name: commissioner joiner add
  endpoint:
    path: /commissioner/joiner/add
    method: POST
    data_selector: result
    params: {}
- name: commissioner joiner remove
  endpoint:
    path: /commissioner/joiner/remove
    method: POST
    data_selector: result
    params: {}
- name: commissioner joiner table
  endpoint:
    path: /commissioner/joiner/table
    method: GET
    data_selector: result
    params: {}
- name: commissioner mgmtget
  endpoint:
    path: /commissioner/mgmtget
    method: POST
    data_selector: result
    params: {}
- name: commissioner mgmtset
  endpoint:
    path: /commissioner/mgmtset
    method: POST
    data_selector: result
    params: {}
- name: commissioner panid
  endpoint:
    path: /commissioner/panid
    method: POST
    data_selector: result
    params: {}
- name: commissioner provisioningurl
  endpoint:
    path: /commissioner/provisioningurl
    method: POST
    data_selector: result
    params: {}
- name: commissioner sessionid
  endpoint:
    path: /commissioner/sessionid
    method: GET
    data_selector: result
    params: {}
- name: commissioner start
  endpoint:
    path: /commissioner/start
    method: POST
    data_selector: result
    params: {}
- name: commissioner state
  endpoint:
    path: /commissioner/state
    method: GET
    data_selector: result
    params: {}
- name: commissioner stop
  endpoint:
    path: /commissioner/stop
    method: POST
    data_selector: result
    params: {}
- name: contextreusedelay
  endpoint:
    path: /contextreusedelay
    method: GET
    data_selector: result
    params: {}
- name: counters mac
  endpoint:
    path: /counters/mac
    method: GET
    data_selector: result
    params: {}
- name: counters mle
  endpoint:
    path: /counters/mle
    method: GET
    data_selector: result
    params: {}
- name: counters
  endpoint:
    path: /counters
    method: GET
    data_selector: result
    params: {}
- name: counters ip
  endpoint:
    path: /counters/ip
    method: GET
    data_selector: result
    params: {}
- name: counters ip reset
  endpoint:
    path: /counters/ip/reset
    method: POST
    data_selector: result
    params: {}
- name: counters mac reset
  endpoint:
    path: /counters/mac/reset
    method: POST
    data_selector: result
    params: {}
- name: counters mle reset
  endpoint:
    path: /counters/mle/reset
    method: POST
    data_selector: result
    params: {}
- name: csl accuracy
  endpoint:
    path: /csl/accuracy
    method: GET
    data_selector: result
    params: {}
- name: csl channel
  endpoint:
    path: /csl/channel
    method: POST
    data_selector: result
    params: {}
- name: csl
  endpoint:
    path: /reference/group/api-thread-router#group__api-thread-router_1ga83057db009c10d2915dee6de329e3aa6
    method: GET
    data_selector: csl
- name: dataset
  endpoint:
    path: /reference/group/api-thread-router#group__api-thread-router_1ga83057db009c10d2915dee6de329e3aa6
    method: GET
    data_selector: dataset
- name: debug
  endpoint:
    path: /reference/group/api-thread-router#group__api-thread-router_1ga83057db009c10d2915dee6de329e3aa6
    method: GET
    data_selector: debug
- name: joinerport
  endpoint:
    path: /reference/group/api-thread-router#group__api-thread-router_1ga83057db009c10d2915dee6de329e3aa6
    method: GET
    data_selector: parameters
- name: ailrouters
  endpoint:
    path: /history/ailrouters
    method: GET
    data_selector: entries
- name: dhcp6pd
  endpoint:
    path: /history/dhcp6pd
    method: GET
    data_selector: entries
- name: dnssrpaddr
  endpoint:
    path: /history/dnssrpaddr
    method: GET
    data_selector: entries
- name: ipaddr
  endpoint:
    path: /history/ipaddr
    method: GET
    data_selector: entries
- name: ipmaddr
  endpoint:
    path: /history/ipmaddr
    method: GET
    data_selector: entries
- name: neighbor
  endpoint:
    path: /history/neighbor
    method: GET
    data_selector: entries
- name: netinfo
  endpoint:
    path: /history/netinfo
    method: GET
    data_selector: entries
- name: omrprefix
  endpoint:
    path: /history/omrprefix
    method: GET
    data_selector: entries
- name: onlinkprefix
  endpoint:
    path: /history/onlinkprefix
    method: GET
    data_selector: entries
- name: prefix
  endpoint:
    path: /history/prefix
    method: GET
    data_selector: entries
- name: route
  endpoint:
    path: /history/route
    method: GET
    data_selector: entries
- name: router
  endpoint:
    path: /history/router
    method: GET
    data_selector: entries
- name: rx
  endpoint:
    path: /history/rx
    method: GET
    data_selector: entries
- name: rxtx
  endpoint:
    path: /history/rxtx
    method: GET
    data_selector: entries
- name: tx
  endpoint:
    path: /history/tx
    method: GET
    data_selector: entries
- name: ipaddr_mleid
  endpoint:
    path: /ipaddr/mleid
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: ipaddr_rloc
  endpoint:
    path: /ipaddr/rloc
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: ipmaddr_add
  endpoint:
    path: /ipmaddr/add
    method: POST
    data_selector: joinerport udp-port
    params: {}
- name: ipmaddr_del
  endpoint:
    path: /ipmaddr/del
    method: DELETE
    data_selector: joinerport udp-port
    params: {}
- name: ipmaddr
  endpoint:
    path: /ipmaddr
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: ipmaddr_llatn
  endpoint:
    path: /ipmaddr/llatn
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: ipmaddr_rlatn
  endpoint:
    path: /ipmaddr/rlatn
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: joiner_discerner_set
  endpoint:
    path: /joiner/discerner/set
    method: POST
    data_selector: joinerport udp-port
    params: {}
- name: joiner_discerner_clear
  endpoint:
    path: /joiner/discerner/clear
    method: DELETE
    data_selector: joinerport udp-port
    params: {}
- name: joiner_discerner
  endpoint:
    path: /joiner/discerner
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: joiner_help
  endpoint:
    path: /joiner/help
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: joiner_id
  endpoint:
    path: /joiner/id
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: joiner_start
  endpoint:
    path: /joiner/start
    method: POST
    data_selector: joinerport udp-port
    params: {}
- name: joiner_state
  endpoint:
    path: /joiner/state
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: joiner_stop
  endpoint:
    path: /joiner/stop
    method: POST
    data_selector: joinerport udp-port
    params: {}
- name: joinerport_set
  endpoint:
    path: /joinerport/set
    method: POST
    data_selector: joinerport udp-port
    params: {}
- name: joinerport
  endpoint:
    path: /joinerport
    method: GET
    data_selector: joinerport udp-port
    params: {}
- name: otChannelManagerGetAutoChannelSelectionEnabled
  endpoint:
    path: /api/channel-manager/auto-channel-selection-enabled
    method: GET
    data_selector: enabled
    params: {}
- name: otChannelManagerGetAutoChannelSelectionInterval
  endpoint:
    path: /api/channel-manager/auto-channel-selection-interval
    method: GET
    data_selector: interval
    params: {}
- name: otChannelManagerGetAutoCslChannelSelectionEnabled
  endpoint:
    path: /api/channel-manager/auto-csl-channel-selection-enabled
    method: GET
    data_selector: enabled
    params: {}
- name: otChannelManagerGetCcaFailureRateThreshold
  endpoint:
    path: /api/channel-manager/cca-failure-rate-threshold
    method: GET
    data_selector: threshold
    params: {}
- name: otChannelManagerGetDelay
  endpoint:
    path: /api/channel-manager/delay
    method: GET
    data_selector: delay
    params: {}
- name: otChannelManagerGetFavoredChannels
  endpoint:
    path: /api/channel-manager/favored-channels
    method: GET
    data_selector: favoredChannels
    params: {}
- name: otChannelManagerGetRequestedChannel
  endpoint:
    path: /api/channel-manager/requested-channel
    method: GET
    data_selector: requestedChannel
    params: {}
- name: otChannelManagerGetSupportedChannels
  endpoint:
    path: /api/channel-manager/supported-channels
    method: GET
    data_selector: supportedChannels
    params: {}
- name: otChannelManagerRequestChannelChange
  endpoint:
    path: /api/channel-manager/request-channel-change
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerRequestChannelSelect
  endpoint:
    path: /api/channel-manager/request-channel-select
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerRequestCslChannelSelect
  endpoint:
    path: /api/channel-manager/request-csl-channel-select
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerSetAutoChannelSelectionEnabled
  endpoint:
    path: /api/channel-manager/set-auto-channel-selection-enabled
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerSetAutoChannelSelectionInterval
  endpoint:
    path: /api/channel-manager/set-auto-channel-selection-interval
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerSetAutoCslChannelSelectionEnabled
  endpoint:
    path: /api/channel-manager/set-auto-csl-channel-selection-enabled
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerSetCcaFailureRateThreshold
  endpoint:
    path: /api/channel-manager/set-cca-failure-rate-threshold
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerSetDelay
  endpoint:
    path: /api/channel-manager/set-delay
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerSetFavoredChannels
  endpoint:
    path: /api/channel-manager/set-favored-channels
    method: POST
    data_selector: result
    params: {}
- name: otChannelManagerSetSupportedChannels
  endpoint:
    path: /api/channel-manager/set-supported-channels
    method: POST
    data_selector: result
    params: {}
- name: ChannelOccupancy
  endpoint:
    path: /otChannelMonitorGetChannelOccupancy
    method: GET
    data_selector: current channel occupancy
- name: RssiThreshold
  endpoint:
    path: /otChannelMonitorGetRssiThreshold
    method: GET
    data_selector: RSSI threshold in dBm
- name: SampleCount
  endpoint:
    path: /otChannelMonitorGetSampleCount
    method: GET
    data_selector: total number of RSSI samples
- name: SampleInterval
  endpoint:
    path: /otChannelMonitorGetSampleInterval
    method: GET
    data_selector: sample interval in milliseconds
- name: SampleWindow
  endpoint:
    path: /otChannelMonitorGetSampleWindow
    method: GET
    data_selector: averaging sample window length
- name: IsEnabled
  endpoint:
    path: /otChannelMonitorIsEnabled
    method: GET
    data_selector: enabled status
- name: SetEnabled
  endpoint:
    path: /otChannelMonitorSetEnabled
    method: POST
    data_selector: enable/disable operation
- name: otChildSupervisionGetCheckFailureCounter
  endpoint:
    path: /otChildSupervisionGetCheckFailureCounter
    method: GET
    data_selector: value
    params: {}
- name: otChildSupervisionGetCheckTimeout
  endpoint:
    path: /otChildSupervisionGetCheckTimeout
    method: GET
    data_selector: value
    params: {}
- name: otChildSupervisionGetInterval
  endpoint:
    path: /otChildSupervisionGetInterval
    method: GET
    data_selector: value
    params: {}
- name: otChildSupervisionResetCheckFailureCounter
  endpoint:
    path: /otChildSupervisionResetCheckFailureCounter
    method: POST
    data_selector: success
    params: {}
- name: otChildSupervisionSetCheckTimeout
  endpoint:
    path: /otChildSupervisionSetCheckTimeout
    method: POST
    data_selector: success
    params:
      timeout: aTimeout
- name: otChildSupervisionSetInterval
  endpoint:
    path: /otChildSupervisionSetInterval
    method: POST
    data_selector: success
    params:
      interval: aInterval
- name: otCoapSetResponseFallback
  endpoint:
    path: /otCoapSetResponseFallback
    method: void
    data_selector: null
    params: {}
- name: otCoapStart
  endpoint:
    path: /otCoapStart
    method: void
    data_selector: null
    params: {}
- name: otCoapStop
  endpoint:
    path: /otCoapStop
    method: void
    data_selector: null
    params: {}
- name: mContext
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: mHandler
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: mNext
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: mReceiveHook
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: mTransmitHook
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: mUriPath
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: mLength
  endpoint:
    path: /coap.h
    method: GET
    data_selector: mLength
    params: {}
- name: mNumber
  endpoint:
    path: /coap.h
    method: GET
    data_selector: mNumber
    params: {}
- name: mMessage
  endpoint:
    path: otCoapOptionIterator/mMessage
    method: GET
    data_selector: const otMessage *
    params: {}
- name: mNextOptionOffset
  endpoint:
    path: otCoapOptionIterator/mNextOptionOffset
    method: GET
    data_selector: uint16_t
    params: {}
- name: mOption
  endpoint:
    path: otCoapOptionIterator/mOption
    method: GET
    data_selector: otCoapOption
    params: {}
- name: otCoapResource
  endpoint:
    path: /reference/struct/ot-coap-resource
    method: GET
- name: mContext
  endpoint:
    path: /mContext
    method: GET
- name: mHandler
  endpoint:
    path: /mHandler
    method: GET
- name: mNext
  endpoint:
    path: /mNext
    method: GET
- name: mUriPath
  endpoint:
    path: /mUriPath
    method: GET
- name: mAckRandomFactorDenominator
  endpoint:
    data_selector: ACK_RANDOM_FACTOR
- name: mAckRandomFactorNumerator
  endpoint:
    data_selector: ACK_RANDOM_FACTOR
- name: mAckTimeout
  endpoint:
    data_selector: ACK_TIMEOUT
- name: mMaxRetransmit
  endpoint:
    data_selector: MAX_RETRANSMIT
- name: CoAP Secure Resource
  endpoint:
    path: /coap/secure/resource
    method: GET
    data_selector: resourceData
    params: {}
- name: otCoapSecureSetPsk
  endpoint:
    path: otCoapSecureSetPsk
    method: void
    data_selector: null
    params:
      aInstance: pointer to OpenThread instance
      aPsk: pointer to the PSK
      aPskLength: PSK length
      aPskIdentity: Identity Name for the PSK
      aPskIdLength: PSK Identity Length
- name: otCoapSecureSetSslAuthMode
  endpoint:
    path: otCoapSecureSetSslAuthMode
    method: void
    data_selector: null
    params:
      aInstance: pointer to OpenThread instance
      aVerifyPeerCertificate: true to verify the peer certificate
- name: otCoapSecureStart
  endpoint:
    path: otCoapSecureStart
    method: otError
    data_selector: null
    params:
      aInstance: pointer to OpenThread instance
      aPort: local UDP port to bind to
- name: otCoapSecureStartWithMaxConnAttempts
  endpoint:
    path: otCoapSecureStartWithMaxConnAttempts
    method: otError
    data_selector: null
    params:
      aInstance: pointer to OpenThread instance
      aPort: local UDP port to bind to
      aMaxAttempts: maximum number of allowed connection request attempts
      aCallback: callback to notify if max number of attempts has reached
      aContext: pointer to arbitrary context to use with aCallback
- name: otCoapSecureStop
  endpoint:
    path: otCoapSecureStop
    method: void
    data_selector: null
    params:
      aInstance: pointer to OpenThread instance
- name: otCryptoAesCcm
  endpoint:
    path: /otCryptoAesCcm
    method: void
    data_selector: parameters
    params: {}
- name: otCryptoHmacSha256
  endpoint:
    path: /otCryptoHmacSha256
    method: void
    data_selector: parameters
    params: {}
- name: otDiagIsEnabled
  endpoint:
    path: /otDiagIsEnabled
    method: GET
    data_selector: returnValues
    params: {}
- name: otDiagProcessCmd
  endpoint:
    path: /otDiagProcessCmd
    method: POST
    data_selector: returnValues
    params: {}
- name: otDiagProcessCmdLine
  endpoint:
    path: /otDiagProcessCmdLine
    method: POST
    data_selector: returnValues
    params: {}
- name: otDiagSetOutputCallback
  endpoint:
    path: /otDiagSetOutputCallback
    method: POST
    data_selector: returnValues
    params: {}
- name: heap
  endpoint:
    path: /reference/group/api-heap
    method: GET
    data_selector: records
    params: {}
- name: otHistoryTrackerMessageInfo
  endpoint:
    path: otHistoryTrackerMessageInfo
    method: GET
    data_selector: records
    params: {}
- name: otHistoryTrackerNeighborInfo
  endpoint:
    path: otHistoryTrackerNeighborInfo
    method: GET
    data_selector: records
    params: {}
- name: otHistoryTrackerNetworkInfo
  endpoint:
    path: otHistoryTrackerNetworkInfo
    method: GET
    data_selector: records
    params: {}
- name: otHistoryTrackerAilRouter
  endpoint:
    path: /reference/struct/ot-history-tracker-ail-router
    method: GET
- name: otHistoryTrackerDhcp6PdInfo
  endpoint:
    path: /reference/struct/ot-history-tracker-dhcp6-pd-info
    method: GET
- name: mPrefix
  endpoint:
    path: /otIp6Prefix
    method: GET
- name: mState
  endpoint:
    path: /otBorderRoutingDhcp6PdState
    method: GET
- name: otHistoryTrackerDnsSrpAddrInfo
  endpoint:
    path: /reference/struct/ot-history-tracker-dns-srp-addr-info
    method: GET
- name: otHistoryTrackerDnsSrpAddrInfo
  endpoint:
    path: /include/history_tracker.h
    method: GET
    data_selector: attributes
    params: {}
- name: otHistoryTrackerFavoredOmrPrefix
  endpoint:
    path: /reference/struct/ot-history-tracker-favored-omr-prefix
    method: GET
    data_selector: records
- name: mIsLocal
  endpoint:
    path: otHistoryTrackerFavoredOmrPrefix/mIsLocal
    method: GET
    data_selector: bool
- name: mOmrPrefix
  endpoint:
    path: otHistoryTrackerFavoredOmrPrefix/mOmrPrefix
    method: GET
    data_selector: otIp6Prefix
- name: mPreference
  endpoint:
    path: otHistoryTrackerFavoredOmrPrefix/mPreference
    method: GET
    data_selector: signed int
- name: mIsLocal
  endpoint:
    path: mIsLocal
    method: GET
    data_selector: bool
    params: {}
- name: mOnLinkPrefix
  endpoint:
    path: mOnLinkPrefix
    method: GET
    data_selector: otIp6Prefix
    params: {}
- name: otHistoryTrackerIterator
  endpoint:
    path: /reference/struct/ot-history-tracker-iterator
    method: GET
- name: otHistoryTrackerMessageInfo
  endpoint:
    path: /otHistoryTrackerMessageInfo
    method: GET
    data_selector: attributes
    params: {}
- name: otHistoryTrackerMulticastAddressInfo
  endpoint:
    path: /reference/struct/ot-history-tracker-multicast-address-info
    method: GET
- name: otHistoryTrackerMulticastAddressInfo
  endpoint:
    path: /history_tracker/multicast_address_info
    method: GET
    data_selector: public_attributes
    params: {}
- name: otHistoryTrackerNeighborInfo
  endpoint:
    path: /reference/struct/ot-history-tracker-neighbor-info
    method: GET
    data_selector: records
- name: neighbor_info
  endpoint:
    path: /ot/history/tracker/neighbor/info
    method: GET
    data_selector: records
- name: otHistoryTrackerNetworkInfo
  endpoint:
    path: /reference/struct/ot-history-tracker-network-info
    method: GET
    data_selector: records
- name: otHistoryTrackerNetworkInfo
  endpoint:
    path: /otHistoryTrackerNetworkInfo
    method: GET
    data_selector: public_attributes
    params: {}
- name: otHistoryTrackerOnMeshPrefixInfo
  endpoint:
    path: /reference/struct/ot-history-tracker-on-mesh-prefix-info
    method: GET
    data_selector: records
- name: otHistoryTrackerRouterInfo
  endpoint:
    path: /reference/struct/ot-history-tracker-router-info
    method: GET
    data_selector: records
- name: router_entry_event
  endpoint:
    path: /history_tracker/router_entry_event
    method: GET
    data_selector: mEvent
    params: {}
- name: unicast_ipv6_address_info
  endpoint:
    path: /unicast_ipv6_address_info
    method: GET
    data_selector: mAddress
- name: otJamDetectionGetBusyPeriod
  endpoint:
    path: otJamDetectionGetBusyPeriod
    method: GET
    data_selector: returns
    params: {}
- name: otJamDetectionGetHistoryBitmap
  endpoint:
    path: otJamDetectionGetHistoryBitmap
    method: GET
    data_selector: returns
    params: {}
- name: otJamDetectionGetRssiThreshold
  endpoint:
    path: otJamDetectionGetRssiThreshold
    method: GET
    data_selector: returns
    params: {}
- name: otJamDetectionGetState
  endpoint:
    path: otJamDetectionGetState
    method: GET
    data_selector: returns
    params: {}
- name: otJamDetectionGetWindow
  endpoint:
    path: otJamDetectionGetWindow
    method: GET
    data_selector: returns
    params: {}
- name: otJamDetectionIsEnabled
  endpoint:
    path: otJamDetectionIsEnabled
    method: GET
    data_selector: returns
    params: {}
- name: otJamDetectionSetBusyPeriod
  endpoint:
    path: otJamDetectionSetBusyPeriod
    method: POST
    data_selector: returns
    params: {}
- name: otJamDetectionSetRssiThreshold
  endpoint:
    path: otJamDetectionSetRssiThreshold
    method: POST
    data_selector: returns
    params: {}
- name: otJamDetectionSetWindow
  endpoint:
    path: otJamDetectionSetWindow
    method: POST
    data_selector: returns
    params: {}
- name: otJamDetectionStart
  endpoint:
    path: otJamDetectionStart
    method: POST
    data_selector: returns
    params: {}
- name: otJamDetectionStop
  endpoint:
    path: otJamDetectionStop
    method: POST
    data_selector: returns
    params: {}
- name: mDataBytes
  endpoint:
    path: otLogHexDumpInfo::mDataBytes
    method: GET
    data_selector: data
    params: {}
- name: mDataLength
  endpoint:
    path: otLogHexDumpInfo::mDataLength
    method: GET
    data_selector: length
    params: {}
- name: mIterator
  endpoint:
    path: otLogHexDumpInfo::mIterator
    method: GET
    data_selector: iterator
    params: {}
- name: mLine
  endpoint:
    path: otLogHexDumpInfo::mLine
    method: GET
    data_selector: line
    params: {}
- name: mTitle
  endpoint:
    path: otLogHexDumpInfo::mTitle
    method: GET
    data_selector: title
    params: {}
- name: otMeshDiagChildEntry
  endpoint:
    path: /reference/struct/ot-mesh-diag-child-entry
    method: GET
    data_selector: records
- name: otMeshDiagChildInfo
  endpoint:
    path: /reference/struct/ot-mesh-diag-child-info
    method: GET
    data_selector: records
- name: otMeshDiagRouterInfo
  endpoint:
    path: /reference/struct/ot-mesh-diag-router-info
    method: GET
    data_selector: records
- name: otMeshDiagRouterNeighborEntry
  endpoint:
    path: /reference/struct/ot-mesh-diag-router-neighbor-entry
    method: GET
    data_selector: records
- name: otMeshDiagChildEntry
  endpoint:
    path: /reference/struct/ot-mesh-diag-child-entry
    method: GET
- name: otMeshDiagChildEntry
  endpoint:
    path: /otMeshDiagChildEntry
    method: GET
    data_selector: public_attributes
    params: {}
- name: otMeshDiagChildInfo
  endpoint:
    path: /mesh_diag/child_info
    method: GET
    data_selector: attributes
- name: ot_mesh_diag_router_info
  endpoint:
    path: /reference/struct/ot-mesh-diag-router-info
    method: GET
- name: otMeshDiagRouterInfo
  endpoint:
    path: /otMeshDiagRouterInfo
    method: GET
    data_selector: Public attributes
- name: ot_mesh_diag_router_neighbor_entry
  endpoint:
    path: /reference/struct/ot-mesh-diag-router-neighbor-entry
    method: GET
    data_selector: records
- name: otMeshDiagRouterNeighborEntry
  endpoint:
    path: /otMeshDiagQueryRouterNeighborTable/
    method: GET
    data_selector: mSupportsErrRate
    params: {}
- name: Border Router
  endpoint:
    path: /reference/group/api-border-router
    method: GET
    data_selector: records
- name: Commissioner
  endpoint:
    path: /reference/group/api-commissioner
    method: GET
    data_selector: records
- name: otNcpHdlcInit
  endpoint:
    path: /otNcpHdlcInit
    method: void
    data_selector: N/A
    params: {}
- name: otNcpHdlcInitMulti
  endpoint:
    path: /otNcpHdlcInitMulti
    method: void
    data_selector: N/A
    params: {}
- name: otNcpHdlcReceive
  endpoint:
    path: /otNcpHdlcReceive
    method: void
    data_selector: N/A
    params: {}
- name: otNcpHdlcSendDone
  endpoint:
    path: /otNcpHdlcSendDone
    method: void
    data_selector: N/A
    params: {}
- name: otNcpPlatLogv
  endpoint:
    path: /otNcpPlatLogv
    method: void
    data_selector: N/A
    params: {}
- name: otNcpRegisterPeekPokeDelegates
  endpoint:
    path: /otNcpRegisterPeekPokeDelegates
    method: void
    data_selector: N/A
    params: {}
- name: otNcpSpiInit
  endpoint:
    path: /otNcpSpiInit
    method: void
    data_selector: N/A
    params: {}
- name: otNcpStreamWrite
  endpoint:
    path: /otNcpStreamWrite
    method: otError
    data_selector: N/A
    params: {}
- name: otNetworkTimeGet
  endpoint:
    path: /otNetworkTimeGet
    method: GET
    data_selector: otNetworkTimeStatus
    params: {}
- name: otNetworkTimeGetSyncPeriod
  endpoint:
    path: /otNetworkTimeGetSyncPeriod
    method: GET
    data_selector: uint16_t
    params: {}
- name: otNetworkTimeGetXtalThreshold
  endpoint:
    path: /otNetworkTimeGetXtalThreshold
    method: GET
    data_selector: uint16_t
    params: {}
- name: otNetworkTimeSetSyncPeriod
  endpoint:
    path: /otNetworkTimeSetSyncPeriod
    method: POST
    data_selector: otError
    params: {}
- name: otNetworkTimeSetXtalThreshold
  endpoint:
    path: /otNetworkTimeSetXtalThreshold
    method: POST
    data_selector: otError
    params: {}
- name: otNetworkTimeSyncSetCallback
  endpoint:
    path: /otNetworkTimeSyncSetCallback
    method: POST
    data_selector: void
    params: {}
- name: radio_statistics
  endpoint:
    path: /reference/group/api-radio
    method: GET
    data_selector: data
- name: otRadioTimeStats
  endpoint:
    path: /reference/struct/ot-radio-time-stats
    method: GET
    data_selector: statistics
    params: {}
- name: otRadioTimeStatsGet
  endpoint:
    path: /reference/api-radio
    method: GET
    data_selector: statistics
    params: {}
- name: otRadioTimeStatsReset
  endpoint:
    path: /reference/api-radio
    method: POST
    data_selector: reset
    params: {}
- name: radio_stats
  endpoint:
    path: /radio_stats
    method: GET
    data_selector: public_attributes
- name: otRandomCryptoFillBuffer
  endpoint:
    path: /otRandomCryptoFillBuffer
    method: GET
    data_selector: data
    params: {}
- name: Random Number Generator
  endpoint:
    path: /reference/group/api-random-non-crypto
    method: GET
    data_selector: records
- name: otRandomNonCryptoAddJitter
  endpoint:
    path: /otRandomNonCryptoAddJitter
    method: GET
    data_selector: details
    params: {}
- name: otRandomNonCryptoFillBuffer
  endpoint:
    path: /otRandomNonCryptoFillBuffer
    method: GET
    data_selector: details
    params: {}
- name: otRandomNonCryptoGetUint16
  endpoint:
    path: /otRandomNonCryptoGetUint16
    method: GET
    data_selector: details
    params: {}
- name: otRandomNonCryptoGetUint16InRange
  endpoint:
    path: /otRandomNonCryptoGetUint16InRange
    method: GET
    data_selector: details
    params: {}
- name: otRandomNonCryptoGetUint32
  endpoint:
    path: /otRandomNonCryptoGetUint32
    method: GET
    data_selector: details
    params: {}
- name: otRandomNonCryptoGetUint32InRange
  endpoint:
    path: /otRandomNonCryptoGetUint32InRange
    method: GET
    data_selector: details
    params: {}
- name: otRandomNonCryptoGetUint8
  endpoint:
    path: /otRandomNonCryptoGetUint8
    method: GET
    data_selector: details
    params: {}
- name: otRandomNonCryptoGetUint8InRange
  endpoint:
    path: /otRandomNonCryptoGetUint8InRange
    method: GET
    data_selector: details
    params: {}
- name: otSntpQuery
  endpoint:
    path: /reference/struct/ot-sntp-query
    method: GET
    data_selector: parameters
    params: {}
- name: otSntpResponseHandler
  endpoint:
    path: /reference/struct/ot-sntp-response-handler
    method: GET
    data_selector: details
    params: {}
- name: otSntpClientQuery
  endpoint:
    path: /reference/otSntpClientQuery
    method: GET
    data_selector: details
    params: {}
- name: otSntpClientSetUnixEra
  endpoint:
    path: /reference/otSntpClientSetUnixEra
    method: GET
    data_selector: details
    params: {}
- name: otSntpQuery
  endpoint:
    path: /reference/group/api-sntp
    method: GET
    data_selector: records
- name: mMessageInfo
  endpoint:
    path: /resources/mMessageInfo
    method: GET
    data_selector: message_info
    params: {}
- name: otVerhoeffChecksumCalculate
  endpoint:
    path: /otVerhoeffChecksumCalculate
    method: GET
    data_selector: otError
    params: {}
- name: otVerhoeffChecksumValidate
  endpoint:
    path: /otVerhoeffChecksumValidate
    method: GET
    data_selector: otError
    params: {}
- name: changed_thread_backbone_router_local
  endpoint:
    path: /OT_CHANGED_THREAD_BACKBONE_ROUTER_LOCAL
    method: GET
    data_selector: records
- name: changed_thread_backbone_router_state
  endpoint:
    path: /OT_CHANGED_THREAD_BACKBONE_ROUTER_STATE
    method: GET
    data_selector: records
- name: changed_thread_channel
  endpoint:
    path: /OT_CHANGED_THREAD_CHANNEL
    method: GET
    data_selector: records
- name: changed_thread_child_added
  endpoint:
    path: /OT_CHANGED_THREAD_CHILD_ADDED
    method: GET
    data_selector: records
- name: changed_thread_child_removed
  endpoint:
    path: /OT_CHANGED_THREAD_CHILD_REMOVED
    method: GET
    data_selector: records
- name: changed_thread_ext_panid
  endpoint:
    path: /OT_CHANGED_THREAD_EXT_PANID
    method: GET
    data_selector: records
- name: changed_thread_key_sequence_counter
  endpoint:
    path: /OT_CHANGED_THREAD_KEY_SEQUENCE_COUNTER
    method: GET
    data_selector: records
- name: changed_thread_ll_addr
  endpoint:
    path: /OT_CHANGED_THREAD_LL_ADDR
    method: GET
    data_selector: records
- name: changed_thread_ml_addr
  endpoint:
    path: /OT_CHANGED_THREAD_ML_ADDR
    method: GET
    data_selector: records
- name: changed_thread_netdata
  endpoint:
    path: /OT_CHANGED_THREAD_NETDATA
    method: GET
    data_selector: records
- name: changed_thread_netif_state
  endpoint:
    path: /OT_CHANGED_THREAD_NETIF_STATE
    method: GET
    data_selector: records
- name: changed_thread_network_name
  endpoint:
    path: /OT_CHANGED_THREAD_NETWORK_NAME
    method: GET
    data_selector: records
- name: changed_thread_panid
  endpoint:
    path: /OT_CHANGED_THREAD_PANID
    method: GET
    data_selector: records
- name: changed_thread_partition_id
  endpoint:
    path: /OT_CHANGED_THREAD_PARTITION_ID
    method: GET
    data_selector: records
- name: changed_thread_rloc_added
  endpoint:
    path: /OT_CHANGED_THREAD_RLOC_ADDED
    method: GET
    data_selector: records
- name: changed_thread_rloc_removed
  endpoint:
    path: /OT_CHANGED_THREAD_RLOC_REMOVED
    method: GET
    data_selector: records
- name: changed_thread_role
  endpoint:
    path: /OT_CHANGED_THREAD_ROLE
    method: GET
    data_selector: records
- name: uptime_string_size
  endpoint:
    path: /OT_UPTIME_STRING_SIZE
    method: GET
    data_selector: records
- name: otTaskletsArePending
  endpoint:
    path: /otTaskletsArePending
    method: GET
    data_selector: return values
    params: {}
- name: otTaskletsProcess
  endpoint:
    path: /otTaskletsProcess
    method: GET
    data_selector: return values
    params: {}
- name: otTaskletsSignalPending
  endpoint:
    path: /otTaskletsSignalPending
    method: GET
    data_selector: return values
    params: {}
- name: otBleSecureGetThreadAttributeFromOwnCertificate
  endpoint:
    path: /otBleSecureGetThreadAttributeFromOwnCertificate
    method: GET
    data_selector: attribute
    params: {}
- name: otBleSecureGetThreadAttributeFromPeerCertificate
  endpoint:
    path: /otBleSecureGetThreadAttributeFromPeerCertificate
    method: GET
    data_selector: attribute
    params: {}
- name: otBleSecureIsCommandClassAuthorized
  endpoint:
    path: /otBleSecureIsCommandClassAuthorized
    method: GET
    data_selector: authorization
    params: {}
- name: otBleSecureIsConnected
  endpoint:
    path: /otBleSecureIsConnected
    method: GET
    data_selector: connection_status
    params: {}
- name: otBleSecureIsConnectionActive
  endpoint:
    path: /otBleSecureIsConnectionActive
    method: GET
    data_selector: connection_active_status
    params: {}
- name: otBleSecureIsTcatAgentStarted
  endpoint:
    path: /otBleSecureIsTcatAgentStarted
    method: GET
    data_selector: tcat_agent_status
    params: {}
- name: otBleSecureSend
  endpoint:
    path: /otBleSecureSend
    method: POST
    data_selector: send_status
    params: {}
- name: otBleSecureSendApplicationTlv
  endpoint:
    path: /otBleSecureSendApplicationTlv
    method: POST
    data_selector: application_tlv_status
    params: {}
- name: otBleSecureSendMessage
  endpoint:
    path: /otBleSecureSendMessage
    method: POST
    data_selector: message_status
    params: {}
- name: otBleSecureSetCaCertificateChain
  endpoint:
    path: /otBleSecureSetCaCertificateChain
    method: POST
    data_selector: ca_certificate_chain_status
    params: {}
- name: otBleSecureSetCertificate
  endpoint:
    path: /otBleSecureSetCertificate
    method: POST
    data_selector: set_certificate_status
    params: {}
- name: otBleSecureSetPsk
  endpoint:
    path: /otBleSecureSetPsk
    method: POST
    data_selector: psk_status
    params: {}
- name: otBleSecureSetSslAuthMode
  endpoint:
    path: /otBleSecureSetSslAuthMode
    method: POST
    data_selector: ssl_auth_mode_status
    params: {}
- name: otBleSecureSetTcatAgentState
  endpoint:
    path: /otBleSecureSetTcatAgentState
    method: POST
    data_selector: tcat_agent_state_status
    params: {}
- name: otBleSecureSetTcatVendorInfo
  endpoint:
    path: /otBleSecureSetTcatVendorInfo
    method: POST
    data_selector: vendor_info_status
    params: {}
- name: otBleSecureStart
  endpoint:
    path: /otBleSecureStart
    method: POST
    data_selector: start_status
    params: {}
- name: otBleSecureStop
  endpoint:
    path: /otBleSecureStop
    method: POST
    data_selector: stop_status
    params: {}
- name: otBleSecureTcatStart
  endpoint:
    path: /otBleSecureTcatStart
    method: POST
    data_selector: tcat_start_status
    params: {}
- name: mDeviceId
  endpoint:
    path: /otTcatAdvertisedDeviceId/mDeviceId
    method: GET
    data_selector: mDeviceId
    params: {}
- name: mDeviceIdLen
  endpoint:
    path: /otTcatAdvertisedDeviceId/mDeviceIdLen
    method: GET
    data_selector: mDeviceIdLen
    params: {}
- name: mDeviceIdType
  endpoint:
    path: /otTcatAdvertisedDeviceId/mDeviceIdType
    method: GET
    data_selector: mDeviceIdType
    params: {}
- name: otActiveScanResult
  endpoint:
    path: /reference/struct/ot-active-scan-result
    method: GET
    data_selector: records
    params: {}
- name: General Device ID
  endpoint:
    path: /reference/struct/ot-tcat-general-device-id
    method: GET
- name: otDnsAddressCallback
  endpoint:
    path: /reference/struct/ot-dns-address-callback
    method: GET
    data_selector: details
    params: {}
- name: otDnsAddressResponse
  endpoint:
    path: /reference/struct/ot-dns-address-response
    method: GET
    data_selector: details
    params: {}
- name: otDnsBrowseCallback
  endpoint:
    path: /reference/struct/ot-dns-browse-callback
    method: GET
    data_selector: details
    params: {}
- name: otDnsBrowseResponse
  endpoint:
    path: /reference/struct/ot-dns-browse-response
    method: GET
    data_selector: details
    params: {}
- name: otDnsQueryConfig
  endpoint:
    path: /reference/struct/ot-dns-query-config
    method: GET
    data_selector: details
    params: {}
- name: otDnsRecordCallback
  endpoint:
    path: /reference/struct/ot-dns-record-callback
    method: GET
    data_selector: details
    params: {}
- name: otDnsRecordInfo
  endpoint:
    path: /reference/struct/ot-dns-record-info
    method: GET
    data_selector: details
    params: {}
- name: otDnsRecordResponse
  endpoint:
    path: /reference/struct/ot-dns-record-response
    method: GET
    data_selector: details
    params: {}
- name: otDnsServiceCallback
  endpoint:
    path: /reference/struct/ot-dns-service-callback
    method: GET
    data_selector: details
    params: {}
- name: otDnsServiceInfo
  endpoint:
    path: /reference/struct/ot-dns-service-info
    method: GET
    data_selector: details
    params: {}
- name: otDnsServiceResponse
  endpoint:
    path: /reference/struct/ot-dns-service-response
    method: GET
    data_selector: details
    params: {}
- name: otDnsTxtEntry
  endpoint:
    path: /reference/struct/ot-dns-txt-entry
    method: GET
    data_selector: details
    params: {}
- name: otDnsTxtEntryIterator
  endpoint:
    path: /reference/struct/ot-dns-txt-entry-iterator
    method: GET
    data_selector: details
    params: {}
- name: otDnsClientResolveServiceAndHostAddress
  endpoint:
    path: /otDnsClientResolveServiceAndHostAddress
    method: GET
    data_selector: response
    params: {}
- name: otDnsClientSetDefaultConfig
  endpoint:
    path: /otDnsClientSetDefaultConfig
    method: POST
    data_selector: response
    params: {}
- name: otDnsEncodeTxtData
  endpoint:
    path: /otDnsEncodeTxtData
    method: POST
    data_selector: response
    params: {}
- name: otDnsGetNextTxtEntry
  endpoint:
    path: /otDnsGetNextTxtEntry
    method: GET
    data_selector: response
    params: {}
- name: otDnsInitTxtEntryIterator
  endpoint:
    path: /otDnsInitTxtEntryIterator
    method: POST
    data_selector: response
    params: {}
- name: otDnsIsNameCompressionEnabled
  endpoint:
    path: /otDnsIsNameCompressionEnabled
    method: GET
    data_selector: response
    params: {}
- name: otDnsRecordResponseGetQueryName
  endpoint:
    path: /otDnsRecordResponseGetQueryName
    method: GET
    data_selector: response
    params: {}
- name: otDnsRecordResponseGetRecordInfo
  endpoint:
    path: /otDnsRecordResponseGetRecordInfo
    method: GET
    data_selector: response
    params: {}
- name: otDnsServiceResponseGetHostAddress
  endpoint:
    path: /otDnsServiceResponseGetHostAddress
    method: GET
    data_selector: response
    params: {}
- name: otDnsServiceResponseGetServiceInfo
  endpoint:
    path: /otDnsServiceResponseGetServiceInfo
    method: GET
    data_selector: response
    params: {}
- name: otDnsServiceResponseGetServiceName
  endpoint:
    path: /otDnsServiceResponseGetServiceName
    method: GET
    data_selector: response
    params: {}
- name: otDnsSetNameCompressionEnabled
  endpoint:
    path: /otDnsSetNameCompressionEnabled
    method: POST
    data_selector: response
    params: {}
- name: otDnsRecordResponse
  endpoint:
    path: /otDnsRecordResponseGetRecordInfo
    method: GET
    data_selector: records
- name: otActiveScanResult
  endpoint:
    path: /reference/struct/ot-active-scan-result
    method: GET
- name: otBackboneRouterConfig
  endpoint:
    path: /reference/struct/ot-backbone-router-config
    method: GET
- name: otBorderAgentCounters
  endpoint:
    path: /reference/struct/ot-border-agent-counters
    method: GET
- name: otDeviceProperties
  endpoint:
    path: /reference/struct/ot-device-properties
    method: GET
- name: otDnsTxtEntry
  endpoint:
    path: /otDnsTxtEntry
    method: GET
    data_selector: attributes
    params: {}
- name: otDnssdCounters
  endpoint:
    path: /reference/struct/ot-dnssd-counters
    method: GET
- name: otDnssdHostInfo
  endpoint:
    path: /reference/struct/ot-dnssd-host-info
    method: GET
- name: otDnssdServiceInstanceInfo
  endpoint:
    path: /reference/struct/ot-dnssd-service-instance-info
    method: GET
- name: otUpstreamDnsCounters
  endpoint:
    path: /reference/struct/ot-upstream-dns-counters
    method: GET
- name: otDnssdCounters
  endpoint:
    path: /reference/struct/ot-dnssd-counters
    method: GET
- name: mAddressNum
  endpoint:
    path: /mAddressNum
    method: GET
    data_selector: attributes
- name: mAddresses
  endpoint:
    path: /mAddresses
    method: GET
    data_selector: attributes
- name: mTtl
  endpoint:
    path: /mTtl
    method: GET
    data_selector: attributes
- name: mAddressNum
  endpoint:
    path: /mAddressNum
    method: GET
    data_selector: number of host IPv6 addresses
- name: mAddresses
  endpoint:
    path: /mAddresses
    method: GET
    data_selector: host IPv6 addresses
- name: mFullName
  endpoint:
    path: /mFullName
    method: GET
    data_selector: full instance name
- name: mHostName
  endpoint:
    path: /mHostName
    method: GET
    data_selector: host name
- name: mPort
  endpoint:
    path: /mPort
    method: GET
    data_selector: service port
- name: mPriority
  endpoint:
    path: /mPriority
    method: GET
    data_selector: service priority
- name: mTtl
  endpoint:
    path: /mTtl
    method: GET
    data_selector: service TTL
- name: mTxtData
  endpoint:
    path: /mTxtData
    method: GET
    data_selector: service TXT RDATA
- name: mTxtLength
  endpoint:
    path: /mTxtLength
    method: GET
    data_selector: service TXT RDATA length
- name: mWeight
  endpoint:
    path: /mWeight
    method: GET
    data_selector: service weight
- name: mFailures
  endpoint:
    data_selector: uint32_t
    params: {}
- name: mQueries
  endpoint:
    data_selector: uint32_t
    params: {}
- name: mResponses
  endpoint:
    data_selector: uint32_t
    params: {}
- name: icmpv6_message_codes
  endpoint:
    path: /api/icmpv6/message_codes
    method: GET
    data_selector: message_codes
- name: icmpv6_echo_modes
  endpoint:
    path: /api/icmpv6/echo_modes
    method: GET
    data_selector: echo_modes
- name: icmpv6_message_types
  endpoint:
    path: /api/icmpv6/message_types
    method: GET
    data_selector: message_types
- name: Public attributes
  endpoint:
    path: /reference/struct/ot-icmp6-handler
    method: GET
    data_selector: attributes
    params: {}
- name: mChecksum
  endpoint:
    path: /include/ot-icmp6-header/mChecksum
    method: GET
    data_selector: uint16_t
    params: {}
- name: mCode
  endpoint:
    path: /include/ot-icmp6-header/mCode
    method: GET
    data_selector: uint8_t
    params: {}
- name: mData
  endpoint:
    path: /include/ot-icmp6-header/mData
    method: GET
    data_selector: union otIcmp6Header::OT_TOOL_PACKED_FIELD
    params: {}
- name: mType
  endpoint:
    path: /include/ot-icmp6-header/mType
    method: GET
    data_selector: uint8_t
    params: {}
- name: otBorderRoutingCounters
  endpoint:
    path: /otBorderRoutingCounters
    method: GET
    data_selector: counters
    params: {}
- name: otIp6Address
  endpoint:
    path: /otIp6Address
    method: GET
    data_selector: address
    params: {}
- name: otIp6AddressComponents
  endpoint:
    path: /otIp6AddressComponents
    method: GET
    data_selector: components
    params: {}
- name: otIp6AddressInfo
  endpoint:
    path: /otIp6AddressInfo
    method: GET
    data_selector: info
    params: {}
- name: otIp6InterfaceIdentifier
  endpoint:
    path: /otIp6InterfaceIdentifier
    method: GET
    data_selector: identifier
    params: {}
- name: otIp6NetworkPrefix
  endpoint:
    path: /otIp6NetworkPrefix
    method: GET
    data_selector: prefix
    params: {}
- name: otIp6Prefix
  endpoint:
    path: /otIp6Prefix
    method: GET
    data_selector: prefix
    params: {}
- name: otMessageInfo
  endpoint:
    path: /otMessageInfo
    method: GET
    data_selector: message_info
    params: {}
- name: otNetifAddress
  endpoint:
    path: /otNetifAddress
    method: GET
    data_selector: netif_address
    params: {}
- name: otNetifMulticastAddress
  endpoint:
    path: /otNetifMulticastAddress
    method: GET
    data_selector: multicast_address
    params: {}
- name: otPacketsAndBytes
  endpoint:
    path: /otPacketsAndBytes
    method: GET
    data_selector: packets_and_bytes
    params: {}
- name: otSockAddr
  endpoint:
    path: /otSockAddr
    method: GET
    data_selector: sock_addr
    params: {}
- name: otBorderRoutingCounters
  endpoint:
    path: /reference/struct/ot-border-routing-counters
    method: GET
    data_selector: records
- name: mInboundInternet
  endpoint:
    path: /otBorderRoutingCounters/mInboundInternet
    method: GET
    data_selector: otPacketsAndBytes
- name: mInboundMulticast
  endpoint:
    path: /otBorderRoutingCounters/mInboundMulticast
    method: GET
    data_selector: otPacketsAndBytes
- name: mInboundUnicast
  endpoint:
    path: /otBorderRoutingCounters/mInboundUnicast
    method: GET
    data_selector: otPacketsAndBytes
- name: mOutboundInternet
  endpoint:
    path: /otBorderRoutingCounters/mOutboundInternet
    method: GET
    data_selector: otPacketsAndBytes
- name: mOutboundMulticast
  endpoint:
    path: /otBorderRoutingCounters/mOutboundMulticast
    method: GET
    data_selector: otPacketsAndBytes
- name: mOutboundUnicast
  endpoint:
    path: /otBorderRoutingCounters/mOutboundUnicast
    method: GET
    data_selector: otPacketsAndBytes
- name: mRaRx
  endpoint:
    path: /otBorderRoutingCounters/mRaRx
    method: GET
    data_selector: uint32_t
- name: mRaTxFailure
  endpoint:
    path: /otBorderRoutingCounters/mRaTxFailure
    method: GET
    data_selector: uint32_t
- name: mRaTxSuccess
  endpoint:
    path: /otBorderRoutingCounters/mRaTxSuccess
    method: GET
    data_selector: uint32_t
- name: mRsRx
  endpoint:
    path: /otBorderRoutingCounters/mRsRx
    method: GET
    data_selector: uint32_t
- name: mRsTxFailure
  endpoint:
    path: /otBorderRoutingCounters/mRsTxFailure
    method: GET
    data_selector: uint32_t
- name: mRsTxSuccess
  endpoint:
    path: /otBorderRoutingCounters/mRsTxSuccess
    method: GET
    data_selector: uint32_t
- name: mFields
  endpoint:
    path: /reference/union/ot-ip6-address/o-t-t-o-o-l-p-a-c-k-e-d-f-i-e-l-d
    method: GET
    data_selector: mFields
    params: {}
- name: otIp6InterfaceIdentifier
  endpoint:
    path: /otIp6AddressComponents/mIid
    method: GET
    data_selector: mIid
    params: {}
- name: otIp6NetworkPrefix
  endpoint:
    path: /otIp6AddressComponents/mNetworkPrefix
    method: GET
    data_selector: mNetworkPrefix
    params: {}
- name: otIp6InterfaceIdentifier
  endpoint:
    path: /reference/struct/ot-ip6-interface-identifier
    method: GET
- name: m8
  endpoint:
    path: /include/openthread/ip6.h
    method: GET
    data_selector: m8
    params: {}
- name: mLength
  endpoint:
    path: /otIp6Prefix/mLength
    method: GET
    data_selector: mLength
- name: mPrefix
  endpoint:
    path: /otIp6Prefix/mPrefix
    method: GET
    data_selector: mPrefix
- name: Public attributes
  endpoint:
    path: /resources/Public_attributes
    method: GET
    data_selector: attributes
- name: otNetifAddress
  endpoint:
    path: /otNetifAddress
    method: GET
    data_selector: attributes
    params: {}
- name: mAddress
  endpoint:
    path: /otIp6Address
    method: GET
- name: mNext
  endpoint:
    path: /const/struct/otNetifMulticastAddress
    method: GET
- name: otActiveScanResult
  endpoint:
    path: /reference/struct/ot-active-scan-result
    method: GET
    data_selector: records
- name: mBytes
  endpoint:
    path: /otPacketsAndBytes/mBytes
    method: GET
    data_selector: mBytes
- name: mPackets
  endpoint:
    path: /otPacketsAndBytes/mPackets
    method: GET
    data_selector: mPackets
- name: mAddress
  endpoint:
    path: /otSockAddr/mAddress
    method: GET
    data_selector: otIp6Address
    params: {}
- name: mPort
  endpoint:
    path: /otSockAddr/mPort
    method: GET
    data_selector: uint16_t
    params: {}
- name: otMdnsGetNextBrowser
  endpoint:
    path: /otMdnsGetNextBrowser
    method: GET
    data_selector: aBrowser
    params: {}
- name: otMdnsGetNextHost
  endpoint:
    path: /otMdnsGetNextHost
    method: GET
    data_selector: aHost
    params: {}
- name: otMdnsGetNextIp4AddressResolver
  endpoint:
    path: /otMdnsGetNextIp4AddressResolver
    method: GET
    data_selector: aResolver
    params: {}
- name: otMdnsGetNextIp6AddressResolver
  endpoint:
    path: /otMdnsGetNextIp6AddressResolver
    method: GET
    data_selector: aResolver
    params: {}
- name: otMdnsGetNextKey
  endpoint:
    path: /otMdnsGetNextKey
    method: GET
    data_selector: aKey
    params: {}
- name: otMdnsGetNextLocalHostAddress
  endpoint:
    path: /otMdnsGetNextLocalHostAddress
    method: GET
    data_selector: aAddress
    params: {}
- name: otMdnsGetNextRecordQuerier
  endpoint:
    path: /otMdnsGetNextRecordQuerier
    method: GET
    data_selector: aQuerier
    params: {}
- name: otMdnsGetNextService
  endpoint:
    path: /otMdnsGetNextService
    method: GET
    data_selector: aService
    params: {}
- name: otMdnsGetNextSrvResolver
  endpoint:
    path: /otMdnsGetNextSrvResolver
    method: GET
    data_selector: aResolver
    params: {}
- name: otMdnsGetNextTxtResolver
  endpoint:
    path: /otMdnsGetNextTxtResolver
    method: GET
    data_selector: aResolver
    params: {}
- name: otMdnsIsEnabled
  endpoint:
    path: /otMdnsIsEnabled
    method: GET
    data_selector: enabled
    params: {}
- name: otMdnsIsQuestionUnicastAllowed
  endpoint:
    path: /otMdnsIsQuestionUnicastAllowed
    method: GET
    data_selector: allowed
    params: {}
- name: otMdnsIsVerboseLoggingEnabled
  endpoint:
    path: /otMdnsIsVerboseLoggingEnabled
    method: GET
    data_selector: verbose_logging
    params: {}
- name: otMdnsRegisterHost
  endpoint:
    path: /otMdnsRegisterHost
    method: POST
    data_selector: registration_result
    params: {}
- name: otMdnsRegisterKey
  endpoint:
    path: /otMdnsRegisterKey
    method: POST
    data_selector: registration_result
    params: {}
- name: otMdnsStopSrvResolver
  endpoint:
    path: /otMdnsStopSrvResolver
    method: POST
    data_selector: resolver
    params: {}
- name: otMdnsStopTxtResolver
  endpoint:
    path: /otMdnsStopTxtResolver
    method: POST
    data_selector: resolver
    params: {}
- name: otMdnsUnregisterHost
  endpoint:
    path: /otMdnsUnregisterHost
    method: POST
    data_selector: host
    params: {}
- name: otMdnsUnregisterKey
  endpoint:
    path: /otMdnsUnregisterKey
    method: POST
    data_selector: key
    params: {}
- name: otMdnsUnregisterService
  endpoint:
    path: /otMdnsUnregisterService
    method: POST
    data_selector: service
    params: {}
- name: mHasCachedResults
  endpoint:
    path: otMdnsCacheInfo::mHasCachedResults
    method: GET
    data_selector: bool
- name: mIsActive
  endpoint:
    path: otMdnsCacheInfo::mIsActive
    method: GET
    data_selector: bool
- name: mAddress
  endpoint:
    path: union otMdnsLocalHostAddress::@5 otMdnsLocalHostAddress::mAddress
    method: GET
    data_selector: address
- name: mInfraIfIndex
  endpoint:
    path: uint32_t otMdnsLocalHostAddress::mInfraIfIndex
    method: GET
    data_selector: infrastructure_index
- name: mIp4
  endpoint:
    path: otIp4Address otMdnsLocalHostAddress::mIp4
    method: GET
    data_selector: ipv4_address
- name: mIp6
  endpoint:
    path: otIp6Address otMdnsLocalHostAddress::mIp6
    method: GET
    data_selector: ipv6_address
- name: mIsIp6
  endpoint:
    path: bool otMdnsLocalHostAddress::mIsIp6
    method: GET
    data_selector: is_ipv6
- name: NAT64
  endpoint:
    path: /reference/group/api-nat64
    method: GET
- name: otIp4Address
  endpoint:
    path: /reference/struct/ot-ip4-address
    method: GET
    data_selector: records
    params: {}
- name: otIp4Cidr
  endpoint:
    path: /reference/struct/ot-ip4-cidr
    method: GET
    data_selector: records
    params: {}
- name: otNat64AddressMapping
  endpoint:
    path: /reference/struct/ot-nat64-address-mapping
    method: GET
    data_selector: records
    params: {}
- name: otNat64AddressMappingIterator
  endpoint:
    path: /reference/struct/ot-nat64-address-mapping-iterator
    method: GET
    data_selector: records
    params: {}
- name: otNat64Counters
  endpoint:
    path: /reference/struct/ot-nat64-counters
    method: GET
    data_selector: records
    params: {}
- name: otNat64ErrorCounters
  endpoint:
    path: /reference/struct/ot-nat64-error-counters
    method: GET
    data_selector: records
    params: {}
- name: otNat64ProtocolCounters
  endpoint:
    path: /reference/struct/ot-nat64-protocol-counters
    method: GET
    data_selector: records
    params: {}
- name: otNat64GetErrorCounters
  endpoint:
    path: /otNat64GetErrorCounters
    method: GET
    data_selector: counters
- name: otNat64GetNextAddressMapping
  endpoint:
    path: /otNat64GetNextAddressMapping
    method: GET
    data_selector: mapping
- name: otNat64GetPrefixManagerState
  endpoint:
    path: /otNat64GetPrefixManagerState
    method: GET
    data_selector: prefixManagerState
- name: otNat64GetTranslatorState
  endpoint:
    path: /otNat64GetTranslatorState
    method: GET
    data_selector: translatorState
- name: otNat64InitAddressMappingIterator
  endpoint:
    path: /otNat64InitAddressMappingIterator
    method: POST
    data_selector: iterator
- name: otNat64Send
  endpoint:
    path: /otNat64Send
    method: POST
    data_selector: sendResult
- name: otNat64SetEnabled
  endpoint:
    path: /otNat64SetEnabled
    method: POST
    data_selector: setEnabledResult
- name: otNat64SetIp4Cidr
  endpoint:
    path: /otNat64SetIp4Cidr
    method: POST
    data_selector: setCidrResult
- name: otNat64SetReceiveIp4Callback
  endpoint:
    path: /otNat64SetReceiveIp4Callback
    method: POST
    data_selector: callbackResult
- name: otNat64SynthesizeIp6Address
  endpoint:
    path: /otNat64SynthesizeIp6Address
    method: POST
    data_selector: synthesizedAddress
- name: ot_ip4_address
  endpoint:
    path: /reference/struct/ot-ip4-address
    method: GET
    data_selector: records
- name: mFields
  endpoint:
    path: /reference/struct/ot-ip4-address
    method: GET
    data_selector: union otIp4Address::OT_TOOL_PACKED_FIELD
- name: mAddress
  endpoint:
    path: /otIp4Address
    method: GET
- name: mLength
  endpoint:
    path: /uint8_t
    method: GET
- name: ot_nat64_address_mapping
  endpoint:
    path: /reference/struct/ot-nat64-address-mapping
    method: GET
- name: m4To6Bytes
  endpoint:
    path: /nat64/m4To6Bytes
    method: GET
    data_selector: m4To6Bytes
    params: {}
- name: m4To6Packets
  endpoint:
    path: /nat64/m4To6Packets
    method: GET
    data_selector: m4To6Packets
    params: {}
- name: m6To4Bytes
  endpoint:
    path: /nat64/m6To4Bytes
    method: GET
    data_selector: m6To4Bytes
    params: {}
- name: m6To4Packets
  endpoint:
    path: /nat64/m6To4Packets
    method: GET
    data_selector: m6To4Packets
    params: {}
- name: mCount4To6
  endpoint:
    path: /nat64/errors/mCount4To6
    method: GET
    data_selector: errors
    params: {}
- name: mCount6To4
  endpoint:
    path: /nat64/errors/mCount6To4
    method: GET
    data_selector: errors
    params: {}
- name: mIcmp
  endpoint:
    path: otNat64ProtocolCounters::mIcmp
    method: GET
- name: mTcp
  endpoint:
    path: otNat64ProtocolCounters::mTcp
    method: GET
- name: mTotal
  endpoint:
    path: otNat64ProtocolCounters::mTotal
    method: GET
- name: mUdp
  endpoint:
    path: otNat64ProtocolCounters::mUdp
    method: GET
- name: Ping Sender
  endpoint:
    path: /reference/group/api-ping-sender
    method: GET
    data_selector: otPingSenderReply
- name: otPingSenderConfig
  endpoint:
    path: /reference/struct/ot-ping-sender-config
    method: GET
- name: otPingSenderReply
  endpoint:
    path: /reference/struct/ot-ping-sender-reply
    method: GET
- name: otPingSenderStatistics
  endpoint:
    path: /reference/struct/ot-ping-sender-statistics
    method: GET
- name: ping_request
  endpoint:
    path: /ping/request
    method: POST
    data_selector: ping_response
    params: {}
- name: ping_sender_reply
  endpoint:
    path: /reference/group/api-ping-sender
    method: GET
    data_selector: otPingSenderReply
- name: ping_reply
  endpoint:
    path: /ping_sender_reply
    method: GET
    data_selector: attributes
- name: ot_ping_sender_statistics
  endpoint:
    path: /reference/struct/ot-ping-sender-statistics
    method: GET
- name: SrpClientEnableAutoStartMode
  endpoint:
    path: /SrpClient/EnableAutoStartMode
    method: POST
- name: SrpClientDisableAutoStartMode
  endpoint:
    path: /SrpClient/DisableAutoStartMode
    method: POST
- name: SrpClientEnableAutoHostAddress
  endpoint:
    path: /SrpClient/EnableAutoHostAddress
    method: POST
- name: SrpClientSetDomainName
  endpoint:
    path: /SrpClient/SetDomainName
    method: POST
- name: SrpClientSetHostAddresses
  endpoint:
    path: /SrpClient/SetHostAddresses
    method: POST
- name: SrpClientSetHostName
  endpoint:
    path: /SrpClient/SetHostName
    method: POST
- name: SrpClientRemoveHostAndServices
  endpoint:
    path: /SrpClient/RemoveHostAndServices
    method: POST
- name: otSrpClientSetServiceKeyRecordEnabled
  endpoint:
    path: /otSrpClientSetServiceKeyRecordEnabled
    method: POST
    data_selector: result
    params: {}
- name: otSrpClientSetTtl
  endpoint:
    path: /otSrpClientSetTtl
    method: POST
    data_selector: result
    params: {}
- name: otSrpClientStart
  endpoint:
    path: /otSrpClientStart
    method: POST
    data_selector: result
    params: {}
- name: otSrpClientStop
  endpoint:
    path: /otSrpClientStop
    method: POST
    data_selector: result
    params: {}
- name: otSrpServerEnableFastStartMode
  endpoint:
    path: /otSrpServerEnableFastStartMode
    method: POST
    data_selector: result
    params: {}
- name: otSrpServerGetAddressMode
  endpoint:
    path: /otSrpServerGetAddressMode
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetAnycastModeSequenceNumber
  endpoint:
    path: /otSrpServerGetAnycastModeSequenceNumber
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetDomain
  endpoint:
    path: /otSrpServerGetDomain
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetLeaseConfig
  endpoint:
    path: /otSrpServerGetLeaseConfig
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetNextHost
  endpoint:
    path: /otSrpServerGetNextHost
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetPort
  endpoint:
    path: /otSrpServerGetPort
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetResponseCounters
  endpoint:
    path: /otSrpServerGetResponseCounters
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetState
  endpoint:
    path: /otSrpServerGetState
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerGetTtlConfig
  endpoint:
    path: /otSrpServerGetTtlConfig
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerHandleServiceUpdateResult
  endpoint:
    path: /otSrpServerHandleServiceUpdateResult
    method: POST
    data_selector: result
    params: {}
- name: otSrpServerHostGetAddresses
  endpoint:
    path: /otSrpServerHostGetAddresses
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerHostGetFullName
  endpoint:
    path: /otSrpServerHostGetFullName
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerHostGetLeaseInfo
  endpoint:
    path: /otSrpServerHostGetLeaseInfo
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerHostGetNextService
  endpoint:
    path: /otSrpServerHostGetNextService
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerHostIsDeleted
  endpoint:
    path: /otSrpServerHostIsDeleted
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerHostMatchesFullName
  endpoint:
    path: /otSrpServerHostMatchesFullName
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerIsAutoEnableMode
  endpoint:
    path: /otSrpServerIsAutoEnableMode
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerIsFastStartModeEnabled
  endpoint:
    path: /otSrpServerIsFastStartModeEnabled
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerParseSubTypeServiceName
  endpoint:
    path: /otSrpServerParseSubTypeServiceName
    method: POST
    data_selector: result
    params: {}
- name: otSrpServerServiceGetHost
  endpoint:
    path: /otSrpServerServiceGetHost
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerServiceGetInstanceLabel
  endpoint:
    path: /otSrpServerServiceGetInstanceLabel
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerServiceGetInstanceName
  endpoint:
    path: /otSrpServerServiceGetInstanceName
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerServiceGetLeaseInfo
  endpoint:
    path: /otSrpServerServiceGetLeaseInfo
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerServiceGetNumberOfSubTypes
  endpoint:
    path: /otSrpServerServiceGetNumberOfSubTypes
    method: GET
    data_selector: result
    params: {}
- name: otSrpServerServiceGetPort
  endpoint:
    path: /otSrpServerServiceGetPort
    method: GET
    data_selector: result
    params: {}
- name: SrpServerServiceGetPriority
  endpoint:
    path: /otSrpServerServiceGetPriority
    method: GET
    data_selector: priority
    params: {}
- name: SrpServerServiceGetServiceName
  endpoint:
    path: /otSrpServerServiceGetServiceName
    method: GET
    data_selector: serviceName
    params: {}
- name: SrpServerServiceGetSubTypeServiceNameAt
  endpoint:
    path: /otSrpServerServiceGetSubTypeServiceNameAt
    method: GET
    data_selector: subTypeServiceName
    params: {}
- name: SrpServerServiceGetTtl
  endpoint:
    path: /otSrpServerServiceGetTtl
    method: GET
    data_selector: ttl
    params: {}
- name: SrpServerServiceGetTxtData
  endpoint:
    path: /otSrpServerServiceGetTxtData
    method: GET
    data_selector: txtData
    params: {}
- name: SrpServerServiceGetWeight
  endpoint:
    path: /otSrpServerServiceGetWeight
    method: GET
    data_selector: weight
    params: {}
- name: SrpServerServiceHasSubTypeServiceName
  endpoint:
    path: /otSrpServerServiceHasSubTypeServiceName
    method: GET
    data_selector: hasSubType
    params: {}
- name: SrpServerServiceIsDeleted
  endpoint:
    path: /otSrpServerServiceIsDeleted
    method: GET
    data_selector: isDeleted
    params: {}
- name: SrpServerServiceMatchesInstanceName
  endpoint:
    path: /otSrpServerServiceMatchesInstanceName
    method: GET
    data_selector: matchesInstanceName
    params: {}
- name: SrpServerServiceMatchesServiceName
  endpoint:
    path: /otSrpServerServiceMatchesServiceName
    method: GET
    data_selector: matchesServiceName
    params: {}
- name: SrpServerSetAddressMode
  endpoint:
    path: /otSrpServerSetAddressMode
    method: POST
    data_selector: setAddressMode
    params: {}
- name: SrpServerSetAnycastModeSequenceNumber
  endpoint:
    path: /otSrpServerSetAnycastModeSequenceNumber
    method: POST
    data_selector: setAnycastMode
    params: {}
- name: SrpServerSetAutoEnableMode
  endpoint:
    path: /otSrpServerSetAutoEnableMode
    method: POST
    data_selector: setAutoEnableMode
    params: {}
- name: SrpServerSetDomain
  endpoint:
    path: /otSrpServerSetDomain
    method: POST
    data_selector: setDomain
    params: {}
- name: SrpServerSetEnabled
  endpoint:
    path: /otSrpServerSetEnabled
    method: POST
    data_selector: setEnabled
    params: {}
- name: SrpServerSetLeaseConfig
  endpoint:
    path: /otSrpServerSetLeaseConfig
    method: POST
    data_selector: setLeaseConfig
    params: {}
- name: SrpServerSetServiceUpdateHandler
  endpoint:
    path: /otSrpServerSetServiceUpdateHandler
    method: POST
    data_selector: setServiceUpdateHandler
    params: {}
- name: SrpServerSetTtlConfig
  endpoint:
    path: /otSrpServerSetTtlConfig
    method: POST
    data_selector: setTtlConfig
    params: {}
- name: mService
  endpoint:
    path: /services/data/vXX.X/sobjects/SrpClientService
    method: GET
    data_selector: records
    params: {}
- name: mTxtEntry
  endpoint:
    path: /services/data/vXX.X/sobjects/DnsTxtEntry
    method: GET
    data_selector: records
    params: {}
- name: mAddresses
- name: mAutoAddress
- name: mName
- name: mNumAddresses
- name: mState
- name: mData
  endpoint:
    path: /mData
    method: GET
- name: mInstanceName
  endpoint:
    path: /mInstanceName
    method: GET
- name: mKeyLease
  endpoint:
    path: /mKeyLease
    method: GET
- name: mLease
  endpoint:
    path: /mLease
    method: GET
- name: mName
  endpoint:
    path: /mName
    method: GET
- name: mNumTxtEntries
  endpoint:
    path: /mNumTxtEntries
    method: GET
- name: mPort
  endpoint:
    path: /mPort
    method: GET
- name: mPriority
  endpoint:
    path: /mPriority
    method: GET
- name: mWeight
  endpoint:
    path: /mWeight
    method: GET
- name: mMaxKeyLease
  endpoint:
    path: /mMaxKeyLease
    method: GET
    data_selector: value
- name: mMaxLease
  endpoint:
    path: /mMaxLease
    method: GET
    data_selector: value
- name: mMinKeyLease
  endpoint:
    path: /mMinKeyLease
    method: GET
    data_selector: value
- name: mMinLease
  endpoint:
    path: /mMinLease
    method: GET
    data_selector: value
- name: mKeyLease
  endpoint:
    path: /srp_server/mKeyLease
    method: GET
    data_selector: keyLease
    params: {}
- name: mLease
  endpoint:
    path: /srp_server/mLease
    method: GET
    data_selector: lease
    params: {}
- name: mRemainingKeyLease
  endpoint:
    path: /srp_server/mRemainingKeyLease
    method: GET
    data_selector: remainingKeyLease
    params: {}
- name: mRemainingLease
  endpoint:
    path: /srp_server/mRemainingLease
    method: GET
    data_selector: remainingLease
    params: {}
- name: otSrpServerResponseCounters
  endpoint:
    path: /otSrpServerResponseCounters
    method: GET
    data_selector: public_attributes
    params: {}
- name: otSrpServerTtlConfig
  endpoint:
    path: /reference/struct/ot-srp-server-ttl-config
    method: GET
- name: mMaxTtl
  endpoint:
    path: /mMaxTtl
    method: GET
    data_selector: mMaxTtl
    params: {}
- name: mMinTtl
  endpoint:
    path: /mMinTtl
    method: GET
    data_selector: mMinTtl
    params: {}
- name: otTcpReceiveByReference
  endpoint:
    path: /otTcpReceiveByReference
    method: GET
    data_selector: otError
    params: {}
- name: otTcpReceiveContiguify
  endpoint:
    path: /otTcpReceiveContiguify
    method: GET
    data_selector: otError
    params: {}
- name: otTcpSendByExtension
  endpoint:
    path: /otTcpSendByExtension
    method: GET
    data_selector: otError
    params: {}
- name: otTcpSendByReference
  endpoint:
    path: /otTcpSendByReference
    method: GET
    data_selector: otError
    params: {}
- name: otTcpSendEndOfStream
  endpoint:
    path: /otTcpSendEndOfStream
    method: GET
    data_selector: otError
    params: {}
- name: otTcpStopListening
  endpoint:
    path: /otTcpStopListening
    method: GET
    data_selector: otError
    params: {}
- name: otLinkedBuffer
  endpoint:
    path: /reference/struct/ot-linked-buffer
    method: GET
    data_selector: Public attributes
    params: {}
- name: mContext
  endpoint:
    path: otTcpEndpointInitializeArgs::mContext
    method: Pointer
    data_selector: application-specific context
- name: mDisconnectedCallback
  endpoint:
    path: otTcpEndpointInitializeArgs::mDisconnectedCallback
    method: Callback
    data_selector: '"Disconnected" callback function'
- name: mEstablishedCallback
  endpoint:
    path: otTcpEndpointInitializeArgs::mEstablishedCallback
    method: Callback
    data_selector: '"Established" callback function'
- name: mForwardProgressCallback
  endpoint:
    path: otTcpEndpointInitializeArgs::mForwardProgressCallback
    method: Callback
    data_selector: '"Forward progress" callback function'
- name: mReceiveAvailableCallback
  endpoint:
    path: otTcpEndpointInitializeArgs::mReceiveAvailableCallback
    method: Callback
    data_selector: '"Receive available" callback function'
- name: mReceiveBuffer
  endpoint:
    path: otTcpEndpointInitializeArgs::mReceiveBuffer
    method: Pointer
    data_selector: memory provided to the system for the TCP receive buffer
- name: mReceiveBufferSize
  endpoint:
    path: otTcpEndpointInitializeArgs::mReceiveBufferSize
    method: Size
    data_selector: memory provided to the system for the TCP receive buffer
- name: mSendDoneCallback
  endpoint:
    path: otTcpEndpointInitializeArgs::mSendDoneCallback
    method: Callback
    data_selector: '"Send done" callback function'
- name: mAcceptDoneCallback
  endpoint:
    path: otTcpAcceptDone
    method: function
    data_selector: callback
- name: mAcceptReadyCallback
  endpoint:
    path: otTcpAcceptReady
    method: function
    data_selector: callback
- name: mContext
  endpoint:
    path: void *
    method: pointer
    data_selector: application-specific context
- name: mNext
  endpoint:
    path: struct otTcpListener *
    method: pointer
    data_selector: next TCP listener
- name: mSize
  endpoint:
    path: uint8_t
    method: array
    data_selector: size data
- name: mTcbListen
  endpoint:
    path: union otTcpListener::@22
    method: union
    data_selector: TcbListen
- name: mAcceptDoneCallback
  endpoint:
    path: otTcpAcceptDone
    method: N/A
    data_selector: N/A
    params: {}
- name: mAcceptReadyCallback
  endpoint:
    path: otTcpAcceptReady
    method: N/A
    data_selector: N/A
    params: {}
- name: mContext
  endpoint:
    path: void *
    method: N/A
    data_selector: N/A
    params: {}
- name: otTcpCircularSendBuffer
  endpoint:
    path: /reference/struct/ot-tcp-circular-send-buffer
    method: GET
    data_selector: mCapacity
    params: {}
- name: mEndpoint
  endpoint:
    path: otTcpEndpoint *
    method: ''
    data_selector: ''
    params: {}
- name: mSendBuffer
  endpoint:
    path: otTcpCircularSendBuffer *
    method: ''
    data_selector: ''
    params: {}
- name: otUdpReceiver
  endpoint:
    path: /reference/struct/ot-udp-receiver
    method: GET
    data_selector: details
    params: {}
- name: otUdpSocket
  endpoint:
    path: /reference/struct/ot-udp-socket
    method: GET
    data_selector: details
    params: {}
- name: mContext
  endpoint:
    path: otUdpReceiver::mContext
    method: GET
    data_selector: application-specific context
- name: mHandler
  endpoint:
    path: otUdpReceiver::mHandler
    method: GET
    data_selector: receiver callback
- name: mNext
  endpoint:
    path: otUdpReceiver::mNext
    method: GET
    data_selector: next UDP receiver
- name: mContext
  endpoint:
    path: /include/openthread/udp.h
    method: GET
    data_selector: attributes
    params: {}
- name: mHandle
  endpoint:
    path: /include/openthread/udp.h
    method: GET
    data_selector: attributes
    params: {}
- name: mHandler
  endpoint:
    path: /include/openthread/udp.h
    method: GET
    data_selector: attributes
    params: {}
- name: mNetifId
  endpoint:
    path: /include/openthread/udp.h
    method: GET
    data_selector: attributes
    params: {}
- name: mNext
  endpoint:
    path: /include/openthread/udp.h
    method: GET
    data_selector: attributes
    params: {}
- name: mPeerName
  endpoint:
    path: /include/openthread/udp.h
    method: GET
    data_selector: attributes
    params: {}
- name: mSockName
  endpoint:
    path: /include/openthread/udp.h
    method: GET
    data_selector: attributes
    params: {}
- name: UDP Forward
  endpoint:
    path: /reference/group/api-udp-forward
    method: GET
- name: otBackboneRouterConfig
  endpoint:
    path: /reference/struct/ot-backbone-router-config
    method: GET
- name: otBorderAgentCounters
  endpoint:
    path: /reference/struct/ot-border-agent-counters
    method: GET
- name: otUdpForwardReceive
  endpoint:
    path: /otUdpForwardReceive
    method: void
    data_selector: parameters
    params: {}
- name: otUdpForwardSetForwarder
  endpoint:
    path: /otUdpForwardSetForwarder
    method: void
    data_selector: parameters
    params: {}
- name: otUdpIsPortInUse
  endpoint:
    path: /otUdpIsPortInUse
    method: bool
    data_selector: parameters
    params: {}
- name: ActiveScan
  endpoint:
    path: /link/active_scan
    method: POST
    data_selector: results
- name: EnergyScan
  endpoint:
    path: /link/energy_scan
    method: POST
    data_selector: results
- name: otLinkIsEnergyScanInProgress
  endpoint:
    path: /otLinkIsEnergyScanInProgress
    method: GET
    data_selector: returns
- name: otLinkIsInTransmitState
  endpoint:
    path: /otLinkIsInTransmitState
    method: GET
    data_selector: returns
- name: otLinkIsPromiscuous
  endpoint:
    path: /otLinkIsPromiscuous
    method: GET
    data_selector: returns
- name: otLinkIsRadioFilterEnabled
  endpoint:
    path: /otLinkIsRadioFilterEnabled
    method: GET
    data_selector: returns
- name: otLinkIsWakeupListenEnabled
  endpoint:
    path: /otLinkIsWakeupListenEnabled
    method: GET
    data_selector: returns
- name: otLinkResetCounters
  endpoint:
    path: /otLinkResetCounters
    method: POST
    data_selector: returns
- name: otLinkSendDataRequest
  endpoint:
    path: /otLinkSendDataRequest
    method: POST
    data_selector: returns
- name: otLinkSetChannel
  endpoint:
    path: /otLinkSetChannel
    method: POST
    data_selector: returns
- name: otLinkSetCslChannel
  endpoint:
    path: /otLinkSetCslChannel
    method: POST
    data_selector: returns
- name: otLinkSetCslPeriod
  endpoint:
    path: /otLinkSetCslPeriod
    method: POST
    data_selector: returns
- name: otLinkSetCslTimeout
  endpoint:
    path: /otLinkSetCslTimeout
    method: POST
    data_selector: returns
- name: otLinkSetEnabled
  endpoint:
    path: /otLinkSetEnabled
    method: POST
    data_selector: returns
- name: otLinkSetExtendedAddress
  endpoint:
    path: /otLinkSetExtendedAddress
    method: POST
    data_selector: returns
- name: otLinkSetMaxFrameRetriesDirect
  endpoint:
    path: /otLinkSetMaxFrameRetriesDirect
    method: POST
    data_selector: returns
- name: otLinkSetMaxFrameRetriesIndirect
  endpoint:
    path: /otLinkSetMaxFrameRetriesIndirect
    method: POST
    data_selector: returns
- name: otLinkSetPanId
  endpoint:
    path: /otLinkSetPanId
    method: POST
    data_selector: returns
- name: otLinkSetPollPeriod
  endpoint:
    path: /otLinkSetPollPeriod
    method: POST
    data_selector: returns
- name: otLinkSetPromiscuous
  endpoint:
    path: /otLinkSetPromiscuous
    method: POST
    data_selector: returns
- name: otLinkSetRadioFilterEnabled
  endpoint:
    path: /otLinkSetRadioFilterEnabled
    method: POST
    data_selector: returns
- name: otLinkSetRegion
  endpoint:
    path: /otLinkSetRegion
    method: POST
    data_selector: returns
- name: otLinkSetRxOnWhenIdle
  endpoint:
    path: /otLinkSetRxOnWhenIdle
    method: POST
    data_selector: returns
- name: otLinkSetSupportedChannelMask
  endpoint:
    path: /otLinkSetSupportedChannelMask
    method: POST
    data_selector: returns
- name: otLinkSetWakeUpListenEnabled
  endpoint:
    path: /otLinkSetWakeUpListenEnabled
    method: POST
    data_selector: returns
- name: otLinkSetWakeupChannel
  endpoint:
    path: /otLinkSetWakeupChannel
    method: POST
    data_selector: returns
- name: otLinkSetWakeupListenParameters
  endpoint:
    path: /otLinkSetWakeupListenParameters
    method: POST
    data_selector: returns
- name: otActiveScanResult
  endpoint:
    path: /otActiveScanResult
    method: GET
- name: otEnergyScanResult
  endpoint:
    path: /reference/struct/ot-energy-scan-result
    method: GET
    data_selector: records
- name: energy_scan_result
  endpoint:
    path: /reference/struct/ot-energy-scan-result
    method: GET
    data_selector: Public attributes
- name: otMacCounters
  endpoint:
    path: /reference/struct/ot-mac-counters
    method: GET
- name: mac_layer_counters
  endpoint:
    path: /mac_layer_counters
    method: GET
    data_selector: counters
    params: {}
- name: otMacFilterEntry
  endpoint:
    path: /reference/struct/ot-mac-filter-entry
    method: GET
- name: otMacFilterEntry
  endpoint:
    path: /reference/struct/ot-mac-filter-entry
    method: GET
    data_selector: Public attributes
- name: Link Metrics Management Request
  endpoint:
    path: /path/to/link/metrics/management/request
    method: POST
    data_selector: response
    params: {}
- name: Link Metrics Query
  endpoint:
    path: /path/to/link/metrics/query
    method: GET
    data_selector: metrics
    params: {}
- name: link_metrics
  endpoint:
    path: /link_metrics
    method: GET
    data_selector: frames
- name: Link Metrics Values
  endpoint:
    path: /link_metrics_values
    method: GET
    data_selector: mMetrics
    params: {}
- name: otLinkRawSrcMatchClearShortEntry
  endpoint:
    path: /otLinkRawSrcMatchClearShortEntry
    method: GET
    data_selector: returnValues
    params: {}
- name: otLinkRawSrcMatchEnable
  endpoint:
    path: /otLinkRawSrcMatchEnable
    method: GET
    data_selector: returnValues
    params: {}
- name: otLinkRawTransmit
  endpoint:
    path: /otLinkRawTransmit
    method: GET
    data_selector: returnValues
    params: {}
- name: otMessageQueueEnqueueAtHead
  endpoint:
    path: /otMessageQueueEnqueueAtHead
    method: void
    data_selector: ''
    params: {}
- name: otMessageQueueGetHead
  endpoint:
    path: /otMessageQueueGetHead
    method: otMessage *
    data_selector: ''
    params: {}
- name: otMessageQueueGetNext
  endpoint:
    path: /otMessageQueueGetNext
    method: otMessage *
    data_selector: ''
    params: {}
- name: otMessageQueueInit
  endpoint:
    path: /otMessageQueueInit
    method: void
    data_selector: ''
    params: {}
- name: otMessageRead
  endpoint:
    path: /otMessageRead
    method: uint16_t
    data_selector: ''
    params: {}
- name: otMessageRegisterTxCallback
  endpoint:
    path: /otMessageRegisterTxCallback
    method: void
    data_selector: ''
    params: {}
- name: otMessageResetBufferInfo
  endpoint:
    path: /otMessageResetBufferInfo
    method: void
    data_selector: ''
    params: {}
- name: otMessageSetDirectTransmission
  endpoint:
    path: /otMessageSetDirectTransmission
    method: void
    data_selector: ''
    params: {}
- name: otMessageSetLength
  endpoint:
    path: /otMessageSetLength
    method: otError
    data_selector: ''
    params: {}
- name: otMessageSetLoopbackToHostAllowed
  endpoint:
    path: /otMessageSetLoopbackToHostAllowed
    method: void
    data_selector: ''
    params: {}
- name: otMessageSetMulticastLoopEnabled
  endpoint:
    path: /otMessageSetMulticastLoopEnabled
    method: void
    data_selector: ''
    params: {}
- name: otMessageSetOffset
  endpoint:
    path: /otMessageSetOffset
    method: void
    data_selector: ''
    params: {}
- name: otMessageSetOrigin
  endpoint:
    path: /otMessageSetOrigin
    method: void
    data_selector: ''
    params: {}
- name: otMessageWrite
  endpoint:
    path: /otMessageWrite
    method: int
    data_selector: ''
    params: {}
- name: otMessageQueueInfo
  endpoint:
    path: /otMessageQueueInfo
    method: GET
    data_selector: attributes
    params: {}
- name: ot_message_settings
  endpoint:
    path: /reference/struct/ot-message-settings
    method: GET
    data_selector: records
- name: otMessageSettings
  endpoint:
    path: /reference/struct/ot-message-settings
    method: GET
- name: otThreadLinkInfo
  endpoint:
    path: /otThreadLinkInfo
    method: GET
    data_selector: attributes
    params: {}
- name: otMultiRadioNeighborInfo
  endpoint:
    path: /reference/struct/ot-multi-radio-neighbor-info
    method: GET
    data_selector: struct
    params: {}
- name: otRadioLinkInfo
  endpoint:
    path: /reference/struct/ot-radio-link-info
    method: GET
    data_selector: struct
    params: {}
- name: otMultiRadioGetNeighborInfo
  endpoint:
    path: /functions/otMultiRadioGetNeighborInfo
    method: GET
    data_selector: function
    params: {}
- name: otMultiRadioNeighborInfo
  endpoint:
    path: /reference/struct/ot-multi-radio-neighbor-info
    method: GET
    data_selector: records
    params: {}
- name: mPreference
  endpoint:
    path: /include/multi_radio.h
    method: GET
    data_selector: mPreference
    params: {}
- name: otWakeupRequest
  endpoint:
    path: /reference/struct/ot-wakeup-request
    method: GET
- name: mWakeupRequest
  endpoint:
    path: /reference/struct/ot-p2p-request
    method: GET
- name: otTrelGetCounters
  endpoint:
    path: /otTrelGetCounters
    method: GET
    data_selector: counters
    params: {}
- name: otTrelGetNextPeer
  endpoint:
    path: /otTrelGetNextPeer
    method: GET
    data_selector: peer
    params: {}
- name: otTrelGetNumberOfPeers
  endpoint:
    path: /otTrelGetNumberOfPeers
    method: GET
    data_selector: numberOfPeers
    params: {}
- name: otTrelGetUdpPort
  endpoint:
    path: /otTrelGetUdpPort
    method: GET
    data_selector: udpPort
    params: {}
- name: otTrelInitPeerIterator
  endpoint:
    path: /otTrelInitPeerIterator
    method: POST
    data_selector: peerIterator
    params: {}
- name: otTrelIsEnabled
  endpoint:
    path: /otTrelIsEnabled
    method: GET
    data_selector: isEnabled
    params: {}
- name: otTrelIsFilterEnabled
  endpoint:
    path: /otTrelIsFilterEnabled
    method: GET
    data_selector: isFilterEnabled
    params: {}
- name: otTrelResetCounters
  endpoint:
    path: /otTrelResetCounters
    method: POST
    data_selector: resetStatus
    params: {}
- name: otTrelSetEnabled
  endpoint:
    path: /otTrelSetEnabled
    method: POST
    data_selector: setStatus
    params: {}
- name: otTrelSetFilterEnabled
  endpoint:
    path: /otTrelSetFilterEnabled
    method: POST
    data_selector: setFilterStatus
    params: {}
- name: ot_trel_peer
  endpoint:
    path: /reference/struct/ot-trel-peer
    method: GET
- name: mExtAddress
  endpoint:
    path: /otTrelPeer/mExtAddress
    method: GET
    data_selector: otExtAddress
- name: mExtPanId
  endpoint:
    path: /otTrelPeer/mExtPanId
    method: GET
    data_selector: otExtendedPanId
- name: mSockAddr
  endpoint:
    path: /otTrelPeer/mSockAddr
    method: GET
    data_selector: otSockAddr
- name: otBackboneRouterMulticastListenerGetNext
  endpoint:
    path: /otBackboneRouterMulticastListenerGetNext
    method: GET
    data_selector: aListenerInfo
    params: {}
- name: otBackboneRouterRegister
  endpoint:
    path: /otBackboneRouterRegister
    method: GET
    data_selector: aInstance
    params: {}
- name: otBackboneRouterSetConfig
  endpoint:
    path: /otBackboneRouterSetConfig
    method: GET
    data_selector: aConfig
    params: {}
- name: otBackboneRouterSetEnabled
  endpoint:
    path: /otBackboneRouterSetEnabled
    method: GET
    data_selector: aEnable
    params: {}
- name: otBackboneRouterSetMulticastListenerCallback
  endpoint:
    path: /otBackboneRouterSetMulticastListenerCallback
    method: GET
    data_selector: aCallback
    params: {}
- name: otBackboneRouterSetNdProxyCallback
  endpoint:
    path: /otBackboneRouterSetNdProxyCallback
    method: GET
    data_selector: aCallback
    params: {}
- name: otBackboneRouterSetRegistrationJitter
  endpoint:
    path: /otBackboneRouterSetRegistrationJitter
    method: GET
    data_selector: aJitter
    params: {}
- name: mMlrTimeout
  endpoint:
    path: otBackboneRouterConfig::mMlrTimeout
    method: GET
    data_selector: Multicast Listener Registration Timeout (in seconds)
- name: mReregistrationDelay
  endpoint:
    path: otBackboneRouterConfig::mReregistrationDelay
    method: GET
    data_selector: Reregistration Delay (in seconds)
- name: mSequenceNumber
  endpoint:
    path: otBackboneRouterConfig::mSequenceNumber
    method: GET
    data_selector: Sequence Number
- name: mServer16
  endpoint:
    path: otBackboneRouterConfig::mServer16
    method: GET
    data_selector: Only used when get Primary Backbone Router information in the Thread
      Network
- name: mAddress
  endpoint:
    path: otIp6Address
    method: GET
    data_selector: otBackboneRouterMulticastListenerInfo::mAddress
- name: mTimeout
  endpoint:
    path: uint32_t
    method: GET
    data_selector: otBackboneRouterMulticastListenerInfo::mTimeout
- name: otBackboneRouterNdProxyInfo
  endpoint:
    path: /reference/struct/ot-backbone-router-nd-proxy-info
    method: GET
    data_selector: records
- name: mMeshLocalIid
  endpoint:
    path: /mMeshLocalIid
    method: GET
    data_selector: otIp6InterfaceIdentifier
    params: {}
- name: mRloc16
  endpoint:
    path: /mRloc16
    method: GET
    data_selector: uint16_t
    params: {}
- name: mTimeSinceLastTransaction
  endpoint:
    path: /mTimeSinceLastTransaction
    method: GET
    data_selector: uint32_t
    params: {}
- name: otBorderAgentEphemeralKeyState
  endpoint:
    path: /otBorderAgentEphemeralKeyState
    method: GET
    data_selector: state
    params: {}
- name: otBorderAgentCounters
  endpoint:
    path: /otBorderAgentCounters
    method: GET
    data_selector: counters
    params: {}
- name: otBorderAgentId
  endpoint:
    path: /otBorderAgentId
    method: GET
    data_selector: id
    params: {}
- name: otBorderAgentMeshCoPServiceTxtData
  endpoint:
    path: /otBorderAgentMeshCoPServiceTxtData
    method: GET
    data_selector: txtData
    params: {}
- name: otBorderAgentSessionInfo
  endpoint:
    path: /otBorderAgentSessionInfo
    method: GET
    data_selector: sessionInfo
    params: {}
- name: Border Agent Is Active
  endpoint:
    path: /otBorderAgentIsActive
    method: GET
    data_selector: isActive
- name: Border Agent Is Enabled
  endpoint:
    path: /otBorderAgentIsEnabled
    method: GET
    data_selector: isEnabled
- name: Border Agent Set Enabled
  endpoint:
    path: /otBorderAgentSetEnabled
    method: POST
    data_selector: setEnabled
- name: Border Agent Set ID
  endpoint:
    path: /otBorderAgentSetId
    method: POST
    data_selector: setId
- name: Border Agent Set MeshCoP Service Base Name
  endpoint:
    path: /otBorderAgentSetMeshCoPServiceBaseName
    method: POST
    data_selector: setMeshCoPServiceBaseName
- name: Border Agent Set MeshCoP Service Changed Callback
  endpoint:
    path: /otBorderAgentSetMeshCoPServiceChangedCallback
    method: POST
    data_selector: setMeshCoPServiceChangedCallback
- name: Border Agent Set Vendor TXT Data
  endpoint:
    path: /otBorderAgentSetVendorTxtData
    method: POST
    data_selector: setVendorTxtData
- name: mEpskcActivations
- name: mEpskcCommissionerPetitions
- name: mEpskcDeactivationClears
- name: mEpskcDeactivationDisconnects
- name: mEpskcDeactivationMaxAttempts
- name: mEpskcDeactivationTimeouts
- name: mEpskcInvalidArgsErrors
- name: mEpskcInvalidBaStateErrors
- name: mEpskcSecureSessionFailures
- name: mEpskcSecureSessionSuccesses
- name: mEpskcStartSecureSessionErrors
- name: mMgmtActiveGets
- name: mMgmtPendingGets
- name: mPskcCommissionerPetitions
- name: mPskcSecureSessionFailures
- name: mPskcSecureSessionSuccesses
- name: Border Agent Identifier
  endpoint:
    path: /border_agent
    method: GET
    data_selector: mId
    params: {}
- name: otBorderAgentSessionInfo
  endpoint:
    path: /reference/struct/ot-border-agent-session-info
    method: GET
- name: border_agent_session
  endpoint:
    path: /border_agent_session_info
    method: GET
    data_selector: sessionInfo
    params: {}
- name: border_agent_session_iterator
  endpoint:
    path: /reference/struct/ot-border-agent-session-iterator
    method: GET
    data_selector: records
- name: border_agent
  endpoint:
    path: /api/border_agent
    method: GET
    data_selector: records
- name: border_agent_tracker
  endpoint:
    path: /api/border_agent_tracker
    method: GET
    data_selector: records
- name: otBorderAgentTrackerAgentInfo
  endpoint:
    path: /reference/struct/ot-border-agent-tracker-agent-info
    method: GET
    data_selector: otBorderAgentTrackerAgentInfo
    params: {}
- name: otBorderAgentTrackerIterator
  endpoint:
    path: /reference/struct/ot-border-agent-tracker-iterator
    method: GET
    data_selector: otBorderAgentTrackerIterator
    params: {}
- name: BorderAgent
  endpoint:
    path: /border_agent
    method: GET
    data_selector: border_agents
- name: Border Agent Tracker Iterator
  endpoint:
    path: /reference/group/api-border-agent-tracker
    method: GET
- name: otBorderRouterAddOnMeshPrefix
  endpoint:
    path: /otBorderRouterAddOnMeshPrefix
    method: POST
    data_selector: result
    params: {}
- name: otBorderRouterAddRoute
  endpoint:
    path: /otBorderRouterAddRoute
    method: POST
    data_selector: result
    params: {}
- name: otBorderRouterGetNetData
  endpoint:
    path: /otBorderRouterGetNetData
    method: GET
    data_selector: result
    params: {}
- name: otBorderRouterGetNextOnMeshPrefix
  endpoint:
    path: /otBorderRouterGetNextOnMeshPrefix
    method: GET
    data_selector: result
    params: {}
- name: otBorderRouterGetNextRoute
  endpoint:
    path: /otBorderRouterGetNextRoute
    method: GET
    data_selector: result
    params: {}
- name: otBorderRouterRegister
  endpoint:
    path: /otBorderRouterRegister
    method: POST
    data_selector: result
    params: {}
- name: otBorderRouterRemoveOnMeshPrefix
  endpoint:
    path: /otBorderRouterRemoveOnMeshPrefix
    method: DELETE
    data_selector: result
    params: {}
- name: otBorderRouterRemoveRoute
  endpoint:
    path: /otBorderRouterRemoveRoute
    method: DELETE
    data_selector: result
    params: {}
- name: otBorderRouterSetNetDataFullCallback
  endpoint:
    path: /otBorderRouterSetNetDataFullCallback
    method: POST
    data_selector: result
    params: {}
- name: BorderRoutingDhcp6PdGetState
  endpoint:
    path: /otBorderRoutingDhcp6PdGetState
    method: GET
    data_selector: current_state
    params: {}
- name: BorderRoutingDhcp6PdSetEnabled
  endpoint:
    path: /otBorderRoutingDhcp6PdSetEnabled
    method: POST
    data_selector: enabled_state
    params: {}
- name: BorderRoutingGetFavoredNat64Prefix
  endpoint:
    path: /otBorderRoutingGetFavoredNat64Prefix
    method: GET
    data_selector: favored_nat64_prefix
    params: {}
- name: BorderRoutingGetFavoredOmrPrefix
  endpoint:
    path: /otBorderRoutingGetFavoredOmrPrefix
    method: GET
    data_selector: favored_omr_prefix
    params: {}
- name: otBorderRoutingIsMultiAilDetected
  endpoint:
    path: /otBorderRoutingIsMultiAilDetected
    method: GET
    data_selector: return_values
    params: {}
- name: otBorderRoutingPrefixTableInitIterator
  endpoint:
    path: /otBorderRoutingPrefixTableInitIterator
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetEnabled
  endpoint:
    path: /otBorderRoutingSetEnabled
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetExtraRouterAdvertOptions
  endpoint:
    path: /otBorderRoutingSetExtraRouterAdvertOptions
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetMultiAilCallback
  endpoint:
    path: /otBorderRoutingSetMultiAilCallback
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetOmrConfig
  endpoint:
    path: /otBorderRoutingSetOmrConfig
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetOnLinkPrefix
  endpoint:
    path: /otBorderRoutingSetOnLinkPrefix
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetRdnssAddrCallback
  endpoint:
    path: /otBorderRoutingSetRdnssAddrCallback
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetRouteInfoOptionPreference
  endpoint:
    path: /otBorderRoutingSetRouteInfoOptionPreference
    method: POST
    data_selector: return_values
    params: {}
- name: otBorderRoutingSetRoutePreference
  endpoint:
    path: /otBorderRoutingSetRoutePreference
    method: POST
    data_selector: return_values
    params: {}
- name: mAddress
  endpoint:
    path: /otIp6Address
    method: GET
    data_selector: mAddress
- name: mSecSinceLastUse
  endpoint:
    path: /uint32_t
    method: GET
    data_selector: mSecSinceLastUse
- name: otBorderRoutingPeerBorderRouterEntry
  endpoint:
    path: /reference/struct/ot-border-routing-peer-border-router-entry
    method: GET
    data_selector: records
- name: otBorderRoutingPeerBorderRouterEntry
  endpoint:
    path: /otBorderRoutingPeerBorderRouterEntry
    method: GET
    data_selector: public_attributes
- name: otBorderRoutingPrefixTableEntry
  endpoint:
    path: /reference/struct/ot-border-routing-prefix-table-entry
    method: GET
    data_selector: ''
- name: otBorderRoutingPrefixTableEntry
  endpoint:
    path: /otBorderRoutingPrefixTableEntry
    method: GET
    data_selector: entries
- name: otBackboneRouterConfig
  endpoint:
    path: /reference/struct/ot-backbone-router-config
    method: GET
- name: otBorderAgentCounters
  endpoint:
    path: /reference/struct/ot-border-agent-counters
    method: GET
- name: otDeviceProperties
  endpoint:
    path: /reference/struct/ot-device-properties
    method: GET
- name: otBorderRoutingRdnssAddrEntry
  endpoint:
    path: /reference/struct/ot-border-routing-rdnss-addr-entry
    method: GET
- name: mAddress
  endpoint:
    path: otIp6Address
    method: GET
    data_selector: mAddress
- name: mLifetime
  endpoint:
    path: uint32_t
    method: GET
    data_selector: mLifetime
- name: mMsecSinceLastUpdate
  endpoint:
    path: uint32_t
    method: GET
    data_selector: mMsecSinceLastUpdate
- name: mRouter
  endpoint:
    path: otBorderRoutingRouterEntry
    method: GET
    data_selector: mRouter
- name: otBorderRoutingRouterEntry
  endpoint:
    path: /reference/struct/ot-border-routing-router-entry
    method: GET
    data_selector: records
- name: router
  endpoint:
    path: /border/routing/router
    method: GET
    data_selector: router_entries
- name: ot_pd_processed_ra_info
  endpoint:
    path: /reference/struct/ot-pd-processed-ra-info
    method: GET
- name: otPdProcessedRaInfo
  endpoint:
    path: /services/data/vXX.X/sobjects/otPdProcessedRaInfo
    method: GET
    data_selector: records
- name: Commissioner State
  endpoint:
    path: /commissioner/state
    method: GET
    data_selector: state
- name: Joiner Info
  endpoint:
    path: /commissioner/joiner/info
    method: GET
    data_selector: joinerInfo
- name: Provisioning URL
  endpoint:
    path: /commissioner/provisioning/url
    method: GET
    data_selector: provisioningUrl
- name: Session ID
  endpoint:
    path: /commissioner/session/id
    method: GET
    data_selector: sessionId
- name: CommissionerRemoveJoiner
  endpoint:
    path: /CommissionerRemoveJoiner
    method: POST
    data_selector: returnValue
    params: {}
- name: CommissionerRemoveJoinerWithDiscerner
  endpoint:
    path: /CommissionerRemoveJoinerWithDiscerner
    method: POST
    data_selector: returnValue
    params: {}
- name: CommissionerSendMgmtGet
  endpoint:
    path: /CommissionerSendMgmtGet
    method: POST
    data_selector: returnValue
    params: {}
- name: CommissionerSendMgmtSet
  endpoint:
    path: /CommissionerSendMgmtSet
    method: POST
    data_selector: returnValue
    params: {}
- name: CommissionerSetId
  endpoint:
    path: /CommissionerSetId
    method: POST
    data_selector: returnValue
    params: {}
- name: CommissionerSetProvisioningUrl
  endpoint:
    path: /CommissionerSetProvisioningUrl
    method: POST
    data_selector: returnValue
    params: {}
- name: CommissionerStart
  endpoint:
    path: /CommissionerStart
    method: POST
    data_selector: returnValue
    params: {}
- name: CommissionerStop
  endpoint:
    path: /CommissionerStop
    method: POST
    data_selector: returnValue
    params: {}
- name: commissioning_dataset
  endpoint:
    path: /commissioning/dataset
    method: GET
- name: m8
  endpoint:
    path: /otJoinerPskd/m8
    method: GET
    data_selector: char string array
- name: steering_data
  endpoint:
    path: /include/openthread/ot-steering-data
    method: GET
- name: otNetDataPublishDnsSrpServiceAnycast
  endpoint:
    path: /otNetDataPublishDnsSrpServiceAnycast
    method: void
    data_selector: ''
    params: {}
- name: otNetDataPublishDnsSrpServiceUnicast
  endpoint:
    path: /otNetDataPublishDnsSrpServiceUnicast
    method: void
    data_selector: ''
    params: {}
- name: otNetDataPublishDnsSrpServiceUnicastMeshLocalEid
  endpoint:
    path: /otNetDataPublishDnsSrpServiceUnicastMeshLocalEid
    method: void
    data_selector: ''
    params: {}
- name: otNetDataPublishExternalRoute
  endpoint:
    path: /otNetDataPublishExternalRoute
    method: otError
    data_selector: ''
    params: {}
- name: otNetDataPublishOnMeshPrefix
  endpoint:
    path: /otNetDataPublishOnMeshPrefix
    method: otError
    data_selector: ''
    params: {}
- name: otNetDataReplacePublishedExternalRoute
  endpoint:
    path: /otNetDataReplacePublishedExternalRoute
    method: otError
    data_selector: ''
    params: {}
- name: otNetDataResetMaxLength
  endpoint:
    path: /otNetDataResetMaxLength
    method: void
    data_selector: ''
    params: {}
- name: otNetDataSetDnsSrpServicePublisherCallback
  endpoint:
    path: /otNetDataSetDnsSrpServicePublisherCallback
    method: void
    data_selector: ''
    params: {}
- name: otNetDataSetPrefixPublisherCallback
  endpoint:
    path: /otNetDataSetPrefixPublisherCallback
    method: void
    data_selector: ''
    params: {}
- name: otNetDataSteeringDataCheckJoiner
  endpoint:
    path: /otNetDataSteeringDataCheckJoiner
    method: otError
    data_selector: ''
    params: {}
- name: otNetDataSteeringDataCheckJoinerWithDiscerner
  endpoint:
    path: /otNetDataSteeringDataCheckJoinerWithDiscerner
    method: otError
    data_selector: ''
    params: {}
- name: otNetDataUnpublishDnsSrpService
  endpoint:
    path: /otNetDataUnpublishDnsSrpService
    method: void
    data_selector: ''
    params: {}
- name: otNetDataUnpublishPrefix
  endpoint:
    path: /otNetDataUnpublishPrefix
    method: otError
    data_selector: ''
    params: {}
- name: otThreadBecomeChild
  endpoint:
    path: /otThreadBecomeChild
    method: otError
    data_selector: ''
    params: {}
- name: otThreadBecomeDetached
  endpoint:
    path: /otThreadBecomeDetached
    method: otError
    data_selector: ''
    params: {}
- name: otThreadDetachGracefully
  endpoint:
    path: /otThreadDetachGracefully
    method: otError
    data_selector: ''
    params: {}
- name: otThreadDiscover
  endpoint:
    path: /otThreadDiscover
    method: otError
    data_selector: ''
    params: {}
- name: otThreadGetChildTimeout
  endpoint:
    path: /otThreadGetChildTimeout
    method: uint32_t
    data_selector: ''
    params: {}
- name: otThreadGetCurrentAttachDuration
  endpoint:
    path: /otThreadGetCurrentAttachDuration
    method: uint32_t
    data_selector: ''
    params: {}
- name: otThreadGetDeviceRole
  endpoint:
    path: /otThreadGetDeviceRole
    method: otDeviceRole
    data_selector: ''
    params: {}
- name: otThreadGetDomainName
  endpoint:
    path: /otThreadGetDomainName
    method: const char*
    data_selector: ''
    params: {}
- name: otThreadGetExtendedPanId
  endpoint:
    path: /otThreadGetExtendedPanId
    method: const otExtendedPanId*
    data_selector: ''
    params: {}
- name: fixed_dua_interface_identifier
  endpoint:
    path: /api/thread/general/otThreadGetFixedDuaInterfaceIdentifier
    method: GET
    data_selector: returns
- name: ip6_counters
  endpoint:
    path: /api/thread/general/otThreadGetIp6Counters
    method: GET
    data_selector: returns
- name: key_sequence_counter
  endpoint:
    path: /api/thread/general/otThreadGetKeySequenceCounter
    method: GET
    data_selector: returns
- name: key_switch_guard_time
  endpoint:
    path: /api/thread/general/otThreadGetKeySwitchGuardTime
    method: GET
    data_selector: returns
- name: leader_data
  endpoint:
    path: /api/thread/general/otThreadGetLeaderData
    method: GET
    data_selector: returns
- name: leader_rloc
  endpoint:
    path: /api/thread/general/otThreadGetLeaderRloc
    method: GET
    data_selector: returns
- name: leader_router_id
  endpoint:
    path: /api/thread/general/otThreadGetLeaderRouterId
    method: GET
    data_selector: returns
- name: leader_weight
  endpoint:
    path: /api/thread/general/otThreadGetLeaderWeight
    method: GET
    data_selector: returns
- name: link_local_all_thread_nodes_multicast_address
  endpoint:
    path: /api/thread/general/otThreadGetLinkLocalAllThreadNodesMulticastAddress
    method: GET
    data_selector: returns
- name: link_local_ip6_address
  endpoint:
    path: /api/thread/general/otThreadGetLinkLocalIp6Address
    method: GET
    data_selector: returns
- name: link_mode
  endpoint:
    path: /api/thread/general/otThreadGetLinkMode
    method: GET
    data_selector: returns
- name: max_time_in_queue
  endpoint:
    path: /api/thread/general/otThreadGetMaxTimeInQueue
    method: GET
    data_selector: returns
- name: mesh_local_eid
  endpoint:
    path: /api/thread/general/otThreadGetMeshLocalEid
    method: GET
    data_selector: returns
- name: mesh_local_prefix
  endpoint:
    path: /api/thread/general/otThreadGetMeshLocalPrefix
    method: GET
    data_selector: returns
- name: mle_counters
  endpoint:
    path: /api/thread/general/otThreadGetMleCounters
    method: GET
    data_selector: returns
- name: network_key
  endpoint:
    path: /api/thread/general/otThreadGetNetworkKey
    method: GET
    data_selector: returns
- name: network_key_ref
  endpoint:
    path: /api/thread/general/otThreadGetNetworkKeyRef
    method: GET
    data_selector: returns
- name: network_name
  endpoint:
    path: /api/thread/general/otThreadGetNetworkName
    method: GET
    data_selector: returns
- name: next_diagnostic_tlv
  endpoint:
    path: /api/thread/general/otThreadGetNextDiagnosticTlv
    method: GET
    data_selector: returns
- name: next_neighbor_info
  endpoint:
    path: /api/thread/general/otThreadGetNextNeighborInfo
    method: GET
    data_selector: returns
- name: non_preferred_channels
  endpoint:
    path: /api/thread/general/otThreadGetNonPreferredChannels
    method: GET
    data_selector: returns
- name: parent_average_rssi
  endpoint:
    path: /api/thread/general/otThreadGetParentAverageRssi
    method: GET
    data_selector: returns
- name: parent_info
  endpoint:
    path: /api/thread/general/otThreadGetParentInfo
    method: GET
    data_selector: returns
- name: parent_last_rssi
  endpoint:
    path: /api/thread/general/otThreadGetParentLastRssi
    method: GET
    data_selector: returns
- name: partition_id
  endpoint:
    path: /api/thread/general/otThreadGetPartitionId
    method: GET
    data_selector: returns
- name: realm_local_all_thread_nodes_multicast_address
  endpoint:
    path: /api/thread/general/otThreadGetRealmLocalAllThreadNodesMulticastAddress
    method: GET
    data_selector: returns
- name: rloc
  endpoint:
    path: /api/thread/general/otThreadGetRloc
    method: GET
    data_selector: returns
- name: rloc16
  endpoint:
    path: /api/thread/general/otThreadGetRloc16
    method: GET
    data_selector: returns
- name: service_aloc
  endpoint:
    path: /api/thread/general/otThreadGetServiceAloc
    method: GET
    data_selector: returns
- name: store_frame_counter_ahead
  endpoint:
    path: /api/thread/general/otThreadGetStoreFrameCounterAhead
    method: GET
    data_selector: returns
- name: time_in_queue_histogram
  endpoint:
    path: /api/thread/general/otThreadGetTimeInQueueHistogram
    method: GET
    data_selector: returns
- name: vendor_app_url
  endpoint:
    path: /api/thread/general/otThreadGetVendorAppUrl
    method: GET
    data_selector: returns
- name: vendor_model
  endpoint:
    path: /api/thread/general/otThreadGetVendorModel
    method: GET
    data_selector: returns
- name: vendor_name
  endpoint:
    path: /api/thread/general/otThreadGetVendorName
    method: GET
    data_selector: returns
- name: vendor_software_version
  endpoint:
    path: /otThreadGetVendorSwVersion
    method: GET
    data_selector: version_string
- name: thread_protocol_version
  endpoint:
    path: /otThreadGetVersion
    method: GET
    data_selector: protocol_version
- name: anycast_locate_in_progress
  endpoint:
    path: /otThreadIsAnycastLocateInProgress
    method: GET
    data_selector: in_progress
- name: discover_in_progress
  endpoint:
    path: /otThreadIsDiscoverInProgress
    method: GET
    data_selector: in_progress
- name: singleton_check
  endpoint:
    path: /otThreadIsSingleton
    method: GET
    data_selector: is_singleton
- name: locate_anycast_destination
  endpoint:
    path: /otThreadLocateAnycastDestination
    method: POST
    data_selector: location_result
- name: register_parent_response_callback
  endpoint:
    path: /otThreadRegisterParentResponseCallback
    method: POST
    data_selector: registration_status
- name: reset_ip6_counters
  endpoint:
    path: /otThreadResetIp6Counters
    method: POST
    data_selector: reset_status
- name: reset_mle_counters
  endpoint:
    path: /otThreadResetMleCounters
    method: POST
    data_selector: reset_status
- name: reset_time_in_queue_stat
  endpoint:
    path: /otThreadResetTimeInQueueStat
    method: POST
    data_selector: reset_status
- name: search_for_better_parent
  endpoint:
    path: /otThreadSearchForBetterParent
    method: POST
    data_selector: search_status
- name: send_address_notification
  endpoint:
    path: /otThreadSendAddressNotification
    method: POST
    data_selector: send_status
- name: send_diagnostic_get
  endpoint:
    path: /otThreadSendDiagnosticGet
    method: POST
    data_selector: send_status
- name: send_diagnostic_reset
  endpoint:
    path: /otThreadSendDiagnosticReset
    method: POST
    data_selector: send_status
- name: send_proactive_backbone_notification
  endpoint:
    path: /otThreadSendProactiveBackboneNotification
    method: POST
    data_selector: send_status
- name: set_child_timeout
  endpoint:
    path: /otThreadSetChildTimeout
    method: POST
    data_selector: set_status
- name: set_discovery_request_callback
  endpoint:
    path: /otThreadSetDiscoveryRequestCallback
    method: POST
    data_selector: set_status
- name: set_domain_name
  endpoint:
    path: /otThreadSetDomainName
    method: POST
    data_selector: set_status
- name: set_enabled
  endpoint:
    path: /otThreadSetEnabled
    method: POST
    data_selector: set_status
- name: set_extended_pan_id
  endpoint:
    path: /otThreadSetExtendedPanId
    method: POST
    data_selector: set_status
- name: set_fixed_dua_interface_identifier
  endpoint:
    path: /otThreadSetFixedDuaInterfaceIdentifier
    method: POST
    data_selector: set_status
- name: set_joiner_advertisement
  endpoint:
    path: /otThreadSetJoinerAdvertisement
    method: POST
    data_selector: set_status
- name: set_key_sequence_counter
  endpoint:
    path: /otThreadSetKeySequenceCounter
    method: POST
    data_selector: set_status
- name: set_key_switch_guard_time
  endpoint:
    path: /otThreadSetKeySwitchGuardTime
    method: POST
    data_selector: set_status
- name: set_link_mode
  endpoint:
    path: /otThreadSetLinkMode
    method: POST
    data_selector: set_status
- name: set_mesh_local_prefix
  endpoint:
    path: /otThreadSetMeshLocalPrefix
    method: POST
    data_selector: set_status
- name: set_network_key
  endpoint:
    path: /otThreadSetNetworkKey
    method: POST
    data_selector: set_status
- name: mConfigure
  endpoint:
    path: otBorderRouterConfig::mConfigure
    method: GET
- name: mDefaultRoute
  endpoint:
    path: otBorderRouterConfig::mDefaultRoute
    method: GET
- name: mDhcp
  endpoint:
    path: otBorderRouterConfig::mDhcp
    method: GET
- name: mDp
  endpoint:
    path: otBorderRouterConfig::mDp
    method: GET
- name: mNdDns
  endpoint:
    path: otBorderRouterConfig::mNdDns
    method: GET
- name: mOnMesh
  endpoint:
    path: otBorderRouterConfig::mOnMesh
    method: GET
- name: mPreference
  endpoint:
    path: otBorderRouterConfig::mPreference
    method: GET
- name: mPreferred
  endpoint:
    path: otBorderRouterConfig::mPreferred
    method: GET
- name: mPrefix
  endpoint:
    path: otBorderRouterConfig::mPrefix
    method: GET
- name: mRloc16
  endpoint:
    path: otBorderRouterConfig::mRloc16
    method: GET
- name: mSlaac
  endpoint:
    path: otBorderRouterConfig::mSlaac
    method: GET
- name: mStable
  endpoint:
    path: otBorderRouterConfig::mStable
    method: GET
- name: mAdvPio
  endpoint:
    path: otExternalRouteConfig::mAdvPio
    method: GET
    data_selector: bool
- name: mNat64
  endpoint:
    path: otExternalRouteConfig::mNat64
    method: GET
    data_selector: bool
- name: mNextHopIsThisDevice
  endpoint:
    path: otExternalRouteConfig::mNextHopIsThisDevice
    method: GET
    data_selector: bool
- name: mPreference
  endpoint:
    path: otExternalRouteConfig::mPreference
    method: GET
    data_selector: signed int
- name: mPrefix
  endpoint:
    path: otExternalRouteConfig::mPrefix
    method: GET
    data_selector: otIp6Prefix
- name: mRloc16
  endpoint:
    path: otExternalRouteConfig::mRloc16
    method: GET
    data_selector: uint16_t
- name: mStable
  endpoint:
    path: otExternalRouteConfig::mStable
    method: GET
    data_selector: bool
- name: otIpCounters
  endpoint:
    path: /reference/struct/ot-ip-counters
    method: GET
    data_selector: records
- name: otIpCounters
  endpoint:
    path: /reference/struct/ot-ip-counters
    method: GET
    data_selector: attributes
    params: {}
- name: Leader Data
  endpoint:
    path: /otLeaderData
    method: GET
    data_selector: mDataVersion
- name: mDeviceType
  endpoint:
    path: otLinkModeConfig::mDeviceType
    method: GET
    data_selector: bool
- name: mNetworkData
  endpoint:
    path: otLinkModeConfig::mNetworkData
    method: GET
    data_selector: bool
- name: mRxOnWhenIdle
  endpoint:
    path: otLinkModeConfig::mRxOnWhenIdle
    method: GET
    data_selector: bool
- name: otLowpanContextInfo
  endpoint:
    path: /otLowpanContextInfo
    method: GET
    data_selector: attributes
    params: {}
- name: otMleCounters
  endpoint:
    path: /otMleCounters
    method: GET
    data_selector: attributes
    params: {}
- name: otNeighborInfo
  endpoint:
    path: /otNeighborInfo
    method: GET
    data_selector: attributes
    params: {}
- name: Network Diagnostic Child Table Entry
  endpoint:
    path: /include/openthread/otNetworkDiagChildEntry
    method: GET
    data_selector: public_attributes
    params: {}
- name: mCount
  endpoint:
    path: otNetworkDiagChildTable/mCount
    method: GET
    data_selector: mCount
    params: {}
- name: mTable
  endpoint:
    path: otNetworkDiagChildTable/mTable
    method: GET
    data_selector: mTable
    params: {}
- name: mActiveRouters
  endpoint:
    path: /activeRouters
    method: GET
    data_selector: number_of_active_routers
- name: mIdSequence
  endpoint:
    path: /idSequence
    method: GET
    data_selector: most_recent_received_id_seq_number
- name: mLeaderCost
  endpoint:
    path: /leaderCost
    method: GET
    data_selector: cost_to_leader
- name: mLinkQuality1
  endpoint:
    path: /linkQuality1
    method: GET
    data_selector: number_of_neighbors_with_link_quality_1
- name: mLinkQuality2
  endpoint:
    path: /linkQuality2
    method: GET
    data_selector: number_of_neighbors_with_link_quality_2
- name: mLinkQuality3
  endpoint:
    path: /linkQuality3
    method: GET
    data_selector: number_of_neighbors_with_link_quality_3
- name: mParentPriority
  endpoint:
    path: /parentPriority
    method: GET
    data_selector: priority_of_sender_as_parent
- name: mSedBufferSize
  endpoint:
    path: /sedBufferSize
    method: GET
    data_selector: buffer_capacity_for_seds
- name: mSedDatagramCount
  endpoint:
    path: /sedDatagramCount
    method: GET
    data_selector: queue_capacity_per_sed
- name: otNetworkDiagData
  endpoint:
    path: /reference/struct/ot-network-diag-data
    method: GET
    data_selector: public_attributes
    params: {}
- name: mRouteCount
  endpoint:
    path: /mRouteCount
    method: GET
    data_selector: mRouteCount
    params: {}
- name: mRouteData
  endpoint:
    path: /mRouteData
    method: GET
    data_selector: mRouteData
    params: {}
- name: otNetworkDiagEnhRouteData
  endpoint:
    path: /include/netdiag.h
    method: GET
    data_selector: public_attributes
    params: {}
- name: mCount
  endpoint:
    path: /otNetworkDiagIp6AddrList/mCount
    method: GET
    data_selector: mCount
- name: mList
  endpoint:
    path: /otNetworkDiagIp6AddrList/mList
    method: GET
    data_selector: mList
- name: Network Diagnostic Mac Counters
  endpoint:
    path: /include/netdiag.h
    method: GET
    data_selector: public_attributes
    params: {}
- name: mAttachAttempts
  endpoint:
    path: /otNetworkDiagMleCounters/mAttachAttempts
    method: GET
    data_selector: mAttachAttempts
    params: {}
- name: mBetterPartitionAttachAttempts
  endpoint:
    path: /otNetworkDiagMleCounters/mBetterPartitionAttachAttempts
    method: GET
    data_selector: mBetterPartitionAttachAttempts
    params: {}
- name: mChildRole
  endpoint:
    path: /otNetworkDiagMleCounters/mChildRole
    method: GET
    data_selector: mChildRole
    params: {}
- name: mChildTime
  endpoint:
    path: /otNetworkDiagMleCounters/mChildTime
    method: GET
    data_selector: mChildTime
    params: {}
- name: mDetachedRole
  endpoint:
    path: /otNetworkDiagMleCounters/mDetachedRole
    method: GET
    data_selector: mDetachedRole
    params: {}
- name: mDetachedTime
  endpoint:
    path: /otNetworkDiagMleCounters/mDetachedTime
    method: GET
    data_selector: mDetachedTime
    params: {}
- name: mDisabledRole
  endpoint:
    path: /otNetworkDiagMleCounters/mDisabledRole
    method: GET
    data_selector: mDisabledRole
    params: {}
- name: mDisabledTime
  endpoint:
    path: /otNetworkDiagMleCounters/mDisabledTime
    method: GET
    data_selector: mDisabledTime
    params: {}
- name: mLeaderRole
  endpoint:
    path: /otNetworkDiagMleCounters/mLeaderRole
    method: GET
    data_selector: mLeaderRole
    params: {}
- name: mLeaderTime
  endpoint:
    path: /otNetworkDiagMleCounters/mLeaderTime
    method: GET
    data_selector: mLeaderTime
    params: {}
- name: mParentChanges
  endpoint:
    path: /otNetworkDiagMleCounters/mParentChanges
    method: GET
    data_selector: mParentChanges
    params: {}
- name: mPartitionIdChanges
  endpoint:
    path: /otNetworkDiagMleCounters/mPartitionIdChanges
    method: GET
    data_selector: mPartitionIdChanges
    params: {}
- name: mRouterRole
  endpoint:
    path: /otNetworkDiagMleCounters/mRouterRole
    method: GET
    data_selector: mRouterRole
    params: {}
- name: mRouterTime
  endpoint:
    path: /otNetworkDiagMleCounters/mRouterTime
    method: GET
    data_selector: mRouterTime
    params: {}
- name: mTrackedTime
  endpoint:
    path: /otNetworkDiagMleCounters/mTrackedTime
    method: GET
    data_selector: mTrackedTime
    params: {}
- name: mIdSequence
  endpoint:
    path: /reference/struct/ot-network-diag-route#structot_network_diag_route_1a141a464670f9231fce3a616247dd272e
    method: GET
    data_selector: records
    params: {}
- name: mRouteCount
  endpoint:
    path: /reference/struct/ot-network-diag-route#structot_network_diag_route_1a141a464670f9231fce3a616247dd272e
    method: GET
    data_selector: records
    params: {}
- name: mRouteData
  endpoint:
    path: /reference/struct/ot-network-diag-route#structot_network_diag_route_1a141a464670f9231fce3a616247dd272e
    method: GET
    data_selector: records
    params: {}
- name: otNetworkDiagRouteData
  endpoint:
    path: /otNetworkDiagRouteData
    method: GET
    data_selector: mLinkQualityIn, mLinkQualityOut, mRouteCost, mRouterId
- name: mAddr16
  endpoint:
    path: otNetworkDiagTlv::mAddr16
    method: GET
    data_selector: uint16_t
- name: mBatteryLevel
  endpoint:
    path: otNetworkDiagTlv::mBatteryLevel
    method: GET
    data_selector: uint8_t
- name: mBrIfAddrList
  endpoint:
    path: otNetworkDiagTlv::mBrIfAddrList
    method: GET
    data_selector: otNetworkDiagIp6AddrList
- name: mBrPrefix
  endpoint:
    path: otNetworkDiagTlv::mBrPrefix
    method: GET
    data_selector: otIp6NetworkPrefix
- name: mBrState
  endpoint:
    path: otNetworkDiagTlv::mBrState
    method: GET
    data_selector: otNetworkDiagBrState
- name: mChannelPages
  endpoint:
    path: otNetworkDiagTlv::mChannelPages
    method: GET
    data_selector: otNetworkDiagData
- name: mChildTable
  endpoint:
    path: otNetworkDiagTlv::mChildTable
    method: GET
    data_selector: otNetworkDiagChildTable
- name: mConnectivity
  endpoint:
    path: otNetworkDiagTlv::mConnectivity
    method: GET
    data_selector: otNetworkDiagConnectivity
- name: mData
  endpoint:
    path: otNetworkDiagTlv::mData
    method: GET
    data_selector: union otNetworkDiagTlv::@6
- name: mEnhRoute
  endpoint:
    path: otNetworkDiagTlv::mEnhRoute
    method: GET
    data_selector: otNetworkDiagEnhRoute
- name: mEui64
  endpoint:
    path: otNetworkDiagTlv::mEui64
    method: GET
    data_selector: otExtAddress
- name: mExtAddress
  endpoint:
    path: otNetworkDiagTlv::mExtAddress
    method: GET
    data_selector: otExtAddress
- name: mIp6AddrList
  endpoint:
    path: otNetworkDiagTlv::mIp6AddrList
    method: GET
    data_selector: otNetworkDiagIp6AddrList
- name: mLeaderData
  endpoint:
    path: otNetworkDiagTlv::mLeaderData
    method: GET
    data_selector: otLeaderData
- name: mMacCounters
  endpoint:
    path: otNetworkDiagTlv::mMacCounters
    method: GET
    data_selector: otNetworkDiagMacCounters
- name: mMaxChildTimeout
  endpoint:
    path: otNetworkDiagTlv::mMaxChildTimeout
    method: GET
    data_selector: uint32_t
- name: mMleCounters
  endpoint:
    path: otNetworkDiagTlv::mMleCounters
    method: GET
    data_selector: otNetworkDiagMleCounters
- name: mMode
  endpoint:
    path: otNetworkDiagTlv::mMode
    method: GET
    data_selector: otLinkModeConfig
- name: mNetworkData
  endpoint:
    path: otNetworkDiagTlv::mNetworkData
    method: GET
    data_selector: otNetworkDiagData
- name: mNonPreferredChannels
  endpoint:
    path: otNetworkDiagTlv::mNonPreferredChannels
    method: GET
    data_selector: otChannelMask
- name: mRoute
  endpoint:
    path: otNetworkDiagTlv::mRoute
    method: GET
    data_selector: otNetworkDiagRoute
- name: mSupplyVoltage
  endpoint:
    path: otNetworkDiagTlv::mSupplyVoltage
    method: GET
    data_selector: uint16_t
- name: mThreadStackVersion
  endpoint:
    path: otNetworkDiagTlv::mThreadStackVersion
    method: GET
    data_selector: char
- name: mTimeout
  endpoint:
    path: otNetworkDiagTlv::mTimeout
    method: GET
    data_selector: uint32_t
- name: mType
  endpoint:
    path: otNetworkDiagTlv::mType
    method: GET
    data_selector: uint8_t
- name: mVendorAppUrl
  endpoint:
    path: otNetworkDiagTlv::mVendorAppUrl
    method: GET
    data_selector: char
- name: mVendorModel
  endpoint:
    path: otNetworkDiagTlv::mVendorModel
    method: GET
    data_selector: char
- name: mVendorName
  endpoint:
    path: otNetworkDiagTlv::mVendorName
    method: GET
    data_selector: char
- name: mVendorSwVersion
  endpoint:
    path: otNetworkDiagTlv::mVendorSwVersion
    method: GET
    data_selector: char
- name: mVersion
  endpoint:
    path: otNetworkDiagTlv::mVersion
    method: GET
    data_selector: uint16_t
- name: otRouterInfo
  endpoint:
    path: /reference/struct/ot-router-info
    method: GET
    data_selector: attributes
    params: {}
- name: Server RLOC16
  endpoint:
    path: /otServerConfig/mRloc16
    method: GET
    data_selector: mRloc16
- name: Server Data
  endpoint:
    path: /otServerConfig/mServerData
    method: GET
    data_selector: mServerData
- name: Server Data Length
  endpoint:
    path: /otServerConfig/mServerDataLength
    method: GET
    data_selector: mServerDataLength
- name: Stable Network Data
  endpoint:
    path: /otServerConfig/mStable
    method: GET
    data_selector: mStable
- name: mEnterpriseNumber
  endpoint:
    path: /mEnterpriseNumber
    method: GET
    data_selector: mEnterpriseNumber
- name: mServerConfig
  endpoint:
    path: /mServerConfig
    method: GET
    data_selector: mServerConfig
- name: mServiceData
  endpoint:
    path: /mServiceData
    method: GET
    data_selector: mServiceData
- name: mServiceDataLength
  endpoint:
    path: /mServiceDataLength
    method: GET
    data_selector: mServiceDataLength
- name: mServiceId
  endpoint:
    path: /mServiceId
    method: GET
    data_selector: mServiceId
- name: thread_discovery_request
  endpoint:
    path: /otThreadDiscoveryRequestInfo
    method: GET
    data_selector: public_attributes
    params: {}
- name: Parent Response
  endpoint:
    path: /otThreadParentResponseInfo
    method: GET
    data_selector: attributes
- name: mLength
  endpoint:
    path: /otJoinerDiscerner/mLength
    method: GET
    data_selector: public_attributes
- name: mValue
  endpoint:
    path: /otJoinerDiscerner/mValue
    method: GET
    data_selector: public_attributes
- name: otDatasetGetDelayTimerMinimal
  endpoint:
    path: /otDataset/getDelayTimerMinimal
    method: GET
    data_selector: value
- name: otDatasetGetPending
  endpoint:
    path: /otDataset/getPending
    method: GET
    data_selector: PendingOperationalDataset
- name: otDatasetIsCommissioned
  endpoint:
    path: /otDataset/isCommissioned
    method: GET
    data_selector: commissioned
- name: otDatasetSetActive
  endpoint:
    path: /otDataset/setActive
    method: POST
    data_selector: ActiveOperationalDataset
- name: otDatasetSendMgmtActiveGet
  endpoint:
    path: /otDataset/sendMgmtActiveGet
    method: POST
    data_selector: meshcopDatasetCommand
- name: m8
  endpoint:
    path: /otExtendedPanId/m8
    method: GET
    data_selector: uint8_t
    params: {}
- name: m8
  endpoint:
    path: /otNetworkKey/m8
    method: GET
    data_selector: uint8_t
    params: {}
- name: otNetworkName
  endpoint:
    path: /include/openthread/ot-network-name
    method: GET
    data_selector: m8
    params: {}
- name: components
  endpoint:
    path: /dataset/components
    method: GET
    data_selector: mComponents
- name: active_timestamp
  endpoint:
    path: /dataset/active_timestamp
    method: GET
    data_selector: mActiveTimestamp
- name: channel
  endpoint:
    path: /dataset/channel
    method: GET
    data_selector: mChannel
- name: channel_mask
  endpoint:
    path: /dataset/channel_mask
    method: GET
    data_selector: mChannelMask
- name: delay
  endpoint:
    path: /dataset/delay
    method: GET
    data_selector: mDelay
- name: extended_pan_id
  endpoint:
    path: /dataset/extended_pan_id
    method: GET
    data_selector: mExtendedPanId
- name: mesh_local_prefix
  endpoint:
    path: /dataset/mesh_local_prefix
    method: GET
    data_selector: mMeshLocalPrefix
- name: network_key
  endpoint:
    path: /dataset/network_key
    method: GET
    data_selector: mNetworkKey
- name: network_name
  endpoint:
    path: /dataset/network_name
    method: GET
    data_selector: mNetworkName
- name: pan_id
  endpoint:
    path: /dataset/pan_id
    method: GET
    data_selector: mPanId
- name: pending_timestamp
  endpoint:
    path: /dataset/pending_timestamp
    method: GET
    data_selector: mPendingTimestamp
- name: pskc
  endpoint:
    path: /dataset/pskc
    method: GET
    data_selector: mPskc
- name: security_policy
  endpoint:
    path: /dataset/security_policy
    method: GET
    data_selector: mSecurityPolicy
- name: wakeup_channel
  endpoint:
    path: /dataset/wakeup_channel
    method: GET
    data_selector: mWakeupChannel
- name: mIsActiveTimestampPresent
- name: mIsChannelMaskPresent
- name: mIsChannelPresent
- name: mIsDelayPresent
- name: mIsExtendedPanIdPresent
- name: mIsMeshLocalPrefixPresent
- name: mIsNetworkKeyPresent
- name: mIsNetworkNamePresent
- name: mIsPanIdPresent
- name: mIsPendingTimestampPresent
- name: mIsPskcPresent
- name: mIsSecurityPolicyPresent
- name: mIsWakeupChannelPresent
- name: Operational Dataset
  endpoint:
    path: /include/openthread/ot-operational-dataset-tlvs
    method: GET
- name: m8
  endpoint:
    path: /otPskc/m8
    method: GET
    data_selector: uint8_t
    params: {}
- name: otTimestamp
  endpoint:
    path: /reference/struct/ot-timestamp
    method: GET
    data_selector: public_attributes
- name: otThreadGetChildNextIp6Address
  endpoint:
    path: /otThreadGetChildNextIp6Address
    method: GET
    data_selector: nextIpv6Address
    params: {}
- name: otThreadGetChildRouterLinks
  endpoint:
    path: /otThreadGetChildRouterLinks
    method: GET
    data_selector: MLE_CHILD_ROUTER_LINKS
    params: {}
- name: otThreadGetContextIdReuseDelay
  endpoint:
    path: /otThreadGetContextIdReuseDelay
    method: GET
    data_selector: CONTEXT_ID_REUSE_DELAY
    params: {}
- name: otThreadGetDeviceProperties
  endpoint:
    path: /otThreadGetDeviceProperties
    method: GET
    data_selector: deviceProperties
    params: {}
- name: otThreadGetJoinerUdpPort
  endpoint:
    path: /otThreadGetJoinerUdpPort
    method: GET
    data_selector: JoinerUdpPort
    params: {}
- name: otThreadGetLocalLeaderWeight
  endpoint:
    path: /otThreadGetLocalLeaderWeight
    method: GET
    data_selector: LocalLeaderWeight
    params: {}
- name: otThreadGetMaxAllowedChildren
  endpoint:
    path: /otThreadGetMaxAllowedChildren
    method: GET
    data_selector: MaxAllowedChildren
    params: {}
- name: otThreadGetMaxChildIpAddresses
  endpoint:
    path: /otThreadGetMaxChildIpAddresses
    method: GET
    data_selector: MaxChildIpAddresses
    params: {}
- name: otThreadGetMaxRouterId
  endpoint:
    path: /otThreadGetMaxRouterId
    method: GET
    data_selector: MaxRouterId
    params: {}
- name: otThreadGetNetworkIdTimeout
  endpoint:
    path: /otThreadGetNetworkIdTimeout
    method: GET
    data_selector: NETWORK_ID_TIMEOUT
    params: {}
- name: otThreadGetNextCacheEntry
  endpoint:
    path: /otThreadGetNextCacheEntry
    method: GET
    data_selector: nextCacheEntry
    params: {}
- name: otThreadGetNextHopAndPathCost
  endpoint:
    path: /otThreadGetNextHopAndPathCost
    method: GET
    data_selector: nextHopAndPathCost
    params: {}
- name: otThreadGetParentPriority
  endpoint:
    path: /otThreadGetParentPriority
    method: GET
    data_selector: ParentPriority
    params: {}
- name: otThreadGetPreferredLeaderPartitionId
  endpoint:
    path: /otThreadGetPreferredLeaderPartitionId
    method: GET
    data_selector: PreferredLeaderPartitionId
    params: {}
- name: otThreadGetPskc
  endpoint:
    path: /otThreadGetPskc
    method: GET
    data_selector: PSKc
    params: {}
- name: otThreadGetPskcRef
  endpoint:
    path: /otThreadGetPskcRef
    method: GET
    data_selector: PSKcRef
    params: {}
- name: otThreadGetRouterDowngradeThreshold
  endpoint:
    path: /otThreadGetRouterDowngradeThreshold
    method: GET
    data_selector: ROUTER_DOWNGRADE_THRESHOLD
    params: {}
- name: otThreadGetRouterIdRange
  endpoint:
    path: /otThreadGetRouterIdRange
    method: GET
    data_selector: RouterIdRange
    params: {}
- name: otThreadGetRouterIdSequence
  endpoint:
    path: /otThreadGetRouterIdSequence
    method: GET
    data_selector: RouterIdSequence
    params: {}
- name: otThreadGetRouterInfo
  endpoint:
    path: /otThreadGetRouterInfo
    method: GET
    data_selector: RouterInfo
    params: {}
- name: otThreadGetRouterSelectionJitter
  endpoint:
    path: /otThreadGetRouterSelectionJitter
    method: GET
    data_selector: ROUTER_SELECTION_JITTER
    params: {}
- name: otThreadGetRouterUpgradeThreshold
  endpoint:
    path: /otThreadGetRouterUpgradeThreshold
    method: GET
    data_selector: ROUTER_UPGRADE_THRESHOLD
    params: {}
- name: otThreadIsRouterEligible
  endpoint:
    path: /otThreadIsRouterEligible
    method: GET
    data_selector: RouterEligible
    params: {}
- name: otThreadIsRouterIdAllocated
  endpoint:
    path: /otThreadIsRouterIdAllocated
    method: GET
    data_selector: RouterIdAllocated
    params: {}
- name: otThreadIsTmfOriginFilterEnabled
  endpoint:
    path: /otThreadIsTmfOriginFilterEnabled
    method: GET
    data_selector: TmfOriginFilterEnabled
    params: {}
- name: otThreadRegisterNeighborTableCallback
  endpoint:
    path: /otThreadRegisterNeighborTableCallback
    method: POST
    data_selector: NeighborTableCallback
    params: {}
- name: otThreadReleaseRouterId
  endpoint:
    path: /otThreadReleaseRouterId
    method: POST
    data_selector: ReleaseRouterId
    params: {}
- name: otThreadSetCcmEnabled
  endpoint:
    path: /otThreadSetCcmEnabled
    method: POST
    data_selector: CcmEnabled
    params: {}
- name: otThreadSetChildRouterLinks
  endpoint:
    path: /otThreadSetChildRouterLinks
    method: POST
    data_selector: SetChildRouterLinks
    params: {}
- name: otCacheEntryInfo
  endpoint:
    path: /otCacheEntryInfo
    method: GET
    data_selector: attributes
    params: {}
- name: mData
  endpoint:
    path: otCacheEntryIterator::mData
    method: GET
    data_selector: const void *
    params: {}
- name: Child Information
  endpoint:
    path: /otChildInfo
    method: GET
    data_selector: attributes
    params: {}
- name: device_properties
  endpoint:
    path: /otDeviceProperties
    method: GET
    data_selector: properties
- name: otActiveScanResult
  endpoint:
    path: /reference/struct/ot-active-scan-result
    method: GET
    data_selector: data
    params: {}
- name: otServerAddService
  endpoint:
    path: /reference/group/api-server#group__api-server_1gafff1abde637835a204e25b5648fef8d2
    method: POST
    data_selector: OT_ERROR
    params: {}
- name: otServerGetNetDataLocal
  endpoint:
    path: /reference/group/api-server#group__api-server_1gac871204d82331cde29a529e58cdbfe2f
    method: GET
    data_selector: OT_ERROR
    params: {}
- name: otServerGetNextService
  endpoint:
    path: /reference/group/api-server#group__api-server_1gac871204d82331cde29a529e58cdbfe2f
    method: GET
    data_selector: OT_ERROR
    params: {}
- name: otServerRegister
  endpoint:
    path: /reference/group/api-server#group__api-server_1gae6d57d2bb198dcc86a941405c267fe8a
    method: POST
    data_selector: OT_ERROR
    params: {}
- name: otServerRemoveService
  endpoint:
    path: /reference/group/api-server#group__api-server_1gafff1abde637835a204e25b5648fef8d2
    method: DELETE
    data_selector: OT_ERROR
    params: {}
- name: otPlatAlarmMicroFired
  endpoint:
    path: /otPlatAlarmMicroFired
    method: void
    data_selector: Signal that the alarm has fired.
    params: {}
- name: otPlatAlarmMicroGetNow
  endpoint:
    path: /otPlatAlarmMicroGetNow
    method: uint32_t
    data_selector: Get the current time in microseconds.
    params: {}
- name: otPlatAlarmMicroStartAt
  endpoint:
    path: /otPlatAlarmMicroStartAt
    method: void
    data_selector: Set the alarm to fire at aDt microseconds after aT0.
    params: {}
- name: otPlatAlarmMicroStop
  endpoint:
    path: /otPlatAlarmMicroStop
    method: void
    data_selector: Stop the alarm.
    params: {}
- name: otPlatAlarmMilliFired
  endpoint:
    path: /otPlatAlarmMilliFired
    method: void
    data_selector: Signal that the alarm has fired.
    params: {}
- name: otPlatAlarmMilliGetNow
  endpoint:
    path: /otPlatAlarmMilliGetNow
    method: uint32_t
    data_selector: Get the current time in milliseconds.
    params: {}
- name: otPlatAlarmMilliStartAt
  endpoint:
    path: /otPlatAlarmMilliStartAt
    method: void
    data_selector: Set the alarm to fire at aDt milliseconds after aT0.
    params: {}
- name: otPlatAlarmMilliStop
  endpoint:
    path: /otPlatAlarmMilliStop
    method: void
    data_selector: Stop the alarm.
    params: {}
- name: otPlatDiagAlarmFired
  endpoint:
    path: /otPlatDiagAlarmFired
    method: void
    data_selector: Signal diagnostics module that the alarm has fired.
    params: {}
- name: otBleLinkCapabilities
  endpoint:
    path: /openthread/ble/link/capabilities
    method: GET
    data_selector: public_attributes
    params: {}
- name: mLength
  endpoint:
    path: /ble/mLength
    method: GET
    data_selector: mLength
    params: {}
- name: mPower
  endpoint:
    path: /ble/mPower
    method: GET
    data_selector: mPower
    params: {}
- name: mValue
  endpoint:
    path: /ble/mValue
    method: GET
    data_selector: mValue
    params: {}
- name: otPlatCryptoEcdsaSign
  endpoint:
    path: /otPlatCryptoEcdsaSign
    method: POST
    data_selector: signature
    params: {}
- name: otPlatCryptoEcdsaVerify
  endpoint:
    path: /otPlatCryptoEcdsaVerify
    method: POST
    data_selector: verification
    params: {}
- name: otPlatCryptoHkdfInit
  endpoint:
    path: /otPlatCryptoHkdfInit
    method: POST
    data_selector: hkdf_init
    params: {}
- name: otPlatCryptoSha256Init
  endpoint:
    path: /otPlatCryptoSha256Init
    method: POST
    data_selector: sha256_init
    params: {}
- name: OT_CRYPTO_ECDSA_MAX_DER_SIZE
  endpoint:
    path: /OT_CRYPTO_ECDSA_MAX_DER_SIZE
    method: GET
    data_selector: value
- name: OT_CRYPTO_ECDSA_PUBLIC_KEY_SIZE
  endpoint:
    path: /OT_CRYPTO_ECDSA_PUBLIC_KEY_SIZE
    method: GET
    data_selector: value
- name: OT_CRYPTO_ECDSA_SIGNATURE_SIZE
  endpoint:
    path: /OT_CRYPTO_ECDSA_SIGNATURE_SIZE
    method: GET
    data_selector: value
- name: OT_CRYPTO_PBDKF2_MAX_SALT_SIZE
  endpoint:
    path: /OT_CRYPTO_PBDKF2_MAX_SALT_SIZE
    method: GET
    data_selector: value
- name: OT_CRYPTO_SHA256_HASH_SIZE
  endpoint:
    path: /OT_CRYPTO_SHA256_HASH_SIZE
    method: GET
    data_selector: value
- name: mContext
  endpoint:
    path: /otCryptoContext/mContext
    method: GET
    data_selector: void *
    params: {}
- name: mContextSize
  endpoint:
    path: /otCryptoContext/mContextSize
    method: GET
    data_selector: uint16_t
    params: {}
- name: mDerBytes
  endpoint:
    path: otPlatCryptoEcdsaKeyPair::mDerBytes
    method: GET
- name: mDerLength
  endpoint:
    path: otPlatCryptoEcdsaKeyPair::mDerLength
    method: GET
- name: Public attributes
  endpoint:
    path: /otPlatCryptoEcdsaPublicKey
    method: GET
    data_selector: m8
    params: {}
- name: m8
  endpoint:
    path: /include/openthread/otPlatCryptoEcdsaSignature
    method: GET
    data_selector: m8
    params: {}
- name: m8
  endpoint:
    path: /otPlatCryptoSha256Hash/m8
    method: GET
    data_selector: Hash bytes
- name: otPlatDnsUpstreamQuery
  endpoint:
    path: /otPlatDnsUpstreamQuery
    method: void
    data_selector: struct otPlatDnsUpstreamQuery
    params: {}
- name: otPlatDnsCancelUpstreamQuery
  endpoint:
    path: /otPlatDnsCancelUpstreamQuery
    method: void
    data_selector: aTxn
    params: {}
- name: otPlatDnsIsUpstreamQueryAvailable
  endpoint:
    path: /otPlatDnsIsUpstreamQueryAvailable
    method: bool
    data_selector: available
    params: {}
- name: otPlatDnsStartUpstreamQuery
  endpoint:
    path: /otPlatDnsStartUpstreamQuery
    method: void
    data_selector: aQuery
    params: {}
- name: otPlatDnsUpstreamQueryDone
  endpoint:
    path: /otPlatDnsUpstreamQueryDone
    method: void
    data_selector: aResponse
    params: {}
- name: service_registration
  endpoint:
    path: /otPlatDnssdRegisterService
    method: POST
    data_selector: service_info
    params: {}
- name: service_browser
  endpoint:
    path: /otPlatDnssdStartBrowser
    method: POST
    data_selector: browser_info
    params: {}
- name: ip4_address_resolver
  endpoint:
    path: /otPlatDnssdStartIp4AddressResolver
    method: POST
    data_selector: resolver_info
    params: {}
- name: ip6_address_resolver
  endpoint:
    path: /otPlatDnssdStartIp6AddressResolver
    method: POST
    data_selector: resolver_info
    params: {}
- name: record_querier
  endpoint:
    path: /otPlatDnssdStartRecordQuerier
    method: POST
    data_selector: querier_info
    params: {}
- name: srv_resolver
  endpoint:
    path: /otPlatDnssdStartSrvResolver
    method: POST
    data_selector: resolver_info
    params: {}
- name: txt_resolver
  endpoint:
    path: /otPlatDnssdStartTxtResolver
    method: POST
    data_selector: resolver_info
    params: {}
- name: state_change_handler
  endpoint:
    path: /otPlatDnssdStateHandleStateChange
    method: POST
    data_selector: instance_info
    params: {}
- name: service_unregistration
  endpoint:
    path: /otPlatDnssdUnregisterService
    method: POST
    data_selector: service_info
    params: {}
- name: host_unregistration
  endpoint:
    path: /otPlatDnssdUnregisterHost
    method: POST
    data_selector: host_info
    params: {}
- name: key_unregistration
  endpoint:
    path: /otPlatDnssdUnregisterKey
    method: POST
    data_selector: key_info
    params: {}
- name: otPlatDnssdUnregisterService
  endpoint:
    path: /otPlatDnssdUnregisterService
    method: void
    data_selector: none
    params: {}
- name: mAddress
  endpoint:
    path: otIp6Address
    method: GET
    data_selector: mAddress
- name: mTtl
  endpoint:
    path: uint32_t
    method: GET
    data_selector: mTtl
- name: Public attributes
  endpoint:
    path: /otPlatDnssdAddressResolver
    method: GET
    data_selector: attributes
- name: mAddresses
  endpoint:
    path: /otPlatDnssdAddressResult/mAddresses
    method: GET
    data_selector: const otPlatDnssdAddressAndTtl *
    params: {}
- name: mAddressesLength
  endpoint:
    path: /otPlatDnssdAddressResult/mAddressesLength
    method: GET
    data_selector: uint16_t
    params: {}
- name: mHostName
  endpoint:
    path: /otPlatDnssdAddressResult/mHostName
    method: GET
    data_selector: const char *
    params: {}
- name: mInfraIfIndex
  endpoint:
    path: /otPlatDnssdAddressResult/mInfraIfIndex
    method: GET
    data_selector: uint32_t
    params: {}
- name: mInfraIfIndex
  endpoint:
    path: /dnssd/mInfraIfIndex
    method: GET
    data_selector: uint32_t
- name: mServiceInstance
  endpoint:
    path: /dnssd/mServiceInstance
    method: GET
    data_selector: const char *
- name: mServiceType
  endpoint:
    path: /dnssd/mServiceType
    method: GET
    data_selector: const char *
- name: mSubTypeLabel
  endpoint:
    path: /dnssd/mSubTypeLabel
    method: GET
    data_selector: const char *
- name: mTtl
  endpoint:
    path: /dnssd/mTtl
    method: GET
    data_selector: uint32_t
- name: mCallback
  endpoint:
    path: otPlatDnssdBrowseCallback
    method: GET
    data_selector: result
    params: {}
- name: mInfraIfIndex
  endpoint:
    path: uint32_t
    method: GET
    data_selector: infrastructure network interface index
    params: {}
- name: mServiceType
  endpoint:
    path: const char *
    method: GET
    data_selector: service type
    params: {}
- name: mSubTypeLabel
  endpoint:
    path: const char *
    method: GET
    data_selector: sub-type label
    params: {}
- name: mAddresses
  endpoint:
    path: /dnssd/mAddresses
    method: GET
    data_selector: Array of IPv6 host addresses
- name: mAddressesLength
  endpoint:
    path: /dnssd/mAddressesLength
    method: GET
    data_selector: Number of entries in mAddresses array
- name: mHostName
  endpoint:
    path: /dnssd/mHostName
    method: GET
    data_selector: The host name
- name: mInfraIfIndex
  endpoint:
    path: /dnssd/mInfraIfIndex
    method: GET
    data_selector: The infrastructure network interface index
- name: mTtl
  endpoint:
    path: /dnssd/mTtl
    method: GET
    data_selector: The host TTL in seconds
- name: mClass
  endpoint:
    path: otPlatDnssdKey::mClass
    method: GET
    data_selector: resource record class
- name: mInfraIfIndex
  endpoint:
    path: otPlatDnssdKey::mInfraIfIndex
    method: GET
    data_selector: infrastructure network interface index
- name: mKeyData
  endpoint:
    path: otPlatDnssdKey::mKeyData
    method: GET
    data_selector: key record data
- name: mKeyDataLength
  endpoint:
    path: otPlatDnssdKey::mKeyDataLength
    method: GET
    data_selector: length of key data
- name: mName
  endpoint:
    path: otPlatDnssdKey::mName
    method: GET
    data_selector: host or service instance name
- name: mServiceType
  endpoint:
    path: otPlatDnssdKey::mServiceType
    method: GET
    data_selector: service type
- name: mTtl
  endpoint:
    path: otPlatDnssdKey::mTtl
    method: GET
    data_selector: TTL in seconds
- name: mCallback
  endpoint:
    path: otPlatDnssdRecordCallback
    method: GET
- name: mFirstLabel
  endpoint:
    path: const char *
    method: GET
- name: mInfraIfIndex
  endpoint:
    path: uint32_t
    method: GET
- name: mNextLabels
  endpoint:
    path: const char *
    method: GET
- name: mRecordType
  endpoint:
    path: uint16_t
    method: GET
- name: mHostName
  endpoint:
    path: /otPlatDnssdService/mHostName
    method: GET
- name: mInfraIfIndex
  endpoint:
    path: /otPlatDnssdService/mInfraIfIndex
    method: GET
- name: mPort
  endpoint:
    path: /otPlatDnssdService/mPort
    method: GET
- name: mPriority
  endpoint:
    path: /otPlatDnssdService/mPriority
    method: GET
- name: mServiceInstance
  endpoint:
    path: /otPlatDnssdService/mServiceInstance
    method: GET
- name: mServiceType
  endpoint:
    path: /otPlatDnssdService/mServiceType
    method: GET
- name: mSubTypeLabels
  endpoint:
    path: /otPlatDnssdService/mSubTypeLabels
    method: GET
- name: mSubTypeLabelsLength
  endpoint:
    path: /otPlatDnssdService/mSubTypeLabelsLength
    method: GET
- name: mTtl
  endpoint:
    path: /otPlatDnssdService/mTtl
    method: GET
- name: mTxtData
  endpoint:
    path: /otPlatDnssdService/mTxtData
    method: GET
- name: mTxtDataLength
  endpoint:
    path: /otPlatDnssdService/mTxtDataLength
    method: GET
- name: mWeight
  endpoint:
    path: /otPlatDnssdService/mWeight
    method: GET
- name: mCallback
- name: mInfraIfIndex
- name: mServiceInstance
- name: mServiceType
- name: Public attributes
  endpoint:
    path: /otPlatDnssdSrvResult
    method: GET
    data_selector: attributes
    params: {}
- name: mCallback
  endpoint:
    path: otPlatDnssdTxtCallback
    method: GET
    data_selector: mCallback
    params: {}
- name: mInfraIfIndex
  endpoint:
    path: uint32_t
    method: GET
    data_selector: mInfraIfIndex
    params: {}
- name: mServiceInstance
  endpoint:
    path: const char *
    method: GET
    data_selector: mServiceInstance
    params: {}
- name: mServiceType
  endpoint:
    path: const char *
    method: GET
    data_selector: mServiceType
    params: {}
- name: mInfraIfIndex
- name: mServiceInstance
- name: mServiceType
- name: mTtl
- name: mTxtData
- name: mTxtDataLength
- name: otPlatEntropyGet
  endpoint:
    path: /otPlatEntropyGet
    method: GET
    data_selector: output
    params: {}
- name: otPlatDiagAlarmCallback
  endpoint:
    path: otPlatDiagAlarmCallback
    method: void
    data_selector: Processes the alarm event.
    params: {}
- name: otPlatDiagChannelSet
  endpoint:
    path: otPlatDiagChannelSet
    method: void
    data_selector: Sets the channel to use for factory diagnostics.
    params: {}
- name: otPlatDiagGpioGet
  endpoint:
    path: otPlatDiagGpioGet
    method: otError
    data_selector: Gets the gpio value.
    params: {}
- name: otPlatDiagGpioGetMode
  endpoint:
    path: otPlatDiagGpioGetMode
    method: otError
    data_selector: Gets the gpio mode.
    params: {}
- name: otPlatDiagGpioSet
  endpoint:
    path: otPlatDiagGpioSet
    method: otError
    data_selector: Sets the gpio value.
    params: {}
- name: otPlatDiagGpioSetMode
  endpoint:
    path: otPlatDiagGpioSetMode
    method: otError
    data_selector: Sets the gpio mode.
    params: {}
- name: otPlatDiagModeGet
  endpoint:
    path: otPlatDiagModeGet
    method: bool
    data_selector: Indicates whether or not factory diagnostics mode is enabled.
    params: {}
- name: otPlatDiagModeSet
  endpoint:
    path: otPlatDiagModeSet
    method: void
    data_selector: Enables/disables the factory diagnostics mode.
    params: {}
- name: otPlatDiagProcess
  endpoint:
    path: otPlatDiagProcess
    method: otError
    data_selector: Processes a factory diagnostics command line.
    params: {}
- name: otPlatDiagRadioGetPowerSettings
  endpoint:
    path: otPlatDiagRadioGetPowerSettings
    method: otError
    data_selector: Get the power settings for the given channel.
    params: {}
- name: otPlatDiagRadioGetRawPowerSetting
  endpoint:
    path: otPlatDiagRadioGetRawPowerSetting
    method: otError
    data_selector: Get the radio raw power setting for diagnostics module.
    params: {}
- name: otPlatDiagRadioRawPowerSettingEnable
  endpoint:
    path: otPlatDiagRadioRawPowerSettingEnable
    method: otError
    data_selector: Enable/disable the platform layer to use the raw power setting.
    params: {}
- name: otPlatDiagRadioReceived
  endpoint:
    path: otPlatDiagRadioReceived
    method: void
    data_selector: Processes the received radio frame.
    params: {}
- name: otPlatDiagRadioSetRawPowerSetting
  endpoint:
    path: otPlatDiagRadioSetRawPowerSetting
    method: otError
    data_selector: Set the radio raw power setting for diagnostics module.
    params: {}
- name: otPlatDiagRadioTransmitCarrier
  endpoint:
    path: otPlatDiagRadioTransmitCarrier
    method: otError
    data_selector: Start/stop the platform layer to transmit continuous carrier wave.
    params: {}
- name: otPlatDiagRadioTransmitStream
  endpoint:
    path: otPlatDiagRadioTransmitStream
    method: otError
    data_selector: Start/stop the platform layer to transmit stream of characters.
    params: {}
- name: otPlatDiagSetOutputCallback
  endpoint:
    path: otPlatDiagSetOutputCallback
    method: void
    data_selector: Sets the platform diag output callback.
    params: {}
- name: otPlatDiagTxPowerSet
  endpoint:
    path: otPlatDiagTxPowerSet
    method: void
    data_selector: Sets the transmit power to use for factory diagnostics.
    params: {}
- name: otPlatGetInfraIfLinkLayerAddress
  endpoint:
    path: /GetInfraIfLinkLayerAddress
    method: GET
    data_selector: linkLayerAddress
    params: {}
- name: otPlatInfraIfDhcp6PdClientHandleReceived
  endpoint:
    path: /InfraIfDhcp6PdClientHandleReceived
    method: POST
    data_selector: dhcp6Message
    params: {}
- name: otPlatInfraIfDhcp6PdClientSend
  endpoint:
    path: /InfraIfDhcp6PdClientSend
    method: POST
    data_selector: dhcp6Message
    params: {}
- name: otPlatInfraIfDhcp6PdClientSetListeningEnabled
  endpoint:
    path: /InfraIfDhcp6PdClientSetListeningEnabled
    method: POST
    data_selector: listeningEnabled
    params: {}
- name: otPlatInfraIfDiscoverNat64Prefix
  endpoint:
    path: /DiscoverNat64Prefix
    method: GET
    data_selector: nat64Prefix
    params: {}
- name: otPlatInfraIfDiscoverNat64PrefixDone
  endpoint:
    path: /DiscoverNat64PrefixDone
    method: POST
    data_selector: nat64PrefixDiscoveryDone
    params: {}
- name: otPlatInfraIfHasAddress
  endpoint:
    path: /HasAddress
    method: GET
    data_selector: addressCheck
    params: {}
- name: otPlatInfraIfRecvIcmp6Nd
  endpoint:
    path: /RecvIcmp6Nd
    method: POST
    data_selector: icmp6Message
    params: {}
- name: otPlatInfraIfSendIcmp6Nd
  endpoint:
    path: /SendIcmp6Nd
    method: POST
    data_selector: icmp6Message
    params: {}
- name: otPlatInfraIfStateChanged
  endpoint:
    path: /StateChanged
    method: POST
    data_selector: stateChange
    params: {}
- name: otPlatLog
  endpoint:
    path: /otPlatLog
    method: void
    data_selector: logs
    params: {}
- name: otPlatLogHandleLevelChanged
  endpoint:
    path: /otPlatLogHandleLevelChanged
    method: void
    data_selector: logLevelChanges
    params: {}
- name: otPlatCAlloc
  endpoint:
    path: /api/memory/otPlatCAlloc
    method: POST
    data_selector: results
- name: otPlatFree
  endpoint:
    path: /api/memory/otPlatFree
    method: POST
    data_selector: results
- name: message_pool
  endpoint:
    path: /reference/group/plat-messagepool
    method: GET
    data_selector: records
- name: otMessageBuffer
  endpoint:
    path: /reference/struct/ot-message-buffer
    method: GET
    data_selector: records
- name: otPlatMessagePoolFree
  endpoint:
    path: /reference/otPlatMessagePoolFree
    method: GET
    data_selector: records
- name: otPlatMessagePoolInit
  endpoint:
    path: /reference/otPlatMessagePoolInit
    method: GET
    data_selector: records
- name: otPlatMessagePoolNew
  endpoint:
    path: /reference/otPlatMessagePoolNew
    method: GET
    data_selector: records
- name: otPlatMessagePoolNumFreeBuffers
  endpoint:
    path: /reference/otPlatMessagePoolNumFreeBuffers
    method: GET
    data_selector: records
- name: mNext
  endpoint:
    path: /include/openthread/messagepool.h
    method: GET
    data_selector: struct otMessageBuffer *
- name: otPlatGetMcuPowerState
  endpoint:
    path: /otPlatGetMcuPowerState
    method: GET
    data_selector: returns
    params: {}
- name: otPlatGetResetReason
  endpoint:
    path: /otPlatGetResetReason
    method: GET
    data_selector: returns
    params: {}
- name: otPlatLogCrashDump
  endpoint:
    path: /otPlatLogCrashDump
    method: GET
    data_selector: returns
    params: {}
- name: otPlatReset
  endpoint:
    path: /otPlatReset
    method: POST
    data_selector: returns
    params: {}
- name: otPlatResetToBootloader
  endpoint:
    path: /otPlatResetToBootloader
    method: POST
    data_selector: returns
    params: {}
- name: otPlatSetMcuPowerState
  endpoint:
    path: /otPlatSetMcuPowerState
    method: POST
    data_selector: returns
    params: {}
- name: otPlatWakeHost
  endpoint:
    path: /otPlatWakeHost
    method: POST
    data_selector: returns
    params: {}
- name: otPlatMultipanGetActiveInstance
  endpoint:
    path: /otPlatMultipanGetActiveInstance
    method: GET
    data_selector: aInstance
    params: {}
- name: otPlatMultipanIidToInstance
  endpoint:
    path: /otPlatMultipanIidToInstance
    method: GET
    data_selector: aIid
    params: {}
- name: otPlatMultipanInstanceToIid
  endpoint:
    path: /otPlatMultipanInstanceToIid
    method: GET
    data_selector: aInstance
    params: {}
- name: otPlatMultipanSetActiveInstance
  endpoint:
    path: /otPlatMultipanSetActiveInstance
    method: POST
    data_selector: aInstance
    params: {}
- name: otPlatMultipanSwitchoverDone
  endpoint:
    path: /otPlatMultipanSwitchoverDone
    method: POST
    data_selector: aInstance
    params: {}
- name: otPlatOtnsStatus
  endpoint:
    path: /otPlatOtnsStatus
    method: void
    data_selector: status
    params: {}
- name: GetBusLatency
  endpoint:
    path: otPlatRadioGetBusLatency
    method: GET
    data_selector: microseconds
    params: {}
- name: GetBusSpeed
  endpoint:
    path: otPlatRadioGetBusSpeed
    method: GET
    data_selector: bits/second
    params: {}
- name: GetCaps
  endpoint:
    path: otPlatRadioGetCaps
    method: GET
    data_selector: otRadioCaps
    params: {}
- name: GetCcaEnergyDetectThreshold
  endpoint:
    path: otPlatRadioGetCcaEnergyDetectThreshold
    method: GET
    data_selector: dBm
    params: {}
- name: GetFemLnaGain
  endpoint:
    path: otPlatRadioGetFemLnaGain
    method: GET
    data_selector: dBm
    params: {}
- name: GetIeeeEui64
  endpoint:
    path: otPlatRadioGetIeeeEui64
    method: GET
    data_selector: IEEE EUI-64
    params: {}
- name: GetNow
  endpoint:
    path: otPlatRadioGetNow
    method: GET
    data_selector: microseconds
    params: {}
- name: GetPromiscuous
  endpoint:
    path: otPlatRadioGetPromiscuous
    method: GET
    data_selector: boolean
    params: {}
- name: GetReceiveSensitivity
  endpoint:
    path: otPlatRadioGetReceiveSensitivity
    method: GET
    data_selector: dBm
    params: {}
- name: GetTransmitPower
  endpoint:
    path: otPlatRadioGetTransmitPower
    method: GET
    data_selector: dBm
    params: {}
- name: GetVersionString
  endpoint:
    path: otPlatRadioGetVersionString
    method: GET
    data_selector: string
    params: {}
- name: SetAlternateShortAddress
  endpoint:
    path: otPlatRadioSetAlternateShortAddress
    method: POST
    data_selector: void
    params: {}
- name: SetCcaEnergyDetectThreshold
  endpoint:
    path: otPlatRadioSetCcaEnergyDetectThreshold
    method: POST
    data_selector: void
    params: {}
- name: SetExtendedAddress
  endpoint:
    path: otPlatRadioSetExtendedAddress
    method: POST
    data_selector: void
    params: {}
- name: SetFemLnaGain
  endpoint:
    path: otPlatRadioSetFemLnaGain
    method: POST
    data_selector: void
    params: {}
- name: SetMacFrameCounter
  endpoint:
    path: otPlatRadioSetMacFrameCounter
    method: POST
    data_selector: void
    params: {}
- name: SetMacFrameCounterIfLarger
  endpoint:
    path: otPlatRadioSetMacFrameCounterIfLarger
    method: POST
    data_selector: void
    params: {}
- name: SetMacKey
  endpoint:
    path: otPlatRadioSetMacKey
    method: POST
    data_selector: void
    params: {}
- name: SetPanId
  endpoint:
    path: otPlatRadioSetPanId
    method: POST
    data_selector: void
    params: {}
- name: SetPromiscuous
  endpoint:
    path: otPlatRadioSetPromiscuous
    method: POST
    data_selector: void
    params: {}
- name: SetRxOnWhenIdle
  endpoint:
    path: otPlatRadioSetRxOnWhenIdle
    method: POST
    data_selector: void
    params: {}
- name: SetShortAddress
  endpoint:
    path: otPlatRadioSetShortAddress
    method: POST
    data_selector: void
    params: {}
- name: otPlatDiagRadioReceiveDone
  endpoint:
    path: /otPlatDiagRadioReceiveDone
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatDiagRadioTransmitDone
  endpoint:
    path: /otPlatDiagRadioTransmitDone
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioAddCalibratedPower
  endpoint:
    path: /otPlatRadioAddCalibratedPower
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioAddSrcMatchExtEntry
  endpoint:
    path: /otPlatRadioAddSrcMatchExtEntry
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioAddSrcMatchShortEntry
  endpoint:
    path: /otPlatRadioAddSrcMatchShortEntry
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioBusLatencyChanged
  endpoint:
    path: /otPlatRadioBusLatencyChanged
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioClearCalibratedPowers
  endpoint:
    path: /otPlatRadioClearCalibratedPowers
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioClearSrcMatchExtEntries
  endpoint:
    path: /otPlatRadioClearSrcMatchExtEntries
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioClearSrcMatchExtEntry
  endpoint:
    path: /otPlatRadioClearSrcMatchExtEntry
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioClearSrcMatchShortEntries
  endpoint:
    path: /otPlatRadioClearSrcMatchShortEntries
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioClearSrcMatchShortEntry
  endpoint:
    path: /otPlatRadioClearSrcMatchShortEntry
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioConfigureEnhAckProbing
  endpoint:
    path: /otPlatRadioConfigureEnhAckProbing
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioDisable
  endpoint:
    path: /otPlatRadioDisable
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioEnable
  endpoint:
    path: /otPlatRadioEnable
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioEnableCsl
  endpoint:
    path: /otPlatRadioEnableCsl
    method: GET
    data_selector: parameters
    params: {}
- name: otPlatRadioEnableSrcMatch
  endpoint:
    path: /otPlatRadioEnableSrcMatch
    method: POST
    data_selector: parameters
- name: otPlatRadioEnergyScan
  endpoint:
    path: /otPlatRadioEnergyScan
    method: POST
    data_selector: parameters
- name: otPlatRadioEnergyScanDone
  endpoint:
    path: /otPlatRadioEnergyScanDone
    method: POST
    data_selector: parameters
- name: otPlatRadioGetCoexMetrics
  endpoint:
    path: /otPlatRadioGetCoexMetrics
    method: GET
    data_selector: parameters
- name: otPlatRadioGetCslAccuracy
  endpoint:
    path: /otPlatRadioGetCslAccuracy
    method: GET
    data_selector: parameters
- name: otPlatRadioGetCslUncertainty
  endpoint:
    path: /otPlatRadioGetCslUncertainty
    method: GET
    data_selector: parameters
- name: otPlatRadioGetPreferredChannelMask
  endpoint:
    path: /otPlatRadioGetPreferredChannelMask
    method: GET
    data_selector: parameters
- name: otPlatRadioGetRawPowerSetting
  endpoint:
    path: /otPlatRadioGetRawPowerSetting
    method: GET
    data_selector: parameters
- name: otPlatRadioGetRegion
  endpoint:
    path: /otPlatRadioGetRegion
    method: GET
    data_selector: parameters
- name: otPlatRadioGetRssi
  endpoint:
    path: /otPlatRadioGetRssi
    method: GET
    data_selector: parameters
- name: otPlatRadioGetState
  endpoint:
    path: /otPlatRadioGetState
    method: GET
    data_selector: parameters
- name: otPlatRadioGetSupportedChannelMask
  endpoint:
    path: /otPlatRadioGetSupportedChannelMask
    method: GET
    data_selector: parameters
- name: otPlatRadioGetTransmitBuffer
  endpoint:
    path: /otPlatRadioGetTransmitBuffer
    method: GET
    data_selector: parameters
- name: otPlatRadioIsCoexEnabled
  endpoint:
    path: /otPlatRadioIsCoexEnabled
    method: GET
    data_selector: parameters
- name: otPlatRadioIsEnabled
  endpoint:
    path: /otPlatRadioIsEnabled
    method: GET
    data_selector: parameters
- name: otPlatRadioReceive
  endpoint:
    path: /otPlatRadioReceive
    method: POST
    data_selector: parameters
- name: otPlatRadioReceiveAt
  endpoint:
    path: /otPlatRadioReceiveAt
    method: POST
    data_selector: parameters
- name: otPlatRadioReceiveDone
  endpoint:
    path: /otPlatRadioReceiveDone
    method: POST
    data_selector: parameters
- name: otPlatRadioResetCsl
  endpoint:
    path: /otPlatRadioResetCsl
    method: POST
    data_selector: parameters
- name: otPlatRadioSetChannelMaxTransmitPower
  endpoint:
    path: /otPlatRadioSetChannelMaxTransmitPower
    method: POST
    data_selector: parameters
- name: otPlatRadioSetChannelTargetPower
  endpoint:
    path: /otPlatRadioSetChannelTargetPower
    method: POST
    data_selector: parameters
- name: otPlatRadioSetCoexEnabled
  endpoint:
    path: /otPlatRadioSetCoexEnabled
    method: POST
    data_selector: parameters
- name: otPlatRadioSetRegion
  endpoint:
    path: /otPlatRadioSetRegion
    method: POST
    data_selector: parameters
- name: otPlatRadioSleep
  endpoint:
    path: /otPlatRadioSleep
    method: POST
    data_selector: parameters
- name: otPlatRadioTransmit
  endpoint:
    path: /otPlatRadioTransmit
    method: POST
    data_selector: parameters
- name: otPlatRadioTxDone
  endpoint:
    path: /otPlatRadioTxDone
    method: void
    data_selector: parameters
    params: {}
- name: otPlatRadioTxStarted
  endpoint:
    path: /otPlatRadioTxStarted
    method: void
    data_selector: parameters
    params: {}
- name: otPlatRadioUpdateCslSampleTime
  endpoint:
    path: /otPlatRadioUpdateCslSampleTime
    method: void
    data_selector: parameters
    params: {}
- name: m8
  endpoint:
    path: /reference/struct/ot-ext-address
    method: GET
    data_selector: m8[8]
- name: Link Metrics
  endpoint:
    path: /link/metrics
    method: GET
    data_selector: metrics
- name: m8
  endpoint:
    path: /otMacKey/m8
    method: GET
    data_selector: uint8_t
    params: {}
notes:
- Except as otherwise noted, the content of this page is licensed under the Creative
  Commons Attribution 4.0 License.
- code samples are licensed under the Apache 2.0 License.
- OpenThread's implementation of a Border Router connects a Thread network to other
  IP-based networks.
- Each platform repository specifies some, but not all, of the constants and flags
  that the platform supports.
- OpenThread requires IEEE 802.15.4-2006 for Thread 1.1 and IEEE 802.15.4-2015 for
  Thread 1.2+
- A millisecond-resolution free-running timer with alarm is required.
- Non-volatile storage for storing network configuration settings is necessary.
- A true random number generator (TRNG) is needed.
- OTBR provides bidirectional connectivity between Thread and Wi-Fi/Ethernet networks.
- Uses iptables and ipset for firewall rules.
- This C API reference is for the 2022-10-27 Thread Reference release only (used in
  Thread Test Harness V58.0 for Thread 1.2).
- OpenThread running on the ESP32-H2 is a Thread Certified Component.
- OpenThread running on the STM32WB is a Thread Certified Component.
- The Android Thread stack is based on OpenThread and ot-br-posix which are open-sourced
  by Google in GitHub.
- The default Thread HAL service is not designed to be a generic system component
  which works for all Android devices.
- If the default implementation can't support your device, you are free to make a
  copy and change it for your needs.
- For the ESP-IDF branch, We highly recommend using version 5.1.1 or later.
- You've created a physical Thread network using ESP boards!
- OpenThread is an open-source implementation of the Thread networking protocol.
- The network key randomly generated by OTBR during network creation will be used
  when `ot-cli-ftd` devices join this Thread network.
- OpenThread does not use the NAT64 well-known prefix `64:ff9b::/96`.
- Thread End Devices must obtain the NAT64 prefix from the Thread Network Data.
- Disabling NAT64 will clear the mapping table.
- Commands will vary depending on your device type and build flags.
- Docker containers must be used with RCPs built using Simplicity Studio 5 for a given
  release.
- Uses IPv6 multicast addresses for communication.
- mDNS is not recommended for low power devices due to bandwidth consumption.
- Ensure the avahi daemon is started for service discovery.
- Ping command may fail on Linux hosts with the 'Name or service not known' error.
- OT Daemon is used in the Radio Co-Processor (RCP) design.
- Platform-level configuration constants override the default core ones.
- Compiled code size increases the more logs that are enabled.
- Log levels may be changed at run time if dynamic log level control is enabled.
- Create an otbr-env.list file to store OTBR Docker configurations.
- 'OT_RCP_DEVICE: Specifies the connection to the Thread Radio Co-Processor (RCP).'
- 'OT_INFRA_IF: The network interface used for the adjacent infrastructure network
  (typically Wi-Fi or Ethernet).'
- 'OT_THREAD_IF: The network interface name used for the Thread network.'
- 'OT_LOG_LEVEL: The verbosity level of logs generated by OpenThread.'
- 'Default: mDNSResponder (Engineering Build) (Mar 26 2025 19:39:09) starting'
- NAT64 CIDR updated to 192.168.255.0/24.
- Sensors are easy to install and integrate into smart home solutions.
- Sensors work with the Matter standard for smart home solutions.
- Invisible installation of sensors
- More efficient battery operation
- The API requires specific configurations for each command to function properly.
- Certain commands are only available when specific features are enabled.
- Default CoAP port is 5683 as specified in RFC 7252.
- mAckTimeout * ((2 ** (mMaxRetransmit + 1)) - 1) * (mAckRandomFactorNumerator / mAckRandomFactorDenominator)
  must not exceed what can be represented by a uint32_t (0xffffffff). This limitation
  allows OpenThread to avoid 64-bit arithmetic.
- Uses DTLS for secure communication
- This function requires the build-time feature `MBEDTLS_KEY_EXCHANGE_PSK_ENABLED`
  to be enabled.
- This API is deprecated and use of it is discouraged.
- All tracked entries are timestamped.
- Functions in this module are available when `OPENTHREAD_CONFIG_HISTORY_TRACKER_ENABLE`
  is enabled.
- The fields in this type are opaque (intended for use by OpenThread core) and therefore
  should not be accessed/used by caller.
- An iterator MUST be initialized before it is used.
- This applies when a device is acting as a Border Router, processing received Router
  Advertisements and tracking information about discovered AIL routers.
- Represents a favored on-link prefix on AIL tracked by a device acting as a Border
  Router (BR).
- Represents a unicast IPv6 address info.
- If OPENTHREAD_CONFIG_LOG_PLATFORM or OPENTHREAD_CONFIG_LOG_PKT_DUMP is not set or
  the current log level is below critical this function does not emit any log message.
- If OPENTHREAD_CONFIG_LOG_CLI is not set or the current log level is below the given
  log level, this function does not emit any log message.
- If OPENTHREAD_CONFIG_LOG_LEVEL_DYNAMIC_ENABLE is enabled, this function returns
  the currently set dynamic log level. Otherwise, this function returns the build-time
  configured log level.
- This module includes definitions and functions for Mesh Diagnostics.
- Can only be called while Thread protocols are disabled.
- Contains the statistics of radio.
- All times are calculated from the last reset of radio statistics.
- 'Defines default SNTP Server address - Google NTP Server: 2001:4860:4806:8::'
- 'Defines default SNTP Server port: 123'
- Requires OPENTHREAD_CONFIG_VERHOEFF_CHECKSUM_ENABLE
- This module includes functions that control the OpenThread Instance.
- OpenThread API Reference topics originate from the source code.
- Requires a connection to be active.
- Requires the build-time feature MBEDTLS_SSL_KEEP_PEER_CERTIFICATE to be enabled.
- Requires MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED=1 for certain functions.
- Requires the build-time feature MBEDTLS_KEY_EXCHANGE_PSK_ENABLED to be enabled.
- Uses DNS service discovery.
- Certain methods require specific configurations to be enabled.
- The string buffers pointed to by mKey and mValue MUST persist and remain unchanged
  after an instance of such structure is passed to OpenThread.
- This module controls ICMPv6 communication.
- Requires OPENTHREAD_CONFIG_REFERENCE_DEVICE_ENABLE.
- OPENTHREAD_CONFIG_IP6_SLAAC_ENABLE build-time feature must be enabled.
- The mDNS APIs are available when the mDNS support OPENTHREAD_CONFIG_MULTICAST_DNS_ENABLE
  is enabled and the OPENTHREAD_CONFIG_MULTICAST_DNS_PUBLIC_API_ENABLE is also enabled.
- Requires OPENTHREAD_CONFIG_MULTICAST_DNS_ENTRY_ITERATION_API_ENABLE
- The counters will be reset for each mapping session even for the same address pair.
  Applications can use mId to identify different sessions to calculate the packets
  correctly.
- The fields in this type are opaque (intended for use by OpenThread core only) and
  therefore should not be accessed or used by caller.
- The member fields in this struct are for internal OpenThread stack use and should
  not be accessed directly.
- Functions in this module are only available when feature OPENTHREAD_CONFIG_SRP_CLIENT_BUFFERS_ENABLE
  is enabled.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires OPENTHREAD_CONFIG_BORDER_ROUTING_ENABLE feature.
- This callback is not necessary for correct TCP operation.
- Most applications can just rely on the otTcpSendDone callback.
- Using a circular send buffer is optional.
- Applications can use a TCP endpoint to send data by managing otLinkedBuffers directly.
- Is available when OPENTHREAD_CONFIG_MAC_FILTER_ENABLE configuration is enabled.
- Represents the MAC layer counters.
- This functionality requires OT_LINK_METRICS_INITIATOR feature enabled.
- The functions in this module require OPENTHREAD_CONFIG_P2P_ENABLE=1.
- Available when OPENTHREAD_CONFIG_BACKBONE_ROUTER_ENABLE is enabled.
- By default, the Border Agent service is enabled when the OPENTHREAD_CONFIG_BORDER_AGENT_ENABLE
  feature is used.
- Documentation includes multiple languages for reference.
- Requires OPENTHREAD_CONFIG_BORDER_AGENT_TRACKER_ENABLE
- Requires OPENTHREAD_CONFIG_BORDER_ROUTER_SIGNAL_NETWORK_DATA_FULL.
- All functions in this module require OPENTHREAD_CONFIG_BORDER_ROUTING_ENABLE to
  be enabled.
- Requires OPENTHREAD_CONFIG_BORDER_ROUTING_DHCP6_PD_ENABLE to be enabled.
- The Border Routing Manager is disabled by default.
- Using the on-link prefix will make the BR non-compliant with the Thread Specification.
- Commissioner role must be started before making calls.
- Only use after successfully starting the Commissioner role with otCommissionerStart()
- Requires the build-time feature OPENTHREAD_CONFIG_PLATFORM_KEY_REFERENCES_ENABLE
  to be enabled.
- Succeeds only when Thread protocols are disabled.
- For FTD builds only, Dataset Updater includes functions to manage dataset updates.
- For FTD and MTD builds, the Operational Dataset API includes functions to manage
  Active and Pending datasets and dataset TLVs.
- This API is reserved for testing and demo purposes only. Changing settings with
  this API will render a production application non-compliant with the Thread Specification.
- Maximum size of the PSKc (bytes) is 16.
- Public attributes represent presence of different components in Active or Pending
  Operational Dataset.
- Only used by Thread Test Harness to limit the address registrations of the reference
  parent in order to test the MTD DUT reaction.
- This API requires OPENTHREAD_CONFIG_REFERENCE_DEVICE_ENABLE and is only used for
  test purpose.
- The platform needs to implement Bluetooth LE 4.2 or higher.
- The platform MUST save a copy of the information if it wants to retain the information
  after returning from this function.
- The OpenThread stack may request the unregistration of a service that was not previously
  registered.
- The support for log region is removed and instead each core module can define its
  own name to appended to the logs.
- Only applicable when OPENTHREAD_CONFIG_LOG_LEVEL_DYNAMIC_ENABLE=1.
- The platform MUST monitor and report ALL IPv4 and IPv6 addresses assigned to the
  specified interface.
- The platform MUST cease monitoring for address changes on the interface when mDNS
  is disabled.
- The real transmit power will be no larger than the power specified in the max power
  table for the current channel that was configured by otPlatRadioSetChannelMaxTransmitPower.
- This function should be called by the same thread that executes all of the other
  OpenThread code.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- NAT64 mappings command may show temporary IPv4 address allocated to Thread device.
- 'Error 13: InvalidState'
- 'Invalid Docker image name: Ensure the Docker image matches the GSDK version.'
- 'Name or service not known: Check mDNS configuration.'
- 'Invalid address: Ensure the hostname or IPv6 address is correct.'
- Ensure Docker is running before executing commands.
- Verify device paths such as /dev/ttyACM0.
- 'Invalid parameters: Ensure all required parameters are provided.'
- 'Command not supported: Refer to the documentation for available commands.'
- 'OT_ERROR_FAILED: Failed to start the CoAP server.'
- 'OT_ERROR_NONE: Successfully started the CoAP Secure server.'
- 'OT_ERROR_ALREADY: Already started.'
- 'Invalid parameters: Ensure the iterator is initialized before use.'
- 'OT_ERROR_NONE: Successfully updated log level.'
- 'OT_ERROR_INVALID_ARGS: Log level value is invalid.'
- 'OT_ERROR_INVALID_ARGS: The aDecimalString is not valid, i.e. it either contains
  chars other than [''0''-''9''], or is longer than OT_VERHOEFF_CHECKSUM_MAX_STRING_LENGTH.'
- OT_ERROR_NONE = 0
- OT_ERROR_FAILED = 1
- OT_ERROR_DROP = 2
- OT_ERROR_NO_BUFS = 3
- OT_ERROR_NO_ROUTE = 4
- OT_ERROR_BUSY = 5
- OT_ERROR_PARSE = 6
- OT_ERROR_INVALID_ARGS = 7
- OT_ERROR_SECURITY = 8
- OT_ERROR_ADDRESS_QUERY = 9
- OT_ERROR_NO_ADDRESS = 10
- OT_ERROR_ABORT = 11
- OT_ERROR_NOT_IMPLEMENTED = 12
- OT_ERROR_INVALID_STATE = 13
- OT_ERROR_NO_ACK = 14
- OT_ERROR_CHANNEL_ACCESS_FAILURE = 15
- OT_ERROR_DETACHED = 16
- OT_ERROR_FCS = 17
- OT_ERROR_NO_FRAME_RECEIVED = 18
- OT_ERROR_UNKNOWN_NEIGHBOR = 19
- OT_ERROR_INVALID_SOURCE_ADDRESS = 20
- OT_ERROR_ADDRESS_FILTERED = 21
- OT_ERROR_DESTINATION_ADDRESS_FILTERED = 22
- OT_ERROR_NOT_FOUND = 23
- OT_ERROR_ALREADY = 24
- OT_ERROR_IP6_ADDRESS_CREATION_FAILURE = 26
- OT_ERROR_NOT_CAPABLE = 27
- OT_ERROR_RESPONSE_TIMEOUT = 28
- OT_ERROR_DUPLICATED = 29
- OT_ERROR_REASSEMBLY_TIMEOUT = 30
- OT_ERROR_NOT_TMF = 31
- OT_ERROR_NOT_LOWPAN_DATA_FRAME = 32
- OT_ERROR_LINK_MARGIN_LOW = 34
- OT_ERROR_INVALID_COMMAND = 35
- OT_ERROR_PENDING = 36
- OT_ERROR_REJECTED = 37
- OT_NUM_ERRORS
- OT_ERROR_GENERIC = 255
- 'OT_ERROR_NONE: Successfully completed operation.'
- 'OT_ERROR_INVALID_ARGS: Invalid argument(s) provided.'
- 'OT_ERROR_FAILED: Operation failed due to unspecified reasons.'
- 'OT_ERROR_ALREADY: Operation already completed or service already started.'
- 'OT_ERROR_NO_BUFS: Failed to allocate buffer memory.'
- 'OT_ERROR_NONE: Successful operation'
- 'OT_ERROR_NOT_FOUND: Reached the end of the list'
- 'OT_ERROR_INVALID_ARG: Iterator is not valid'
- 'OT_ERROR_INVALID_STATE: mDNS module is not enabled'
- 'OT_ERROR_DULICATED: Name conflict while probing'
- 'OT_ERROR_NONE: Operation successful.'
- 'OT_ERROR_INVALID_STATE: mDNS module is not enabled.'
- 'OT_ERROR_NONE: The addition of service started successfully.'
- 'OT_ERROR_ALREADY: A service with the same service and instance names is already
  in the list.'
- 'OT_ERROR_INVALID_ARGS: The service structure is invalid.'
- 'OT_ERROR_UNKNOWN_NEIGHBOR: aDestination is not link-local or the neighbor is not
  found.'
- 'OT_ERROR_NOT_CAPABLE: The neighbor is not a Thread 1.2 device and does not support
  Link Metrics.'
- 'OT_ERROR_INVALID_STATE: The Border Routing Manager is not initialized yet.'
- 'OT_ERROR_NONE: Successfully retrieved the favored prefix.'
- 'OT_ERROR_NONE: Successfully enabled/disabled the Border Routing Manager.'
- 'OT_ERROR_NO_BUFS: Could not allocate buffer to save the buffer.'
- 'OT_ERROR_INVALID_ARGS: The provided custom OMR prefix is invalid.'
- 'OT_ERROR_NOT_FOUND: The Joiner specified was not found.'
- 'OT_ERROR_INVALID_ARGS: Invalid arguments provided.'
- 'OT_ERROR_INVALID_STATE: The commissioner is not active.'
- 'OT_ERROR_INVALID_STATE: Thread protocols are enabled.'
- 'OT_ERROR_INVALID_ARGS: Argument is not valid.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'OT_ERROR_NONE: Successfully executed the command.'
- 'OT_ERROR_NOT_FOUND: No corresponding value in the setting store.'
- 'OT_ERROR_NONE: Operation succeeded.'
- 'OT_ERROR_FAILED: Operation failed.'
- 'OT_ERROR_NOT_FOUND: Indicate that there was no such registration.'
- 'OT_ERROR_NONE: Used when invoking the callback function.'
- Log level changes may not be reflected if dynamic logging is not enabled.
- 'OT_ERROR_NONE: Successfully set the transmit power.'
- 'OT_ERROR_NOT_IMPLEMENTED: Transmit power configuration via dBm is not implemented.'
auth_info:
  mentioned_objects:
  - otHistoryTrackerFavoredOmrPrefix
client:
  base_url: https://openthread.io
  headers:
    Accept: application/json
source_metadata: null
