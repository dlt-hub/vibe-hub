resources:
- name: Camera Settings
  endpoint:
    path: /developer-tools/motive-api/camera-settings
    method: GET
- name: Rigid Body Tracking
  endpoint:
    path: /developer-tools/motive-api/rigid-body-tracking
    method: GET
- name: initialize
  endpoint:
    path: /initialize
    method: POST
    data_selector: result
    params: {}
- name: update
  endpoint:
    path: /update
    method: POST
    data_selector: result
    params: {}
- name: shutdown
  endpoint:
    path: /shutdown
    method: POST
    data_selector: result
    params: {}
- name: load_profile
  endpoint:
    path: /loadProfile
    method: POST
    data_selector: result
    params: {}
- name: load_calibration
  endpoint:
    path: /loadCalibration
    method: POST
    data_selector: result
    params: {}
- name: LoadProfile
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#tt_loadprofile-tt_loadprofilew
    method: POST
    data_selector: function
- name: LoadRigidBodies
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#tt_loadrigidbodies-tt_loadrigidbodiesw
    method: POST
    data_selector: function
- name: AddRigidBodies
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#tt_addrigidbodies-tt_addrigidbodiesw
    method: POST
    data_selector: function
- name: CreateRigidBody
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#tt_createrigidbody-tt_createrigidbodyw
    method: POST
    data_selector: function
- name: RigidBodyTransform
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#tt_rigidbodytransform-tt_rigidbodytransformw
    method: POST
    data_selector: function
- name: StreamNP
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#streamnp
    method: POST
    data_selector: function
- name: StreamVRPN
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#streamvrpn
    method: POST
    data_selector: function
- name: Color Camera Setup Hardware Requirements
  endpoint:
    path: /movement-sciences/prime-color-camera-setup
    method: GET
    data_selector: hardware_requirements
- name: Windows Setup
  endpoint:
    path: /movement-sciences/prime-color-camera-setup
    method: GET
    data_selector: windows_setup
- name: Network Setup
  endpoint:
    path: /movement-sciences/prime-color-camera-setup
    method: GET
    data_selector: network_setup
- name: Active Marker Tracking
  endpoint:
    path: /robotics/active-marker-tracking
    method: GET
    data_selector: records
- name: camera_status
  endpoint:
    path: /cameras/status
    method: GET
    data_selector: status
- name: License Activation Tool
  endpoint:
    path: /support/license-activation-tool
    method: GET
    data_selector: license_info
- name: Check My License
  endpoint:
    path: /support/check-my-license
    method: GET
    data_selector: license_details
- name: calibration_results
  endpoint:
    path: /calibration/results
    method: GET
    data_selector: results
    params: {}
- name: calibration_files
  endpoint:
    path: /calibration/files
    method: GET
    data_selector: files
    params: {}
- name: camera_properties
  endpoint:
    path: /camera/properties
    method: GET
    data_selector: CameraProperties
    params: {}
- name: attributes
  endpoint:
    path: /camera/attributes
    method: GET
    data_selector: Attributes
    params: {}
- name: intrinsic_values
  endpoint:
    path: /camera/intrinsics
    method: GET
    data_selector: IntrinsicValues
    params: {}
- name: extrinsic_values
  endpoint:
    path: /camera/extrinsics
    method: GET
    data_selector: ExtrinsicValues
    params: {}
- name: camera_software_filters
  endpoint:
    path: /camera/software_filters
    method: GET
    data_selector: CameraSoftwareFilters
    params: {}
- name: camera_hardware_filters
  endpoint:
    path: /camera/hardware_filters
    method: GET
    data_selector: CameraHardwareFilters
    params: {}
- name: continuous_calibration
  endpoint:
    path: /camera/calibration
    method: GET
    data_selector: ContinuousCalibration
    params: {}
- name: color_camera_properties
  endpoint:
    path: /camera/color_properties
    method: GET
    data_selector: ColorCameraProperties
    params: {}
- name: anchor_markers
  endpoint:
    path: /motive-ui-panes/calibration-pane
    method: GET
    data_selector: markers
    params: {}
- name: camera_partitions
  endpoint:
    path: /motive-ui-panes/settings/settings-general
    method: GET
    data_selector: partitions
    params: {}
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: assets
    params: {}
- name: Rigid Body
  endpoint:
    path: /rigid-body
    method: GET
    data_selector: rigidBodies
    params: {}
- name: Auto-Generate Asset
  endpoint:
    path: /api/v1/auto-generate-asset
    method: POST
    data_selector: asset
- name: Add Marker Training
  endpoint:
    path: /api/v1/add-marker-training
    method: POST
    data_selector: training
- name: Remove Marker Training
  endpoint:
    path: /api/v1/remove-marker-training
    method: DELETE
    data_selector: training
- name: Auto-Generate Bones
  endpoint:
    path: /api/v1/auto-generate-bones
    method: POST
    data_selector: bones
- name: Refine Bone Positions
  endpoint:
    path: /api/v1/refine-bone-positions
    method: PATCH
    data_selector: refinement
- name: Refine Constraints Positions
  endpoint:
    path: /api/v1/refine-constraints-positions
    method: PATCH
    data_selector: refinement
- name: Active Tag
  endpoint:
    path: /motive/imu-sensor-fusion/active-tag
    method: GET
    data_selector: tags
    params: {}
- name: Rigid Body
  endpoint:
    path: /motive/imu-sensor-fusion/rb
    method: GET
    data_selector: rigid_bodies
    params: {}
- name: Rigid Body Properties
  endpoint:
    path: /imu/sensor-fusion/rigid-body-properties
    method: GET
    data_selector: properties
    params: {}
- name: IMU Constraint
  endpoint:
    path: /imu/sensor-fusion/constraints
    method: GET
    data_selector: constraints
    params: {}
- name: Active Debugging
  endpoint:
    path: /imu/sensor-fusion/debugging
    method: GET
    data_selector: debugging_info
    params: {}
- name: BaseStation Load Capacity
  endpoint:
    path: /imu/sensor-fusion/base-station-load
    method: GET
    data_selector: base_station_capacity
    params: {}
- name: 2D data
  endpoint:
    path: /motive/data-recording/data-types#2d-data
    method: DELETE
    data_selector: 2D data
    params: {}
- name: 3D data
  endpoint:
    path: /motive/data-recording/data-types#3d-data
    method: DELETE
    data_selector: 3D data
    params: {}
- name: Solved Data
  endpoint:
    path: /motive/data-recording/data-types#solved-data
    method: DELETE
    data_selector: Solved Data
    params: {}
- name: Edit Tools
  endpoint:
    path: /motive-ui-panes/edit-tools-pane
    method: GET
    data_selector: edit_tools
    params: {}
- name: Labels Pane
  endpoint:
    path: /motive-ui-panes/labels-pane
    method: GET
    data_selector: labels
    params: {}
- name: Graph Pane
  endpoint:
    path: /motive-ui-panes/graph-view-pane
    method: GET
    data_selector: graph
    params: {}
- name: Control Deck
  endpoint:
    path: /motive-ui-panes/control-deck
    method: GET
    data_selector: control_deck
    params: {}
- name: tracking_data_export
  endpoint:
    path: /motive-ui-panes/data-pane
    method: GET
    data_selector: export_options
    params: {}
- name: camera_calibration_export
  endpoint:
    path: /export-camera-calibration
    method: GET
    data_selector: calibration_data
    params: {}
- name: assets_definition_export
  endpoint:
    path: /export-assets
    method: GET
    data_selector: assets_data
    params: {}
- name: analog_data_export
  endpoint:
    path: /export-analog-data
    method: GET
    data_selector: analog_data
    params: {}
- name: video_export
  endpoint:
    path: /export-video
    method: GET
    data_selector: video_data
    params: {}
- name: audio_export
  endpoint:
    path: /export-audio
    method: GET
    data_selector: audio_data
    params: {}
- name: SkeletonMarkerLabels
  endpoint:
    path: /data/export/skeleton_marker_labels
    method: GET
    data_selector: MarkerNames
- name: DeviceInfo
  endpoint:
    path: /data/export/device_info
    method: GET
    data_selector: devices
- name: tracking_data
  endpoint:
    path: /motive/data-export/csv
    method: GET
    data_selector: records
- name: NatNet Streaming
  endpoint:
    path: /developer-tools/natnet-sdk
    method: GET
    data_selector: data
    params: {}
- name: video_types
  endpoint:
    path: /motive/camera-video-types
    method: GET
    data_selector: video_types
- name: Batch Processor Script
  endpoint:
    path: C:\Program Files\OptiTrack\Motive\MotiveBatchProcessor\src
    method: GET
    data_selector: scripts
    params: {}
- name: Help Reference
  endpoint:
    path: C:\Program Files\OptiTrack\Motive\Help\NMotiveAPI.chm
    method: GET
    data_selector: help
    params: {}
- name: Rigid_Bodies
  endpoint:
    path: /motive-ui-panes/properties-pane/properties-pane-rigid-body
    method: GET
    data_selector: Rigid Bodies Basic Settings
    params: {}
- name: Skeletons
  endpoint:
    path: /motive-ui-panes/properties-pane/properties-pane-Skeleton
    method: GET
    data_selector: Skeleton Basic Settings
    params: {}
- name: NatNet Basic Settings
  endpoint:
    path: /motive/data-streaming
    method: GET
    data_selector: settings
    params: {}
- name: NatNet Advanced Settings
  endpoint:
    path: /motive/data-streaming
    method: GET
    data_selector: advanced_settings
    params: {}
- name: VRPN Streaming Engine
  endpoint:
    path: /motive/data-streaming
    method: GET
    data_selector: vrpn_streaming
    params: {}
- name: 2D View Settings
  endpoint:
    path: /settings/views/2d
    method: GET
    data_selector: settings
- name: 3D View Settings
  endpoint:
    path: /settings/views/3d
    method: GET
    data_selector: settings
- name: rigid_body
  endpoint:
    path: /api/rigid_body
    method: POST
    data_selector: data
    params: {}
- name: rigid_body
  endpoint:
    path: /motive-ui-panes/builder-pane#rigid-body-create
    method: GET
    data_selector: trackable models
- name: hmd_rigid_body
  endpoint:
    path: /motive-ui-panes/builder-pane#hmd-rigid-body-create
    method: GET
    data_selector: HMD tracking
- name: measurement_probe
  endpoint:
    path: /motive-ui-panes/builder-pane#measurement-probe-create
    method: GET
    data_selector: probe tracking
- name: Rigid Body
  endpoint:
    path: /motive/assets/rb
    method: GET
    data_selector: pivot_point
    params: {}
- name: Skeleton
  endpoint:
    path: /motive/assets/skeleton
    method: GET
    data_selector: skeleton_data
    params: {}
- name: trained_markerset
  endpoint:
    path: /motive/trained-markersets
    method: POST
    data_selector: assets
    params: {}
- name: constraints
  endpoint:
    path: /motive/constraints
    method: GET
    data_selector: constraints
    params: {}
- name: session_folders
  endpoint:
    path: /services/data/vXX.X/sobjects/SessionFolder
    method: GET
    data_selector: records
- name: takes
  endpoint:
    path: /services/data/vXX.X/sobjects/Takes
    method: GET
    data_selector: records
- name: session_folders
  endpoint:
    path: /path/to/session_folders
    method: GET
    data_selector: folders
- name: takes
  endpoint:
    path: /path/to/takes
    method: GET
    data_selector: takes
- name: shot_list
  endpoint:
    path: /import/shot_list
    method: POST
    data_selector: data
    params: {}
- name: export_shot_list
  endpoint:
    path: /export/shot_list
    method: GET
    data_selector: data
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
- name: color_camera_presets
  endpoint:
    path: /motive-ui-panes/devices-pane/color-camera-presets
    method: GET
    data_selector: presets
    params: {}
- name: synchronization_devices
  endpoint:
    path: /motive-ui-panes/devices-pane/synchronization-devices
    method: GET
    data_selector: synchronizationDevices
    params: {}
- name: active_tags
  endpoint:
    path: /motive-ui-panes/devices-pane/active-tags
    method: GET
    data_selector: activeTags
    params: {}
- name: force_plates
  endpoint:
    path: /motive-ui-panes/devices-pane/force-plates
    method: GET
    data_selector: forcePlates
    params: {}
- name: System Layouts
  endpoint:
    path: /api/system_layouts
    method: GET
    data_selector: layouts
    params: {}
- name: User Layouts
  endpoint:
    path: /api/user_layouts
    method: GET
    data_selector: layouts
    params: {}
- name: Custom Layouts
  endpoint:
    path: /api/custom_layouts
    method: GET
    data_selector: layouts
    params: {}
- name: Marker
  endpoint:
    path: /api/marker
    method: GET
    data_selector: data
- name: Rigid Body
  endpoint:
    path: /api/rigidbody
    method: GET
    data_selector: data
- name: Device
  endpoint:
    path: /api/device
    method: GET
    data_selector: data
- name: Force Plate
  endpoint:
    path: /api/forceplate
    method: GET
    data_selector: data
- name: IMU
  endpoint:
    path: /api/imu
    method: GET
    data_selector: data
- name: measurement_tool
  endpoint:
    path: /motive/measurement_tool
    method: GET
    data_selector: tools
- name: rigid_bodies
  endpoint:
    path: /motive/rigid_bodies
    method: GET
    data_selector: tracking_info
- name: continuous_calibration
  endpoint:
    path: /motive/continuous_calibration
    method: GET
    data_selector: calibration_updates
- name: active_debugging
  endpoint:
    path: /motive/active_debugging
    method: GET
    data_selector: imu_data
- name: status_messages
  endpoint:
    path: /log/status/messages
    method: GET
    data_selector: messages
- name: log_history
  endpoint:
    path: /log/history
    method: GET
    data_selector: history
- name: digitized_points
  endpoint:
    path: /measurements.csv
    method: GET
- name: camera_properties
  endpoint:
    path: /api/camera/properties
    method: GET
    data_selector: properties
    params: {}
- name: bit_rate
  endpoint:
    path: /bit_rate
    method: GET
    data_selector: bit_rate
    params: {}
- name: gamma
  endpoint:
    path: /gamma
    method: GET
    data_selector: gamma
    params: {}
- name: force_plate_properties
  endpoint:
    path: /movement-sciences/movement-sciences-hardware/force-plate-properties
    method: GET
    data_selector: properties
    params: {}
- name: Rigid Body Properties
  endpoint:
    path: /motive-ui-panes/properties-pane/rigid-body-properties
    method: GET
    data_selector: properties
- name: skeleton
  endpoint:
    path: /properties/skeleton
    method: GET
    data_selector: properties
    params: {}
- name: take_properties
  endpoint:
    path: /motive/takes/properties
    method: GET
    data_selector: properties
    params: {}
- name: calibration_info
  endpoint:
    path: /motive/takes/calibration
    method: GET
    data_selector: calibration
    params: {}
- name: camera_filters
  endpoint:
    path: /motive/takes/camera_filters
    method: GET
    data_selector: filters
    params: {}
- name: solver_settings
  endpoint:
    path: /motive/takes/solver
    method: GET
    data_selector: solver
    params: {}
- name: trained_markerset
  endpoint:
    path: /services/data/v3.3/sobjects/TrainedMarkerset
    method: GET
    data_selector: records
    params: {}
- name: trained_markerset_properties
  endpoint:
    path: /motive/trained-markersets
    method: GET
    data_selector: properties
    params: {}
- name: camera
  endpoint:
    path: /services/data/vXX.X/sobjects/Camera
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Motive Data Streaming
  endpoint:
    path: /motive/data/streaming
    method: POST
    data_selector: streamData
    params: {}
- name: OptiTrack Source
  endpoint:
    path: /plugins/optitrack-unreal-engine-plugin
    method: GET
    data_selector: records
- name: motion_data
  endpoint:
    path: /api/motion_data
    method: GET
    data_selector: records
- name: Motive Setup
  endpoint:
    path: /motive/data-streaming
    method: GET
- name: Unreal Engine Setup
  endpoint:
    path: /unreal/engine/setup
    method: GET
- name: HMD Setup
  endpoint:
    path: /plugins/optitrack-openvr-driver
    method: GET
    data_selector: instructions
- name: OptiTrack Plugins
  endpoint:
    path: /plugins/optitrack-unreal-engine-plugin
    method: GET
    data_selector: plugins
- name: HMD
  endpoint:
    path: /motive/rigid-body-tracking
    method: GET
    data_selector: Rigid Body ID
    params: {}
- name: HMD
  endpoint:
    path: /motive/rigid-body-tracking
    method: GET
    data_selector: Rigid Body ID
    params: {}
- name: Controller
  endpoint:
    path: /motive/rigid-body-tracking
    method: GET
    data_selector: Streaming ID
    params: {}
- name: OptiSample_RigidBodyGraph
  endpoint:
    path: /OptiSample_RigidBodyGraph
    method: GET
    data_selector: data
    params: {}
- name: Optisample_AllTypesPolling
  endpoint:
    path: /Optisample_AllTypesPolling
    method: GET
    data_selector: data
    params: {}
- name: OptiSample_RigidBodyMarkerData
  endpoint:
    path: /OptiSample_RigidBodyMarkerData
    method: GET
    data_selector: data
    params: {}
- name: OptiSample_RigidBodyPoseData
  endpoint:
    path: /OptiSample_RigidBodyPoseData
    method: GET
    data_selector: data
    params: {}
- name: Motive Connection
  endpoint:
    path: /motive/data-streaming
    method: GET
    data_selector: data
    params: {}
- name: skeleton_data
  endpoint:
    path: /streaming/data
    method: GET
    data_selector: skeletons
    params: {}
- name: Rigid Bodies
  endpoint:
    path: /streaming/rigidbodies
    method: GET
    data_selector: rigidBodies
- name: Skeletons
  endpoint:
    path: /streaming/skeletons
    method: GET
    data_selector: skeletons
- name: Markers
  endpoint:
    path: /streaming/markers
    method: GET
    data_selector: markers
- name: active_marker_led_specifications
  endpoint:
    path: /active_marker_led_specifications
    method: GET
    data_selector: specifications
    params: {}
- name: basic_specs
  endpoint:
    path: /basic_specs
    method: GET
    data_selector: specifications
    params: {}
- name: Camera
  endpoint:
    path: /services/data/vXX.X/camera
    method: GET
    data_selector: records
- name: motive_data
  endpoint:
    path: /services/data/vXX.X/sobjects/MotiveData
    method: GET
    data_selector: records
- name: Baseline (41)
  endpoint:
    path: /markersets/full-body/baseline-41
    method: GET
- name: Baseline + Passive Fingers (49)
  endpoint:
    path: /markersets/full-body-+-fingers/baseline-+-passive-fingers-49
    method: GET
- name: Baseline + ActiveFingers (57)
  endpoint:
    path: /active-components/active-marker-tracking/active-finger-markerset
    method: GET
- name: Baseline Upper (25)
  endpoint:
    path: /markersets/upper/baseline-upper-25
    method: GET
- name: Baseline Lower (20)
  endpoint:
    path: /markersets/lower/baseline-lower-20
    method: GET
- name: Core (50)
  endpoint:
    path: /markersets/full-body/core-50
    method: GET
- name: Core + Passive Fingers (54)
  endpoint:
    path: /markersets/full-body-+-fingers/core-+-passive-fingers-54
    method: GET
- name: Core + ActiveFingers (62)
  endpoint:
    path: /active-components/active-marker-tracking/active-finger-markerset
    method: GET
- name: Kistler Force Plate
  endpoint:
    path: /movement-sciences/movement-sciences-hardware/kistler-force-plate-setup
    method: GET
    data_selector: devices
    params: {}
- name: head_markers
  endpoint:
    path: /movement-sciences/biomech/head_markers
    method: GET
    data_selector: markers
    params: {}
- name: torso_markers
  endpoint:
    path: /movement-sciences/biomech/torso_markers
    method: GET
    data_selector: markers
    params: {}
- name: waist_markers
  endpoint:
    path: /movement-sciences/biomech/waist_markers
    method: GET
    data_selector: markers
    params: {}
- name: upper_extremity_markers
  endpoint:
    path: /movement-sciences/biomech/upper_extremity_markers
    method: GET
    data_selector: markers
    params: {}
- name: hand_markers
  endpoint:
    path: /movement-sciences/biomech/hand_markers
    method: GET
    data_selector: markers
    params: {}
- name: lower_extremity_markers
  endpoint:
    path: /movement-sciences/biomech/lower_extremity_markers
    method: GET
    data_selector: markers
    params: {}
- name: foot_markers
  endpoint:
    path: /movement-sciences/biomech/foot_markers
    method: GET
    data_selector: markers
    params: {}
- name: C3D Export
  endpoint:
    path: /c3d/export
    method: POST
    data_selector: exportOptions
    params: {}
- name: Streaming to Visual3D
  endpoint:
    path: /stream/visual3d
    method: POST
    data_selector: streamingOptions
    params: {}
- name: Motive API Overview
  endpoint:
    path: /developer-tools/motive-api/motive-api-overview
    method: GET
    data_selector: records
    params: {}
- name: 'Motive API: Function Reference'
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference
    method: GET
    data_selector: records
    params: {}
- name: HMD Setup
  endpoint:
    path: /virtual-reality/vr-plugins/vr-openvr/optitrack-openvr-driver
    method: GET
    data_selector: data
    params: {}
- name: HMD Setup
  endpoint:
    path: /plugins/optitrack-openvr-driver
    method: GET
    data_selector: instructions
    params: {}
- name: Marker Types
  endpoint:
    path: /active-components/active-marker-tracking
    method: GET
    data_selector: marker_types
    params: {}
- name: Rigid Body Tracking
  endpoint:
    path: /motive/rigid-body-tracking
    method: GET
    data_selector: tracking_info
    params: {}
- name: Streaming
  endpoint:
    path: /motive-ui-panes/settings/settings-streaming
    method: GET
    data_selector: streaming_settings
    params: {}
- name: sync_configuration
  endpoint:
    path: /plugins/optitrack-openvr-driver
    method: GET
    data_selector: sync_settings
    params: {}
- name: motive_api_overview
  endpoint:
    path: /motive/api/overview
    method: GET
    data_selector: records
- name: camera_calibration
  endpoint:
    path: /motive/api/camera/calibration
    method: GET
    data_selector: records
- name: OptiTrack - Skeleton
  endpoint:
    path: /optitrack/skeleton
    method: GET
    data_selector: records
- name: OptiTrack - Optical
  endpoint:
    path: /optitrack/optical
    method: GET
    data_selector: records
- name: OptiTrack - Insight VCS
  endpoint:
    path: /optitrack/insight-vcs
    method: GET
    data_selector: records
- name: Camera SDK
  endpoint:
    path: /developer-tools/camera-sdk
    method: GET
- name: Motive API
  endpoint:
    path: /developer-tools/motive-api
    method: GET
- name: NatNet SDK
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-4.0
    method: GET
- name: RigidBodyCount
  endpoint:
    path: /rigidbodycount
    method: GET
    data_selector: RigidBodyCount
    params: {}
- name: CreateRigidBody
  endpoint:
    path: /createrigidbody
    method: POST
    data_selector: CreateRigidBody
    params: {}
- name: SetRigidBodyProperty
  endpoint:
    path: /setrigidbodyproperty
    method: POST
    data_selector: SetRigidBodyProperty
    params: {}
- name: ClearRigidBodies
  endpoint:
    path: /clearrigidbodies
    method: POST
    data_selector: ClearRigidBodies
    params: {}
- name: LoadRigidBodies
  endpoint:
    path: /loadrigidbodies
    method: POST
    data_selector: LoadRigidBodies
    params: {}
- name: AddRigidBodies
  endpoint:
    path: /addrigidbodies
    method: POST
    data_selector: AddRigidBodies
    params: {}
- name: SaveRigidBodies
  endpoint:
    path: /saverigidbodies
    method: POST
    data_selector: SaveRigidBodies
    params: {}
- name: RigidBodyID
  endpoint:
    path: /rigidbodyid
    method: GET
    data_selector: RigidBodyID
    params: {}
- name: RigidBodyName
  endpoint:
    path: /rigidbodyname
    method: GET
    data_selector: RigidBodyName
    params: {}
- name: IsRigidBodyTracked
  endpoint:
    path: /isrigidbodytracked
    method: GET
    data_selector: IsRigidBodyTracked
    params: {}
- name: RemoveRigidBody
  endpoint:
    path: /removerigidbody
    method: POST
    data_selector: RemoveRigidBody
    params: {}
- name: SetRigidBodyEnabled
  endpoint:
    path: /setrigidbodyenabled
    method: POST
    data_selector: SetRigidBodyEnabled
    params: {}
- name: RigidBodyEnabled
  endpoint:
    path: /rigidbodyenabled
    method: GET
    data_selector: RigidBodyEnabled
    params: {}
- name: RigidBodyTranslatePivot
  endpoint:
    path: /rigidbodytranslatepivot
    method: POST
    data_selector: RigidBodyTranslatePivot
    params: {}
- name: RigidBodyResetOrientation
  endpoint:
    path: /rigidbodyresetorientation
    method: POST
    data_selector: RigidBodyResetOrientation
    params: {}
- name: RigidBodyMarkerCount
  endpoint:
    path: /rigidbodymarkercount
    method: GET
    data_selector: RigidBodyMarkerCount
    params: {}
- name: RigidBodyMarker
  endpoint:
    path: /rigidbodymarker
    method: GET
    data_selector: RigidBodyMarker
    params: {}
- name: RigidBodyUpdateMarker
  endpoint:
    path: /rigidbodyupdatemarker
    method: POST
    data_selector: RigidBodyUpdateMarker
    params: {}
- name: RigidBodyReconstructedMarker
  endpoint:
    path: /rigidbodyreconstructedmarker
    method: GET
    data_selector: RigidBodyReconstructedMarker
    params: {}
- name: RigidBodyMeanError
  endpoint:
    path: /rigidbodymeanerror
    method: GET
    data_selector: RigidBodyMeanError
    params: {}
- name: RigidBodyRefineStart
  endpoint:
    path: /rigidbody/refine/start
    method: POST
    data_selector: result
    params: {}
- name: RigidBodyRefineSample
  endpoint:
    path: /rigidbody/refine/sample
    method: POST
    data_selector: result
    params: {}
- name: RigidBodyRefineState
  endpoint:
    path: /rigidbody/refine/state
    method: GET
    data_selector: state
    params: {}
- name: RigidBodyRefineProgress
  endpoint:
    path: /rigidbody/refine/progress
    method: GET
    data_selector: progress
    params: {}
- name: RigidBodyRefineInitialError
  endpoint:
    path: /rigidbody/refine/initialerror
    method: GET
    data_selector: initialError
    params: {}
- name: RigidBodyRefineResultError
  endpoint:
    path: /rigidbody/refine/resulterror
    method: GET
    data_selector: resultError
    params: {}
- name: RigidBodyRefineApplyResult
  endpoint:
    path: /rigidbody/refine/applyresult
    method: POST
    data_selector: result
    params: {}
- name: RigidBodyRefineReset
  endpoint:
    path: /rigidbody/refine/reset
    method: POST
    data_selector: result
    params: {}
- name: CameraCount
  endpoint:
    path: /camera/count
    method: GET
    data_selector: count
    params: {}
- name: CameraGroupCount
  endpoint:
    path: /camera/group/count
    method: GET
    data_selector: groupCount
    params: {}
- name: CameraGroup
  endpoint:
    path: /camera/group
    method: GET
    data_selector: groupIndex
    params: {}
- name: CameraSerial
  endpoint:
    path: /camera/serial
    method: GET
    data_selector: serialNumber
    params: {}
- name: CameraObjectCount
  endpoint:
    path: /camera/object/count
    method: GET
    data_selector: objectCount
    params: {}
- name: CameraObject
  endpoint:
    path: /camera/object
    method: GET
    data_selector: location
    params: {}
- name: CameraObjectPredistorted
  endpoint:
    path: /camera/object/predistorted
    method: GET
    data_selector: predistortedLocation
    params: {}
- name: SetCameraProperty
  endpoint:
    path: /camera/property/set
    method: POST
    data_selector: result
    params: {}
- name: CameraGrayscaleDecimation
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameragrayscaledecimation
    method: GET
    data_selector: decimation ratio
    params: {}
- name: CameraIsContinuousIRAvailable
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraiscontinuousiravailable
    method: GET
    data_selector: availability
    params: {}
- name: CameraSetContinuousIR
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#camerasetcontinuousir
    method: POST
    data_selector: success
    params: {}
- name: CameraContinuousIR
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameracontinuousir
    method: GET
    data_selector: state
    params: {}
- name: SetCameraSystemFrameRate
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#setcamerasystemframerate
    method: POST
    data_selector: success
    params: {}
- name: CameraSystemFrameRate
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#camerasystemframerate
    method: GET
    data_selector: frame rate
    params: {}
- name: CameraTemperature
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameratemperature
    method: GET
    data_selector: temperature
    params: {}
- name: CameraRinglightTemperature
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraringlighttemperature
    method: GET
    data_selector: temperature
    params: {}
- name: SetCameraAGC
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#setcameraagc
    method: POST
    data_selector: success
    params: {}
- name: SetCameraAEC
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#setcameraaec
    method: POST
    data_selector: success
    params: {}
- name: CameraImagerGainLevels
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraimagergainlevels
    method: GET
    data_selector: gain levels
    params: {}
- name: ClearCameraMask
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#clearcameramask
    method: GET
    data_selector: none
- name: SetCameraMask
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#setcameramask
    method: GET
    data_selector: none
- name: CameraMask
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameramask
    method: GET
    data_selector: none
- name: CameraMaskInfo
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameramaskinfo
    method: GET
    data_selector: none
- name: AutoMaskAllCameras
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#automaskallcameras
    method: GET
    data_selector: none
- name: SetCameraState
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#setcamerastate
    method: GET
    data_selector: none
- name: CameraState
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#camerastate
    method: GET
    data_selector: none
- name: CameraID
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraid
    method: GET
    data_selector: none
- name: CameraFrameBuffer
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraframebuffer
    method: GET
    data_selector: none
- name: CameraFrameBufferSaveAsBMP
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraframebuffersaveasbmp
    method: GET
    data_selector: none
- name: CameraBackproject
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#camerabackproject
    method: GET
    data_selector: none
- name: CameraUndistort2DPoint
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraundistort2dpoint
    method: GET
    data_selector: none
- name: CameraDistort2DPoint
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameradistort2dpoint
    method: GET
    data_selector: none
- name: CameraRay
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#cameraray
    method: GET
    data_selector: none
- name: SetCameraPose
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#setcamerapose
    method: GET
    data_selector: none
- name: GetCamera
  endpoint:
    path: /developer-tools/motive-api/motive-api-function-reference#getcamera
    method: GET
    data_selector: none
- name: ServerDescriptor
  endpoint:
    path: /GetServerDescription
    method: GET
    data_selector: ServerDescription
    params: {}
- name: DataDescriptions
  endpoint:
    path: /GetDataDescriptions
    method: GET
    data_selector: DataDescriptions
    params: {}
- name: FrameOfMocapData
  endpoint:
    path: /GetLastFrameOfData
    method: GET
    data_selector: FrameOfMocapData
    params: {}
- name: server_description
  endpoint:
    path: /getServerDescription
    method: GET
    data_selector: description
- name: data_descriptions
  endpoint:
    path: /getDataDescriptions
    method: GET
    data_selector: data_descriptions
- name: frame_of_mocap_data
  endpoint:
    path: /getFrameOfMocapData
    method: GET
    data_selector: frame_data
- name: Dataset Descriptions
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-client/getdatadescriptionlist
    method: GET
    data_selector: sDataSetDescriptions
- name: Server Description
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-client/getserverdescription
    method: GET
    data_selector: sServerDescription
- name: Frame of Mocap Data
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-client/setframereceivedcallback
    method: GET
    data_selector: sFrameOfMocapData
- name: mocap_data
  endpoint:
    path: /motive/data-streaming
    method: GET
    data_selector: dataPacket
    params: {}
- name: remote_commands
  endpoint:
    path: /remote/commands
    method: POST
    data_selector: commands
    params: {}
- name: Matlab
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#running-the-matlab-sample
    method: GET
    data_selector: samples
    params: {}
- name: MinimalClient
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#running-the-console-output-sample-minimalclient
    method: GET
    data_selector: samples
    params: {}
- name: SampleClient
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#running-the-console-output-sample-sample-client
    method: GET
    data_selector: samples
    params: {}
- name: SampleClient3D
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#running-the-rigid-body-sample-sampleclient3d
    method: GET
    data_selector: samples
    params: {}
- name: SampleClientML
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#running-the-.net-sample
    method: GET
    data_selector: samples
    params: {}
- name: PacketClient
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#direct-depacketization-samples
    method: GET
    data_selector: samples
    params: {}
- name: PythonSample
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#direct-depacketization-samples
    method: GET
    data_selector: samples
    params: {}
- name: BroadcastSample
  endpoint:
    path: /developer-tools/natnet-sdk/natnet-sample-projects#xml-trigger-broadcast
    method: GET
    data_selector: samples
    params: {}
- name: SimpleVRPNTest
  endpoint:
    path: /motive-ui-panes/settings/settings-streaming
    method: GET
    data_selector: output_files
    params: {}
- name: glove_device_example
  endpoint:
    path: /plugins/optitrack-peripheral-api
    method: GET
    data_selector: device_data
    params: {}
- name: camera
  endpoint:
    path: /services/data/vXX.X/sobjects/Camera
    method: GET
    data_selector: records
- name: marker
  endpoint:
    path: /services/data/vXX.X/sobjects/Marker
    method: GET
    data_selector: records
- name: camera
  endpoint:
    path: /api/camera
    method: GET
    data_selector: records
- name: marker_set
  endpoint:
    path: /api/marker_set
    method: GET
    data_selector: records
- name: head_markers
  endpoint:
    path: /head/markers
    method: GET
    data_selector: markers
    params: {}
- name: torso_markers
  endpoint:
    path: /torso/markers
    method: GET
    data_selector: markers
    params: {}
- name: waist_markers
  endpoint:
    path: /waist/markers
    method: GET
    data_selector: markers
    params: {}
- name: shoulder_markers
  endpoint:
    path: /shoulder/markers
    method: GET
    data_selector: markers
    params: {}
- name: arm_markers
  endpoint:
    path: /arm/markers
    method: GET
    data_selector: markers
    params: {}
- name: hand_markers
  endpoint:
    path: /hand/markers
    method: GET
    data_selector: markers
    params: {}
- name: leg_markers
  endpoint:
    path: /leg/markers
    method: GET
    data_selector: markers
    params: {}
- name: foot_markers
  endpoint:
    path: /foot/markers
    method: GET
    data_selector: markers
    params: {}
- name: hinged_toe_markers
  endpoint:
    path: /hinged/toe/markers
    method: GET
    data_selector: markers
    params: {}
- name: additional_markers
  endpoint:
    path: /additional/markers
    method: GET
    data_selector: markers
    params: {}
- name: Head Markers
  endpoint:
    path: /markersets/full-body/biomech-57/head-markers
    method: GET
    data_selector: markers
- name: Torso Markers
  endpoint:
    path: /markersets/full-body/biomech-57/torso-markers
    method: GET
    data_selector: markers
- name: Waist Markers
  endpoint:
    path: /markersets/full-body/biomech-57/waist-markers
    method: GET
    data_selector: markers
- name: Upper Extremity Markers
  endpoint:
    path: /markersets/full-body/biomech-57/upper-extremity-markers
    method: GET
    data_selector: markers
- name: Hand Markers
  endpoint:
    path: /markersets/full-body/biomech-57/hand-markers
    method: GET
    data_selector: markers
- name: Lower Extremity Markers
  endpoint:
    path: /markersets/full-body/biomech-57/lower-extremity-markers
    method: GET
    data_selector: markers
- name: Foot Markers
  endpoint:
    path: /markersets/full-body/biomech-57/foot-markers
    method: GET
    data_selector: markers
- name: Toes
  endpoint:
    path: /markersets/full-body/biomech-57/toes
    method: GET
    data_selector: markers
- name: marker_sets
  endpoint:
    path: /markersets
    method: GET
    data_selector: records
- name: Head Markers
  endpoint:
    path: /markersets/full-body/conventional-39/head_markers
    method: GET
    data_selector: markers
    params: {}
- name: Torso Markers
  endpoint:
    path: /markersets/full-body/conventional-39/torso_markers
    method: GET
    data_selector: markers
    params: {}
- name: Waist Markers
  endpoint:
    path: /markersets/full-body/conventional-39/waist_markers
    method: GET
    data_selector: markers
    params: {}
- name: Upper Extremity Markers
  endpoint:
    path: /markersets/full-body/conventional-39/upper_extremity_markers
    method: GET
    data_selector: markers
    params: {}
- name: Hand Markers
  endpoint:
    path: /markersets/full-body/conventional-39/hand_markers
    method: GET
    data_selector: markers
    params: {}
- name: Lower Extremity Markers
  endpoint:
    path: /markersets/full-body/conventional-39/lower_extremity_markers
    method: GET
    data_selector: markers
    params: {}
- name: Foot Markers
  endpoint:
    path: /markersets/full-body/conventional-39/foot_markers
    method: GET
    data_selector: markers
    params: {}
- name: head_markers
  endpoint:
    path: /markers/head
    method: GET
    data_selector: markers
    params: {}
- name: torso_markers
  endpoint:
    path: /markers/torso
    method: GET
    data_selector: markers
    params: {}
- name: waist_markers
  endpoint:
    path: /markers/waist
    method: GET
    data_selector: markers
    params: {}
- name: shoulder_markers
  endpoint:
    path: /markers/shoulder
    method: GET
    data_selector: markers
    params: {}
- name: arm_markers
  endpoint:
    path: /markers/arm
    method: GET
    data_selector: markers
    params: {}
- name: hand_finger_markers
  endpoint:
    path: /markers/hand_fingers
    method: GET
    data_selector: markers
    params: {}
- name: leg_markers
  endpoint:
    path: /markers/leg
    method: GET
    data_selector: markers
    params: {}
- name: foot_markers
  endpoint:
    path: /markers/foot
    method: GET
    data_selector: markers
    params: {}
- name: hinged_toe_markers
  endpoint:
    path: /markers/hinged_toe
    method: GET
    data_selector: markers
    params: {}
- name: Head Markers
  endpoint:
    path: /markers/head
    method: GET
    data_selector: markers
- name: Torso Markers
  endpoint:
    path: /markers/torso
    method: GET
    data_selector: markers
- name: Shoulder Markers
  endpoint:
    path: /markers/shoulder
    method: GET
    data_selector: markers
- name: Waist Markers
  endpoint:
    path: /markers/waist
    method: GET
    data_selector: markers
- name: Arm Markers
  endpoint:
    path: /markers/arm
    method: GET
    data_selector: markers
- name: Hand + Finger Markers
  endpoint:
    path: /markers/hand
    method: GET
    data_selector: markers
- name: Leg Markers
  endpoint:
    path: /markers/leg
    method: GET
    data_selector: markers
- name: Foot Markers
  endpoint:
    path: /markers/foot
    method: GET
    data_selector: markers
- name: Hinged Toe Markers
  endpoint:
    path: /markers/hinged_toe
    method: GET
    data_selector: markers
- name: 11 Additional Markers
  endpoint:
    path: /markers/additional
    method: GET
    data_selector: markers
- name: camera
  endpoint:
    path: /camera
    method: GET
    data_selector: records
- name: marker_set
  endpoint:
    path: /marker_set
    method: GET
    data_selector: records
- name: glove_setup
  endpoint:
    path: /markersets/glove-device-setup
    method: GET
    data_selector: setup_steps
- name: troubleshooting
  endpoint:
    path: /markersets/glove-device-setup/troubleshooting
    method: GET
    data_selector: troubleshooting_steps
- name: Rizzoli Lower Body
  endpoint:
    path: /markersets/rizzoli-lower-body
    method: GET
    data_selector: markers
    params: {}
- name: Rizzoli Upper Body
  endpoint:
    path: /markersets/rizzoli-upper-body
    method: GET
    data_selector: markers
    params: {}
- name: Rizzoli Full Body
  endpoint:
    path: /markersets/rizzoli-body
    method: GET
    data_selector: markers
    params: {}
- name: Baseline Marker Sets
  endpoint:
    path: /markersets/full-body/baseline-41
    method: GET
    data_selector: records
- name: Core Marker Sets
  endpoint:
    path: /markersets/full-body/core-50
    method: GET
    data_selector: records
- name: Rigid Body Skeleton
  endpoint:
    path: /motive-ui-panes/builder-pane
    method: GET
    data_selector: Rigid Bodies
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Motive API requires initialization before use.
- Calibration files must be valid to ensure accurate tracking.
- Each Prime Color camera must be uplinked and powered through a standard PoE connection
  that can provide at least 15.4 watts to each port simultaneously.
- If your aggregation switch is PoE, you can plug your Prime Color Cameras directly
  into the aggregation switch. PoE injectors are optional and are only required if
  your aggregation switch is not PoE.
- Higher bit rates send more data across the network, which needs to be accounted
  for in load balancing the network.
- We recommend using only cables that have electromagnetic interference shielding.
- This guide is for OptiTrack active markers only. Third-party IR LEDs will not work
  with instructions provided on this page.
- This solution is supported for Ethernet camera systems (Slim 13E or Prime series
  cameras) only. USB camera systems are not supported.
- Motive version 2.0 or above is required.
- This guide covers active component firmware versions 1.0 and above; this includes
  all active components that were shipped after September 2017.
- Cameras will have shorter tracking ranges compared to when tracking indoors.
- System calibration will be more susceptible to change in outdoor applications due
  to environmental variables.
- Some objects may return nulls in deeply nested fields
- Disable all Windows firewalls and either disable or remove any Antivirus software.
- Change the Priority of Motive.exe to High.
- If you're running a system with a CPU with a lower core count, you may need to disable
  Motive from running on a couple of cores.
- For the Speed and Duplex property, change this to the highest throughput of your
  NIC.
- Disable Interrupt Moderation.
- LLDP must be disabled on any port used to connect a PrimeX 120 to the camera network.
- PoE++ Type 3 switches provide only 60W of power per port, which is insufficient
  to power a PrimeX 120 camera.
- PoE++ Type 4 switch supplies 100W per port, providing the optimum power to each
  PrimeX 120 on the switch.
- When enabled, the Broadcast Storm Control feature on the NETGEAR ProSafe GSM7228S
  may interfere with the transmission of data from OptiTrack Ethernet cameras.
- For proper system operations, the Storm Control feature must be disabled for all
  ports used in this aggregator switch.
- OptiTrack switches ship with these management features disabled.
- This filter works with Ethernet camera systems only. USB camera systems are not
  supported.
- At the time of writing, the eSync is NOT supported.
- Make sure the power is disconnected from the I/O-X (breakout box) before plugging
  or unplugging the Camera Bar Cable. Hot-plugging this cable may damage the device.
- The Duo 3 and Trio 3 ship with a free license for Motive:Tracker installed.
- The camera is pre-calibrated and no wanding is required.
- OptiTrack cameras are focused at infinity by default.
- Users should double-check the camera view for optimal image quality.
- Camera firmware updates are automatic when opening the software.
- The camera should not be unplugged during a firmware reset or firmware update.
- Only one key should be connected at a time.
- If both a Hardware Key and a Security Key are connected to the same computer, Motive
  may not activate properly.
- Layout configurations from Motive versions older than 2.0 cannot be loaded in latest
  versions of Motive. Please re-create and update the layouts for use.
- Calibration files are used to preserve calibration results.
- Continuous calibration monitors and refines camera calibration automatically.
- Calibration data is stored in an XML file with the extension .mcal.
- Properties in the calibration file that are not relevant for use outside of Motive
  are noted.
- Continuous calibration only works in Live mode.
- At least four marker samples must be tracked for continuous calibration.
- Proper marker placement is vital for quality of motion capture data because each
  marker on a tracked subject is used as indicators for both position and orientation.
- Avoid placing markers in a symmetrical shape within the segment as well.
- Recommended number of markers per Rigid Body is 4 ~ 12 markers.
- Avoid placing markers in symmetrical shapes.
- Using unique marker placements improves tracking stability.
- 'Motive license: Skeleton features are supported only in Motive:Body or Motive:Body
  - Unlimited.'
- 'Skeleton Count: The standard Motive:Body license supports up to 3 Skeletons. To
  track more Skeletons, a Motive:Body - Unlimited license is required.'
- 'Height range: Skeleton actors must be between 1''7" and 9'' 10" tall.'
- Minimum number of measurements required for alignment can impact errors.
- BaseStation has 16 RF channels available for use.
- Camera data captured in Motive can be streamed live to other applications or recorded
  into the Take file (.tak) file format.
- Once recorded, data can be exported from the Take.
- A Take file includes 2D Motion Capture data, 3D Solved data, Reference video, if
  included during the capture.
- Understanding the functionality of the editing tools is essential.
- All captured frames must be examined precisely and corrections must be made for
  each error discovered.
- Using Edit Tools modifies the raw trajectories and an overuse is not recommended.
- Joint angles generated and exported from Motive are intended for basic visualization
  purposes only and should not be used for any type of biomechanical or clinical analysis.
- There is an known behavior where importing C3D data with timecode doesn't accurately
  show up in MotionBuilder.
- When the header is disabled, this information is excluded from the CSV files.
- We recommend optimizing the system setup to reduce occlusions.
- When exporting tracking data into MotionBuilder in the FBX file format, make sure
  the exported frame rate is supported in MotionBuilder (Mobu).
- If there is a non-standard frame rate selected that is not supported, the closest
  supported frame rate is applied.
- Autodesk has discontinued support for FBX ASCII import in MotionBuilder 2018 and
  above.
- NatNet uses UDP protocol for sending data.
- Only cameras in tracking modes will contribute to the reconstruction of 3D data.
- Video types of the cameras cannot be switched for recorded Takes in post-processing
  of captured data.
- MJPEG video are used only for reference purposes, and processed frames will not
  contribute to reconstruction of 3D data.
- Select Duplex mode to collect both reference video and tracking data from the same
  camera. Duplex mode is only available on select PrimeX, SlimX, and VersaX cameras.
- Requires setup of connected app in api
- The Motive Batch Processor is a stand-alone application that requires a script using
  the NMotive API.
- Scripts can be written in C# or IronPython.
- A batch processor script using the NMotive API. (C# or IronPython)
- 'The full source code for the Motive Batch Processor is also installed with Motive,
  at: C:\Program Files\OptiTrack\Motive\MotiveBatchProcessor\src'
- Changes made to the Solver or Camera filter configurations in the Live Pipeline
  settings do not affect the recorded data.
- Recorded Skeleton marker labels may be discarded if the Skeletons are never in well-trackable
  poses during the captured Take.
- Settings are Standard unless noted otherwise.
- Default creation properties for Rigid Bodies and Skeletons are applied only to newly
  created assets.
- This must be set to true in order to start the streaming.
- When set to local loopback (127.0.0.1) address, the data is streamed locally within
  the computer.
- When streaming onto an external platform with a Z-up right-handed coordinate system
  change this to Z Up.
- All settings are standard unless noted otherwise.
- Default color scheme is dark
- Default background color is black
- Default autoscale setting is on
- Default preferred live layout is none
- Default preferred edit layout is none
- Default scope duration is 1000 frames
- Auto-labeling is not available for Trained Markersets.
- The recommended number of markers per Rigid Body is 4 ~ 12 markers.
- Calibration process requires the probe tip to remain fitted securely in the slot.
- Marker sticks for Rigid Bodies does not work in Motive 3.0.
- Modified Marker XML files can only be used with the same Marker Set template.
- Calibration is essential for high quality optical motion capture systems.
- Calibration accuracy may naturally deteriorate over time due to ambient factors
  such as fluctuations in temperature.
- Properties that are not shared are not included when multiple devices are selected.
- Users can create and save custom layouts of up to 9 graphs each.
- The working range can be set from different places.
- Layouts include options for Channel View, Combined View, Tracks View, Force Plates
  View, and more.
- 'Status messages are categorized into five categories: Informational, Warning, Error,
  Critical, and Debugging.'
- Logged status messages in the history list display in chronological order by default.
- The maximum data transmission speed that a Prime color camera can output is 100
  megabytes per second (MB/s).
- Decreasing the bit-rate may slow the data transmission speed of the color camera
  enough to resolve frame drop issues.
- Only enabled force plates are shown in Motive and used for data collection.
- Group policy requires certain properties to be identical on all devices in the force
  plate group.
- OptiHub2 is not designed for precise synchronization with external devices.
- Some objects like Contact may return nulls in deeply nested fields
- Properties can be modified both in Live and Edit mode.
- Default creation properties are listed under the Assets Settings.
- Increased processing latency may result in dropped frames when real-time processing
  the data in live-captures or in 2D Mode.
- List of custom layouts that are created by the user.
- The plugin automatically configures the necessary streaming settings.
- Ensure proper connection settings are used that match network settings configured
  in Motive.
- Motive and MotionBuilder should run on the same machine.
- Use a separate machine for Unreal Engine.
- Ensure SteamVR is installed before setting up the driver.
- Using active markers is recommended for better tracking stability.
- When using the Unreal Engine plugin, you will need to additionally create a custom
  pawn for properly aligning the coordinate systems between SteamVR and OptiTrack
  UE plugin.
- Only one VCS controller can be connected and configured due to some limitations.
- Having two controllers connected at the same time is not supported.
- Streaming data is configured in Application Settings on the Streaming Settings tab.
- Unicast transmission is recommended when streaming data over WiFi.
- 'SteamVR Required: The VR driver streams tracking data through SteamVR.'
- The plugin ships as an installer package (MSI) which will set up the driver along
  with a utility tool for configuring client streaming settings.
- Once this has been set up, the motion capture system will be used to drive the HMD
  in SteamVR.
- Starting from Unity version 2019 and above, official support for OpenVR in Unity
  has been deprecated.
- These steps are subject to change from Unity.
- This driver streams tracking data through SteamVR.
- Auto-detection port default is 1513.
- Requires a valid Insight VCS:Maya license to run, managed by OptiTrack server application
  (Motive).
- For best results, run Motive and MotionBuilder on separate computers so they are
  not competing for processing resources.
- When streaming the data over a Wi-Fi network, use Unicast transmission.
- For best results, it is advised to run Motive and MotionBuilder separately on different
  computers.
- When streaming the data over a Wi-Fi network, Unicast transmission must be used.
- It is advised to run Motive and MotionBuilder separately on different computers.
- Unicast transmission must be used for streaming data over a Wi-Fi network.
- The OptiTrack Peripheral API is available in Motive versions 1.10 and above.
- The Wired AnchorPuck requires 22W of power through a Cat 6 or Cat 6a Ethernet cable
  attached to a PoE+ switch.
- The device does not include or require a battery.
- Uses a PoE or PoE+ switch for power.
- Manus gloves run at a fixed sampling rate of 90Hz.
- Manus gloves do not support hardware synchronization.
- Uses OAuth2 with refresh token — requires setup of connected app in Motive API
- We strongly recommend you use our Active Batch Programmer instead of PuTTY.
- This guide is intended for advanced users or those under the guidance of the OptiTrack
  Support Team.
- Your OptiTrack Active hardware should arrive fully configured and ready for immediate
  use.
- Do not attempt to modify the configurations of your OptiTrack Active hardware unless
  you have been instructed on how to do so by an OptiTrack Support Engineer.
- This guide is for OptiTrack active markers only. Third-party IR LEDs will not work
  with the instructions provided on this page.
- This solution is supported only with Ethernet camera systems (Slim 13E or Prime
  series cameras). USB camera systems are not supported.
- Active Tracking works with Motive versions 2.x or 3.1 and above. It is not available
  in version 3.0.
- This guide covers active component firmware versions 1.0 and above, which includes
  all active components that were shipped after September 2017.
- SMPTE Timecode integration requires the eSync 2 hub.
- Hot plugging is not supported with this integration.
- Even if you are not using a NI-DAQ, it is still necessary to install the NI-DAQmx
  drivers in the installer.
- Coordinate system used in Motive (y-up right-handed) may be different from the convention
  used in biomechanics analysis software.
- Motive uses a different coordinate system than the system used in common biomechanics
  applications.
- C3D specification defines first frame as index 1.
- OptiTrack plugins must be installed for Unreal Engine 4 and 5.
- SteamVR is required for the driver to function.
- Ensure the HMD pivot point is calibrated properly to avoid tracking issues.
- For Motive versions 2.1 and above, setting pivot point location is much easier using
  the GIZMO tools.
- Once you have the Rigid Body asset for the HMD configured, you can export the asset
  into a TRA file for future uses.
- The sync settings listed on this page have not been tested with the latest version
  of the firmware. This means that the appropriate sync offset value indicated on
  this page might not be correct.
- Another important note is that high camera exposure settings may cause IR light
  from the base stations to be detected by the OptiTrack system. It's suggested to
  keep the camera exposure below 1000 us for all of the cameras.
- Some objects like Camera may return nulls in deeply nested fields
- This solution is supported for Ethernet camera systems only. USB camera systems
  are not supported.
- The VCS:Maya plugin requires a valid Insight VCS:Maya license to run. This license
  is managed by your OptiTrack server application (Motive) and should be installed
  in the same license folder as that application.
- For best results, it is advised to run Motive and MotionBuilder separately on different
  computers, so that they are not competing for processing resources.
- 3D tracking features are not directly supported with Camera SDK, but they are featured
  via the Motive API.
- When you install Motive, all of the required components for utilizing the API will
  be installed within the Motive install directory.
- 3D tracking features are not directly supported with Camera SDK but they are featured
  via the Motive API.
- Camera SDK is compatible only with the same released version of Motive.
- The Motive API documentation is being updated for 3.1 and some of the functions
  may not yet be in the documentation.
- NatNet is backwards compatible with any version of Motive, however, older versions
  may be missing features that are present in newer versions.
- Using the SDK tools requires background knowledge on software development; therefore,
  we do not provide support for basic project setup, compiling, and linking when using
  the SDK/API to create your own applications.
- Requires linking of NatNetLib.dll and including header files for library functions.
- Default host and client IP address is set to '127.0.0.1'.
- Polling is supported but not recommended due to accessing errors.
- Supported for Unicast only.
- Supported for Motive versions 3.0 or above.
- This configuration is not necessary when streaming over a wired network since streaming
  packets are less likely to be dropped.
- Latency metrics can be monitored from the Status Panel of Motive or in the NatNet
  SDK 4.0 streaming protocol.
- System Latency may not always be available for all system configurations.
- Streaming Settings button is gray when streaming is disabled and white when streaming
  is enabled.
- Ensure that the Motive IP address entered matches the Local Interface address in
  Motive's NatNet settings.
- Motive looks for plugin DLLs located in the devices folder
- The plugin starts at DLLEnumerateDeviceFactories method in dllmain.cpp
- Requires setup of connected app in OptiTrack
- Waist markers are key for modeling the pelvis bone.
- Use T-pose for accurate placement of shoulder markers.
- We recommend closing the Manus Dashboard while running Motive to prevent performance
  issues.
- For latency issues, run Hand Engine on a separate PC than Motive.
- Proper marker placements are critical for human motion tracking.
- Markers should be removed after the Skeleton has been created in Motive.
- 'Motive: Body license is required to access and use the rigid body skeleton Marker
  Sets.'
- 'Not supported with Motive: Tracker license.'
- Check the license folder. If there is no license file in the folder, download it
  by running the License Activation Tool, available on the Motive splash page.
- Check the license folder. The license file name contains the 6-digit serial number
  of the USB Security or Hardware Key associated with it.
- For a maintenance license to work, both it and the initial license must be in the
  Motive license folder.
- Check the license folder and move or delete either the oldest license or the one
  that is not needed.
- If the key is not detected in Device Manager, try reseating it or use a different
  USB port.
- If an error symbol is displayed next to the device in Device Manager, the USB driver
  needs an update.
- If the USB Security or Hardware Key is not listed, try reconnected the device or
  using a different USB port.
- Contact support to purchase a new key. Once received, contact support to complete
  the transfer of the license to the new key.
- Check the license folder to verify the license has been downloaded.
- Ensure the computer meets the minimum hardware requirement to run Motive; upgrade
  as necessary.
- The online License Tool is available on the OptiTrack Support page.
- Only one license (initial or maintenance) can be activated at a time.
- Many of the recommended optimizations are completed using Window’s Local Group Policy
  Editor.
- Local Group Policy Editor is available only with a Windows Professional License.
- Once these policies are implemented, the firewall cannot be re-enabled by any other
  means.
- Once this policy is implemented, the Windows Defender Antivirus cannot be re-enabled
  in Virus & Threat Protection.
- Users will no longer need to authenticate their cameras following the Motive 3.0.2
  release.
- An internet connection is still required to download Motive.exe from the OptiTrack
  website.
- Motive may freeze at launch if an incompatible version of the NI-DAQmx driver is
  installed.
- If the device is configured to use external clock signals, the option to change
  the acquisition rate for NI-DAQ devices within Motive will be disabled.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'E: Camera has lost connection to the network.'
- 'E1: Camera has failed to establish a connection with the PoE switch.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- IMU packet drops may indicate alignment issues.
- High gap size may suggest data transmission problems.
- Ensure proper network configuration to avoid packet loss.
- Do not modify socket size unless instructed.
- 'Dropped Frame: A mocap camera dropped a frame of data.'
- 'Unable to start device: Unable to start peripheral device collecting.'
- 'Initialization Error: Ensure the driver is properly installed and configured.'
- 'Configuration Error: Check the settings in steamvr.settings file.'
- kApiResult_Success = 0
- kApiResult_Failed
- kApiResult_FileNotFound
- kApiResult_LoadFailed
- kApiResult_SaveFailed
- kApiResult_InvalidFile
- kApiResult_InvalidLicense
- kApiResult_NoFrameAvailable
- kApiResult_TooFewMarkers
- kApiResult_ToManyMarkers
- kApiResult_UnableToFindGroundPlane
- kApiResult_UnableGetGroundPlane
- kApiResult_RemoveCalibrationSquare
- 'ErrorCode_OK: Operation successful'
- 'ErrorCode_Internal: Suspect internal errors. Contact support.'
- 'ErrorCode_External: External errors. Make sure correct parameters are used for
  input arguments when calling the methods.'
- 'ErrorCode_Network: The error occurred on the network side.'
- 'ErrorCode_Other: Unlisted error is conflicting the method call.'
- 'ErrorCode_InvalidArgument: Invalid input arguments have been inputted.'
- 'ErrorCode_InvalidOperation: Invalid operation.'
- Connection failed - wrong Motive IP address entered.
- Connection failed - wrong Local IP entered.
- Test failed - incorrect Port Number entered.
- VRPN Test - Selected asset is not found.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://optitrack.com
  auth:
    type: oauth2
source_metadata: null
