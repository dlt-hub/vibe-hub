resources:
- name: scan_event
  endpoint:
    path: /streams/scan/event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /streams/error/event
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /streams/scanner/state
    method: GET
    data_selector: records
- name: worker_feedback_command
  endpoint:
    path: /streams/worker/feedback/command
    method: GET
    data_selector: records
- name: button_press_event
  endpoint:
    path: /streams/button/press/event
    method: GET
    data_selector: records
- name: button_blocking_command
  endpoint:
    path: /streams/button/blocking/command
    method: GET
    data_selector: records
- name: display_command
  endpoint:
    path: /streams/display/command
    method: GET
    data_selector: records
- name: gateway_state_command
  endpoint:
    path: /streams/gateway/state/command
    method: GET
    data_selector: records
- name: gateway_state_event
  endpoint:
    path: /streams/gateway/state/event
    method: GET
    data_selector: records
- name: scanner_connectivity_command
  endpoint:
    path: /streams/scanner/connectivity/command
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: data
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: data
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: data
- name: scanner_state
  endpoint:
    path: /api/v1/scanner_state
    method: GET
    data_selector: data
- name: stream_event
  endpoint:
    path: /api/v1/stream_event
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /api/v1/scanner_state
    method: GET
    data_selector: records
- name: hand_strap
  endpoint:
    path: /faqs/hand_strap
    method: GET
    data_selector: faqs
    params: {}
- name: index_trigger
  endpoint:
    path: /faqs/index_trigger
    method: GET
    data_selector: faqs
    params: {}
- name: reel
  endpoint:
    path: /faqs/reel
    method: GET
    data_selector: faqs
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: configurations
  endpoint:
    path: /configurations
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: event_data
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: event_data
- name: streams
  endpoint:
    path: /api/streams
    method: GET
    data_selector: streams
- name: gateway_settings
  endpoint:
    path: /gateway/settings
    method: GET
    data_selector: settings
- name: scanner_state
  endpoint:
    path: /scanner/state
    method: GET
    data_selector: state
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: scan_event
  endpoint:
    path: /streams/scan_event
    method: POST
    data_selector: event_data
    params: {}
- name: error_event
  endpoint:
    path: /streams/error_event
    method: POST
    data_selector: event_data
    params: {}
- name: scanner_state
  endpoint:
    path: /streams/scanner_state
    method: POST
    data_selector: state_data
    params: {}
- name: scan_event
  endpoint:
    path: /streams/scan-event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /streams/error-event
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /streams/scanner-state
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: data
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams/api/v1
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: scanner_settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: events
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: errors
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: scanner_event
  endpoint:
    path: /api/scanner/event
    method: POST
    data_selector: event_data
    params: {}
- name: error_event
  endpoint:
    path: /api/error/event
    method: POST
    data_selector: event_data
    params: {}
- name: screen_context
  endpoint:
    path: /screen/context
    method: GET
    data_selector: context
- name: barcode_scanned_event
  endpoint:
    path: /events/barcode_scanned
    method: GET
    data_selector: event_data
- name: button_pressed_event
  endpoint:
    path: /events/button_pressed
    method: GET
    data_selector: event_data
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scanner_event
  endpoint:
    path: /streams/scanner_event
    method: POST
    data_selector: event_data
    params: {}
- name: error_event
  endpoint:
    path: /streams/error_event
    method: POST
    data_selector: event_data
    params: {}
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: streams
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: configuration
  endpoint:
    path: /configurations
    method: GET
    data_selector: configurations
    params: {}
- name: device_configurations
  endpoint:
    path: /insight-mobile/android/device-configurations
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /api/v1/device_configurations
    method: GET
    data_selector: configurations
    params: {}
- name: scanner_settings
  endpoint:
    path: /api/v1/scanner_settings
    method: GET
    data_selector: settings
    params: {}
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: data
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: Device Configurations
  endpoint:
    path: /api/device/configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /api/integrations
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: configuration
  endpoint:
    path: /configurations
    method: GET
    data_selector: records
- name: Gateway
  endpoint:
    path: /gateway/api
    method: GET
    data_selector: data
    params: {}
- name: Firmware Update
  endpoint:
    path: /gateway/api/firmware-update
    method: POST
    data_selector: status
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: scanData
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: errorData
    params: {}
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: data
    params: {}
- name: stream_event
  endpoint:
    path: /api/v1/streams
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /api/v1/device_configurations
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: scanner
  endpoint:
    path: /api/v1/scanner
    method: GET
    data_selector: records
    params: {}
- name: user_feedback
  endpoint:
    path: /api/v1/user_feedback
    method: POST
    data_selector: response
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: GET
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: GET
    data_selector: records
    params: {}
- name: Device Configurations
  endpoint:
    path: /path/to/device/configurations
    method: GET
    data_selector: records
- name: Scan
  endpoint:
    path: /path/to/scan
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /insight-mobile/android/device-configurations
    method: GET
    data_selector: records
- name: connectivity
  endpoint:
    path: /insight-mobile/android/connectivity
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /api/scanner/state
    method: GET
    data_selector: state
    params: {}
- name: scan_event
  endpoint:
    path: /api/scan/event
    method: POST
    data_selector: event
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: data
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: data
    params: {}
- name: Gateway connectivity settings
  endpoint:
    path: /gateway/connectivity
    method: GET
- name: Device Configuration
  endpoint:
    path: /gateway/device/configuration
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: stream_event
  endpoint:
    path: /api/v1/stream_event
    method: POST
    data_selector: data
    params: {}
- name: scanner_state
  endpoint:
    path: /api/v1/scanner_state
    method: GET
    data_selector: state
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: screen_templates
  endpoint:
    path: /services/data/vXX.X/sobjects/ScreenTemplate
    method: GET
    data_selector: records
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/scan-event
    method: POST
    data_selector: data
    params: {}
- name: error_event
  endpoint:
    path: /api/error-event
    method: POST
    data_selector: data
    params: {}
- name: scanners
  endpoint:
    path: /api/scanners
    method: GET
    data_selector: records
- name: gateway
  endpoint:
    path: /api/gateway
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams
  endpoint:
    path: /streams-api
    method: GET
    data_selector: events
- name: scanner
  endpoint:
    path: /api/v1/scanner
    method: GET
    data_selector: scanners
    params: {}
- name: scanners
  endpoint:
    path: /scanners
    method: GET
    data_selector: records
- name: gateways
  endpoint:
    path: /gateways
    method: GET
    data_selector: records
- name: MAI integration
  endpoint:
    path: /services/data/vXX.X/sobjects/MAIIntegration
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /services/data/vXX.X/streams/scan_event
    method: POST
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /services/data/vXX.X/streams/error_event
    method: POST
    data_selector: records
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: Streams API
  endpoint:
    path: /api/v1/streams
    method: GET
    data_selector: streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
    params: {}
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /streams/scan_event
    method: POST
    data_selector: event_data
- name: error_event
  endpoint:
    path: /streams/error_event
    method: POST
    data_selector: event_data
- name: scanner_state
  endpoint:
    path: /streams/scanner_state
    method: POST
    data_selector: event_data
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: records
    params: {}
- name: Device Configurations
  endpoint:
    path: /api/v1/device_configurations
    method: GET
    data_selector: configurations
- name: User views
  endpoint:
    path: /api/v1/user_views
    method: GET
    data_selector: views
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: Scanner Firmware Gen1
  endpoint:
    path: /scanner/firmware/gen1
    method: GET
    data_selector: firmware_updates
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: Device Configurations
  endpoint:
    path: /configurations/device
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /api/scanner/state
    method: GET
    data_selector: scanner_state
    params: {}
- name: scan_event
  endpoint:
    path: /api/scan/event
    method: POST
    data_selector: scan_event
    params: {}
- name: error_event
  endpoint:
    path: /api/error/event
    method: POST
    data_selector: error_event
    params: {}
- name: Gateway Settings
  endpoint:
    path: /get-gateway-settings
    method: GET
    data_selector: settings
    params: {}
- name: Scanner Settings
  endpoint:
    path: /get-scanner-settings
    method: GET
    data_selector: settings
    params: {}
- name: scanner_state
  endpoint:
    path: /api/v1/scanner_state
    method: GET
    data_selector: data
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: GET
    data_selector: data
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /insight-mobile-android/device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /insight-mobile-android/integration
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: records
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: records
- name: device_configurations
  endpoint:
    path: /api/v1/device/configurations
    method: GET
    data_selector: configurations
    params:
      incremental: updated_at
- name: user_views
  endpoint:
    path: /api/v1/user/views
    method: GET
    data_selector: views
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: Gateway Connectivity Settings
  endpoint:
    path: /connectivity
    method: GET
    data_selector: settings
- name: Gateway Firmware Update
  endpoint:
    path: /firmware-update
    method: POST
    data_selector: update
- name: DEVICE_CONFIGURATION
  endpoint:
    path: /api/device/configurations
    method: GET
- name: scan_event
  endpoint:
    path: /api/v1/events/scan
    method: POST
    data_selector: event_data
- name: error_event
  endpoint:
    path: /api/v1/events/error
    method: POST
    data_selector: event_data
- name: scanner_state
  endpoint:
    path: /api/v1/scanner/state
    method: GET
    data_selector: state_data
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: records
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: event_data
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: event_data
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: device_configurations
  endpoint:
    path: /device/configurations
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: streams
  endpoint:
    path: /api/streams
    method: GET
    data_selector: streams
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: events
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: events
- name: scanner_state
  endpoint:
    path: /api/v1/scanner_state
    method: GET
    data_selector: state
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: device_configurations
  endpoint:
    path: /insight-mobile/android/device-configurations
    method: GET
    data_selector: records
- name: Wearables
  endpoint:
    path: /api/wearables
    method: GET
    data_selector: data
    params: {}
- name: Charging Stations
  endpoint:
    path: /api/charging_stations
    method: GET
    data_selector: data
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: scanner_settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
- name: Gateway Plus
  endpoint:
    path: /gateway-plus
    method: GET
- name: INSIGHT Mobile (Android)
  endpoint:
    path: /insight-mobile/android
    method: GET
- name: INSIGHT Mobile (iOS)
  endpoint:
    path: /insight-mobile/ios
    method: GET
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: gateway_connectivity
  endpoint:
    path: /connectivity
    method: GET
    data_selector: gateway_connectivity_settings
- name: scanner
  endpoint:
    path: /services/data/vXX.X/sobjects/Scanner
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /streams-api
    method: GET
    data_selector: events
- name: network
  endpoint:
    path: /network.json
    method: POST
    data_selector: wifi
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /api/v1/device/configurations
    method: GET
    data_selector: configurations
    params: {}
- name: connectivity
  endpoint:
    path: /api/v1/connectivity
    method: GET
    data_selector: connectivity_info
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scans
    method: GET
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/errors
    method: GET
    data_selector: records
    params: {}
- name: Scanner State
  endpoint:
    path: /api/scanner/state
    method: GET
    data_selector: state
    params: {}
- name: Error Event
  endpoint:
    path: /api/events/error
    method: GET
    data_selector: events
    params: {}
- name: scanner_state
  endpoint:
    path: /services/data/vXX.X/sobjects/ScannerState
    method: GET
    data_selector: records
    params: {}
- name: scan_event
  endpoint:
    path: /services/data/vXX.X/sobjects/ScanEvent
    method: GET
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /services/data/vXX.X/sobjects/ErrorEvent
    method: GET
    data_selector: records
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: User views
  endpoint:
    path: /user-views
    method: GET
    data_selector: records
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /api/v1/device/configurations
    method: GET
    data_selector: configurations
    params: {}
- name: user_views
  endpoint:
    path: /api/v1/user/views
    method: GET
    data_selector: views
    params: {}
- name: scanner
  endpoint:
    path: /api/v1/scanner
    method: GET
    data_selector: data
- name: device
  endpoint:
    path: /api/v1/device
    method: GET
    data_selector: data
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
    params: {}
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: streamData
- name: error_log
  endpoint:
    path: /Status/logs/error.log
    method: GET
- name: profiles
  endpoint:
    path: /Status/profiles/current.zip
    method: GET
- name: failed_updates
  endpoint:
    path: /Status/failed/<original path>
    method: GET
- name: connected_scanners
  endpoint:
    path: /Status/devices/connected.json
    method: GET
- name: gateway_device_information
  endpoint:
    path: /Status/software/gateway_info.json
    method: GET
- name: installed_packages
  endpoint:
    path: /Status/software/installed.zip
    method: GET
- name: websocket_information
  endpoint:
    path: /Status/software/websocket_status.json
    method: GET
- name: network_information
  endpoint:
    path: /Status/software/network_status.json
    method: GET
- name: scan_event
  endpoint:
    path: /streams/scan_event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /streams/error_event
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /configurations/device
    method: GET
    data_selector: records
    params: {}
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
    params: {}
- name: Scanner Settings
  endpoint:
    path: /scanner/settings
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: scan_event
  endpoint:
    path: /scan_event
    method: POST
    data_selector: event
    params: {}
- name: scanner_state
  endpoint:
    path: /scanner/state
    method: GET
    data_selector: scanner_state
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: device_configurations
  endpoint:
    path: /api/v1/device/configurations
    method: GET
    data_selector: configurations
- name: stream_events
  endpoint:
    path: /api/v1/stream/events
    method: GET
    data_selector: events
- name: worker_feedback
  endpoint:
    path: /worker-feedback
    method: POST
    data_selector: response
    params: {}
- name: button_press_event
  endpoint:
    path: /events/button_press
    method: POST
    data_selector: event
    params: {}
- name: button_blocking_command
  endpoint:
    path: /button-blocking-command
    method: POST
    data_selector: ''
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: events
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: errors
    params: {}
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: records
    params: {}
- name: display_command
  endpoint:
    path: /api/display_command
    method: POST
    data_selector: response
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scanners
  endpoint:
    path: /scanners
    method: GET
    data_selector: records
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: records
- name: screen_templates
  endpoint:
    path: /screen-templates
    method: GET
    data_selector: templates
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: gateway_state_command
  endpoint:
    path: /gateway/state
    method: GET
    data_selector: response
    params:
      api_version: '1.0'
      event_type: gateway_state!
      event_id: 02114da8-feae-46e3-8b00-a3f7ea8672df
      time_created: 1546300800000
- name: gateway_state_event
  endpoint:
    path: /gateway/state/event
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: gateway_pairing_code
  endpoint:
    path: /gateway_pairing_code
    method: GET
    data_selector: pairing_code
    params: {}
- name: integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: configurations
  endpoint:
    path: /configurations
    method: GET
    data_selector: records
- name: photo_reporting
  endpoint:
    path: /photo/reporting
    method: POST
    data_selector: report
    params: {}
- name: gateway_status
  endpoint:
    path: /api/v1/gateway/status
    method: GET
    data_selector: status
- name: device_configuration
  endpoint:
    path: /api/v1/gateway/device/configuration
    method: GET
    data_selector: configuration
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: photo_reporting_status
  endpoint:
    path: /photo-reporting/status
    method: POST
    data_selector: event
    params: {}
- name: photo_report_status
  endpoint:
    path: /photo/report/status
    method: GET
    data_selector: report_status
    params: {}
- name: scan_event
  endpoint:
    path: /streams/api/v1/scan-event
    method: POST
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /streams/api/v1/error-event
    method: POST
    data_selector: records
    params: {}
- name: scanner_state
  endpoint:
    path: /streams/api/v1/scanner-state
    method: POST
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scan_event
  endpoint:
    path: /streams-api
    method: POST
    data_selector: scan_data
    params: {}
- name: scanner_state
  endpoint:
    path: /api/scanner/state
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /api/error/event
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /configurations/device
    method: GET
    data_selector: configurations
    params: {}
- name: User views
  endpoint:
    path: /user/views
    method: GET
    data_selector: views
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: scanners
  endpoint:
    path: /api/scanners
    method: GET
    data_selector: records
- name: charging_stations
  endpoint:
    path: /api/charging_stations
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: records
- name: gateway_connectivity
  endpoint:
    path: /connectivity
    method: GET
    data_selector: connectivity_data
- name: gateway_firmware
  endpoint:
    path: /firmware
    method: GET
    data_selector: firmware_data
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: error_log
  endpoint:
    path: Status/logs/error.log
    method: GET
    data_selector: logs
- name: profiles
  endpoint:
    path: Status/profiles/current.zip
    method: GET
    data_selector: profiles
- name: failed_updates
  endpoint:
    path: Status/failed/<original path>
    method: GET
    data_selector: failed_updates
- name: connected_scanners
  endpoint:
    path: Status/devices/connected.json
    method: GET
    data_selector: connected_scanners
- name: gateway_plus_info
  endpoint:
    path: Status/software/gateway_info.json
    method: GET
    data_selector: gateway_info
- name: installed_packages
  endpoint:
    path: Status/software/installed.zip
    method: GET
    data_selector: installed_packages
- name: websocket_info
  endpoint:
    path: Status/software/websocket_status.json
    method: GET
    data_selector: websocket_info
- name: network_info
  endpoint:
    path: Status/software/network_status.json
    method: GET
    data_selector: network_info
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: scanner
  endpoint:
    path: /api/insight/scanner
    method: GET
    data_selector: scanners
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: gateway_configuration
  endpoint:
    path: /configurations
    method: GET
    data_selector: configurations
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: events
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: errors
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: data
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: GET
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: records
- name: scan_event
  endpoint:
    path: /streams/scan_event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /streams/error_event
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /streams/scanner_state
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: streams
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: data
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: data
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /api/streams
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: Device Configurations
  endpoint:
    path: /api/insight-mobile/android/device-configurations
    method: GET
    data_selector: records
- name: Connectivity
  endpoint:
    path: /api/insight-mobile/android/connectivity
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: websocket_client
  endpoint:
    path: /websocket.json
    method: POST
    data_selector: websocket_client
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: network
  endpoint:
    path: /network.json
    method: POST
    data_selector: wifi
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /services/api/v1/streams
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: scan_event
  endpoint:
    path: /api/scan_event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /api/error_event
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: Scan Event
  endpoint:
    path: /api/v1/scan-event
    method: POST
    data_selector: records
- name: Error Event
  endpoint:
    path: /api/v1/error-event
    method: POST
    data_selector: records
- name: Scanner State
  endpoint:
    path: /api/v1/scanner-state
    method: POST
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: scan_event
  endpoint:
    path: /scan_event
    method: POST
    data_selector: scan_event
    params: {}
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /error_event
    method: POST
    data_selector: event
    params:
      api_version: '1.0'
- name: scan_event
  endpoint:
    path: /api/v1/scan-event
    method: POST
    data_selector: records
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error-event
    method: POST
    data_selector: records
    params: {}
- name: scanner_state
  endpoint:
    path: /scanner/state
    method: POST
    data_selector: ''
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: configurations
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: settings
- name: device_configurations
  endpoint:
    path: /devices/configurations
    method: GET
    data_selector: records
- name: scanner_settings
  endpoint:
    path: /scanners/settings
    method: GET
    data_selector: records
- name: scanner_connectivity
  endpoint:
    path: /scanner/connectivity
    method: POST
    data_selector: response
    params: {}
- name: Gateway settings
  endpoint:
    path: /gateway/settings
    method: GET
    data_selector: settings
- name: Scanner settings
  endpoint:
    path: /scanner/settings
    method: GET
    data_selector: settings
- name: worker_feedback
  endpoint:
    path: /api/worker_feedback
    method: POST
    data_selector: response
    params: {}
- name: device_configurations
  endpoint:
    path: /api/device/configurations
    method: GET
    data_selector: configurations
- name: scanner_settings
  endpoint:
    path: /api/scanner/settings
    method: GET
    data_selector: settings
- name: button_press_event
  endpoint:
    path: /button_press_event
    method: POST
    data_selector: event
    params:
      api_version: '1.0'
- name: button_blocking_command
  endpoint:
    path: /button-blocking-command
    method: POST
    data_selector: event
    params: {}
- name: display_command
  endpoint:
    path: /display/command
    method: POST
    data_selector: response
    params:
      api_version: '1.0'
      event_type: display!
      device_serial: required_serial_number
      display_template_id: required_template_id
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: GET
    data_selector: records
    params: {}
- name: screen_templates
  endpoint:
    path: /screen-templates
    method: GET
    data_selector: templates
- name: Gateway
  endpoint:
    path: /gateway/api/v1/
    method: GET
    data_selector: data
    params: {}
- name: state_command
  endpoint:
    path: /gateway/state_command
    method: GET
    data_selector: state_event
    params:
      api_version: '1.0'
      event_type: gateway_state!
- name: state_event
  endpoint:
    path: /gateway/state_event
    method: GET
    data_selector: state_event
    params:
      api_version: '1.0'
      event_type: gateway_state
- name: gateway_plus_pairing_code
  endpoint:
    path: /gateway_plus/pairing_code
    method: GET
    data_selector: pairing_code
    params: {}
- name: photo_reporting
  endpoint:
    path: /photo/reporting
    method: POST
    data_selector: report
    params: {}
- name: scan_event
  endpoint:
    path: /streams/api/v1/scan_event
    method: POST
    data_selector: data
    params: {}
- name: error_event
  endpoint:
    path: /streams/api/v1/error_event
    method: POST
    data_selector: data
    params: {}
- name: scanner_state
  endpoint:
    path: /streams/api/v1/scanner_state
    method: POST
    data_selector: data
    params: {}
- name: photo_report_status
  endpoint:
    path: /photo/report/status
    method: POST
    data_selector: report
    params: {}
- name: photo_report_status
  endpoint:
    path: /photo/report/status
    method: GET
    data_selector: report_status
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: data
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: events
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: errors
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: User experience guidelines
  endpoint:
    path: /user-experience-guidelines
    method: GET
    data_selector: records
- name: Access Point
  endpoint:
    path: /pairing
    method: GET
    data_selector: data
    params: {}
- name: Device Settings
  endpoint:
    path: /device-settings
    method: GET
    data_selector: settings
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: events
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: screen_templates
  endpoint:
    path: /api/v1/screen_templates
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /api/v1/device_configurations
    method: GET
    data_selector: records
- name: Scan event
  endpoint:
    path: /services/data/vXX.X/sobjects/ScanEvent
    method: GET
    data_selector: records
- name: Error event
  endpoint:
    path: /services/data/vXX.X/sobjects/ErrorEvent
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: Device Configurations
  endpoint:
    path: /insight-mobile/android/device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /insight-mobile/android/integration
    method: GET
    data_selector: records
- name: Connectivity
  endpoint:
    path: /insight-mobile/android/connectivity
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: events
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: firmware_update
  endpoint:
    path: /firmware-update
    method: GET
    data_selector: updates
    params: {}
- name: device_configuration
  endpoint:
    path: /configurations/device
    method: GET
    data_selector: records
- name: scanner_settings
  endpoint:
    path: /configurations/scanner
    method: GET
    data_selector: records
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: barcode_scan_intent
  endpoint:
    path: /api/barcode_scan
    method: POST
    data_selector: extras
    params: {}
- name: scanner_events
  endpoint:
    path: /api/scanner/events
    method: GET
    data_selector: events
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: events
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scan_event
  endpoint:
    path: /scan_event
    method: POST
    data_selector: scan_data
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /scanner_state
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: gateway_connectivity
  endpoint:
    path: /connectivity
    method: GET
- name: device_configuration
  endpoint:
    path: /device-configuration
    method: GET
- name: worker_feedback
  endpoint:
    path: /worker_feedback
    method: POST
    data_selector: feedback
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: button_press_event
  endpoint:
    path: /button_press_event
    method: POST
    data_selector: event
    params: {}
- name: button_blocking
  endpoint:
    path: /button-blocking
    method: POST
    data_selector: event
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: display_command
  endpoint:
    path: /display/command
    method: POST
    data_selector: response
    params: {}
- name: streams_api
  endpoint:
    path: /streams/api/v1/events
    method: GET
    data_selector: events
- name: gateway_state
  endpoint:
    path: /gateway_state
    method: GET
    data_selector: state
    params:
      api_version: '1.0'
      event_type: gateway_state!
- name: gateway_state_event
  endpoint:
    path: /gateway/state/event
    method: GET
    data_selector: gateway_state_event
    params: {}
- name: scan_event
  endpoint:
    path: /api/scan_event
    method: POST
    data_selector: data
    params: {}
- name: error_event
  endpoint:
    path: /api/error_event
    method: POST
    data_selector: data
    params: {}
- name: scanner_connectivity
  endpoint:
    path: /scanner/connectivity
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: stream_data
- name: stream_event
  endpoint:
    path: /api/v1/stream_event
    method: GET
    data_selector: events
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: screen_templates
  endpoint:
    path: /api/screen-templates
    method: GET
    data_selector: templates
- name: user_views
  endpoint:
    path: /api/user-views
    method: GET
    data_selector: views
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: events
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: errors
- name: scan_event
  endpoint:
    path: /streams/scan-event
    method: POST
    data_selector: records
- name: error_event
  endpoint:
    path: /streams/error-event
    method: POST
    data_selector: records
- name: scanner_state
  endpoint:
    path: /streams/scanner-state
    method: POST
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: streams
    params: {}
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: scan_event
  endpoint:
    path: /streams/scan-event
    method: GET
    data_selector: records
- name: error_event
  endpoint:
    path: /streams/error-event
    method: GET
    data_selector: records
- name: scanner_state
  endpoint:
    path: /streams/scanner-state
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /api/v1/device-configurations
    method: GET
    data_selector: records
    params: {}
- name: Integrations
  endpoint:
    path: /api/v1/integrations
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: configuration
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: profiles
  endpoint:
    path: /manage-profiles
    method: GET
    data_selector: profiles
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Scanner Settings
  endpoint:
    path: /scanner-settings
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: change_config_profile
  endpoint:
    path: /api/change_config_profile
    method: POST
    data_selector: profile
    params: {}
- name: scan_event
  endpoint:
    path: /api/scanner/scan_event
    method: POST
    data_selector: events
    params: {}
- name: error_event
  endpoint:
    path: /api/scanner/error_event
    method: POST
    data_selector: events
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: Gateway Plus connectivity settings
  endpoint:
    path: /connectivity/gateway-plus
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /api/device-configurations
    method: GET
    data_selector: configurations
    params: {}
- name: User views
  endpoint:
    path: /api/user-views
    method: GET
    data_selector: views
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: device_configurations
  endpoint:
    path: /device/configurations
    method: GET
- name: scanner_settings
  endpoint:
    path: /scanner/settings
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: integration
  endpoint:
    path: /integration
    method: GET
    data_selector: records
- name: Gateway Settings
  endpoint:
    path: /gateway/settings
    method: GET
    data_selector: settings
    params: {}
- name: Device Configuration
  endpoint:
    path: /gateway/device/configuration
    method: GET
    data_selector: device_configuration
    params: {}
- name: device_configurations
  endpoint:
    path: /api/v1/device_configurations
    method: GET
    data_selector: records
- name: scanner_settings
  endpoint:
    path: /api/v1/scanner_settings
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: gateway_settings
  endpoint:
    path: /gateway-settings
    method: GET
    data_selector: records
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: records
- name: scanner_event
  endpoint:
    path: /streams/scanner_event
    method: GET
    data_selector: events
- name: error_event
  endpoint:
    path: /streams/error_event
    method: GET
    data_selector: events
- name: scanner_state
  endpoint:
    path: /streams/scanner_state
    method: GET
    data_selector: states
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: Scan event
  endpoint:
    path: /api/scan/event
    method: GET
    data_selector: records
- name: Error event
  endpoint:
    path: /api/error/event
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
- name: Gateway settings
  endpoint:
    path: /gateway/settings
    method: GET
    data_selector: settings
    params: {}
- name: Scanner settings
  endpoint:
    path: /scanner/settings
    method: GET
    data_selector: scannerSettings
    params: {}
- name: Scan Event
  endpoint:
    path: /insight-mobile/scan-event
    method: POST
    data_selector: events
- name: Error Event
  endpoint:
    path: /insight-mobile/error-event
    method: POST
    data_selector: events
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: data
    params: {}
- name: scan_event
  endpoint:
    path: /api/v1/scan_event
    method: POST
    data_selector: data
    params: {}
- name: error_event
  endpoint:
    path: /api/v1/error_event
    method: POST
    data_selector: data
    params: {}
- name: set_screen
  endpoint:
    path: /api/v1/setScreen
    method: POST
- name: Scanner state
  endpoint:
    path: /api/scanner/state
    method: GET
    data_selector: state
- name: Scan event
  endpoint:
    path: /api/scan/event
    method: POST
    data_selector: event
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: scanner_firmware
  endpoint:
    path: /firmware-update
    method: GET
    data_selector: records
    params: {}
- name: device_configurations
  endpoint:
    path: /api/v1/device/configurations
    method: GET
    data_selector: records
- name: scanner_settings
  endpoint:
    path: /api/v1/scanner/settings
    method: GET
    data_selector: records
- name: screen_templates
  endpoint:
    path: /services/data/vXX.X/sobjects/ScreenTemplates
    method: GET
    data_selector: records
- name: workflow_rules
  endpoint:
    path: /services/data/vXX.X/sobjects/WorkflowRules
    method: GET
    data_selector: records
- name: Worker Feedback
  endpoint:
    path: /worker/feedback
    method: POST
    data_selector: feedback
    params: {}
- name: device_configuration
  endpoint:
    path: /api/v1/deviceConfiguration
    method: GET
    data_selector: records
    params: {}
- name: stream_event
  endpoint:
    path: /streams/event
    method: GET
- name: scan_event
  endpoint:
    path: /streams/scan
    method: GET
- name: error_event
  endpoint:
    path: /streams/error
    method: GET
- name: scanner_state
  endpoint:
    path: /streams/scanner/state
    method: GET
- name: worker_feedback_command
  endpoint:
    path: /streams/worker/feedback
    method: POST
- name: charging_stations
  endpoint:
    path: /charging_stations
    method: GET
    data_selector: records
- name: mai_integration
  endpoint:
    path: /mai_integration
    method: GET
    data_selector: records
- name: scanners
  endpoint:
    path: /scanners
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: scan_event
  endpoint:
    path: /api/v1/scan_events
    method: GET
    data_selector: events
    params:
      incremental: updated_at
- name: error_event
  endpoint:
    path: /api/v1/error_events
    method: GET
    data_selector: errors
    params: {}
- name: streams
  endpoint:
    path: /streams/api
    method: GET
    data_selector: streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: charging_station
  endpoint:
    path: /services/data/vXX.X/sobjects/ChargingStation
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: scan_event
  endpoint:
    path: /streams/api/scan-event
    method: GET
- name: error_event
  endpoint:
    path: /streams/api/error-event
    method: GET
- name: scanner_state
  endpoint:
    path: /streams/api/scanner-state
    method: GET
- name: worker_feedback_command
  endpoint:
    path: /streams/api/worker-feedback-command
    method: GET
- name: button_press_event
  endpoint:
    path: /streams/api/button-press-event
    method: GET
- name: button_blocking_command
  endpoint:
    path: /streams/api/button-blocking-command
    method: GET
- name: display_command
  endpoint:
    path: /streams/api/display-command
    method: GET
- name: gateway_state_command
  endpoint:
    path: /streams/api/gateway-state-command
    method: GET
- name: gateway_state_event
  endpoint:
    path: /streams/api/gateway-state-event
    method: GET
- name: scanner_connectivity_command
  endpoint:
    path: /streams/api/scanner-connectivity-command
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
    params: {}
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: records
- name: User views
  endpoint:
    path: /user-views
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: events
- name: INSIGHT Mobile (Android)
  endpoint:
    path: /insight-mobile/android
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: Streams API
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
    params: {}
- name: streams_api
  endpoint:
    path: /streams/api
    method: GET
    data_selector: records
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: events
- name: Device Configurations
  endpoint:
    path: /device-configurations
    method: GET
    data_selector: configurations
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: supported_streams
- name: streams_api
  endpoint:
    path: /streams-api
    method: GET
    data_selector: records
- name: scanner
  endpoint:
    path: /scanner
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Supports a variety of events related to streaming.
- Insight Webportal account activated required
- Insight Mobile (Android) app installed on your Android device required
- Minimum required Android version is 8.0 or higher
- ProGlove Insight Mobile SDK requires a minimum Android API Level of 18
- Client apps that target API level 30+ and use Connect SDK version lower than 1.8.0
  will be affected.
- Add <queries> element to app Manifest file.
- Requires setup for OAuth2 authentication
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- ProGlove wearables are built for tough industrial environments but should be replaced
  regularly to ensure safety and comfort.
- Uses REST API for various integrations.
- Uses OAuth2 with refresh token — requires setup of connected app in Gateway
- Some events may not have all fields populated
- Supports WebSocket and MQTT for real-time data streaming.
- Check connectivity settings before integration
- Supports REST API for various events.
- Supports WebSocket and MQTT integration.
- Some objects like Contact may return nulls in deeply nested fields
- Supports various integration methods including WebSocket and MQTT.
- Although all templates can be set in both portrait and landscape orientations, not
  all templates are recommended to be used in all orientations.
- All screen views within a single screen must use the same template type.
- Each action button triggers a specific screen action when pressed.
- The SDK provides a helper method to return the reference ID of the action button
  assigned to the pressed physical button.
- Requires setup of permissions in the mobile application
- Enable Streams API and Multi-pairing
- Subscribing to display events, you will subscribing to display connection state
  as well.
- Make sure you unsubscribe from display events once you don’t need them anymore to
  prevent memory leaks.
- Supports multiple pairing modes
- Supports various streams including scan and error events.
- Supports both REST and Streams API.
- Uses OAuth2 with refresh token — requires setup of connected app in INSIGHT Mobile
- Some functionalities may require additional permissions
- Workflow and List templates can be paginated; Notification templates cannot.
- Keep the first page for primary actions and information, with additional pages for
  optional context that doesn't interrupt the main workflow.
- Supports various streams for data ingestion.
- Ensure device is connected to the network for API access.
- Connect Gateway to your network using WebSocket integration
- Connect Gateway to Wi-Fi by importing credentials in the network.json file
- Requires setup of INSIGHT Mobile SDK for integration
- Some events may not be available depending on the API endpoint.
- Some functionalities may depend on device permissions
- Requires setup of OAuth2 consent screen
- API may have rate limits on the number of requests
- Usage of Streams API for events requires configuration.
- Requires Bluetooth permissions for scanning functionality.
- Check connectivity settings before using the application.
- Requires setup of connected app in Gateway
- Ensure all devices are connected before sending commands
- WebSocket integration requires specific configurations
- Connect INSIGHT Mobile (Android) to INSIGHT
- ProGlove scanners use BLE (Bluetooth Low Energy) to connect to a host device.
- ProGlove scanners are designed for use in industrial environments.
- No specific notes provided
- Supports various streams including scan and error events
- Requires proper configuration of OAuth2 settings.
- Firmware updates are applied by you when you are ready for them.
- Uses REST API.
- Various features and configurations available for devices.
- 'ProGlove scanners have the following IP protection classifications: MARK 3 - IP65.'
- No authentication required for accessing the API.
- 'ProGlove scanners are designed for use in industrial environments and have the
  following IP protection classifications: MARK Display - IP54, MARK 3 - IP65, MARK
  2 - IP54, MARK Basic - IP54, LEO - IP43.'
- General performance improvements and bug fixes for improved stability of your ProGlove
  scanners.
- Always ensure all your devices are equipped with the latest firmware.
- Download the latest firmware for your devices from the INSIGHT webportal.
- Plug & Play connectivity - USB cable communication with the host system for your
  workstations.
- Easy management - Remote configurations, firmware updates and monitoring via the
  INSIGHT webportal.
- Maximum 5 scanners can be connected to a single Gateway device at the same time.
- API does not require authentication.
- Ensure Bluetooth permissions are granted for functionality.
- Ensure proper configuration before making API calls.
- Requires proper configuration of permissions and API access.
- Ensure the client ID and secret are kept secure.
- Photo Reporting is not supported on LEO scanners.
- Carefully test the performance of your scanners when using both Photo Reporting
  and Continuous Scanning in parallel, as certain technical difficulties may occur.
- Uses OAuth2 with refresh token — requires setup of connected app in INSIGHT Mobile
  API
- Some API endpoints may have rate limits
- After performing a partial reset using one of the above barcodes, the Gateway device
  will reboot.
- This is a necessary, last step for a complete reset and re-configuring of the device.
- In order to troubleshoot your Gateway device, you need to retrieve its log files.
- Requires setup of connected app in api
- Ensure to check the system requirements before configuring.
- Firmware updates may require device reboot.
- Requires Bluetooth permissions for connection.
- Requires setup of connected app in API
- Ensure correct permissions are granted for Bluetooth access
- In case you want to save the configuration barcode for later use, be aware that
  it expires after two hours. After that, you need to go back to your configuration
  and generate a new one.
- Only configurations with up to 10 Workflow Rules can be applied using a Configuration
  barcode, due to the size limitation of the configuration content.
- Make sure to add the same Workflow Rule to both profiles to enable profile switching.
- 'Profiles must be named, so this field gets automatically populated with each created
  profile in the following manner: Profile 1, Profile 2.'
- You can rename your profile here and select it as a default one by checking the
  box.
- Some events may not be delivered in real-time due to network conditions
- When selecting the Custom integration path, if you do not define the output behavior
  manually in the Workflow Rules, the barcode content will not be sent.
- If the Gateway is connected via USB to a power source but not a host system, you
  must select Disabled under USB Mode Configuration and select WebSocket or MQTT under
  WebSocket and MQTT configurations.
- Scanner Illumination is developed for specific use cases and can significantly alter
  the scanner performance and range. We advise you to test the feature extensively
  before implementing it in your work processes.
- TX Power Attenuation - adjust the signal strength of your scanners (expressed in
  dBm) in order to reduce the scanner's battery power consumption. The default and
  maximum value of TX power is 0 dBm.
- This feature is available on Gateway Application Firmware version 2.2.0 and above.
- Ensure to follow the latest SDK guidelines for integration.
- This rule will only affect the 12-digit barcodes. All other barcodes will be scanned
  and sent without modification.
- No authentication required for accessing wearables data.
- Ensure the API is compatible with the current application version.
- Minimum firmware version 2.2.0 installed on your Gateway.
- Once the network.json file is processed by the Gateway, it is no longer accessible
  anywhere on the Mass storage device, therefore the network details are not exposed
  anywhere.
- As ProGlove does not store any user data on INSIGHT webportal, if you re-download
  the provisioning package for the already connected device, you will be asked to
  provide the SSID password again.
- In case Connectivity devices are linked with a hierarchy of levels with sublevels,
  the level most specific (or closest) to the Connectivity device overrules all other
  levels.
- Only one configuration can be a applied to a level or sublevel (1:1).
- Levels within My Organization should have a single type of Connectivity device (e.g.
  INSIGHT Mobile or Gateway and Gateway Plus).
- In case you are using older configuration files created before the release of the
  Remote Configuration functionality make sure you edit and save them once before
  you are able to link them to levels and/or sublevels.
- Access to a network is necessary for your Gateway to connect to the internet.
- Adding a network can be skipped and is an optional step, as both network and network
  credentials can be added manually later.
- The easiest way is to enter all details directly in the INSIGHT webportal while
  creating your Device Configuration.
- Supports various stream events like Scan event, Error event, and Scanner state.
- SSID is a required value and its max length is 32 characters.
- Pre-Shared key is required.
- The field visibility is set to ACCESS_POINT_VISIBILITY_VISIBLE by default. If the
  network is hidden, replace it with ACCESS_POINT_VISIBILITY_HIDDEN.
- Enables Streams API and Multi-pairing
- Uses OAuth2 with refresh token
- Ensure proper permissions are set for Bluetooth
- Some features may require additional configurations.
- Ensure proper network settings for API access.
- Upload takes up to 15 minutes. Do not disconnect the Gateway cable from the desktop
  during upload.
- Updating from v1.x to v2.x with the option On next reboot selected may take up to
  three shifts to complete the update because the scanner needs to reboot after each
  new firmware update.
- Requires Android 5.0 or higher
- Ensure Bluetooth is enabled for scanning
- Supports multiple pairing options.
- Every Streams API message coming from the Gateway is terminated by a Line Feed character.
- Uses JSON as marshalling format and UTF-8 encoding.
- Scanner state is an event received on scanner connection or disconnection from the
  Gateway.
- Gateway supports various integration methods including WebSocket and MQTT.
- This feature is only supported on Scanner Firmware Gen1 2.3.0 and higher and Gateway
  firmware 1.8.0 and higher.
- The API version is mandatory and should be specified as '1.0'.
- Enable Streams API
- Ensure that the device is properly configured before making API calls.
- Supports multiple connectivity options including WebSocket and MQTT.
- API calls may be throttled based on usage
- The Gateway works best when used via USB.
- General performance improvements and bug fixes.
- Maximum of 10 scanners can be connected to a single Gateway Plus device at the same
  time, contingent on environmental conditions.
- Ensure you have the correct API permissions to access the streams.
- No authentication required for Gateway API.
- Integration supports various device configurations and settings.
- To upload new files to the Gateway Plus (e.g. to trigger an update or update the
  information in the Status folder), the Gateway Plus has to be ejected from the host.
- Gateway supports a REST API for various integrations.
- It can take up to 30 seconds for a photo report to be transferred to INSIGHT and
  appear in the grid view.
- 'Maximum message size: 128 KB'
- 'Image resolution: Full, Half or Quarter'
- 'Jpeg quality setting: value from 5 to 100 that represents the .jpeg compression
  level'
- Gateway settings require careful configuration to ensure device connectivity.
- Requires Bluetooth permissions for scanner connectivity.
- Integrates with both WebSocket and MQTT protocols.
- This API does not require authentication.
- Uses REST API for data access
- Some events may not be sent due to connectivity issues
- In case you want to save the configuration barcode for later use, be aware that
  it expires after two hours. After that period, you need to go back to your configuration
  and generate a new one.
- No authentication required for accessing Gateway API.
- The supported MQTT broker version is version 3.1.1.
- 'reconnection min delay: 1s'
- 'reconnection max delay: 120s'
- Uses REST API for interaction.
- Delay actions do not support regular expressions and only include text matching.
- Supports integration with WebSocket and MQTT.
- Requires proper permissions for Bluetooth and network access.
- Once the network.json file is processed by the Gateway Plus, it is no longer accessible
  anywhere on the Mass storage device, therefore the network details are not exposed
  anywhere.
- No authentication is required for accessing the Gateway API.
- Gateway Plus supports a maximum of 10 ProGlove scanners.
- Mass Storage Mode can be set to Continuous or Manually.
- Some features may have specific API requirements
- You can apply the configuration directly in INSIGHT by simply scanning a QR code.
- Supports various connectivity options including WebSocket and MQTT.
- Configuring additional network settings using the network.json is supported on Gateway
  Plus starting with firmware version 2.13.0.
- Do not disconnect the cable of the Gateway Plus from your desktop during the update.
- During the reboot, the Gateway Plus might not display any LED feedback for a few
  seconds.
- Scanned data is UTF-8 encoded
- scan_bytes uses Base64 encoding for non-UTF-8 data
- Disconnections may not happen automatically.
- Refer to the Gateway settings documentation for configuration details.
- This feature is only supported on Scanner Firmware Gen1 2.3.0 and higher and Gateway
  Application Firmware 1.8.0 and higher.
- Requires setup of Gateway Plus device to receive pairing code.
- A Connectivity Device is necessary for your scanners to connect with and send data
  to your INSIGHT account.
- Some objects like Scanner may return nulls in deeply nested fields
- Certain integrations may introduce potential risks for the end users and their systems.
- Requires integration with OAuth2 for authentication.
- Ensure correct permissions are set for device scanning.
- Supports multiple pairing.
- Requires appropriate configuration for streams API to function.
- To obtain a PgLicence, contact your ProGlove representative.
- A ProGlove folder needs to be created in the root of shared storage. On most devices,
  it is not case sensitive.
- ProGlove INSIGHT Mobile does not gather, store, or process GPS location data. Only
  Bluetooth components are used.
- Supports multiple integrations including WebSocket and MQTT.
- Firmware update from v1.x to v2.x available
- Support for multi-pairing with streams API
- Supports Streams API for data ingestion.
- A default startActivity rule is created to start your business app with an action
  by an oncoming barcode event.
- Requires setup of connected app in INSIGHT Mobile
- Predefined port number appears in this field but can be changed at any time.
- Although ports can technically be integers lower than 1024, and port 80 is usually
  considered the WebSocket default, servers running on ports lower than 1024 require
  special root privileges on the running OS.
- The Display over other apps permission is required for starting an Activity from
  the background unless granted.
- Multiple integrations available including MQTT and WebSocket.
- Firmware update from v1.x to v2.x
- Uses OAuth2 for authentication
- Gateway supports multiple connectivity options.
- The button can be blocked or unblocked with specific commands.
- If no unblocking command is sent, the button will be unblocked by certain conditions.
- Supports MQTT integration for connectivity
- Uses OAuth2 with refresh token — requires setup of connected app in gateway
- Due to limitations of Android 11, you can no longer copy files to the Android/data/de.proglove.connect
  folder using the Android device only or via UEM (Unified Endpoint Management) system.
- For earlier Android versions, downloading the .apk directly to the Android device
  still works.
- On Android 11, you can still use the adb push command to push or pull files or folders
  to Android/data/de.proglove.connect.
- Additionally, permissions for installing third party applications (unknown sources)
  must be granted on your Android device.
- Supports various connectivity options including WebSocket and MQTT integration
- 'keep alive: 1200 seconds'
- 'reconnection min delay: 1 second'
- 'reconnection max delay: 120 seconds'
- Supports Streams API and Multi-pairing
- Some events may return nulls in certain fields
- Output action Start activity with component is not supported on Android 11 OS and
  higher due to Package visibility limitations introduced with this Android OS version.
- Supports various stream events like Scan event and Error event
- No specific notes available.
- Because the connection is based on the Bluetooth signal strength, the connection
  can vary and environmental conditions may affect the feature.
- Proximity pairing becomes inactive and the scanner unpairs if the scanner disconnects
  from the connectivity device, gets placed in a charger, or turns off.
- Once Proximity pairing is activated and you apply a configuration to your scanner
  with the Proximity pairing feature disabled, it will not work until you apply a
  configuration with the Proximity pairing feature enabled again.
- Changing the TX Power Attenuation in the Scanner settings affects the Proximity
  pairing feature. It might interfere or make it impossible for some devices to pair.
- Ensure the API is enabled before accessing it.
- The highest and the default value for photo resolution is 1280 x 960 pixels.
- Session timeout default value is 3 seconds, but can be between 1 and 10 seconds.
- Photo quality default value is 90, with acceptable values from 1 to 100.
- Profiles must be named and can be changed at any time.
- Only one profile can be active at a time.
- Make sure that the connected scanner has the firmware version that allows wireless
  configuration, otherwise the configuration will fail. Supported firmware is Scanner
  Firmware Gen1 1.5.1 and higher.
- Only the active profile’s Integration Path and Workflow Rules are executed when
  certain events happen (e.g. on barcode scan or scanner pairing).
- Basic integration requires setting up the application with specific permissions.
- User views may vary based on configurations.
- Explicit activation is only successful if the profile with the specified ID exists
  in the configuration file.
- Profiles can only be changed when INSIGHT Mobile is running.
- Supports Streams API for real-time data streaming.
- Check for compatibility with existing Gateway devices.
- Requires permissions to access certain features
- Ensure Bluetooth permissions are granted for full functionality
- Only one configuration can be applied to a level or sublevel (1:1).
- Setting up the complete My Organization hierarchy before enrolling Connectivity
  Devices like Gateway and INSIGHT Mobile (Android) is highly recommended.
- You can test a smaller number of devices but you might have to re-enroll the devices
  later when building your complete hierarchy.
- Setting up the complete My Organization hierarchy before enrolling Connectivity
  Devices like Gateway and INSIGHT Mobile (Android) is highly recommended. Make sure
  it resembles your organizational structure and has the hierarchy levels you need
  before connecting your devices.
- Connect Gateway to your network using MQTT integration
- If there is no scanner connected on the INSIGHT Mobile app start, the pairing barcode
  screen displays automatically.
- When using the Scan2Pair feature, you have 60 seconds to connect your scanner.
- Android 7 introduced the BLE scanning abuse prevention feature that prevents an
  app from stopping and starting BLE scans more than 5 times within 30 seconds.
- If you have paired your Android device with the scanner via HID before, connecting
  via Scan2Pair might not work properly.
- Starting from Android OS 10, Bluetooth scanning is restricted while the screen is
  off.
- Due to the Bluetooth issue introduced with Android 12, the INSIGHT Mobile app now
  assumes every disconnection was unintended and attempts to reconnect.
- User experience considerations are important when integrating.
- 'Minimum system requirements: Android OS version 7 and higher'
- Supports multiple connectivity options including MQTT and WebSocket.
- Receiving triple clicks over the SDK is currently not supported.
- If you are using scanners with firmware version lower than v2.5.0 `durationMs` value
  will be ignored.
- Gateway supports integration with multiple connectivity options.
- 'The passed status string can be one of the following: CONNECTED, DISCONNECTED,
  CONNECTING, ERROR, RECONNECTING, SEARCHING.'
- Ensure that the Gateway device is properly configured before connecting.
- Requires proper permissions for Bluetooth functionality.
- Ensure network connectivity for API calls.
- Supports multiple integration methods including WebSocket and MQTT.
- Supports Websocket and MQTT for real-time updates.
- Ensure proper permissions are set for scanning functionality.
- The refresh type parameter will be ignored, if you set a notification screen. These
  will always use PARTIAL_REFRESH.
- Some endpoints may have rate limits.
- This feature is only supported on Scanner Firmware Gen1 version 2.3.0, MAI Firmware
  version 1.0.2, and INSIGHT Mobile version 1.11.0 or higher.
- When you scan a barcode with MARK Display or MAI, the content of the scanned barcode
  displays on the screen for 5 seconds after which the screen reverts to the previous
  message.
- Uses WebSocket integration for real-time data streaming
- Starting with firmware v2.0.0, we support all printable characters of the ASCII
  and extended ASCII range.
- The text length, that you can send with each `SetScreen` command, is limited by
  the amount of transmitted bytes.
- Currently, there is no way of creating custom templates.
- Requires setup of connected app in INSIGHT Mobile API
- Some features may have specific permissions or configurations
- Early Access License activated is required to test the Photo feature.
- Starting with MARK firmware v2.0.0, feedback triggered this way temporarily overwrites
  the scanner’s global feedback settings.
- Do not use the replace queue flag as that could cancel the sequence. Make sure not
  to send feedback before setting the screen.
- 'You must set all goals to be > 0. Invalid or missing goals will be replaced by
  the following default values: Total Steps: 650, Total Scans: 10000, Average Scan
  Time: 1.5'
- Check compatibility with devices before integration
- Some features may require additional setup
- Setting a new value for an event tag will overwrite all previous values, including
  the timestamps.
- Supports various streams including scan events and error events.
- Downgrading firmware from a newer to an earlier version (i.e. v2.x.x to v1.x.x)
  is not supported.
- Uses OAuth2 with refresh token — requires setup of connected app in INSIGHT Mobile.
- Some events may return nulls in deeply nested fields.
- Supports various streaming events and commands.
- Supports over-the-air firmware updates
- Some objects like ChargingStation may return nulls in deeply nested fields
- This permission is only required for the firmware update and can be revoked later.
- 'Known devices with this issue: Unitech WD100'
- To prevent this, you can configure your scanner via the Insight Webportal to set
  the sleep mode to at least 15 minutes.
- You can also trigger a scan on your scanner during the update before it reaches
  5 minutes of idle time.
- To support clients with existing infrastructure, ProGlove collaborates with multiple
  solution partners to enable such clients to integrate with the ProGlove system.
- Staylinked offers an option to use ProGlove scanners as Beta version
- In case you already use Zebra DataWedge you can change the Intent action as per
  DataWedge configuration to see the scanned barcodes in your applications.
- 'Receiving this event can be done by listening for broadcast Intents of the following
  structure: Action: com.wavelink.intent.action.BARCODE'
- Supports various streams for events including scan event and error event.
- Supports Streams API for various events.
- New features and improvements for ProGlove barcode scanners in INSIGHT Mobile.
- Connect Gateway Plus to your network using MQTT integration
- Add a row with the key NSBluetoothAlwaysUsageDescription.
- Add a description of what you will use Bluetooth for (e.g. Bluetooth required in
  order to connect to a scanner.)
- To enable the background mode, add a row with the key UIBackgroundModes.
- Add bluetooth-central as a value for the first item in the UIBackgroundModes array.
- Information listed above is only used for Wi-Fi information data that is being sent
  to INSIGHT.
- Accessing Wi-Fi data requires a few more things to be added to the application level.
- Capability for Wi-Fi Access on both Debug and Release configurations.
- or it can also be done in the Entitlements files
- Refer to the documentation for specific integration details.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: Check the endpoint path.'
- '500 Internal Server Error: Retry the request after a brief wait.'
- '401 Unauthorized: Check token validity'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry the request'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check the request format and parameters.'
- '500 Internal Server Error: Try again later or contact support.'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Retry after some time'
- '400 Bad Request: Check your request payload'
- '404 Not Found: Ensure the endpoint is correct'
- '500 Internal Server Error: Try again later'
- '404 Not Found: Verify the endpoint and resource availability.'
- '404 Not Found: Check endpoint URL and availability'
- '500 Internal Server Error: Retry the request later'
- '404 Not Found: Ensure the endpoint exists and is correct.'
- '403 Forbidden: Ensure the correct permissions are set'
- '429 Too Many Requests: Reduce the frequency of requests'
- '403 Forbidden: Check API permissions or scopes'
- '500 Internal Server Error: Check server status or request format.'
- '400 Bad Request: Ensure all required parameters are included.'
- '401 Unauthorized: Verify OAuth token validity.'
- '400 Bad Request: Check the request payload and structure'
- '500 Internal Server Error: Contact support with error details'
- '400 Bad Request: Check request parameters'
- '400 Bad Request: Check the request parameters and try again.'
- '404 Not Found: Verify the endpoint URL is correct.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '400 Bad Request: Ensure request format is correct.'
- '404 Not Found: Check endpoint path.'
- '500 Internal Server Error: Retry or contact support.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check client credentials and permissions.'
- '404 Not Found: Verify endpoint URL and resource availability.'
- '401 Unauthorized: Check OAuth credentials and permissions'
- '500 Internal Server Error: Try again later or contact support'
- '500 Internal Server Error: Contact support if the issue persists'
- '404 Not Found: Check the endpoint path'
- '400 Bad Request: Validate request parameters'
- '500 Internal Server Error: Retry the request.'
- '401 Unauthorized: Check OAuth token and permissions'
- '404 Not Found: Verify endpoint paths'
- '500 Internal Server Error: Server issue, retry later.'
- '400 Bad Request: Check the request body or parameters'
- '401 Unauthorized: Check if the API key is valid'
- 'ERROR_UNKNOWN: An unknown error occurred (e.g. Display Command sent to a device
  without display).'
- 'ERROR_INVALID_COMMAND: The command is invalid (invalid JSON, invalid event_type,
  etc.).'
- 'ERROR_TIMEOUT: Timeout on request (e.g. device did not respond on time).'
- 'ERROR_DEVICE_NOT_FOUND: The device referenced by device_serial could not be found.'
- 'ERROR_PHOTO_NOT_SUPPORTED: The device referenced by device_serial does not support
  Photo Reporting.'
- 'ERROR_PHOTO_MODE_DISABLED: Photo Reporting was disabled on this Gateway.'
- 'ERROR_PHOTO_REPORT_CANCELLED: Photo Reporting was cancelled due to no photos being
  captured.'
- 'ERROR_PHOTO_REPORT_IN_PROGRESS: A Photo Reporting session is currently in progress
  for the device referenced by the device_serial.'
- '404 Not Found: Check the endpoint URL'
- '400 Bad Request: Verify request parameters'
- '404 Not Found: Check the endpoint path and parameters.'
- '401 Unauthorized: Check authentication credentials.'
- '401 Unauthorized: Check your credentials'
- '405 Method Not Allowed: Check the HTTP method used for the request.'
- '400 Bad Request: Verify the request parameters.'
- 'ERROR_INVALID_COMMAND: The command is invalid (invalid JSON, invalid event_type,
  etc.)'
- 'ERROR_PHOTO_MODE_DISABLED: Photo Reporting was disabled on this Gateway Plus.'
- '401 Unauthorized: Validate the access token.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check API key or token'
- '400 Bad Request: Check the input parameters for the request.'
- '401 Unauthorized: Ensure proper authentication if required.'
- '404 Not Found: The endpoint may not exist.'
- '400 Bad Request: Check request parameters for validity'
- '500 Internal Server Error: Retry later or check service status'
- '500 Internal Server Error: Try again later.'
- '404 Not Found: Check the endpoint path or parameters.'
- '403 Forbidden: Verify permissions and access rights.'
- '401 Unauthorized: Check permissions and token validity'
- '401 Unauthorized: Check your API token and permissions.'
- '500 Internal Server Error: Retry the request or contact support.'
- '400 Bad Request: Check your request parameters.'
- '500 Internal Server Error: Retry the request after some time.'
- '400 Bad Request: Check the request payload.'
- '401 Unauthorized: Verify the access token.'
- '404 Not Found: Ensure the endpoint exists.'
- '404 Not Found: Endpoint does not exist.'
- '401 Unauthorized: Verify API key and permissions.'
- '404 Not Found: Check endpoint URL and resource availability.'
- '500 Internal Server Error: Retry after a short delay.'
- '400 Bad Request: Check input parameters'
- SDK/Intent error and no screen will be set if sending a bigger number of bytes/characters.
- Insight Mobile logs incidents when exceeding the displayable limit.
- No results found
- '400 Bad Request: Check the request format and required fields'
- '404 Not Found: Verify the endpoint path and resource'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: Check the endpoint path or resource availability.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://insight.proglove.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.proglove.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
