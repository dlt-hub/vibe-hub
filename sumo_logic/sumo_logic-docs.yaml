resources:
- name: get_ingest_budgets
  endpoint:
    path: /ingest_budgets
    method: GET
    params:
      limit: 100
- name: create_ingest_budget
  endpoint:
    path: /ingest_budgets
    method: POST
    data_selector: budget
    params: {}
- name: get_ingest_budget
  endpoint:
    path: /ingest_budgets/{id}
    method: GET
    params: {}
- name: start_app_install_job
  endpoint:
    path: /apps/install
    method: POST
    data_selector: response
    params: {}
- name: app_install_job_status
  endpoint:
    path: /apps/install/status
    method: GET
    data_selector: response
    params: {}
- name: Import SLO or Folder
  endpoint:
    path: /import
    method: POST
    data_selector: slo_or_folder
    params:
      parentId: required
- name: Start App Uninstall Job
  endpoint:
    path: /uninstall
    method: POST
    data_selector: job_id
    params:
      uuid: required
- name: Get App Uninstall Job Status
  endpoint:
    path: /uninstall/status
    method: GET
    data_selector: status
    params:
      jobId: required
- name: Start App Upgrade Job
  endpoint:
    path: /upgrade
    method: POST
    data_selector: job_id
    params:
      uuid: required
      version: optional
- name: Get App Upgrade Job Status
  endpoint:
    path: /upgrade/status
    method: GET
    data_selector: status
    params:
      jobId: required
- name: List Apps
  endpoint:
    path: /apps
    method: GET
    data_selector: apps
    params:
      name: optional
      author: optional
- name: Get Details of App Version
  endpoint:
    path: /app/version
    method: GET
    data_selector: app_details
    params:
      uuid: required
      version: optional
- name: Get Subscription Status for User
  endpoint:
    path: /subscription/status
    method: GET
    data_selector: subscription_status
    params:
      uuid: required
- name: Subscribe to App Upgrade Notification
  endpoint:
    path: /subscribe
    method: POST
    data_selector: subscription
    params:
      uuid: required
- name: Unsubscribe from App Upgrade Notification
  endpoint:
    path: /unsubscribe
    method: POST
    data_selector: unsubscription
    params:
      uuid: required
- name: health_events
  endpoint:
    path: /v1/healthEvents
    method: GET
    data_selector: data
- name: archive_jobs
  endpoint:
    path: /v1/archive/{sourceId}/jobs
    method: GET
    data_selector: data
- name: get_ingest_budgets
  endpoint:
    path: /v2/ingestBudgets
    method: GET
- name: create_ingest_budget
  endpoint:
    path: /v2/ingestBudgets
    method: POST
- name: get_ingest_budget
  endpoint:
    path: /v2/ingestBudgets/{id}
    method: GET
- name: ingest_budgets
  endpoint:
    path: /ingestBudgets/{id}
    method: PUT
    data_selector: budget
    params: {}
- name: apps
  endpoint:
    path: /apps
    method: GET
    data_selector: apps
    params: {}
- name: app_install_status
  endpoint:
    path: /apps/install/{jobId}/status
    method: GET
- name: app_uninstall
  endpoint:
    path: /apps/{uuid}/uninstall
    method: POST
- name: app_uninstall_status
  endpoint:
    path: /apps/uninstall/{jobId}/status
    method: GET
- name: app_upgrade
  endpoint:
    path: /apps/{uuid}/upgrade
    method: POST
- name: app_upgrade_status
  endpoint:
    path: /apps/upgrade/{jobId}/status
    method: GET
- name: list_apps
  endpoint:
    path: /apps
    method: GET
- name: app_details
  endpoint:
    path: /apps/{uuid}/details
    method: GET
- name: user_subscription_status
  endpoint:
    path: /apps/{uuid}/subscription
    method: GET
- name: subscribe_app
  endpoint:
    path: /v2/apps/{uuid}/subscription
    method: POST
    data_selector: default
- name: unsubscribe_app
  endpoint:
    path: /v2/apps/{uuid}/subscription
    method: DELETE
    data_selector: default
- name: content_item_by_path
  endpoint:
    path: /content/path
    method: GET
    data_selector: contentItem
    params:
      path: required
- name: import_slo_or_folder
  endpoint:
    path: /content/folders/{folderId}/import
    method: POST
    data_selector: importJob
    params:
      parentId: required
- name: dashboard
  endpoint:
    path: /v2/dashboards
    method: GET
    data_selector: dashboards
    params:
      limit: '50'
- name: import_job_status
  endpoint:
    path: /v2/content/folders/{folderId}/import/{jobId}/status
    method: GET
    data_selector: status
- name: import_job_result
  endpoint:
    path: /v2/content/folders/{folderId}/import/{jobId}/result
    method: GET
    data_selector: result
- name: dashboard
  endpoint:
    path: /v2/dashboards/{id}
    method: GET
    data_selector: dashboard
- name: dashboard_migrate
  endpoint:
    path: /v2/dashboards/migrate
    method: POST
    data_selector: migrationStatus
- name: dashboard_report_schedules
  endpoint:
    path: /dashboards/reportSchedules
    method: GET
    data_selector: schedules
- name: dashboard_migrate_preview
  endpoint:
    path: /dashboards/migrate/preview
    method: POST
    data_selector: preview
- name: dashboard_migrate_status
  endpoint:
    path: /dashboards/migrate/{jobId}/status
    method: GET
    data_selector: status
- name: dashboard_migrate_result
  endpoint:
    path: /dashboards/migrate/{jobId}/result
    method: GET
    data_selector: result
- name: report_schedule
  endpoint:
    path: /v1/dashboards/reportSchedules/{scheduleId}
    method: DELETE
- name: folders
  endpoint:
    path: /v2/content/folders/{id}
    method: GET
- name: personal_folder
  endpoint:
    path: /v2/content/folders/personal
    method: GET
- name: global_folder
  endpoint:
    path: /v2/content/folders/global
    method: GET
- name: global_view_status
  endpoint:
    path: /v2/content/folders/global/{jobId}/status
    method: GET
- name: lookup_table
  endpoint:
    path: /api/v1/lookupTables
    method: POST
    data_selector: lookupTable
    params: {}
- name: import_slo_or_folder
  endpoint:
    path: /api/v2/content/folders/global/{jobId}/result
    method: GET
    data_selector: contentItems
    params: {}
- name: admin_recommended_folder
  endpoint:
    path: /api/v2/content/folders/adminRecommended
    method: GET
    data_selector: adminRecommendedFolder
    params: {}
- name: installed_apps_folder
  endpoint:
    path: /api/v2/content/folders/installedApps
    method: GET
    data_selector: installedAppsFolder
    params: {}
- name: get_lookup_table
  endpoint:
    path: /{id}
    method: GET
    data_selector: lookupTable
    params: {}
- name: update_lookup_table
  endpoint:
    path: /{id}
    method: PUT
    data_selector: lookupTable
    params: {}
- name: delete_lookup_table
  endpoint:
    path: /{id}
    method: DELETE
    data_selector: null
    params: {}
- name: upload_lookup_table
  endpoint:
    path: /{id}/upload
    method: POST
    data_selector: null
    params: {}
- name: truncate_lookup_table
  endpoint:
    path: /{id}/truncate
    method: POST
    data_selector: null
    params: {}
- name: update_lookup_table_row
  endpoint:
    path: /{id}/row
    method: PUT
    data_selector: null
    params: {}
- name: log_searches
  endpoint:
    path: /api/v1/logSearches
    method: GET
- name: import_slo_or_folder
  endpoint:
    path: /api/v1/lookupTables/{id}/deleteTableRow
    method: PUT
- name: log_searches
  endpoint:
    path: /logSearches/{id}
    method: GET
- name: parsers
  endpoint:
    path: /parsers
    method: GET
- name: root_parsers
  endpoint:
    path: /parsers/root
    method: GET
- name: parsers
  endpoint:
    path: /parsers/{id}
    method: PUT
    data_selector: Updated folder or parser.
- name: parsers
  endpoint:
    path: /parsers/{id}/path
    method: GET
    data_selector: Full path of the folder or parser.
- name: parsers
  endpoint:
    path: /system/parsers/{id}/lock
    method: POST
    data_selector: Updated folder or parser.
- name: parsers
  endpoint:
    path: /system/parsers/{id}/unlock
    method: POST
    data_selector: Updated folder or parser.
- name: parsers
  endpoint:
    path: /parsers/{id}/move
    method: POST
    data_selector: Moved folder or parser.
- name: parsers
  endpoint:
    path: /parsers/{id}/copy
    method: POST
    data_selector: Newly copied folder or parser.
- name: parsers
  endpoint:
    path: /parsers/{id}/export
    method: GET
    data_selector: Exported folder or parser.
- name: import_parser
  endpoint:
    path: /parsers/{parentId}/import
    method: post
    data_selector: parser
    params:
      parentId: required
- name: search_parser
  endpoint:
    path: /parsers/search
    method: get
    data_selector: parsers
- name: metrics_search
  endpoint:
    path: /metricsSearches
    method: post
    data_selector: metricsSearch
    params: {}
- name: metrics_search_by_id
  endpoint:
    path: /metricsSearches/{id}
    method: get
    data_selector: metricsSearch
- name: transformationRules
  endpoint:
    path: /transformationRules
    method: GET
    data_selector: rules
    params:
      limit: '100'
- name: metricsSearches
  endpoint:
    path: /metricsSearches/{id}
    method: PUT
    data_selector: metricsSearch
    params: {}
- name: metricsQueries
  endpoint:
    path: /metricsQueries
    method: POST
    data_selector: queries
    params: {}
- name: metricsSearches
  endpoint:
    path: /metricsSearches
    method: GET
    data_selector: searches
    params:
      limit: '50'
- name: access_keys
  endpoint:
    path: /accessKeys
    method: GET
    data_selector: accessKeys
- name: personal_access_keys
  endpoint:
    path: /accessKeys/personal
    method: GET
    data_selector: personalAccessKeys
- name: account_owner
  endpoint:
    path: /account/accountOwner
    method: GET
    data_selector: accountOwner
- name: account_status
  endpoint:
    path: /api/v1/account/status
    method: GET
    data_selector: status
- name: account_subdomain
  endpoint:
    path: /api/v1/account/subdomain
    method: GET
    data_selector: subdomain
- name: usage_report
  endpoint:
    path: /api/v1/account/usage/report
    method: POST
    data_selector: report
- name: usage_report_status
  endpoint:
    path: /api/v1/account/usage/report/{jobId}/status
    method: GET
    data_selector: status
- name: usage_forecast
  endpoint:
    path: /api/v1/account/usageForecast
    method: GET
- name: pending_update_request
  endpoint:
    path: /api/v1/plan/pendingUpdateRequest
    method: GET
- name: password_policy
  endpoint:
    path: /api/v1/passwordPolicy
    method: GET
- name: audit_policy
  endpoint:
    path: /api/v1/policies/audit
    method: GET
- name: search_audit_policy
  endpoint:
    path: /api/v1/policies/searchAudit
    method: GET
- name: searchAudit
  endpoint:
    path: /api/v1/policies/searchAudit
    method: PUT
    data_selector: response
    params: {}
- name: shareDashboardsOutsideOrganization
  endpoint:
    path: /api/v1/policies/shareDashboardsOutsideOrganization
    method: GET
    data_selector: response
    params: {}
- name: dataAccessLevel
  endpoint:
    path: /api/v1/policies/dataAccessLevel
    method: GET
    data_selector: response
    params: {}
- name: userConcurrentSessionsLimit
  endpoint:
    path: /api/v1/policies/userConcurrentSessionsLimit
    method: GET
    data_selector: response
    params: {}
- name: saml_configurations
  endpoint:
    path: /v1/saml/identityProviders
    method: GET
- name: maxUserSessionTimeout
  endpoint:
    path: /v1/policies/maxUserSessionTimeout
    method: GET
- name: accessKeysLifetime
  endpoint:
    path: /v1/policies/accessKeysLifetime
    method: GET
- name: identity_providers
  endpoint:
    path: /v1/saml/identityProviders/{id}
    method: PUT
    data_selector: response
    params: {}
- name: allowlisted_users
  endpoint:
    path: /v1/saml/allowlistedUsers
    method: GET
    data_selector: response
    params: {}
- name: identity_provider_metadata
  endpoint:
    path: /v1/saml/identityProviders/{id}/metadata
    method: GET
    data_selector: response
    params: {}
- name: service_allowlist_addresses
  endpoint:
    path: /api/v1/serviceAllowlist/addresses
    method: GET
    data_selector: addresses
- name: service_allowlist_addresses_add
  endpoint:
    path: /api/v1/serviceAllowlist/addresses/add
    method: POST
    data_selector: addresses
- name: service_allowlist_addresses_remove
  endpoint:
    path: /api/v1/serviceAllowlist/addresses/remove
    method: POST
    data_selector: addresses
- name: service_allowlist_enable
  endpoint:
    path: /api/v1/serviceAllowlist/enable
    method: POST
- name: service_allowlist_disable
  endpoint:
    path: /api/v1/serviceAllowlist/disable
    method: POST
- name: service_allowlist_status
  endpoint:
    path: /api/v1/serviceAllowlist/status
    method: GET
- name: service_accounts
  endpoint:
    path: /api/v1/serviceAccounts
    method: GET
- name: create_service_account
  endpoint:
    path: /api/v1/serviceAccounts
    method: POST
- name: service_account
  endpoint:
    path: /v1/serviceAccounts/{id}
    method: GET
    data_selector: service account object
- name: access_keys
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys
    method: GET
    data_selector: access key object
- name: Users
  endpoint:
    path: /scim/Users
    method: GET
    params:
      startIndex: 1
      count: 100
- name: User by ID
  endpoint:
    path: /scim/Users/{id}
    method: GET
- name: Create User
  endpoint:
    path: /scim/Users
    method: POST
- name: Update User
  endpoint:
    path: /scim/Users/{id}
    method: PUT
- name: Delete User
  endpoint:
    path: /scim/Users/{id}
    method: DELETE
- name: Patch User
  endpoint:
    path: /scim/Users/{id}
    method: PATCH
- name: connections
  endpoint:
    path: /connections
    method: GET
    data_selector: connections
    params:
      limit: 100
- name: incidentTemplates
  endpoint:
    path: /connections/incidentTemplates
    method: POST
    data_selector: templates
    params: {}
- name: usages
  endpoint:
    path: /organizations/usages
    method: POST
    data_selector: usageDetails
    params: {}
- name: dynamic_parsing_rules
  endpoint:
    path: /dynamicParsingRules
    method: GET
    data_selector: rules
- name: connections
  endpoint:
    path: /connections/{id}
    method: GET
    data_selector: connection
- name: dynamic_parsing_rules
  endpoint:
    path: /dynamicParsingRules/{id}
    method: DELETE
- name: field_extraction_rules
  endpoint:
    path: /extractionRules
    method: GET
- name: fields
  endpoint:
    path: /fields
    method: GET
- name: fields
  endpoint:
    path: /api/v1/fields/{id}
    method: GET
    data_selector: field
    params: {}
- name: fields_dropped
  endpoint:
    path: /api/v1/fields/dropped
    method: GET
    data_selector: droppedFields
    params: {}
- name: fields_builtin
  endpoint:
    path: /api/v1/fields/builtin
    method: GET
    data_selector: builtinFields
    params: {}
- name: fields_quota
  endpoint:
    path: /api/v1/fields/quota
    method: GET
    data_selector: quota
    params: {}
- name: partitions
  endpoint:
    path: /v1/partitions
    method: GET
    data_selector: partitions
    params:
      limit: '100'
- name: scheduled_views
  endpoint:
    path: /v1/scheduled_views
    method: GET
    data_selector: scheduled_views
    params:
      limit: '100'
- name: scheduled_views
  endpoint:
    path: /v1/scheduledViews
    method: GET
- name: scheduled_views_create
  endpoint:
    path: /v1/scheduledViews
    method: POST
- name: scheduled_views_get
  endpoint:
    path: /v1/scheduledViews/{id}
    method: GET
- name: scheduled_views_update
  endpoint:
    path: /v1/scheduledViews/{id}
    method: PUT
- name: scheduled_views_disable
  endpoint:
    path: /v1/scheduledViews/{id}/disable
    method: DELETE
- name: scheduled_views_pause
  endpoint:
    path: /v1/scheduledViews/{id}/pause
    method: POST
- name: scheduled_views_start
  endpoint:
    path: /v1/scheduledViews/{id}/start
    method: POST
- name: scheduled_views_quota
  endpoint:
    path: /v1/scheduledViews/quota
    method: GET
- name: destinations
  endpoint:
    path: /logsDataForwarding/destinations
    method: GET
- name: rules
  endpoint:
    path: /logsDataForwarding/rules
    method: GET
- name: data_deletion_rules
  endpoint:
    path: /v1/dataDeletionRules
    method: GET
    data_selector: rules
    params:
      limit: 50
- name: data_deletion_rule
  endpoint:
    path: /v1/dataDeletionRules/{id}
    method: GET
    data_selector: rule
- name: create_data_deletion_rule
  endpoint:
    path: /v1/dataDeletionRules
    method: POST
    data_selector: rule
- name: cancel_data_deletion_rule
  endpoint:
    path: /v1/dataDeletionRules/{id}/cancel
    method: POST
- name: data_deletion_rules
  endpoint:
    path: /api/v1/dataDeletionRules/{id}/delete
    method: DELETE
- name: tokens
  endpoint:
    path: /api/v1/tokens
    method: GET
- name: trace_query
  endpoint:
    path: /api/v1/tracing/tracequery
    method: POST
- name: trace_query
  endpoint:
    path: /api/v1/tracing/tracequery/{queryId}
    method: GET
    data_selector: response
    params: {}
- name: trace_query_status
  endpoint:
    path: /api/v1/tracing/tracequery/{queryId}/status
    method: GET
    data_selector: response
    params: {}
- name: trace_query_rows
  endpoint:
    path: /api/v1/tracing/tracequery/{queryId}/rows/{rowId}/traces
    method: GET
    data_selector: response
    params: {}
- name: metrics
  endpoint:
    path: /api/v1/tracing/metrics
    method: GET
    data_selector: response
    params: {}
- name: trace_fields
  endpoint:
    path: /api/v1/tracing/tracequery/fields
    method: GET
    data_selector: response
    params: {}
- name: trace_field_values
  endpoint:
    path: /api/v1/tracing/tracequery/fields/{field}/values
    method: GET
    data_selector: response
    params: {}
- name: trace_details
  endpoint:
    path: /api/v1/tracing/traces/{traceId}
    method: GET
    data_selector: response
    params: {}
- name: trace_exists
  endpoint:
    path: /api/v1/tracing/traces/{traceId}/exists
    method: GET
    data_selector: response
    params: {}
- name: spans
  endpoint:
    path: /tracing/traces/{traceId}/spans
    method: GET
- name: traceEvents
  endpoint:
    path: /tracing/traces/{traceId}/traceEvents
    method: GET
- name: criticalPath
  endpoint:
    path: /tracing/traces/{traceId}/criticalPath
    method: GET
- name: spanQuery
  endpoint:
    path: /tracing/spanquery
    method: POST
- name: spanDetails
  endpoint:
    path: /tracing/traces/{traceId}/spans/{spanId}
    method: GET
- name: billingInfo
  endpoint:
    path: /tracing/traces/{traceId}/spans/{spanId}/billingInfo
    method: GET
- name: cancelSpanQuery
  endpoint:
    path: /tracing/spanquery/{queryId}
    method: DELETE
- name: spanquery_status
  endpoint:
    path: /api/v1/tracing/spanquery/{queryId}/status
    method: GET
- name: spanquery_pause
  endpoint:
    path: /api/v1/tracing/spanquery/{queryId}/pause
    method: PUT
- name: spanquery_resume
  endpoint:
    path: /api/v1/tracing/spanquery/{queryId}/resume
    method: PUT
- name: spanquery_rows
  endpoint:
    path: /api/v1/tracing/spanquery/{queryId}/rows/{rowId}/spans
    method: GET
- name: spanquery_facets
  endpoint:
    path: /api/v1/tracing/spanquery/{queryId}/rows/{rowId}/facets
    method: GET
- name: spanquery_aggregates
  endpoint:
    path: /api/v1/tracing/spanquery/{queryId}/aggregates
    method: GET
- name: spanquery_fields
  endpoint:
    path: /api/v1/tracing/spanquery/fields
    method: GET
- name: spanquery_field_values
  endpoint:
    path: /api/v1/tracing/spanquery/fields/{field}/values
    method: GET
- name: service_map
  endpoint:
    path: /api/v1/tracing/serviceMap
    method: GET
    data_selector: nodes
- name: roles
  endpoint:
    path: /api/v2/roles
    method: GET
    data_selector: roles
    params:
      limit: 100
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params:
      limit: 100
- name: role
  endpoint:
    path: /roles/{id}
    method: GET
    data_selector: role
    params: {}
- name: import_role
  endpoint:
    path: /roles
    method: POST
    data_selector: role
    params: {}
- name: update_role
  endpoint:
    path: /roles/{id}
    method: PUT
    data_selector: role
    params: {}
- name: delete_role
  endpoint:
    path: /roles/{id}
    method: DELETE
    data_selector: status
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
    params:
      limit: '100'
      token: continuation token
- name: user_by_id
  endpoint:
    path: /v1/users/{id}
    method: GET
    data_selector: user
    params: {}
- name: unlock_user
  endpoint:
    path: /users/{id}/unlock
    method: POST
- name: disable_mfa
  endpoint:
    path: /users/{id}/mfa/disable
    method: PUT
- name: resend_welcome_email
  endpoint:
    path: /users/{id}/resendWelcomeEmail
    method: POST
- name: threat_intel_db_info
  endpoint:
    path: /threatIntel/datastore/db
    method: GET
- name: delete_threat_intel_db
  endpoint:
    path: /threatIntel/datastore/db
    method: DELETE
- name: retention_period
  endpoint:
    path: /threatIntel/datastore/retentionPeriod
    method: GET
- name: update_data_source
  endpoint:
    path: /threatIntel/datastore/dataSource/{dataSourceName}
    method: PUT
- name: otCollectors
  endpoint:
    path: /otCollectors
    method: POST
    data_selector: results
- name: otCollector_by_id
  endpoint:
    path: /otCollectors/{id}
    method: GET
    data_selector: collector
- name: ot_collectors_total_count
  endpoint:
    path: /otCollectors/totalCount
    method: GET
- name: ot_collectors_by_name
  endpoint:
    path: /otCollectors/otCollectorsByName
    method: GET
- name: source_template
  endpoint:
    path: /sourceTemplate
    method: GET
- name: source_template_by_id
  endpoint:
    path: /sourceTemplate/{id}
    method: GET
- name: create_source_template
  endpoint:
    path: /sourceTemplate
    method: POST
- name: update_source_template
  endpoint:
    path: /sourceTemplate/{id}
    method: POST
- name: delete_offline_ot_collectors
  endpoint:
    path: /otCollectors/offline
    method: DELETE
- name: budgets
  endpoint:
    path: /budgets
    method: GET
    data_selector: budgets
    params:
      limit: 100
- name: sourceTemplate
  endpoint:
    path: /sourceTemplate/{id}
    method: DELETE
    data_selector: '204'
- name: upgradeSourceTemplate
  endpoint:
    path: /upgrade/sourceTemplate/{id}
    method: POST
    data_selector: '200'
- name: getLinkedSourceTemplatesImpact
  endpoint:
    path: /sourceTemplate/getLinkedSourceTemplatesImpact
    method: POST
    data_selector: '200'
- name: schemaIdentitiesGrouped
  endpoint:
    path: /schemaIdentitiesGrouped
    method: GET
    data_selector: '200'
- name: budgets
  endpoint:
    path: /budgets/{budgetId}
    method: GET
    data_selector: budget
    params: {}
- name: monitors_usage_info
  endpoint:
    path: /monitors/usageInfo
    method: GET
    data_selector: MonitorUsageInfo
    params: {}
- name: monitors_playbooks
  endpoint:
    path: /monitors/playbooks
    method: GET
    data_selector: MonitorPlaybooks
    params: {}
- name: playbook_details
  endpoint:
    path: /monitors/playbooksDetails
    method: GET
- name: monitors
  endpoint:
    path: /monitors
    method: GET
- name: root_monitors
  endpoint:
    path: /monitors/root
    method: GET
- name: search_monitors
  endpoint:
    path: /monitors/search
    method: GET
- name: monitor_by_id
  endpoint:
    path: /monitors/{id}
    method: GET
- name: import_monitor
  endpoint:
    path: /monitors
    method: POST
- name: delete_monitor
  endpoint:
    path: /monitors
    method: DELETE
- name: monitors
  endpoint:
    path: /monitors/{id}
    method: PUT
    data_selector: monitor
    params: {}
- name: monitors_path
  endpoint:
    path: /monitors/{id}/path
    method: GET
    data_selector: path
    params: {}
- name: monitors_move
  endpoint:
    path: /monitors/{id}/move
    method: POST
    data_selector: move
    params: {}
- name: monitors_copy
  endpoint:
    path: /monitors/{id}/copy
    method: POST
    data_selector: copy
    params: {}
- name: monitors_import
  endpoint:
    path: /monitors/{parentId}/import
    method: POST
    data_selector: import
    params: {}
- name: monitors_export
  endpoint:
    path: /monitors/{id}/export
    method: GET
    data_selector: export
    params: {}
- name: monitor_permissions
  endpoint:
    path: /monitors/{id}/permissions
    method: GET
- name: set_monitor_permissions
  endpoint:
    path: /monitors/permissions/set
    method: PUT
- name: revoke_monitor_permissions
  endpoint:
    path: /monitors/permissions/revoke
    method: PUT
- name: muting_schedules
  endpoint:
    path: /mutingSchedules
    method: GET
- name: create_muting_schedule
  endpoint:
    path: /mutingSchedules
    method: POST
- name: delete_muting_schedule
  endpoint:
    path: /mutingSchedules
    method: DELETE
- name: root
  endpoint:
    path: /mutingSchedules/root
    method: GET
- name: search
  endpoint:
    path: /mutingSchedules/search
    method: GET
- name: by_id
  endpoint:
    path: /mutingSchedules/{id}
    method: GET
- name: path_by_id
  endpoint:
    path: /mutingSchedules/{id}/path
    method: GET
- name: copy_by_id
  endpoint:
    path: /mutingSchedules/{id}/copy
    method: POST
- name: export_by_id
  endpoint:
    path: /mutingSchedules/{id}/export
    method: GET
- name: mutingSchedules
  endpoint:
    path: /mutingSchedules/{parentId}/import
    method: post
    data_selector: response
    params: {}
- name: slos_sli
  endpoint:
    path: /slos/sli
    method: get
    data_selector: response
    params:
      ids: ''
- name: slos_usageInfo
  endpoint:
    path: /slos/usageInfo
    method: get
    data_selector: response
    params: {}
- name: slos
  endpoint:
    path: /slos
    method: get
    data_selector: response
    params: {}
- name: slos_root
  endpoint:
    path: /slos/root
    method: get
    data_selector: response
    params: {}
- name: slos_path
  endpoint:
    path: /slos/path
    method: get
    data_selector: response
    params: {}
- name: slos_create
  endpoint:
    path: /slos
    method: post
    data_selector: response
    params: {}
- name: slos_delete
  endpoint:
    path: /slos
    method: delete
    data_selector: response
    params: {}
- name: slos_search
  endpoint:
    path: /slos/search
    method: GET
    data_selector: slos
- name: slos_id
  endpoint:
    path: /slos/{id}
    method: GET
    data_selector: slos
- name: slos_id_path
  endpoint:
    path: /slos/{id}/path
    method: GET
    data_selector: path
- name: slos_id_export
  endpoint:
    path: /slos/{id}/export
    method: GET
    data_selector: export
- name: slos_id_move
  endpoint:
    path: /slos/{id}/move
    method: POST
    data_selector: move
- name: slos_id_copy
  endpoint:
    path: /slos/{id}/copy
    method: POST
    data_selector: copy
- name: slos_id_delete
  endpoint:
    path: /slos/{id}
    method: DELETE
    data_selector: delete
- name: import_slo_or_folder
  endpoint:
    path: /slos/{parentId}/import
    method: POST
    data_selector: id
    params:
      parentId: required
- name: contentFolders
  endpoint:
    path: /content/folders
    method: GET
    data_selector: folders
    params: {}
- name: importScheduledSearch
  endpoint:
    path: /content/folders/{folder_id}/import
    method: POST
    data_selector: job_id
    params: {}
- name: importJobStatus
  endpoint:
    path: /content/folders/{folder_id}/import/{job_id}/status
    method: GET
    data_selector: status
    params: {}
- name: listApps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: applications
    params: {}
- name: getApp
  endpoint:
    path: /v1/apps/{uuid}
    method: GET
    data_selector: app
    params:
      uuid: required
- name: installApp
  endpoint:
    path: /v1/apps/{uuid}/install
    method: POST
    data_selector: job
    params:
      uuid: required
- name: getAsyncInstallStatus
  endpoint:
    path: /v1/apps/install/{jobId}/status
    method: GET
    data_selector: status
    params:
      jobId: required
- name: asyncInstallApp
  endpoint:
    path: /v2/apps/{uuid}/install
    method: POST
    data_selector: job
    params:
      uuid: required
- name: getAsyncInstallAppStatus
  endpoint:
    path: /v2/apps/install/{jobId}/status
    method: GET
    data_selector: status
    params:
      jobId: required
- name: asyncUninstallApp
  endpoint:
    path: /v2/apps/{uuid}/uninstall
    method: POST
    data_selector: job
    params:
      uuid: required
- name: getAsyncUninstallAppStatus
  endpoint:
    path: /v2/apps/uninstall/{jobId}/status
    method: GET
    data_selector: status
    params:
      jobId: required
- name: asyncUpgradeApp
  endpoint:
    path: /v2/apps/{uuid}/upgrade
    method: POST
    data_selector: job
    params:
      uuid: required
- name: getAsyncUpgradeAppStatus
  endpoint:
    path: /v2/apps/upgrade/{jobId}/status
    method: GET
    data_selector: status
    params:
      jobId: required
- name: listAppsV2
  endpoint:
    path: /v2/apps
    method: GET
    data_selector: applications
    params: {}
- name: getAppDetails
  endpoint:
    path: /v2/apps/{uuid}/details
    method: GET
    data_selector: details
    params:
      uuid: required
- name: connections
  endpoint:
    path: /v1/connections
    method: GET
    data_selector: connections
    params:
      limit: '100'
- name: scheduledViews
  endpoint:
    path: /v1/scheduledViews
    method: GET
    data_selector: scheduledViews
    params:
      limit: '100'
- name: lookupTables
  endpoint:
    path: /v1/lookupTables
    method: POST
    data_selector: lookupTable
    params: {}
- name: job_status
  endpoint:
    path: /v1/lookupTables/jobs/{jobId}/status
    method: GET
    data_selector: schema
    params:
      jobId: string
- name: truncate_table
  endpoint:
    path: /v1/lookupTables/{id}/truncate
    method: POST
    data_selector: schema
    params:
      id: string
- name: update_table_row
  endpoint:
    path: /v1/lookupTables/{id}/row
    method: PUT
    data_selector: schema
    params:
      id: string
- name: delete_table_row
  endpoint:
    path: /v1/lookupTables/{id}/deleteTableRow
    method: PUT
    data_selector: schema
    params:
      id: string
- name: list_partitions
  endpoint:
    path: /v1/partitions
    method: GET
    data_selector: schema
    params:
      limit: integer
      token: string
      viewTypes: string
- name: partitions
  endpoint:
    path: /v1/partitions
    method: GET
    data_selector: partitions
    params: {}
- name: logsDataForwardingDestinations
  endpoint:
    path: /v1/logsDataForwarding/destinations
    method: GET
    data_selector: destinations
    params: {}
- name: logsDataForwardingRules
  endpoint:
    path: /v1/logsDataForwarding/rules
    method: GET
    data_selector: rules
    params: {}
- name: dataDeletionRules
  endpoint:
    path: /v1/dataDeletionRules
    method: GET
    data_selector: rules
    params: {}
- name: data_deletion_rule
  endpoint:
    path: /v1/dataDeletionRules/{id}/delete
    method: DELETE
    data_selector: records
    params:
      id: string
- name: extraction_rules
  endpoint:
    path: /v1/extractionRules
    method: GET
    data_selector: records
    params:
      limit: integer
      token: string
- name: dynamic_parsing_rules
  endpoint:
    path: /v1/dynamicParsingRules
    method: GET
    data_selector: records
    params:
      limit: integer
      token: string
- name: custom_fields
  endpoint:
    path: /v1/fields
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
    params:
      limit: 100
- name: roles
  endpoint:
    path: /v1/roles
    method: GET
    data_selector: roles
    params:
      limit: 100
- name: createFolder
  endpoint:
    path: /v2/content/folders
    method: POST
    data_selector: folder
    params: {}
- name: getFolder
  endpoint:
    path: /v2/content/folders/{id}
    method: GET
    data_selector: folder
    params: {}
- name: updateFolder
  endpoint:
    path: /v2/content/folders/{id}
    method: PUT
    data_selector: folder
    params: {}
- name: getPersonalFolder
  endpoint:
    path: /v2/content/folders/personal
    method: GET
    data_selector: folder
    params: {}
- name: getGlobalView
  endpoint:
    path: /v2/content/folders/global
    method: GET
    data_selector: globalView
    params: {}
- name: getGlobalFolderAsync
  endpoint:
    path: /v2/content/folders/global/{jobId}/status
    method: GET
    data_selector: content
    params:
      jobId: string
- name: getAdminRecommendedFolderAsync
  endpoint:
    path: /v2/content/folders/adminRecommended
    method: GET
    data_selector: content
    params: {}
- name: getInstalledAppsFolderAsync
  endpoint:
    path: /v2/content/folders/installedApps
    method: GET
    data_selector: content
    params: {}
- name: getContentPermissions
  endpoint:
    path: /v2/content/{id}/permissions
    method: GET
    data_selector: content
    params:
      id: string
- name: addContentPermissions
  endpoint:
    path: /v2/content/{id}/permissions/add
    method: PUT
    data_selector: content
    params:
      id: string
- name: removeContentPermissions
  endpoint:
    path: /v2/content/{id}/permissions/remove
    method: PUT
    data_selector: content
    params:
      id: string
- name: getContentByPath
  endpoint:
    path: /v2/content/path
    method: GET
    data_selector: content
    params:
      path: string
- name: content
  endpoint:
    path: /v2/content/{contentId}/path
    method: get
- name: export
  endpoint:
    path: /v2/content/{id}/export
    method: post
- name: import
  endpoint:
    path: /v2/content/folders/{folderId}/import
    method: post
- name: delete
  endpoint:
    path: /v2/content/{id}/delete
    method: delete
- name: copy
  endpoint:
    path: /v2/content/{id}/copy
    method: post
- name: move
  endpoint:
    path: /v2/content/{id}/move
    method: post
- name: transformationRules
  endpoint:
    path: /v1/transformationRules
    method: get
- name: accountOwner
  endpoint:
    path: /v1/account/accountOwner
    method: get
- name: accountStatus
  endpoint:
    path: /v1/account/status
    method: get
- name: subdomain
  endpoint:
    path: /v1/account/subdomain
    method: get
- name: allowlisted_users
  endpoint:
    path: /v1/saml/allowlistedUsers/{userId}
    method: POST
    data_selector: application/json
    params: {}
- name: remove_allowlisted_user
  endpoint:
    path: /v1/saml/allowlistedUsers/{userId}
    method: DELETE
    data_selector: application/json
    params: {}
- name: enable_saml_lockdown
  endpoint:
    path: /v1/saml/lockdown/enable
    method: POST
    data_selector: application/json
    params: {}
- name: disable_saml_lockdown
  endpoint:
    path: /v1/saml/lockdown/disable
    method: POST
    data_selector: application/json
    params: {}
- name: get_saml_metadata
  endpoint:
    path: /v1/saml/identityProviders/{id}/metadata
    method: GET
    data_selector: application/xml
    params: {}
- name: list_allowlisted_cidrs
  endpoint:
    path: /v1/serviceAllowlist/addresses
    method: GET
    data_selector: application/json
    params: {}
- name: add_allowlisted_cidrs
  endpoint:
    path: /v1/serviceAllowlist/addresses/add
    method: POST
    data_selector: application/json
    params: {}
- name: remove_allowlisted_cidrs
  endpoint:
    path: /v1/serviceAllowlist/addresses/remove
    method: POST
    data_selector: application/json
    params: {}
- name: enable_service_allowlisting
  endpoint:
    path: /v1/serviceAllowlist/enable
    method: POST
    data_selector: application/json
    params: {}
- name: disable_service_allowlisting
  endpoint:
    path: /v1/serviceAllowlist/disable
    method: POST
    data_selector: application/json
    params: {}
- name: get_allowlisting_status
  endpoint:
    path: /v1/serviceAllowlist/status
    method: GET
    data_selector: application/json
    params: {}
- name: get_audit_policy
  endpoint:
    path: /v1/policies/audit
    method: GET
    data_selector: application/json
    params: {}
- name: set_audit_policy
  endpoint:
    path: /v1/policies/audit
    method: PUT
    data_selector: application/json
    params: {}
- name: get_search_audit_policy
  endpoint:
    path: /v1/policies/searchAudit
    method: GET
    data_selector: application/json
    params: {}
- name: set_search_audit_policy
  endpoint:
    path: /v1/policies/searchAudit
    method: PUT
    data_selector: application/json
    params: {}
- name: get_share_dashboards_outside_organization_policy
  endpoint:
    path: /v1/policies/shareDashboardsOutsideOrganization
    method: GET
    data_selector: application/json
    params: {}
- name: set_share_dashboards_outside_organization_policy
  endpoint:
    path: /v1/policies/shareDashboardsOutsideOrganization
    method: PUT
    data_selector: application/json
    params: {}
- name: get_data_access_level_policy
  endpoint:
    path: /v1/policies/dataAccessLevel
    method: GET
    data_selector: application/json
    params: {}
- name: set_data_access_level_policy
  endpoint:
    path: /v1/policies/dataAccessLevel
    method: PUT
    data_selector: application/json
    params: {}
- name: get_user_concurrent_sessions_limit_policy
  endpoint:
    path: /v1/policies/userConcurrentSessionsLimit
    method: GET
    data_selector: application/json
    params: {}
- name: set_user_concurrent_sessions_limit_policy
  endpoint:
    path: /v1/policies/userConcurrentSessionsLimit
    method: PUT
    data_selector: application/json
    params: {}
- name: get_max_user_session_timeout_policy
  endpoint:
    path: /v1/policies/maxUserSessionTimeout
    method: GET
    data_selector: application/json
    params: {}
- name: set_max_user_session_timeout_policy
  endpoint:
    path: /v1/policies/maxUserSessionTimeout
    method: PUT
    data_selector: application/json
    params: {}
- name: get_access_keys_lifetime_policy
  endpoint:
    path: /v1/policies/accessKeysLifetime
    method: GET
    data_selector: application/json
    params: {}
- name: healthEvents
  endpoint:
    path: /v1/healthEvents
    method: GET
    data_selector: results
    params:
      limit: 100
- name: archiveJobs
  endpoint:
    path: /v1/archive/{sourceId}/jobs
    method: GET
    data_selector: jobs
    params:
      limit: 10
- name: dashboardReportSchedules
  endpoint:
    path: /v1/dashboards/reportSchedules
    method: GET
    data_selector: schedules
    params: {}
- name: reportSchedules
  endpoint:
    path: /v1/dashboards/reportSchedules
    method: GET
    data_selector: reportSchedules
- name: metricsSearches
  endpoint:
    path: /v2/metricsSearches
    method: GET
    data_selector: metricsSearches
    params:
      limit: 50
- name: parsersLockById
  endpoint:
    path: /v1/parsers/{id}/lock
    method: post
    data_selector: application/json
    params: {}
- name: parsersUnlockById
  endpoint:
    path: /v1/parsers/{id}/unlock
    method: post
    data_selector: application/json
    params: {}
- name: parsersMove
  endpoint:
    path: /v1/parsers/{id}/move
    method: post
    data_selector: application/json
    params: {}
- name: parsersCopy
  endpoint:
    path: /v1/parsers/{id}/copy
    method: post
    data_selector: application/json
    params: {}
- name: parsersExportItem
  endpoint:
    path: /v1/parsers/{id}/export
    method: get
    data_selector: application/json
    params: {}
- name: parsersImportItem
  endpoint:
    path: /v1/parsers/{parentId}/import
    method: post
    data_selector: application/json
    params: {}
- name: parsersGetByPath
  endpoint:
    path: /v1/parsers/path
    method: get
    data_selector: application/json
    params: {}
- name: parsersSearch
  endpoint:
    path: /v1/parsers/search
    method: get
    data_selector: application/json
    params: {}
- name: systemParsersLockById
  endpoint:
    path: /v1/system/parsers/{id}/lock
    method: post
    data_selector: application/json
    params: {}
- name: systemParsersUnlockById
  endpoint:
    path: /v1/system/parsers/{id}/unlock
    method: post
    data_selector: application/json
    params: {}
- name: listServiceAccounts
  endpoint:
    path: /v1/serviceAccounts
    method: get
    data_selector: application/json
    params: {}
- name: createServiceAccount
  endpoint:
    path: /v1/serviceAccounts
    method: post
    data_selector: application/json
    params: {}
- name: getServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{id}
    method: get
    data_selector: application/json
    params: {}
- name: updateServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{id}
    method: put
    data_selector: application/json
    params: {}
- name: deleteServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{id}
    method: delete
    data_selector: application/json
    params: {}
- name: listAccessKeysForServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys
    method: get
    data_selector: application/json
    params: {}
- name: createAccessKeyForServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys
    method: post
    data_selector: application/json
    params: {}
- name: getAccessKeyByIdOfAServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys/{accessId}
    method: get
    data_selector: application/json
    params: {}
- name: updateAccessKeyOfAServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys/{accessId}
    method: put
    data_selector: application/json
    params: {}
- name: deleteAccessKeyOfAServiceAccount
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys/{accessId}
    method: delete
    data_selector: application/json
    params: {}
- name: listSCIMUsers
  endpoint:
    path: /v1/scim/Users
    method: get
    data_selector: application/json
    params: {}
- name: createSCIMUser
  endpoint:
    path: /v1/scim/Users
    method: POST
    data_selector: user
    params: {}
- name: getSCIMUserById
  endpoint:
    path: /v1/scim/Users/{id}
    method: GET
    data_selector: user
    params: {}
- name: updateSCIMUser
  endpoint:
    path: /v1/scim/Users/{id}
    method: PUT
    data_selector: user
    params: {}
- name: deleteSCIMUserById
  endpoint:
    path: /v1/scim/Users/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: patchSCIMUser
  endpoint:
    path: /v1/scim/Users/{id}
    method: PATCH
    data_selector: user
    params: {}
- name: span_details
  endpoint:
    path: /v1/tracing/traces/{traceId}/spans/{spanId}
    method: GET
    data_selector: details
- name: span_billing_details
  endpoint:
    path: /v1/tracing/traces/{traceId}/spans/{spanId}/billingInfo
    method: GET
    data_selector: billingInfo
- name: span_analytics_query
  endpoint:
    path: /v1/tracing/spanquery
    method: POST
    data_selector: queryExecutionResult
- name: cancel_span_analytics_query
  endpoint:
    path: /v1/tracing/spanquery/{queryId}
    method: DELETE
    data_selector: cancelResult
- name: span_query_status
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/status
    method: GET
    data_selector: status
- name: pause_span_analytics_query
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/pause
    method: PUT
    data_selector: pauseResult
- name: resume_span_analytics_query
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/resume
    method: PUT
    data_selector: resumeResult
- name: span_query_result
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/rows/{rowId}/spans
    method: GET
    data_selector: spans
- name: span_query_facets
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/rows/{rowId}/facets
    method: GET
    data_selector: facets
- name: span_query_aggregates
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/aggregates
    method: GET
    data_selector: aggregates
- name: span_query_fields
  endpoint:
    path: /v1/tracing/spanquery/fields
    method: GET
    data_selector: fields
- name: span_query_field_values
  endpoint:
    path: /v1/tracing/spanquery/fields/{field}/values
    method: GET
    data_selector: fieldValues
- name: service_map
  endpoint:
    path: /v1/tracing/serviceMap
    method: GET
    data_selector: serviceMap
- name: otCollector
  endpoint:
    path: /v1/otCollectors/offline
    method: DELETE
    data_selector: '204'
    params: {}
- name: sourceTemplate
  endpoint:
    path: /v1/sourceTemplate
    method: GET
    data_selector: '200'
    params:
      showDisabled: 'false'
- name: sourceTemplate
  endpoint:
    path: /v1/sourceTemplate/{id}
    method: GET
    data_selector: '200'
    params: {}
- name: budgets
  endpoint:
    path: /v1/budgets
    method: GET
    data_selector: '200'
    params:
      limit: '100'
- name: mutingSchedules
  endpoint:
    path: /v1/mutingSchedules
    method: GET
    data_selector: content
    params:
      ids: A comma-separated list of identifiers
- name: mutingSchedulesCreate
  endpoint:
    path: /v1/mutingSchedules
    method: POST
    data_selector: content
    params:
      parentId: Identifier of the parent folder
- name: mutingSchedulesDelete
  endpoint:
    path: /v1/mutingSchedules
    method: DELETE
    data_selector: content
    params:
      ids: A comma-separated list of identifiers
- name: mutingSchedulesRoot
  endpoint:
    path: /v1/mutingSchedules/root
    method: GET
    data_selector: content
- name: mutingSchedulesSearch
  endpoint:
    path: /v1/mutingSchedules/search
    method: GET
    data_selector: content
    params:
      query: The search query
- name: mutingSchedules
  endpoint:
    path: /v1/mutingSchedules/{id}
    method: GET
    data_selector: mutingSchedulesLibraryBaseResponse
    params: {}
- name: slos
  endpoint:
    path: /v1/slos
    method: GET
    data_selector: IdToSlosLibraryBaseResponseMap
    params: {}
- name: slos
  endpoint:
    path: /v1/slos
    method: GET
    data_selector: items
    params:
      limit: 1000
      offset: 0
- name: slosById
  endpoint:
    path: /v1/slos/{id}
    method: GET
    data_selector: item
- name: slosUpdateById
  endpoint:
    path: /v1/slos/{id}
    method: PUT
    data_selector: item
- name: slosDeleteById
  endpoint:
    path: /v1/slos/{id}
    method: DELETE
    data_selector: item
- name: slosFullPath
  endpoint:
    path: /v1/slos/{id}/path
    method: GET
    data_selector: path
- name: slosMove
  endpoint:
    path: /v1/slos/{id}/move
    method: POST
    data_selector: item
- name: slosCopy
  endpoint:
    path: /v1/slos/{id}/copy
    method: POST
    data_selector: item
- name: slosExport
  endpoint:
    path: /v1/slos/{id}/export
    method: GET
    data_selector: exportedItem
- name: slosImport
  endpoint:
    path: /v1/slos/{parentId}/import
    method: POST
    data_selector: importedItem
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ReportFilterSyncDefinition
  endpoint:
    params:
      required:
      - fieldName
      - filterType
      - label
      - panelIds
      - properties
- name: ReportPanelSyncDefinition
  endpoint:
    params:
      required:
      - detailLevel
      - height
      - id
      - metricsQueries
      - name
      - properties
      - queryParameters
      - queryString
      - timeRange
      - viewerType
      - width
      - x
      - y
- name: SavedSearchWithScheduleSyncDefinition
  endpoint:
    path: /components/schemas/SavedSearchWithScheduleSyncDefinition
    method: GET
    data_selector: records
    params: {}
- name: SavedSearchWithScheduleAndDependencySyncDefinition
  endpoint:
    path: /components/schemas/SavedSearchWithScheduleAndDependencySyncDefinition
    method: GET
    data_selector: records
    params: {}
- name: SavedSearchSyncDefinition
  endpoint:
    path: /components/schemas/SavedSearchSyncDefinition
    method: GET
    data_selector: records
    params: {}
- name: ServiceNowSearchNotificationSyncDefinition
  endpoint:
    path: /components/schemas/ServiceNowSearchNotificationSyncDefinition
    method: GET
    data_selector: records
    params: {}
- name: MetricsSavedSearchSyncDefinition
  endpoint:
    path: /components/schemas/MetricsSavedSearchSyncDefinition
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: OTCollector
  endpoint:
    path: /api/otcollectors
    method: GET
    data_selector: data
    params: {}
- name: ParsersLibraryParser
  endpoint:
    path: /parsers
    method: POST
    data_selector: parser
    params: {}
- name: ParsersLibraryFolder
  endpoint:
    path: /folders
    method: POST
    data_selector: folder
    params: {}
- name: MonitorsLibraryMonitorResponse
  endpoint:
    path: /monitors
    method: GET
    data_selector: monitorType
    params: {}
- name: MonitorsLibraryMonitorExport
  endpoint:
    path: /monitors/export
    method: GET
    data_selector: monitorType
    params: {}
- name: MonitorsLibraryMonitorUpdate
  endpoint:
    path: /monitors/update
    method: PATCH
    data_selector: monitorType
    params: {}
- name: MutingSchedule
  endpoint:
    path: /mutingSchedules
    method: GET
    data_selector: data
    params: {}
- name: AlertsLibraryAlert
  endpoint:
    path: /alerts
    method: GET
    data_selector: data
    params: {}
- name: AlertsLibraryAlertUpdate
  endpoint:
    path: /alerts/library/update
    method: POST
    data_selector: alert
    params: {}
- name: apps
  endpoint:
    path: /api/v1/apps
    method: GET
    data_selector: apps
    params: {}
- name: scheduled_view
  endpoint:
    path: /api/scheduled_views
    method: GET
- name: LookupTablesLimits
  endpoint:
    path: /lookup/tables/limits
    method: GET
    data_selector: data
    params: {}
- name: ListPartitionsResponse
  endpoint:
    path: /partitions
    method: GET
    data_selector: data
    params: {}
- name: PartitionsQuotaUsage
  endpoint:
    path: /partitions/quota
    method: GET
    data_selector: data
    params: {}
- name: LogSearchDefinition
  endpoint:
    path: /saveLogSearch
    method: POST
    data_selector: data
    params: {}
- name: ListDeletionRules
  endpoint:
    path: /deletionRules
    method: GET
    data_selector: deletionRulesList
    params: {}
- name: folder
  endpoint:
    path: /content/folders/personal
    method: GET
    data_selector: id
    params: {}
- name: import
  endpoint:
    path: /content/folders/{folderId}/import
    method: POST
    data_selector: null
    params: {}
- name: import_status
  endpoint:
    path: /content/folders/{folderId}/import/{jobId}/status
    method: GET
    data_selector: null
    params: {}
- name: listApps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: applications
    params: {}
- name: getApp
  endpoint:
    path: /v1/apps/{uuid}
    method: GET
    data_selector: application
    params: {}
- name: installApp
  endpoint:
    path: /v1/apps/{uuid}/install
    method: POST
    data_selector: installJob
    params: {}
- name: getAsyncInstallStatus
  endpoint:
    path: /v1/apps/install/{jobId}/status
    method: GET
    data_selector: installStatus
    params: {}
- name: asyncInstallApp
  endpoint:
    path: /v2/apps/{uuid}/install
    method: POST
    data_selector: installJob
    params: {}
- name: getAsyncInstallAppStatus
  endpoint:
    path: /v2/apps/install/{jobId}/status
    method: GET
    data_selector: installStatus
    params: {}
- name: asyncUninstallApp
  endpoint:
    path: /v2/apps/{uuid}/uninstall
    method: POST
    data_selector: uninstallJob
    params: {}
- name: getAsyncUninstallAppStatus
  endpoint:
    path: /v2/apps/uninstall/{jobId}/status
    method: GET
    data_selector: uninstallStatus
    params: {}
- name: asyncUpgradeApp
  endpoint:
    path: /v2/apps/{uuid}/upgrade
    method: POST
    data_selector: upgradeJob
    params: {}
- name: getAsyncUpgradeAppStatus
  endpoint:
    path: /v2/apps/upgrade/{jobId}/status
    method: GET
    data_selector: upgradeStatus
    params: {}
- name: listAppsV2
  endpoint:
    path: /v2/apps
    method: GET
    data_selector: applications
    params: {}
- name: getAppDetails
  endpoint:
    path: /v2/apps/{uuid}/details
    method: GET
    data_selector: appDetails
    params: {}
- name: app_details
  endpoint:
    path: /v2/apps/{uuid}
    method: GET
    data_selector: data
    params:
      uuid: required
- name: subscription_status
  endpoint:
    path: /v2/apps/{uuid}/subscription
    method: GET
    data_selector: data
    params:
      uuid: required
- name: list_connections
  endpoint:
    path: /v1/connections
    method: GET
    data_selector: connections
    params:
      limit: optional
      token: optional
- name: create_connection
  endpoint:
    path: /v1/connections
    method: POST
    data_selector: connection
    params: {}
- name: test_connection
  endpoint:
    path: /v1/connections/test
    method: POST
    data_selector: testResult
    params:
      functionalities: optional
      connectionId: optional
- name: get_incident_templates
  endpoint:
    path: /v1/connections/incidentTemplates
    method: POST
    data_selector: incidentTemplates
    params: {}
- name: job_status
  endpoint:
    path: /v1/lookupTables/jobs/{jobId}/status
    method: GET
    data_selector: application/json
    params:
      jobId: string
- name: truncate_table
  endpoint:
    path: /v1/lookupTables/{id}/truncate
    method: POST
    data_selector: application/json
    params:
      id: string
- name: update_table_row
  endpoint:
    path: /v1/lookupTables/{id}/row
    method: PUT
    data_selector: application/json
    params:
      id: string
- name: delete_table_row
  endpoint:
    path: /v1/lookupTables/{id}/deleteTableRow
    method: PUT
    data_selector: application/json
    params:
      id: string
- name: list_partitions
  endpoint:
    path: /v1/partitions
    method: GET
    data_selector: application/json
    params:
      limit: integer
      token: string
      viewTypes: string
- name: partitions
  endpoint:
    path: /v1/partitions
    method: GET
    data_selector: content
- name: logsDataForwardingDestinations
  endpoint:
    path: /v1/logsDataForwarding/destinations
    method: GET
    data_selector: content
- name: dataDeletionRules
  endpoint:
    path: /v1/dataDeletionRules
    method: GET
    data_selector: content
- name: dataDeletionRules
  endpoint:
    path: /v1/dataDeletionRules
    method: GET
    data_selector: rules
- name: extractionRules
  endpoint:
    path: /v1/extractionRules
    method: GET
    data_selector: rules
    params:
      limit: '100'
- name: dynamicParsingRules
  endpoint:
    path: /v1/dynamicParsingRules
    method: GET
    data_selector: rules
    params:
      limit: '100'
- name: fields
  endpoint:
    path: /v1/fields
    method: GET
    data_selector: fields
- name: ingestBudgets
  endpoint:
    path: /v2/ingestBudgets
    method: GET
    data_selector: budgets
    params:
      limit: '100'
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
    params:
      limit: '100'
- name: roles
  endpoint:
    path: /v1/roles
    method: GET
    data_selector: roles
    params:
      limit: '100'
- name: create_folder
  endpoint:
    path: /v2/content/folders
    method: POST
    data_selector: folder
    params: {}
- name: get_folder
  endpoint:
    path: /v2/content/folders/{id}
    method: GET
    data_selector: folder
    params: {}
- name: update_folder
  endpoint:
    path: /v2/content/folders/{id}
    method: PUT
    data_selector: folder
    params: {}
- name: get_personal_folder
  endpoint:
    path: /v2/content/folders/personal
    method: GET
    data_selector: folder
    params: {}
- name: get_global_view
  endpoint:
    path: /v2/content/folders/global
    method: GET
    data_selector: globalView
    params: {}
- name: getGlobalFolderAsync
  endpoint:
    path: /v2/content/folders/global/{jobId}/status
    method: GET
    data_selector: application/json
    params: {}
- name: getAdminRecommendedFolderAsync
  endpoint:
    path: /v2/content/folders/adminRecommended
    method: GET
    data_selector: application/json
    params: {}
- name: getInstalledAppsFolderAsync
  endpoint:
    path: /v2/content/folders/installedApps
    method: GET
    data_selector: application/json
    params: {}
- name: getContentPermissions
  endpoint:
    path: /v2/content/{id}/permissions
    method: GET
    data_selector: application/json
    params: {}
- name: addContentPermissions
  endpoint:
    path: /v2/content/{id}/permissions/add
    method: PUT
    data_selector: application/json
    params: {}
- name: removeContentPermissions
  endpoint:
    path: /v2/content/{id}/permissions/remove
    method: PUT
    data_selector: application/json
    params: {}
- name: getContentByPath
  endpoint:
    path: /v2/content/path
    method: GET
    data_selector: application/json
    params: {}
- name: content
  endpoint:
    path: /v2/content/{contentId}/path
    method: GET
    data_selector: content
    params: {}
- name: import
  endpoint:
    path: /v2/content/folders/{folderId}/import
    method: POST
    data_selector: content
    params: {}
- name: subdomain
  endpoint:
    path: /v1/account/subdomain
    method: POST
    data_selector: subdomain
    params: {}
- name: usage_report
  endpoint:
    path: /v1/account/usage/report
    method: POST
    data_selector: report
    params: {}
- name: usage_forecast
  endpoint:
    path: /v1/account/usageForecast
    method: GET
    data_selector: forecast
    params: {}
- name: pending_update_request
  endpoint:
    path: /v1/plan/pendingUpdateRequest
    method: GET
    data_selector: pendingRequest
    params: {}
- name: allowlisted_users
  endpoint:
    path: /v1/saml/allowlistedUsers/{userId}
    method: POST
    data_selector: AllowlistedUserResult
    params:
      userId: required
- name: remove_allowlisted_user
  endpoint:
    path: /v1/saml/allowlistedUsers/{userId}
    method: DELETE
    data_selector: ErrorResponse
    params:
      userId: required
- name: enable_saml_lockdown
  endpoint:
    path: /v1/saml/lockdown/enable
    method: POST
    data_selector: ErrorResponse
- name: disable_saml_lockdown
  endpoint:
    path: /v1/saml/lockdown/disable
    method: POST
    data_selector: ErrorResponse
- name: get_saml_metadata
  endpoint:
    path: /v1/saml/identityProviders/{id}/metadata
    method: GET
    data_selector: application/xml
    params:
      id: required
- name: list_allowlisted_cidrs
  endpoint:
    path: /v1/serviceAllowlist/addresses
    method: GET
    data_selector: CidrList
- name: add_allowlisted_cidrs
  endpoint:
    path: /v1/serviceAllowlist/addresses/add
    method: POST
    data_selector: CidrList
    params: {}
- name: remove_allowlisted_cidrs
  endpoint:
    path: /v1/serviceAllowlist/addresses/remove
    method: POST
    data_selector: CidrList
    params: {}
- name: enable_service_allowlisting
  endpoint:
    path: /v1/serviceAllowlist/enable
    method: POST
    data_selector: ErrorResponse
    params:
      allowlistType: required
- name: disable_service_allowlisting
  endpoint:
    path: /v1/serviceAllowlist/disable
    method: POST
    data_selector: ErrorResponse
    params:
      allowlistType: required
- name: get_allowlisting_status
  endpoint:
    path: /v1/serviceAllowlist/status
    method: GET
    data_selector: AllowlistingStatus
- name: get_audit_policy
  endpoint:
    path: /v1/policies/audit
    method: GET
    data_selector: AuditPolicy
- name: set_audit_policy
  endpoint:
    path: /v1/policies/audit
    method: PUT
    data_selector: AuditPolicy
- name: get_search_audit_policy
  endpoint:
    path: /v1/policies/searchAudit
    method: GET
    data_selector: SearchAuditPolicy
- name: set_search_audit_policy
  endpoint:
    path: /v1/policies/searchAudit
    method: PUT
    data_selector: SearchAuditPolicy
- name: get_data_access_level_policy
  endpoint:
    path: /v1/policies/dataAccessLevel
    method: GET
    data_selector: DataAccessLevelPolicy
- name: set_data_access_level_policy
  endpoint:
    path: /v1/policies/dataAccessLevel
    method: PUT
    data_selector: DataAccessLevelPolicy
- name: get_user_concurrent_sessions_limit_policy
  endpoint:
    path: /v1/policies/userConcurrentSessionsLimit
    method: GET
    data_selector: UserConcurrentSessionsLimitPolicy
- name: set_user_concurrent_sessions_limit_policy
  endpoint:
    path: /v1/policies/userConcurrentSessionsLimit
    method: PUT
    data_selector: UserConcurrentSessionsLimitPolicy
- name: get_max_user_session_timeout_policy
  endpoint:
    path: /v1/policies/maxUserSessionTimeout
    method: GET
    data_selector: MaxUserSessionTimeoutPolicy
- name: set_max_user_session_timeout_policy
  endpoint:
    path: /v1/policies/maxUserSessionTimeout
    method: PUT
    data_selector: MaxUserSessionTimeoutPolicy
- name: get_access_keys_lifetime_policy
  endpoint:
    path: /v1/policies/accessKeysLifetime
    method: GET
    data_selector: AccessKeysLifetimePolicy
- name: set_access_keys_lifetime_policy
  endpoint:
    path: /v1/policies/accessKeysLifetime
    method: PUT
    data_selector: AccessKeysLifetimePolicy
- name: health_events
  endpoint:
    path: /v1/healthEvents
    method: GET
    data_selector: healthEvents
    params:
      limit: '100'
- name: archive_jobs
  endpoint:
    path: /v1/archive/{sourceId}/jobs
    method: GET
    data_selector: jobs
    params:
      limit: '10'
- name: parsers
  endpoint:
    path: /v1/parsers/{id}/lock
    method: POST
    data_selector: application/json
    params: {}
- name: parsers
  endpoint:
    path: /v1/parsers/{id}/unlock
    method: POST
    data_selector: application/json
    params: {}
- name: parsers
  endpoint:
    path: /v1/parsers/{id}/move
    method: POST
    data_selector: application/json
    params: {}
- name: parsers
  endpoint:
    path: /v1/parsers/{id}/copy
    method: POST
    data_selector: application/json
    params: {}
- name: parsers
  endpoint:
    path: /v1/parsers/{id}/export
    method: GET
    data_selector: application/json
    params: {}
- name: parsers
  endpoint:
    path: /v1/parsers/{parentId}/import
    method: POST
    data_selector: application/json
    params: {}
- name: parsers
  endpoint:
    path: /v1/parsers/path
    method: GET
    data_selector: application/json
    params: {}
- name: parsers
  endpoint:
    path: /v1/parsers/search
    method: GET
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts
    method: GET
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts
    method: POST
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{id}
    method: GET
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{id}
    method: PUT
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{id}
    method: DELETE
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys
    method: GET
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys
    method: POST
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys/{accessId}
    method: GET
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys/{accessId}
    method: PUT
    data_selector: application/json
    params: {}
- name: serviceAccounts
  endpoint:
    path: /v1/serviceAccounts/{serviceAccountId}/accessKeys/{accessId}
    method: DELETE
    data_selector: application/json
    params: {}
- name: SCIMUsers
  endpoint:
    path: /v1/scim/Users
    method: GET
    data_selector: application/json
    params: {}
- name: users
  endpoint:
    path: /Users
    method: GET
    data_selector: content
- name: create_user
  endpoint:
    path: /Users
    method: POST
    data_selector: content
- name: get_user
  endpoint:
    path: /Users/{id}
    method: GET
    data_selector: content
- name: update_user
  endpoint:
    path: /Users/{id}
    method: PUT
    data_selector: content
- name: delete_user
  endpoint:
    path: /Users/{id}
    method: DELETE
    data_selector: content
- name: span_details
  endpoint:
    path: /v1/tracing/traces/{traceId}/spans/{spanId}
    method: GET
    data_selector: details
- name: span_billing_details
  endpoint:
    path: /v1/tracing/traces/{traceId}/spans/{spanId}/billingInfo
    method: GET
    data_selector: billingInfo
- name: span_analytics_query
  endpoint:
    path: /v1/tracing/spanquery
    method: POST
    data_selector: queryExecution
- name: span_query_status
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/status
    method: GET
    data_selector: queryStatus
- name: span_query_result
  endpoint:
    path: /v1/tracing/spanquery/{queryId}/rows/{rowId}/spans
    method: GET
    data_selector: queryResult
- name: source_template
  endpoint:
    path: /v1/sourceTemplate
    method: GET
    data_selector: application/json
    params:
      showDisabled: false
- name: source_template_by_id
  endpoint:
    path: /v1/sourceTemplate/{id}
    method: GET
    data_selector: application/json
    params: {}
- name: budgets
  endpoint:
    path: /v1/budgets
    method: GET
    data_selector: application/json
    params:
      limit: 100
- name: mutingSchedules
  endpoint:
    path: /v1/mutingSchedules
    method: GET
    data_selector: items
    params: {}
- name: mutingSchedulesRoot
  endpoint:
    path: /v1/mutingSchedules/root
    method: GET
    data_selector: root
    params: {}
- name: mutingSchedulesSearch
  endpoint:
    path: /v1/mutingSchedules/search
    method: GET
    data_selector: results
    params: {}
- name: mutingSchedules
  endpoint:
    path: /v1/mutingSchedules/{id}
    method: GET
    params:
      id:
        required: true
- name: slos
  endpoint:
    path: /v1/slos
    method: GET
    params:
      ids:
        required: true
- name: slos
  endpoint:
    path: /v1/slos
    method: GET
    data_selector: folders
    params:
      limit: 1000
      offset: 0
- name: slosById
  endpoint:
    path: /v1/slos/{id}
    method: GET
    data_selector: slo
    params: {}
- name: slosMove
  endpoint:
    path: /v1/slos/{id}/move
    method: POST
    data_selector: movedSlo
    params:
      parentId: required
- name: slosCopy
  endpoint:
    path: /v1/slos/{id}/copy
    method: POST
    data_selector: copiedSlo
    params: {}
- name: slosExport
  endpoint:
    path: /v1/slos/{id}/export
    method: GET
    data_selector: exportedSlo
    params: {}
- name: slosImport
  endpoint:
    path: /v1/slos/{parentId}/import
    method: POST
    data_selector: importedSlo
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CSEWindowsInvalidConfigurationTracker
  endpoint:
    path: /CSEWindowsInvalidConfiguration
    method: GET
    data_selector: records
- name: CSEWindowsRuntimeErrorTracker
  endpoint:
    path: /CSEWindowsRuntimeError
    method: GET
    data_selector: records
- name: CSEWindowsStorageLimitExceededTracker
  endpoint:
    path: /CSEWindowsStorageLimitExceeded
    method: GET
    data_selector: records
- name: CSEWindowsSensorOfflineTracker
  endpoint:
    path: /CSEWindowsSensorOffline
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ot_collectors
  endpoint:
    path: /ot_collectors
    method: GET
    data_selector: data
    params: {}
- name: ParsersLibraryParser
  endpoint:
    path: /parsers
    method: GET
    data_selector: items
- name: ParsersLibraryFolder
  endpoint:
    path: /folders
    method: GET
    data_selector: items
- name: MonitorsLibraryMonitorResponse
  endpoint:
    path: /monitors
    method: GET
    data_selector: monitors
    params: {}
- name: MonitorsLibraryMonitorExport
  endpoint:
    path: /monitors/export
    method: GET
    data_selector: monitors
    params: {}
- name: MonitorsLibraryMonitorUpdate
  endpoint:
    path: /monitors/update
    method: POST
    data_selector: monitors
    params: {}
- name: MutingSchedule
  endpoint:
    path: /schedules
    method: GET
    data_selector: schedules
    params: {}
- name: ScheduleDefinition
  endpoint:
    path: /scheduleDefinitions
    method: GET
    data_selector: definitions
    params: {}
- name: apps
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: apps
    params: {}
- name: incident_template
  endpoint:
    path: /api/now/table/incident_template
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ListDeletionRules
  endpoint:
    path: /deletionRules
    method: GET
    data_selector: deletionRulesList
- name: ListExtractionRules
  endpoint:
    path: /extractionRules
    method: GET
    data_selector: data
- name: ListDynamicRules
  endpoint:
    path: /dynamicRules
    method: GET
    data_selector: data
- name: ListCustomFields
  endpoint:
    path: /customFields
    method: GET
    data_selector: data
- name: ListDroppedFields
  endpoint:
    path: /droppedFields
    method: GET
    data_selector: data
- name: ListBuiltinFields
  endpoint:
    path: /builtinFields
    method: GET
    data_selector: data
- name: GetCollectorsUsage
  endpoint:
    path: /collectorsUsage
    method: GET
    data_selector: data
- name: GetSourcesUsage
  endpoint:
    path: /sourcesUsage
    method: GET
    data_selector: data
- name: ListIngestBudgets
  endpoint:
    path: /ingestBudgets
    method: GET
    data_selector: data
- name: viewCollectors
  endpoint:
    path: /viewCollectors
    method: GET
    data_selector: records
- name: manageCollectors
  endpoint:
    path: /manageCollectors
    method: GET
    data_selector: records
- name: manageBudgets
  endpoint:
    path: /manageBudgets
    method: GET
    data_selector: records
- name: manageDataVolumeFeed
  endpoint:
    path: /manageDataVolumeFeed
    method: GET
    data_selector: records
- name: viewFieldExtraction
  endpoint:
    path: /viewFieldExtraction
    method: GET
    data_selector: records
- name: manageFieldExtractionRules
  endpoint:
    path: /manageFieldExtractionRules
    method: GET
    data_selector: records
- name: manageS3DataForwarding
  endpoint:
    path: /manageS3DataForwarding
    method: GET
    data_selector: records
- name: manageContent
  endpoint:
    path: /manageContent
    method: GET
    data_selector: records
- name: manageApps
  endpoint:
    path: /manageApps
    method: GET
    data_selector: records
- name: dataVolumeIndex
  endpoint:
    path: /dataVolumeIndex
    method: GET
    data_selector: records
- name: manageConnections
  endpoint:
    path: /manageConnections
    method: GET
    data_selector: records
- name: viewScheduledViews
  endpoint:
    path: /viewScheduledViews
    method: GET
    data_selector: records
- name: manageScheduledViews
  endpoint:
    path: /manageScheduledViews
    method: GET
    data_selector: records
- name: viewPartitions
  endpoint:
    path: /viewPartitions
    method: GET
    data_selector: records
- name: managePartitions
  endpoint:
    path: /managePartitions
    method: GET
    data_selector: records
- name: viewFields
  endpoint:
    path: /viewFields
    method: GET
    data_selector: records
- name: manageFields
  endpoint:
    path: /manageFields
    method: GET
    data_selector: records
- name: viewAccountOverview
  endpoint:
    path: /viewAccountOverview
    method: GET
    data_selector: records
- name: manageTokens
  endpoint:
    path: /manageTokens
    method: GET
    data_selector: records
- name: downloadSearchResults
  endpoint:
    path: /downloadSearchResults
    method: GET
    data_selector: records
- name: CurrentPlan
  endpoint:
    path: /current_plan
    method: GET
    data_selector: records
- name: AccountStatusResponse
  endpoint:
    path: /account_status
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: CollectorTag
  endpoint:
    path: /collector/tags
    method: POST
    data_selector: key
    params: {}
- name: LinkedSourceTemplatesUpdateRequest
  endpoint:
    path: /source/templates/update
    method: POST
    data_selector: collectorId
    params: {}
- name: SourceTemplateStatusUpdateRequest
  endpoint:
    path: /source/templates/status/update
    method: POST
    data_selector: status
    params: {}
- name: ListSchemaBaseTypeToVersionsResponse
  endpoint:
    path: /schema/base/types/versions
    method: GET
    data_selector: data
    params: {}
- name: SchemaBaseTypeToVersionsResponse
  endpoint:
    path: /schema/base/types
    method: GET
    data_selector: type
    params: {}
- name: EventContext
  endpoint:
    path: /events/context
    method: GET
    data_selector: eventContextType
    params: {}
- name: CorrelatedEvents
  endpoint:
    path: /events/correlated
    method: GET
    data_selector: correlationFinished
    params: {}
- name: ScanBudgetList
  endpoint:
    path: /scan/budgets
    method: GET
    data_selector: data
    params: {}
- name: ScanBudgetUsageList
  endpoint:
    path: /scan/budgets/usage
    method: GET
    data_selector: data
    params: {}
- name: ContentSyncRequest
  endpoint:
    path: /content/sync
    method: POST
    data_selector: contentList
    params: {}
- name: ContentSyncStatusResponse
  endpoint:
    path: /content/sync/status
    method: GET
    data_selector: status
    params: {}
- name: CreateJobRequest
  endpoint:
    path: /jobs/create
    method: POST
    data_selector: query
    params: {}
- name: LogSearchScheduleSyncDefinition
  endpoint:
    path: /logs/search/schedule
    method: POST
- name: LogSearchNotificationThresholdSyncDefinition
  endpoint:
    path: /logs/search/notification/threshold
    method: POST
- name: viewCollectors
  endpoint:
    path: /viewCollectors
    method: GET
- name: manageCollectors
  endpoint:
    path: /manageCollectors
    method: GET
- name: manageBudgets
  endpoint:
    path: /manageBudgets
    method: GET
- name: manageDataVolumeFeed
  endpoint:
    path: /manageDataVolumeFeed
    method: GET
- name: viewFieldExtraction
  endpoint:
    path: /viewFieldExtraction
    method: GET
- name: manageFieldExtractionRules
  endpoint:
    path: /manageFieldExtractionRules
    method: GET
- name: manageS3DataForwarding
  endpoint:
    path: /manageS3DataForwarding
    method: GET
- name: manageContent
  endpoint:
    path: /manageContent
    method: GET
- name: manageApps
  endpoint:
    path: /manageApps
    method: GET
- name: dataVolumeIndex
  endpoint:
    path: /dataVolumeIndex
    method: GET
- name: manageConnections
  endpoint:
    path: /manageConnections
    method: GET
- name: viewScheduledViews
  endpoint:
    path: /viewScheduledViews
    method: GET
- name: manageScheduledViews
  endpoint:
    path: /manageScheduledViews
    method: GET
- name: viewPartitions
  endpoint:
    path: /viewPartitions
    method: GET
- name: managePartitions
  endpoint:
    path: /managePartitions
    method: GET
- name: viewFields
  endpoint:
    path: /viewFields
    method: GET
- name: manageFields
  endpoint:
    path: /manageFields
    method: GET
- name: viewAccountOverview
  endpoint:
    path: /viewAccountOverview
    method: GET
- name: manageTokens
  endpoint:
    path: /manageTokens
    method: GET
- name: downloadSearchResults
  endpoint:
    path: /downloadSearchResults
    method: GET
- name: CurrentPlan
  endpoint:
    path: /currentPlan
    method: GET
    data_selector: records
- name: TotalCredits
  endpoint:
    path: /totalCredits
    method: GET
    data_selector: records
- name: SubdomainAvailability
  endpoint:
    path: /subdomainAvailability
    method: GET
    data_selector: records
- name: CreateArchiveJobRequest
  endpoint:
    path: /createArchiveJob
    method: POST
    data_selector: job
    params: {}
- name: ListArchiveJobsCount
  endpoint:
    path: /listArchiveJobsCount
    method: GET
    data_selector: data
    params: {}
- name: LogSearchEstimatedUsageDefinition
  endpoint:
    path: /logSearchEstimatedUsage
    method: POST
    data_selector: estimatedUsageDetails
    params: {}
- name: ScheduledSearchEstimatedUsageRequest
  endpoint:
    path: /scheduledSearchEstimatedUsage
    method: POST
    data_selector: scanEstimates
    params: {}
- name: metrics_search
  endpoint:
    path: /metrics/search
    method: GET
    data_selector: metricsSearches
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: external_references
  endpoint:
    path: /external_references
    method: GET
    data_selector: items
- name: granular_markings
  endpoint:
    path: /granular_markings
    method: GET
    data_selector: items
- name: extensions
  endpoint:
    path: /extensions
    method: GET
    data_selector: items
- name: ContentSyncRequest
  endpoint:
    path: /content/sync
    method: POST
- name: ContentSyncStatusResponse
  endpoint:
    path: /content/sync/status
    method: GET
- name: viewCollectors
  endpoint:
    path: /viewCollectors
    method: GET
- name: manageCollectors
  endpoint:
    path: /manageCollectors
    method: GET
- name: manageBudgets
  endpoint:
    path: /manageBudgets
    method: GET
- name: manageDataVolumeFeed
  endpoint:
    path: /manageDataVolumeFeed
    method: GET
- name: viewFieldExtraction
  endpoint:
    path: /viewFieldExtraction
    method: GET
- name: manageFieldExtractionRules
  endpoint:
    path: /manageFieldExtractionRules
    method: GET
- name: manageS3DataForwarding
  endpoint:
    path: /manageS3DataForwarding
    method: GET
- name: manageContent
  endpoint:
    path: /manageContent
    method: GET
- name: manageApps
  endpoint:
    path: /manageApps
    method: GET
- name: dataVolumeIndex
  endpoint:
    path: /dataVolumeIndex
    method: GET
- name: manageConnections
  endpoint:
    path: /manageConnections
    method: GET
- name: viewScheduledViews
  endpoint:
    path: /viewScheduledViews
    method: GET
- name: manageScheduledViews
  endpoint:
    path: /manageScheduledViews
    method: GET
- name: viewPartitions
  endpoint:
    path: /viewPartitions
    method: GET
- name: managePartitions
  endpoint:
    path: /managePartitions
    method: GET
- name: viewFields
  endpoint:
    path: /viewFields
    method: GET
- name: manageFields
  endpoint:
    path: /manageFields
    method: GET
- name: viewAccountOverview
  endpoint:
    path: /viewAccountOverview
    method: GET
- name: manageTokens
  endpoint:
    path: /manageTokens
    method: GET
- name: downloadSearchResults
  endpoint:
    path: /downloadSearchResults
    method: GET
- name: PlanUpdateEmail
  endpoint:
    path: /plan/update/email
    method: POST
    data_selector: details
    params: {}
- name: UsageReportRequest
  endpoint:
    path: /usage/report
    method: GET
    data_selector: data
    params: {}
- name: AccessKey
  endpoint:
    path: /api/v1/accessKeys
    method: GET
    data_selector: data
    params: {}
- name: CidrList
  endpoint:
    path: /api/v1/cidrs
    method: GET
    data_selector: data
    params: {}
- name: archive_job
  endpoint:
    path: /archive/job
    method: GET
    data_selector: data
    params: {}
- name: archive_jobs_count
  endpoint:
    path: /archive/jobs/count
    method: GET
    data_selector: data
    params: {}
- name: log_search_estimated_usage
  endpoint:
    path: /log/search/estimated/usage
    method: POST
    data_selector: estimatedUsageDetails
    params: {}
- name: dashboard
  endpoint:
    path: /dashboard
    method: GET
    data_selector: dashboards
    params: {}
- name: report_schedule
  endpoint:
    path: /report/schedule
    method: GET
    data_selector: reportSchedules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: User
  endpoint:
    path: /scim/v2/Users
    method: GET
- name: Metrics
  endpoint:
    path: /metrics
    method: POST
- name: SpanQueryRow
  endpoint:
    path: /services/data/vXX.X/sobjects/SpanQueryRow
    method: GET
    data_selector: queryRows
    params: {}
- name: SpanQueryStatusResponse
  endpoint:
    path: /services/data/vXX.X/sobjects/SpanQueryStatusResponse
    method: GET
    data_selector: status
    params: {}
- name: LinkedSourceTemplatesUpdateRequest
  endpoint:
    path: /LinkedSourceTemplatesUpdateRequest
    method: POST
    data_selector: data
    params: {}
- name: SourceTemplateStatusUpdateRequest
  endpoint:
    path: /SourceTemplateStatusUpdateRequest
    method: POST
    data_selector: data
    params: {}
- name: ListSchemaBaseTypeToVersionsResponse
  endpoint:
    path: /ListSchemaBaseTypeToVersionsResponse
    method: GET
    data_selector: data
    params: {}
- name: SchemaBaseTypeToVersionsResponse
  endpoint:
    path: /SchemaBaseTypeToVersionsResponse
    method: GET
    data_selector: versions
    params: {}
- name: ContentSyncResponse
  endpoint:
    path: /ContentSyncResponse
    method: POST
    data_selector: jobId
    params: {}
- name: ContentSyncStatusResponse
  endpoint:
    path: /ContentSyncStatusResponse
    method: GET
    data_selector: status
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- A rate limit of four API requests per second (240 requests per minute) applies to
  all API calls from a user.
- A rate limit of 10 concurrent requests to any API endpoint applies to an access
  key.
- The capacity bytes unit varies based on the budgetType field.
- The absolute path to a content item should be specified to get the item.
- Requires basic authentication for all endpoints.
- Uses basic authentication.
- The response is paginated with a default limit of 100 roles per page.
- Permissions field will not be filled (empty list) for imported monitors or folders.
- You can use the API to create or update a Search, Scheduled Search, or Dashboard.
- Set the header parameter isAdminMode to true to create or fetch a folder inside
  'Admin Recommended' folder.
- Uses OAuth2 with refresh token — requires setup of connected app in Sumo Logic
- Some queries may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Parameter for filtering OT Collectors based on heartbeat.
- Management Status of the OT Collector based on if it is remotely or locally managed.
- The maximum number of correlation expressions is 20, and the minimum is 2.
- High CPU is often fixed by scaling up the cluster.
- Some objects may return nulls in deeply nested fields
- If a rate is exceeded, a rate limit exceeded 429 status code is returned.
- The response is paginated with a default limit of 10 jobs per page.
- Operation failed responses typically return an error schema.
- Supports filtering by various parameters like createdBy, createdBefore, etc.
- Use `group` as threshold type if the search query is of aggregate type. For non-aggregate
  queries, set it to `message`.
- The type of monitor can be Logs, Metrics, or Slo.
- Requires setup of connected app in api
- This parameter defines whether you want to run the search by messageTime, receiptTime
  or searchableTime.
- The API provides details about plans and subscriptions available for accounts.
- '`primary` always set to ''true'' as sumologic doesn''t have a concept of primary/secondary
  roles'
- Roles should exactly match with role names within sumologic
- Set autofillDependencies to true if you want to automatically append all missing
  capability requirements.
- Requests with an ORIGIN header but the allowlist is empty will be rejected.
- Run schedule of the scheduled report. Set to 'Custom' to specify the schedule with
  a CRON expression.
- 'Possible schedule types are: RealTime, 15Minutes, 1Hour, 2Hours, 4Hours, 6Hours,
  8Hours, 12Hours, 1Day, 1Week, Custom.'
- Always set 'primary' to true as sumologic doesn't have a concept of primary/secondary
  roles.
- Sumo logic accepts only one email address.
- Requires setup of connected app in Sumo Logic
errors:
- '401 unauthorized: Credential could not be verified.'
- '403 forbidden: This operation is not allowed for your account type or the user
  doesn''t have the role capability to perform this action.'
- '404 notfound: Requested resource could not be found.'
- '405 method.unsupported: Unsupported method for URL.'
- '415 contenttype.invalid: Invalid content type.'
- '429 rate.limit.exceeded: The API request rate is higher than 4 request per second
  or inflight API requests are higher than 10 request per second.'
- '500 internal.error: Internal server error.'
- '503 service.unavailable: Service is currently unavailable.'
- '429: Rate limit exceeded'
- 'auth:password_too_short: Your password was too short.'
- 'auth:password_character_classes: Your password did not contain any non-alphanumeric
  characters'
- 'default: Operation failed with an error.'
- Operation failed with an error.
- 'default: Operation failed with an error'
- '204: The transformation rule was successfully deleted.'
- 'default: The operation failed with an error.'
- '204: Query canceled successfully.'
- 'moved: The requested resource SHOULD be accessed through returned URI in Location
  Header.'
- 'unauthorized: Credential could not be verified.'
- 'forbidden: This operation is not allowed for your account type or the user doesn''t
  have the role capability to perform this action.'
- 'notfound: Requested resource could not be found.'
- 'method.unsupported: Unsupported method for URL.'
- 'contenttype.invalid: Invalid content type.'
- 'rate.limit.exceeded: The API request rate is higher than 4 request per second or
  inflight API requests are higher than 10 request per second.'
- 'internal.error: Internal server error.'
- 'service.unavailable: Service is currently unavailable.'
- '401 Unauthorized: Check accessId and accessKey.'
- '404 Not Found: Check the folder ID or job ID.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Verify request parameters'
- '404 Not Found: Resource not available'
- '500 Internal Server Error: Check server status'
- 'auth:password_character_classes: Your password did not contain any non-alphanumeric
  characters.'
- '204: The operation was successful.'
- '409 Conflict: Resource already exists'
- '400 Bad Request: Invalid request format'
- 'spanquery:query_validation_error: Query A was invalid'
auth_info:
  mentioned_objects:
  - basicAuth
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AppDefinition
  - AppManifest
client:
  base_url: https://api.sumologic.com/api/
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
