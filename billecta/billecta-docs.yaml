resources:
- name: contract_invoice
  endpoint:
    path: /v1/contractinvoice/action/{id}
    method: GET
    data_selector: ContractInvoiceActionView
- name: all_contract_invoices
  endpoint:
    path: /v1/contractinvoice/actions/{id}
    method: GET
    data_selector: ContractInvoiceActionSubsView
- name: generated_invoices
  endpoint:
    path: /v1/contractinvoice/generatedinvoices/{id}
    method: GET
    data_selector: InvoiceActionSubsView
    params:
      offset: '{offset}'
      limit: '{limit}'
      sortingfield: '{sortingfield}'
      asc: '{asc}'
- name: half_year_recurring_autogiro
  endpoint:
    path: /v1/contractinvoice/halfyearlyrecurringautogiro
    method: POST
    data_selector: CreatedView
- name: monthly_recurring_autogiro
  endpoint:
    path: /v1/contractinvoice/monthlyrecurringautogiro
    method: POST
    data_selector: CreatedView
- name: move_next_run
  endpoint:
    path: /v1/contractinvoice/movenextrun/{id}
    method: PUT
- name: pause_contract_invoice
  endpoint:
    path: /v1/contractinvoice/pause/{id}
    method: PUT
- name: pause_multiple_contract_invoices
  endpoint:
    path: /v1/contractinvoice/pauseactions
    method: POST
- name: preview_contract_invoice
  endpoint:
    path: /v1/contractinvoice/preview
    method: POST
    data_selector: Byte[]
- name: resume_contract_invoice
  endpoint:
    path: /v1/contractinvoice/resume/{id}
    method: PUT
- name: yearly_recurring_autogiro
  endpoint:
    path: /v1/contractinvoice/yearlyrecurringautogiro
    method: POST
    data_selector: CreatedView
- name: get_cost_center
  endpoint:
    path: /v1/costcenters/costcenter/{id}
    method: GET
    data_selector: CostCenterView
- name: get_all_cost_centers
  endpoint:
    path: /v1/costcenters/costcenters/{id}
    method: GET
    data_selector: CostCentersView
- name: get_creditor
  endpoint:
    path: /v1/creditors/creditor/{id}
    method: GET
    data_selector: CreditorView
- name: get_all_creditors
  endpoint:
    path: /v1/creditors/creditors
    method: GET
    data_selector: CreditorsView
    params:
      offset: '{offset}'
      limit: '{limit}'
      sortingfield: '{sortingfield}'
      asc: '{asc}'
- name: create_debtor
  endpoint:
    path: /v1/debtors/debtor
    method: PUT
    data_selector: DebtorView
- name: debtors
  endpoint:
    path: /v1/debtors/debtors/{id}
    method: GET
    data_selector: DebtorsView
    params:
      filter: filter
      offset: offset
      limit: limit
      sortingfield: sortingfield
      asc: asc
      excludeinactive: excludeinactive
      categorypublicid: categorypublicid
      deliverymethod: deliverymethod
- name: debtor_categories
  endpoint:
    path: /v1/debtors/debtorsincategory/{id}
    method: GET
    data_selector: DebtorsView
    params:
      categorypublicid: categorypublicid
- name: create_debtor
  endpoint:
    path: /v1/debtors/debtor
    method: POST
    data_selector: CreatedView
- name: delete_debtor
  endpoint:
    path: /v1/debtors/debtor/{id}
    method: DELETE
    data_selector: null
- name: get_debtor_by_number
  endpoint:
    path: /v1/debtors/debtorbydebtorno/{id}
    method: GET
    data_selector: DebtorView
    params:
      debtorno: debtorno
- name: get_debtor_events
  endpoint:
    path: /v1/debtors/debtorevents/{id}
    method: GET
    data_selector: DebtorEventsView
- name: get_debtors_by_external_id
  endpoint:
    path: /v1/debtors/debtorsbyexternalid/{id}
    method: GET
    data_selector: DebtorsView
    params:
      externalid: externalid
      offset: offset
      limit: limit
      sortingfield: sortingfield
      asc: asc
- name: get_debtors_by_org_no
  endpoint:
    path: /v1/debtors/debtorsbyorgno/{id}
    method: GET
    data_selector: DebtorsView
    params:
      orgno: orgno
      countrycode: countrycode
      offset: offset
      limit: limit
      sortingfield: sortingfield
      asc: asc
- name: check_debtor_kivra
  endpoint:
    path: /v1/debtors/matchdebtorswithkivra/{id}
    method: POST
    data_selector: DebtorsKivraStatusView
- name: get_peppol_participation_id
  endpoint:
    path: /v1/debtors/peppolidentification/{id}
    method: GET
    data_selector: String
    params:
      countrycode: countrycode
      organizationnumber: organizationnumber
- name: get_peppol_participations
  endpoint:
    path: /v1/debtors/peppolidentificationsearch/{id}
    method: GET
    data_selector: PeppolParticipantsView
    params:
      countrycode: countrycode
      searchtext: searchtext
- name: interest_invoice
  endpoint:
    path: /v1/invoice/interestinvoice/{id}
    method: POST
    data_selector: CreatedView
    params:
      from: '{from}'
      to: '{to}'
      interesttype: '{interesttype}'
      interest: '{interest}'
- name: load_archived_events
  endpoint:
    path: /v1/selfinvoice/loadarchivedevents/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: mark_as_viewed
  endpoint:
    path: /v1/invoice/markasviewed/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: merge_invoices
  endpoint:
    path: /v1/invoice/merge
    method: PUT
    data_selector: ''
    params:
      actionpublicid: '{actionpublicid}'
      invoicedate: '{invoicedate}'
      duedate: '{duedate}'
      deliverydate: '{deliverydate}'
- name: get_open_invoices
  endpoint:
    path: /v1/invoice/open/{id}
    method: GET
    data_selector: InvoiceActionSubsView
    params:
      offset: '{offset}'
      limit: '{limit}'
      sortingfield: '{sortingfield}'
      asc: '{asc}'
- name: get_open_invoices_by_debtor
  endpoint:
    path: /v1/invoice/openbydebtor/{id}
    method: GET
    data_selector: InvoiceActionSubsView
    params:
      offset: '{offset}'
      limit: '{limit}'
      sortingfield: '{sortingfield}'
      asc: '{asc}'
- name: get_open_invoices_by_period
  endpoint:
    path: /v1/invoice/openbyperiod/{id}
    method: GET
    data_selector: InvoiceActionSubsView
    params:
      from: '{from}'
      to: '{to}'
      offset: '{offset}'
      limit: '{limit}'
      sortingfield: '{sortingfield}'
      asc: '{asc}'
- name: get_open_reminder_invoices
  endpoint:
    path: /v1/invoice/openreminders/{id}
    method: GET
    data_selector: ReminderInvoiceActionSubsView
    params:
      offset: '{offset}'
      limit: '{limit}'
      sortingfield: '{sortingfield}'
      asc: '{asc}'
- name: pause_invoice
  endpoint:
    path: /v1/invoice/pause/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: get_payment_files
  endpoint:
    path: /v1/invoice/paymentfiles/{id}
    method: GET
    data_selector: List`1
    params: {}
- name: download_invoice_pdf
  endpoint:
    path: /v1/invoice/pdf/{id}
    method: GET
    data_selector: Byte[]
    params: {}
- name: product
  endpoint:
    path: /v1/products/product
    method: POST
    data_selector: CreatedView
- name: delete_product
  endpoint:
    path: /v1/products/product/{id}
    method: DELETE
    data_selector: null
- name: get_product_by_article_number
  endpoint:
    path: /v1/products/productbyarticlenumber/{id}
    method: GET
    data_selector: ProductView
- name: get_products_by_external_id
  endpoint:
    path: /v1/products/productbyexternalid/{id}
    method: GET
    data_selector: ProductView
- name: get_all_products
  endpoint:
    path: /v1/products/products/{id}
    method: GET
    data_selector: ProductsView
- name: create_multiple_products
  endpoint:
    path: /v1/products/products
    method: POST
    data_selector: CreatedView
- name: get_products_by_product_description
  endpoint:
    path: /v1/products/productsbydescription/{id}
    method: GET
    data_selector: ProductView[]
- name: get_products_by_product_external_id
  endpoint:
    path: /v1/products/productsbyexternalid/{id}
    method: GET
    data_selector: ProductsView
- name: get_product_template
  endpoint:
    path: /v1/products/productstemplate/{id}
    method: GET
    data_selector: ProductsTemplateView
- name: create_update_product_template
  endpoint:
    path: /v1/products/productstemplate
    method: PUT
    data_selector: null
- name: swish_consent
  endpoint:
    path: /v1/swish/swishconsent
    method: GET
    data_selector: SwishConsentResponseView
    params: {}
- name: create_swish_consent
  endpoint:
    path: /v1/swish/swishconsent
    method: POST
    data_selector: CreatedView
    params: {}
- name: delete_swish_consent
  endpoint:
    path: /v1/swish/swishconsent/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_password
  endpoint:
    path: /v1/users/changepassword
    method: PUT
    data_selector: ''
    params: {}
- name: get_user
  endpoint:
    path: /v1/users/user/{id}
    method: GET
    data_selector: UserView
    params: {}
- name: update_user
  endpoint:
    path: /v1/users/user
    method: PUT
    data_selector: ''
    params: {}
- name: create_user
  endpoint:
    path: /v1/users/user
    method: POST
    data_selector: CreatedView
    params: {}
- name: delete_user
  endpoint:
    path: /v1/users/user/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_all_users
  endpoint:
    path: /v1/users/users
    method: GET
    data_selector: UsersView
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: debtors
  endpoint:
    path: /v1/debtors/debtor
    method: POST
- name: products
  endpoint:
    path: /v1/products/product
    method: POST
- name: invoice
  endpoint:
    path: /v1/invoice/action
    method: POST
- name: attest_invoice
  endpoint:
    path: /v1/invoice/attest/{id}
    method: PUT
- name: bank_accounts
  endpoint:
    path: /bank/accounts/[...]
    method: GET
- name: mobile_bankid_authentication
  endpoint:
    path: /mobile/bankid/authenticate
    method: POST
- name: swish_payment
  endpoint:
    path: /payments/swish
    method: POST
- name: credit_card_payment
  endpoint:
    path: /payments/creditcard
    method: POST
- name: debtors
  endpoint:
    path: /v1/debtors/debtor
    method: POST
    data_selector: ''
    params: {}
- name: contract_invoice
  endpoint:
    path: /v1/contractinvoice/action
    method: POST
    data_selector: ''
    params: {}
- name: AccountingVoucherRecord
  endpoint:
    path: /AccountingVoucherRecord
    method: GET
- name: AccountingVoucherTransaction
  endpoint:
    path: /AccountingVoucherTransaction
    method: GET
- name: ActionPublicIds
  endpoint:
    path: /ActionPublicIds
    method: GET
- name: ActionReferences
  endpoint:
    path: /ActionReferences
    method: GET
- name: AttestMultipleInvoicesRequest
  endpoint:
    path: /AttestMultipleInvoicesRequest
    method: GET
- name: BillectaDocsAdditionalInfo
  endpoint:
    path: /BillectaDocsAdditionalInfo
    method: GET
- name: AutogiroPaymentStatuses
  endpoint:
    path: /AutogiroPaymentStatuses
    method: GET
- name: BankAccountRequest
  endpoint:
    path: /BankAccountRequest
    method: GET
- name: BankIdAuthenticationRequest
  endpoint:
    path: /BankIdAuthenticationRequest
    method: GET
- name: BankIdSignRequest
  endpoint:
    path: /BankIdSignRequest
    method: GET
- name: BulkContractInvoiceActionsRequest
  endpoint:
    path: /BulkContractInvoiceActionsRequest
    method: GET
- name: CardRefundPayment
  endpoint:
    path: /CardRefundPayment
    method: GET
- name: CheckoutSettings
  endpoint:
    path: /CheckoutSettings
    method: GET
- name: UserLicencePrice
  endpoint:
    path: /UserLicencePrice
    method: GET
    data_selector: Amount
    params: {}
- name: LookupPrice
  endpoint:
    path: /LookupPrice
    method: GET
    data_selector: Amount
    params: {}
- name: IntegrationModulePrice
  endpoint:
    path: /IntegrationModulePrice
    method: GET
    data_selector: Amount
    params: {}
- name: AutogiroServicePrice
  endpoint:
    path: /AutogiroServicePrice
    method: GET
    data_selector: Amount
    params: {}
- name: SwishServicePrice
  endpoint:
    path: /SwishServicePrice
    method: GET
    data_selector: Amount
    params: {}
- name: BankIdServiceFee
  endpoint:
    path: /BankIdServiceFee
    method: GET
    data_selector: Amount
    params: {}
- name: CheckoutServiceFee
  endpoint:
    path: /CheckoutServiceFee
    method: GET
    data_selector: Amount
    params: {}
- name: CreditCardServicePrice
  endpoint:
    path: /CreditCardServicePrice
    method: GET
    data_selector: Amount
    params: {}
- name: AccountingSourcePrice
  endpoint:
    path: /AccountingSourcePrice
    method: GET
    data_selector: Amount
    params: {}
- name: ClaimLongTermSurveilancePrice
  endpoint:
    path: /ClaimLongTermSurveilancePrice
    method: GET
    data_selector: Amount
    params: {}
- name: EvictionHandlingFee
  endpoint:
    path: /EvictionHandlingFee
    method: GET
    data_selector: Amount
    params: {}
- name: Branding
  endpoint:
    path: /Branding
    method: GET
    data_selector: ExternalBranding
    params: {}
- name: PEAccountingServicePrice
  endpoint:
    path: /PEAccountingServicePrice
    method: GET
    data_selector: Amount
    params: {}
- name: RecurOnDayInMonth
  endpoint:
    path: /RecurOnDayInMonth
    method: GET
- name: RecurOnMonth
  endpoint:
    path: /RecurOnMonth
    method: GET
- name: RecurYearInterval
  endpoint:
    path: /RecurYearInterval
    method: GET
- name: RecurQuarterInterval
  endpoint:
    path: /RecurQuarterInterval
    method: GET
- name: ResidenceAssociationOrgNo
  endpoint:
    path: /ResidenceAssociationOrgNo
    method: GET
- name: PropertyDesignation
  endpoint:
    path: /PropertyDesignation
    method: GET
- name: Persons
  endpoint:
    path: /Persons
    method: GET
- name: Customers
  endpoint:
    path: /Customers
    method: GET
- name: EInvoiceCUI
  endpoint:
    path: /EInvoiceCUI
    method: GET
    data_selector: EInvoiceCUI
    params: {}
- name: ForeignAccounts
  endpoint:
    path: /ForeignAccounts
    method: GET
    data_selector: ForeignAccounts
    params: {}
- name: CreditorOutgoingBankgiroes
  endpoint:
    path: /CreditorOutgoingBankgiroes
    method: GET
    data_selector: CreditorOutgoingBankgiroes
    params: {}
- name: PaymentMethods
  endpoint:
    path: /PaymentMethods
    method: GET
    data_selector: PaymentMethods
    params: {}
- name: OutgoingPayment
  endpoint:
    path: /OutgoingPayment
    method: GET
    data_selector: records
- name: ReminderInvoiceAction
  endpoint:
    path: /services/data/vXX.X/sobjects/ReminderInvoiceAction
    method: GET
    data_selector: records
    params: {}
- name: RepayUnhandledPayment
  endpoint:
    path: /services/data/vXX.X/sobjects/RepayUnhandledPayment
    method: GET
    data_selector: records
    params: {}
- name: SelfInvoiceAction
  endpoint:
    path: /services/data/vXX.X/sobjects/SelfInvoiceAction
    method: GET
    data_selector: records
    params: {}
- name: SelfInvoiceAction
  endpoint:
    path: /SelfInvoiceAction
    method: GET
    data_selector: SelfInvoiceAction
- name: SelfInvoiceActionRecord
  endpoint:
    path: /SelfInvoiceActionRecord
    method: GET
    data_selector: SelfInvoiceActionRecord
- name: SelfInvoiceActionInvoice
  endpoint:
    path: /SelfInvoiceActionInvoice
    method: GET
    data_selector: SelfInvoiceActionInvoice
- name: SelfInvoiceActionEvent
  endpoint:
    path: /SelfInvoiceActionEvent
    method: GET
    data_selector: SelfInvoiceActionEvent
- name: SwishRefundPayment
  endpoint:
    path: /SwishRefundPayment
    method: POST
- name: SwishSettings
  endpoint:
    path: /SwishSettings
    method: GET
- name: SwishWithdrawal
  endpoint:
    path: /SwishWithdrawal
    method: GET
notes:
- Contract invoices are recurring invoices to the same customer with the same invoice
  records and amounts.
- Requires setup of connected app in Billecta
- Some endpoints may have optional parameters
- Documentation has been updated based on API throttling changes.
- Ökad säkerhet vid betalning via API:t med mobilt bankid.
- Stöd för kreditavtalsfakturor
- All communications between your system and Billecta is secured and encrypted with
  SSL.
- Webhooks can be used for subscribing to a range of events in the Billecta system.
- If the post request from Billecta fails, Billecta will retry 4 times with intervals
  of 5 minutes, 60 minutes, 3 hours, and 24 hours.
- A creditor must exist in Billecta Portal.
- A mobile BankID certificate must be issued by your bank and uploaded in the Billecta
  Portal.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400: Data is wrong'
- '401: You are unauthorized to the requested data or the API.'
- '500: Some other internal error.'
auth_info:
  mentioned_objects:
  - SecureToken
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.billecta.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.billecta.com/oauth/token
    client_id: '{{ dlt.secrets[''billecta_client_id''] }}'
    client_secret: '{{ dlt.secrets[''billecta_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''billecta_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
