resources:
- name: spec
  endpoint:
    path: /spec
    method: GET
    data_selector: records
- name: render_groups_spec
  endpoint:
    path: /render_groups_spec
    method: GET
    data_selector: records
- name: auth_spec
  endpoint:
    path: /auth_spec
    method: GET
    data_selector: records
- name: pipelines_spec
  endpoint:
    path: /pipelines_spec
    method: GET
    data_selector: records
- name: pipeline_config
  endpoint:
    path: /pipeline/config
    method: GET
    data_selector: config
    params: {}
- name: request_body
  endpoint:
    path: /Rolodex.RequestBody
    method: POST
    data_selector: content
- name: MyRequestBody
  endpoint:
    path: /request_body
    method: GET
    data_selector: content
    params: {}
- name: MyResponse
  endpoint:
    path: /MyResponse
    method: GET
    data_selector: content
    params: {}
- name: MyResponse
  endpoint:
    path: /MyResponse
    method: GET
    data_selector: records
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: responses
    params:
      query_params: SearchQuery
- name: search_post
  endpoint:
    path: /search
    method: POST
    data_selector: responses
    params:
      body: SearchBody
- name: first_api
  endpoint:
    path: /api/first
    method: GET
    data_selector: responses
    params: {}
- name: second_api
  endpoint:
    path: /api/:id/second
    method: GET
    data_selector: responses
    params:
      path_params:
        id:
          type: integer
          required: true
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: users_post
  endpoint:
    path: /api/users
    method: POST
- name: users_put
  endpoint:
    path: /api/users/:id
    method: PUT
- name: users_patch
  endpoint:
    path: /api/users/:id
    method: PATCH
- name: users_delete
  endpoint:
    path: /api/users/:id
    method: DELETE
- name: users_head
  endpoint:
    path: /api/users/:id
    method: HEAD
- name: users_options
  endpoint:
    path: /api/users/:id
    method: OPTIONS
- name: MySchema
  endpoint:
    path: /schema/MySchema
    method: GET
    data_selector: properties
notes:
- Uses OAuth2 with Bearer token
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Configuration for a render group, a serialization target for your docs.
- Exposes functions and macros for defining reusable request bodies.
- A demo request body
- Uses Rolodex.Response for defining reusable responses
- A demo response
- An example
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: /api
  headers:
    Accept: application/json
source_metadata: null
