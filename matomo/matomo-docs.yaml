resources:
- name: MediaAnalyticsMethods
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: content_block
  endpoint:
    path: /trackContentImpression
    method: POST
    data_selector: content
    params: {}
- name: content_interaction
  endpoint:
    path: /trackContentInteraction
    method: POST
    data_selector: interaction
    params: {}
- name: page_titles
  endpoint:
    path: /?module=API&method=Actions.getPageTitles
    method: GET
    data_selector: result.row
    params:
      idSite: '1'
      date: yesterday
      period: day
      format: xml
      filter_limit: '10'
- name: visits_summary
  endpoint:
    path: /?module=API&method=VisitsSummary.getVisits
    method: GET
    data_selector: result.row
    params:
      idSite: '1'
      period: day
      date: last10
      format: xml
- name: referrer_type
  endpoint:
    path: /?module=API&method=Referrers.getReferrerType
    method: GET
    data_selector: result.row
    params:
      idSite: '1'
      period: day
      date: last10
      format: xml
- name: keywords
  endpoint:
    path: /?module=API&method=Referrers.getKeywords
    method: GET
    data_selector: result.row
    params:
      idSite: '1'
      period: week
      date: last3
      format: rss
      filter_limit: '30'
- name: UserCountry
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params:
      module: API
      method: UserCountry.getCountry
      idSite: 62
      period: month
      date: today
      format: JSON
      filter_limit: 10
      token_auth: anonymous
- name: containers
  endpoint:
    path: TagManager.getContainers
    method: GET
- name: embed_code
  endpoint:
    path: TagManager.getContainerEmbedCode
    method: GET
- name: sites
  endpoint:
    path: SitesManager.getSitesWithAtLeastViewAccess
    method: GET
- name: environments
  endpoint:
    path: TagManager.getAvailableEnvironments
    method: GET
- name: ab_testing_experiment
  endpoint:
    path: /AbTesting::create
    method: POST
    data_selector: experiment
    params: {}
- name: data_layer_push
  endpoint:
    path: /_mtm/push
    method: POST
    data_selector: parameters
    params: {}
- name: media_tracking
  endpoint:
    path: /matomo.php
    method: GET
    data_selector: ''
    params: {}
- name: Crash Analytics API
  endpoint:
    path: /api/crash
    method: POST
    data_selector: response
    params:
      ca: '1'
- name: Heatmap
  endpoint:
    path: /plugins/HeatmapSessionRecording/tracker.min.js
    method: GET
- name: Session Recordings
  endpoint:
    path: /plugins/HeatmapSessionRecording/tracker.min.js
    method: GET
- name: getConfiguredCustomDimensions
  endpoint:
    path: /CustomDimensions.getConfiguredCustomDimensions
    method: GET
- name: getConfiguredCustomDimensionsHavingScope
  endpoint:
    path: /CustomDimensions.getConfiguredCustomDimensionsHavingScope
    method: GET
- name: getAvailableExtractionDimensions
  endpoint:
    path: /CustomDimensions.getAvailableExtractionDimensions
    method: GET
- name: Transitions.getTransitionsForPageTitle
  endpoint:
    path: Transitions.getTransitionsForPageTitle
    method: GET
    data_selector: response
    params:
      limitBeforeGrouping: '0'
- name: Transitions.getTransitionsForPageUrl
  endpoint:
    path: Transitions.getTransitionsForPageUrl
    method: GET
    data_selector: response
    params:
      limitBeforeGrouping: '0'
- name: Transitions.getTransitionsForAction
  endpoint:
    path: Transitions.getTransitionsForAction
    method: GET
    data_selector: response
    params:
      parts: all
      limitBeforeGrouping: '0'
- name: UserCountry.getCountry
  endpoint:
    path: UserCountry.getCountry
    method: GET
    data_selector: response
    params: {}
- name: UserCountry.getContinent
  endpoint:
    path: UserCountry.getContinent
    method: GET
    data_selector: response
    params: {}
- name: UserCountry.getLocationFromIP
  endpoint:
    path: UserCountry.getLocationFromIP
    method: GET
    data_selector: response
    params: {}
- name: UserCountry.getNumberOfDistinctCountries
  endpoint:
    path: UserCountry.getNumberOfDistinctCountries
    method: GET
    data_selector: response
    params: {}
- name: UserLanguage.getLanguage
  endpoint:
    path: UserLanguage.getLanguage
    method: GET
    data_selector: response
    params: {}
- name: UserLanguage.getLanguageCode
  endpoint:
    path: UserLanguage.getLanguageCode
    method: GET
    data_selector: response
    params: {}
- name: VisitFrequency.get
  endpoint:
    path: VisitFrequency.get
    method: GET
    data_selector: response
    params: {}
- name: VisitTime.getVisitInformationPerLocalTime
  endpoint:
    path: VisitTime.getVisitInformationPerLocalTime
    method: GET
    data_selector: response
    params: {}
- name: VisitTime.getVisitInformationPerServerTime
  endpoint:
    path: VisitTime.getVisitInformationPerServerTime
    method: GET
    data_selector: response
    params: {}
- name: VisitTime.getByDayOfWeek
  endpoint:
    path: VisitTime.getByDayOfWeek
    method: GET
    data_selector: response
    params: {}
- name: VisitorInterest.getNumberOfVisitsPerVisitDuration
  endpoint:
    path: VisitorInterest.getNumberOfVisitsPerVisitDuration
    method: GET
    data_selector: response
    params: {}
- name: VisitorInterest.getNumberOfVisitsPerPage
  endpoint:
    path: VisitorInterest.getNumberOfVisitsPerPage
    method: GET
    data_selector: response
    params: {}
- name: VisitorInterest.getNumberOfVisitsByDaysSinceLast
  endpoint:
    path: VisitorInterest.getNumberOfVisitsByDaysSinceLast
    method: GET
    data_selector: response
    params: {}
- name: VisitorInterest.getNumberOfVisitsByVisitCount
  endpoint:
    path: VisitorInterest.getNumberOfVisitsByVisitCount
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.get
  endpoint:
    path: VisitsSummary.get
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getVisits
  endpoint:
    path: VisitsSummary.getVisits
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getUniqueVisitors
  endpoint:
    path: VisitsSummary.getUniqueVisitors
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getUsers
  endpoint:
    path: VisitsSummary.getUsers
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getActions
  endpoint:
    path: VisitsSummary.getActions
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getMaxActions
  endpoint:
    path: VisitsSummary.getMaxActions
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getBounceCount
  endpoint:
    path: VisitsSummary.getBounceCount
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getVisitsConverted
  endpoint:
    path: VisitsSummary.getVisitsConverted
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getSumVisitsLength
  endpoint:
    path: VisitsSummary.getSumVisitsLength
    method: GET
    data_selector: response
    params: {}
- name: VisitsSummary.getSumVisitsLengthPretty
  endpoint:
    path: VisitsSummary.getSumVisitsLengthPretty
    method: GET
    data_selector: response
    params: {}
- name: tracker
  endpoint:
    path: /matomo.php
    method: POST
- name: trackPageView
  endpoint:
    path: /matomo.php
    method: GET
    data_selector: response
    params:
      action: trackPageView
- name: trackEvent
  endpoint:
    path: /matomo.php
    method: GET
    data_selector: response
    params:
      action: trackEvent
- name: trackEcommerceOrder
  endpoint:
    path: /matomo.php
    method: GET
    data_selector: response
    params:
      action: trackEcommerceOrder
- name: getHeatmaps
  endpoint:
    path: /HeatmapSessionRecording.getHeatmaps
    method: GET
    data_selector: heatmaps
    params:
      idSite: idSite
      includePageTreeMirror: '1'
- name: getSessionRecordings
  endpoint:
    path: /HeatmapSessionRecording.getSessionRecordings
    method: GET
    data_selector: sessionRecordings
    params:
      idSite: idSite
- name: getKeywords
  endpoint:
    path: Referrers.getKeywords
    method: GET
- name: getWebsites
  endpoint:
    path: Referrers.getWebsites
    method: GET
- name: getCampaigns
  endpoint:
    path: Referrers.getCampaigns
    method: GET
- name: getSearchEngines
  endpoint:
    path: Referrers.getSearchEngines
    method: GET
- name: getReferrerType
  endpoint:
    path: Referrers.getReferrerType
    method: GET
- name: API Method List
  endpoint:
    path: /
    method: GET
- name: getMetadata
  endpoint:
    path: /API.getMetadata
    method: GET
    data_selector: records
    params: {}
- name: getReportMetadata
  endpoint:
    path: /API.getReportMetadata
    method: GET
    data_selector: records
    params: {}
- name: getProcessedReport
  endpoint:
    path: /API.getProcessedReport
    method: GET
    data_selector: records
    params: {}
- name: getRowEvolution
  endpoint:
    path: /API.getRowEvolution
    method: GET
    data_selector: records
    params: {}
- name: getBulkRequest
  endpoint:
    path: /API.getBulkRequest
    method: GET
    data_selector: records
    params: {}
- name: isPluginActivated
  endpoint:
    path: /API.isPluginActivated
    method: GET
    data_selector: records
    params: {}
- name: getSuggestedValuesForSegment
  endpoint:
    path: /API.getSuggestedValuesForSegment
    method: GET
    data_selector: records
    params: {}
- name: access
  endpoint:
    path: /api/access
    method: GET
    data_selector: records
- name: archive
  endpoint:
    path: /api/archive
    method: GET
    data_selector: records
- name: UserCountry
  endpoint:
    path: module=API&method=API.getProcessedReport&idSite=1&date=yesterday&period=day&apiModule=UserCountry&apiAction=getCountry&language=en&format=xml&token_auth=anonymous&filter_truncate=5
    method: GET
    data_selector: reportData
    params: {}
- name: VisitsSummary
  endpoint:
    path: module=API&method=VisitsSummary.get
    method: GET
    data_selector: result
    params: {}
- name: Referrers
  endpoint:
    path: module=API&method=Referrers.getKeywords
    method: GET
    data_selector: result
    params: {}
- name: referrers_keywords
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      module: API
      method: Referrers.getKeywords
- name: user_country
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      module: API
      method: UserCountry.getCountry
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: referrers_get_keywords
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      module: API
      method: Referrers.getKeywords
      idSite: '1'
      date: '2011-01-11'
      period: week
      format: xml
      segment: browserCode==FF;countryCode==DE
- name: user_country
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      module: API
      method: UserCountry.getCountry
      idSite: '3'
      date: yesterday
      period: day
      format: xml
      filter_truncate: '5'
      language: en
- name: tracking_code_script
  endpoint:
    path: $script/$idsite
    method: GET
- name: tracking_code_noscript
  endpoint:
    path: $noscript/$idsite
    method: GET
- name: tracking_user_id
  endpoint:
    path: $user_id_to_track
    method: GET
- name: report_summary_filter_limit
  endpoint:
    path: $limit
    method: GET
- name: report_summary_report_ids
  endpoint:
    path: $reports_to_show
    method: GET
- name: setting_tabs
  endpoint:
    path: $setting_tabs
    method: GET
- name: install_tables
  endpoint:
    path: $table_names
    method: GET
- name: systemreport_tables
  endpoint:
    path: $tables
    method: GET
- name: tracking_settings_changed
  endpoint:
    path: $settings
    method: GET
- name: uninstall
  endpoint:
    path: $should_remove_all_data
    method: GET
- name: uninstall_blog
  endpoint:
    path: $should_remove_all_data
    method: GET
- name: site_synced
  endpoint:
    path: $idsite/$blog_id
    method: GET
- name: ecommerce_init
  endpoint:
    path: $tracker
    method: GET
- name: processed_report
  endpoint:
    path: /matomo/v1/api/processed_report
    method: GET
    data_selector: records
    params:
      filter_limit: 10
- name: report_metadata
  endpoint:
    path: /matomo/v1/api/report_metadata
    method: GET
    data_selector: records
- name: matomo_version
  endpoint:
    path: /matomo/v1/api/matomo_version
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /matomo/v1/api/metadata
    method: GET
    data_selector: records
- name: segments_metadata
  endpoint:
    path: /matomo/v1/api/segments_metadata
    method: GET
    data_selector: records
- name: widget_metadata
  endpoint:
    path: /matomo/v1/api/widget_metadata
    method: GET
    data_selector: records
- name: row_evolution
  endpoint:
    path: /matomo/v1/api/row_evolution
    method: GET
    data_selector: records
- name: suggested_values_for_segment
  endpoint:
    path: /matomo/v1/api/suggested_values_for_segment
    method: GET
    data_selector: records
- name: settings
  endpoint:
    path: /matomo/v1/api/settings
    method: GET
    data_selector: records
- name: annotations_add
  endpoint:
    path: /matomo/v1/annotations/add
    method: POST
- name: annotations_all
  endpoint:
    path: /matomo/v1/annotations/all
    method: POST
- name: invalidate_archived_reports
  endpoint:
    path: /matomo/v1/core_admin_home/invalidate_archived_reports
    method: POST
- name: run_scheduled_tasks
  endpoint:
    path: /matomo/v1/core_admin_home/run_scheduled_tasks
    method: POST
- name: dashboards
  endpoint:
    path: /matomo/v1/dashboard/dashboards
    method: GET
    data_selector: records
- name: get_image_graph
  endpoint:
    path: /matomo/v1/image_graph/get
    method: GET
- name: available_languages
  endpoint:
    path: /matomo/v1/languages_manager/available_languages
    method: GET
    data_selector: records
- name: available_languages_info
  endpoint:
    path: /matomo/v1/languages_manager/available_languages_info
    method: GET
    data_selector: records
- name: available_language_names
  endpoint:
    path: /matomo/v1/languages_manager/available_language_names
    method: GET
    data_selector: records
- name: language_for_user
  endpoint:
    path: /matomo/v1/languages_manager/language_for_user
    method: GET
    data_selector: records
- name: counters
  endpoint:
    path: /matomo/v1/live/counters
    method: GET
    data_selector: records
- name: last_visits_details
  endpoint:
    path: /matomo/v1/live/last_visits_details
    method: GET
    data_selector: records
- name: visitor_profile
  endpoint:
    path: /matomo/v1/live/visitor_profile
    method: GET
    data_selector: records
- name: most_recent_visitor_id
  endpoint:
    path: /matomo/v1/live/most_recent_visitor_id
    method: GET
    data_selector: records
- name: visits
  endpoint:
    path: /matomo/v1/visits_summary/visits
    method: GET
    data_selector: records
- name: unique_visitors
  endpoint:
    path: /matomo/v1/visits_summary/unique_visitors
    method: GET
    data_selector: records
- name: export_data_subjects
  endpoint:
    path: /matomo/v1/privacy_manager/export_data_subjects
    method: GET
    data_selector: records
- name: anonymize_some_raw_data
  endpoint:
    path: /matomo/v1/privacy_manager/anonymize_some_raw_data
    method: POST
- name: reports
  endpoint:
    path: /matomo/v1/scheduled_reports/reports
    method: GET
    data_selector: records
- name: send_report
  endpoint:
    path: /matomo/v1/scheduled_reports/send_report
    method: POST
- name: add_segment
  endpoint:
    path: /matomo/v1/segment_editor/add
    method: POST
- name: update_segment
  endpoint:
    path: /matomo/v1/segment_editor/update
    method: PUT
- name: delete_segment
  endpoint:
    path: /matomo/v1/segment_editor/delete
    method: DELETE
- name: get_segment
  endpoint:
    path: /matomo/v1/segment_editor/get
    method: GET
- name: all_segments
  endpoint:
    path: /matomo/v1/segment_editor/all
    method: GET
- name: all_sites_id
  endpoint:
    path: /matomo/v1/sites_manager/all_sites_id
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /matomo/v1/users_manager/users
    method: GET
    data_selector: records
- name: users_login
  endpoint:
    path: /matomo/v1/users_manager/users_login
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /matomo/v1/users_manager/user
    method: GET
    data_selector: records
- name: goals
  endpoint:
    path: /matomo/v1/goals/goals
    method: GET
    data_selector: records
- name: goal
  endpoint:
    path: /matomo/v1/goals/goal
    method: GET
    data_selector: records
notes:
- 'To require consent, insert the following line at top of your existing Matomo Tracking
  code on all your pages: _paq.push([''requireConsent'']);'
- 'To require user cookie consent before storing and using any cookies: _paq.push([''requireCookieConsent'']);'
- 'Once a user gives consent, you can let Matomo remember that the user has given
  consent by calling: _paq.push([''rememberConsentGiven'']);'
- 'Once a user gives their consent, you need to call the setConsentGiven method: _paq.push([''setConsentGiven'']);'
- 'When the user has expressed they no longer give consent, you need to call: _paq.push([''forgetConsentGiven'']);'
- Embed the HTML block as early as possible within the <head> element of your website.
- Using the same container in multiple websites is supported.
- Downloading the JavaScript file and uploading it to your server may cause the debug/preview
  feature to not work.
- The ImageGraph URLs returned by some of our APIs do no longer contain the `token_auth`.
- By default, Matomo uses the title of the HTML page to track the page title.
- The JavaScript tracker runs on all browsers that support the JSON API.
- If you need to support IE7 and older then you could load a polyfill that makes window.JSON
  available such as JSON3.
- The opt-out form code can be generated from the Administration => Privacy => Users
  opt-out menu in the Matomo dashboard.
- Opt-out form configuration options can be passed as URL parameters.
- Use HTML attributes or CSS classes to tag content for tracking.
- Automatic detection of content name, piece, and target can vary based on attributes
  and element types.
- Uses Custom Dimensions instead of Custom Variables as they will be deprecated in
  the future.
- Use HTTPS to protect token_auth over untrusted networks.
- The debug toolbar only appears by default for the person that enabled the debug
  / preview mode in the Tag Manager.
- You may not want to preview or debug all environments, or you simply want to load
  the container without the preview mode for a quick test.
- Users can embed a container without authentication by providing Matomo URL and Container
  ID.
- For 'live' environment only, other environments require a token in the JavaScript
  file.
- The `matomo.js` file should be loaded synchronously as early as possible.
- To prevent flickering, embed experiment code before tracking page views.
- Experiment name and variation names must be pre-configured in Matomo to avoid ignored
  requests.
- We recommend selecting 'Visitors enter this experiment on any page'.
- As marketing campaigns are typically seen by your audience outside of your website.
- Using IDs is useful when you do not want to expose the names of your experiments
  and variations in the URL.
- Heatmaps let you view visually all clicks, mouse moves, and scroll activities of
  your visitors within a certain page.
- Session recordings let you view all activities such as clicks, mouse movements,
  scrolls, window resizes, page changes, and form interactions of a real visitor on
  a certain page.
- Use HTTP 302 for temporary redirects, not HTTP 301.
- The Matomo data layer will not be updated when you push changes to the GTM data
  layer afterwards.
- The variable needs to be defined before the container is loaded.
- It is important to define these methods before the Matomo tracker file is loaded.
- Uses Matomo for tracking media interactions
- Ensure to generate a new ma_id for each media change
- By default, the activities of a visitor is only recorded for up to 10 minutes in
  a single page view.
- Defaults to false for recording keystrokes.
- If you want to track crashes in a language that does not have an official tracking
  SDK, then you will need to use the Crash Analytics HTTP API.
- The Matomo JavaScript tracker file `matomo.js` is required for tracking.
- Ensure `matomo.js` is writable to allow plugins to extend the JavaScript tracker.
- Heatmap & Session Recording has disabled the capturing of keystrokes by default
  since version 3.2.0
- By default, all fields will be masked.
- It is important to define these methods in your website before the Matomo tracker
  file is loaded.
- if a page unload occurs before your customizer callback completes, the unaltered
  stack trace will be logged as we’d rather have something logged than nothing.
- these limits apply both to automatically tracked crashes and to manually tracked
  crashes.
- If the `enablejsapi=1` parameter is not specified in your YouTube URLs, the Media
  Analytics tracker will likely not receive video events from the YouTube player.
- If your website uses the same YouTube Iframe API and makes use of the onYouTubeIframeAPIReady
  callback method, you need to let the media tracker know as soon as the YouTube Player
  API is available by calling the `MediaAnalytics::scanForMedia` method.
- 'Media Analytics tracking is enabled by default, you can customize the tracking
  like this:'
- By default, Matomo detects all forms on your website automatically.
- This is useful if you for example manage multiple websites in your Matomo and there
  are some sites where you do not want to track any forms.
- Tracking of media events is disabled by default in Matomo Cloud since January 2022.
- You can re-scan the entire document for new forms.
- If you have only updated parts of your web page, you can search for newly added
  forms and form fields only in that area.
- All parameter values that are strings must be URL encoded.
- To track bots, set the parameter &bots=1 in your requests.
- If the System Check displays a warning for 'Writable Matomo.js', it needs to be
  resolved.
- If forms do not have a 'name' or 'id', tracking can still be done if there's only
  one form on the page.
- Matomo uses first party cookies to keep track of some user information over time.
- Consideration must be given to retention times and avoiding conflicts with other
  cookies, trackers, and apps.
- Ensure that the token is transmitted securely, for example, using HTTPS.
- Requires token_auth for certain functionalities.
- Ensure to set the Matomo base URL before using the class.
- Use token_auth for authentication. Never share URLs containing token_auth.
- Requires setup of connected app in Matomo
- Some metrics may return nulls in deeply nested fields
- The static Graphs API requires standard Matomo parameters (idSite, date, period,
  etc.)
- Segment parameter must be URL encoded before being sent to Matomo.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses a high volume of log data with frequent updates.
errors:
- _mtm.push causing browser to freeze in some cases for AngularJS
- If you set cdt with a datetime older than 24 hours then token_auth must be set.
- If you set cdt with a datetime in the last 24 hours then you don't need to pass
  token_auth.
- '401 Unauthorized: Check token_auth validity.'
- '400 Bad Request: Ensure all required parameters are set.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403 Forbidden: Check authentication and permissions'
- '404 Not Found: Verify endpoint path and parameters'
- '400 Bad Request: Check your parameters.'
- '401 Unauthorized: Check your token_auth.'
- '404 Not Found: Verify the endpoint path.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - token_auth
  - Admin
  - Super User
  - AuthResult
  - Access
  - Token
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://example.com/index.php
  headers:
    Content-Type: text/javascript
    Accept: application/json
    User-Agent: MatomoJavaClient
  auth:
    type: apikey
    location: query
    header_name: token_auth
    token_url: https://login.api.com/services/oauth2/token
    token_auth: $token_auth
    flow: refresh_token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
  paginator:
    type: page
    default_page_size: 100
source_metadata: null
