resources:
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: response
    params: {}
- name: completions
  endpoint:
    path: /v1/completions
    method: POST
    data_selector: response
    params: {}
- name: models
  endpoint:
    path: /v1/models
    method: GET
    data_selector: models
    params: {}
- name: applications
  endpoint:
    path: /api-reference/applications/list-applications
    method: GET
- name: clusters
  endpoint:
    path: /api-reference/clusters/list-clusters
    method: GET
- name: jobs
  endpoint:
    path: /api-reference/jobs/list-job-runs
    method: GET
- name: models
  endpoint:
    path: /api-reference/models/list-models
    method: GET
- name: artifacts
  endpoint:
    path: /api-reference/artifacts/list-artifacts
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: iris_classification
  endpoint:
    path: /deploy-model-with-fastapi/
    method: POST
    data_selector: predictions
    params: {}
- name: job
  endpoint:
    path: /jobs
    method: POST
    data_selector: job
    params: {}
- name: predictions
  endpoint:
    path: /predict
    method: POST
    data_selector: predictions
    params: {}
- name: workflow
  endpoint:
    path: /workflow
    method: POST
    data_selector: result
    params: {}
- name: job
  endpoint:
    path: /deploy-job
    method: POST
    data_selector: predictions
    params:
      Repo Url: https://github.com/truefoundry/getting-started-examples
      Path to build context: ./train-model/
      Command: python train.py
- name: input_queue
  endpoint:
    path: /async/input_queue
    method: POST
- name: output_queue
  endpoint:
    path: /async/output_queue
    method: POST
- name: simple_pipeline
  endpoint:
    path: /workflow.py
    method: POST
    data_selector: result
    params: {}
- name: async_service
  endpoint:
    path: /deploy-your-first-async-service
    method: POST
    data_selector: response
    params:
      repo_url: https://github.com/truefoundry/getting-started-examples
      path_to_build_context: ./deploy-model-with-fastapi/
      command: uvicorn server:app --host 0.0.0.0 --port 8000
      path_to_requirements: requirements.txt
      port: '8000'
      destination_url: http://0.0.0.0:8000/predict
- name: workflow
  endpoint:
    path: /workflow
    method: GET
    data_selector: workflows
    params: {}
- name: task
  endpoint:
    path: /task
    method: GET
    data_selector: tasks
    params: {}
- name: input_queue
  endpoint:
    path: /input_queue
    method: POST
- name: output_queue
  endpoint:
    path: /output_queue
    method: POST
- name: volume
  endpoint:
    path: /api/volume
    method: POST
    data_selector: volume
    params: {}
- name: run
  endpoint:
    path: /create_run
    method: POST
    data_selector: run_data
- name: async_service
  endpoint:
    path: /deploy-your-first-async-service
    method: POST
    data_selector: results
    params:
      Repo URL: https://github.com/truefoundry/getting-started-examples
      Path to build context: ./deploy-model-with-fastapi/
      Command: uvicorn server:app --host 0.0.0.0 --port 8000
      Path to requirements: requirements.txt
      Port: 8000
      Destination URL: http://0.0.0.0:8000/predict
- name: volume
  endpoint:
    path: /create-volume
    method: POST
    data_selector: volume
    params:
      size: size_in_Gi
      storage_class: storage_class_name
- name: Environments
  endpoint:
    path: /api/environments
    method: GET
    data_selector: records
    params: {}
- name: Users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
    params: {}
- name: Teams
  endpoint:
    path: /api/teams
    method: GET
    data_selector: records
    params: {}
- name: Integrations
  endpoint:
    path: /api/integrations
    method: GET
    data_selector: records
    params: {}
- name: Git Integrations
  endpoint:
    path: /api/git-integrations
    method: GET
    data_selector: records
    params: {}
- name: Clusters
  endpoint:
    path: /api/clusters
    method: GET
    data_selector: records
    params: {}
- name: manifests
  endpoint:
    path: /manifests
    method: POST
    data_selector: manifests
- name: Validation Policies
  endpoint:
    path: /policies/validation
    method: GET
- name: Mutation Policies
  endpoint:
    path: /policies/mutation
    method: GET
- name: openai-account-cli
  endpoint:
    path: /provider-account/openai
    method: POST
    data_selector: integrations
    params: {}
- name: redis
  endpoint:
    path: /services/data/vXX.X/sobjects/Redis
    method: GET
    data_selector: records
- name: Environments
  endpoint:
    path: /environments
    method: GET
    data_selector: View All Environments
- name: Users
  endpoint:
    path: /users
    method: GET
    data_selector: View All Users
- name: Teams
  endpoint:
    path: /teams
    method: GET
    data_selector: View All Teams
- name: Integrations
  endpoint:
    path: /integrations
    method: GET
    data_selector: View All Integrations
- name: Git Integrations
  endpoint:
    path: /git-integrations
    method: GET
    data_selector: View All Git Integrations
- name: Clusters
  endpoint:
    path: /clusters
    method: GET
    data_selector: View All Clusters
- name: tfy-manifests-template
  endpoint:
    path: /tfy-manifests-template
    method: POST
    data_selector: manifests
    params: {}
- name: welcome-deployment
  endpoint:
    path: /deployments/welcome-deployment
    method: POST
    data_selector: deployment
    params: {}
- name: welcome-service
  endpoint:
    path: /services/welcome-service
    method: POST
    data_selector: service
    params: {}
- name: welcome-gateway
  endpoint:
    path: /gateways/welcome-gateway
    method: POST
    data_selector: gateway
    params: {}
- name: welcome-virtualservice
  endpoint:
    path: /virtualservices/welcome-virtualservice
    method: POST
    data_selector: virtualservice
    params: {}
- name: gpt-4
  endpoint:
    path: /integrations/type/integration/model/openai
    method: POST
    data_selector: model_id
    params: {}
- name: gpt-4o
  endpoint:
    path: /integrations/type/integration/model/openai
    method: POST
    data_selector: model_id
    params: {}
- name: images_and_charts
  endpoint:
    path: /artifacts-manifest.json
    method: GET
    data_selector: artifacts
- name: redis
  endpoint:
    path: /services/data/vXX.X/sobjects/redis
    method: GET
    data_selector: records
    params: {}
- name: deployments
  endpoint:
    path: /api/v1/deployments
    method: GET
    data_selector: deployments
    params: {}
- name: helm_charts
  endpoint:
    path: /infra-charts
    method: GET
    data_selector: charts
    params: {}
- name: s3_bucket
  endpoint:
    path: /s3
    method: GET
    data_selector: bucket_details
- name: workload_identity
  endpoint:
    path: /path/to/workload_identity
    method: POST
    data_selector: response
    params: {}
- name: models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
    data_selector: models
- name: batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
    data_selector: batches
- name: files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
    data_selector: files
- name: budget-limiting-config
  endpoint:
    path: /gateway-budget-config
    method: POST
    data_selector: rules
    params: {}
- name: cost_tracking
  endpoint:
    path: /api/reference/cost-tracking
    method: GET
    data_selector: cost_data
    params: {}
- name: metrics
  endpoint:
    path: /api/reference/metrics
    method: GET
    data_selector: metrics_data
    params: {}
- name: MCP Server Group
  endpoint:
    path: /mcp/server/groups
    method: GET
- name: MCP Server
  endpoint:
    path: /mcp/servers
    method: GET
- name: calculator-mcp-server
  endpoint:
    path: /mcp
    method: GET
- name: deepwiki-mcp
  endpoint:
    path: /mcp
    method: GET
- name: hf-mcp-server
  endpoint:
    path: /mcp
    method: GET
- name: chat_completions
  endpoint:
    path: /api/llm/agent/chat/completions
    method: POST
    data_selector: data
    params: {}
- name: tool_calls
  endpoint:
    path: /tool_calls
    method: POST
    data_selector: tool_calls
    params: {}
- name: chat_completions
  endpoint:
    path: /api/llm/agent/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: notebook
  endpoint:
    path: /api/v1/notebooks
    method: POST
    data_selector: notebooks
- name: list_batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: create_batch
  endpoint:
    path: /api-reference/batch/create-batch
    method: POST
- name: get_batch
  endpoint:
    path: /api-reference/batch/get-batch
    method: GET
- name: get_batch_output
  endpoint:
    path: /api-reference/batch/get-batch-output
    method: GET
- name: cancel_batch
  endpoint:
    path: /api-reference/batch/cancel-batch
    method: POST
- name: list_files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
- name: upload_file
  endpoint:
    path: /api-reference/files/upload-file
    method: POST
- name: get_file
  endpoint:
    path: /api-reference/files/get-file
    method: GET
- name: delete_file
  endpoint:
    path: /api-reference/files/delete-file
    method: DEL
- name: get_file_content
  endpoint:
    path: /api-reference/files/get-file-content
    method: GET
- name: post_moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
- name: list_available_models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: nodejs-mcp-server
  endpoint:
    path: /nodejs-mcp-server
    method: POST
    data_selector: response
    params: {}
- name: python-mcp-server
  endpoint:
    path: /python-mcp-server
    method: POST
    data_selector: response
    params: {}
- name: metrics
  endpoint:
    path: /api-reference/metrics
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
    data_selector: models
- name: batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
    data_selector: batches
- name: files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
    data_selector: files
- name: Chat Completions
  endpoint:
    path: /api-reference/chat/chat-completions
    method: POST
- name: Agent Responses
  endpoint:
    path: /api-reference/agent/agent-responses
    method: POST
- name: List Tools for MCP
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
- name: Generate Embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
- name: Rerank Documents
  endpoint:
    path: /api-reference/rerank/rerank-documents
    method: POST
- name: List Model Response Input Items
  endpoint:
    path: /api-reference/responses/list-model-response-input-items
    method: GET
- name: Get Model Response
  endpoint:
    path: /api-reference/responses/get-model-response
    method: GET
- name: Delete Model Response
  endpoint:
    path: /api-reference/responses/delete-model-response
    method: DEL
- name: Model Responses
  endpoint:
    path: /api-reference/responses/model-responses
    method: POST
- name: Generate images from a prompt
  endpoint:
    path: /api-reference/image/generate-images-from-a-prompt
    method: POST
- name: Edit images based on a prompt
  endpoint:
    path: /api-reference/image/edit-images-based-on-a-prompt
    method: POST
- name: Transcribe Audio
  endpoint:
    path: /api-reference/audio/transcribe-audio
    method: POST
- name: List batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: Create Batch
  endpoint:
    path: /api-reference/batch/create-batch
    method: POST
- name: Get Batch
  endpoint:
    path: /api-reference/batch/get-batch
    method: GET
- name: Get Batch Output
  endpoint:
    path: /api-reference/batch/get-batch-output
    method: GET
- name: Cancel Batch
  endpoint:
    path: /api-reference/batch/cancel-batch
    method: POST
- name: List Files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
- name: Upload File
  endpoint:
    path: /api-reference/files/upload-file
    method: POST
- name: Get File
  endpoint:
    path: /api-reference/files/get-file
    method: GET
- name: Delete file
  endpoint:
    path: /api-reference/files/delete-file
    method: DEL
- name: Get File Content
  endpoint:
    path: /api-reference/files/get-file-content
    method: GET
- name: Post moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
- name: List available models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: List Tools for MCP
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
- name: Generate Embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
- name: Transcribe Audio
  endpoint:
    path: /api-reference/audio/transcribe-audio
    method: POST
- name: List Batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: List Files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
- name: Post Moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
- name: List available models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
- name: agent_responses
  endpoint:
    path: /agent/responses
    method: POST
    data_selector: choices
- name: list_batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
    data_selector: records
    params: {}
- name: create_batch
  endpoint:
    path: /api-reference/batch/create-batch
    method: POST
    data_selector: records
    params: {}
- name: get_batch
  endpoint:
    path: /api-reference/batch/get-batch
    method: GET
    data_selector: records
    params: {}
- name: get_batch_output
  endpoint:
    path: /api-reference/batch/get-batch-output
    method: GET
    data_selector: records
    params: {}
- name: cancel_batch
  endpoint:
    path: /api-reference/batch/cancel-batch
    method: POST
    data_selector: records
    params: {}
- name: list_files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
    data_selector: records
    params: {}
- name: upload_file
  endpoint:
    path: /api-reference/files/upload-file
    method: POST
    data_selector: records
    params: {}
- name: get_file
  endpoint:
    path: /api-reference/files/get-file
    method: GET
    data_selector: records
    params: {}
- name: delete_file
  endpoint:
    path: /api-reference/files/delete-file
    method: DEL
    data_selector: records
    params: {}
- name: get_file_content
  endpoint:
    path: /api-reference/files/get-file-content
    method: GET
    data_selector: records
    params: {}
- name: post_moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
    data_selector: records
    params: {}
- name: list_available_models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
    data_selector: records
    params: {}
- name: agent_responses
  endpoint:
    path: /agent/{agent-app-id}/responses
    method: POST
- name: public_cost
  endpoint:
    path: /gateway/cost-tracking/public-cost
    method: GET
- name: private_cost
  endpoint:
    path: /gateway/cost-tracking/private-cost
    method: GET
- name: metrics
  endpoint:
    path: /gateway/metrics
    method: GET
- name: export_cost_data
  endpoint:
    path: /gateway/export-cost-data
    method: POST
- name: list_tools_for_mcp
  endpoint:
    path: /{mcp_server_integration_id}/tools
    method: GET
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: response
    params: {}
- name: rerank_documents
  endpoint:
    path: /rerank
    method: POST
    data_selector: results
- name: List Tools for MCP
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
- name: Generate Embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
- name: Rerank Documents
  endpoint:
    path: /api-reference/rerank/rerank-documents
    method: POST
- name: Transcribe Audio
  endpoint:
    path: /api-reference/audio/transcribe-audio
    method: POST
- name: List batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: Upload File
  endpoint:
    path: /api-reference/files/upload-file
    method: POST
- name: list_model_response_input_items
  endpoint:
    path: /responses/{id}/input_items
    method: GET
    data_selector: data
- name: model_response
  endpoint:
    path: /responses/{id}
    method: GET
    data_selector: output
- name: List Tools for MCP
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
- name: Generate Embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
- name: List available models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: delete_model_response
  endpoint:
    path: /responses/{id}
    method: DELETE
- name: calculator-mcp-server
  endpoint:
    path: /mcp
    method: GET
- name: deepwiki-mcp
  endpoint:
    path: /mcp
    method: GET
- name: hf-mcp-server
  endpoint:
    path: /mcp
    method: GET
- name: model_responses
  endpoint:
    path: /responses
    method: POST
    data_selector: output
- name: agent_chat_completions
  endpoint:
    path: /api/llm/agent/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: generate_images
  endpoint:
    path: /images/generations
    method: POST
    data_selector: data
    params: {}
- name: tool_calls
  endpoint:
    path: /tool_calls
    method: POST
    data_selector: tool_calls
    params: {}
- name: edit_images
  endpoint:
    path: /images/edits
    method: POST
- name: chat_completions
  endpoint:
    path: /api/llm/agent/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: audio_transcriptions
  endpoint:
    path: /audio/transcriptions
    method: POST
    data_selector: text
- name: batches
  endpoint:
    path: /batches
    method: GET
    data_selector: data
- name: mcp
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
    data_selector: records
    params: {}
- name: embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
    data_selector: records
    params: {}
- name: responses
  endpoint:
    path: /api-reference/responses/get-model-response
    method: GET
    data_selector: records
    params: {}
- name: batches
  endpoint:
    path: /batches
    method: POST
    data_selector: id
    params: {}
- name: list_batches
  endpoint:
    path: /batches
    method: GET
    data_selector: records
    params: {}
- name: nodejs-mcp-server
  endpoint:
    path: /mcp/nodejs
    method: POST
    data_selector: resources
    params: {}
- name: python-mcp-server
  endpoint:
    path: /mcp/python
    method: POST
    data_selector: resources
    params: {}
- name: batch
  endpoint:
    path: /batches/{id}
    method: GET
    data_selector: id
    params: {}
- name: List Tools for MCP
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
- name: Generate Embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
- name: Rerank Documents
  endpoint:
    path: /api-reference/rerank/rerank-documents
    method: POST
- name: Transcribe Audio
  endpoint:
    path: /api-reference/audio/transcribe-audio
    method: POST
- name: List Batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: List Files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
- name: batch_output
  endpoint:
    path: /batches/{id}/output
    method: GET
- name: cancel_batch
  endpoint:
    path: /batches/{id}/cancel
    method: POST
- name: list_files
  endpoint:
    path: /files
    method: GET
    data_selector: data
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: files
  endpoint:
    path: /files
    method: POST
    data_selector: id
- name: files
  endpoint:
    path: /files/{id}
    method: GET
    data_selector: id
    params: {}
- name: delete_file
  endpoint:
    path: /files/{id}
    method: DELETE
    data_selector: File deleted successfully
- name: file_content
  endpoint:
    path: /api/llm/files/{id}/content
    method: GET
- name: moderations
  endpoint:
    path: /moderations
    method: POST
    data_selector: results
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: data
- name: Chat Completions
  endpoint:
    path: /api-reference/chat/chat-completions
    method: POST
- name: Agent Responses
  endpoint:
    path: /api-reference/agent/agent-responses
    method: POST
- name: List Tools for MCP
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
- name: Generate Embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
- name: Rerank Documents
  endpoint:
    path: /api-reference/rerank/rerank-documents
    method: POST
- name: List Model Response Input Items
  endpoint:
    path: /api-reference/responses/list-model-response-input-items
    method: GET
- name: Get Model Response
  endpoint:
    path: /api-reference/responses/get-model-response
    method: GET
- name: Model Responses
  endpoint:
    path: /api-reference/responses/model-responses
    method: POST
- name: Generate images from a prompt
  endpoint:
    path: /api-reference/image/generate-images-from-a-prompt
    method: POST
- name: Edit images based on a prompt
  endpoint:
    path: /api-reference/image/edit-images-based-on-a-prompt
    method: POST
- name: Transcribe Audio
  endpoint:
    path: /api-reference/audio/transcribe-audio
    method: POST
- name: List batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: Create Batch
  endpoint:
    path: /api-reference/batch/create-batch
    method: POST
- name: Get Batch
  endpoint:
    path: /api-reference/batch/get-batch
    method: GET
- name: Get Batch Output
  endpoint:
    path: /api-reference/batch/get-batch-output
    method: GET
- name: Cancel Batch
  endpoint:
    path: /api-reference/batch/cancel-batch
    method: POST
- name: List Files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
- name: Upload File
  endpoint:
    path: /api-reference/files/upload-file
    method: POST
- name: Get File
  endpoint:
    path: /api-reference/files/get-file
    method: GET
- name: Delete file
  endpoint:
    path: /api-reference/files/delete-file
    method: DEL
- name: Get File Content
  endpoint:
    path: /api-reference/files/get-file-content
    method: GET
- name: Post moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
- name: List available models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
- name: models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: batch
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
    data_selector: records
    params: {}
- name: files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
    data_selector: records
    params: {}
- name: chat_completions
  endpoint:
    path: /api-reference/chat/chat-completions
    method: POST
- name: agent_responses
  endpoint:
    path: /api-reference/agent/agent-responses
    method: POST
- name: list_tools_for_mcp
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
- name: generate_embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
- name: rerank_documents
  endpoint:
    path: /api-reference/rerank/rerank-documents
    method: POST
- name: list_model_response_input_items
  endpoint:
    path: /api-reference/responses/list-model-response-input-items
    method: GET
- name: get_model_response
  endpoint:
    path: /api-reference/responses/get-model-response
    method: GET
- name: delete_model_response
  endpoint:
    path: /api-reference/responses/delete-model-response
    method: DEL
- name: model_responses
  endpoint:
    path: /api-reference/responses/model-responses
    method: POST
- name: generate_images_from_prompt
  endpoint:
    path: /api-reference/image/generate-images-from-a-prompt
    method: POST
- name: edit_images_based_on_prompt
  endpoint:
    path: /api-reference/image/edit-images-based-on-a-prompt
    method: POST
- name: transcribe_audio
  endpoint:
    path: /api-reference/audio/transcribe-audio
    method: POST
- name: list_batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
- name: create_batch
  endpoint:
    path: /api-reference/batch/create-batch
    method: POST
- name: get_batch
  endpoint:
    path: /api-reference/batch/get-batch
    method: GET
- name: get_batch_output
  endpoint:
    path: /api-reference/batch/get-batch-output
    method: GET
- name: cancel_batch
  endpoint:
    path: /api-reference/batch/cancel-batch
    method: POST
- name: list_files
  endpoint:
    path: /api-reference/files/list-files
    method: GET
- name: upload_file
  endpoint:
    path: /api-reference/files/upload-file
    method: POST
- name: get_file
  endpoint:
    path: /api-reference/files/get-file
    method: GET
- name: delete_file
  endpoint:
    path: /api-reference/files/delete-file
    method: DEL
- name: get_file_content
  endpoint:
    path: /api-reference/files/get-file-content
    method: GET
- name: post_moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
- name: list_available_models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: oidc
  endpoint:
    path: /oidc
    method: POST
    data_selector: configs
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
- name: agent_responses
  endpoint:
    path: /agent/responses
    method: POST
- name: chat_completions
  endpoint:
    path: /api-reference/chat/chat-completions
    method: POST
    data_selector: response
    params: {}
- name: agent_responses
  endpoint:
    path: /api-reference/agent/agent-responses
    method: POST
    data_selector: response
    params: {}
- name: list_tools
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
    data_selector: tools
    params: {}
- name: generate_embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
    data_selector: embeddings
    params: {}
- name: rerank_documents
  endpoint:
    path: /api-reference/rerank/rerank-documents
    method: POST
    data_selector: ranked_documents
    params: {}
- name: list_batches
  endpoint:
    path: /api-reference/batch/list-batches
    method: GET
    data_selector: batches
    params: {}
- name: upload_file
  endpoint:
    path: /api-reference/files/upload-file
    method: POST
    data_selector: uploaded_file
    params: {}
- name: agent_responses
  endpoint:
    path: /api/llm/agent/{agent-app-id}/responses
    method: POST
    data_selector: choices
- name: List Tools for MCP
  endpoint:
    path: /mcp-server/{mcp_server_integration_id}/tools
    method: GET
    data_selector: tools
- name: demo-guardrail
  endpoint:
    path: /gateway-guardrails-config
    method: POST
    data_selector: rules
    params: {}
- name: generate_embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: embeddings
    params: {}
- name: rerank_documents
  endpoint:
    path: /rerank
    method: POST
- name: moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
- name: models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: list_model_response_input_items
  endpoint:
    path: /llm/responses/{id}/input_items
    method: GET
- name: guardrail
  endpoint:
    path: /bedrock/guardrails
    method: POST
    data_selector: guardrail
    params: {}
- name: model_response
  endpoint:
    path: /responses/{id}
    method: GET
    data_selector: output
- name: Azure PII Guardrail
  endpoint:
    path: /api/pii
    method: POST
    data_selector: results
    params:
      API Version: '2024-11-01'
      Domain: None
      Model Version: latest
      Language Code: en
- name: Delete_Model_Response
  endpoint:
    path: /responses/{id}
    method: DELETE
- name: Content Safety Analysis
  endpoint:
    path: /contentSafety/analyze
    method: POST
- name: model_responses
  endpoint:
    path: /api/llm/responses
    method: POST
    data_selector: output
- name: images
  endpoint:
    path: /llm/images/generations
    method: POST
    data_selector: data
    params: {}
- name: Palo Alto Prisma AIRS Config
  endpoint:
    path: /api/v1/airs/config
    method: POST
    data_selector: config_data
- name: edit_images
  endpoint:
    path: /images/edits
    method: POST
- name: content_moderation
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
    data_selector: data
- name: transcribe_audio
  endpoint:
    path: /audio/transcriptions
    method: POST
    data_selector: text
- name: batches
  endpoint:
    path: /batches
    method: GET
    data_selector: data
- name: batches
  endpoint:
    path: /batches
    method: POST
    data_selector: id
    params: {}
- name: batch
  endpoint:
    path: /batches/{id}
    method: GET
    data_selector: id
- name: input_guardrail
  endpoint:
    path: /pii-redaction
    method: POST
    data_selector: 'null'
    params: {}
- name: output_guardrail
  endpoint:
    path: /nsfw-filtering
    method: POST
    data_selector: 'null'
    params: {}
- name: drug_mention_detection
  endpoint:
    path: /drug-mention
    method: POST
    data_selector: 'null'
    params: {}
- name: web_sanitization
  endpoint:
    path: /web-sanitization
    method: POST
    data_selector: 'null'
    params: {}
- name: pii_detection
  endpoint:
    path: /pii-detection
    method: POST
    data_selector: 'null'
    params: {}
- name: batch_output
  endpoint:
    path: /batches/{id}/output
    method: GET
    data_selector: response.body
    params: {}
- name: cancel_batch
  endpoint:
    path: /batches/{id}/cancel
    method: POST
- name: input_guardrail
  endpoint:
    path: /pii-redaction
    method: POST
    data_selector: requestBody
    params: {}
- name: output_guardrail
  endpoint:
    path: /nsfw-filtering
    method: POST
    data_selector: responseBody
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: data
- name: files
  endpoint:
    path: /files
    method: POST
    data_selector: id
    params: {}
- name: files
  endpoint:
    path: /files/{id}
    method: GET
    data_selector: id
    params: {}
- name: files
  endpoint:
    path: /files/{id}
    method: DELETE
    data_selector: '200'
    params: {}
- name: file_content
  endpoint:
    path: /files/{id}/content
    method: GET
- name: moderations
  endpoint:
    path: /moderations
    method: POST
    data_selector: results
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: data
- name: chat_completions
  endpoint:
    path: /api-reference/chat/chat-completions
    method: POST
    data_selector: response
    params: {}
- name: agent_responses
  endpoint:
    path: /api-reference/agent/agent-responses
    method: POST
    data_selector: response
    params: {}
- name: list_tools_for_mcp
  endpoint:
    path: /api-reference/mcp/list-tools-for-mcp
    method: GET
    data_selector: tools
    params: {}
- name: generate_embeddings
  endpoint:
    path: /api-reference/embeddings/generate-embeddings
    method: POST
    data_selector: embeddings
    params: {}
- name: guardrails_group
  endpoint:
    path: /gateway/guardrails
    method: POST
    data_selector: group
- name: openai_moderation
  endpoint:
    path: /gateway/guardrails/openai/moderation
    method: POST
    data_selector: moderation
- name: demo-guardrail
  endpoint:
    path: /gateway-guardrails-config
    method: POST
    data_selector: rules
    params: {}
- name: moderations
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
- name: models
  endpoint:
    path: /api-reference/models/list-available-models
    method: GET
- name: guardrail
  endpoint:
    path: /guardrails
    method: POST
    data_selector: guardrail
    params: {}
- name: content_safety
  endpoint:
    path: /contentSafety/analyze
    method: POST
    data_selector: response
    params: {}
- name: Palo Alto Prisma AIRS Config
  endpoint:
    path: /api/airs/config
    method: POST
    data_selector: config
    params: {}
- name: content_moderation
  endpoint:
    path: /api-reference/moderations/post-moderations
    method: POST
    data_selector: data
    params: {}
- name: pii-redaction
  endpoint:
    path: /pii-redaction
    method: POST
- name: nsfw-filtering
  endpoint:
    path: /nsfw-filtering
    method: POST
- name: drug-mention
  endpoint:
    path: /drug-mention
    method: POST
- name: web-sanitization
  endpoint:
    path: /web-sanitization
    method: POST
- name: pii-detection
  endpoint:
    path: /pii-detection
    method: POST
- name: guardrail_request
  endpoint:
    path: /pii-redaction
    method: POST
- name: nsfw_filtering
  endpoint:
    path: /nsfw-filtering
    method: POST
- name: compute_plane
  endpoint:
    path: /services/data/vXX.X/sobjects/ComputePlane
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Can follow the OpenAI realtime API docs
- The value you enter in the company name field will be used to create a unique URL
  that you will use to access your TrueFoundry account.
- Enterprise-Grade Security
- Centralized API key management
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Great news! TrueFoundry now makes it super easy to integrate custom JWT authentication,
  giving you the ability to set up JWT-based authentication using JWKS.
- Some objects like Contact may return nulls in deeply nested fields
- Uses the FastAPI framework for service.
- To exclude specific files from being built and deployed, create a .tfyignore file
  in the root directory of your project.
- The command to run the service is `uvicorn server:app --host 0.0.0.0 --port 8000`.
- The port on which the service will be exposed is 8000.
- Right now only static workflows are supported.
- There can be only one Workflow in an application.
- TrueFoundry supports AWS SQS, Nats queue, Kafka, and Google AMQP for input queues.
- The tfy-async-sidecar component consumes items from the queue and calls your HTTP
  service.
- Your workflow function should not contain any code or business logic, only defined
  tasks can be called in the workflow function and nothing else, else the workflow
  execution might fail.
- Consumer Lag denotes how many items are present in the queue that have not yet been
  processed by your service.
- Messages Processing Rate shows how many messages per second your service is processing.
- Processing time is the time taken by your service to process the message.
- Total Latency is the time taken from message enqueue to response publish.
- Volumes are used to provide persistent storage to containers for machine learning
  tasks.
- The tfy-async-sidecar component can consume items from the queue.
- Volumes created within a specific workspace can only be used by applications deployed
  within the same workspace.
- You can increase the size of the volume after it is created, but you cannot decrease
  the size.
- Utilizes SQS for message queuing.
- Users can only be deactivated, not deleted.
- If SSO is enabled for your organization, make sure to uncheck the 'Send email to
  set password' checkbox.
- Volumes are used to provide persistent storage to containers so that read and write
  data to a central disk across multiple pods.
- Be careful about not writing to the volume at the same path from multiple pods since
  it can cause data corruption.
- Truefoundry makes it easy to store and manage the secrets for your deployed applications.
- Secrets are used to store sensitive information like API keys, database passwords,
  which you can then refer to in your code.
- End the run
- For production settings, prefer Virtual Accounts
- Only Tenant Admins can create Virtual Accounts
- SSO is recommended for better security and user management.
- GitOps is a method of managing and deploying software applications using a version
  control system like Git.
- This repository contains the entire template.
- Truefoundry allows deploying a Helm chart from public/private helm repository, OCI
  registry, and or your own Git repository.
- Truefoundry secrets are supported only in manifest block that too only for kubernetes
  secret manifest which are using stringData field to store the secret.
- Personal Access Tokens mirror the exact same set of permissions of your current
  user.
- Virtual Accounts allow creating API Keys with limited permissions and expiration
  date.
- Uses OAuth2 with refresh token — requires setup of connected app in TrueFoundry
- An air-gapped environment is isolated from internet.
- You will need to provide access to an npm registry with js-yaml package hosted from
  within the cluster.
- Notebook instances are configured to automatically stop after 30 minutes of inactivity.
- You can now set up the scale to zero feature for the SSH server to stop the server
  after X minutes of inactivity.
- You can add this by setting the value of Stop after field which is the minutes of
  inactivity after which you want to stop the server.
- By default anything you install outside of home directory will NOT be persistent
  across notebook restarts.
- Requires an OCI compatible registry for container images and helm charts.
- Workload identity needs to be enabled for your GKE cluster.
- The gateway uses the Sliding Window Token Bucket algorithm to enforce rate-limiting.
- Ratelimiting is an important feature that is needed in a lot of scenarios when managing
  LLM workloads.
- You can add multiple API keys from the same provider by creating multiple provider
  accounts.
- The custom metadata is logged as key value pairs in the X-TFY-METADATA header. All
  values must be strings, with a maximum length of 128 characters.
- All matching rules are evaluated, and if any rule exceeds its limit, the request
  is rejected.
- Centralized MCP gateway simplifies access to AI development tools.
- Standard OAuth 2LO/3LO flows are used for enterprise MCP servers.
- Oauth2 based authentication is highly recommended for production MCP servers since
  it allows you to configure scopes to restrict access.
- Users can access and use the MCP integrations based on their permissions.
- Hugging Face MCP server requires Header Based Authentication
- Uses OAuth2 with Bearer token — requires setup of API token
- Uses a streaming model for chat completions
- Uses a personal access token for authentication.
- By default, Notebook instances are configured to automatically stop after 30 minutes
  of inactivity.
- Requires installation of mcp-proxy and setup of the respective server.
- Connecting applications to AWS services from inside an Amazon Elastic Kubernetes
  Service (EKS) cluster is streamlined through native integration.
- Monitor LLM application performance, costs, and usage patterns with the comprehensive
  Metrics Dashboard
- Requests must include X-TFY-METADATA header with project_id field
- Environment variable configuration is only available when running a self-hosted
  instance of TrueFoundry AI Gateway
- Ratelimiting configuration is defined as a YAML file.
- AI Gateway is OpenTelemetry (OTEL) compliant, making it easy to integrate with modern
  observability tools and platforms.
- 'You can find the Grafana Dashboard JSON at the following link: https://github.com/truefoundry/infra-charts/blob/main/charts/tfy-grafana/dashboards/llm-gateway-metrics.json'
- You can add multiple OpenAI, AWS, Anthropic accounts each with their own API keys
  / auth tokens as different provider accounts.
- Getting the configuration from control-plane via the REST API call is implemented
  as an additional fail-safe mechanism in case the control-plane is up partially.
- We recommend to keep multiple pods of gateway in a deployment so that the chances
  of all of them restarting when the control-plane is down are minimal.
- Data is encrypted at rest and in transit.
- Truefoundry Infrastructure is SOC2, ISO27001, GDPR, and HIPAA compliant.
- Egress access to TrueFoundry Central Auth Server required.
- Assuming the identity provider is OIDC compliant and satisfies the required conditions.
- TrueFoundry supports configuring multiple OIDC providers concurrently
- Users can continue using the JWTs issued by your IdP
- Custom metadata is logged as key value pairs in the X-TFY-METADATA header.
- All values for metadata must be strings, with a maximum length of 128 characters.
- Authorization header requires Bearer token.
- Maximum number of iterations to perform with tool calls must be a positive integer.
  Defaults to 5.
- Authorization header of the form `Bearer <token>` is required.
- Centralized MCP Gateway provides secure access to tools.
- Dynamic tool discovery for autonomous workflows.
- Oauth2 Based Auth is highly recommended for production MCP servers since it allows
  you to configure scopes to restrict access.
- Bearer authentication header of the form `Bearer <token>` is required.
- Bearer authentication header of the form `Bearer <token>`
- Authorization header required in the form 'Bearer <token>'
- Normalizes empty argument strings to valid JSON
- Authorization required in the form of a Bearer token
- Requires setup of API token and base URL
- Streaming responses are supported
- Tool calls are streamed with function names first, then arguments in chunks
- Each tool call has an index to handle multiple simultaneous tool calls
- Accumulate function arguments as they stream in
- Authorization header must be in the form Bearer <token>
- Stdio-based MCP servers communicate through standard input/output (stdin/stdout)
  rather than HTTP endpoints.
- Uses Node.js or Python for MCP server implementation
- Authorization requires Bearer authentication header of the form 'Bearer <token>'
- Set ENABLE_OTEL_TRACING to 'true' to enable OTEL tracing.
- The gateway exposes a /metrics endpoint that can be scraped by your Prometheus instance.
- If your setup uses an OpenTelemetry Collector, you can configure the gateway to
  push metrics directly.
- Dynamic load balancing can be used to route a small percentage of traffic to the
  new model and monitor the performance before routing all the traffic to the new
  model.
- Uses JWT for authentication.
- Gateway continues to work with whatever configuration it has already fetched from
  the control-plane.
- Ensure your RDS security group has inbound rules allowing traffic from EKS node
  security groups
- Requires Kubernetes cluster 1.27+ for deployment
- Egress access to TrueFoundry Central Auth Server is required
- Uses OIDC compliant Identity Provider as external identity provider.
- Openid configuration is available at <ISSUER_URL>/.well-known/openid-configuration.
- The configuration is declaratively via a YAML file.
- Rules are evaluated in the order they are defined.
- Users can continue using the JWTs issued by your IdP, removing the need to create
  and manage separate TrueFoundry tokens.
- Either set env.OIDC_CONFIG_FILE_PATH or oidc.configs (not both).
- Authorization header of the form 'Bearer <token>' is required.
- API supports multiple models and routing strategies.
- Bearer authentication header of the form `Bearer <token>`, where `<token>` is your
  auth token.
- A Guardrail Group is the minimum level of access control for guardrails.
- Testing in the Playground is an easy way to validate that your guardrails are correctly
  configured before deploying them to production.
- Configuring guardrails at the gateway layer is recommended for organization-wide
  enforcement.
- This centralizes guardrail management and auditing, eliminating the need to set
  headers on every request.
- Only the first matching guardrail rule is applied to that request
- Order your rules with the most specific at the top and the most generic at the bottom
- Guardrails are essential security and compliance measures that help ensure AI applications
  operate safely and responsibly.
- Ensure the role has the necessary permissions for Bedrock Guardrails and that trust
  relationships are configured correctly.
- 'You need `bedrock:ApplyGuardrail` permission: This permission allows your IAM entity
  to call the ApplyGuardrail API.'
- API Key is required to authenticate requests to Azure’s PII detection API
- API Key is required to authenticate requests to Azure's Content Safety Guardrail
  API.
- API Key is required to authenticate requests to Palo Alto Prisma AIRS.
- If the `data.flagged` is `true`, the request will be blocked and a 400 error is
  returned.
- If the `data.result` is 'failed', the content violates the configured guardrails
  and will be rejected.
- Authorization required in the form of Bearer <token>
- Uses OAuth2 with refresh token — requires setup of connected app in Truefoundry
- Some requests may require additional context metadata
- Uses OAuth2 with refresh token — requires setup of connected app in truefoundry
- Some requests may return nulls in deeply nested fields
- Billing must be enabled for the AWS account.
- Please make sure you have enough quotas for GPU/Inferentia instances on the account
  depending on your usecase.
- We need a domain to map to the service endpoints. A wildcard domain like *.services.example.com
  is preferred.
- Billing must be enabled for the GCP account.
- 'Following APIs must be enabled in the project: Compute Engine API, Kubernetes Engine
  API, Storage Engine API, Artifact Registry API, Secrets Manager API.'
- Egress access to container registries must be allowed.
- Egress access to container registries must be ensured.
- A wildcard domain like *.services.example.com is preferred.
- Default status codes to retry on are 429, 500, 502, 503.
- Default values of status codes to fallback on are 401, 403, 404, 429, 500, 502,
  503.
- Default value for fallback candidate is true.
- The configuration has to be set in a YAML file.
- You need 'bedrock:ApplyGuardrail' permission to access the API.
- API Key is required to authenticate requests to Azure’s PII detection API.
- API version defaults to '2024-09-01'
- Severity threshold defaults to '2'
- If the data.flagged is true, the request will be blocked and a 400 error is returned.
- If the data.result is 'failed', the content violates the configured guardrails and
  will be rejected.
- Custom Guardrails/Plugins allow validation and security enhancements.
- Please make sure you have created a certifcate for your domain in AWS Certificate
  Manager (ACM) and have the ARN of the certificate ready.
- TrueFoundry relies on ArgoCD to deploy applications to the compute-plane cluster.
- Ensure argocd has access to create argo applications in all namespaces.
- Egress access to container registries must be present.
- A wildcard domain like *.services.example.com is preferred for service endpoints.
- Service account key creation should be allowed for the service account used by the
  platform.
- Billing must be enabled for the Azure subscription.
- Ensure that Microsoft.Storage resource provider is registered.
- Egress access to container registries is required.
- Enough quotas for CPU/GPU instances must be present.
- Ensure that host encryption is enabled.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'rate_limit_error: This request would exceed the rate limit.'
- '400: Bad Request'
- '200: Successful Response'
- '404: Not Found'
- '401: Unauthorized'
- '500: Internal Server Error'
- '200: Documents reranked successfully.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404: Model response not found'
- 'Invalid request: Check function name or arguments'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Invalid or expired token'
- '404 Not Found: The requested resource does not exist'
- '500 Internal Server Error: An error occurred on the server'
- 'rate_limit_error: This request would exceed the rate limit'
- '200: Audio transcribed successfully'
- '400: Bad Request - Check request parameters'
- '200: Batch created successfully'
- '404: Batch not found'
- '200: Batch output retrieved successfully'
- '200 - application/json: All files retrieved successfully'
- '200: Files retrieved successfully'
- '404: File not found'
- '400 Bad Request: Check the request body for required fields'
- '429 Too Many Requests: Rate limits exceeded.'
- '401 Unauthorized: Authentication failed.'
- '404 Not Found: Requested resource does not exist.'
- '401 Unauthorized: Recheck JWT token validity.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle requests.'
- '429: Rate limit exceeded'
- '500: Internal server error'
- '503: Service unavailable'
- '400: Bad Request - Verify the request body structure and parameters.'
- '400'
- '400: Bad request'
- '404: Not found'
- 'Unauthorized: Recheck IAM role permissions or access key credentials'
- '401 Unauthorized: Ensure API Key is valid'
- '403 Forbidden: Ensure your API key is valid and has access to the resource.'
- '401'
- '404'
- '500'
- '400 Bad Request: Content is flagged or violates guardrails.'
- 'HTTP 400: Invalid request, check the request body'
- 'HTTP 401: Unauthorized, check your API token'
- 'HTTP 500: Internal server error, try again later'
- '429 Too Many Requests: Rate limit exceeded. Reduce request frequency.'
- '500 Internal Server Error: Retry after a while.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Secret
  - Truefoundry Token
  - IdP token
  - JWT
  - control-plane
  - NATS
  - ControlPlane
  - IAM Role
  - Kubernetes Secret
  - API Key
  - Bearer
client:
  base_url: https://{controlPlaneUrl}/api/llm
  headers:
    X-TFY-LOGGING-CONFIG: '{"enabled": true}'
source_metadata: null
