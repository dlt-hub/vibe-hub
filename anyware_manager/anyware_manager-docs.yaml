resources:
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: data
    params: {}
- name: connector_token
  endpoint:
    path: /auth/tokens/connector
    method: POST
    data_selector: data
    params: {}
- name: ad_computers
  endpoint:
    path: /adcomputers
    method: GET
    data_selector: data
    params: {}
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: data
    params: {}
- name: adcomputers
  endpoint:
    path: /machines/entitlements/adcomputers
    method: GET
    data_selector: data
    params:
      limit: '1'
      offset: '0'
      deploymentId: '{{ deployment_id }}'
- name: adusers
  endpoint:
    path: /adusers
    method: GET
    data_selector: data
    params: {}
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: data
    params: {}
- name: machines
  endpoint:
    path: /machines
    method: POST
    data_selector: data
    params: {}
- name: adusers
  endpoint:
    path: /machines/entitlements/adusers
    method: GET
    data_selector: data
    params:
      enabled: 'true'
- name: entitlement
  endpoint:
    path: /entitlements
    method: POST
    data_selector: data
    params: {}
- name: remote_workstation
  endpoint:
    path: /machines/entitlements
    method: POST
    data_selector: data
    params: {}
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: data
- name: machines
  endpoint:
    path: /machines
    method: POST
    data_selector: data
- name: adcomputers
  endpoint:
    path: /machines/entitlements/adcomputers
    method: GET
    data_selector: data
- name: adusers
  endpoint:
    path: /machines/entitlements/adusers
    method: GET
    data_selector: data
- name: entitlements
  endpoint:
    path: /machines/entitlements
    method: POST
    data_selector: data
    params: {}
- name: ad_users
  endpoint:
    path: /adusers
    method: GET
    data_selector: data
    params: {}
- name: auth_signin
  endpoint:
    path: /auth/signin
    method: POST
    data_selector: data
    params: {}
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: data
- name: machines
  endpoint:
    path: /machines
    method: POST
    data_selector: data
- name: adusers
  endpoint:
    path: /machines/entitlements/adusers
    method: GET
    data_selector: data
- name: entitlements
  endpoint:
    path: /entitlements
    method: POST
- name: adusers
  endpoint:
    path: /adusers
    method: GET
    data_selector: data
- name: deployments
  endpoint:
    path: /deployments
    method: POST
- name: auth_keys
  endpoint:
    path: /auth/keys
    method: POST
- name: service_account_keys
  endpoint:
    path: /keys
    method: GET
    data_selector: data
    params:
      limit: 25
      offset: 0
- name: create_service_account_key
  endpoint:
    path: /keys
    method: POST
    data_selector: data
- name: deployment_keys
  endpoint:
    path: /auth/keys
    method: POST
    data_selector: data
- name: validate_provider_service_account
  endpoint:
    path: /auth/verify
    method: POST
- name: entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    params:
      id: required
- name: user
  endpoint:
    path: /auth/users/{id}
    method: GET
    params:
      id: required
- name: saml_configuration
  endpoint:
    path: /auth/saml
    method: POST
    params:
      domain: required
      idpCertificate: optional
      name: optional
      signInUrl: required
- name: entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    data_selector: data
    params:
      id: string
- name: saml_configuration
  endpoint:
    path: /auth/saml/{configurationId}
    method: DELETE
    data_selector: status
    params:
      configurationId: string
- name: deployments
  endpoint:
    path: /deployments
    method: GET
    data_selector: data
    params:
      deploymentName: string
      limit: number
      offset: number
      showactive: boolean
      showdeleted: boolean
      showdeleting: boolean
- name: entitlement
  endpoint:
    path: /api/v1/machines/entitlements/{id}
    method: GET
    data_selector: data
    params:
      id: required
- name: deployment
  endpoint:
    path: /api/v1/deployments/{id}
    method: GET
    data_selector: data
    params:
      id: required
- name: deployment_setting
  endpoint:
    path: /api/v1/deployments/{id}/settings/{name}
    method: GET
    data_selector: data
    params:
      id: required
      name: required
- name: create_entitlement
  endpoint:
    path: /api/v1/deployments/{deploymentId}/entitlements
    method: POST
    data_selector: data
    params:
      deploymentId: required
      poolId: required
      userGuid: required
- name: delete_entitlement
  endpoint:
    path: /api/v1/deployments/{deploymentId}/entitlements/{entitlementId}
    method: DELETE
    data_selector: data
    params:
      deploymentId: required
      entitlementId: required
- name: entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    data_selector: data
    params: {}
- name: connector
  endpoint:
    path: /deployments/connectors/{id}
    method: GET
    data_selector: data
    params: {}
- name: connector_event
  endpoint:
    path: /deployments/connectors/{connectorId}/events/{eventId}
    method: GET
    data_selector: data
    params: {}
- name: pools
  endpoint:
    path: /deployments/{deploymentId}/pools
    method: GET
    data_selector: data
    params: {}
- name: create_pool
  endpoint:
    path: /deployments/{deploymentId}/pools
    method: POST
    data_selector: data
    params: {}
- name: get_entitlement
  endpoint:
    path: /api/v1/machines/entitlements/{id}
    method: GET
    data_selector: data
    params:
      id: required
- name: delete_pool
  endpoint:
    path: /api/v1/pools/{poolId}
    method: DELETE
    data_selector: data
    params:
      deploymentId: required
      poolId: required
- name: get_pool
  endpoint:
    path: /api/v1/pools/{poolId}
    method: GET
    data_selector: data
    params:
      deploymentId: required
      poolId: required
- name: get_machines_assigned_to_pool
  endpoint:
    path: /api/v1/deployments/{deploymentId}/pools/{poolId}/machines
    method: GET
    data_selector: data
    params:
      deploymentId: required
      poolId: required
- name: update_machine_assignment
  endpoint:
    path: /api/v1/deployments/{deploymentId}/pools/{poolId}/machines
    method: PUT
    data_selector: data
    params:
      deploymentId: required
      poolId: required
- name: get_configuration_of_pool_machines
  endpoint:
    path: /api/v1/deployments/{deploymentId}/pools/{poolId}/machines/configuration
    method: GET
    data_selector: data
    params:
      deploymentId: required
- name: get_machines
  endpoint:
    path: /machines
    method: GET
    data_selector: data
    params:
      machineId: string
- name: get_entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    data_selector: data
    params: {}
- name: add_machine
  endpoint:
    path: /machines
    method: POST
    data_selector: data
    params: {}
- name: delete_machine
  endpoint:
    path: /machines/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: start_machine
  endpoint:
    path: /machines/{id}/start
    method: POST
    data_selector: data
    params: {}
- name: stop_machine
  endpoint:
    path: /machines/{id}/stop
    method: POST
    data_selector: data
    params: {}
- name: entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    data_selector: data
    params: {}
- name: network
  endpoint:
    path: /machines/cloudproviders/gcp/networks
    method: GET
    data_selector: data
    params: {}
- name: vm_instances
  endpoint:
    path: /machines/cloudproviders/gcp/instances
    method: GET
    data_selector: data
    params:
      deploymentId: required
      filterAdded: optional
      zone: optional
- name: regions
  endpoint:
    path: /machines/cloudproviders/gcp/regions
    method: GET
    data_selector: data
    params: {}
- name: subnetwork
  endpoint:
    path: /machines/cloudproviders/gcp/regions/{region}/subnetworks
    method: GET
    data_selector: data
    params: {}
- name: zones
  endpoint:
    path: /machines/cloudproviders/gcp/regions/{region}/zones
    method: GET
    data_selector: data
    params: {}
- name: activity_logs
  endpoint:
    path: /machines/logs
    method: GET
    data_selector: data
    params:
      limit: 15
      offset: 0
- name: download_activity_logs
  endpoint:
    path: /logs/download
    method: GET
    data_selector: data
- name: system_health
  endpoint:
    path: /machines/system_health
    method: GET
    data_selector: data
- name: logout_user
  endpoint:
    path: /machines/{id}/logout
    method: POST
    data_selector: data
- name: send_notification
  endpoint:
    path: /machines/{id}/notify
    method: POST
    data_selector: data
- name: request_update
  endpoint:
    path: /machines/{id}/request_update
    method: POST
    data_selector: data
- name: entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    data_selector: data
    params: {}
- name: enrollment_key
  endpoint:
    path: /auth/keys/messaging/enrollment
    method: POST
    data_selector: data
    params: {}
- name: delete_enrollment_key
  endpoint:
    path: /auth/keys/messaging/enrollment/{enrollmentKeyId}
    method: DELETE
    data_selector: data
    params: {}
- name: create_registration_token
  endpoint:
    path: /auth/keys/messaging/enrollment
    method: POST
    data_selector: data
    params: {}
- name: get_entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    data_selector: data
    params:
      id: Entitlement ID
- name: get_certificates
  endpoint:
    path: /deployments/{deploymentId}/secrets/certificates
    method: GET
    data_selector: data
    params:
      deploymentId: Deployment ID
- name: create_service_account_key
  endpoint:
    path: /keys/
    method: POST
    data_selector: data
- name: delete_service_account_key
  endpoint:
    path: /keys/{id}
    method: DELETE
    data_selector: data
    params:
      id: Key ID
- name: stats
  endpoint:
    path: /deployments/{deploymentId}/stats
    method: POST
    data_selector: data
    params:
      deploymentId: required
- name: active_sessions
  endpoint:
    path: /deployments/{deploymentId}/stats/pcoip/sessions
    method: GET
    data_selector: data
    params:
      deploymentId: required
      limit: '25'
      offset: '0'
- name: licenses
  endpoint:
    path: /licenses
    method: GET
    data_selector: data
    params:
      ownerOid: string
- name: create_license
  endpoint:
    path: /licenses
    method: POST
    data_selector: data
    params:
      registrationCode: required
- name: delete_license
  endpoint:
    path: /licenses/{id}
    method: DELETE
    data_selector: data
    params:
      id: required
- name: webhook_configuration
  endpoint:
    path: /deployments/{deploymentId}/settings/webhooks
    method: GET
    data_selector: data
    params:
      eventType: string
      limit: number
      name: string
      offset: number
      resourceId: string
- name: entitlement
  endpoint:
    path: /machines/entitlements/{id}
    method: GET
    data_selector: data
    params: {}
notes:
- Anyware Manager API usage is limited on a per-IP basis, with a current rate limit
  of 50 requests per second per IP address.
- The authorization token is valid for one hour and must be refreshed after expiration.
- JWT tokens are valid for one hour and must be generated for each session.
- Requests exceeding the rate limit will return HTTP 429 errors.
- JWTs are used for authorization after initial authentication.
- Requires authorization token for all requests.
- All routes listed here are beta features only. They may be new, experimental or
  partially completed. These features are subject to change.
errors:
- '400: Invalid request. API requests lacking of appropriate parameters will return
  HTTP 400.'
- '401: Unauthorized request. Anyware Manager APIs generally require a valid JWT to
  be provided in the authorization header.'
- '403: You do not have the required permissions. API requests without required permission
  will return HTTP 403.'
- '404: Resource does not exist. If the resources you want to update/delete do not
  exist, Anyware Manager will return HTTP 404.'
- '429: Too Many Requests. If API requests exceed the defined rate limit, Anyware
  Manager will return HTTP 429.'
- '429: Too Many Requests - API requests exceed the defined rate limit.'
- '401: Unauthorized - Token is missing or expired.'
- '429: Too Many Requests - Exceeded rate limit.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Invalid request'
- '401: Unauthorized request'
- '403: You do not have the required permissions'
- '404: Resource does not exist'
- '429: Too Many Requests'
- '429: Too Many Requests - Rate limit exceeded.'
- '400: Invalid parameters'
- '401: Not authorized'
- '403: Insufficient privileges'
- '404: Not found'
- '500: Internal server error'
- 401 Not authorized
- 403 Insufficient privileges
- 404 Not found
- 500 Internal server error
- '413: Payload Too Large'
- '200: Success'
auth_info:
  mentioned_objects:
  - authorizationToken
client:
  base_url: https://cas.teradici.com/api/v1/
  auth:
    type: oauth2
source_metadata: null
