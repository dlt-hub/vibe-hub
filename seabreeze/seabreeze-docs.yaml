resources:
- name: list_devices
  endpoint:
    path: /list_devices
    method: GET
    data_selector: devices
- name: Spectrometer
  endpoint:
    path: /Spectrometer
    method: GET
    data_selector: spectrometer
- name: SeaBreezeDevice
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
- name: SeaBreezeAPI
  endpoint:
    path: /list_devices
    method: GET
    data_selector: devices
- name: SeaBreezeDevice
  endpoint:
    path: /device
    method: GET
    data_selector: features
- name: ipv4_feature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeIPv4Feature
    method: GET
- name: dhcp_server_feature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeDHCPServerFeature
    method: GET
- name: network_configuration_feature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeNetworkConfigurationFeature
    method: GET
- name: wifi_configuration_feature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeWifiConfigurationFeature
    method: GET
- name: gpio_feature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeGPIOFeature
    method: GET
- name: devices
  endpoint:
    path: /list_devices
    method: GET
    data_selector: devices
- name: SeaBreezeAPI
  endpoint:
    path: /cseabreeze
    method: GET
    data_selector: devices
    params: {}
- name: SeaBreezeDevice
  endpoint:
    path: /cseabreeze/device
    method: GET
    data_selector: features
    params: {}
- name: SeaBreezeFeature
  endpoint:
    path: /seabreeze/feature
    method: GET
    data_selector: features
    params: {}
- name: SeaBreezeDevice
  endpoint:
    path: /seabreeze/device
    method: GET
    data_selector: devices
    params: {}
- name: SeaBreezeAPI
  endpoint:
    path: /list_devices
    method: GET
    data_selector: devices
- name: SeaBreezeRawUSBBusAccessFeature
  endpoint:
    path: /seabreeze/raw_usb_bus_access
    method: GET
    data_selector: raw_data
- name: SeaBreezeSpectrometerFeature
  endpoint:
    path: /seabreeze/spectrometer
    method: GET
    data_selector: spectrometer_data
- name: SeaBreezePixelBinningFeature
  endpoint:
    path: /seabreeze/pixel_binning
    method: GET
    data_selector: binning_data
- name: SeaBreezeThermoElectricFeature
  endpoint:
    path: /seabreeze/thermo_electric
    method: GET
    data_selector: thermo_electric_data
- name: SeaBreezeIrradCalFeature
  endpoint:
    path: /seabreeze/irradiance_calibration
    method: GET
    data_selector: irradiance_calibration_data
- name: SeaBreezeEthernetConfigurationFeature
  endpoint:
    path: /seabreeze/ethernet_configuration
    method: GET
    data_selector: ethernet_configuration_data
- name: SeaBreezeMulticastFeature
  endpoint:
    path: /seabreeze/multicast
    method: GET
    data_selector: multicast_data
- name: SeaBreezeIPv4Feature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeIPv4Feature
    method: GET
    data_selector: None
- name: SeaBreezeDHCPServerFeature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeDHCPServerFeature
    method: GET
    data_selector: None
- name: SeaBreezeNetworkConfigurationFeature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeNetworkConfigurationFeature
    method: GET
    data_selector: None
- name: SeaBreezeWifiConfigurationFeature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeWifiConfigurationFeature
    method: GET
    data_selector: None
- name: SeaBreezeGPIOFeature
  endpoint:
    path: /seabreeze/cseabreeze/SeaBreezeGPIOFeature
    method: GET
    data_selector: None
- name: ipv4_address
  endpoint:
    path: /seabreeze/cseabreeze/ipv4_address
    method: GET
    data_selector: None
    params: {}
- name: dhcp_server
  endpoint:
    path: /seabreeze/cseabreeze/dhcp_server
    method: GET
    data_selector: None
    params: {}
- name: network_configuration
  endpoint:
    path: /seabreeze/cseabreeze/network_configuration
    method: GET
    data_selector: None
    params: {}
- name: wifi_configuration
  endpoint:
    path: /seabreeze/cseabreeze/wifi_configuration
    method: GET
    data_selector: None
    params: {}
- name: gpio
  endpoint:
    path: /seabreeze/cseabreeze/gpio
    method: GET
    data_selector: None
    params: {}
- name: eeprom_read_slot
  endpoint:
    path: /eeprom/read/slot
    method: GET
    data_selector: result
    params:
      slot_number: int
      strip_zero_bytes: bool
- name: get_count
  endpoint:
    path: /light_source/count
    method: GET
    data_selector: number_of_light_sources
- name: get_intensity
  endpoint:
    path: /light_source/intensity
    method: GET
    data_selector: intensity
    params:
      light_source_index: int
- name: has_enable
  endpoint:
    path: /light_source/enable
    method: GET
    data_selector: has_enable
    params:
      light_source_index: int
- name: has_variable_intensity
  endpoint:
    path: /light_source/variable_intensity
    method: GET
    data_selector: is_enabled
    params:
      light_source_index: int
- name: is_enabled
  endpoint:
    path: /light_source/enabled
    method: GET
    data_selector: is_enabled
    params:
      light_source_index: int
- name: set_enable
  endpoint:
    path: /light_source/set_enable
    method: POST
    data_selector: null
    params:
      light_source_index: int
      enable: bool
- name: set_intensity
  endpoint:
    path: /light_source/set_intensity
    method: POST
    data_selector: null
    params:
      light_source_index: int
      intensity: float
- name: enable_lamp
  endpoint:
    path: /lamp/enable
    method: POST
    data_selector: null
    params:
      state: bool
- name: set_enable_continuous_strobe
  endpoint:
    path: /continuous_strobe/set_enable
    method: POST
    data_selector: null
    params:
      strobe_enable: bool
- name: set_period_micros
  endpoint:
    path: /continuous_strobe/set_period
    method: POST
    data_selector: null
    params:
      period_micros: int
- name: set_shutter_open
  endpoint:
    path: /shutter/open
    method: POST
    data_selector: null
    params:
      state: bool
- name: get_nonlinearity_coefficients
  endpoint:
    path: /nonlinearity/coefficients
    method: GET
    data_selector: nonlinearity_coefficients
- name: count_temperatures
  endpoint:
    path: /temperatures/count
    method: GET
    data_selector: num_temperatures
- name: read_temperature
  endpoint:
    path: /temperatures/read
    method: GET
    data_selector: temperature
    params:
      index: int
- name: get_active_pixel_ranges
  endpoint:
    path: /introspection/active_pixel_ranges
    method: GET
    data_selector: output
- name: get_number_of_pixels
  endpoint:
    path: /introspection/number_of_pixels
    method: GET
    data_selector: num_pixels
- name: set_boxcar_width
  endpoint:
    path: /spectrum_processing/set_boxcar_width
    method: POST
    data_selector: null
    params:
      boxcar_width: int
- name: get_buffer_capacity
  endpoint:
    path: /data_buffer/capacity
    method: GET
    data_selector: buffer_capacity
- name: SeaBreezeAPI
  endpoint:
    path: /api/v1/SeaBreezeAPI
    method: GET
    data_selector: devices
- name: SeaBreezeDevice
  endpoint:
    path: /api/v1/SeaBreezeDevice
    method: GET
    data_selector: features
- name: SeaBreezeFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeFeature
    method: GET
- name: SeaBreezeRawUSBBusAccessFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeRawUSBBusAccessFeature
    method: GET
- name: SeaBreezeSpectrometerFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeSpectrometerFeature
    method: GET
- name: SeaBreezePixelBinningFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezePixelBinningFeature
    method: GET
- name: SeaBreezeThermoElectricFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeThermoElectricFeature
    method: GET
- name: SeaBreezeIrradCalFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeIrradCalFeature
    method: GET
- name: SeaBreezeEthernetConfigurationFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeEthernetConfigurationFeature
    method: GET
- name: SeaBreezeMulticastFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeMulticastFeature
    method: GET
- name: SeaBreezeIPv4Feature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeIPv4Feature
    method: GET
- name: SeaBreezeDHCPServerFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeDHCPServerFeature
    method: GET
- name: SeaBreezeNetworkConfigurationFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeNetworkConfigurationFeature
    method: GET
- name: SeaBreezeWifiConfigurationFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeWifiConfigurationFeature
    method: GET
- name: SeaBreezeGPIOFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeGPIOFeature
    method: GET
- name: SeaBreezeEEPROMFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeEEPROMFeature
    method: GET
- name: SeaBreezeLightSourceFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeLightSourceFeature
    method: GET
- name: SeaBreezeStrobeLampFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeStrobeLampFeature
    method: GET
- name: SeaBreezeContinuousStrobeFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeContinuousStrobeFeature
    method: GET
- name: SeaBreezeShutterFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeShutterFeature
    method: GET
- name: SeaBreezeNonlinearityCoefficientsFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeNonlinearityCoefficientsFeature
    method: GET
- name: SeaBreezeTemperatureFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeTemperatureFeature
    method: GET
- name: SeaBreezeIntrospectionFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeIntrospectionFeature
    method: GET
- name: SeaBreezeSpectrumProcessingFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeSpectrumProcessingFeature
    method: GET
- name: SeaBreezeRevisionFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeRevisionFeature
    method: GET
- name: SeaBreezeOpticalBenchFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeOpticalBenchFeature
    method: GET
- name: SeaBreezeStrayLightCoefficientsFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeStrayLightCoefficientsFeature
    method: GET
- name: SeaBreezeDataBufferFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeDataBufferFeature
    method: GET
- name: SeaBreezeFastBufferFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeFastBufferFeature
    method: GET
- name: SeaBreezeAcquisitionDelayFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeAcquisitionDelayFeature
    method: GET
- name: SeaBreezeI2CMasterFeature
  endpoint:
    path: /seabreeze.pyseabreeze/SeaBreezeI2CMasterFeature
    method: GET
- name: SPARK
  endpoint:
    path: /seabreeze/pyseabreeze/devices.py
    method: POST
    data_selector: device
    params: {}
- name: eeprom_read_slot
  endpoint:
    path: /eeprom/read/slot
    method: GET
    data_selector: result
    params: {}
- name: get_count
  endpoint:
    path: /light_source/count
    method: GET
    data_selector: number_of_light_sources
    params: {}
- name: get_intensity
  endpoint:
    path: /light_source/intensity
    method: GET
    data_selector: intensity
    params: {}
- name: has_enable
  endpoint:
    path: /light_source/enable
    method: GET
    data_selector: has_enable
    params: {}
- name: has_variable_intensity
  endpoint:
    path: /light_source/variable_intensity
    method: GET
    data_selector: is_enabled
    params: {}
- name: is_enabled
  endpoint:
    path: /light_source/enabled
    method: GET
    data_selector: is_enabled
    params: {}
- name: set_enable
  endpoint:
    path: /light_source/set/enable
    method: POST
    data_selector: null
    params: {}
- name: set_intensity
  endpoint:
    path: /light_source/set/intensity
    method: POST
    data_selector: null
    params: {}
- name: enable_lamp
  endpoint:
    path: /strobe/lamp/enable
    method: POST
    data_selector: null
    params: {}
- name: set_enable_continuous_strobe
  endpoint:
    path: /continuous_strobe/set/enable
    method: POST
    data_selector: null
    params: {}
- name: set_period_micros
  endpoint:
    path: /continuous_strobe/set/period
    method: POST
    data_selector: null
    params: {}
- name: set_shutter_open
  endpoint:
    path: /shutter/open
    method: POST
    data_selector: null
    params: {}
- name: get_nonlinearity_coefficients
  endpoint:
    path: /nonlinearity/coefficients
    method: GET
    data_selector: nonlinearity_coefficients
    params: {}
- name: count_temperatures
  endpoint:
    path: /temperature/count
    method: GET
    data_selector: num_temperatures
    params: {}
- name: read_temperature
  endpoint:
    path: /temperature/read
    method: GET
    data_selector: temperature
    params: {}
- name: temperature_get_all
  endpoint:
    path: /temperature/all
    method: GET
    data_selector: temperatures
    params: {}
- name: get_active_pixel_ranges
  endpoint:
    path: /introspection/active_pixel_ranges
    method: GET
    data_selector: output
    params: {}
- name: number_of_pixels
  endpoint:
    path: /introspection/pixels
    method: GET
    data_selector: num_pixels
    params: {}
- name: set_boxcar_width
  endpoint:
    path: /spectrum_processing/set/boxcar_width
    method: POST
    data_selector: null
    params: {}
- name: set_scans_to_average
  endpoint:
    path: /spectrum_processing/set/scans_to_average
    method: POST
    data_selector: null
    params: {}
- name: hardware_revision
  endpoint:
    path: /revision/hardware
    method: GET
    data_selector: revision
    params: {}
- name: get_coating
  endpoint:
    path: /optical_bench/coating
    method: GET
    data_selector: coating
    params: {}
- name: get_fiber_diameter_microns
  endpoint:
    path: /optical_bench/fiber_diameter
    method: GET
    data_selector: fiber_diameter
    params: {}
- name: get_filter
  endpoint:
    path: /optical_bench/filter
    method: GET
    data_selector: filter
    params: {}
- name: get_grating
  endpoint:
    path: /optical_bench/grating
    method: GET
    data_selector: output
    params: {}
- name: devices
  endpoint:
    path: /list_devices
    method: GET
    data_selector: devices
- name: SeaBreezeDevice
  endpoint:
    path: /SeaBreezeDevice
    method: GET
    data_selector: devices
    params: {}
- name: SeaBreezeAPI
  endpoint:
    path: /cseabreeze
    method: GET
    data_selector: devices
- name: SeaBreezeDevice
  endpoint:
    path: /seabreeze/device
    method: GET
    data_selector: features
- name: SeaBreezeRawUSBBusAccessFeature
  endpoint:
    path: /raw_usb_access
    method: GET
    data_selector: data
    params: {}
- name: SeaBreezeSpectrometerFeature
  endpoint:
    path: /spectrometer
    method: GET
    data_selector: data
    params: {}
- name: SeaBreezePixelBinningFeature
  endpoint:
    path: /pixel_binning
    method: GET
    data_selector: data
    params: {}
- name: SeaBreezeThermoElectricFeature
  endpoint:
    path: /thermo_electric
    method: GET
    data_selector: data
    params: {}
- name: SeaBreezeIrradCalFeature
  endpoint:
    path: /irradiance_calibration
    method: GET
    data_selector: data
    params: {}
- name: SeaBreezeEthernetConfigurationFeature
  endpoint:
    path: /ethernet_configuration
    method: GET
    data_selector: data
    params: {}
- name: SeaBreezeMulticastFeature
  endpoint:
    path: /multicast
    method: GET
    data_selector: data
    params: {}
- name: add_ipv4_address
  endpoint:
    path: /add_ipv4_address
    method: POST
    data_selector: None
    params: {}
- name: delete_ipv4_address
  endpoint:
    path: /delete_ipv4_address
    method: DELETE
    data_selector: None
    params: {}
- name: get_default_gateway
  endpoint:
    path: /get_default_gateway
    method: GET
    data_selector: gateway_address
    params: {}
- name: get_dhcp_enable_state
  endpoint:
    path: /get_dhcp_enable_state
    method: GET
    data_selector: enabled
    params: {}
- name: get_ipv4_address
  endpoint:
    path: /get_ipv4_address
    method: GET
    data_selector: ipv4_address
    params: {}
- name: get_number_of_ipv4_addresses
  endpoint:
    path: /get_number_of_ipv4_addresses
    method: GET
    data_selector: num_addresses
    params: {}
- name: set_default_gateway
  endpoint:
    path: /set_default_gateway
    method: POST
    data_selector: None
    params: {}
- name: set_dhcp_enable_state
  endpoint:
    path: /set_dhcp_enable_state
    method: POST
    data_selector: None
    params: {}
- name: get_address
  endpoint:
    path: /get_address
    method: GET
    data_selector: server_address
    params: {}
- name: get_enable_state
  endpoint:
    path: /get_enable_state
    method: GET
    data_selector: enabled
    params: {}
- name: set_address
  endpoint:
    path: /set_address
    method: POST
    data_selector: None
    params: {}
- name: set_enable_state
  endpoint:
    path: /set_enable_state
    method: POST
    data_selector: None
    params: {}
- name: get_network_interface_connection_type
  endpoint:
    path: /get_network_interface_connection_type
    method: GET
    data_selector: network_type
    params: {}
- name: get_network_interface_enable_state
  endpoint:
    path: /get_network_interface_enable_state
    method: GET
    data_selector: enabled
    params: {}
- name: get_number_of_network_interfaces
  endpoint:
    path: /get_number_of_network_interfaces
    method: GET
    data_selector: num_interfaces
    params: {}
- name: run_network_interface_self_test
  endpoint:
    path: /run_network_interface_self_test
    method: POST
    data_selector: passed_test
    params: {}
- name: save_network_interface_connection_settings
  endpoint:
    path: /save_network_interface_connection_settings
    method: POST
    data_selector: None
    params: {}
- name: set_network_interface_enable_state
  endpoint:
    path: /set_network_interface_enable_state
    method: POST
    data_selector: None
    params: {}
- name: get_wifi_mode
  endpoint:
    path: /get_wifi_mode
    method: GET
    data_selector: wifi_mode
    params: {}
- name: get_wifi_security_type
  endpoint:
    path: /get_wifi_security_type
    method: GET
    data_selector: security_type
    params: {}
- name: get_wifi_ssid
  endpoint:
    path: /get_wifi_ssid
    method: GET
    data_selector: ssid
    params: {}
- name: set_wifi_mode
  endpoint:
    path: /set_wifi_mode
    method: POST
    data_selector: None
    params: {}
- name: set_wifi_pass_phrase
  endpoint:
    path: /set_wifi_pass_phrase
    method: POST
    data_selector: None
    params: {}
- name: set_wifi_security_type
  endpoint:
    path: /set_wifi_security_type
    method: POST
    data_selector: None
    params: {}
- name: set_wifi_ssid
  endpoint:
    path: /set_wifi_ssid
    method: POST
    data_selector: None
    params: {}
- name: get_egpio_available_modes
  endpoint:
    path: /get_egpio_available_modes
    method: GET
    data_selector: available_modes
    params: {}
- name: get_egpio_current_mode
  endpoint:
    path: /get_egpio_current_mode
    method: GET
    data_selector: mode
    params: {}
- name: get_egpio_output_vector_vector
  endpoint:
    path: /get_egpio_output_vector_vector
    method: GET
    data_selector: output_vector
    params: {}
- name: get_egpio_value
  endpoint:
    path: /get_egpio_value
    method: GET
    data_selector: value
    params: {}
- name: get_gpio_output_enable_vector
  endpoint:
    path: /get_gpio_output_enable_vector
    method: GET
    data_selector: output
    params: {}
- name: get_gpio_value_vector
  endpoint:
    path: /get_gpio_value_vector
    method: GET
    data_selector: output
    params: {}
- name: get_number_of_egpio_pins
  endpoint:
    path: /get_number_of_egpio_pins
    method: GET
    data_selector: num_egpio_pins
    params: {}
- name: get_number_of_gpio_pins
  endpoint:
    path: /get_number_of_gpio_pins
    method: GET
    data_selector: num_gpio_pins
    params: {}
- name: set_egpio_mode
  endpoint:
    path: /set_egpio_mode
    method: POST
    data_selector: None
    params: {}
- name: set_egpio_output_vector
  endpoint:
    path: /set_egpio_output_vector
    method: POST
    data_selector: None
    params: {}
- name: set_egpio_value
  endpoint:
    path: /set_egpio_value
    method: POST
    data_selector: None
    params: {}
- name: set_gpio_output_enable_vector
  endpoint:
    path: /set_gpio_output_enable_vector
    method: POST
    data_selector: None
    params: {}
- name: set_gpio_value_vector
  endpoint:
    path: /set_gpio_value_vector
    method: POST
    data_selector: None
    params: {}
- name: eeprom_read_slot
  endpoint:
    path: /eeprom/read/slot
    method: GET
    data_selector: result
    params:
      slot_number: 0-17
      strip_zero_bytes: 'false'
- name: get_count
  endpoint:
    path: /light-source/count
    method: GET
    data_selector: number_of_light_sources
    params: {}
- name: get_intensity
  endpoint:
    path: /light-source/intensity
    method: GET
    data_selector: intensity
    params:
      light_source_index: int
- name: has_enable
  endpoint:
    path: /light-source/enable
    method: GET
    data_selector: has_enable
    params:
      light_source_index: int
- name: has_variable_intensity
  endpoint:
    path: /light-source/variable-intensity
    method: GET
    data_selector: is_enabled
    params:
      light_source_index: int
- name: is_enabled
  endpoint:
    path: /light-source/enabled
    method: GET
    data_selector: is_enabled
    params:
      light_source_index: int
- name: set_enable
  endpoint:
    path: /light-source/enable
    method: POST
    data_selector: null
    params:
      light_source_index: int
      enable: bool
- name: set_intensity
  endpoint:
    path: /light-source/intensity
    method: POST
    data_selector: null
    params:
      light_source_index: int
      intensity: float
- name: enable_lamp
  endpoint:
    path: /strobe/lamp
    method: POST
    data_selector: null
    params:
      state: bool
- name: set_enable_continuous_strobe
  endpoint:
    path: /continuous-strobe/enable
    method: POST
    data_selector: null
    params:
      strobe_enable: bool
- name: set_period_micros
  endpoint:
    path: /continuous-strobe/period
    method: POST
    data_selector: null
    params:
      period_micros: int
- name: set_shutter_open
  endpoint:
    path: /shutter/open
    method: POST
    data_selector: null
    params:
      state: bool
- name: get_nonlinearity_coefficients
  endpoint:
    path: /nonlinearity-coefficients
    method: GET
    data_selector: nonlinearity_coefficients
    params: {}
- name: count_temperatures
  endpoint:
    path: /temperatures/count
    method: GET
    data_selector: num_temperatures
    params: {}
- name: read_temperature
  endpoint:
    path: /temperature/read
    method: GET
    data_selector: temperature
    params:
      index: int
- name: get_active_pixel_ranges
  endpoint:
    path: /introspection/active-pixel-ranges
    method: GET
    data_selector: output
    params: {}
- name: get_electric_dark_pixel_ranges
  endpoint:
    path: /introspection/electric-dark-pixel-ranges
    method: GET
    data_selector: output
    params: {}
- name: get_optical_dark_pixel_ranges
  endpoint:
    path: /introspection/optical-dark-pixel-ranges
    method: GET
    data_selector: output
    params: {}
- name: number_of_pixels
  endpoint:
    path: /introspection/number-of-pixels
    method: GET
    data_selector: num_pixels
    params: {}
- name: set_boxcar_width
  endpoint:
    path: /spectrum-processing/boxcar-width
    method: POST
    data_selector: null
    params:
      boxcar_width: int
- name: set_scans_to_average
  endpoint:
    path: /spectrum-processing/scans-to-average
    method: POST
    data_selector: null
    params:
      scans_to_average: int
- name: hardware_revision
  endpoint:
    path: /revision/hardware
    method: GET
    data_selector: revision
    params: {}
- name: revision_firmware_get
  endpoint:
    path: /revision/firmware
    method: GET
    data_selector: output
    params: {}
- name: get_coating
  endpoint:
    path: /optical-bench/coating
    method: GET
    data_selector: coating
    params: {}
- name: get_fiber_diameter_microns
  endpoint:
    path: /optical-bench/fiber-diameter
    method: GET
    data_selector: fiber_diameter
    params: {}
- name: get_filter
  endpoint:
    path: /optical-bench/filter
    method: GET
    data_selector: filter
    params: {}
- name: get_grating
  endpoint:
    path: /optical-bench/grating
    method: GET
    data_selector: output
    params: {}
- name: get_id
  endpoint:
    path: /optical-bench/id
    method: GET
    data_selector: bench_id
    params: {}
- name: get_serial_number
  endpoint:
    path: /optical-bench/serial-number
    method: GET
    data_selector: serial_number
    params: {}
- name: get_slit_width_microns
  endpoint:
    path: /optical-bench/slit-width
    method: GET
    data_selector: slit_width
    params: {}
- name: get_stray_light_coefficients
  endpoint:
    path: /stray-light-coefficients
    method: GET
    data_selector: stray_light_coefficients
    params: {}
- name: clear
  endpoint:
    path: /data-buffer/clear
    method: POST
    data_selector: null
    params: {}
- name: get_buffer_capacity
  endpoint:
    path: /data-buffer/capacity
    method: GET
    data_selector: buffer_capacity
    params: {}
- name: get_buffer_capacity_maximum
  endpoint:
    path: /data-buffer/capacity/maximum
    method: GET
    data_selector: max_capacity
    params: {}
- name: get_buffer_capacity_minimum
  endpoint:
    path: /data-buffer/capacity/minimum
    method: GET
    data_selector: min_capacity
    params: {}
- name: get_number_of_elements
  endpoint:
    path: /data-buffer/elements/count
    method: GET
    data_selector: num_elements
    params: {}
- name: remove_oldest_spectra
  endpoint:
    path: /data-buffer/spectra/remove-oldest
    method: POST
    data_selector: null
    params:
      number_of_spectra: int
- name: set_buffer_capacity
  endpoint:
    path: /data-buffer/capacity
    method: POST
    data_selector: null
    params:
      capacity: int
- name: get_buffering_enable
  endpoint:
    path: /fast-buffer/enabled
    method: GET
    data_selector: state
    params: {}
- name: get_consecutive_sample_count
  endpoint:
    path: /fast-buffer/consecutive-sample-count
    method: GET
    data_selector: num_samples
    params: {}
- name: set_buffering_enable
  endpoint:
    path: /fast-buffer/enabled
    method: POST
    data_selector: null
    params:
      is_enabled: bool
- name: set_consecutive_sample_count
  endpoint:
    path: /fast-buffer/consecutive-sample-count
    method: POST
    data_selector: null
    params:
      consecutive_sample_count: int
- name: get_delay_microseconds
  endpoint:
    path: /acquisition-delay/microseconds
    method: GET
    data_selector: delay
    params: {}
- name: get_delay_increment_microseconds
  endpoint:
    path: /acquisition-delay/increment/microseconds
    method: GET
    data_selector: delay increment
    params: {}
- name: get_maximum_delay_microseconds
  endpoint:
    path: /acquisition-delay/maximum/microseconds
    method: GET
    data_selector: maximum_delay
    params: {}
- name: get_minimum_delay_microseconds
  endpoint:
    path: /acquisition-delay/minimum/microseconds
    method: GET
    data_selector: minimum_delay
    params: {}
- name: set_delay_microseconds
  endpoint:
    path: /acquisition-delay/microseconds
    method: POST
    data_selector: null
    params:
      delay_usec: int
- name: SeaBreezeAPI
  endpoint:
    path: /list_devices
    method: GET
    data_selector: devices
- name: SeaBreezeDevice
  endpoint:
    path: /get_serial_number
    method: GET
    data_selector: serial_number
- name: SeaBreezeFeature
  endpoint:
    path: /seabreeze/features
    method: GET
    data_selector: features
    params: {}
- name: SeaBreezeRawUSBBusAccessFeature
  endpoint:
    path: /seabreeze/rawusb
    method: GET
    data_selector: raw_usb_access
    params: {}
- name: SPARK
  endpoint:
    path: /seabreeze/pyseabreeze/devices.py
    method: POST
    data_selector: model_name
    params: {}
notes:
- The seabreeze_os_setup script is installed with python-seabreeze.
- It installs udev rules on linux and spectrometer drivers on windows
- Some common issues you might have with seabreeze
- Your spectrometer is not supported by the backend you are using
- Your spectrometer is not working
- The cseabreeze backend is a wrapper around the seabreeze library provided by Ocean
  Optics.
- Users don’t instantiate SeaBreezeDevice directly, but retrieve instances via SeaBreezeAPI.list_devices().
- cseabreeze is the default backend interface used by python-seabreeze
- Users don’t instantiate SeaBreezeDevice directly, but retrieve instances via SeaBreezeAPI.list_devices()
- Adding a new spectrometer requires finding a datasheet pdf.
- Basic Spark support is added by creating a new device class.
- Uses a compatible pure python implementation of SeaBreeze
- Devices are connected via USB and require initialization
- Extending pyseabreeze is quite easy.
errors:
- 'SeaBreezeError: Default exception raised by the backend libraries'
auth_info:
  mentioned_objects:
  - SeaBreezeAPI
  - SeaBreezeDevice
  - SeaBreezeFeature
client:
  base_url: https://github.com/ap--/python-seabreeze
  headers:
    Accept: application/json
source_metadata: null
