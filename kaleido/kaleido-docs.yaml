resources:
- name: nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: records
- name: nodes
  endpoint:
    path: /nodes
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: records
- name: consortia
  endpoint:
    path: /consortia
    method: GET
    data_selector: records
- name: environments
  endpoint:
    path: /environments
    method: GET
    data_selector: records
- name: nodes
  endpoint:
    path: /nodes
    method: GET
    data_selector: records
- name: app_credentials
  endpoint:
    path: /app_credentials
    method: GET
    data_selector: records
- name: environment
  endpoint:
    path: /consortia/{consortia_id}/environments
    method: POST
    data_selector: ''
    params: {}
- name: node_configuration
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/configurations
    method: POST
    data_selector: ''
    params: {}
- name: Create Node
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/nodes
    method: POST
- name: Update Node
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/nodes/{node_id}
    method: PATCH
- name: Reset Node
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/nodes/{node_id}/reset
    method: PUT
- name: memberships
  endpoint:
    path: /api/v1/memberships
    method: GET
    data_selector: memberships
- name: runtimes
  endpoint:
    path: /api/v1/runtimes
    method: GET
    data_selector: runtimes
- name: destinations
  endpoint:
    path: /api/v1/destinations
    method: GET
    data_selector: destinations
- name: signing_accounts
  endpoint:
    path: /api/v1/signing_accounts
    method: GET
    data_selector: signing_accounts
- name: activity_log
  endpoint:
    path: /api/v1/activity_log
    method: GET
    data_selector: activity_log
- name: services
  endpoint:
    path: /services
    method: POST
    data_selector: null
    params: {}
- name: documentstore
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/services
    method: POST
- name: fund_account
  endpoint:
    path: /environments/{environment_id}/eth/fundaccount
    method: POST
- name: get_balance
  endpoint:
    path: /environments/{environment_id}/eth/getBalance
    method: GET
- name: Environment Backup
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/backup
    method: POST
- name: Patch Environment Backup
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/backup
    method: PATCH
- name: Reset Monitor Node
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/nodes/{node_id}/reset
    method: PUT
- name: services
  endpoint:
    path: /services
    method: POST
    data_selector: ''
    params: {}
- name: rotate_signers_service
  endpoint:
    path: /services
    method: POST
    data_selector: service_id
    params: {}
- name: get_service_details
  endpoint:
    path: /services/{service_id}
    method: GET
    data_selector: service_details
    params: {}
- name: Zero Knowledge Token Service
  endpoint:
    path: /consortia/{consortia_id}/environments/{environment_id}/services
    method: POST
    data_selector: services
    params: {}
- name: enroll_with_ca
  endpoint:
    path: /api/v1/c/u0a1k72cql/e/u0wrhhqt5w/s
    method: POST
    data_selector: service
    params: {}
- name: Managed Wallet
  endpoint:
    path: /ethwallet
    method: GET
- name: Quorum
  endpoint:
    path: /quorum
    method: GET
- name: Geth
  endpoint:
    path: /geth
    method: GET
- name: Hyperledger Besu
  endpoint:
    path: /besu
    method: GET
- name: Corda
  endpoint:
    path: /corda
    method: GET
- name: Hyperledger Fabric
  endpoint:
    path: /fabric
    method: GET
- name: Hyperledger FireFly
  endpoint:
    path: /firefly
    method: GET
- name: document_exchange
  endpoint:
    path: /api/v1/document_exchange
    method: POST
    data_selector: data
    params: {}
- name: app_to_app_messaging
  endpoint:
    path: /api/v1/app_to_app_messaging
    method: POST
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /api/service
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Kaleido is a full stack SaaS platform that’s hybrid enabled and designed to simplify
  the process of building consortia and deploying private blockchain networks.
- As an enterprise grade platform, Kaleido takes high availability, resilience, and
  maintenance very seriously.
- We maintain the stack, through modern cloud-native architecture, continuous delivery
  development of the Kaleido SaaS platform, and user-controlled software rolling upgrades
  of the blockchain protocol and full-stack services.
- FireFly provides a set of pre-integrated runtimes and an API to build event-driven,
  multi-party applications.
- Uses OAuth2 with refresh token — requires setup of connected app in kaleido
- Some objects may return nulls in deeply nested fields
- Starter plan resources are subject to intermittent failover that may occur automatically
  as directed by the platform to optimize cloud infrastructure usage.
- The developer plan should not be used for important workloads, nor should it be
  treated as a facsimile of a future production environment.
- All Subscription plans, with the exception of the free Starter tier, require billing
  information to charge applicable runtime usage, membership, storage and support
  fees.
- Only organizations on the Business or Enterprise subscription tier can extend/participate
  in a decentralized consortium.
- Only organizations on the Enterprise subscription tier can issue network permissions.
- The Public Ethereum Tether allows for synchronized views of the chain.
- Logs are pruned once every 24 hours.
- Utility services are charged per node in an environment where the utility service
  is present.
- These calls are routed via our SaaS control plane and secured via Administrative
  API Keys
- These calls go direct to your runtimes and are secured via Runtime Application Credentials
- The multi-tenant node feature must be enabled for your network operator account
  before you can use it.
- Uses JWT tokens for authorization
- The secret part of the strong generated Application Credential should never appear
  in your configuration.
- These options must be set during environment creation and cannot be changed after
  the environment is created.
- Block intervals can ONLY be defined during environment creation, as the specified
  configuration is hard-coded within your chain's genesis block.
- Kaleido Enterprise SSO is compatible with any OIDC compliant identity provider.
- The Address Book encapsulates Kaleido's enterprise identity capabilities.
- Only organizations running on the Business or Enterprise tiers will be able to participate
  in decentralized business networks.
- Uses Kaleido-hosted storage or integrates with External Storage such as AWS S3 or
  Azure Blob.
- If you are targeting an environment outside of the US or on Azure, make sure to
  modify your URL accordingly.
- The ether pool is an environmentally-shared utility service.
- Governance of the pool is at the discretion of the consortium.
- Environment backup configuration is created automatically but is disabled by default.
- Backup files are created based on the selected schedule and uploaded to the configured
  backup destinations.
- The monitor node will reset every time there is an update to the Enabled field on
  the Environment backup config.
- The Rotate Signers service is provisioned against the /services API endpoint.
- Smart contracts deployed by the management workflow are automatically supported
  by REST API Gateway.
- Zero Knowledge Tokens service is only available on Quorum based environments.
- Both Raft and Istanbul BFT are acceptable consensus algorithms.
- Identity must have an attribute 'hf.IntermediateCA' with a value of 'true'
- Check the logs of the CA server after provisioning to ensure proper initialization
- Find popular Ethereum tools including browser wallets, solidity IDEs and smart contract
  auditing frameworks.
- Kaleido's REST API Gateway has built-in support for returning the error string when
  transactions failed.
- API Documentation for the Cloud HSM Signer Service
- 'All providers: Fixed an issue where an invalid key pair could be generated on first
  startup resulting in the environment being unable to start under certain circumstances.'
- 'Ethereum providers: Fixed a race condition where, during startup, the runtime could
  sometimes load a default configuration resulting in the runtime becoming unresponsive
  to RPC requests under certain circumstances.'
- 'Quorum: v21.10.0 (inc. Geth/v1.9.25) + 128KB tx size limit'
- 'Caution: Some features may be in beta.'
- Ensure to check the API Docs for specific usage instructions.
- Uses OAuth2 with refresh token — requires setup of connected app in Kaleido
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.kaleido.io
source_metadata: null
