resources:
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
    params: {}
- name: stages
  endpoint:
    path: /api/stages
    method: POST
    data_selector: stages
    params: {}
- name: fields
  endpoint:
    path: /docs/api/fields-api
    method: GET
    data_selector: fields
    params: {}
- name: tasks
  endpoint:
    path: /api/tasks
    method: POST
- name: special_fields
  endpoint:
    path: /docs/working-with-data/creating-fields
    method: GET
    data_selector: special_fields
- name: new_fields
  endpoint:
    path: /docs/working-with-data/creating-fields
    method: POST
    data_selector: new_fields
- name: existing_fields
  endpoint:
    path: /docs/working-with-data/creating-fields
    method: PUT
    data_selector: existing_fields
- name: deleting_fields
  endpoint:
    path: /docs/working-with-data/creating-fields
    method: DELETE
    data_selector: deleting_fields
- name: advanced_editing
  endpoint:
    path: /docs/working-with-data/creating-fields
    method: PATCH
    data_selector: advanced_editing
- name: saved_views
  endpoint:
    path: /api/saved_views
    method: POST
    data_selector: saved_views
    params: {}
- name: tasks
  endpoint:
    path: /api/tasks
    method: POST
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
- name: Slack post
  endpoint:
    path: /api/chat.postMessage
    method: POST
- name: Slack Integration
  endpoint:
    path: /api/slack
    method: POST
    data_selector: response
    params: {}
- name: actions
  endpoint:
    path: /api/actions
    method: GET
- name: actions
  endpoint:
    path: /api/actions
    method: GET
    data_selector: actions
- name: Email a Form
  endpoint:
    path: /docs/automations/email-a-form
    method: GET
- name: tasks
  endpoint:
    path: /api/tasks
    method: GET
    data_selector: results
    params:
      query: fetch_all_records
- name: tasks
  endpoint:
    path: /api/tasks
    method: GET
- name: task_available_actions
  endpoint:
    path: /api/v1/workflows/<workflow-id>/tasks/<unique-id>/actions
    method: GET
    data_selector: ''
- name: action_execution
  endpoint:
    path: /api/v1/workflows/<workflow-id>/executions
    method: POST
    data_selector: ''
    params: {}
- name: action_execution_status
  endpoint:
    path: /api/v1/workflows/<workflow-id>/executions/<execution-id>
    method: GET
    data_selector: ''
- name: checklist_items
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/checklist_items
    method: GET
    data_selector: ''
    params: {}
- name: checklist_item
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/checklist_items/<id>
    method: GET
    data_selector: ''
    params: {}
- name: comments
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/comments
    method: GET
    data_selector: '[]'
    params: {}
- name: create_comment
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/comments
    method: POST
    data_selector: ''
    params: {}
- name: task_available_actions
  endpoint:
    path: /api/v1/workflows/<workflow-id>/tasks/<unique-id>/actions
    method: GET
    data_selector: actions
- name: action_execution
  endpoint:
    path: /api/v1/workflows/<workflow-id>/executions
    method: POST
    data_selector: execution
    params: {}
- name: execution_status
  endpoint:
    path: /api/v1/workflows/<workflow-id>/executions/<execution-id>
    method: GET
    data_selector: status
- name: data_sync
  endpoint:
    path: /workflows/<workflow-id>/data_syncs
    method: POST
    data_selector: null
    params: {}
- name: checklist_items
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/checklist_items
    method: GET
    data_selector: '[]'
- name: checklist_item
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/checklist_items/<id>
    method: GET
    data_selector: '{}'
- name: fields
  endpoint:
    path: /workflows/<workflow-id>/fields
    method: GET
    data_selector: records
- name: file
  endpoint:
    path: /files/<blob_id>
    method: GET
    data_selector: Receipt
- name: list_comments
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/comments
    method: GET
    data_selector: records
- name: create_comment
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique_id>/comments
    method: POST
    data_selector: records
- name: data_sync
  endpoint:
    path: /workflows/<workflow-id>/data_syncs
    method: POST
- name: roles
  endpoint:
    path: /workflows/<workflow-id>/roles
    method: GET
    data_selector: ''
- name: fields
  endpoint:
    path: /workflows/<workflow-id>/fields
    method: GET
    data_selector: fields
    params: {}
- name: stages
  endpoint:
    path: /workflows/<workflow-id>/stages
    method: GET
    data_selector: ''
- name: file
  endpoint:
    path: /api/v1/files/<blob_id>
    method: GET
    data_selector: Receipt
    params: {}
- name: roles
  endpoint:
    path: /workflows/<workflow-id>/roles
    method: GET
    data_selector: ''
- name: stages
  endpoint:
    path: /workflows/<workflow-id>/stages
    method: GET
    data_selector: ''
- name: tasks
  endpoint:
    path: /workflows/<workflow-id>/tasks
    method: GET
    data_selector: records
- name: active_tasks
  endpoint:
    path: /workflows/<workflow-id>/tasks/active
    method: GET
    data_selector: records
- name: task_by_unique_id
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique-id>
    method: GET
    data_selector: records
- name: create_task
  endpoint:
    path: /workflows/<workflow-id>/tasks
    method: POST
    data_selector: records
- name: update_task
  endpoint:
    path: /workflows/<workflow-id>/tasks
    method: POST
    data_selector: records
- name: delete_task
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique-id>
    method: DELETE
- name: list_users
  endpoint:
    path: /workflows/<workflow-id>/users
    method: GET
    data_selector: records
- name: get_user_by_id
  endpoint:
    path: /workflows/<workflow-id>/users/<user_id>
    method: GET
    data_selector: records
- name: delete_user_by_id
  endpoint:
    path: /workflows/<workflow-id>/users/<user_id>
    method: DELETE
- name: workflows
  endpoint:
    path: /workflows
    method: GET
    data_selector: ''
- name: tasks
  endpoint:
    path: /workflows/<workflow-id>/tasks
    method: GET
    data_selector: records
- name: active_tasks
  endpoint:
    path: /workflows/<workflow-id>/tasks/active
    method: GET
    data_selector: records
- name: task_by_unique_id
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique-id>
    method: GET
    data_selector: records
- name: create_task
  endpoint:
    path: /workflows/<workflow-id>/tasks
    method: POST
    data_selector: records
- name: update_task
  endpoint:
    path: /workflows/<workflow-id>/tasks
    method: POST
    data_selector: records
- name: delete_task
  endpoint:
    path: /workflows/<workflow-id>/tasks/<unique-id>
    method: DELETE
- name: workspace
  endpoint:
    path: /workspace
    method: GET
    data_selector: id
    params: {}
- name: actions
  endpoint:
    path: /api/actions
    method: POST
    data_selector: response
    params: {}
- name: list_users
  endpoint:
    path: /workflows/<workflow-id>/users
    method: GET
    data_selector: records
- name: get_user_by_id
  endpoint:
    path: /workflows/<workflow-id>/users/<user_id>
    method: GET
    data_selector: records
- name: delete_user_by_id
  endpoint:
    path: /workflows/<workflow-id>/users/<user_id>
    method: DELETE
- name: generate_csv
  endpoint:
    path: /api/v1/workflows/<workflow-id>/analytics/exports
    method: POST
    data_selector: id
    params:
      start_date: '2022-01-01'
      end_date: '2022-03-01'
- name: get_analytics_csv
  endpoint:
    path: /api/v1/workflows/<workflow-id>/analytics/exports/<export-id>
    method: GET
    data_selector: file_url
    params: {}
- name: workflows
  endpoint:
    path: /workflows
    method: GET
    data_selector: ''
- name: workspace
  endpoint:
    path: /workspace
    method: GET
    data_selector: id
    params: {}
- name: actions_webhooks
  endpoint:
    path: /api/actions
    method: POST
    data_selector: response
    params: {}
- name: generate_csv
  endpoint:
    path: /api/v1/workflows/<workflow-id>/analytics/exports
    method: POST
    data_selector: id
    params: {}
- name: get_analytics_csv
  endpoint:
    path: /api/v1/workflows/<workflow-id>/analytics/exports/<export-id>
    method: GET
    data_selector: file_url
    params: {}
notes:
- Flowdash is an ultra-customizable task management platform for operationally-intense
  businesses.
- Uses OAuth2 with refresh token — requires setup of connected app in Flowdash
- When editing tasks, some fields may not be editable if the field was marked as non-editable.
  Similarly, in cases where a field is required, updating the field will fail until
  a valid value is provided.
- To create new tasks in Flowdash from Zapier, an API key is required.
- Sign into Front and create a new API key at https://app.frontapp.com/settings/tools/api.
- Call it flowdash and give it the proper scopes.
- Sync basic task details to Slack to receive realtime updates for task data (Stage,
  Assigned To, and Updated At).
- Once you’ve grabbed your Account SID and Auth Token, you’re ready to start using
  Twilio across your workspace.
- We recommend creating a user with read-only permission
- Update requires the user in the data source to have write access to the table
- Do not sync columns that can be updated by database triggers
- To use any of the endpoints in the Flowdash API, you’ll need to provide an API key
  in each request’s Authorization header.
- All action requirements are respected by this API, except for the user confirmation
  requirement.
- Some checklist items cannot be deleted
- Checklist items added via the a checklist template cannot be deleted.
- Action executions run asynchronously, the response will include the execution ID
  and a status.
- Authorization requires a Bearer token
- To fetch a file, specify the blob ID in the endpoint.
- Deleting tasks is permanent and cannot be undone.
- To fetch workspace details for a given workspace API token, issue a GET request
  to the workspace endpoint.
- Flowdash calls your API every time a user performs the specified action.
- CSV generation is asynchronous, check status for completion.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '422: Name is required'
- '422: Checklist must be completed'
- '422: Must be assigned'
- '422: Name must include honorable prefix'
- '401 Unauthorized: Recheck API token'
- '422: Invalid data provided in the request body.'
- '404: Task not found for update or delete operations.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://app.flowdash.com/api/v1
  headers:
    Authorization: Bearer YOUR_API_KEY
source_metadata: null
