resources:
- name: entry
  endpoint:
    path: /gf_entry
    method: GET
    data_selector: entries
- name: form
  endpoint:
    path: /gf_form
    method: GET
    data_selector: forms
- name: export_entries
  endpoint:
    path: /wp-admin/admin.php?page=gf_export&view=export_entry
    method: GET
    data_selector: entries
    params:
      id: '[FORM ID]'
- name: entries
  endpoint:
    path: /entries
    method: GET
    data_selector: entries
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: forms
    params: {}
- name: form_markup
  endpoint:
    path: /gravityforms/form/markup
    method: GET
    data_selector: markup
- name: form_entries
  endpoint:
    path: /gravityforms/entries
    method: GET
    data_selector: entries
- name: paypal_checkout
  endpoint:
    path: /category/add-ons-gravity-forms/paypal-add-ons/paypal-checkout-add-on/
    method: GET
- name: stripe
  endpoint:
    path: /category/add-ons-gravity-forms/stripe-add-on/
    method: GET
- name: survey
  endpoint:
    path: /category/add-ons-gravity-forms/survey-add-on/
    method: GET
- name: polls
  endpoint:
    path: /category/add-ons-gravity-forms/polls-add-on/
    method: GET
- name: zapier
  endpoint:
    path: /category/add-ons-gravity-forms/zapier-add-on/
    method: GET
- name: mailchimp
  endpoint:
    path: /category/add-ons-gravity-forms/mailchimp-add-on/
    method: GET
- name: dropbox
  endpoint:
    path: /category/add-ons-gravity-forms/dropbox-add-on/
    method: GET
- name: user_registration
  endpoint:
    path: /category/add-ons-gravity-forms/user-registration-add-on/
    method: GET
- name: notifications
  endpoint:
    path: /notifications
    method: POST
    data_selector: notifications
    params: {}
- name: confirmations
  endpoint:
    path: /gravity-forms/api/confirmations
    method: GET
    data_selector: confirmations
- name: first_form
  endpoint:
    path: /path/to/first/form
    method: POST
    data_selector: submission_data
    params: {}
- name: second_form
  endpoint:
    path: /path/to/second/form
    method: GET
    data_selector: received_data
    params: {}
- name: form_settings
  endpoint:
    path: /gravityforms/form_settings
    method: GET
    data_selector: settings
- name: form_settings
  endpoint:
    path: /gravity_forms/block_settings/form
    method: GET
    data_selector: settings
    params: {}
- name: form_styles
  endpoint:
    path: /gravity_forms/block_settings/styles
    method: GET
    data_selector: styles
    params: {}
- name: advanced_settings
  endpoint:
    path: /gravity_forms/block_settings/advanced
    method: GET
    data_selector: advanced
    params: {}
- name: notification_settings
  endpoint:
    path: /gravityforms/notification-settings
    method: GET
    data_selector: notifications
    params: {}
- name: gravityforms_capabilities
  endpoint:
    path: /gravityforms/capabilities
    method: GET
    data_selector: capabilities
- name: gravityforms_addon_capabilities
  endpoint:
    path: /gravityforms/addon_capabilities
    method: GET
    data_selector: addon_capabilities
- name: form
  endpoint:
    path: /api/forms
    method: GET
    data_selector: forms
- name: address
  endpoint:
    path: /gravityforms/v1/address
    method: GET
    data_selector: address_fields
- name: captcha
  endpoint:
    path: /gravityforms/captcha
    method: GET
    data_selector: captcha_fields
    params: {}
- name: consent_field
  endpoint:
    path: /consent_field
    method: GET
    data_selector: records
- name: email
  endpoint:
    path: /email
    method: GET
    data_selector: settings
    params: {}
- name: list
  endpoint:
    path: /gravity-forms/v2/list
    method: GET
    data_selector: fields
    params: {}
- name: name_field
  endpoint:
    path: /gravityforms/v1/name
    method: GET
    data_selector: fields
    params: {}
- name: Password
  endpoint:
    path: /gravity-forms/password
    method: GET
    data_selector: settings
    params: {}
- name: survey
  endpoint:
    path: /gravityforms/survey
    method: GET
    data_selector: records
- name: username
  endpoint:
    path: /gravityforms/username
    method: GET
    data_selector: field
    params: {}
- name: website
  endpoint:
    path: /gravityforms/api/v1/website
    method: GET
    data_selector: records
- name: entry_detail
  endpoint:
    path: /entry/detail
    method: GET
- name: form_shortcode
  endpoint:
    path: /gravityforms/shortcode
    method: GET
    data_selector: shortcode
- name: gravity_form
  endpoint:
    path: /gravity_form
    method: POST
    data_selector: form
    params:
      id_or_title: required
      display_title: optional
      display_description: optional
      display_inactive: optional
      field_values: optional
      ajax: optional
      tabindex: optional
      echo: optional
      form_theme: optional
      style_settings: optional
- name: form_id
  endpoint:
    path: /how-to-determine-the-form-id
    method: GET
- name: default_styles
  endpoint:
    path: /gform_default_styles
    method: POST
    data_selector: styles
    params: {}
- name: form_shortcode
  endpoint:
    path: /gravityforms/form_shortcode
    method: GET
    data_selector: shortcode
    params: {}
- name: login
  endpoint:
    path: /gravityform/action/login
    method: GET
    data_selector: ''
    params: {}
- name: entries
  endpoint:
    path: /entries
    method: GET
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: entries
  endpoint:
    path: /entries
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: response
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: entries
  endpoint:
    path: /entries
    method: GET
- name: forms
  endpoint:
    path: /gravityformsapi/forms/[Form IDs]
    method: GET
    data_selector: response
- name: forms
  endpoint:
    path: /forms
    method: POST
    data_selector: response
- name: forms
  endpoint:
    path: /gravityformsapi/forms
    method: PUT
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: /gravityformsapi/forms/[Form ID]
    method: DELETE
    data_selector: response
    params: {}
- name: form_submissions
  endpoint:
    path: /gravityformsapi/forms/[Form ID]/submissions
    method: POST
    data_selector: response
    params: {}
- name: entry
  endpoint:
    path: /entries/[Entry ID]
    method: GET
    data_selector: response
    params: {}
- name: entries
  endpoint:
    path: /entries
    method: GET
    data_selector: response.entries
    params:
      paging:
        page_size: 5
        offset: 5
- name: entries
  endpoint:
    path: /entries
    method: GET
    data_selector: response.entries
    params: {}
- name: entries
  endpoint:
    path: /gravityformsapi/forms/[form ID]/entries
    method: GET
    data_selector: response.entries
    params: {}
- name: entries
  endpoint:
    path: /entries
    method: POST
    data_selector: response
    params: {}
- name: entries
  endpoint:
    path: /forms/[Form ID]/entries/[Entry ID]/fields/[Field ID]
    method: GET
    data_selector: response
    params: {}
- name: entries
  endpoint:
    path: /forms/[Form ID]/entries
    method: POST
    data_selector: response
- name: entries
  endpoint:
    path: /entries/[Entry ID]
    method: PUT
    data_selector: response
- name: entries
  endpoint:
    path: /entries
    method: PUT
    data_selector: response
    params: {}
- name: entries
  endpoint:
    path: /entries/[Entry ID]
    method: DELETE
    data_selector: response
    params: {}
- name: results
  endpoint:
    path: /forms/[Form ID]/results
    method: GET
    data_selector: response
    params: {}
- name: entries
  endpoint:
    path: forms/28/entries
    method: GET
- name: entries
  endpoint:
    path: /entries
    method: GET
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: entries
  endpoint:
    path: /forms/28/entries
    method: GET
    data_selector: entries
- name: entries
  endpoint:
    path: entries
    method: GET
    data_selector: response.entries
    params:
      paging[page_size]: 1000
- name: entries
  endpoint:
    path: /forms/1/entries
    method: GET
    data_selector: entries
- name: entries
  endpoint:
    path: entries
    method: PUT
- name: entry_157
  endpoint:
    path: entries/157
    method: PUT
- name: entries
  endpoint:
    path: /entries
    method: PUT
    data_selector: response
    params: {}
- name: entry
  endpoint:
    path: /entries/{id}
    method: GET
    data_selector: response
    params: {}
- name: forms
  endpoint:
    path: forms/67;68;1
    method: GET
    data_selector: response
- name: forms
  endpoint:
    path: forms
    method: GET
    data_selector: response
- name: single_form
  endpoint:
    path: forms/67
    method: GET
    data_selector: response
- name: insert_form
  endpoint:
    path: /forms
    method: POST
- name: form
  endpoint:
    path: /forms
    method: POST
    data_selector: forms
    params: {}
- name: forms
  endpoint:
    path: forms
    method: POST
    data_selector: response
    params: {}
- name: gravityforms_capabilities
  endpoint:
    path: /gravityforms/capabilities
    method: GET
    data_selector: capabilities
- name: gravityforms_addon_capabilities
  endpoint:
    path: /gravityforms/addon_capabilities
    method: GET
    data_selector: addon_capabilities
- name: entries
  endpoint:
    path: /entries
    method: GET
- name: forms
  endpoint:
    path: /forms
    method: GET
- name: forms
  endpoint:
    path: /gf/v2/forms
    method: POST
- name: forms
  endpoint:
    path: /forms
    method: POST
    data_selector: fields
    params: {}
- name: entries
  endpoint:
    path: /gf/v2/entries
    method: GET
    data_selector: entries
    params: {}
- name: form_entries
  endpoint:
    path: /gf/v2/forms/[FORM_ID]/entries
    method: GET
    data_selector: entries
    params: {}
- name: entries
  endpoint:
    path: /gf/v2/entries
    method: GET
    data_selector: entries
    params: {}
- name: forms_entries
  endpoint:
    path: /gf/v2/forms/[FORM_ID]/entries
    method: GET
    data_selector: entries
    params: {}
- name: specific_entry
  endpoint:
    path: /gf/v2/entries/[ENTRY_ID]
    method: GET
    data_selector: entry
    params: {}
- name: entries
  endpoint:
    path: /entries
    method: GET
    data_selector: records
    params: {}
- name: forms
  endpoint:
    path: /forms
    method: GET
    data_selector: records
    params: {}
- name: entries
  endpoint:
    path: /gf/v2/entries
    method: POST
    data_selector: entry_property
- name: form_entries
  endpoint:
    path: /gf/v2/forms/[FORM_ID]/entries
    method: POST
    data_selector: entry_property
- name: entries
  endpoint:
    path: /entries/[ENTRY_ID]
    method: PUT
    data_selector: entry
    params: {}
- name: entries
  endpoint:
    path: /gf/v2/entries/[ENTRY_ID]
    method: DELETE
    data_selector: entry_property
    params:
      force: '0'
- name: forms
  endpoint:
    path: /gf/v2/forms
    method: GET
    data_selector: forms
- name: form_details
  endpoint:
    path: /gf/v2/forms/[FORM_ID]
    method: GET
    data_selector: form_properties
- name: forms
  endpoint:
    path: /gf/v2/forms/[FORM_ID]
    method: PUT
    data_selector: form_property
- name: forms
  endpoint:
    path: /forms/{id}
    method: PUT
    data_selector: fields
    params: {}
- name: form_submissions
  endpoint:
    path: /gf/v2/forms/[FORM_ID]/submissions
    method: POST
- name: form_validation
  endpoint:
    path: /gf/v2/forms/[FORM_ID]/submissions/validation
    method: POST
- name: field_filters
  endpoint:
    path: /gf/v2/forms/[FORM_ID]/field-filters
    method: GET
    data_selector: field_filters
    params: {}
- name: forms
  endpoint:
    path: /forms/{form_id}
    method: DELETE
    data_selector: deleted
    params:
      force: '1'
- name: form
  endpoint:
    path: /gf/v2/forms/[FORM_ID]
    method: DELETE
    data_selector: form_property
    params:
      force: 0
- name: notifications
  endpoint:
    path: /gf/v2/entries/[ENTRY_ID]/notifications
    method: POST
    data_selector: notifications
    params: {}
- name: form_results
  endpoint:
    path: /gf/v2/forms/[FORM_ID]/results
    method: GET
    data_selector: results
    params: {}
- name: feeds
  endpoint:
    path: /gf/v2/feeds/[FEED_ID]
    method: DELETE
    data_selector: deleted
- name: feed
  endpoint:
    path: /gf/v2/feeds/[FEED_ID]
    method: DELETE
    data_selector: deleted
    params: {}
- name: forms
  endpoint:
    path: /rest-api-v2/forms
    method: POST
    data_selector: null
    params:
      capability: gravityforms_create_form
- name: field
  endpoint:
    path: /field-object
    method: GET
    data_selector: fields
- name: form_object
  endpoint:
    path: /gravityforms/v2/forms
    method: GET
    data_selector: forms
- name: form
  endpoint:
    path: /gravity-forms/forms
    method: GET
    data_selector: forms
- name: entry
  endpoint:
    path: /entry
    method: GET
    data_selector: entry
    params: {}
notes:
- If the Update button is not clicked, any settings created will be saved, but they
  will not be available for use.
- After creating your credentials, make sure to copy them before closing the dialog,
  as you will not be able to view them again.
- Accessibility improvements added in the form editor.
- Updated the form editor to use the Orbital theme.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Security enhancements added in this version.
- Updated translations for multiple languages.
- Added support for rendering forms in admin pages with the gravity_form() function
  and the gravityform shortcode.
- Downloads require an active Gravity Forms license key and access to a Gravity Forms
  account.
- Notifications support conditional logic, allowing you to define specific conditions
  that determine whether or not this notification gets sent.
- With the release of Gravity Forms 3.1, support for legacy markup will be fully removed.
- By default, the merge tag inserts the IDs of the uploaded files. This can be changed
  to insert the URLs of the uploaded files by defining urls as the third parameter,
  e.g. {apc_media:12:urls}.
- When using the merge tag with a multi-file upload field, file IDs or URLs will be
  output as a comma separated list.
- The {current_page_number} merge tag is available for use in Form Settings → Pagination
  Tracking → Event Parameters when using the Google Analytics Add-On.
- This is not designed for use with forms embedded on blog or archive type pages.
- Conditional logic is only available in new confirmations you create and is not available
  for the default confirmation.
- The default confirmation cannot be turned off.
- Conditional logic can be used to specify when a certain feed should process based
  on the form data.
- Gravity Forms does not officially support nested conditional logic.
- Nested conditional logic issues are most commonly exposed by Drop Downs.
- Uses query strings to pre-populate fields in second form based on first form submission.
- Links created will last 30 days.
- If you are handling sensitive data, be sure that you have SSL (HTTPS) enabled and
  running on your site.
- Single File Upload fields will not preserve any file added prior to the Save and
  Continue action.
- When using a List field, the column names must be unique or the data will not save
  when using Save and Continue.
- Settings area may vary based on which add-ons you have installed.
- This setting allows you to send the notification email to a specific recipient.
- This option appears when there are File Upload fields on the form. Check this box
  to include uploaded files when the notification is sent.
- Part of GDPR compliance.
- Requires management via a plugin that integrates with WordPress Role Management.
- Prior to Gravity Forms version 2.6, the submit button settings were located within
  Form Settings.
- Using this filter does not change the value displayed in the save and continue confirmation
  and notification messages.
- Uses OAuth2 with refresh token — requires setup of connected app in gravity forms
- Once an entry has been submitted using this field, this option will no longer be
  editable.
- Available under the Advanced Fields section within the form editor.
- Supports reCAPTCHA v2 Checkbox and reCAPTCHA v2 Invisible.
- Requires API keys for Google reCAPTCHA service.
- The Chained Selects field is available when using the Chained Selects Add-On.
- The Date field allows you to present a field that captures date data using the jQuery
  UI date picker.
- 'Date Input Type options include: Date Picker, Date Field, Date Drop Down.'
- The Email field allows you to present a field that captures email data.
- The List field allows users to add/remove additional rows of information.
- If your choice labels contain any HTML or special characters such as ampersands,
  commas, hyphens or brackets of any type, you MUST enable the show values feature
  and give each choice a simple and unique value which does not contain any special
  characters.
- This field uses only common field settings for the Appearance and Advanced settings.
- For security purposes, the password field is not stored in any Gravity Forms database
  tables.
- Phone field allows users to enter a phone number, automatically formatting based
  on selected phone format.
- The Pipe Recorder field is added to your available Gravity Forms field list only
  if you have installed the official Gravity Forms Pipe Add-On.
- You will need to have the Polls add-on installed and activated before this field
  type is made available.
- This field type is currently in BETA.
- There is no Form Editor UI component built for this field yet.
- The Username field is available only when the User Registration add-on is active.
- This field automatically validates that the information entered was formatted correctly.
- Security changes released in WordPress 5.0.1 have changed the way uploaded files
  are validated, breaking some previously accepted file types.
- MIME Type validation is now performed, meaning that the content of uploaded files
  must now match their extension.
- This field cannot be used with the Advanced Post Creation Add-On.
- Using any of the Post Fields in a form to collect information without configuring
  the field will create Untitled draft posts after the form is submitted.
- You can also use the Embed Form flyout to create new custom post types or insert
  into existing custom post types. These can be activated using a filter (yet to be
  published).
- Embedding a single form multiple times per page can cause the form submission to
  hang, the wrong form to be submitted when you use the submit button on another,
  or cause you to tab between separate forms on a page.
- Using a modal, tabbed interface, accordion, or slider to embed the same form more
  than once on a single page is not supported and will cause problems.
- The Dynamic Population feature uses PHP to get the value(s) and populate the form
  field(s). Therefore it can’t be used in cached pages.
- Avoid using a parameter name from the list of reserved WordPress terms.
- Ampersands cannot be used as a field name/parameter or value.
- When using this filter, it may be necessary to click Reset Defaults on a form block
  in order to see changes take effect.
- Requires User Registration Add-On.
- The response will not be enveloped by default.
- Sending DELETE requests will send the resource to the trash.
- OAuth 1.0a is recommended for higher security.
- 'WARNING: This sample JavaScript is not secure and it’s not intended to be used
  on production sites. Never send your private key to the browser.'
- The REST API v1 requires 'pretty' permalinks to be enabled.
- All endpoints require authentication with the exception of the POST forms/[ID]/submissions
  end point.
- If a form does not exist for a form id provided, false is returned for that form.
- Use the Paging parameter to limit the number of entries otherwise you may find the
  database times out.
- On most servers we have found the optimum page size to be 200.
- By default, only 10 results are retrieved.
- Entries are automatically sorted by entry id, descending.
- This is a work in progress. More examples will be added over time.
- If no entries are located for the specified form, the response will show total_count
  as 0.
- Paging is controlled by offset and page size
- Result is in the response 'body' and is json encoded.
- Uses API key and private key for authentication
- If a form cannot be found, false is returned instead of a form object.
- Signature is required for authentication
- Ensure the private key is kept secret
- Gravity Forms capabilities are manageable via a plugin that utilizes the WordPress
  Role Management system.
- If you have an active role management plugin, ensure that your user has the correct
  permissions active to access logging.
- Logging should not be left running. Nor should log files be left in an insecure
  network-accessible server once an investigation is completed.
- Some hosting environments, usually Apache based, aren’t configured to pass the basic
  authentication headers from incoming requests to PHP.
- The Gravity Forms API requires the REST API to be enabled in the settings.
- The capability gravityforms_create_form is required to use POST requests at these
  endpoints.
- Requires setup of API credentials in the application
- The capability gravityforms_view_entries is required to use GET requests at these
  endpoints.
- Use paging to limit the number of entries otherwise you may find the database times
  out.
- The capability 'gravityforms_edit_entries' is required to use POST requests at these
  endpoints.
- The capability gravityforms_edit_entries is required to use POST requests at these
  endpoints.
- By default, calling a DELETE request on this endpoint sends the specified entry
  to the trash.
- The capability 'gravityforms_edit_forms' is required to use GET requests at this
  endpoint.
- The capability `gravityforms_create_form` is required to use `PUT` requests at this
  endpoints.
- Requires basic authentication with a username and password format.
- The authenticated user requires the gravityforms_view_entries capability to use
  this endpoint.
- Uses Basic Authentication with username and password
- Calling a DELETE request on this endpoint sends the specified form to the trash.
- If the form is already in the trash, the response code will be 410 (Gone).
- The capability gravityforms_edit_entries is required to use POST requests at this
  endpoint.
- The capability gravityforms_view_entries is required to use GET requests at this
  endpoint.
- The JSON response will indicate if the feed was deleted.
- The Field object contains all settings for a particular field.
- The form object is an associative array containing the form settings, fields, notifications,
  confirmations, and other properties.
- Uses OAuth2 with refresh token — requires setup of connected app in API
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '500 Internal Server Error: Check server logs for more details'
- '404 Not Found: Verify the endpoint is correct'
- Conditional logic is not yet implemented.
- Calculations are not yet implemented.
- Re-ordering of items within the repeater field during form entry is not yet implemented.
- Oops! We could not locate your form.
- '401 Unauthorized: Consumer secret is invalid.'
- '401 Unauthorized: The API key provided does not have read permissions.'
- http request failed
- Could not retrieve forms.
- '400: bad request'
- '401: not authorized'
- '404: not found'
- '500: server error'
- '501: Not implemented'
- '400: Invalid form objects'
- '400: The form title is missing'
- 'insert_form_error: There was a problem while inserting the form'
- '400: Invalid form object'
- '400: Missing form id'
- '404: Form not found'
- 'error_updating_form: Error updating form'
- 'error_updating_confirmations: Error updating form confirmations'
- 'error_updating_notifications: Error updating form notifications'
- 'error_updating_title: Error updating title'
- 'status:404: Form with id: 67 not found'
- 'status:400: Your form could not be found'
- 'status:400: Bad request'
- 'not_found: Entry with id 1000 not found'
- There was an error attempting to access the API.
- 'invalid_entry_object: The entry object must be an array'
- 'empty_form_id: The form id must be specified'
- 'invalid_form_id: The form for this entry does not exist'
- '404: Entry with id [Entry ID] not found'
- 'update_entry_properties_failed: There was a problem while updating the entry properties'
- 'update_input_value_failed: There was a problem while updating one of the input
  values for the entry'
- 'update_field_values_failed: There was a problem while updating the field values'
- '400: Invalid entry id'
- '404: Not found'
- There was an error attempting to access the API -
- HTTP request failed
- '200: Success'
- '400: Bad Request'
- '401: Unauthorized'
- '401 Unauthorized: Check the consumer key and secret.'
- '403 Forbidden: The API key provided does not have the necessary permissions.'
- missing_form
- '400 Bad Request: Check the request data format'
- '401 Unauthorized: Verify API credentials'
- '404 Not Found: Ensure the endpoint is correct'
- 'gf_entry_invalid_id: Entry ID is invalid'
- 'missing_entry: Error code indicating a missing entry'
- gf_entry_invalid_id
- gf_cannot_delete
- gf_already_trashed
- 'gf_not_found: The requested form was not found.'
- not_found
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Ensure the form ID is correct.'
- '401 Unauthorized: Check username and password'
- 'gf_form_invalid_id: Invalid form ID'
- 'gf_cannot_delete: Cannot delete form'
- 'gf_already_trashed: Form is already in the trash'
- 'not_found: Error code indicating the resource was not found.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth_Request
  - Gravity Forms Credentials
  - Application Passwords
  - WordPress User Credentials
  - gravityforms_view_entries
  - gravityforms_delete_entries
  - gravityforms_edit_forms
client:
  base_url: http://localhost/wp/gravityformsapi
  auth:
    type: apikey
    location: query
    header_name: Authorization
source_metadata: null
