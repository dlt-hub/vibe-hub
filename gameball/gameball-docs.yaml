resources:
- name: events
  endpoint:
    path: /rest-api/events
    method: POST
    data_selector: events
    params: {}
- name: Order
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
    data_selector: data
    params: {}
- name: Cashback
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
    data_selector: data
    params: {}
- name: customer_points_balance
  endpoint:
    path: /rest-api/customers/customer-progress
    method: GET
    data_selector: balance
- name: redeem
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
    data_selector: redemption
- name: create_customer
  endpoint:
    path: /integrations/customers
    method: POST
    data_selector: customerAttributes
- name: customers
  endpoint:
    path: /rest-api/customers
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/events
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /rest-api/order
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /rest-api/payment
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/transactions
    method: GET
    data_selector: records
- name: coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
    data_selector: records
- name: configurations
  endpoint:
    path: /rest-api/configurations
    method: GET
    data_selector: records
- name: leaderboard
  endpoint:
    path: /rest-api/leaderboard
    method: GET
    data_selector: records
- name: batches
  endpoint:
    path: /rest-api/batches
    method: GET
    data_selector: records
- name: register_customer
  endpoint:
    path: /rest-api/customers/register
    method: POST
    data_selector: data
- name: show_widget
  endpoint:
    path: /rest-api/customers/show_widget
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /rest-api/events
    method: POST
    data_selector: events
    params: {}
- name: order_tracking
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
- name: cashback
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
- name: customer_points_balance
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-balance
    method: GET
- name: order
  endpoint:
    path: /rest-api/order
    method: POST
- name: redeem
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-redeem
    method: POST
- name: referrals
  endpoint:
    path: /track/referrals
    method: POST
    data_selector: data
    params: {}
- name: RegisterCustomer
  endpoint:
    path: /registerCustomer
    method: POST
    data_selector: customerRegisterResponse
    params: {}
- name: HandleFirebaseDynamicLink
  endpoint:
    path: /handleFirebaseDynamicLink
    method: POST
    data_selector: referralCode
    params: {}
- name: events
  endpoint:
    path: /rest-api/events
    method: POST
    data_selector: event
    params: {}
- name: order
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
- name: cashback
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
- name: customer_points_balance
  endpoint:
    path: /rest-api/customers/customer-progress
    method: GET
- name: redeem
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
- name: customers
  endpoint:
    path: /rest-api/customers
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /rest-api/events
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /rest-api/order
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /rest-api/payment
    method: GET
    data_selector: records
- name: transactions
  endpoint:
    path: /rest-api/transactions
    method: GET
    data_selector: records
- name: coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
    data_selector: records
- name: configurations
  endpoint:
    path: /rest-api/configurations
    method: GET
    data_selector: records
- name: leaderboard
  endpoint:
    path: /rest-api/leaderboard
    method: GET
    data_selector: records
- name: batches
  endpoint:
    path: /rest-api/batches
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /rest-api/customers
    method: GET
- name: events
  endpoint:
    path: /rest-api/events
    method: GET
- name: orders
  endpoint:
    path: /rest-api/order
    method: GET
- name: payments
  endpoint:
    path: /rest-api/payment
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/transactions
    method: GET
- name: coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
- name: configurations
  endpoint:
    path: /rest-api/configurations
    method: GET
- name: leaderboard
  endpoint:
    path: /rest-api/leaderboard
    method: GET
- name: batches
  endpoint:
    path: /rest-api/batches
    method: GET
- name: register_customer
  endpoint:
    path: /rest-api/customers/register
    method: POST
    data_selector: response
    params: {}
- name: Order
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
- name: Cashback
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
- name: Customer Points Balance
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-balance
    method: GET
- name: Order API
  endpoint:
    path: /rest-api/order
    method: POST
- name: Redeem API
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-redeem
    method: POST
- name: referrals
  endpoint:
    path: /track/referrals
    method: POST
    data_selector: referral_data
- name: customer_management
  endpoint:
    path: /rest-api/customers/customer-management
    method: POST
    data_selector: response
    params:
      customerId: string
      customerEmail: string
      customerMobile: string
      customerAttributes: object
- name: events
  endpoint:
    path: /rest-api/events
    method: POST
    data_selector: events
- name: order
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
    data_selector: data
- name: cashback
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
    data_selector: data
- name: customer_points_balance
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-balance
    method: GET
- name: redeem
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-redeem
    method: POST
- name: order
  endpoint:
    path: /rest-api/order
    method: POST
- name: customer_management
  endpoint:
    path: /rest-api/customers/customer-management
    method: POST
    data_selector: customer_profile
    params: {}
- name: Track Events
  endpoint:
    path: /rest-api/events
    method: POST
    data_selector: events
- name: order_tracking
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
- name: cashback
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
- name: customer_points_balance
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-balance
    method: GET
- name: redeem
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-redeem
    method: POST
- name: order
  endpoint:
    path: /rest-api/order
    method: POST
- name: customer
  endpoint:
    path: /rest-api/customers/customer-management
    method: GET
    data_selector: dynamicReferralLink
- name: customer_management
  endpoint:
    path: /rest-api/customers/customer-management
    method: GET
- name: customer_progress
  endpoint:
    path: /rest-api/customers/customer-progress
    method: GET
- name: customer_tags
  endpoint:
    path: /rest-api/customers/customer-tags
    method: GET
- name: customer_notifications
  endpoint:
    path: /rest-api/customers/customer-notifications
    method: GET
- name: customers
  endpoint:
    path: /rest-api/customers
    method: GET
- name: events
  endpoint:
    path: /rest-api/events
    method: GET
- name: orders
  endpoint:
    path: /rest-api/order
    method: GET
- name: payments
  endpoint:
    path: /rest-api/payment
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/transactions
    method: GET
- name: coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
- name: configurations
  endpoint:
    path: /rest-api/configurations
    method: GET
- name: leaderboard
  endpoint:
    path: /rest-api/leaderboard
    method: GET
- name: batches
  endpoint:
    path: /rest-api/batches
    method: GET
- name: customer_management
  endpoint:
    path: /integrations/customers
    method: POST
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer
  endpoint:
    path: /integrations/customers/{customerId}
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer_details
  endpoint:
    path: /integrations/customers/{customerId}/details
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer_coupons
  endpoint:
    path: /integrations/customers/{customerId}/coupons
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: delete_customer
  endpoint:
    path: /integrations/customers/{customerId}
    method: DELETE
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer_hash
  endpoint:
    path: /integrations/customers/{customerId}/hash
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: validate_referrer_code
  endpoint:
    path: /integrations/referrals/validate
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: create_or_update_customer
  endpoint:
    path: /integrations/customers
    method: POST
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer
  endpoint:
    path: /integrations/customers/{customerId}
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer_details
  endpoint:
    path: /integrations/customers/{customerId}/details
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer_coupons
  endpoint:
    path: /integrations/customers/{customerId}/coupons
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: delete_customer
  endpoint:
    path: /integrations/customers/{customerId}
    method: DELETE
    data_selector: isValid
    params:
      referrerCode: string
- name: get_customer_hash
  endpoint:
    path: /integrations/customers/{customerId}/hash
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: validate_referrer_code
  endpoint:
    path: /integrations/referrals/validate
    method: GET
    data_selector: isValid
    params:
      referrerCode: string
- name: validate_referrer_code
  endpoint:
    path: /validate/referrerCode
    method: GET
    data_selector: isValid
    params:
      referrerCode: required
      forCustomerId: optional
- name: validate_referrer_code
  endpoint:
    path: /rest-api/validate-referrer-code
    method: GET
    data_selector: isValid
    params:
      referrerCode: required
      forCustomerId: optional
- name: customer_balance
  endpoint:
    path: /integrations/customers/{customerId}/balance
    method: GET
    data_selector: application/json
- name: customer_tier_progress
  endpoint:
    path: /integrations/customers/{customerId}/tier-progress
    method: GET
    data_selector: application/json
- name: customer_campaigns_progress
  endpoint:
    path: /integrations/customers/{customerId}/reward-campaigns-progress
    method: GET
    data_selector: application/json
- name: customer_referrals
  endpoint:
    path: /integrations/customers/{customerId}/referrals
    method: GET
    data_selector: application/json
- name: customer_referrals_count
  endpoint:
    path: /integrations/customers/{customerId}/referrals/count
    method: GET
    data_selector: application/json
- name: customer_balance
  endpoint:
    path: /integrations/customers/{customerId}/balance
    method: GET
- name: customer_tier_progress
  endpoint:
    path: /integrations/customers/{customerId}/tier-progress
    method: GET
- name: customer_campaigns_progress
  endpoint:
    path: /integrations/customers/{customerId}/reward-campaigns-progress
    method: GET
- name: customer_referrals
  endpoint:
    path: /integrations/customers/{customerId}/referrals
    method: GET
- name: customer_referrals_count
  endpoint:
    path: /integrations/customers/{customerId}/referrals/count
    method: GET
- name: customer_action_streak_progress
  endpoint:
    path: /{customerId}/action-streak/{challengeId}
    method: GET
    data_selector: records
- name: customer_activities
  endpoint:
    path: /{customerId}/activities
    method: GET
    data_selector: records
- name: customer_activities_count
  endpoint:
    path: /{customerId}/activities/count
    method: GET
    data_selector: records
- name: customer_automation_campaigns
  endpoint:
    path: /{customerId}/automation
    method: GET
    data_selector: records
- name: customer_action_streak_progress
  endpoint:
    path: /integrations/customers/{customerId}/action-streak/{challengeId}
    method: GET
    data_selector: application/json
- name: customer_activities
  endpoint:
    path: /integrations/customers/{customerId}/activities
    method: GET
    data_selector: application/json
- name: customer_activities_count
  endpoint:
    path: /integrations/customers/{customerId}/activities/count
    method: GET
    data_selector: application/json
- name: customer_automation_campaigns
  endpoint:
    path: /integrations/customers/{customerId}/automation
    method: GET
    data_selector: application/json
- name: attach_customer_tags
  endpoint:
    path: /integrations/customers/{customerId}/tags
    method: POST
    data_selector: tags
- name: remove_customer_tags
  endpoint:
    path: /integrations/customers/{customerId}/tags
    method: DELETE
    data_selector: tags
- name: attach_customer_tags
  endpoint:
    path: /integrations/customers/{customerId}/tags
    method: POST
    data_selector: tags
    params: {}
- name: remove_customer_tags
  endpoint:
    path: /integrations/customers/{customerId}/tags
    method: DELETE
    data_selector: tags
    params: {}
- name: customer_notifications
  endpoint:
    path: /rest-api/customers/customer-notifications
    method: GET
- name: customer_notifications_count
  endpoint:
    path: /rest-api/customers/customer-notifications/count
    method: GET
- name: mark_customer_notifications_as_read
  endpoint:
    path: /rest-api/customers/customer-notifications/read
    method: PUT
- name: customer_notifications
  endpoint:
    path: /rest-api/customers/customer-notifications
    method: GET
- name: customer_notifications_count
  endpoint:
    path: /rest-api/customers/customer-notifications-count
    method: GET
- name: mark_notifications_as_read
  endpoint:
    path: /rest-api/customers/mark-notifications-as-read
    method: PUT
- name: customer_notifications
  endpoint:
    path: /integrations/customers/{customerId}/notifications
    method: GET
    data_selector: count
    params:
      limit: 50
      startAfter: 0
- name: mark_notifications_as_read
  endpoint:
    path: /integrations/customers/{customerId}/notifications
    method: PUT
    data_selector: count
    params: {}
- name: customer_notifications
  endpoint:
    path: /api/v4.0/integrations/customers/{customerId}/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: mark_notifications_as_read
  endpoint:
    path: /api/v4.0/integrations/customers/{customerId}/notifications
    method: PUT
    data_selector: count
    params: {}
- name: events
  endpoint:
    path: /integrations/events
    method: POST
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /integrations/events
    method: POST
    data_selector: ''
    params: {}
- name: Order
  endpoint:
    path: /rest-api/order
    method: GET
- name: order
  endpoint:
    path: /rest-api/order
    method: GET
- name: track_order
  endpoint:
    path: /integrations/orders
    method: POST
    data_selector: application/json
- name: track_order
  endpoint:
    path: /integrations/orders
    method: POST
    data_selector: null
    params: {}
- name: track_order
  endpoint:
    path: /rest-api/order
    method: POST
    data_selector: lineItems
    params: {}
- name: track_order
  endpoint:
    path: /rest-api/order
    method: POST
    data_selector: lineItems
    params: {}
- name: order_cashback
  endpoint:
    path: /integrations/orders/cashback
    method: POST
    data_selector: transactions
    params: {}
- name: order_transactions
  endpoint:
    path: /integrations/orders/{orderId}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: calculate_order_cashback
  endpoint:
    path: /integrations/orders/cashback
    method: POST
    data_selector: transactions
- name: order_transactions
  endpoint:
    path: /integrations/orders/{orderId}/transactions
    method: GET
    data_selector: transactions
- name: payment
  endpoint:
    path: /rest-api/payment/tracking
    method: POST
    data_selector: payment_data
- name: payment_tracking
  endpoint:
    path: /rest-api/payment/tracking
    method: GET
    data_selector: records
    params: {}
- name: track_payment
  endpoint:
    path: /integrations/payments
    method: POST
    data_selector: response
    params: {}
- name: track_payment
  endpoint:
    path: /integrations/payments
    method: POST
    data_selector: body
- name: Track Payment
  endpoint:
    path: /rest-api/payment
    method: POST
    data_selector: customerId
- name: Track Payment
  endpoint:
    path: /rest-api/payment
    method: POST
    data_selector: paymentDetails
    params: {}
- name: cashback_redemptions
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: GET
- name: hold_management
  endpoint:
    path: /rest-api/transactions/hold-management
    method: GET
- name: transaction_management
  endpoint:
    path: /rest-api/transactions/transaction-management
    method: GET
- name: transaction_validation
  endpoint:
    path: /rest-api/transactions/transaction-validation
    method: GET
- name: cashback_redemptions
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: GET
- name: hold_management
  endpoint:
    path: /rest-api/transactions/hold-management
    method: GET
- name: transaction_management
  endpoint:
    path: /rest-api/transactions/transaction-management
    method: GET
- name: transaction_validation
  endpoint:
    path: /rest-api/transactions/transaction-validation
    method: GET
- name: cashback
  endpoint:
    path: /integrations/transactions/cashback
    method: POST
    data_selector: application/json
    params: {}
- name: redeem
  endpoint:
    path: /integrations/transactions/redeem
    method: POST
    data_selector: application/json
    params: {}
- name: refund
  endpoint:
    path: /integrations/transactions/refund
    method: POST
    data_selector: application/json
    params: {}
- name: reward_cashback
  endpoint:
    path: /integrations/transactions/cashback
    method: POST
    data_selector: refundTransactionId
- name: redeem
  endpoint:
    path: /integrations/transactions/redeem
    method: POST
    data_selector: refundTransactionId
- name: refund
  endpoint:
    path: /api/v4.0/integrations/transactions/refund
    method: POST
    data_selector: refundTransactionId
- name: refund
  endpoint:
    path: /api/v4.0/integrations/transactions/refund
    method: POST
    data_selector: gameballTransactionId
    params: {}
- name: hold_points
  endpoint:
    path: /transactions/hold
    method: POST
    data_selector: application/json
    params: {}
- name: hold_details
  endpoint:
    path: /transactions/hold/{holdReferenceId}
    method: GET
    data_selector: application/json
    params: {}
- name: release_hold
  endpoint:
    path: /transactions/hold/{holdReferenceId}
    method: DELETE
    data_selector: application/json
    params: {}
- name: hold_points
  endpoint:
    path: /integrations/transactions/hold
    method: POST
    data_selector: hold
    params: {}
- name: hold_details
  endpoint:
    path: /integrations/transactions/hold/{holdReferenceId}
    method: GET
    data_selector: hold
    params: {}
- name: release_hold
  endpoint:
    path: /integrations/transactions/hold/{holdReferenceId}
    method: DELETE
    data_selector: hold
    params: {}
- name: transactions
  endpoint:
    path: /integrations/transactions
    method: GET
    data_selector: transactions
- name: activate_transaction
  endpoint:
    path: /integrations/transactions/{transactionId}/activate
    method: POST
    data_selector: pointsActivated
- name: manual_transaction
  endpoint:
    path: /integrations/transactions/manual
    method: POST
    data_selector: pointsActivated
- name: transactions_count
  endpoint:
    path: /integrations/transactions/count
    method: GET
    data_selector: count
- name: transactions_with_customer_data
  endpoint:
    path: /integrations/transactions/customer-view
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /integrations/transactions
    method: GET
    data_selector: transactions
- name: transactions_with_customer_data
  endpoint:
    path: /integrations/transactions/customer-view
    method: GET
    data_selector: transactions
- name: transactions_count
  endpoint:
    path: /integrations/transactions/count
    method: GET
    data_selector: count
- name: manual_transaction
  endpoint:
    path: /integrations/transactions/manual
    method: POST
    data_selector: pointsActivated
- name: activate_transaction
  endpoint:
    path: /integrations/transactions/{transactionId}/activate
    method: POST
    data_selector: pointsActivated
- name: generate_otp
  endpoint:
    path: /integrations/transactions/otp
    method: POST
    data_selector: response
    params: {}
- name: generate_otp
  endpoint:
    path: /integrations/transactions/otp
    method: POST
    data_selector: response
    params: {}
- name: generate_coupon
  endpoint:
    path: /integrations/coupons/predefined
    method: POST
    data_selector: response
    params: {}
- name: validate_single_coupon
  endpoint:
    path: /integrations/coupons/{code}/validate
    method: POST
    data_selector: response
    params: {}
- name: generate_coupon
  endpoint:
    path: /integrations/coupons/predefined
    method: POST
    data_selector: null
    params: {}
- name: validate_single_coupon
  endpoint:
    path: /integrations/coupons/{code}/validate
    method: POST
    data_selector: null
    params: {}
- name: validate_multiple_coupons
  endpoint:
    path: /integrations/coupons/validate_multiple
    method: POST
    data_selector: null
    params: {}
- name: burn_coupon
  endpoint:
    path: /integrations/coupons/burn
    method: POST
    data_selector: null
    params: {}
- name: release_coupons
  endpoint:
    path: /integrations/coupons/release
    method: DELETE
    data_selector: null
    params: {}
- name: automatic_coupons
  endpoint:
    path: /integrations/coupons/automatic
    method: POST
    data_selector: null
    params: {}
- name: validate_coupons
  endpoint:
    path: /coupons/validate
    method: POST
- name: burn_coupon
  endpoint:
    path: /coupons/burn
    method: POST
- name: lock_details
  endpoint:
    path: /locks/{lockReference}
    method: GET
- name: validate_coupons
  endpoint:
    path: /api/v4.0/integrations/coupons/validate
    method: POST
    data_selector: body
    params: {}
- name: burn_coupon
  endpoint:
    path: /api/v4.0/integrations/coupons/burn
    method: POST
    data_selector: body
    params: {}
- name: lock_details
  endpoint:
    path: /api/v4.0/integrations/locks/{lockReference}
    method: GET
    data_selector: body
    params: {}
- name: automatic_coupons
  endpoint:
    path: /integrations/coupons/automatic
    method: POST
    data_selector: isApplied
    params: {}
- name: release_coupons
  endpoint:
    path: /integrations/Coupons/{lockReference}
    method: DELETE
    data_selector: ''
    params: {}
- name: automatic_coupons
  endpoint:
    path: /automatic
    method: POST
    data_selector: ''
    params: {}
- name: release_coupons
  endpoint:
    path: /{lockReference}
    method: DELETE
    data_selector: ''
    params: {}
- name: reward_configurations
  endpoint:
    path: /rest-api/configurations/reward-configurations
    method: GET
- name: program_configurations
  endpoint:
    path: /rest-api/configurations/program-configurations
    method: GET
- name: widget_configuration
  endpoint:
    path: /rest-api/configurations/widget-configuration
    method: GET
- name: reward_configurations
  endpoint:
    path: /rest-api/configurations/reward-configurations
    method: GET
- name: program_configurations
  endpoint:
    path: /rest-api/configurations/program-configurations
    method: GET
- name: widget_configuration
  endpoint:
    path: /rest-api/configurations/widget-configuration
    method: GET
- name: cashback_configurations
  endpoint:
    path: /integrations/configurations/cashback
    method: GET
- name: redemption_configurations
  endpoint:
    path: /integrations/configurations/redemption
    method: GET
- name: coupon_configurations
  endpoint:
    path: /integrations/configurations/coupon
    method: GET
- name: update_coupon_configurations
  endpoint:
    path: /integrations/configurations/coupon
    method: PUT
- name: coupon_configurations
  endpoint:
    path: /integrations/configurations/coupon
    method: PUT
    data_selector: ''
    params: {}
- name: cashback_configurations
  endpoint:
    path: /integrations/configurations/cashback
    method: GET
- name: redemption_configurations
  endpoint:
    path: /integrations/configurations/redemption
    method: GET
- name: coupon_configurations
  endpoint:
    path: /integrations/configurations/coupon
    method: GET
- name: update_coupon_configurations
  endpoint:
    path: /integrations/configurations/coupon
    method: PUT
- name: reward_campaigns
  endpoint:
    path: /integrations/configurations/reward-campaigns
    method: GET
    data_selector: ''
- name: coupon_configurations
  endpoint:
    path: /api/v4.0/integrations/configurations/coupon
    method: GET
    data_selector: records
- name: reward_campaigns
  endpoint:
    path: /integrations/configurations/reward-campaigns
    method: GET
    data_selector: rewards
    params: {}
- name: tiers_configurations
  endpoint:
    path: /integrations/configurations/tiers
    method: GET
- name: tiers
  endpoint:
    path: /api/v4.0/integrations/configurations/tiers
    method: GET
- name: referrals
  endpoint:
    path: /referrals
    method: GET
    data_selector: referrals
    params: {}
- name: referral_config
  endpoint:
    path: /integrations/configurations/referrals
    method: GET
    data_selector: response
- name: referrals
  endpoint:
    path: /api/referrals
    method: GET
    data_selector: referralData
- name: widget_configuration
  endpoint:
    path: /integrations/configurations/widget
    method: GET
    data_selector: application/json
- name: widget_configuration
  endpoint:
    path: /widget
    method: GET
    data_selector: application/json
- name: customers_leaderboard
  endpoint:
    path: /integrations/leaderboard
    method: GET
    data_selector: leaderboard
    params: {}
- name: batch_creation
  endpoint:
    path: /rest-api/batches/batch-creation
    method: POST
- name: batch_management
  endpoint:
    path: /rest-api/batches/batch-management
    method: GET
- name: customers_leaderboard
  endpoint:
    path: /integrations/leaderboard
    method: GET
    data_selector: leaderboard
    params: {}
- name: batches
  endpoint:
    path: /rest-api/batches
    method: GET
- name: create_customers_batch_job
  endpoint:
    path: /integrations/batch/customers
    method: POST
    data_selector: body
- name: track_orders_batch_job
  endpoint:
    path: /integrations/batch/orders
    method: POST
    data_selector: body
- name: balance_inquiry_batch_job
  endpoint:
    path: /integrations/batch/balance/inquiry
    method: POST
    data_selector: body
- name: create_customers_batch
  endpoint:
    path: /integrations/batch/customers
    method: POST
    data_selector: body
- name: track_orders_batch
  endpoint:
    path: /integrations/batch/orders
    method: POST
    data_selector: body
- name: balance_inquiry_batch
  endpoint:
    path: /integrations/batch/balance/inquiry
    method: POST
    data_selector: body
- name: redeem_batch
  endpoint:
    path: /batch/redeem
    method: POST
    data_selector: body
- name: balance_adjustment_batch
  endpoint:
    path: /batch/balance/adjust
    method: POST
    data_selector: body
- name: events_batch
  endpoint:
    path: /batch/events
    method: POST
    data_selector: body
- name: cashback_batch
  endpoint:
    path: /batch/cashback
    method: POST
    data_selector: body
- name: redeem_batch
  endpoint:
    path: /integrations/batch/redeem
    method: POST
    data_selector: body
    params: {}
- name: balance_adjustment_batch
  endpoint:
    path: /integrations/batch/balance/adjust
    method: POST
    data_selector: body
    params: {}
- name: events_batch
  endpoint:
    path: /integrations/batch/events
    method: POST
    data_selector: body
    params: {}
- name: reward_cashback_batch
  endpoint:
    path: /integrations/batch/cashback
    method: POST
    data_selector: body
    params: {}
- name: check_batch_operation_status
  endpoint:
    path: /integrations/batch/{jobId}
    method: GET
    data_selector: application/json
    params: {}
- name: stop_batch_operation
  endpoint:
    path: /integrations/batch/{jobId}
    method: DELETE
    data_selector: application/json
    params: {}
- name: check_batch_operation_status
  endpoint:
    path: /integrations/batch/{jobId}
    method: GET
    data_selector: ''
    params: {}
- name: stop_batch_operation
  endpoint:
    path: /integrations/batch/{jobId}
    method: DELETE
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: customer_notifications
  endpoint:
    path: /webhooks/webhook-topics/notifications
    method: GET
- name: customer_profile_updates
  endpoint:
    path: /webhooks/webhook-topics/profile-updates
    method: GET
- name: customer_notifications
  endpoint:
    path: /webhooks/webhook-topics/notifications
    method: POST
- name: customer_profile_updates
  endpoint:
    path: /webhooks/webhook-topics/profile-updates
    method: POST
- name: notifications_webhook
  endpoint:
    path: /webhooks/notifications
    method: POST
    data_selector: data
- name: customer_notifications
  endpoint:
    path: /webhooks/notifications
    method: POST
    data_selector: data
- name: customer_profile_updates
  endpoint:
    path: /webhooks/profile-updates
    method: POST
    data_selector: data
- name: customer_profile_updated
  endpoint:
    path: /webhooks/customer/profile/updated
    method: POST
    data_selector: data
    params: {}
- name: customer_profile
  endpoint:
    path: /webhooks/customer/profile/updated
    method: POST
    data_selector: data
- name: events
  endpoint:
    path: /rest-api/events
    method: POST
    data_selector: events
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: events
    params: {}
- name: redemption
  endpoint:
    path: /rest-api/redemption
    method: POST
    data_selector: data
    params: {}
- name: customer_points_balance
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-balance
    method: GET
- name: redeem
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-redeem
    method: POST
- name: hold_points
  endpoint:
    path: /rest-api/transactions/hold-management#post-hold-points
    method: POST
- name: track_order
  endpoint:
    path: /rest-api/order/order-tracking#post-track-order
    method: POST
- name: reverse_transaction
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-refund
    method: POST
- name: reverse_hold_transaction
  endpoint:
    path: /rest-api/transactions/hold-management#delete-release-hold
    method: DELETE
- name: orders
  endpoint:
    path: /rest-api/order
    method: POST
    data_selector: order
    params: {}
- name: customer_points_balance
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-balance
    method: GET
    data_selector: totalPointsBalance
- name: redeem
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-redeem
    method: POST
    data_selector: redeemAmount
- name: hold_points
  endpoint:
    path: /rest-api/transactions/hold-management#post-hold-points
    method: POST
    data_selector: holdReference
- name: track_order
  endpoint:
    path: /rest-api/order/order-tracking#post-track-order
    method: POST
    data_selector: redemption
- name: reverse_transaction
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions#post-refund
    method: POST
- name: reverse_hold_transaction
  endpoint:
    path: /rest-api/transactions/hold-management#delete-release-hold
    method: DELETE
- name: Coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
    data_selector: coupons
    params: {}
- name: calculate_cashback
  endpoint:
    path: /calculate_cashback
    method: POST
    data_selector: totalPoints
    params: {}
- name: hold_points
  endpoint:
    path: /hold_points
    method: POST
    data_selector: holdReference
    params: {}
- name: validate_coupon
  endpoint:
    path: /validate_coupon
    method: POST
    data_selector: lockReference
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: POST
    data_selector: orderDetails
- name: reward_campaigns
  endpoint:
    path: /rest-api/configurations/reward-configurations
    method: GET
    data_selector: campaigns
- name: customer_progress
  endpoint:
    path: /customers/rewards-campaigns-progress
    method: GET
    data_selector: progress
- name: calculate_cashback
  endpoint:
    path: /calculate_cashback
    method: POST
    data_selector: totalPoints
    params: {}
- name: hold_points
  endpoint:
    path: /hold_points
    method: POST
    data_selector: holdReference
    params: {}
- name: validate_coupon
  endpoint:
    path: /validate_coupon
    method: POST
    data_selector: lockReference
    params: {}
- name: customers
  endpoint:
    path: /rest-api/customers
    method: GET
- name: events
  endpoint:
    path: /rest-api/events
    method: GET
- name: order
  endpoint:
    path: /rest-api/order
    method: GET
- name: transactions
  endpoint:
    path: /rest-api/transactions
    method: GET
- name: coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
- name: configurations
  endpoint:
    path: /rest-api/configurations
    method: GET
- name: leaderboard
  endpoint:
    path: /rest-api/leaderboard
    method: GET
- name: batches
  endpoint:
    path: /rest-api/batches
    method: GET
- name: reward_campaigns
  endpoint:
    path: /rest-api/configurations/reward-configurations
    method: GET
    data_selector: campaigns
- name: customer_campaign_progress
  endpoint:
    path: /customers/rewards-campaigns-progress
    method: GET
    data_selector: progress
- name: Tiers Configurations
  endpoint:
    path: /rest-api/configurations/program-configurations
    method: GET
    data_selector: tiers
- name: Customer Tier Progress
  endpoint:
    path: /rest-api/customers/customer-progress
    method: GET
    data_selector: progress
- name: Get Tiers Configurations
  endpoint:
    path: /rest-api/configurations/program-configurations#get-tiers-configurations
    method: GET
    data_selector: tiers
- name: Get Customer Tier Progress
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-tier-progress
    method: GET
    data_selector: progress
- name: get_customer_balance
  endpoint:
    path: /rest-api/customers/customer-progress#get-customer-balance
    method: GET
    data_selector: totalPointsBalance
- name: customer_balance
  endpoint:
    path: /rest-api/customers/customer-progress/get-customer-balance
    method: GET
    data_selector: totalPointsBalance
    params: {}
- name: widget_configurations
  endpoint:
    path: /rest-api/configurations/widget-configuration
    method: GET
    data_selector: response
- name: widget_configurations
  endpoint:
    path: /rest-api/configurations/widget-configuration
    method: GET
    data_selector: response
- name: GetCustomerBalance
  endpoint:
    path: /GetCustomerBalance
    method: GET
    data_selector: pointsBalance
    params: {}
- name: CreateCoupon
  endpoint:
    path: /CreateCoupon
    method: POST
    data_selector: code
    params: {}
- name: GetCustomerCoupons
  endpoint:
    path: /GetCustomerCoupons
    method: GET
    data_selector: ''
    params: {}
- name: GetRedemptionRules
  endpoint:
    path: /GetRedemptionRules
    method: GET
    data_selector: redemptionRules
    params: {}
- name: customer_notifications
  endpoint:
    path: /integrations/customer/{customerId}/notifications
    method: GET
    data_selector: notifications
    params:
      lang: en
- name: mark_notifications_read
  endpoint:
    path: /integrations/customer/{customerId}/notifications
    method: PUT
    data_selector: notificationsIds
    params: {}
- name: GetCustomerBalance
  endpoint:
    path: /GetCustomerBalance
    method: GET
    data_selector: pointsBalance
- name: CreateCoupon
  endpoint:
    path: /CreateCoupon
    method: POST
    data_selector: code
- name: GetCustomerCoupons
  endpoint:
    path: /GetCustomerCoupons
    method: GET
    data_selector: ''
- name: GetRedemptionRules
  endpoint:
    path: /GetRedemptionRules
    method: GET
    data_selector: redemptionRules
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: leaderboard
    params: {}
- name: customer_notifications
  endpoint:
    path: /integrations/customer/{customerId}/notifications
    method: GET
    data_selector: notifications
    params:
      lang: en
- name: mark_notifications_as_read
  endpoint:
    path: /integrations/customer/{customerId}/notifications/read
    method: PUT
    data_selector: null
    params: {}
- name: webhook_notifications
  endpoint:
    path: /webhooks/notifications
    method: POST
    data_selector: data
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: leaderboard
- name: notification
  endpoint:
    path: /gb-webhook/notification
    method: POST
    data_selector: body
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: notifications
- name: notification
  endpoint:
    path: /gb-webhook/notification
    method: POST
    data_selector: data
    params: {}
- name: Calculate Cashback
  endpoint:
    path: /calculate_cashback
    method: POST
    data_selector: totalPoints
- name: refund
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
    data_selector: refund
    params: {}
- name: calculate_cashback
  endpoint:
    path: /calculate_cashback
    method: POST
    data_selector: totalPoints
    params: {}
- name: Refund
  endpoint:
    path: /rest-api/transactions/cashback-and-redemptions
    method: POST
    data_selector: refundTransactionId
- name: create_customer
  endpoint:
    path: /rest-api/customers/customer-management
    method: POST
    data_selector: customer
    params: {}
- name: get_customer_balance
  endpoint:
    path: /rest-api/customers/customer-progress
    method: GET
    data_selector: balance
    params: {}
- name: create_order
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
    data_selector: order
    params: {}
- name: hold_points
  endpoint:
    path: /rest-api/transactions/hold-management
    method: POST
    data_selector: hold
    params: {}
- name: Generate Customer Hash
  endpoint:
    path: /rest-api/customers/customer-management/get-customer-hash
    method: POST
    data_selector: hash
- name: Get Redemption Configuration
  endpoint:
    path: /rest-api/configurations/reward-configurations/get-redemption-configurations
    method: GET
    data_selector: redemptionRules
- name: Hold Points
  endpoint:
    path: /rest-api/transactions/hold-management/post-hold-points
    method: POST
    data_selector: holdReference
- name: create_customer
  endpoint:
    path: /rest-api/customers/customer-management
    method: POST
    data_selector: records
- name: get_customer_balance
  endpoint:
    path: /rest-api/customers/customer-progress
    method: GET
    data_selector: records
- name: create_order
  endpoint:
    path: /rest-api/order/order-tracking
    method: POST
    data_selector: records
- name: hold_points
  endpoint:
    path: /rest-api/transactions/hold-management
    method: POST
    data_selector: records
- name: Retrieve Referral Program Configuration
  endpoint:
    path: /referral-program/configuration
    method: GET
    data_selector: referralMethod
    params: {}
- name: Retrieve Customer Referral History
  endpoint:
    path: /customer/referral-history
    method: GET
    data_selector: referredFriends
    params: {}
- name: deep_links
  endpoint:
    path: /rest-api/deep-links
    method: GET
    data_selector: deep_links
    params: {}
- name: Referral Program Configuration
  endpoint:
    path: /api/referral/configuration
    method: GET
    data_selector: referralMethod
- name: Customer Referral History
  endpoint:
    path: /api/referral/history
    method: GET
    data_selector: referredFriends
- name: create_job
  endpoint:
    path: /api/v4/integrations/batch/{jobId}
    method: DELETE
    data_selector: null
    params: {}
- name: get_job_status
  endpoint:
    path: /api/v4/integrations/batch/{jobId}
    method: DELETE
    data_selector: null
    params: {}
- name: stop_running_job
  endpoint:
    path: /api/v4/integrations/batch/{jobId}
    method: DELETE
    data_selector: null
    params: {}
- name: widget_deep_links
  endpoint:
    path: /widget/deep_links
    method: GET
    data_selector: deep_links
    params: {}
- name: create_job
  endpoint:
    path: /{jobId}
    method: DELETE
    data_selector: null
    params: {}
- name: get_job_status
  endpoint:
    path: /{jobId}
    method: DELETE
    data_selector: null
    params: {}
- name: stop_job
  endpoint:
    path: /{jobId}
    method: DELETE
    data_selector: null
    params: {}
- name: coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
- name: retrieve_customer_coupons
  endpoint:
    path: /integrations/customers/{customerId}/coupons
    method: GET
    data_selector: coupons
- name: validate_and_lock_coupon
  endpoint:
    path: /integrations/coupons/{code}/validate
    method: POST
    data_selector: coupon
- name: burn_coupon
  endpoint:
    path: /integrations/coupons/burn
    method: POST
- name: coupons
  endpoint:
    path: /rest-api/coupons
    method: GET
- name: retrieve_customer_coupons
  endpoint:
    path: /integrations/customers/{customerId}/coupons
    method: GET
    data_selector: coupons
    params: {}
- name: validate_and_lock_coupon
  endpoint:
    path: /integrations/coupons/{code}/validate
    method: POST
    data_selector: coupon
    params: {}
- name: burn_coupon
  endpoint:
    path: /integrations/coupons/burn
    method: POST
    data_selector: valid
    params: {}
notes:
- Gameball API employs safeguards to protect against sudden bursts of traffic, ensuring
  platform stability.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Customer events can be sent to Gameball via the Track Events API.
- Start tracking customer's orders on your platform upon order completion and successful
  payment.
- Referral link is generated by concatenating the configured website URL and the referral
  code.
- Use your account Test Key to authenticate your requests during development
- Swap to Production API Key once integration is completed and validated
- Gameball SDK for iOS enables tracking customer events and integrating referrals.
- Customer profile is created or updated with playerUniqueId.
- Device Token (FCM Token) is required for enabling push notifications.
- Tracked events can be app events or server-side events depending on how you would
  like to design your programs.
- Cashback rewarding and order tracking can be done via server side Order API.
- Use Cashback API for scenarios other than e-commerce order placement.
- Tracking referral requires Firebase and Firebase Dynamic Links SDKs installed into
  your app.
- Begin by installing the Gameball Android SDK into your app.
- This foundational step sets up the necessary tools and resources to seamlessly integrate
  Gameball features into your Android application.
- Gameball SDK uses Firebase Dynamic Links to track referrals and Firebase Messaging
  for sending push notifications.
- Gameball user profile gets created using the customerId.
- Use Test Key during development for authentication; swap to Production API Key after
  validation.
- Integrate Gameball push notifications to keep customers informed about updates,
  rewards, and activities.
- Fetch API is used for network communications.
- Conversion of response to JSON is needed in order to read the response.
- Gameball user profile gets created using the playerUniqueId. It is highly recommended
  to have the unique ID as an identifier that would NEVER be changed.
- Start sending your customers' events on your platform to Gameball.
- Gameball uses Firebase to deliver maximum experience in your app.
- During development, you can use your account Test Key to authenticate your requests.
  Once integration is completed and validate you can swap to Production API Key.
- Use this comprehensive checklist to ensure a smooth transition when taking your
  integration live. It helps you verify all components are working correctly, providing
  a flawless experience for your customers from day one.
- Make sure that you added the INTERNET permission in your application's AndroidManifest.xml
  and info.plist files
- Note that you need to have an initialized Firebase App to be able to use the Referral
  and Notifications features
- Unique customerId should never change to retain customer data.
- Requires setup of connected app in api
- Use your account Test Key to authenticate your requests during development.
- Once integration is completed and validated, you can swap to Production API Key.
- Integrate Gameball without using Gameball’s SDK.
- Gameball requires customers' profiles to be synced to track their progress and reward
  them accordingly.
- Customer events can be sent via the Track Events API.
- Track customer's orders for cashback and achievements.
- Points redemption is done with order placement using Order API
- A pre-step to that would be checking the customer's balance
- Gameball uses Firebase to generate dynamic links to support referrals.
- We’ve updated our terminology to make things clearer. Anywhere you previously saw
  the word 'Player,' you’ll now find 'Customer' in V4.
- Never share your Secret Key in publicly accessible areas, such as GitHub or client-side
  code.
- Send all requests from the server-side to prevent exposing the Secret Key on the
  client side.
- Enabling High Security Mode is recommended for clients with heightened security
  requirements.
- Customer Management API allows creation, updating, or deleting customer records.
- Customer Progress API provides insights into customer progress across various modules.
- Requires apiKey header for all requests
- Requires apikey and secretkey headers.
- Channel merging feature available.
- Rate limiting is applicable for API requests.
- Requires apikey and secretkey headers for certain endpoints.
- Requires apikey headers for access.
- The Order APIs are designed for e-commerce platforms or any system that needs to
  track customer orders efficiently.
- This API calculates the expected cashback points but does not perform any actual
  reward or action for the customer.
- Requires apiKey header for authentication.
- Transaction details include multiple types such as PaymentReward and Refund.
- The Payment APIs are designed for fintech, or any system that needs to track customer
  payments efficiently.
- This means that instead of making multiple API calls, you can rely on the Payment
  API to take care of it all in one go.
- Response includes details about points redeemed and rewarded for payments
- The Transactions API provides a powerful suite of tools to manage customer points
  and reward transactions within Gameball.
- Requires apikey and secretkey headers for security.
- Channel merging available to unify customer profiles.
- Channel merging available.
- Default hold time is 10 minutes, adjustable in the Gameball dashboard, with a maximum
  of 15 days and a minimum of 1 minute.
- 'Channel Merging Available: If your system uses different customer IDs across multiple
  channels, Gameball''s channel merging feature helps unify customer profiles.'
- API is effective only if SMS & OTP are enabled in your Gameball account.
- This API is effective only if SMS & OTP are enabled in your Gameball account.
- Channel merging available for unifying customer profiles.
- Requires apikey and secretkey headers
- Channel merging available for customer profiles
- Requires apiKey header for authentication
- Requires setup of apiKey header
- Referral rewards are granted based on specific events.
- Requires apiKey header
- Referral rewards can be configured per event.
- Coupon options include various discount types.
- This API provides the necessary settings to display a widget that aligns with your
  program’s branding.
- 'Security: Requires apiKey header'
- Each creation request supports up to 1,000 objects per request.
- Channel merging available, requires email or mobile based on configuration
- Channel merging available if system uses different customer IDs across multiple
  channels.
- Requires apiKey and secretKey headers.
- Webhooks provide real-time updates on events.
- Webhooks allow real-time updates when customer profiles change.
- Your webhook endpoint must be an HTTP address capable of processing event notifications.
- Ensure you implement verification to confirm that requests are coming from Gameball.
- Get to know how to enable or disable Real-Time Notifications for Referrals and other
  events.
- This webhook ensures your app can instantly act on notifications, keeping your customers
  informed and engaged.
- This webhook is triggered every time there’s an update to a customer’s profile
- This webhook is triggered every time there’s an update to a customer’s profile,
  ensuring your app stays in sync with the latest changes.
- Redemption adds value to the points customers earn by converting them into tangible
  benefits.
- We recommend that you follow the coupon system integration guide instead of using
  direct redemption since it is easier, safer and more smooth
- Integrating a couponing system with Gameball can help boost customer retention,
  attract new users, and encourage repeat purchases.
- Automatically triggers rewards based on purchase
- Recommended to follow the coupon system integration guide instead of using direct
  redemption.
- Integrate your custom-built couponing engine with Gameball to create a unique coupon
  experience.
- Leverage Gameball built-in couponing engine for easy coupon management.
- Coupon codes can be validated and locked for exclusive use during the session.
- Automatically triggers rewards based on order completion.
- Ensure only visible and active campaigns are displayed based on visibility and activation
  fields.
- The Calculate Cashback API triggers background calculations for potential rewards.
- Points can be held temporarily for a customer during shopping.
- Some objects may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in gameball
- Show customers their real-time progress and how close they are to reaching the next
  tier.
- Loyalty programs thrive when customers can easily see their rewards and understand
  their value.
- 'Dynamic Business Decisions: The configurations API ensures your UI remains consistent
  with any business decisions made through the Gameball dashboard without needing
  to redeploy your application.'
- 'No Code Changes Required: Simply use the flags returned by the API to control visibility
  in your UI, based on your current configuration.'
- The configurations API ensures your UI remains consistent with any business decisions
  made through the Gameball dashboard without needing to redeploy your application.
- No code changes required. Simply use the flags returned by the API to control visibility
  in your UI, based on your current configuration.
- The Gameball Widget simplifies the integration process by managing the UI and redemption
  flow.
- Ensure to validate points balance before redemption.
- Check coupon validity before applying at checkout.
- Pagination helps break notifications into manageable chunks.
- Gameball provides default notification options, such as in-app notifications and
  push notifications using Firebase for mobile apps.
- You should verify that the incoming request is a legit request from Gameball.
- Webhook verification is done using SHA1 hash in X-GB-Signature header.
- Channel merging may be a premium feature
- Gameball makes use of webhooks to notify your system whenever a notification needs
  to be sent.
- You should verify that the incoming request is a legit request from Gameball and
  not a malicious request that tries to spam your system.
- Each notification item in the posted data will contain the customer_id and locales
  with their titles and bodies.
- Channel merging may require setup with Gameball Support.
- API requires setup of OAuth2 credentials.
- Always include line items (productId & quantity) in refund requests.
- Uses OAuth2 with refresh token — requires setup of connected app in Gameball
- Integration allows for seamless redemption of loyalty points at checkout.
- Deep links can be added to any element that supports hyperlinks, such as text, images,
  menu items, buttons.
- If your store has a mobile app, ensure customers can log in and generate their QR
  code for in-store use.
- Customers with iOS devices can save their virtual pass directly to Apple Wallet.
- Android users can download their virtual pass into the PassWallet app.
- Referral programs reward both the existing customer and the new customer.
- Deep links can be added to any element that supports hyperlinks, such as text, images,
  menu items, and buttons.
- Before proceeding with the integration, ensure that your application links are properly
  set up in your Branch.io account.
- You must send the Gameball referral code captured from the link as GBReferral parameter
  in the registerPlayer method.
- Before proceeding with the integration, ensure that your custom link, deep link
  and universal linking are fully configured in your Adjust account with the appropriate
  redirection links.
- This API allows you to create or update multiple customer profiles in a single request.
- Rate limiting may apply to API calls.
- Gameball supports Branch.io as a dynamic link provider for referral programs.
- 'Before proceeding with the integration, ensure that your application links are
  properly set up in your Branch.io account. You need to configure the following details:
  Application Play Store link for Android, Application Apple Store link for iOS, Application
  default URL. These settings are essential to ensure that referral links redirect
  users correctly based on their device.'
- Gameball supports Adjust as a dynamic link provider for referral programs.
- To verify that your Adjust account is correctly set up to generate dynamic links,
  you can test it using the Adjust API.
- Requires setup of connected app in Gameball
- Coupons can be distributed as part of loyalty programs.
- Ensure to validate coupons at checkout to avoid misuse.
errors:
- '429 Too Many Requests: If the rate exceeds either the per-second or per-30s limit.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Error fetching FCM registration token: Check Firebase setup'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls'
- 'Rate limit exceeded: Throttle API calls or reduce frequency.'
- Error when customer registration fails.
- More informative HTTP status codes and detailed error messages
- '401 Unauthorized: Recheck API Key or Secret Key'
- 'AUTHENTICATION_ERROR (1XXX): Missing or invalid credentials'
- 'REQUEST_ERROR (2XXX): Issues with the format or content of the request'
- 'PAYLOAD_ERROR (3XXX): Issues in the request body'
- 'GENERAL_ERROR (4XXX): Non-specific errors'
- 'SERVER_ERROR (5XXX): Issues with the server processing the request'
- 'CONFIGURATIONS_ERROR (6XXX): Issues with the settings or configurations'
- 'CUSTOMER_ERROR (7XXX): Issues with the customer’s data'
- 'SUBSCRIPTION_ERROR (8XXX): Issues related to subscription plan'
- 'TRANSACTIONS_ERROR (9XXX): Issues during financial transactions'
- AUTHENTICATION_ERROR
- REQUEST_ERROR
- PAYLOAD_ERROR
- GENERAL_ERROR
- SERVER_ERROR
- CONFIGURATIONS_ERROR
- CUSTOMER_ERROR
- SUBSCRIPTION_ERROR
- TRANSACTIONS_ERROR
- '1000: Unauthorized (`401 Unauthorized`)'
- '1001: Secret Key Required (`401 Unauthorized`)'
- '1002: Forbidden (`403 Forbidden`)'
- '2000: Precondition Failed (`412 Precondition Failed`)'
- '2001: Concurrent Request In Progress(`422 Unprocessable Entity`)'
- '3000: Missing Arguments (`400 Bad Request`)'
- '3001: Null Arguments (`422 Unprocessable Entity`)'
- '3002: Not Supported Extension (`415 Unsupported Media Type`)'
- '3003: Invalid Value (`422 Unprocessable Entity`)'
- '3004: Not Achieved (`400 Bad Request`)'
- '3005: Body Hashed Invalid (`422 Unprocessable Entity`)'
- '3006: Name Length Invalid (`422 Unprocessable Entity`)'
- '3007: Name Already Exists (`422 Unprocessable Entity`)'
- '3008: Email Already Exists (`422 Unprocessable Entity`)'
- '3009: Inactive (`422 Unprocessable Entity`)'
- '3010: Invalid Leveling Method (`422 Unprocessable Entity`)'
- '3011: Limit Exceed (`422 Unprocessable Entity`)'
- '3012: Recaptcha Invalid (`422 Unprocessable Entity`)'
- '3013: Not Supported (`415 Unsupported Media Type`)'
- '3014: Read Only (`423 Locked`)'
- '3015: Edit Required (`423 Locked`)'
- '3016: Invalid Payload (`400 Bad Request`)'
- '3017: Event Not Found (`404 Not Found`)'
- '4000: Failed (`400 Bad Request`)'
- '4004: Not Found (`404 Not Found`)'
- '4500: Something Wrong (`400 Bad Request`)'
- '5000: Internal Server Error (`500 Internal Server Error`)'
- '5003: Service Unavailable (`503 Service Unavailable`)'
- '6000: Gameball Disabled (`422 Unprocessable Entity`)'
- '6001: Cashback Disabled (`422 Unprocessable Entity`)'
- '6002: Default Language Not Set (`422 Unprocessable Entity`)'
- '6003: Cannot Access Coupon Configurations (`403 Forbidden`)'
- '7000: Customer Not Found (`404 Not Found`)'
- '7001: Customer Already Exists (`422 Unprocessable Entity`)'
- '7002: Customer Already Referred (`422 Unprocessable Entity`)'
- '7003: Referral Code Not Found (`404 Not Found`)'
- '7004: Guest Identifier Already Exists (`422 Unprocessable Entity`)'
- '7005: Customer Already Referred (`422 Unprocessable Entity`)'
- '7006: Invalid Referral (`422 Unprocessable Entity`)'
- '8000: Feature Unavailable (`403 Forbidden`)'
- '9000: Transaction Type Non-Reversible (`422 Unprocessable Entity`)'
- '9001: Transaction Already Cancelled (`422 Unprocessable Entity`)'
- '9002: Transaction Not Found (`404 Not Found`)'
- '9003: Transaction Time Already Exists (`422 Unprocessable Entity`)'
- '9004: Transaction ID Already Exists (`422 Unprocessable Entity`)'
- '9005: Reversed Transaction Not Found (`404 Not Found`)'
- '9006: Transaction Hold Reference Not Found (`404 Not Found`)'
- '9007: Transaction Time Not Valid (`422 Unprocessable Entity`)'
- '9008: Insufficient Balance Points (`422 Unprocessable Entity`)'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Check your apiKey or secretkey'
- '404 Not Found: Ensure the customerId is correct'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check apikey and secretkey.'
- 'Invalid API Key: Ensure the apiKey is valid.'
- 'Unauthorized: Check that the apiKey and secretKey are included in the headers.'
- '401 Unauthorized: Ensure apiKey and secretkey are included in headers.'
- '401 Unauthorized: Check API key and secret key'
- Requires apikey and secretkey headers.
- '401 Unauthorized: Recheck API key or secret key'
- '401 Unauthorized: Check API key'
- 'Security: Requires apiKey and secretKey headers.'
- '401 Unauthorized: Check apiKey and secretKey'
- '204 - No Content: Successfully stopped the batch job.'
- 'Non-2XX status code: Gameball will retry delivery of webhooks up to three times.'
- 'Non-2XX status code: Gameball will retry delivery up to three times'
- 'INVALID_REQUEST: Check the request parameters.'
- 'COUPON_EXPIRED: The coupon code has expired.'
- 'INSUFFICIENT_POINTS: Not enough points available for redemption.'
- 'INVALID_COUPON: Coupon code is not valid or has already been used.'
- 'INSUFFICIENT_POINTS: Customer does not have enough points to redeem.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '400 Bad Request: Ensure request body is correctly structured.'
- 'Invalid customerId: Ensure the customer ID is correct.'
- 'Missing line items: Include productId, quantity, and price for accurate calculations.'
- 'InvalidReferral: Check the referral link or codes provided.'
- 'ReferralNotFound: Ensure the referred customer is registered.'
- '200 - Ok: Job stopped successfully'
- 'Invalid coupon code: Ensure the coupon code is correct and active'
- 'Usage limit exceeded: This coupon has reached its usage limit'
- 'Coupon not available: The coupon cannot be applied at this time'
- '400 Bad Request: Check the request payload and parameters.'
- '401 Unauthorized: Ensure API key and secret key are valid.'
- '404 Not Found: Check if the coupon code or customer ID is correct.'
auth_info:
  mentioned_objects:
  - customer.notification.push
  - customer.profile.updated
  - OauthToken
  - AuthProvider
  - ApiKey
  - SecretKey
client:
  base_url: https://api.gameball.co/api/v4.0
  auth:
    type: apikey
    location: header
    header_name: apiKey
source_metadata: null
