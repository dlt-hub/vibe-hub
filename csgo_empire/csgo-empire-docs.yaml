resources:
- name: transaction_history
  endpoint:
    path: /user/transactions
    method: GET
    data_selector: json
    params:
      page: int32
- name: create_deposit
  endpoint:
    path: /trading/deposit
    method: POST
    data_selector: success
- name: check_deposit_status
  endpoint:
    path: /check-deposit-status
    method: GET
    data_selector: success
- name: cancel_deposit
  endpoint:
    path: /cancel-deposit
    method: POST
    data_selector: success
- name: get_active_trades
  endpoint:
    path: /reference/get-active-trades
    method: GET
- name: get_active_auctions
  endpoint:
    path: /reference/get-active-auctions
    method: GET
- name: get_trade
  endpoint:
    path: /reference/get-trade
    method: GET
- name: transaction_history
  endpoint:
    path: /reference/transaction-history
    method: GET
- name: tipping
  endpoint:
    path: /user/tip
    method: POST
    data_selector: data
    params: {}
- name: blocked_users
  endpoint:
    path: /trading/block-list
    method: GET
    data_selector: array of objects
- name: mark_as_received
  endpoint:
    path: /trading/deposit/{tradeoffer_id}/received
    method: POST
- name: metadata
  endpoint:
    path: /metadata/socket
    method: GET
- name: active_trades
  endpoint:
    path: /trading/user/trades
    method: GET
    data_selector: data.deposits
    params: {}
- name: active_auctions
  endpoint:
    path: /trading/user/auctions
    method: GET
    data_selector: active_auctions
- name: trade
  endpoint:
    path: /trading/user/trade/{depositId}/{type}
    method: GET
    data_selector: response
    params: {}
- name: settings
  endpoint:
    path: /trading/user/settings
    method: POST
- name: blocking_user
  endpoint:
    path: /trading/block-list/{steam_id}
    method: POST
- name: unblocking_user
  endpoint:
    path: /trading/unblock-list/{steam_id}
    method: DELETE
- name: view_blocked_users
  endpoint:
    path: /trading/block-list
    method: GET
- name: unblock_user
  endpoint:
    path: /api/v2/trading/block-list/{steam_id}
    method: DELETE
    data_selector: json
- name: inventory
  endpoint:
    path: /trading/user/inventory
    method: GET
    data_selector: data
- name: check_deposit_status
  endpoint:
    path: /trading/deposit/status/{trackingCode}
    method: GET
    data_selector: data
    params: {}
- name: cancel_deposit
  endpoint:
    path: /trading/deposit/{deposit_id}/cancel
    method: POST
    data_selector: success
- name: cancel_multiple_deposits
  endpoint:
    path: /deposit/cancel
    method: POST
    data_selector: object
    params: {}
- name: sell_now
  endpoint:
    path: /trading/deposit/{deposit_id}/sell
    method: POST
- name: update_listing_price
  endpoint:
    path: /trading/deposit/{depositIdOrAssetId}
    method: PATCH
    data_selector: success
    params: {}
- name: bulk_update_listing_prices
  endpoint:
    path: /trading/deposit/bulk
    method: PATCH
- name: listed_items
  endpoint:
    path: /trading/items
    method: GET
    data_selector: data
    params:
      per_page: '10'
      page: '1'
- name: Get Depositor Stats
  endpoint:
    path: /trading/deposit/{deposit_id}/stats
    method: GET
- name: create_withdrawal
  endpoint:
    path: /trading/deposit/{deposit_id}/withdraw
    method: POST
- name: create_withdrawal
  endpoint:
    path: /trading/deposit/{deposit_id}/withdraw
    method: POST
    data_selector: object
- name: place_bid
  endpoint:
    path: /trading/deposit/{deposit_id}/bid
    method: POST
- name: dispute_trade
  endpoint:
    path: /trading/deposit/{tradeoffer_id}/dispute
    method: POST
- name: place_bid
  endpoint:
    path: /trading/deposit/{deposit_id}/bid
    method: POST
- name: dispute_trade
  endpoint:
    path: /trading/deposit/{tradeoffer_id}/dispute
    method: POST
- name: metadata
  endpoint:
    path: /reference/metadata
    method: GET
- name: active_trades
  endpoint:
    path: /reference/get-active-trades
    method: GET
- name: active_auctions
  endpoint:
    path: /reference/get-active-auctions
    method: GET
- name: trade
  endpoint:
    path: /reference/get-trade
    method: GET
- name: settings
  endpoint:
    path: /reference/settings
    method: POST
- name: tipping
  endpoint:
    path: /reference/tipping
    method: POST
- name: transaction_history
  endpoint:
    path: /reference/transaction-history
    method: GET
- name: metadata
  endpoint:
    path: /api/v2/metadata/socket
    method: GET
    data_selector: data
    params: {}
- name: active_trades
  endpoint:
    path: /reference/get-active-trades
    method: GET
- name: transaction_history
  endpoint:
    path: /reference/transaction-history
    method: GET
- name: websocket_events
  endpoint:
    path: /reference/websocket-events
    method: GET
    data_selector: events
- name: deposit_failed
  endpoint:
    path: /deposit_failed
    method: GET
    data_selector: data
    params: {}
- name: deposit_failed
  endpoint:
    path: /deposit_failed
    method: GET
    data_selector: data
    params: {}
- name: update_token
  endpoint:
    path: /api/v2/trading/automation/access-token
    method: PUT
- name: update_token
  endpoint:
    path: /trading/automation/access-token
    method: PUT
    data_selector: success
- name: get_status
  endpoint:
    path: /get-status
    method: GET
    data_selector: status
- name: delete_token
  endpoint:
    path: /delete-token
    method: DELETE
    data_selector: success
- name: get_status
  endpoint:
    path: /trading/automation/status
    method: GET
    data_selector: data
- name: get_status
  endpoint:
    path: /trading/automation/status
    method: GET
    data_selector: data
    params: {}
- name: check_trades
  endpoint:
    path: /trading/automation/check-trades
    method: POST
- name: check_trades
  endpoint:
    path: /trading/automation/check-trades
    method: POST
    data_selector: object
    params: {}
- name: delete_token
  endpoint:
    path: /api/v2/trading/automation/access-token
    method: DELETE
- name: delete_token
  endpoint:
    path: /api/v2/trading/automation/access-token
    method: DELETE
    data_selector: object
notes:
- It is strongly recommended that Websocket be used instead of polling API endpoints
  to avoid rate limits.
- You should be chunking these requests into groups of max 20, but it's not required.
- Individual deposit states will be announced to the websocket.
- The URL for this request expired after 30 days.
- To authenticate you need to emit identify event with the uid and token parameters.
- To authenticate, emit identify event with uid and token.
- Submit default filters to receive item updates.
- Connecting to the socket requires Socket.IO v4.x client
- Token is valid 30s
- Uses WebSocket for real-time updates
- All websocket events can be either a single item OR an array containing multiple
  items.
- This token is only valid for 24 hours, so you need to repeat this once it expires.
- The token is only valid for 24 hours, so you need to repeat this once it expires.
- Your account must have an active token for this to work.
errors:
- '400'
- '429'
- '429: Too Many Requests'
- '400 Bad Request: Check the request body for correct parameters.'
- '429: Exceeding rate limits'
- '400: Bad Request'
- 400 Bad Request
- 'Socket disconnected: reason'
- 'Connect Error: data'
- 'WS Error: data'
- '400 Bad Request: "Sticker | device (Gold) | Boston 2018" (ID 3517043328) already
  exists in another deposit by you. Please select a different item.'
- '422: Unprocessable Entity'
- '400: invalid_api_token'
auth_info:
  mentioned_objects: []
client:
  base_url: https://csgoempire.com/api/v2
  headers:
    Accept: application/json
source_metadata: null
