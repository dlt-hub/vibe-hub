resources:
- name: Property
  endpoint:
    path: /integration-api-property-search
    method: GET
- name: Availability
  endpoint:
    path: /integration-api-availability-multi
    method: GET
- name: Bookings
  endpoint:
    path: /integration-api-booking-search
    method: GET
- name: availability_search
  endpoint:
    path: /
    method: POST
    data_selector: results
    params:
      checkin: required
      checkout: optional
      nights: optional
      adults: optional
      children: optional
      infants: optional
      rooms: optional
- name: language_locale
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params:
      lang: es
- name: currency_conversion
  endpoint:
    path: /
    method: GET
    params:
      currency: GBP
- name: booking_code
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params:
      bkcode: EXAMPLE
- name: voucher
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params:
      voucher: voucher
- name: promotions
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params:
      offer: special_offer
      rate: '123'
      room: STD
- name: booking_retrieval
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params:
      res_id: res_id=10001235
      email: email=john.smith@yahoo.gr
- name: view
  endpoint:
    path: /?view={view}
    method: GET
    data_selector: view
    params:
      view: amend
- name: goto
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params:
      goto: home
- name: referer_override
  endpoint:
    path: /overrides/site-integration
    method: GET
    data_selector: referer
    params: {}
- name: landing_url
  endpoint:
    path: /?landingUrl=https://www.myhotelwebsite.com
    method: GET
    data_selector: landingUrl
    params: {}
- name: weekly_calendar
  endpoint:
    path: /widgets/weekly-calendar/
    method: GET
- name: Weekly Calendar
  endpoint:
    path: /integration-widgets-weeklycalendar-generator
    method: GET
- name: availability
  endpoint:
    path: /availability
    method: GET
    data_selector: response
    params: {}
- name: property
  endpoint:
    path: /property
    method: GET
- name: property_info
  endpoint:
    path: /property/{propertycode}
    method: GET
    data_selector: data
    params:
      include: billing_info
- name: room
  endpoint:
    path: /room/{propertycode}
    method: GET
    data_selector: data.rooms
    params: {}
- name: room_info
  endpoint:
    path: /room/{propertycode}/{roomcode}
    method: GET
    data_selector: data
    params: []
- name: rate
  endpoint:
    path: /rate/{propertycode}
    method: GET
    data_selector: data.rates
    params: {}
- name: rate_with_room
  endpoint:
    path: /rate/{propertycode}/{roomcode}
    method: GET
    data_selector: data.rates
    params: {}
- name: rates
  endpoint:
    path: /rate/DEMO
    method: GET
    data_selector: data.rates
    params: {}
- name: rate_info
  endpoint:
    path: /rate/{propertycode}/{roomcode}/{rateid}
    method: GET
    data_selector: data
    params: {}
- name: extras
  endpoint:
    path: /extra/{propertycode}
    method: GET
    data_selector: data.extras
    params:
      active: 'true'
- name: availability
  endpoint:
    path: /availability
    method: GET
    data_selector: data.hotels
    params: {}
- name: availability
  endpoint:
    path: /availability/{propertycode}
    method: GET
    data_selector: data
- name: availability
  endpoint:
    path: /availability/DEMO
    method: GET
    data_selector: rates
    params: {}
- name: availability_breakdown
  endpoint:
    path: /availability/{propertycode}/breakdown
    method: GET
    data_selector: data
    params: {}
- name: calendar_availability
  endpoint:
    path: /availability/{propertycode}/calendar
    method: GET
    data_selector: data.days
    params:
      fromd: '2025-09-25'
      tod: '2025-10-02'
- name: availability
  endpoint:
    path: /availability/{propertycode}/flexible-calendar
    method: GET
    data_selector: data.days
    params:
      year: 2025
      month: 9
      nights: 1
- name: best_available_rate
  endpoint:
    path: /bar/{propertycode}
    method: GET
    data_selector: data
    params: {}
- name: extras_availability
  endpoint:
    path: /availability/{propertycode}/extras/{rateid}
    method: GET
    data_selector: extras
    params:
      checkin: '2025-09-25'
      checkout: '2025-09-26'
- name: per_room_type
  endpoint:
    path: /ical/{propertycode}-{roomcode}.ics
    method: GET
- name: entire_property
  endpoint:
    path: /ical/{propertycode}.ics
    method: GET
- name: specific_room_types
  endpoint:
    path: /ical/{propertycode}.ics?types=RM1,RM2,etc
    method: GET
- name: offers
  endpoint:
    path: /offers
    method: GET
    data_selector: data.offers
    params: {}
- name: offers
  endpoint:
    path: /offers/{propertycode}
    method: GET
    data_selector: data.offers
    params: {}
- name: offer_information
  endpoint:
    path: /offers/{propertycode}/{offerid}
    method: GET
    data_selector: data
    params: {}
- name: booking
  endpoint:
    path: /book/{propertycode}
    method: POST
    data_selector: data
    params: {}
- name: purge_booking
  endpoint:
    path: /purge/{res_id}
    method: GET
    data_selector: data.result
    params: []
- name: cancel_booking
  endpoint:
    path: /reservation/cancel/{res_id}
    method: POST
    data_selector: data
    params:
      confirmation_email: confirmation_email
      reason: reason
- name: confirmation_email
  endpoint:
    path: /reservation/confirmation_email
    method: POST
    data_selector: data.result
    params:
      res_id: required
      email: required
- name: reservation
  endpoint:
    path: /reservation
    method: GET
    data_selector: data.reservations
    params:
      maxrows: 100
      pageNo: 1
      order: DESC
      verbose: 0
- name: booking
  endpoint:
    path: /reservation/{res_id}
    method: GET
    data_selector: data
    params: []
- name: list_pending_bookings
  endpoint:
    path: /reservation/new
    method: GET
    data_selector: reservations
- name: sync_booking
  endpoint:
    path: /reservation/sync/{res_id}
    method: POST
- name: reservation_new
  endpoint:
    path: /reservation/new
    method: GET
    data_selector: records
- name: reservation_sync
  endpoint:
    path: /reservation/sync/{res_id}
    method: GET
    data_selector: records
- name: sources
  endpoint:
    path: /sources
    method: GET
    data_selector: data.sources
    params: {}
- name: voucher_bundle
  endpoint:
    path: /voucher
    method: GET
    data_selector: ''
- name: voucher_codes
  endpoint:
    path: /voucher/{bundle_id}
    method: GET
    data_selector: '[0]'
    params: {}
- name: voucher_code
  endpoint:
    path: /voucher/{bundle_id}/{voucher_code}
    method: GET
    data_selector: code
- name: create_voucher_code
  endpoint:
    path: /voucher/{bundle_id}/{voucher_code}
    method: POST
    data_selector: flag
- name: delete_voucher_code
  endpoint:
    path: /voucher/{bundle_id}/{voucher_code}
    method: DELETE
    data_selector: msg
- name: performance_per_day
  endpoint:
    path: /statistics/performance_per_day/{propertycode}
    method: GET
    data_selector: data.stats
    params:
      from: '2025-09-18'
      to: '2025-10-18'
- name: performance_summary
  endpoint:
    path: /statistics/performance_summary/{propertycode}
    method: GET
    data_selector: data.summary
    params:
      book_from: '2025-09-17'
      book_to: '2025-09-18'
- name: performance_per_country
  endpoint:
    path: /statistics/performance_per_country/{propertycode}
    method: GET
    data_selector: data.stats
    params:
      from: '2025-09-18'
      to: '2025-10-18'
notes:
- All methods require the user to be logged in.
- Authorization requires Basic HTTP access authentication.
- The only required parameter is CHECKIN. Please, choose to use either CHECKOUT or
  NIGHTS, never both.
- Do not forget to replace example.reserve-online.net in the examples below with the
  real booking engine hostname.
- The URL including the bkcode parameter should not be visible on public web pages
  or other publicly accessible resources.
- We only store the domain name of the referer. Using a hidden form field is strongly
  recommended.
- Property, booking source, and other official WebHotelier partner domains are whitelisted
  by default.
- The height should be no smaller than 240px for the calendar widget to fit.
- The width should be no smaller than 700px for the weekly calendar to fit.
- The height should be no smaller than 980px for the weekly calendar to fit.
- Basic authentication is used with username and password.
- This method is only accessible using a multi-property (Source or Travel Agent) API
  account.
- Only 'billing_info' can be included for B2B API accounts.
- The API returns a list of rates available for a property.
- The rate information method returns all available data for a rate.
- These info may be used only for presentation reason, or for mapping with 3rd party
  systems.
- Use either checkout or nights, never both. Checkout parameter takes precedence if
  both present.
- Use either party or rooms + adults + children + infants, never both. Party parameter
  takes precedence if both present.
- Use Flexible Calendar Availability for guaranteed results.
- This API method is computationally expensive. Heavy use of caching is required.
- Violations will result in API account ban.
- 'For performance reasons, the following restrictions apply: Month View returns availability
  information for two months; Stepped View returns up to 60 results. Maximum date
  range cannot exceed 1 year.'
- party parameter takes precedence if both present.
- The iCal format is primarily suitable for Villas, Apartments, etc. However, technically
  it can also be used for individual hotel room types.
- For best results, you should only use iCal in vacation rental listing sites when
  no other integration options are available.
- This method is only accessible using a Source-bound API account.
- Do not cache the result of this method for more than 24 hours, in order to always
  have up-to-date data.
- 'Offer information will be returned even if the offer has expired. The field status
  of the response data indicates if the offer is still active: 1 = Active, 0 = Expired.'
- This method is only available for 60 minutes after a successful booking.
- Channel bookings can be distinguished by the channelstream flag in the response.
- You should always import and uniquely distinguish a booking based on the WebHotelier
  confirmation number.
- This method is only accessible using a Hotelier API account.
- You MUST not call this method more often than every 5 minutes.
- This method MUST not be called simultaneously by more than one thread or process
  for the same property, to avoid unexpected results.
- A secure (HTTPS) endpoint is required
- PULL interval of 1 hour is recommended for low traffic properties
- A maximum of 1000 voucher codes may be returned by this method.
- This method is only accessible using a Hotelier or Operator API account.
errors:
- Error if you do not make your request with the correct method.
- 'OK: The request completed successfully.'
- 'NO_HOTELS_FOUND: No properties found in specified location.'
- 'INVALID_METHOD: Method requested is not supported (e.g. POST is not supported,
  use GET).'
- 'INVALID_PARAM: When missing or invalid request parameters are passed. Check the
  *error_msg* for details.'
- 'ZERO_RESULTS_GEO: Location not found (*returned by our Geocoding provider*).'
- 'NOT_ALLOWED_GEO: Geocoding query for country/continent is not allowed.'
- 'NO_AUTH: No authentication header found.'
- 'INVALID_AUTH: Invalid username or password.'
- 'FORBIDDEN: The credentials are invalid.'
- 'INTERNAL_ERROR: Internal service error. This is usually an outage of an internal
  service or a bug in our code and we will be notified immediately.'
- 'ERROR_GEO: Invalid geocoding query'
- 'http_code: 200 - OK'
- 'http_code: 400 - Bad Request'
- 'http_code: 401 - Unauthorized'
- 'NO_AVAILABILITY: No available rooms found to satisfy your query.'
- 'INTERNAL_ERROR: Internal service error. This is usually a bug in our code and we
  will be notified immediately.'
- 'INVALID_RESPONSE_TYPE: The response type is not supported (e.g. when requesting
  json when only xml is supported).'
- 'INVALID_PARAM: When missing or invalid request parameters are passed. Check the
  error_msg for details.'
- 'GEO_INVALID_REQUEST: The location parameter is invalid (returned by our Geocoding
  provider).'
- 'GEO_OVER_QUOTA: You cannot make any more location queries (returned by our Geocoding
  provider).'
- 'GEO_NO_RESULTS: Location not found (returned by our Geocoding provider).'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'http_code: 200'
- 'error_code: OK'
- 'http_code: 200, error_code: OK'
- 'http_code: 400, error_code: BAD_REQUEST'
- '400 Bad Request: Check the parameters and their values'
- '401 Unauthorized: Ensure the API account is properly set up'
- '404 Not Found: Verify the endpoint URL'
- 'http_code: 200: OK'
- 'error_msg: '
- 'INVALID_PARAM: Parameter [email] can not be empty'
- 'ALLOT_DEPLETED: Availability depleted. Booking cannot continue.'
- 'INVALID_PRICE: Pricing passed does not match actual booked price. Pricing may have
  changed during booking.'
- 'http_code: 200, error_code: OK, error_msg: '''''
- '200 OK: Must return this status immediately'
- Delay may cause account ban
- '404: Voucher code does not exist'
- '500: Voucher could not be deleted'
- '409: Voucher code already exists'
- '410: Voucher code did not exist or was already deleted'
- '401 Unauthorized: Recheck API account permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://rest.reserve-online.net
  auth:
    type: Basic
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
