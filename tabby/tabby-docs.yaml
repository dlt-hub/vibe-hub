resources:
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{id}
    method: GET
    data_selector: header
    params: {}
- name: checkout_session
  endpoint:
    path: /api-reference/checkout/create-a-session
    method: POST
- name: payment
  endpoint:
    path: /api-reference/payments/retrieve-a-payment
    method: GET
- name: webhook
  endpoint:
    path: /api-reference/webhooks/register-a-webhook
    method: POST
- name: dispute
  endpoint:
    path: /api-reference/disputes/get-disputes-list
    method: GET
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: checkout
  endpoint:
    path: /api/v2/checkout
    method: POST
    data_selector: status
- name: payment
  endpoint:
    path: /api/v2/payments/{payment.id}
    method: GET
    data_selector: status
- name: captures
  endpoint:
    path: /api/v2/payments/{payment.id}/captures
    method: POST
- name: Checkout Session
  endpoint:
    path: /pay-in-4-custom-integration/checkout-flow
    method: POST
    data_selector: status
- name: payment_statuses
  endpoint:
    path: /pay-in-4-custom-integration/payment-statuses
    method: GET
    data_selector: statuses
- name: payment_verification
  endpoint:
    path: /api-reference/payments/retrieve-a-payment
    method: GET
- name: payment_capture
  endpoint:
    path: /api-reference/payments/capture-a-payment
    method: POST
- name: payment_refund
  endpoint:
    path: /api-reference/payments/refund-a-payment
    method: POST
- name: webhook
  endpoint:
    path: /pay-in-4-custom-integration/webhooks
    method: POST
    data_selector: payload
- name: tabby_promo_snippet
  endpoint:
    path: /checkout.tabby.ai/tabby-promo.js
    method: GET
    data_selector: snippet
    params: {}
- name: create_session
  endpoint:
    path: /api/v2/checkout
    method: POST
    data_selector: session
    params: {}
- name: retrieve_payment
  endpoint:
    path: /api/v2/payments/{payment.id}
    method: GET
    data_selector: payment_status
    params: {}
- name: cancel_session
  endpoint:
    path: /api/v2/checkout/{id of session}/cancel
    method: POST
    data_selector: cancel_status
    params: {}
- name: create_session
  endpoint:
    path: /api/v2/checkout
    method: POST
    data_selector: payment
    params: {}
- name: send_payment_link
  endpoint:
    path: /api/v2/checkout/{id of session}/send_hpp_link
    method: POST
    data_selector: status
    params: {}
- name: retrieve_payment_status
  endpoint:
    path: /api/v2/payments/{payment.id}
    method: GET
    data_selector: status
    params: {}
- name: cancel_session
  endpoint:
    path: /api/v2/checkout/{id of session}/cancel
    method: POST
    data_selector: status
    params: {}
- name: create_session
  endpoint:
    path: /api/v2/checkout
    method: POST
    data_selector: session
    params: {}
- name: retrieve_payment
  endpoint:
    path: /api/v2/payments/{id}
    method: GET
    data_selector: payment
    params: {}
- name: checkout_session
  endpoint:
    path: /api/v2/checkout
    method: POST
    data_selector: id
    params: {}
- name: checkout_session
  endpoint:
    path: /api/v2/checkout/{id}
    method: GET
    data_selector: session
    params: {}
- name: create_session
  endpoint:
    path: /api-reference/checkout/create-a-session
    method: POST
- name: retrieve_checkout_session
  endpoint:
    path: /api-reference/checkout/retrieve-an-existing-checkout-session
    method: GET
- name: retrieve_payment
  endpoint:
    path: /api-reference/payments/retrieve-a-payment
    method: GET
- name: payment
  endpoint:
    path: /api/v2/payments/{id}
    method: GET
    data_selector: payment
    params: {}
- name: update_payment
  endpoint:
    path: /api/v2/payments/{id}
    method: PUT
- name: retrieve_payment
  endpoint:
    path: /api/v2/payments/{id}
    method: GET
- name: capture_payment
  endpoint:
    path: /api/v2/payments/capture
    method: POST
- name: refund_payment
  endpoint:
    path: /api/v2/payments/refund
    method: POST
- name: close_payment
  endpoint:
    path: /api/v2/payments/close
    method: POST
- name: list_all_payments
  endpoint:
    path: /api/v2/payments
    method: GET
- name: capture_payment
  endpoint:
    path: /api/v2/payments/{id}/captures
    method: POST
    data_selector: id
    params: {}
- name: refund_payment
  endpoint:
    path: /api/v2/payments/{id}/refunds
    method: POST
    data_selector: refunds
- name: close_payment
  endpoint:
    path: /api/v2/payments/{id}/close
    method: POST
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params:
      created_at__gte: ''
      created_at__lte: ''
      limit: ''
      status: ''
      offset: ''
- name: webhook
  endpoint:
    path: /api/v1/webhooks
    method: POST
    data_selector: header
    params: {}
- name: retrieve_webhook
  endpoint:
    path: /api/v1/webhooks
    method: GET
    data_selector: header
    params: {}
- name: webhooks
  endpoint:
    path: /api/v1/webhooks
    method: GET
    data_selector: webhooks
- name: webhook
  endpoint:
    path: /api/v1/webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: remove_webhook
  endpoint:
    path: /api/v1/webhooks/{id}
    method: DELETE
- name: disputes
  endpoint:
    path: /api/v1/disputes
    method: GET
    data_selector: disputes
    params: {}
- name: dispute
  endpoint:
    path: /api/v1/disputes/{disputeId}
    method: GET
    data_selector: dispute
- name: approve_disputes
  endpoint:
    path: /api/v1/disputes/approve
    method: POST
    data_selector: disputes
- name: disputes
  endpoint:
    path: /api/v1/disputes/challenge
    method: POST
    data_selector: disputes
- name: upload_attachment
  endpoint:
    path: /api/v1/disputes/attachments/upload
    method: POST
    data_selector: id
notes:
- Tabby provides a single environment for both integration and live launch at api.tabby.ai.
- Payments can be created in test mode using Test API keys from merchants’ DEV and
  Stage environments.
- Tabby works on the Salla platform for the KSA only with SAR as currency.
- Tabby works on the Salesforce Commerce Cloud platform for all supported countries.
- Make sure everything is implemented correctly with a few test cases before requesting
  live keys.
- Payments in statuses like CREATED, AUTHORIZED, REJECTED, and EXPIRED are shown or
  not shown on Merchant Dashboard based on their status.
- Webhooks are required for status change notifications
- Session expires after 20 minutes
- A secret key is required for using the Disputes API.
- Testing can also be done on live payments only.
- Webhooks are asynchronous, their order is not guaranteed, and idempotency might
  lead to a duplicate notification of the same event type.
- It is an expected behaviour that webhooks return payment status in lower case.
- Session expires after 20 minutes since creation.
- Tabby session expires after 20 minutes since creation.
- Full testing is required for all Custom API and SFCC Integrations, and is optional
  for Magento and OpenCart Integrations.
- Ensure that you’ve added snippets on the Product and Cart pages.
- Uses OAuth2 with Bearer token for authorization
- Session creation requires a payload with specific fields.
- Only 20 disputes can be challenged within a single request.
- Only disputes with status ‘new’ might be challenged.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: Check the webhook ID provided'
- '500 Internal Server Error: Retry the request after some time'
- 401 Not authorized
- '401 Not authorized: If the credentials are missing or wrong.'
- 'Cancellation: You aborted the payment. Please retry or choose another payment method.'
- 'Failure: Sorry, Tabby is unable to approve this purchase. Please use an alternative
  payment method for your order.'
- '400 error: Capturing payment in status other than ''AUTHORIZED'''
- No response or a response other than 200 indicates an error to Tabby.
- '400 Bad Request: session is finalized'
- '400 Bad Request: Check the request format and required fields'
- '401 Unauthorized: Ensure the token is valid'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Verify the endpoint and resource ID'
- '500 Internal Server Error: Try again later or contact support'
- '400 Bad Request: Check the request body for errors'
- '401 Unauthorized: Recheck the authorization token'
- '403 Forbidden: Ensure you have permission to access this resource'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Retry the request later'
- 400 Bad Request
- 401 Unauthorized
- 404 Not Found
- 500 Internal Server Error
- '400 Bad Request: Invalid request format'
- '401 Unauthorized: Invalid or missing authentication'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Payment ID does not exist'
- '500 Internal Server Error: Unexpected error occurred'
- 403 Forbidden
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '409: Conflict'
- '500: Internal Server Error'
- '400'
- '401'
- '403'
- '404'
- '500'
auth_info:
  mentioned_objects:
  - Bearer authentication
client:
  base_url: https://api.tabby.ai
  auth:
    type: Bearer
    location: header
    header_name: Authorization
  headers:
    X-Merchant-Code: <x-merchant-code>
source_metadata: null
