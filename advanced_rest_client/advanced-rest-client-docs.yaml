resources:
- name: http_requests_history
  endpoint:
    path: /using-arc/history
    method: GET
    data_selector: requests
    params: {}
- name: HTTP Requests History
  endpoint:
    path: /using-arc/history
    method: GET
    data_selector: requests
    params: {}
- name: saved_requests
  endpoint:
    path: /saved_requests
    method: GET
- name: saved_requests
  endpoint:
    path: /saved_requests
    method: GET
    data_selector: requests
    params: {}
- name: profile
  endpoint:
    path: /exchange/api/v1/profile
    method: GET
- name: profile
  endpoint:
    path: /exchange/api/v1/profile
    method: GET
    data_selector: records
    params: {}
- name: set_cookie_action
  endpoint:
    path: /arc-actions/introduction/set-cookie-action
    method: GET
    data_selector: cookie
    params: {}
- name: cookie
  endpoint:
    path: /set-cookie
    method: POST
    data_selector: cookieData
    params: {}
notes:
- API Console has a different user interface compared to ARC's normal view.
- Do not export to Google Drive as the desktop client don't have access to the data
  created by Chrome application.
- GET and HEAD methods cannot define a body on a request.
- The GET operation should not carry the body.
- Authorization configuration is described in the related document.
- GET operation is not supported in ARC because all web clients don't support it.
- Supports P12 and PEM certificates.
- Client certificates are stored in the application's internal storage.
- Variables are used in all request fields (method, URL, headers, body) and allow
  defining a value in a global scope that is inserted in place when making a request.
- Environments are the way of organizing variables into a namespace.
- Reads host rules from the OS' hosts file.
- 'New in version 17: Read host rules from the OS'' hosts file.'
- Request action only allows you to set a value on a variable before the request is
  made.
- This value is not stored in the data store but rather in memory only.
- Currently request action only allows you to set a value on a variable before the
  request is made.
- ARC 14 does not allow to define workspace variables in application interface. Variables
  can be added by editing generated file.
- ARC 14 does not allow to define workspace variables in application interface.
- All input fields are optional.
- By default when you make an HTTP request the application stores the request and
  the response data in internal history.
- You can disable history in application settings.
- Saved requests will be removed in version 18.
- Saved requests planned to be removed in version 18 release.
- Some proxies require authentication.
- Some proxies require authentication. If your proxy needs user credentials, enter
  the Proxy authentication option in the Proxy settings.
- By default, the application automatically downloads the next stable release of the
  application and installs it when you close and open the application again.
- When you disable the 'Automatically download and install updated' the application
  won't install updates automatically. However, it will check for updates in the background
  and will notify you about a new version.
- Uses OAuth2 with implicit grant type — requires setup of connected app in API
- After login, access token is stored as AnypointToken variable
- Uses OAuth2 with implicit grant type.
- 'ARC shows additional non-standard status code: 0 (zero). It is reported when the
  application wasn''t able to establish a connection to the server.'
- Actions by default runs synchronously. This means that the request is being made
  after all request actions finish.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- No specific setup required for authentication
- The main, beta, and alpha branches have CI scripts that perform a build once a branch
  is merged with them.
- For the Windows and macOS builds the builder signs the application with configured
  certificates.
- The macOS build is notarized with Apple notarization service.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 401 - Unauthorized access to the resource. It usually means that authorization data
  are missing, invalid, or expired.
- 404 - Resource not found under given URI
- 500 - A server encountered a problem that resulted in an exception; the request
  processing was aborted
- 503 - The server is not yet ready to accept connections.
auth_info:
  mentioned_objects: []
client:
  base_url: https://install.advancedrestclient.com
  headers:
    Accept: application/json
source_metadata: null
