resources:
- name: eth_blockNumber
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: live_events
  endpoint:
    path: /live/events
    method: GET
    data_selector: events
- name: historical_backfills
  endpoint:
    path: /historical/backfills
    method: GET
    data_selector: backfills
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
- name: blockchain_data
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
- name: rollup
  endpoint:
    path: /services/data/vXX.X/sobjects/Rollup
    method: GET
    data_selector: records
    params: {}
- name: block
  endpoint:
    path: /streams/block
    method: GET
- name: transactions
  endpoint:
    path: /streams/transactions
    method: GET
- name: receipts
  endpoint:
    path: /streams/receipts
    method: GET
- name: blockchain_data
  endpoint:
    path: /api/blockchain/data
    method: GET
    data_selector: data
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: stake
  endpoint:
    path: /stake
    method: POST
    data_selector: stakeDetails
    params: {}
- name: streams
  endpoint:
    path: /v1/streams
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: solana_validator
  endpoint:
    path: /solana/validator
    method: GET
    data_selector: data
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: event
    params: {}
- name: Core API
  endpoint:
    path: /core-api
    method: GET
- name: Streams
  endpoint:
    path: /streams
    method: GET
- name: Functions
  endpoint:
    path: /functions
    method: GET
- name: Webhooks
  endpoint:
    path: /webhooks
    method: GET
- name: IPFS
  endpoint:
    path: /ipfs
    method: GET
- name: Rollups
  endpoint:
    path: /rollup
    method: GET
- name: Clusters
  endpoint:
    path: /clusters
    method: GET
- name: stream_data
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: solana_transaction
  endpoint:
    path: /v1/solana/transactions
    method: GET
    data_selector: data
    params: {}
- name: ethereum_block
  endpoint:
    path: /v1/ethereum/blocks
    method: GET
    data_selector: data
    params: {}
- name: webhook_received
  endpoint:
    path: /webhooks/received
    method: POST
    data_selector: webhook
    params: {}
- name: historical_backfills
  endpoint:
    path: /backfills/historical
    method: GET
    data_selector: backfills
    params: {}
- name: solana_validator
  endpoint:
    path: /solana/validator
    method: GET
    data_selector: data
    params: {}
- name: ethereum_transactions
  endpoint:
    path: /ethereum/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: block_number
  endpoint:
    path: /getBlockNumber
    method: GET
- name: webhook_received
  endpoint:
    path: /webhook/received
    method: POST
    data_selector: eventType
    params: {}
- name: historical_backfills
  endpoint:
    path: /streams/backfills
    method: POST
    data_selector: data
    params: {}
- name: webhook_received
  endpoint:
    path: /webhook
    method: POST
    data_selector: eventType
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: eventType
    params: {}
- name: block_number
  endpoint:
    path: /getBlockNumber
    method: GET
    data_selector: blockNumber
    params: {}
- name: getBlockNumber
  endpoint:
    path: /
    method: GET
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: data
    params: {}
- name: Solana
  endpoint:
    path: /chains/sol
    method: GET
- name: Ethereum
  endpoint:
    path: /chains/eth
    method: GET
- name: BNB Smart Chain
  endpoint:
    path: /chains/bsc
    method: GET
- name: Polygon
  endpoint:
    path: /chains/matic
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: trading_data
  endpoint:
    path: /v1/trades
    method: GET
    data_selector: data
    params: {}
- name: backfills
  endpoint:
    path: /streams/backfills
    method: GET
- name: trading
  endpoint:
    path: /trading
    method: GET
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: webhook_received
  endpoint:
    path: /webhook/received
    method: GET
    data_selector: eventType
    params: {}
- name: webhook_received
  endpoint:
    path: /webhook/received
    method: POST
    data_selector: eventType
    params: {}
- name: solana_validator
  endpoint:
    path: /solana/validator
    method: GET
    data_selector: data
    params: {}
- name: ethereum_transactions
  endpoint:
    path: /ethereum/transactions
    method: GET
    data_selector: data
    params: {}
- name: webhook_received
  endpoint:
    path: /webhook/received
    method: POST
    data_selector: eventType
    params: {}
- name: historical_backfills
  endpoint:
    path: /historical/backfills
    method: GET
    data_selector: data
    params: {}
- name: solana_data
  endpoint:
    path: /solana/data
    method: GET
    data_selector: records
    params: {}
- name: transfer_event
  endpoint:
    path: /webhook
    method: POST
    data_selector: eventType
- name: eth_blockNumber
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: infrastructure_updates
  endpoint:
    path: /api/infrastructure/updates
    method: GET
    data_selector: updates
- name: developer_resources
  endpoint:
    path: /api/developer/resources
    method: GET
    data_selector: resources
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: blocks
    params: {}
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: data
    params: {}
- name: streams
  endpoint:
    path: /streams
    method: GET
    data_selector: data
    params: {}
- name: transactions_by_address
  endpoint:
    path: /qn_getTransactionsByAddress
    method: GET
    data_selector: results
- name: wallet_token_transactions
  endpoint:
    path: /qn_getWalletTokenTransactions
    method: GET
    data_selector: results
- name: bb_getblockhash
  endpoint:
    path: /v1/bitcoin/bb_getblockhash
    method: GET
    data_selector: records
- name: bb_gettxspecific
  endpoint:
    path: /v1/bitcoin/bb_gettxspecific
    method: GET
    data_selector: records
- name: bb_gettickerslist
  endpoint:
    path: /v1/bitcoin/bb_gettickerslist
    method: GET
    data_selector: records
- name: bb_gettickers
  endpoint:
    path: /v1/bitcoin/bb_gettickers
    method: GET
    data_selector: records
- name: bb_getbalancehistory
  endpoint:
    path: /v1/bitcoin/bb_getbalancehistory
    method: GET
    data_selector: records
- name: rollups
  endpoint:
    path: /services/data/vXX.X/sobjects/Rollups
    method: GET
    data_selector: records
- name: streams
  endpoint:
    path: /services/data/vXX.X/sobjects/Streams
    method: GET
    data_selector: records
- name: blockchain_data
  endpoint:
    path: /api/v1/blockchain
    method: GET
    data_selector: data
    params: {}
- name: mempool
  endpoint:
    path: /guides/other-chains/bitcoin/how-to-access-bitcoin-mempool
    method: GET
    data_selector: transactions
- name: wallet_analytics
  endpoint:
    path: /guides/quicknode-products/marketplace/how-to-build-a-real-time-bitcoin-wallet-analytics-app
    method: GET
    data_selector: analytics
- name: address_creation
  endpoint:
    path: /guides/other-chains/bitcoin/how-to-create-a-bitcoin-address-using-bitcoinlibjs
    method: GET
    data_selector: address
- name: generate_address
  endpoint:
    path: /guides/other-chains/bitcoin/how-to-generate-a-new-bitcoin-address-in-javascript
    method: GET
    data_selector: generated_address
- name: transaction_reports
  endpoint:
    path: /guides/quicknode-products/marketplace/how-to-generate-bitcoin-transaction-reports-with-blockbook
    method: GET
    data_selector: transaction_reports
- name: address_balance
  endpoint:
    path: /guides/quicknode-products/apis/look-up-the-address-balance-for-a-wallet-for-bitcoin-on-quicknode
    method: GET
    data_selector: balance
- name: supported_chains
  endpoint:
    path: /supported-chains
    method: GET
    data_selector: chains
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: eth_accounts
  endpoint:
    path: ''
    method: POST
    data_selector: result
    params: {}
- name: priority_fee
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      id: 1
      method: qn_estimatePriorityFees
      params:
        last_n_blocks: 100
        account: JUP6LkbZbjS1jKKwapdHNy74zcZ3tLUZoi5QNyVTaV4
        api_version: 2
- name: signature_statuses
  endpoint:
    path: /getSignatureStatuses
    method: POST
    data_selector: value
    params: {}
- name: getAccountInfo
  endpoint:
    path: /geyser.geyser/getAccountInfo
    method: GET
- name: getAsset
  endpoint:
    path: /geyser.geyser/getAsset
    method: GET
- name: getBalance
  endpoint:
    path: /geyser.geyser/getBalance
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: debug_getBadBlocks
  endpoint:
    path: /debug_getBadBlocks
    method: GET
    data_selector: result
- name: debug_getRawReceipts
  endpoint:
    path: /debug_getRawReceipts
    method: GET
    data_selector: result
- name: debug_storageRangeAt
  endpoint:
    path: /debug_storageRangeAt
    method: GET
    data_selector: result
- name: debug_traceBlock
  endpoint:
    path: /debug_traceBlock
    method: GET
    data_selector: result
- name: debug_traceBlockByHash
  endpoint:
    path: /debug_traceBlockByHash
    method: GET
    data_selector: result
- name: debug_traceBlockByNumber
  endpoint:
    path: /debug_traceBlockByNumber
    method: GET
    data_selector: result
- name: debug_traceCall
  endpoint:
    path: /debug_traceCall
    method: GET
    data_selector: result
- name: debug_traceTransaction
  endpoint:
    path: /debug_traceTransaction
    method: GET
    data_selector: result
- name: eth_accounts
  endpoint:
    path: ''
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      method: eth_accounts
      id: '1'
      params: []
- name: API Credits
  endpoint:
    path: /api-credits/bsc
    method: GET
    data_selector: credits
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      method: eth_accounts
      id: '1'
      jsonrpc: '2.0'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: eth_accounts
  endpoint:
    path: /eth_accounts
    method: POST
    data_selector: result
    params: {}
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      method: eth_accounts
      id: 1
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: eth_accounts
  endpoint:
    path: /eth_accounts
    method: POST
    data_selector: result
    params: {}
- name: eth_accounts
  endpoint:
    path: /eth_accounts
    method: POST
    data_selector: result
    params: {}
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      method: eth_accounts
      id: '1'
      jsonrpc: '2.0'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: getBalance
  endpoint:
    path: /ext/bc/P
    method: POST
    data_selector: result
    params:
      addresses:
      - P-avax1tnuesf6cqwnjw7fxjyk7lhch0vhf0v95wj5jvy
- name: Webhook Received
  endpoint:
    path: /webhook/received
    method: GET
    data_selector: eventType
- name: address
  endpoint:
    path: /api/v2/address/{address}
    method: GET
    data_selector: ''
    params: {}
- name: balancehistory
  endpoint:
    path: /api/v2/balancehistory/{xpub}
    method: GET
    data_selector: ''
    params: {}
- name: block-index
  endpoint:
    path: /api/v2/block-index/{block_height}
    method: GET
    data_selector: ''
    params: {}
- name: block
  endpoint:
    path: /api/v2/block/{block}
    method: GET
    data_selector: ''
    params: {}
- name: tickers
  endpoint:
    path: /api/v2/tickers
    method: GET
    data_selector: ''
    params: {}
- name: tickers-list
  endpoint:
    path: /api/v2/tickers-list
    method: GET
    data_selector: ''
    params: {}
- name: tx-specific
  endpoint:
    path: /api/v2/tx-specific/{txid}
    method: GET
    data_selector: ''
    params: {}
- name: tx
  endpoint:
    path: /api/v2/tx/{txid}
    method: GET
    data_selector: ''
    params: {}
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: eth_accounts
  endpoint:
    path: /eth_accounts
    method: POST
    data_selector: result
    params: {}
- name: solana-validator
  endpoint:
    path: /v1/solana/validator
    method: GET
    data_selector: data
    params: {}
- name: ethereum
  endpoint:
    path: /v1/ethereum
    method: GET
    data_selector: data
    params: {}
- name: address
  endpoint:
    path: /api/v2/address/{address}
    method: GET
- name: balance_history
  endpoint:
    path: /api/v2/balancehistory/{xpub}
    method: GET
- name: block_index
  endpoint:
    path: /api/v2/block-index/{block_height}
    method: GET
- name: block
  endpoint:
    path: /api/v2/block/{block}
    method: GET
- name: tickers
  endpoint:
    path: /api/v2/tickers
    method: GET
- name: tickers_list
  endpoint:
    path: /api/v2/tickers-list
    method: GET
- name: transaction_specific
  endpoint:
    path: /api/v2/tx-specific/{txid}
    method: GET
- name: transaction
  endpoint:
    path: /api/v2/tx/{txid}
    method: GET
- name: eth_accounts
  endpoint:
    path: /eth_accounts
    method: POST
    data_selector: result
    params: {}
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params:
      jsonrpc: '2.0'
      method: eth_accounts
      id: 1
- name: eth_accounts
  endpoint:
    path: /eth_accounts
    method: POST
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: debug_traceBlockByHash
  endpoint:
    path: /debug/traceBlockByHash
    method: GET
    data_selector: value
    params: {}
- name: debug_traceBlockByNumber
  endpoint:
    path: /debug/traceBlockByNumber
    method: GET
    data_selector: value
    params: {}
- name: debug_traceCall
  endpoint:
    path: /debug/traceCall
    method: GET
    data_selector: value
    params: {}
- name: debug_traceTransaction
  endpoint:
    path: /debug/traceTransaction
    method: GET
    data_selector: value
    params: {}
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: markets
  endpoint:
    path: /v1/markets
    method: GET
    data_selector: data
- name: prices
  endpoint:
    path: /v1/prices
    method: GET
    data_selector: data
- name: account_info
  endpoint:
    path: /cosmos/auth/v1beta1/account_info/{address}
    method: GET
- name: balances
  endpoint:
    path: /cosmos/bank/v1beta1/balances/{address}
    method: GET
- name: positions
  endpoint:
    path: /injective.exchange.v2.query/positions
    method: GET
- name: stream
  endpoint:
    path: /injective.stream.v1beta1.stream/stream
    method: GET
- name: address
  endpoint:
    path: /api/v2/address/{address}
    method: GET
- name: balance_history
  endpoint:
    path: /api/v2/balancehistory/{xpub}
    method: GET
- name: block_index
  endpoint:
    path: /api/v2/block-index/{block_height}
    method: GET
- name: block
  endpoint:
    path: /api/v2/block/{block}
    method: GET
- name: tickers
  endpoint:
    path: /api/v2/tickers
    method: GET
- name: tickers_list
  endpoint:
    path: /api/v2/tickers-list
    method: GET
- name: tx_specific
  endpoint:
    path: /api/v2/tx-specific/{txid}
    method: GET
- name: tx
  endpoint:
    path: /api/v2/tx/{txid}
    method: GET
- name: beacon_blinded_blocks
  endpoint:
    path: /eth/v1/beacon/blinded_blocks/{block_id}
    method: GET
- name: beacon_blob_sidecars
  endpoint:
    path: /eth/v1/beacon/blob_sidecars/{block_id}
    method: GET
- name: beacon_blocks_attestations
  endpoint:
    path: /eth/v1/beacon/blocks/{block_id}/attestations
    method: GET
- name: beacon_blocks_root
  endpoint:
    path: /eth/v1/beacon/blocks/{block_id}/root
    method: GET
- name: beacon_genesis
  endpoint:
    path: /eth/v1/beacon/genesis
    method: GET
- name: beacon_headers
  endpoint:
    path: /eth/v1/beacon/headers
    method: GET
- name: beacon_headers_block_id
  endpoint:
    path: /eth/v1/beacon/headers/{block_id}
    method: GET
- name: beacon_pool_attestations
  endpoint:
    path: /eth/v1/beacon/pool/attestations
    method: GET
- name: beacon_pool_attester_slashings
  endpoint:
    path: /eth/v1/beacon/pool/attester_slashings
    method: GET
- name: beacon_pool_bls_to_execution_changes
  endpoint:
    path: /eth/v1/beacon/pool/bls_to_execution_changes
    method: GET
- name: beacon_pool_voluntary_exits
  endpoint:
    path: /eth/v1/beacon/pool/voluntary_exits
    method: GET
- name: beacon_rewards_attestations
  endpoint:
    path: /eth/v1/beacon/rewards/attestations/{epoch}
    method: GET
- name: beacon_rewards_blocks
  endpoint:
    path: /eth/v1/beacon/rewards/blocks/{block_id}
    method: GET
- name: beacon_rewards_sync_committee
  endpoint:
    path: /eth/v1/beacon/rewards/sync_committee/{block_id}
    method: GET
- name: beacon_states_committees
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/committees
    method: GET
- name: beacon_states_finality_checkpoints
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/finality_checkpoints
    method: GET
- name: beacon_states_fork
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/fork
    method: GET
- name: beacon_states_randao
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/randao
    method: GET
- name: beacon_states_root
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/root
    method: GET
- name: beacon_states_sync_committees
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/sync_committees
    method: GET
- name: beacon_states_validator_balances
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/validator_balances
    method: GET
- name: beacon_states_validators
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/validators
    method: GET
- name: beacon_states_validators_validator_id
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/validators/{validator_id}
    method: GET
- name: config_deposit_contract
  endpoint:
    path: /eth/v1/config/deposit_contract
    method: GET
- name: config_fork_schedule
  endpoint:
    path: /eth/v1/config/fork_schedule
    method: GET
- name: config_spec
  endpoint:
    path: /eth/v1/config/spec
    method: GET
- name: events
  endpoint:
    path: /eth/v1/events
    method: GET
- name: node_peers
  endpoint:
    path: /eth/v1/node/peers
    method: GET
- name: node_syncing
  endpoint:
    path: /eth/v1/node/syncing
    method: GET
- name: node_version
  endpoint:
    path: /eth/v1/node/version
    method: GET
- name: validator_aggregate_attestation
  endpoint:
    path: /eth/v1/validator/aggregate_attestation
    method: GET
- name: validator_attestation_data
  endpoint:
    path: /eth/v1/validator/attestation_data
    method: GET
- name: validator_beacon_committee_subscriptions
  endpoint:
    path: /eth/v1/validator/beacon_committee_subscriptions
    method: GET
- name: validator_blinded_blocks_slot
  endpoint:
    path: /eth/v1/validator/blinded_blocks/{slot}
    method: GET
- name: validator_duties_attester_epoch
  endpoint:
    path: /eth/v1/validator/duties/attester/{epoch}
    method: GET
- name: validator_duties_proposer_epoch
  endpoint:
    path: /eth/v1/validator/duties/proposer/{epoch}
    method: GET
- name: validator_duties_sync_epoch
  endpoint:
    path: /eth/v1/validator/duties/sync/{epoch}
    method: GET
- name: validator_prepare_beacon_proposer
  endpoint:
    path: /eth/v1/validator/prepare_beacon_proposer
    method: GET
- name: validator_sync_committee_contribution
  endpoint:
    path: /eth/v1/validator/sync_committee_contribution
    method: GET
- name: validator_sync_committee_subscriptions
  endpoint:
    path: /eth/v1/validator/sync_committee_subscriptions
    method: GET
- name: beacon_blocks_block_id
  endpoint:
    path: /eth/v2/beacon/blocks/{block_id}
    method: GET
- name: debug_beacon_heads
  endpoint:
    path: /eth/v2/debug/beacon/heads
    method: GET
- name: debug_beacon_states_state_id
  endpoint:
    path: /eth/v2/debug/beacon/states/{state_id}
    method: GET
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: address
  endpoint:
    path: /api/v2/address/{address}
    method: GET
- name: balancehistory
  endpoint:
    path: /api/v2/balancehistory/{xpub}
    method: GET
- name: block-index
  endpoint:
    path: /api/v2/block-index/{block_height}
    method: GET
- name: block
  endpoint:
    path: /api/v2/block/{block}
    method: GET
- name: tickers
  endpoint:
    path: /api/v2/tickers
    method: GET
- name: tickers-list
  endpoint:
    path: /api/v2/tickers-list
    method: GET
- name: tx-specific
  endpoint:
    path: /api/v2/tx-specific/{txid}
    method: GET
- name: tx
  endpoint:
    path: /api/v2/tx/{txid}
    method: GET
- name: beacon-blinded-blocks
  endpoint:
    path: /eth/v1/beacon/blinded_blocks/{block_id}
    method: GET
- name: beacon-blob-sidecars
  endpoint:
    path: /eth/v1/beacon/blob_sidecars/{block_id}
    method: GET
- name: beacon-blocks-attestations
  endpoint:
    path: /eth/v1/beacon/blocks/{block_id}/attestations
    method: GET
- name: beacon-blocks-root
  endpoint:
    path: /eth/v1/beacon/blocks/{block_id}/root
    method: GET
- name: beacon-genesis
  endpoint:
    path: /eth/v1/beacon/genesis
    method: GET
- name: beacon-headers
  endpoint:
    path: /eth/v1/beacon/headers
    method: GET
- name: beacon-headers-block
  endpoint:
    path: /eth/v1/beacon/headers/{block_id}
    method: GET
- name: beacon-pool-attestations
  endpoint:
    path: /eth/v1/beacon/pool/attestations
    method: GET
- name: beacon-pool-attester-slashings
  endpoint:
    path: /eth/v1/beacon/pool/attester_slashings
    method: GET
- name: beacon-pool-bls-to-execution-changes
  endpoint:
    path: /eth/v1/beacon/pool/bls_to_execution_changes
    method: GET
- name: beacon-pool-voluntary-exits
  endpoint:
    path: /eth/v1/beacon/pool/voluntary_exits
    method: GET
- name: beacon-rewards-attestations
  endpoint:
    path: /eth/v1/beacon/rewards/attestations/{epoch}
    method: GET
- name: beacon-rewards-blocks
  endpoint:
    path: /eth/v1/beacon/rewards/blocks/{block_id}
    method: GET
- name: beacon-rewards-sync-committee
  endpoint:
    path: /eth/v1/beacon/rewards/sync_committee/{block_id}
    method: GET
- name: beacon-states-committees
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/committees
    method: GET
- name: beacon-states-finality-checkpoints
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/finality_checkpoints
    method: GET
- name: beacon-states-fork
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/fork
    method: GET
- name: beacon-states-randao
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/randao
    method: GET
- name: beacon-states-root
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/root
    method: GET
- name: beacon-states-sync-committees
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/sync_committees
    method: GET
- name: beacon-states-validator-balances
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/validator_balances
    method: GET
- name: beacon-states-validators
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/validators
    method: GET
- name: beacon-states-validators-id
  endpoint:
    path: /eth/v1/beacon/states/{state_id}/validators/{validator_id}
    method: GET
- name: config-deposit-contract
  endpoint:
    path: /eth/v1/config/deposit_contract
    method: GET
- name: config-fork-schedule
  endpoint:
    path: /eth/v1/config/fork_schedule
    method: GET
- name: config-spec
  endpoint:
    path: /eth/v1/config/spec
    method: GET
- name: events
  endpoint:
    path: /eth/v1/events
    method: GET
- name: node-peers
  endpoint:
    path: /eth/v1/node/peers
    method: GET
- name: node-syncing
  endpoint:
    path: /eth/v1/node/syncing
    method: GET
- name: node-version
  endpoint:
    path: /eth/v1/node/version
    method: GET
- name: validator-aggregate-attestation
  endpoint:
    path: /eth/v1/validator/aggregate_attestation
    method: GET
- name: validator-attestation-data
  endpoint:
    path: /eth/v1/validator/attestation_data
    method: GET
- name: validator-beacon-committee-subscriptions
  endpoint:
    path: /eth/v1/validator/beacon_committee_subscriptions
    method: GET
- name: validator-blinded-blocks-slot
  endpoint:
    path: /eth/v1/validator/blinded_blocks/{slot}
    method: GET
- name: validator-duties-attester
  endpoint:
    path: /eth/v1/validator/duties/attester/{epoch}
    method: GET
- name: validator-duties-proposer
  endpoint:
    path: /eth/v1/validator/duties/proposer/{epoch}
    method: GET
- name: validator-duties-sync
  endpoint:
    path: /eth/v1/validator/duties/sync/{epoch}
    method: GET
- name: validator-prepare-beacon-proposer
  endpoint:
    path: /eth/v1/validator/prepare_beacon_proposer
    method: GET
- name: validator-sync-committee-contribution
  endpoint:
    path: /eth/v1/validator/sync_committee_contribution
    method: GET
- name: validator-sync-committee-subscriptions
  endpoint:
    path: /eth/v1/validator/sync_committee_subscriptions
    method: GET
- name: beacon-blocks
  endpoint:
    path: /eth/v2/beacon/blocks/{block_id}
    method: GET
- name: debug-beacon-heads
  endpoint:
    path: /eth/v2/debug/beacon/heads
    method: GET
- name: debug-beacon-states
  endpoint:
    path: /eth/v2/debug/beacon/states/{state_id}
    method: GET
- name: eth_accounts
  endpoint:
    path: /
    method: POST
    data_selector: result
- name: getBlockNumber
  endpoint:
    path: /
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: doge_bb_getAddress
  endpoint:
    path: /
    method: POST
    data_selector: result
    params: {}
- name: rollup
  endpoint:
    path: /deploy/rollup
    method: POST
    data_selector: data
    params: {}
- name: rollup_deployment
  endpoint:
    path: /api/rollup/deploy
    method: POST
    data_selector: data
    params: {}
- name: optimistic_rollup
  endpoint:
    path: /optimistic/rollup
    method: GET
    data_selector: data
- name: ZK Router
  endpoint:
    path: /zk/router
    method: GET
- name: ZK Gateway
  endpoint:
    path: /zk/gateway
    method: GET
- name: ZK Chains
  endpoint:
    path: /zk/chains
    method: GET
- name: block_data
  endpoint:
    path: /v1/blocks
    method: GET
    data_selector: data
- name: transaction_data
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
- name: blockchain_data
  endpoint:
    path: /blockchain/data
    method: GET
    data_selector: data
- name: solana_data
  endpoint:
    path: /v1/solana/data
    method: GET
    data_selector: data
    params: {}
- name: solana_data
  endpoint:
    path: /api/v1/solana
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: solana_transactions
  endpoint:
    path: /solana/transactions
    method: GET
    data_selector: data.records
- name: ethereum_transactions
  endpoint:
    path: /ethereum/transactions
    method: GET
    data_selector: data.records
- name: streams
  endpoint:
    path: /v1/streams
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: validator
  endpoint:
    path: /validator
    method: GET
    data_selector: records
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: multi-chain wallet
  endpoint:
    path: /wallets/multi-chain
    method: GET
    data_selector: wallets
    params: {}
- name: blockchain_data
  endpoint:
    path: /data/v1/blocks
    method: GET
    data_selector: records
- name: Solana Validator
  endpoint:
    path: /validator
    method: GET
    data_selector: records
- name: Webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: records
- name: trading
  endpoint:
    path: /trading
    method: GET
    data_selector: records
    params: {}
- name: defi
  endpoint:
    path: /defi
    method: GET
    data_selector: records
    params: {}
- name: streams
  endpoint:
    path: /v1/streams
    method: GET
    data_selector: data
    params: {}
- name: rollups
  endpoint:
    path: /v1/rollups
    method: GET
    data_selector: data
    params: {}
- name: solana_validator
  endpoint:
    path: /solana/validator
    method: GET
    data_selector: data
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
    params: {}
- name: solana_data
  endpoint:
    path: /solana/data
    method: GET
    data_selector: records
    params: {}
- name: ethereum_data
  endpoint:
    path: /ethereum/data
    method: GET
    data_selector: records
    params: {}
- name: cross_chain_assets
  endpoint:
    path: /api/v1/assets
    method: GET
    data_selector: assets
- name: transaction_history
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: transactions
- name: Ethereum
  endpoint:
    path: /chains/eth
    method: GET
- name: Polygon PoS
  endpoint:
    path: /chains/polygon
    method: GET
- name: lists
  endpoint:
    path: /key-value-store/lists
    method: GET
    data_selector: results
- name: sets
  endpoint:
    path: /key-value-store/sets
    method: GET
    data_selector: results
- name: usage
  endpoint:
    path: /v0/usage/rpc
    method: GET
    data_selector: usage_data
- name: prometheus_exporter
  endpoint:
    path: /exporter/prometheus
    method: GET
    data_selector: metrics_data
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Privacy Policy applies to QuickNode.com and Products.
- Requires setup of connected app in QuickNode
- Uses OAuth2 with refresh token.
- Built for latency-critical use cases
- Guaranteed delivery with support for 90+ networks.
- Ensure to set up your webhook URL in your QuickNode dashboard.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- IPFS is built using open source software and operates on a peer-to-peer network
  where data is distributed across multiple nodes rather than being stored in a central
  location.
- Content addressing uses unique cryptographic hashes to locate and verify data, ensuring
  data integrity and permanence.
- Uses OAuth2 with refresh token — requires setup of connected app in QuickNode
- Our globally distributed, auto-scaling, multi-cloud network will carry you from
  MVP all the way to enterprise.
- QuickNode provides secure blockchain access, protecting the developers and end users
  against security threats and vulnerabilities.
- Some endpoints may have rate limits.
- QuickNode provides compliant, performant solutions that make it easy to launch,
  manage and track stablecoins—securely and at scale.
- Uses OAuth2 with refresh token
- Ensure to set up connected app in QuickNode
- Requires connected app setup in QuickNode
- Ensure proper API key and permissions are configured
- Requires an API key for access
- Find your trading alpha with *2.5x* faster speeds and real-time blockchain data
- Get started with QuickNode's solutions and experience the benefits of reliable,
  flexible, and cost-effective multi-chain scaling.
- Requires API key for access
- AI-ready blockchain infrastructure
- Integrate with QuickNode product's API
- QuickNode provides access to 60+ blockchains and 100+ networks
- High-performance infrastructure is required for blockchain games
- The credit offer is aimed at new startups joining our ecosystem.
- QuickNode provides the most robust low-latency high-performance nodes on the market
  with great multi-chain coverage and excellent technical support.
- Requires API key for access.
- Expert-led transitions to blockchain, ensuring smooth and efficient system upgrades
  with minimal disruption.
- Custom services for specific blockchain needs, including RPC integration, DeFi,
  NFTs, and dApps, ensuring each project's unique requirements are perfectly met.
- Performance enhancement and scalability solutions to handle high transaction volumes,
  ensuring your blockchain infrastructure grows with your business.
- Benefit from ongoing technical guidance and assistance from a team of blockchain
  specialists.
- Proprietary testing and quality assurance process brings peace of mind for every
  launch.
- Individualized security frameworks meet your needs and avoid the legacy one size
  fits all model.
- Build on Solana with the fastest RPC Nodes, a comprehensive library of web3 APIs,
  and the most performant blockchain ETL tools—all backed by enterprise-grade infrastructure.
- Reliable & scalable RPC endpoints
- Real-time webhooks with guaranteed delivery
- Build on Ethereum with the fastest RPC Nodes, a comprehensive library of web3 APIs,
  and the most performant blockchain ETL tools—all backed by enterprise-grade infrastructure.
- Requires API key for authentication
- Rate limits apply to API usage
- Uses OAuth2 with refresh token - requires setup of connected app in QuickNode
- Build on BNB Smart Chain with the fastest RPC Nodes, a comprehensive library of
  web3 APIs, and the most performant blockchain ETL tools—all backed by enterprise-grade
  infrastructure.
- Integrate with add-on services and tools to enhance the functionality of your BNB
  Smart Chain application.
- Hyperliquid is a high-performance Layer-1 blockchain engineered specifically for
  financial applications.
- Requires setup of connected app in API
- Some objects like Contact may return nulls in deeply nested fields
- Arbitrum is a Layer 2 scaling solution for Ethereum, utilizing optimistic rollups
  to enhance transaction throughput and reduce fees.
- Requires setup of connected app in api
- Build on TRON with the fastest RPC Nodes
- Comprehensive library of web3 APIs and performant blockchain ETL tools
- Start building in minutes - no infra setup needed
- This website stores cookies on your computer to collect information about how you
  interact with our website to improve and customize your browsing experience.
- API key required for authentication
- Requires a valid API key and OAuth2 setup.
- API key required for access
- Arbitrum Nova is a Layer 2 scaling solution optimized for gaming and social applications.
- '2 supported networks: Avalanche Mainnet, Fuji'
- Uses OAuth2 with refresh token â€” requires setup of connected app in Berachain
- Build on Berachain with the fastest RPC Nodes, a comprehensive library of web3 APIs,
  and the most performant blockchain ETL tools—all backed by enterprise-grade infrastructure.
- No-code webhooks with guaranteed delivery, custom JavaScript logic, and built-in
  reorg handling.
- Build on Celo with the fastest RPC Nodes
- Comprehensive library of web3 APIs
- API requires an API key for authentication.
- Rate limits apply based on the pricing tier.
- The only Gnosis provider you’ll ever need
- Build on Gnosis with the fastest RPC Nodes, a comprehensive library of web3 APIs,
  and the most performant blockchain ETL tools—all backed by enterprise-grade infrastructure.
- Deploy your function to the edge in seconds and make changes on the fly without
  any downtime.
- Our globally balanced, auto-scaling infrastructure ensures smooth operation, even
  at peak loads.
- Uses OAuth2 with refresh token requires setup of connected app in QuickNode
- Some objects may return nulls in deeply nested fields
- Data out from Streams updated to arrive in an array that contains one or more blocks
  of data depending on the Stream batch setting.
- Added `notification_email` field to REST API for create/update stream.
- 'V2 NFT/Token API Bundle: Increased max perPage from 40 to 100.'
- Requires setup of API key for access
- As this is a private program, please do not discuss this program or any vulnerabilities
  (even resolved ones) outside of the program without express consent from the organization.
- Supports multiple blockchains including Solana and Ethereum.
- All features, content, specifications, products and prices of products and services
  described or depicted on QuickNode.com are subject to change at any time without
  notice.
- API credits do not roll over and are non-transferable.
- QuickNode is 100% the best node service one can provide.
- Uses QuickNode RPC nodes for blockchain infrastructure
- Recommended for high performance and reliability
- OAuth2 authentication is required.
- Ensure to handle rate limits on API calls.
- Performance gain of 50% observed after switching to QuickNode.
- Response times improved from ~600ms to ~280ms.
- QuickNode provides access to nodes on over 70 blockchains, including full and archive
  nodes.
- WebSocket responses are capped at a certain limit, which is subject to change. In
  cases where responses are potentially large, it is recommended to use a POST request.
  If the response size exceeds the limit, the associated error code will be -32616.
- Free accounts can only create Solana Streams that follow the tip of the blockchain
  in real time.
- Functions beta is available on all QuickNode rate plans.
- Minimum activation time for any function is 100ms.
- This JSON-RPC method will always return an empty response.
- Since QuickNode does not store private keys, this will always return an empty response.
- WebSocket responses are capped at a certain limit, which is subject to change. In
  cases where responses are potentially large, it is recommended to use a POST request.
- Token authentication is required for all endpoints created on QuickNode by default.
- During periods of high network congestion, use the recommended property of the response
  to increase likelihood of successful transaction processing.
- Check the transaction status using the getSignatureStatuses method.
- WebSocket subscriptions are ideal for simple applications monitoring specific accounts
  or programs.
- Yellowstone Geyser gRPC is ideal for high-frequency trading systems requiring minimal
  latency.
- WebSocket responses are capped at a certain limit, which is subject to change.
- For additional security, you can also enable JWT for each of your deployed endpoints.
- This method will always return an empty response.
- Usage in our pricing plans is measured in API Credits.
- Returns an array of addresses owned by the client. Since QuickNode does not store
  private keys, this will always return an empty response.
- Setting JWT (JSON Web Tokens), configuring all whitelist options, and changing any
  rate limits beyond credits per second are only available to users on the Build plan
  and higher.
- Exceptions include Advanced APIs and Large Calls
- In cases where responses are potentially large, it is recommended to use a POST
  request.
- API credit value for this method is 20
- For endpoints on the shared network, you are able to add a list of approved referrers.
- Build on Immutable zkEVM with the fastest RPC Nodes
- Immutable is a Layer 2 scaling solution for NFTs on Ethereum, offering instant trade
  confirmation, massive scalability, and no gas fees without compromising user custody.
- Users on the Free plan can only change their requests per second rate limit or add,
  use, and delete an authentication token.
- Returns an array of addresses owned by the client.
- The QuickNode zkSync documentation constantly evolves as the chain undergoes upgrades
  and changes.
- The QuickNode Injective documentation constantly evolves as the chain undergoes
  upgrades and changes.
- Setting JWT (JSON Web Tokens) and changing any rate limits beyond credits per second
  are only available to users on the Build plan and higher.
- Requires OAuth2 token generation.
- API rate limits may apply.
- Build on Injective with the fastest RPC Nodes, a comprehensive library of web3 APIs,
  and the most performant blockchain ETL tools.
- QuickNode Monad documentation constantly evolves as the chain undergoes upgrades
  and changes.
- Build on Sophon with the fastest RPC Nodes, a comprehensive library of web3 APIs,
  and the most performant blockchain ETL tools—all backed by enterprise-grade infrastructure.
- Dogecoin uses a Bitcoin-like JSON-RPC API, so its API methods are similar (or identical)
  to those used by Bitcoin Core.
- If the response size exceeds the limit, the associated error code will be -32616.
- This RPC method requires the Dogecoin Blockbook RPC add-on enabled on your QuickNode
  endpoint.
- Testnet instances are priced at $150/month
- Start building in minutes - no setup needed
- Get instant access to high-performance RPC endpoints
- Rollup-as-a-Service (RaaS) simplifies deployment of rollups
- Currently, you can deploy your rollup on testnets, with mainnet support planned
  for future releases.
- Deployment of OP Stack Rollups via QuickNode's RaaS product is currently temporarily
  paused.
- Modular design allowing customization of various components
- EVM equivalence for seamless Ethereum compatibility
- Elastic Chain Architecture for scalable, interconnected ZK rollups.
- ZKP protocols can be difficult to set up and require expertise in building Zero-Knowledge
  systems
- Some Zero-Knowledge protocols may be vulnerable to attacks from quantum computers,
  potentially exploiting the system's security.
- Rollups try to bring the best of both worlds by creating a general-purpose solution
  while still having the security of Ethereum.
- Each rollup has its specific contracts deployed on the main Ethereum network.
- Ensure correct API keys are set.
- This API requires authentication to access data.
- Some responses may vary based on the endpoint used
- Explore different ways to integrate with QuickNode's APIs.
- Launching a blockchain isn't for everyone.
- A successful chain launch involves significant challenges.
- Integrates with multiple blockchain networks using a unified API.
- The Cosmos SDK allows developers to perform automatic code execution at the beginning
  and end of each block, providing greater control and flexibility compared to traditional
  smart contract platforms.
- The SDK's design focuses on modularity and customization, enabling developers to
  create scalable and secure decentralized applications (dApps) efficiently.
- Avalanche Subnets are highly customizable blockchain networks that operate independently
  within the Avalanche ecosystem.
- This API requires authentication
- MetaMask serves as a bridge that allows users to run Ethereum dApps right in their
  browser without running a full Ethereum node.
- It securely manages the user's private keys using hardware-encrypted storage.
- Phantom supports multiple chains including Solana, Ethereum, and Bitcoin.
- Cross-chain functionality allows users to interact across multiple networks.
- Coinbase Wallet is a comprehensive self-custody solution for managing digital assets.
- It supports various cryptocurrencies and offers extensive Web3 functionality.
- Ensure to manage your API key securely.
- Designed to run locally alongside an Erigon node, enhancing privacy and performance.
- Requires setup of connected app in API.
- Your no-code crypto analytics platform
- Artemis Terminal allows users to easily compare and evaluate the performance of
  major blockchains and the dApps on them.
- Performance and cost savings optimizations through query result caching and redirection
- Flexible filtering and sorting
- Multiple data formats including CSV and JSON
- Detailed query metadata, including execution timestamps, row counts, and error information
- Space and Time provides consulting and development services to help web3 projects
  navigate complexities.
- Integration requires setting up API keys in the QuickNode dashboard.
- Chainlink allows smart contracts to securely access off-chain data feeds, web APIs,
  and traditional bank payments.
- Some API calls may have rate limits
- Layer Zero is an immutable, permissionless, and censorship-resistant protocol to
  connect blockchains.
- Layer Zero acts as a decentralized and secure infrastructure layer for web3 projects,
  facilitating interoperability, seamless communication, and transaction processing
  between various blockchain networks.
- Some data may be rate limited based on the plan.
- Supports 21 blockchains including Ethereum and other EVM-compatible networks.
- Utilizes various bridging methods for enhanced user experience.
- Wormhole provides a decentralized, interoperable protocol that facilitates cross-chain
  transfers of any type of asset.
- NTT ensures that tokens maintain their inherent properties on each chain, providing
  a consistent multichain experience.
- Wormhole is a decentralized, cross-chain messaging protocol designed to facilitate
  seamless and secure interaction between different blockchain networks.
- Figment provides the complete staking solution for over 500 institutional clients.
- Their Ethereum Infrastructure is SOC2 certified.
- API keys should be kept secure and not exposed in client-side code.
- Webhook payloads can be compressed with gzip to reduce payload size.
- IP Allowlisting is recommended for additional security.
- The function main must be async if you are accessing Key-Value Store within your
  function.
- Key-Value Store items are case-sensitive.
- The Console API is available to accounts subscribed to paid plans.
- Enterprise customers have access to a dedicated endpoint for Prometheus.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check your request format and parameters.'
- '401 Unauthorized: Ensure your API key is valid.'
- '429 Too Many Requests: You have hit the rate limit.'
- 'INVALID_REQUEST: Check request parameters'
- 'UNAUTHORIZED: Verify API key and permissions'
- 'SERVER_ERROR: Retry after some time'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API key'
- '429 Too Many Requests: Rate limit exceeded'
- '429 Too Many Requests: Exceeded rate limit'
- '401 Unauthorized: Invalid API key'
- 'INVALID_API_KEY: Check your API key.'
- 'TOKEN_EXPIRED: Refresh your access token.'
- '403 FORBIDDEN: Ensure you have permission to access this resource.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Retry the request'
- '403 Forbidden: Invalid API key'
- '429 Too Many Requests: You have exceeded the rate limit.'
- '401 Unauthorized: Invalid API key.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '413: Content Too Large'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '-32000: header not found or could not find block XXX'
- '-32000: stack limit reached 1024 (1023)'
- '-32000: method handler crashed'
- '-32000: execution timeout'
- '-32000: nonce too low'
- '-32000: filter not found'
- '-32001: Resource Not Found'
- '-32002: Resource Unavailable'
- '-32003: Transaction Rejected'
- '-32004: Method Not Supported'
- '-32005: Limit Exceeded'
- '-32006: JSON-RPC Version Not Supported'
- '-32009: trace requests limited to x/sec'
- '-32010: Transaction cost exceeds current gas limit'
- '-32011: network error'
- '-32015: VM execution error'
- '-32600: Invalid request'
- '-32601: method not found'
- '-32602: invalid argument 0: json: cannot unmarshal hex string without 0x prefix
  into Go struct field CallArgs.to of type common.Address'
- '-32603: Internal JSON-RPC error'
- '-32700: Parse error'
- '3: execution reverted'
- No parameters accepted for this method.
- '-32616: Response size exceeds the limit.'
- '-32002: Transaction simulation failed: Error processing Instruction 4: custom program
  error: 0x26 [41 log messages] or preflight check error'
- '-32002: Transaction simulation failed: Blockhash not found'
- '-32003: Transaction signature verification failure'
- '-32004: Block not available for slot x'
- '-32005: Node is unhealthy Node is behind by xxxx slots'
- '-32007: Slot xxxxxx was skipped, or missing due to ledger jump to recent snapshot'
- '-32009: Slot xxxxx was skipped, or missing in long-term storage'
- '-32010: xxxxxx excluded from account secondary indexes; this RPC method unavailable
  for key'
- '-32013: There is a mismatch in the length of the transaction signature'
- '-32014: The status of the block for the specified slot is not yet available'
- '-32015: Transaction version (0) is not supported by the requesting client. Please
  try the request again with the following configuration parameter: "maxSupportedTransactionVersion":
  0'
- '-32016: Minimum context slot has not been reached'
- '-32602: Invalid params: xxxxx'
- '400: Bad Request: Incorrect HTTP Request type (e.g. using GET instead of POST)
  or Invalid Characters'
- '401: Unauthorized: This can happen when one or multiple security requirements are
  not met such as incorrect Token Auth, IP not in the whitelist, invalid JWT, etc.'
- '403: Forbidden: Endpoint Disabled (One of the reasons for this could be a past
  due payment)'
- '404: Not Found: Incorrect URL or Incorrect method'
- '413: Content Too Large: Body of the request is too large'
- '429: Too Many Requests: The requests per second (RPS) of your requests are higher
  than your plan allows.'
- '500: Internal Server Error: Submit a ticket for the support team to take a look
  at the errors asap'
- '503: Service Unavailable: Submit a ticket for the support team to take a look at
  the errors asap'
- '-32000: header not found or could not find block XXX: The requested block doesn''t
  exist on the node. Invalid block number or the node you''re hitting is not in sync
  yet.'
- '-32000: stack limit reached 1024 (1023): Usually a smart contract error/bug'
- '-32000: method handler crashed: Internal error from the blockchain client, which
  can be a client bug.'
- '-32000: execution timeout: Add the timeout param in your request to override the
  default client timeout.'
- '-32000: nonce too low: The nonce value specified in your transaction is lower than
  the next valid nonce for the sender account.'
- '-32000: filter not found: Filter exceeded timeout; you''ll have to recreate the
  filter once more.'
- '-32001: Resource Not Found: The requested resource does not exist or is unavailable.'
- '-32002: Resource Unavailable: The requested resource is temporarily or permanently
  unavailable.'
- '-32003: Transaction Rejected: The transaction could not be created due to validation
  failure or insufficient resources.'
- '-32004: Method Not Supported: The requested method is not implemented or supported
  by the server.'
- '-32005: Limit Exceeded: The request exceeds the allowed limit or quota.'
- '-32006: JSON-RPC Version Not Supported: The specified JSON-RPC version is not supported
  by the server.'
- '-32009: trace requests limited to x/sec: We have limited the debug and trace method
  to a specific RPS to prevent the nodes from overloading.'
- '-32010: Transaction cost exceeds current gas limit: Gas limit is set too low.'
- '-32011: network error: This error occurs when there is a problem with the connection
  between the client and server, such as a timeout or a dropped connection.'
- '-32015: VM execution error: Smart contract execution error.'
- '-32600: Invalid request: JSON request is malformed or missing required fields.'
- '-32601: method not found: Typically a typo in the method name; check for spelling
  errors.'
- '-32601: failed to parse request: Incorrect request body; double check the method
  params.'
- '-32602: invalid argument 0: json: cannot unmarshal hex string without 0x prefix
  into Go struct field CallArgs.to of type common.Address: Incorrect request; the
  0x is missing from the address.'
- '-32602: eth_getLogs and eth_newFilter are limited to a 10,000 blocks range.'
- '-32603: Internal JSON-RPC error: This error is typically due to a bad or invalid
  payload.'
- '-32612: custom traces are blocked: Submit a request.'
- '-32613: custom trace not found in allowed custom traces: Submit a request.'
- '-32700: Parse error: Invalid JSON received. The server encountered an error while
  parsing the JSON text.'
- '3: execution reverted: The transaction was reverted during execution, likely due
  to failing conditions, insufficient gas, or a contract error.'
- '-32616: Response size exceeds the limit'
- '-32000: header not found or could not find block XXX: The requested block doesn''t
  exist on the node. Invalid block number or the node you''re hitting is not in sync
  yet. Use a retry mechanism with an incremental timeout'
- '-32009: trace requests limited to x/sec: We have limited the debug and trace method
  to a specific RPS to prevent the nodes from overloading'
- '-32010: Transaction cost exceeds current gas limit: Gas limit is set too low'
- '-32011: network error: This error occurs when there is a problem with the connection
  between the client and server, such as a timeout or a dropped connection'
- '-32015: VM execution error: Smart contract execution error'
- '-32601: method not found: Typically a typo in the method name; check for spelling
  errors'
- '-32601: failed to parse request: Incorrect request body; double check the method
  params'
- '-32602: eth_getLogs and eth_newFilter are limited to a 10,000 blocks range: Read
  an in-depth explanation here'
- '-32603: Internal JSON-RPC error: This error is typically due to a bad or invalid
  payload'
- '-32612: custom traces are blocked: Submit a request here'
- '-32613: custom trace not found in allowed custom traces: Submit a request here'
- '-32700: Parse error: Invalid JSON received. The server encountered an error while
  parsing the JSON text'
- '3: execution reverted: The transaction was reverted during execution, likely due
  to failing conditions, insufficient gas, or a contract error'
- No parameters accepted.
- '-32616: Response size exceeds limit'
- '-32000: method handler crashed: Internal error from the blockchain client, which
  can be a client bug. Submit a ticket so we can double check the nodes'
- '-32600: Invalid request: JSON request is malformed or missing required fields.
  Ensure it follows the expected format'
- '-32602: eth_getLogs and eth_newFilter are limited to a 10,000 blocks range: Read
  an in-depth explanation.'
- 20 API credits are used for this method.
- '413: Request Entity Too Large eth_getLogs and eth_newFilter are limited to a 10,000
  blocks range'
- '-32602: invalid argument 0: json: cannot unmarshal hex string without 0x prefix
  into Go struct field CallArgs.to of type common.Address.'
- '-32612: custom traces are blocked: Submit a request to go through the approval
  process.'
- '-32613: custom trace not found in allowed custom traces: Submit a request to go
  through the approval process.'
- '-32601: failed to parse request'
- '-32602: eth_getLogs and eth_newFilter are limited to a 10,000 blocks range'
- '-32612: custom traces are blocked'
- '-32613: custom trace not found in allowed custom traces'
- API credit value for this method is 20.
- '400: Bad Request - Incorrect HTTP Request type (e.g. using GET instead of POST)
  or Invalid Characters'
- '401: Unauthorized - This can happen when one or multiple security requirements
  are not met such as incorrect Token Auth, IP not in the whitelist, invalid JWT,
  etc.'
- '403: Forbidden - Endpoint Disabled (One of the reasons for this could be a past
  due payment)'
- '404: Not Found - Incorrect URL or Incorrect method'
- '413: Content Too Large - Body of the request is too large'
- '429: Too Many Requests - The requests per second (RPS) of your requests are higher
  than your plan allows.'
- '500: Internal Server Error - Submit a ticket for the support team to take a look
  at the errors asap'
- '503: Service Unavailable - Submit a ticket for the support team to take a look
  at the errors asap'
- '-32000: header not found or could not find block XXX - The requested block doesn''t
  exist on the node. Invalid block number or the node you''re hitting is not in sync
  yet. Use a retry mechanism with an incremental timeout'
- '-32000: stack limit reached 1024 (1023) - Usually a smart contract error/bug'
- '-32000: method handler crashed - Internal error from the blockchain client, which
  can be a client bug. Submit a ticket so we can double check the nodes'
- '-32000: execution timeout - Add the timeout param in your request to override the
  default client timeout.'
- '-32000: nonce too low - The nonce value specified in your transaction is lower
  than the next valid nonce for the sender account.'
- '-32000: filter not found - Filter exceeded timeout; you''ll have to recreate the
  filter once more.'
- '-32001: Resource Not Found - The requested resource does not exist or is unavailable.'
- '-32002: Resource Unavailable - The requested resource is temporarily or permanently
  unavailable.'
- '-32003: Transaction Rejected - The transaction could not be created due to validation
  failure or insufficient resources.'
- '-32004: Method Not Supported - The requested method is not implemented or supported
  by the server.'
- '-32005: Limit Exceeded - The request exceeds the allowed limit or quota.'
- '-32006: JSON-RPC Version Not Supported - The specified JSON-RPC version is not
  supported by the server.'
- '-32009: trace requests limited to x/sec - We have limited the debug and trace method
  to a specific RPS to prevent the nodes from overloading'
- '-32010: Transaction cost exceeds current gas limit - Gas limit is set too low'
- '-32011: network error - This error occurs when there is a problem with the connection
  between the client and server, such as a timeout or a dropped connection'
- '-32015: VM execution error - Smart contract execution error'
- '-32600: Invalid request - JSON request is malformed or missing required fields.'
- '-32601: method not found - Typically a typo in the method name; check for spelling
  errors'
- '-32601: failed to parse request - Incorrect request body; double check the method
  params'
- '-32602: invalid argument 0: json: cannot unmarshal hex string without 0x prefix
  into Go struct field CallArgs.to of type common.Address - Incorrect request; the
  0x is missing from the address.'
- '-32603: Internal JSON-RPC error - This error is typically due to a bad or invalid
  payload'
- '-32612: custom traces are blocked - Submit a request here'
- '-32613: custom trace not found in allowed custom traces - Submit a request here'
- '-32700: Parse error - Invalid JSON received. The server encountered an error while
  parsing the JSON text'
- '3: execution reverted - The transaction was reverted during execution, likely due
  to failing conditions, insufficient gas, or a contract error'
- No errors documented for this method.
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Invalid or expired token.'
- The method does not accept any parameters.
- No errors listed.
- '400 Bad Request: Check your rollup details and try again.'
- '401 Unauthorized: Ensure your authentication token is valid.'
- '503 Service Unavailable: Try again later, the service might be temporarily down.'
- '401 Unauthorized: Check API key and permissions.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- '400 Bad Request: Check the input parameters and try again.'
- '401 Unauthorized: Ensure that the access token is valid.'
- '429 Too Many Requests: Rate limit exceeded, please try again later.'
- 'INVALID_REQUEST: Check the parameters in your request'
- 'UNAUTHORIZED: Verify your API key and permissions'
- '403 Forbidden: Check your API key and permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your API key and permissions.'
- '401 Unauthorized: Check your API key'
- 'INVALID_API_KEY: Check if the API key is correctly entered.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
client:
  base_url: https://www.quicknode.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
