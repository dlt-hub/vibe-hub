resources:
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: points
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: info
  endpoint:
    path: /info
    method: POST
    data_selector: version
    params: {}
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rustcoder
  endpoint:
    path: /v1
    method: GET
- name: qwen7b
  endpoint:
    path: /v1
    method: GET
- name: qwen72b
  endpoint:
    path: /v1
    method: GET
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rustcoder
  endpoint:
    path: /v1
    method: GET
- name: qwen7b
  endpoint:
    path: /v1
    method: GET
- name: qwen72b
  endpoint:
    path: /v1
    method: GET
- name: finetune_utility
  endpoint:
    path: /tutorial/llamacpp/
    method: GET
    data_selector: content
    params: {}
- name: base_model
  endpoint:
    path: /tutorial/llamacpp/#get-the-base-model
    method: GET
    data_selector: content
    params: {}
- name: qa_set
  endpoint:
    path: /tutorial/llamacpp/#create-a-question-and-answer-set-for-fine-tuning
    method: GET
    data_selector: content
    params: {}
- name: finetune_process
  endpoint:
    path: /tutorial/llamacpp/#finetune
    method: GET
    data_selector: content
    params: {}
- name: merge_process
  endpoint:
    path: /tutorial/llamacpp/#merge
    method: GET
    data_selector: content
    params: {}
- name: trump
  endpoint:
    path: /characters/trump.character.json
    method: GET
    data_selector: character_templates
    params: {}
- name: translation_agent
  endpoint:
    path: /v1/translate
    method: POST
    data_selector: translation
    params: {}
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rust_coder
  endpoint:
    path: /v1
    method: GET
- name: qwen_7b
  endpoint:
    path: /v1
    method: GET
- name: qwen_72b
  endpoint:
    path: /v1
    method: GET
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rust_coder
  endpoint:
    path: /v1
    method: GET
- name: qwen_7b
  endpoint:
    path: /v1
    method: GET
- name: qwen_72b
  endpoint:
    path: /v1
    method: GET
- name: trump_agent
  endpoint:
    path: /trump
    method: GET
- name: agentkit
  endpoint:
    path: /v1
    method: GET
- name: agent
  endpoint:
    path: /run-the-demo-agent
    method: GET
    data_selector: tool_call
    params: {}
- name: translation_agent
  endpoint:
    path: /v1/translate
    method: POST
    data_selector: translation
    params: {}
- name: whisper
  endpoint:
    path: /v1
    method: POST
- name: coder
  endpoint:
    path: /v1
    method: POST
- name: rust_coder
  endpoint:
    path: /v1
    method: POST
- name: qwen_7b
  endpoint:
    path: /v1
    method: POST
- name: qwen_72b
  endpoint:
    path: /v1
    method: POST
- name: whisper
  endpoint:
    path: /v1
    method: POST
- name: coder
  endpoint:
    path: /v1
    method: POST
- name: rust_coder
  endpoint:
    path: /v1
    method: POST
- name: qwen_7b
  endpoint:
    path: /v1
    method: POST
- name: qwen_72b
  endpoint:
    path: /v1
    method: POST
- name: trump_agent
  endpoint:
    path: /v1/trump
    method: GET
    data_selector: character
    params: {}
- name: example
  endpoint:
    path: /example
    method: GET
    data_selector: records
    params: {}
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rustcoder
  endpoint:
    path: /v1
    method: GET
- name: qwen7b
  endpoint:
    path: /v1
    method: GET
- name: qwen72b
  endpoint:
    path: /v1
    method: GET
- name: whisper
  endpoint:
    path: /whisper
    method: POST
- name: coder
  endpoint:
    path: /coder
    method: POST
- name: rustcoder
  endpoint:
    path: /rustcoder
    method: POST
- name: qwen7b
  endpoint:
    path: /qwen7b
    method: POST
- name: qwen72b
  endpoint:
    path: /qwen72b
    method: POST
- name: fine_tune
  endpoint:
    path: /finetune
    method: POST
    data_selector: results
    params: {}
- name: trump
  endpoint:
    path: /characters/trump.character.json
    method: GET
    data_selector: records
- name: agent_kit
  endpoint:
    path: /v1
    method: GET
    data_selector: records
- name: translation_agent
  endpoint:
    path: /v1/translate
    method: POST
    data_selector: translation
    params: {}
- name: whisper
  endpoint:
    path: /v1
    method: POST
- name: coder
  endpoint:
    path: /v1
    method: POST
- name: rust_coder
  endpoint:
    path: /v1
    method: POST
- name: qwen7b
  endpoint:
    path: /v1
    method: POST
- name: qwen72b
  endpoint:
    path: /v1
    method: POST
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rust_coder
  endpoint:
    path: /v1
    method: GET
- name: qwen7b
  endpoint:
    path: /v1
    method: GET
- name: qwen72b
  endpoint:
    path: /v1
    method: GET
- name: node_info
  endpoint:
    path: /gaianet/info
    method: GET
    data_selector: node_info
- name: trump
  endpoint:
    path: characters/trump.character.json
    method: GET
- name: model
  endpoint:
    path: /model
    method: GET
    data_selector: records
- name: tool_call
  endpoint:
    path: /tool_call
    method: POST
    data_selector: result
    params: {}
- name: translation_agent
  endpoint:
    path: /v1/translate
    method: POST
    data_selector: translation
    params: {}
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rustcoder
  endpoint:
    path: /v1
    method: GET
- name: qwen7b
  endpoint:
    path: /v1
    method: GET
- name: qwen72b
  endpoint:
    path: /v1
    method: GET
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rustcoder
  endpoint:
    path: /v1
    method: GET
- name: qwen7b
  endpoint:
    path: /v1
    method: GET
- name: qwen72b
  endpoint:
    path: /v1
    method: GET
- name: trump
  endpoint:
    path: /characters/trump.character.json
    method: GET
    data_selector: character
    params: {}
- name: agentkit_example
  endpoint:
    path: /v1
    method: POST
    data_selector: data
- name: tool_call
  endpoint:
    path: /v1
    method: POST
    data_selector: tool_call
- name: translation_agent
  endpoint:
    path: /v1/translate
    method: POST
    data_selector: translation
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: points
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
- name: info
  endpoint:
    path: /info
    method: POST
    data_selector: ''
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: points
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
- name: info
  endpoint:
    path: /info
    method: POST
    data_selector: version
- name: whisper
  endpoint:
    path: /v1
    method: GET
- name: coder
  endpoint:
    path: /v1
    method: GET
- name: rustcoder
  endpoint:
    path: /v1
    method: GET
- name: qwen7b
  endpoint:
    path: /v1
    method: GET
- name: qwen72b
  endpoint:
    path: /v1
    method: GET
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: id
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: object
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: points
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: model_info
  endpoint:
    path: /v1/info
    method: POST
    data_selector: 모델
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: points
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: model_info
  endpoint:
    path: /v1/info
    method: POST
    data_selector: model
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: points
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: model_info
  endpoint:
    path: /v1/info
    method: POST
    data_selector: model
- name: config
  endpoint:
    path: /config
    method: POST
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: points
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: node_info
  endpoint:
    path: /v1/info
    method: POST
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: puntos
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: info
  endpoint:
    path: /info
    method: POST
    data_selector: version
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: pontos
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: info
  endpoint:
    path: /v1/info
    method: POST
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: data
    params: {}
- name: embeddings
  endpoint:
    path: /embeddings
    method: POST
    data_selector: data
    params: {}
- name: retrieve
  endpoint:
    path: /retrieve
    method: POST
    data_selector: scores
    params: {}
- name: models
  endpoint:
    path: /models
    method: POST
    data_selector: data
    params: {}
- name: info
  endpoint:
    path: /info
    method: POST
    data_selector: Sürüm
notes:
- A successful start prints a public URL for the node. Opening a browser to that URL
  will display the node information and allow you to chat with the AI agent on the
  node.
- You MUST run `gaianet init` and `gaianet start` again after you make any changes
  to the node configuration.
- Some Gaia Domains require approval for new nodes to join.
- Ensure you comply with the domain's rules before your node becomes publicly accessible
  under the domain's URL.
- The finetune utility works well on CPUs.
- Use a Q5 quantized GGUF model file directly to save computing resources.
- If you have multiple CPUs, you can speed up the fine-tuning process by adding a
  -t parameter.
- Uses Gaia as the LLM service backend for the Eliza framework.
- You will need to get an API key from Gaia.
- Uses decentralized computing infrastructure for AI agents
- 가이아넷 도메인 계약에 잠긴 자금은 API 서비스 소비라는 단일 목적을 위해 사용됩니다. 이를 목적 바운드 머니라고 합니다.
- 다음을 교체해야 합니다. `YOUR_API_KEY_GOES_HERE` 당신의 **자체 API 키**.
- Some Gaia domains require approval for new nodes to join.
- The domain's rules must be adhered to before the node can be publicly accessed via
  the domain's URL.
- Uses Gaia as the model service provider.
- API 키에 대한 환경 변수를 설정해야 합니다.
- Gaia에서 API 키를 받아야 합니다.
- LLM applications may have unstable responses.
- Requires setup of local Gaia node or use of community Gaia nodes
- Translation agent uses open-source LLM models for high-quality translations
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Hãy chắc chắn thay thế `KHÓA_API_CỦA_BẠN_ĐƯỢC_ĐẾN_Đ` với bạn **khóa API riêng**.
- Công cụ llama.cpp phổ biến đi kèm với một Tinh chỉnh tiện ích. Nó hoạt động tốt
  trên CPU!
- Quá trình tinh chỉnh cập nhật một số lớp của mạng lưới thần kinh của LLM.
- Ensure your Node.js version is higher than 0.23.0 before proceeding.
- You will need to obtain the API key from Gaia.
- Nếu bạn đang sử dụng dịch vụ Tên miền, bạn sẽ cần lấy khóa API từ Gaia.
- Asegúrese de sustituir `SU_CLAVE_API_VA_AQUÍ` con su **clave API propia**.
- La dirección URL del `config.json` debe apuntar al archivo de texto real.
- Algunos dominios de Gaia requieren la aprobación de nuevos nodos.
- Asegúrate de cumplir las normas del dominio antes de que tu nodo sea accesible públicamente
  bajo la URL del dominio.
- Utiliza archivos GGUF cuantificados para reducir requisitos de hardware.
- Puede que el proceso de ajuste fino tarde varios días o semanas.
- Usa el dominio Llama 3b Gaia como backend LLM.
- Necesitarás obtener una clave API de Gaia.
- Requires configuration of a Gaia node to access the translation services.
- Os fundos bloqueados nos contratos de domínio GaiaNet destinam-se a um único objetivo
  de consumo de serviços API.
- Certifique-se de que substitui A SUA CHAVE_API VAI PARA AQUI com o seu chave API
  própria.
- O URL para o config.json deve apontar para o ficheiro de texto real.
- Alguns Domínios Gaia requerem aprovação para a adesão de novos nós.
- Certifique-se de que cumpre as regras do domínio antes de o seu nó se tornar publicamente
  acessível sob o URL do domínio.
- O `afinar` em llama.cpp pode trabalhar com ficheiros GGUF quantizados em CPUs, reduzindo
  assim drasticamente os requisitos de hardware e as despesas para afinação de LLMs.
- Se tiver a GPU NVIDIA e o kit de ferramentas CUDA instalados, deve construir o llama.cpp
  com suporte CUDA.
- Certifique-se de que a sua versão do Node.js é superior a 0.23.0 antes de prosseguir.
- Terá de obter uma chave API de Gaia.
- Requires setup of API key from Gaia
- GaiaNet alan sözleşmelerinde kilitli olan fonlar, API hizmetlerini tüketmek gibi
  tek bir amaç içindir. Buna Amaca Bağlı Para denir.
- Uses Gaia as the model service provider for LLM backend
- Uses API key for authentication — requires obtaining an API key from Gaia.
- Make sure to replace YOUR_API_KEY_GOES_HERE with your own API key.
- Your API Key is like a password and helps verify your usage. This will be one of
  the last times you‘ll see it displayed, so remember to save it in a safe place.
- If you are using a Windows system, you must have Windows Subsystem for Linux (WSL)
  installed and configured with an Ubuntu distribution.
- The installation commands for the Gaia node are Linux-based and require a Linux
  environment to run, which WSL provides on Windows.
- API Keys are now available for all your applications and usage.
- Currently, we don't charge anything for usage or API key creation.
- After you use `gaianet config` to change some parameters, please use `gaianet init`
  to make your settings take effect.
- If you use `gaianet config --base $HOME/gaianet-2.alt` to update some settings,
  please use `gaianet init --base $HOME/gaianet-2.alt` to make your settings take
  effect.
- The system cannot find CUDA libraries
- Failed to recover from collection snapshot on Windows WSL
- Failed to start the node with an error message Port 8080 is in use. Exit ...
- 'Load library failed: libgomp.so.1: cannot open shared object file: No such file
  or directory'
- Failed to remove the default collection
- File I/O error
- The "Failed to open the file" Error
- The "Too many open files" Error on macOS
- Permission denied when use the installer script to install WasmEdge
- 'gaia-nexus is not ready (exit status: 56)'
- My node response is slow
- 'Important Reminder: This command will remove all the Gaia-related files, including
  the `nodeid.json`. It''s your responsibility to keep your nodeid.json safe.'
- If you are hosting the node in your home or office, it needs access to the public
  Internet to join the Gaia network.
- Cada nodo Gaia proporciona un servicio API especializado que encapsula una combinación
  única de un LLM especializado y perfeccionado
- El servicio API del nodo Gaia es totalmente compatible con la especificación JSON
  de OpenAI
- API 키는 비밀번호와 같은 역할을 하며 사용 여부를 확인하는 데 도움이 됩니다.
- Khóa API của bạn là bí mật! Không chia sẻ khóa này với người khác hoặc tiết lộ khóa
  này trong bất kỳ mã phía máy khách nào.
- Recuerde que su clave API es secreta. No la comparta con otros ni la exponga en
  ningún código del lado del cliente.
- A sua chave de API é secreta! Não a partilhe com outras pessoas nem a exponha em
  qualquer código do lado do cliente (navegadores, aplicações).
- Os pedidos de produção devem ser encaminhados através do seu próprio servidor backend,
  onde a sua chave de API pode ser carregada de forma segura a partir de uma variável
  de ambiente ou de um serviço de gestão de chaves.
- API anahtarınızın bir sır olduğunu unutmayın! Başkalarıyla paylaşmayın veya herhangi
  bir istemci tarafı kodunda (tarayıcılar, uygulamalar) göstermeyin.
- Replace 'YOUR_API_KEY_GOES_HERE' with your API key.
- The API requires an API key for authentication.
- Gaia node API service is fully compatible with OpenAI JSON specifications, allowing
  each Gaia node to act as an alternative backend for OpenAI-based frontends or agents.
- URL for config.json must point to the actual text file.
- Llama 3 8B model requires a minimum of 16GB of RAM.
- Some Gaia domains may require approval for new nodes to join.
- Rules of the domain must be followed before publicly accessing the node via the
  domain's URL.
- 'Important reminder: This command removes all Gaia related files, including `nodeid.json`.'
- Hãy chắc chắn thay thế KHÓA_API_CỦA_BẠN_ĐƯỢC_ĐẾN_Đ với bạn khóa API riêng.
- Ensure to replace YOUR_API_KEY_GOES_HERE with your actual API key.
- Certifique-se de que substitui `A SUA CHAVE_API VAI PARA AQUI` com o seu chave API
  própria.
- Ensure to replace 'YOUR_API_KEY_GOES_HERE' with your actual API key.
errors:
- '404: Not found: The endpoint URL is invalid: Please check the endpoint URL'
- '500: Internal Server Error: Model is not found.: Please check out the model name.'
- '400: Bad request'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Se o processo de afinação for interrompido, pode reiniciá-lo a partir de `ponto
  de controlo-250.gguf`.
- '404: Not found: The endpoint URL is invalid'
- '500: Internal Server Error: Model is not found.'
- '404: Not found'
- '500: Internal Server Error'
- Your API key doesn't match the type. Please apply for a Developer API key.
- 'Failed to recover from the collection snapshot. An error occurred processing field
  snapshot: File I/O error: Operation not permitted (os error 1)'
- 'Failed to recover from the collection snapshot. {"status":{"error":"Service internal
  error: Too many open files (os error 24)"}}'
- 'Load library failed: libgomp.so.1: cannot open shared object file: No such file
  or directory'
- Khóa API của bạn không khớp với loại. Vui lòng đăng ký khóa API dành cho nhà phát
  triển.
- Su clave API no coincide con el tipo. Solicite una clave de API para desarrolladores.
- A sua chave de API não corresponde ao tipo. Solicite uma chave de API de desenvolvedor.
- 'Hata oluştu: API anahtarınız türle eşleşmiyor. Lütfen bir Geliştirici API anahtarı
  için başvurun.'
- '404: 찾을 수 없음'
- '500: 내부 서버 오류'
- '400: 잘못된 요청'
- '404: 엔드포인트 URL이 잘못되었습니다.'
- '500: 모델을 찾을 수 없습니다.'
- '404: Không tìm thấy'
- '500: Lỗi máy chủ nội bộ'
- '400: Yêu cầu không hợp lệ'
- '404: No se ha encontrado'
- '500: Error interno del servidor'
- '400: Mala petición'
- '404: Não encontrado'
- '500: Erro interno do servidor'
- '400: Mau pedido'
- '404: Bulunamadı - Uç nokta URL''si geçersiz - Lütfen uç nokta URL''sini kontrol
  edin'
- '500: Dahili Sunucu Hatası - Model bulunamadı - Lütfen model adını kontrol edin.'
- '400: Kötü istek'
auth_info:
  mentioned_objects: []
client:
  base_url: https://node_id.gaia.domains/v1
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Content-Type: application/json
source_metadata: null
