resources:
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
- name: recipes
  endpoint:
    path: /api/recipes
    method: GET
- name: scenarios
  endpoint:
    path: /api/scenarios
    method: GET
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: groups
  endpoint:
    path: /api/groups
    method: GET
- name: connections
  endpoint:
    path: /api/connections
    method: GET
- name: plugins
  endpoint:
    path: /api/plugins
    method: GET
- name: clusters
  endpoint:
    path: /api/clusters
    method: GET
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
- name: recipes
  endpoint:
    path: /api/recipes
    method: GET
- name: scenarios
  endpoint:
    path: /api/scenarios
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: groups
  endpoint:
    path: /api/groups
    method: GET
- name: connections
  endpoint:
    path: /api/connections
    method: GET
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
- name: datasets
  endpoint:
    method: GET
- name: projects
  endpoint:
    method: GET
- name: recipes
  endpoint:
    method: GET
- name: scenarios
  endpoint:
    method: GET
- name: users
  endpoint:
    method: GET
- name: groups
  endpoint:
    method: GET
- name: connections
  endpoint:
    method: GET
- name: plugins
  endpoint:
    method: GET
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
- name: scenarios
  endpoint:
    path: /api/scenarios
    method: GET
- name: recipes
  endpoint:
    path: /api/recipes
    method: GET
- name: datasets
  endpoint:
    path: /concepts-and-examples/datasets
- name: projects
  endpoint:
    path: /concepts-and-examples/projects
- name: scenarios
  endpoint:
    path: /concepts-and-examples/scenarios
- name: recipes
  endpoint:
    path: /concepts-and-examples/recipes
- name: managed_folders
  endpoint:
    path: /concepts-and-examples/managed-folders
- name: jobs
  endpoint:
    path: /concepts-and-examples/jobs
- name: users_groups
  endpoint:
    path: /concepts-and-examples/users-groups
- name: connections
  endpoint:
    path: /concepts-and-examples/connections
- name: code_envs
  endpoint:
    path: /concepts-and-examples/code-envs
- name: plugins
  endpoint:
    path: /concepts-and-examples/plugins
- name: managed_folders
  endpoint:
    path: /public/api/projects/{project_key}/managedfolders
    method: GET
- name: pyspark_recipes
  endpoint:
    path: /latest/concepts-and-examples/pyspark-recipes
    method: GET
- name: datasets
  endpoint:
    path: /public/api/datasets
    method: GET
    data_selector: datasets
- name: projects
  endpoint:
    path: /public/api/projects
    method: GET
    data_selector: projects
- name: recipes
  endpoint:
    path: /public/api/recipes
    method: GET
    data_selector: recipes
- name: scenarios
  endpoint:
    path: /public/api/scenarios
    method: GET
    data_selector: scenarios
- name: projects
  endpoint:
    path: /public/api/projects
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: project_keys
  endpoint:
    method: GET
- name: projects
  endpoint:
    path: /dip/publicapi/projects
    method: GET
- name: project_keys
  endpoint:
    path: /api/projects
    method: GET
    data_selector: project_keys
- name: projects
  endpoint:
    method: GET
- name: project
  endpoint:
    method: GET
- name: datasets
  endpoint:
    method: GET
- name: projects
  endpoint:
    method: GET
- name: projects
  endpoint:
    path: /public/api/projects
    method: GET
    data_selector: projects
- name: projects
  endpoint:
    method: GET
- name: datasets
  endpoint:
    method: GET
- name: managed_folders
  endpoint:
    method: GET
- name: projects
  endpoint:
    method: GET
- name: zones
  endpoint:
    method: GET
- name: recipes
  endpoint:
    method: GET
- name: flows
  endpoint:
    method: GET
- name: projects
  endpoint:
    method: GET
- name: datasets
  endpoint:
    method: GET
- name: recipes
  endpoint:
    method: GET
- name: scenarios
  endpoint:
    method: GET
- name: managed_folders
  endpoint:
    method: GET
- name: jobs
  endpoint:
    method: GET
- name: users
  endpoint:
    method: GET
- name: groups
  endpoint:
    method: GET
- name: connections
  endpoint:
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: recipes
  endpoint:
    path: /recipes
    method: GET
- name: managed_folders
  endpoint:
    path: /managed-folders
    method: GET
- name: jobs
  endpoint:
    path: /jobs
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: connections
  endpoint:
    path: /connections
    method: GET
- name: code_envs
  endpoint:
    path: /code-envs
    method: GET
- name: datasets
  endpoint:
    path: /api-reference/python/datasets
    method: GET
- name: managed_folders
  endpoint:
    path: /api-reference/python/managed-folders
    method: GET
- name: projects
  endpoint:
    path: /api-reference/python/projects
    method: GET
- name: recipes
  endpoint:
    path: /api-reference/python/recipes
    method: GET
- name: scenarios
  endpoint:
    path: /api-reference/python/scenarios
    method: GET
- name: flow
  endpoint:
    path: /api-reference/python/flow
    method: GET
- name: llm_mesh
  endpoint:
    path: /api-reference/python/llm-mesh
    method: GET
- name: agents
  endpoint:
    path: /api-reference/python/agents
    method: GET
- name: ml
  endpoint:
    path: /api-reference/python/ml
    method: GET
- name: webapps
  endpoint:
    path: /api-reference/python/webapps
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: datasets
  endpoint:
    path: /projects/{project_key}/datasets
    method: GET
- name: recipes
  endpoint:
    path: /projects/{project_key}/recipes
    method: GET
- name: scenarios
  endpoint:
    path: /projects/{project_key}/scenarios
    method: GET
- name: managed_folders
  endpoint:
    path: /projects/{project_key}/managed-folders
    method: GET
- name: jobs
  endpoint:
    path: /projects/{project_key}/jobs
    method: GET
- name: users
  endpoint:
    path: /admin/users
    method: GET
- name: groups
  endpoint:
    path: /admin/groups
    method: GET
- name: connections
  endpoint:
    path: /admin/connections
    method: GET
- name: code_envs
  endpoint:
    path: /admin/code-envs
    method: GET
- name: plugins
  endpoint:
    path: /admin/plugins
    method: GET
- name: clusters
  endpoint:
    path: /admin/clusters
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: datasets
  endpoint:
    path: /projects/{project_key}/datasets
    method: GET
- name: recipes
  endpoint:
    path: /projects/{project_key}/recipes
    method: GET
- name: scenarios
  endpoint:
    path: /projects/{project_key}/scenarios
    method: GET
- name: jobs
  endpoint:
    path: /projects/{project_key}/jobs
    method: GET
- name: managed_folders
  endpoint:
    path: /projects/{project_key}/managedfolders
    method: GET
- name: models
  endpoint:
    path: /projects/{project_key}/savedmodels
    method: GET
- name: model_evaluation_stores
  endpoint:
    path: /projects/{project_key}/modelevaluationstores
    method: GET
- name: webapps
  endpoint:
    path: /projects/{project_key}/webapps
    method: GET
- name: code_studios
  endpoint:
    path: /projects/{project_key}/codestudios
    method: GET
- name: streaming_endpoints
  endpoint:
    path: /projects/{project_key}/streamingendpoints
    method: GET
- name: datasets
  endpoint:
    method: GET
- name: recipes
  endpoint:
    method: GET
- name: projects
  endpoint:
    method: GET
- name: datasets
  endpoint:
    method: GET
- name: recipes
  endpoint:
    method: GET
- name: flow_zones
  endpoint:
    method: GET
- name: recipes
  endpoint:
    method: GET
- name: recipes
  endpoint:
    path: /api/projects/{project_key}/recipes
    method: GET
    data_selector: recipes
- name: recipes
  endpoint:
    path: /projects/{project_key}/recipes
    method: GET
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
- name: recipes
  endpoint:
    path: /api/recipes
    method: GET
- name: scenarios
  endpoint:
    path: /api/scenarios
    method: GET
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
- name: agents
  endpoint:
    path: /api/agents
    method: GET
- name: agents
  endpoint:
    method: GET
    data_selector: llm_list
- name: llm_completion
  endpoint:
    method: POST
    data_selector: completion
- name: knowledge_bank
  endpoint:
    method: GET
    data_selector: retriever
- name: statistics_worksheets
  endpoint:
    path: /dip/publicapi/projects/{project_key}/statistics/worksheets
    method: GET
- name: experiments
  endpoint:
    method: GET
- name: tool_calls
  endpoint:
    path: /llm-mesh/tool-calls
    method: POST
- name: completion
  endpoint:
    method: POST
- name: embeddings
  endpoint:
    method: POST
- name: tool_calls
  endpoint:
    method: POST
- name: llms
  endpoint:
    method: GET
- name: completion
  endpoint:
    method: POST
- name: embedding
  endpoint:
    method: POST
- name: llm_mesh
  endpoint:
    path: /latest/concepts-and-examples/llm-mesh.html
    method: GET
- name: llms
  endpoint:
    method: GET
- name: completions
  endpoint:
    method: POST
- name: agents
  endpoint:
    path: /api/v1/agents
    method: GET
    data_selector: agents
- name: tools
  endpoint:
    path: /api/v1/tools
    method: GET
    data_selector: tools
- name: knowledge_banks
  endpoint:
    path: /api/v1/knowledge-banks
    method: GET
    data_selector: knowledge_banks
- name: llms
  endpoint:
    method: GET
    params:
      purpose: TEXT_EMBEDDING_EXTRACTION
- name: completion
  endpoint:
    method: POST
    params:
      temperature: 0.7
      topK: 10
      topP: 0.3
      maxOutputTokens: 2048
      presencePenalty: 0.6
      frequencyPenalty: 0.9
      logitBias: {}
      logProbs: true
      topLogProbs: 3
- name: embeddings
  endpoint:
    method: POST
- name: llm_mesh
  endpoint:
    path: /api/llm-mesh
    method: GET
- name: streaming_endpoints
  endpoint:
    path: /streaming-endpoints
    method: GET
- name: knowledge_banks
  endpoint:
    method: GET
- name: completion
  endpoint:
    method: POST
- name: completion
  endpoint:
    method: GET
- name: llms
  endpoint:
    method: GET
    params:
      purpose: TEXT_EMBEDDING_EXTRACTION
- name: completion
  endpoint:
    method: POST
- name: embeddings
  endpoint:
    method: POST
- name: knowledge_bank
  endpoint:
    method: GET
- name: multiply
  endpoint:
    method: POST
    data_selector: tool_calls
- name: llm_mesh
  endpoint:
    path: /api/llm-mesh
    method: GET
- name: llm_mesh
  endpoint:
    path: /latest/concepts-and-examples/
    method: GET
- name: llm_mesh
  endpoint:
    path: /api/v1/llm-mesh
    method: GET
    data_selector: records
- name: completion
  endpoint:
    method: POST
- name: tool_calls
  endpoint:
    method: POST
- name: knowledge_banks
  endpoint:
    method: GET
- name: completion
  endpoint:
    method: POST
- name: tool_calls
  endpoint:
    method: POST
- name: knowledge_banks
  endpoint:
    method: GET
- name: multiply
  endpoint:
    method: POST
    params:
      a: integer
      b: integer
- name: llms
  endpoint:
    method: GET
    data_selector: llm_list
- name: completion
  endpoint:
    method: POST
    data_selector: resp
- name: embeddings
  endpoint:
    method: POST
    data_selector: emb_resp
- name: visual_ml
  endpoint:
    path: /dip/publicapi/projects/{project_key}/models/{model_id}
    method: GET
    data_selector: data
- name: saved_model
  endpoint:
    method: GET
- name: visual_machine_learning
  endpoint:
    path: /visual-machine-learning
    method: GET
- name: prediction_ml_task
  endpoint:
    method: POST
- name: trained_models
  endpoint:
    method: GET
- name: model_details
  endpoint:
    method: GET
- name: datasets
  endpoint:
    path: /public/api/projects/{project_key}/datasets
    method: GET
    data_selector: datasets
- name: projects
  endpoint:
    path: /public/api/projects
    method: GET
    data_selector: projects
- name: scenarios
  endpoint:
    path: /public/api/projects/{project_key}/scenarios
    method: GET
    data_selector: scenarios
- name: models
  endpoint:
    path: /public/api/projects/{project_key}/models
    method: GET
    data_selector: models
- name: prediction_ml_task
  endpoint:
    method: POST
    data_selector: ml_task
- name: clustering_ml_task
  endpoint:
    method: POST
    data_selector: ml_task
- name: trained_models
  endpoint:
    method: GET
    data_selector: models
- name: saved_model
  endpoint:
    method: GET
- name: ml_task
  endpoint:
    method: GET
- name: ml_task
  endpoint:
    method: GET
- name: trained_models
  endpoint:
    method: GET
- name: saved_model
  endpoint:
    method: GET
- name: visual_ml_models
  endpoint:
    path: /api/projects/{project_key}/models
    method: GET
    data_selector: models
- name: experiment_tracking
  endpoint:
    path: /api/projects/{project_key}/experiments
    method: GET
    data_selector: experiments
- name: model_evaluation_stores
  endpoint:
    path: /api/projects/{project_key}/model-evaluation-stores
    method: GET
    data_selector: stores
- name: saved_models
  endpoint:
    method: GET
- name: saved_model_versions
  endpoint:
    method: GET
- name: projects
  endpoint:
    path: /projects
    method: GET
- name: datasets
  endpoint:
    path: /projects/{project_key}/datasets
    method: GET
- name: ml_tasks
  endpoint:
    path: /projects/{project_key}/models/lab/{analysis_id}/mltasks/{mltask_id}
    method: GET
- name: trained_models
  endpoint:
    path: /projects/{project_key}/models/lab/{analysis_id}/mltasks/{mltask_id}/models
    method: GET
- name: saved_models
  endpoint:
    path: /projects/{project_key}/savedmodels
    method: GET
- name: datasets
  endpoint:
    path: /public/api/projects/{project_key}/datasets
    method: GET
    data_selector: datasets
- name: projects
  endpoint:
    path: /public/api/projects
    method: GET
    data_selector: projects
- name: models
  endpoint:
    path: /public/api/projects/{project_key}/savedmodels
    method: GET
    data_selector: models
- name: scenarios
  endpoint:
    path: /public/api/projects/{project_key}/scenarios
    method: GET
    data_selector: scenarios
- name: api_services
  endpoint:
    path: /dip/publicapi/api-deployer/services
    method: GET
    data_selector: services
- name: projects
  endpoint:
    path: /public/api/projects
    method: GET
    data_selector: projects
- name: deployments
  endpoint:
    path: /public/api/deployments
    method: GET
    data_selector: deployments
- name: save_data
  endpoint:
    method: POST
- name: save_figure
  endpoint:
    method: POST
- name: save_bokeh
  endpoint:
    method: POST
- name: save_plotly
  endpoint:
    method: POST
- name: save_ggplot
  endpoint:
    method: POST
- name: static_insights
  endpoint:
    path: /public/api/projects/{projectKey}/insights
    method: GET
    data_selector: insights
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
- name: jobs
  endpoint:
    method: GET
- name: articles
  endpoint:
    method: GET
- name: wikis
  endpoint:
    path: /public/api/projects/{projectKey}/wikis
    method: GET
- name: datasets
  endpoint:
    path: /public/api/projects/{projectKey}/datasets
    method: GET
- name: projects
  endpoint:
    path: /public/api/projects
    method: GET
- name: scenarios
  endpoint:
    path: /public/api/projects/{projectKey}/scenarios
    method: GET
- name: jobs
  endpoint:
    path: /public/api/projects/{projectKey}/jobs
    method: GET
- name: discussions
  endpoint:
    path: /public/api/projects/{projectKey}/discussions
    method: GET
- name: users
  endpoint:
    path: /public/api/admin/users
    method: GET
- name: groups
  endpoint:
    path: /public/api/admin/groups
    method: GET
- name: connections
  endpoint:
    path: /public/api/admin/connections
    method: GET
- name: datasets
  endpoint:
    path: /latest/concepts-and-examples/importing-tables
    method: GET
- name: sql_tables
  endpoint:
    method: POST
- name: hive_tables
  endpoint:
    method: POST
- name: auth_info
  endpoint:
    method: GET
- name: user
  endpoint:
    method: GET
- name: auth_info
  endpoint:
    method: GET
- name: discussions
  endpoint:
    path: /t5/Academy-Discussions/bd-p/academy
    method: GET
- name: discussions
  endpoint:
    method: GET
- name: discussion_replies
  endpoint:
    method: GET
- name: sql_queries
  endpoint:
    method: GET
- name: sql_queries
  endpoint:
    method: POST
- name: hive_queries
  endpoint:
    method: POST
- name: impala_queries
  endpoint:
    method: POST
- name: sql_queries
  endpoint:
    path: /api-reference/python/sql.html
    method: GET
- name: datasets
  endpoint:
    path: /api-reference/python/datasets.html
- name: managed_folders
  endpoint:
    path: /api-reference/python/managed-folders.html
- name: projects
  endpoint:
    path: /api-reference/python/projects.html
- name: recipes
  endpoint:
    path: /api-reference/python/recipes.html
- name: scenarios
  endpoint:
    path: /api-reference/python/scenarios.html
- name: llm_mesh
  endpoint:
    path: /api-reference/python/llm-mesh.html
- name: agents
  endpoint:
    path: /api-reference/python/agents.html
- name: machine_learning
  endpoint:
    path: /api-reference/python/ml.html
- name: experiment_tracking
  endpoint:
    path: /api-reference/python/experiment-tracking.html
- name: jobs
  endpoint:
    path: /api-reference/python/jobs.html
- name: users_groups
  endpoint:
    path: /api-reference/python/users-groups.html
- name: connections
  endpoint:
    path: /api-reference/python/connections.html
- name: plugins
  endpoint:
    path: /api-reference/python/plugins.html
- name: webapps
  endpoint:
    path: /api-reference/python/webapps.html
- name: dashboards
  endpoint:
    path: /api-reference/python/dashboards.html
- name: insights
  endpoint:
    path: /api-reference/python/insights.html
- name: sql_query
  endpoint:
    path: /dip/publicapi/projects/{project_key}/sql/queries
    method: POST
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
- name: datasets
  endpoint:
    path: /api/projects/{project_key}/datasets
    method: GET
    data_selector: datasets
- name: recipes
  endpoint:
    path: /api/projects/{project_key}/recipes
    method: GET
    data_selector: recipes
- name: scenarios
  endpoint:
    path: /api/projects/{project_key}/scenarios
    method: GET
    data_selector: scenarios
- name: models
  endpoint:
    path: /api/projects/{project_key}/models
    method: GET
    data_selector: models
- name: meanings
  endpoint:
    method: GET
- name: datasets
  endpoint:
    path: /public/api/v1/datasets
    method: GET
- name: projects
  endpoint:
    path: /public/api/v1/projects
    method: GET
- name: recipes
  endpoint:
    path: /public/api/v1/recipes
    method: GET
- name: scenarios
  endpoint:
    path: /public/api/v1/scenarios
    method: GET
- name: managed_folders
  endpoint:
    path: /public/api/v1/managed-folders
    method: GET
- name: datasets
  endpoint:
    path: /api-reference/python/datasets.html
    method: GET
- name: managed_folders
  endpoint:
    path: /api-reference/python/managed-folders.html
    method: GET
- name: projects
  endpoint:
    path: /api-reference/python/projects.html
    method: GET
- name: recipes
  endpoint:
    path: /api-reference/python/recipes.html
    method: GET
- name: scenarios
  endpoint:
    path: /api-reference/python/scenarios.html
    method: GET
- name: llm_mesh
  endpoint:
    path: /api-reference/python/llm-mesh.html
    method: GET
- name: agents
  endpoint:
    path: /api-reference/python/agents.html
    method: GET
- name: machine_learning
  endpoint:
    path: /api-reference/python/ml.html
    method: GET
- name: users_groups
  endpoint:
    path: /api-reference/python/users-groups.html
    method: GET
- name: connections
  endpoint:
    path: /api-reference/python/connections.html
    method: GET
- name: plugins
  endpoint:
    path: /api-reference/python/plugins.html
    method: GET
- name: webapps
  endpoint:
    path: /api-reference/python/webapps.html
    method: GET
- name: dashboards
  endpoint:
    path: /api-reference/python/dashboards.html
    method: GET
- name: insights
  endpoint:
    path: /api-reference/python/insights.html
    method: GET
- name: connections
  endpoint:
    method: GET
- name: connections
  endpoint:
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: users_and_groups
  endpoint:
    path: /latest/concepts-and-examples/users-groups.html
    method: GET
- name: users
  endpoint:
    method: GET
- name: users
  endpoint:
    method: GET
- name: groups
  endpoint:
    method: GET
- name: dss_groups
  endpoint:
    method: GET
- name: users_and_groups
  endpoint:
    path: /latest/concepts-and-examples/users-groups.html
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: groups
  endpoint:
    path: /groups
    method: GET
- name: users
  endpoint:
    method: GET
- name: user_settings
  endpoint:
    method: GET
- name: groups
  endpoint:
    method: GET
- name: users
  endpoint:
    method: GET
- name: scenario
  endpoint:
    method: Python
- name: scenarios
  endpoint:
    path: /scenarios
    method: GET
- name: plugins
  endpoint:
    path: /plugins
    method: GET
- name: code_envs
  endpoint:
    method: GET
- name: code_envs
  endpoint:
    path: /code-envs
    method: GET
- name: project_folder
  endpoint:
    method: GET
- name: root_project_folder
  endpoint:
    method: GET
- name: child_folders
  endpoint:
    method: GET
- name: projects
  endpoint:
    method: GET
- name: feature_groups
  endpoint:
    method: GET
- name: feature_store
  endpoint:
    path: /api/feature-store
    method: GET
    data_selector: data
- name: applications
  endpoint:
    path: /public/api/v1/applications
    method: GET
    data_selector: applications
- name: streaming_endpoints
  endpoint:
    path: /latest/concepts-and-examples/streaming-endpoints.html
    method: GET
- name: datasets
  endpoint:
    path: /api-reference/python/datasets.html
- name: managed_folders
  endpoint:
    path: /api-reference/python/managed-folders.html
- name: projects
  endpoint:
    path: /api-reference/python/projects.html
- name: recipes
  endpoint:
    path: /api-reference/python/recipes.html
- name: scenarios
  endpoint:
    path: /api-reference/python/scenarios.html
- name: llm_mesh
  endpoint:
    path: /api-reference/python/llm-mesh.html
- name: agents
  endpoint:
    path: /api-reference/python/agents.html
- name: machine_learning
  endpoint:
    path: /api-reference/python/ml.html
- name: streaming_endpoints
  endpoint:
    path: /api-reference/python/streaming-endpoints.html
- name: webapps
  endpoint:
    path: /api-reference/python/webapps.html
- name: dashboards
  endpoint:
    path: /api-reference/python/dashboards.html
- name: example_resource
  endpoint:
    path: /api/v1/resource
    method: GET
    data_selector: data
    params: {}
- name: metrics
  endpoint:
    path: /api/metrics
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: model_evaluation_stores
  endpoint:
    path: /services/data/vXX.X/sobjects/ModelEvaluationStore
    method: GET
    data_selector: records
    params: {}
- name: model_evaluation_store
  endpoint:
    path: /api/model_evaluation_stores
    method: GET
    data_selector: stores
- name: evaluation_recipe
  endpoint:
    path: /api/evaluation_recipes
    method: POST
    data_selector: recipes
- name: model_evaluation_store
  endpoint:
    path: /api/model_evaluation_stores
    method: GET
    data_selector: model_evaluation_stores
    params: {}
- name: model_evaluation
  endpoint:
    path: /api/model_evaluations
    method: GET
    data_selector: model_evaluations
    params: {}
- name: Cluster
  endpoint:
    path: /clusters
    method: GET
    data_selector: status
- name: code_studio_template
  endpoint:
    path: /code_studio_templates
    method: GET
    data_selector: templates
    params: {}
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: DSSWorkspace
- name: workspaces
  endpoint:
    path: /workspaces
    method: GET
    data_selector: workspaces
- name: workspace
  endpoint:
    path: /workspaces
    method: GET
    data_selector: workspaces
- name: data_collection
  endpoint:
    path: /data/collections
    method: GET
    data_selector: DSSDataCollection
    params: {}
- name: data_collections
  endpoint:
    path: /list_data_collections
    method: GET
    data_selector: data_collections
    params:
      as_type: objects
- name: data_collection
  endpoint:
    path: /data_collection
    method: GET
    data_selector: objects
- name: list_data_collections
  endpoint:
    path: /api/data-collections
    method: GET
    data_selector: data_collections
    params: {}
- name: get_data_collection
  endpoint:
    path: /api/data-collections/{id}
    method: GET
    data_selector: data_collection
    params: {}
- name: create_data_collection
  endpoint:
    path: /api/data-collections
    method: POST
    data_selector: data_collection
    params: {}
- name: data_collection
  endpoint:
    path: /data_collection
    method: GET
    data_selector: data_collection
    params: {}
- name: data_collection_objects
  endpoint:
    path: /data_collection_objects
    method: GET
    data_selector: data_collection_objects
    params: {}
- name: dataset
  endpoint:
    path: /dataset
    method: POST
    data_selector: dataset
    params: {}
- name: data_quality_rules
  endpoint:
    path: /data_quality/rules
    method: GET
    data_selector: rules
    params: {}
- name: data_quality_rules
  endpoint:
    path: /data-quality/rules
    method: GET
    data_selector: rules
    params: {}
- name: data_quality_rule
  endpoint:
    path: /api/data_quality/rules
    method: GET
    data_selector: rules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: project
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
    params: {}
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: model_evaluation
  endpoint:
    path: /model-evaluation
    method: GET
    data_selector: evaluation
    params: {}
- name: ldap_settings
  endpoint:
    path: /ldap-settings
    method: GET
    data_selector: settings
    params: {}
- name: library
  endpoint:
    path: /library
    method: GET
    data_selector: library_data
    params: {}
- name: licensing_status
  endpoint:
    path: /licensing-status
    method: GET
    data_selector: status
    params: {}
- name: light_status
  endpoint:
    path: /light
    method: GET
    data_selector: status
    params: {}
- name: get_required_packages
  endpoint:
    path: /get_required_packages
    method: GET
    data_selector: records
    params: {}
- name: get_resampling_params
  endpoint:
    path: /get_resampling_params
    method: GET
    data_selector: records
    params: {}
- name: status
  endpoint:
    path: /get_status
    method: GET
    data_selector: status
    params: {}
- name: statistics
  endpoint:
    path: /get_statistics_worksheet
    method: GET
    data_selector: statistics
    params: {}
- name: MailMessagingChannelCreator
  endpoint:
    path: /api-reference/python/messaging-channels.html#dataikuapi.dss.messaging_channel.MailMessagingChannelCreator
    method: GET
    data_selector: records
- name: ManagedApiEndpointActivityMetrics
  endpoint:
    path: /api-reference/python/unified-monitoring.html#dataikuapi.dss.unifiedmonitoring.ManagedApiEndpointActivityMetrics
    method: GET
    data_selector: records
- name: DSSConnectionListItem
  endpoint:
    path: /api/connections
    method: GET
    data_selector: connections
    params: {}
- name: DSSAgentListItem
  endpoint:
    path: /api/agents
    method: GET
    data_selector: agents
    params: {}
- name: ml_tasks
  endpoint:
    path: /api/ml/tasks
    method: GET
    data_selector: tasks
    params: {}
- name: TablesImportDefinition
  endpoint:
    path: /api-reference/python/tables-import
    method: GET
    data_selector: records
    params: {}
- name: TablesPreparedImport
  endpoint:
    path: /api-reference/python/tables-import
    method: GET
    data_selector: records
    params: {}
- name: univariate_drift_result
  endpoint:
    path: /api/reference/python/model-evaluation-stores.html#dataikuapi.dss.modelevaluationstore.DataDriftResult.univariate_drift_result
    method: GET
    data_selector: records
    params: {}
- name: UnivariateDriftResult
  endpoint:
    path: /api/reference/python/model-evaluation-stores.html#dataikuapi.dss.modelevaluationstore.UnivariateDriftResult
    method: GET
    data_selector: records
    params: {}
- name: job_waiter
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: records
    params: {}
- name: scenario_run
  endpoint:
    path: /api/scenarios
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Python client is the recommended way to programmatically interact with Dataiku
- SSL certificate verification can be disabled using insecure_tls=True parameter
- May need to add root authority to local trust store for SSL verification
- Uses builder pattern for recipe creation with new_recipe() method
- Recipe settings must be modified after creation and saved separately
- Schema updates may need to be applied after recipe configuration changes
- Flow zones can be created and items can be moved between zones programmatically
- Dataiku Agents provide AI-powered automation capabilities
- Requires proper authentication setup with API keys
- Various agent types available including Visual Agents and Code Agents
- Requires Advanced LLM Mesh add-on for Code Agents
- Supports streaming and asynchronous streaming
- Integrates with LangChain and LangGraph
- Uses knowledge banks for retrieval-augmented generation
- Multimodal input supported on OpenAI, Bedrock Anthropic Claude, Azure OpenAI, and
  Gemini Pro
- Tool calls supported on OpenAI, Azure OpenAI, Azure LLM, Anthropic Claude, Anthropic
  Claude on AWS Bedrock, and MistralAI
- Response streaming available with DSSLLMStreamedCompletionChunk and DSSLLMStreamedCompletionFooter
- Tool parameters defined as JSON Schema objects
- Supports completion and embedding queries to all LLMs supported by the LLM Mesh
- Supports streaming responses from LLMs that support it
- Supports multimodal inputs (image and text)
- Supports LangChain code integration
- Supports semantic search and knowledge banks interaction
- Can create fine-tuned saved models
- LLM Mesh is part of Dataiku's developer guide documentation
- Supports agentic applications and multi-agent workflows
- Integrates with Langchain for RAG applications
- Provides tools for JSON parsing and output
- Supports various LLM-based tasks including text classification and embeddings
- The LLM Mesh is the common backbone for Enterprise Generative AI Applications
- LLM IDs follow the pattern 'openai:myopenai:gpt-4o'
- Supports multi-turn conversations with system, user, and assistant roles
- Supports streaming responses from compatible LLMs
- LLM Mesh provides agentic applications with tools and agents
- Supports multiple LLM connections including OpenAI API compatibility
- Knowledge Banks can be used for RAG applications
- Supports multimodal input on OpenAI, Bedrock Anthropic Claude, Azure OpenAI, and
  Gemini Pro models
- Response streaming available for supported models
- Tool calls can be parsed and executed with multiply function handling
- Response streaming includes either complete tool calls or partial tool calls
- Tool usage can be constrained with toolChoice settings
- LLM handles can be transformed into langchain-compatible objects
- 'Multimodal input is supported on a subset of LLMs: OpenAI, Bedrock Anthropic Claude,
  Azure OpenAI, Gemini Pro'
- 'Tool calls are supported on compatible completion models: OpenAI, Azure OpenAI,
  Azure LLM, Anthropic Claude, Anthropic Claude on AWS Bedrock, MistralAI'
- Response streaming is available for supported models
- Tool parameters are defined as JSON Schema objects
- Hybrid search combines similarity search and keyword search
- Only supported by Azure AI Search and Elasticsearch
- Not compatible with diversity option
- Azure AI Search offers advanced reranking capabilities
- Supports streaming of responses through LangChain adapters
- Knowledge banks can be exposed as Langchain vector stores
- Metadata schema must be set in knowledge bank settings to leverage metadata during
  retrieval
- Supports multimodal retrieval with image folder configuration
- Response streaming with tool calls supported
- Tool calls can include either complete or partial tool calls
- LangChain integration available for streaming responses and batching
- Knowledge banks can be used as LangChain vector stores
- LLM Mesh provides programmatic access to language models
- Supports integration with Langchain and other frameworks
- Includes multimodal capabilities for images and text
- Supports agent-based workflows and tool integration
- LLM responses which include tool calls can leverage streaming
- Tool usage can be constrained in the completion settings
- Core handles expose KBs as a Langchain-native vector store
- Hybrid Search combines both similarity search and keyword search
- Only supported by Azure AI Search and Elasticsearch for hybrid search
- Not compatible with the diversity option for hybrid search
- Tool calls can be parsed and executed with custom functions
- Response streaming is supported for both regular completions and tool calls
- LangChain integration available for streaming, async queries, and batching
- Knowledge Banks support similarity search and hybrid search for Azure AI Search
  and Elasticsearch
- Core handles expose KBs as LangChain-native vector stores
- LLM responses which include tool calls can also leverage streaming
- Depending on the LLM, response chunks may include either complete tool calls or
  partial tool calls
- Fine-tuning a local LLM requires significant computational resources (GPU)
- Supports multimodal input on OpenAI, Bedrock Anthropic Claude, Azure OpenAI, and
  Gemini Pro
- Response streaming is available for compatible models
- Completion settings include temperature, topK, topP, maxOutputTokens, stopSequences,
  presencePenalty, frequencyPenalty, logitBias, logProbs, and topLogProbs
- Train models as part of a visual analysis
- A visual analysis is made of a preparation script and one or several ML Tasks
- A ML Task is either a prediction of a single target variable, or a clustering
- Once deployed to the Flow, the Saved model can be retrained by the usual build mechanism
  of DSS
- ML Task is an individual section in which you train models for prediction or clustering
- Visual analysis is made of a preparation script and one or several ML Tasks
- Once deployed to Flow, Saved model can be retrained by usual build mechanism
- ML backend types include PY_MEMORY
- Default algorithms include Logistic regression and Random forest
- Uses Python client for automating machine learning model lifecycle
- Requires ML Task creation before training models
- Visual analysis contains preparation script and ML Tasks
- ML Task can be prediction or clustering
- Models can be deployed to Flow and retrained
- Visual Machine Learning requires proper authentication with Dataiku instance
- Project key parameter is required for most endpoints
- Supports experiment tracking and model evaluation workflows
- Assumes that for your metric, 'higher is better'
- Cannot be used together with containerized execution
- Not compatible with Partitioned models
- Assumes that for your metric, "higher is better"
- Models can be deployed to Flow as Saved models
- Hyperparameter search supports GRID, RANDOM, or BAYESIAN strategies
- Validation modes include KFOLD, SHUFFLE, and CUSTOM
- Dataiku provides both REST API and Python client libraries for programmatic access
- Visual Machine Learning capabilities available through API for model management
- Supports various authentication methods including API keys and OAuth
- Fleet Manager and Govern APIs available for enterprise deployments
- Static insights are data files created by code that can be rendered on the dashboard
- Supports embedding charts from Plot.ly, Matplotlib, Bokeh, and Ggplot
- Can embed any kind of content including images and HTML
- Dataiku provides comprehensive APIs for data engineering, machine learning, and
  administration tasks
- Support for various compute engines including Spark, Snowpark, and Databricks Connect
- API provides ability to identify user from HTTP headers for webapp authentication
- Can retrieve information about user or API key currently running the code
- Supports impersonation for administrators to perform API calls on behalf of other
  users
- Can be used from recipes, notebooks, plugin recipes, or external code
- Can be used from code running within a recipe or notebook to know who is running
  the code
- Can be used from code running with a plugin recipe to know who is running the code
- Can be used from code running outside of DSS to retrieve details of the current
  API key
- Provides ability to identify user from HTTP headers for webapp backends
- 'Three capabilities for SQL queries: dataiku package executors, partial recipes,
  and dataikuapi client'
- dataiku package variants recommended over dataikuapi
- Can execute queries on any SQL connection including Hive and Impala
- Results can be returned as pandas dataframe or iterator
- Supports Python API packages for programmatic access
- Project libraries can be used for custom functions and utilities
- Authentication requires API key setup in Dataiku instance
- Various API endpoints available for different Dataiku objects
- Operations are restricted to API keys with the admin rights flag
- Supports filesystem connections mass change operations
- Connection definitions can be retrieved, modified and set back
- This API can only be used within a scenario in order to run steps and report on
  progress of the current scenario
- Functions can be used both for Execute Python code steps in steps-based scenarios,
  and for full Python scenarios
- There is no explicit timeout functionality for a Build step within a Scenario
- Snowpark integration within Dataiku for data processing and analysis
- Requires setup of connected app in Dataiku
- OAuth2 is required for access
- Authentication is required to access the API.
- Both classes have fairly similar capabilities
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Model Evaluation Stores cannot be used with clustering models, ensembling models,
  or partitioned models.
- Uses OAuth2 with refresh token — requires setup of connected app in Dataiku
- Compatible prediction models have to be Python models.
- You can interact with the Workspaces through the API.
- Requires setup of connected app in dataiku
- Some objects may return nulls in deeply nested fields
- Some endpoints may require additional permissions to access.
- Uses OAuth2 with refresh token — requires setup of connected app in dataiku
- Some endpoints may have rate limits
errors:
- '401 Unauthorized: Check credentials'
- '404 Not Found: Verify endpoint path'
- '401 Unauthorized: Check your credentials and token.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request parameters and body.'
- '404 Not Found: Ensure the resource exists and the path is correct.'
auth_info:
  mentioned_objects:
  - DSSClient
  - GovernClient
  - FMClient
  - APIKey
  - AuthInfo
  - dataiku.Folder
  - dataikuapi.dss.managedfolder.DSSManagedFolder
  - dataikuapi.dss.managedfolder.DSSManagedFolderSettings
  - AuthProvider
  - DataikuAPIClient
  - DSSProject
  - DSSProjectGit
  - dataikuapi.dss.project.DSSProject
  - dataikuapi.dss.project.DSSProjectGit
  - authIdentifier
  - Project
  - API client
  - Authentication information
  - DSSRecipe
  - DSSRecipeCreator
  - DSSDataset
  - PythonRecipeCreator
  - DSSRecipeListItem
  - BaseLLM
  - AgentExecutor
  - OpenAI
  - ChatPromptTemplate
  - LangchainToDKUTracer
  - DataikuClient
  - DSSLLM
  - DKUChatModel
  - DSSMLflowExtension
  - DSSLLMListItem
  - DSSLLMStreamedCompletionChunk
  - DSSLLMStreamedCompletionFooter
  - DSSKnowledgeBankListItem
  - KnowledgeBank
  - DKULLM
  - DKUChatLLM
  - VectorStoreRetriever
  - ManagedFolderDocumentRef
  - LLM Mesh
  - Dataiku API
  - Authentication
  - DSSLLMCompletionQuery
  - DSSLLMCompletionsQuery
  - DSSLLMCompletionsQuerySingleQuery
  - DSSLLMCompletionQueryMultipartMessage
  - DSSLLMCompletionResponse
  - DSSLLMEmbeddingsQuery
  - DSSLLMEmbeddingsResponse
  - DSSKnowledgeBank
  - DKUEmbeddings
  - DSSSavedModel
  - DSSSavedModelSettings
  - DSSMLTask
  - ML Task
  - visual analysis
  - Saved model
  - MLTask
  - SavedModel
  - Model
  - DSS API client
  - DSSModel
  - DSSExperiment
  - dataikuapi
  - APIClient
  - DSSJob
  - DSSJobWaiter
  - JobDefinitionBuilder
  - DSSWiki
  - DSSWikiSettings
  - DSSWikiArticle
  - DSSWikiArticleData
  - TablesImportDefinition
  - TablesPreparedImport
  - OauthToken
  - NamedCredential
  - get_auth_info
  - get_auth_info_from_browser_headers
  - api_client
  - auth_info
  - get_user
  - get_client_as
  - API key
  - DSSObjectDiscussions
  - DSSDiscussion
  - DSSDiscussionReply
  - SQLExecutor2
  - HiveExecutor
  - ImpalaExecutor
  - DSSMeaning
  - DSSConnection
  - DSSConnectionInfo
  - DSSConnectionListItem
  - DSSConnectionSettings
  - DSSConnectionDetailsReadability
  - DSSUser
  - DSSUserSettings
  - DSSOwnUser
  - DSSOwnUserSettings
  - DSSUserActivity
  - DSSGroup
  - DSSAuthorizationMatrix
  - Scenario
  - BuildFlowItemsStepDefHelper
  - DSSFuture
  - DSSPlugin
  - DSSPluginSettings
  - DSSPluginParameterSet
  - DSSPluginUsage
  - DSSMissingType
  - DSSPluginUsages
  - DSSMacro
  - DSSCodeEnv
  - DSSDesignCodeEnvSettings
  - DSSAutomationCodeEnvSettings
  - DSSAutomationCodeEnvVersionSettings
  - DSSProjectFolder
  - DSSProjectFolderSettings
  - DSSFeatureStore
  - DSSFeatureGroupListItem
  - DSSDatasetSettings
  - DSSApp
  - DSSAppListItem
  - DSSAppInstance
  - DSSAppManifest
  - TemporaryDSSAppInstance
  - dataiku.dbconnect.DkuDBConnect
  - OAuthToken
  - ModelEvaluationStore
  - ModelEvaluation
  - DataDriftParams
  - PerColumnDriftParamBuilder
  - DSSGeneralSettings
  - DSSUserImpersonationRule
  - DSSGroupImpersonationRule
  - DSSInstanceVariables
  - DSSJupyterNotebook
  - DSSJupyterNotebookListItem
  - DSSNotebookSession
  - DSSNotebookContent
  - DSSSQLNotebook
  - DSSSQLNotebookListItem
  - DSSNotebookHistory
  - DSSNotebookQueryRunListItem
  - DSSNotebook
  - DSSGlobalApiKey
  - DSSGlobalApiKeyListItem
  - DSSPersonalApiKey
  - DSSPersonalApiKeyListItem
  - DSSCluster
  - DSSClusterSettings
  - DSSClusterStatus
  - DSSCodeStudioObject
  - DSSCodeStudioObjectListItem
  - DSSCodeStudioObjectSettings
  - DSSCodeStudioObjectStatus
  - DSSCodeStudioObjectConflicts
  - DSSCodeStudioTemplateListItem
  - DSSCodeStudioTemplate
  - DSSCodeStudioTemplateSettings
  - DSSWorkspace
  - DSSWorkspaceObject
  - DSSWorkspaceSettings
  - DSSWorkspacePermissionItem
  - DSSDataCollection
  - DSSDataCollectionListItem
  - DSSDataCollectionSettings
  - DSSDataCollectionPermissionItem
  - DSSDataCollectionItem
  - DSSDataQualityRuleSet
  - DSSDataQualityRule
  - DSSDataQualityRuleResult
  - DSSWebApp
  - DSSWebAppBackendState
  - DSSWebAppSettings
  - DSSWebAppListItem
  - DSSComputedColumn
  - DSSContinuousActivity
  - DSSDashboard
  - DSSDashboardListItem
  - DSSDashboardSettings
  - DSSDatasetInfo
  - DSSDatasetListItem
  - DSSDatasetSelectionBuilder
  - DSSFilter
  - DSSFilterBuilder
  - DSSFilterOperator
  - DSSFlowZone
  - DSSFlowZoneSettings
  - DSSGlobalUsageSummary
  - DSSInfoMessage
  - DSSInfoMessages
  - DSSInsight
  - DSSInsightListItem
  - DSSInsightSettings
  - DSSKnowledgeBankSettings
  - DSSLibrary
  - DSSLibraryFile
  - DSSLibraryFolder
  - DSSLibraryItem
  - DSSLLMCompletionsResponse
  - DSSLLMImageGenerationQuery
  - DSSLLMImageGenerationResponse
  - DSSMailMessagingChannel
  - DSSManagedDatasetCreationHelper
  - DSSManagedFolder
  - DSSManagedFolderSettings
  - DSSManagedStreamingEndpointCreationHelper
  - DSSMessagingChannel
  - DSSMessagingChannelCreator
  - DSSMessagingChannelListItem
  - DSSMessagingChannelSettings
  - DSSMLTaskSettings
  - DSSModelEvaluation
  - DSSModelEvaluationFullInfo
  - DSSModelEvaluationStore
  - DSSModelEvaluationStore.LabelDefinition
  - DSSModelEvaluationStore.MetricDefinition
  - DSSModelEvaluationStoreSettings
  - DSSPluginPreset
  - DSSPluginProjectParameterSet
  - DSSPluginProjectSettings
  - DSSPredictionMLTaskSettings
  - DSSProjectDeployer
  - DSSProjectFlow
  - DSSStreamingEndpoint
  - KafkaStreamingEndpointSettings
  - kernel_spec
  - key
  - keys
  - FMAWSCloudAccountCreator
  - FMAzureCloudAccountCreator
  - FMGCPCloudAccountCreator
  - SamplingRecipeCreator
  - SamplingRecipeSettings
  - VectorStoreWriter
  - DSSAgentSettings
  - DSSAgentToolSettings
  - DSSVectorStoreSearchAgentToolSettings
  - DSSAPIDeployerDeploymentSettings
  - DSSAPIDeployerInfraSettings
  - DSSAPIDeployerServiceSettings
  - DSSAPIServiceSettings
  - DSSProjectDeployerDeploymentSettings
  - DSSProjectDeployerInfraSettings
  - DSSProjectDeployerProjectSettings
  - DSSRecipeSettings
  - DSSRetrievalAugmentedLLMSettings
  - MLFlowVersionSettings
  - DSSScenarioSettings
  - PythonScriptBasedScenarioSettings
  - DSSStatisticsWorksheetSettings
  - DSSStreamingEndpointSettings
  - FMCloudAccount
  - FMInstance
  - FMInstanceSettingsTemplate
  - FMCloudCredentials
  - FMCloudTags
  - FMVirtualNetwork
  - GovernGeneralSettings
  - GovernOwnUserSettings
  - GovernUserSettings
  - GovernAdminBlueprintDefinition
  - GovernAdminBlueprintVersionDefinition
  - GovernAdminSignoffConfigurationDefinition
  - GovernAdminCustomPageDefinition
  - GovernAdminBlueprintPermissionsDefinition
  - GovernAdminBlueprintRoleAssignmentsDefinition
  - GovernAdminDefaultPermissionsDefinition
  - GovernAdminRoleDefinition
  - GovernArtifactDefinition
  - GovernArtifactSignoffApprovalDefinition
  - GovernArtifactSignoffFeedbackDefinition
  - GovernArtifactSignoffRecurrenceConfiguration
  - DSSScenario
  - DSSScenarioRunWaiter
client:
  base_url: https://developer.dataiku.com
source_metadata: null
